#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
148 2 149 1 269 1 119 2 297 3 286 3 198 1 85 1 368 1 274 1 377 1 357 2 258 1 
1 1 269 1 286 9 56 1 111 1 85 1 274 2 357 5 59 2 361 1 172 1 258 1 148 2 319 2 294 1 149 1 363 1 195 1 66 1 297 9 119 2 198 4 368 6 343 2 44 1 377 3 265 2 204 1 
1 1 269 1 286 9 56 1 111 1 85 1 274 2 357 5 59 2 361 1 172 1 258 1 148 2 319 2 294 1 149 1 363 1 195 1 66 1 297 9 119 2 198 4 368 6 343 2 44 1 377 3 265 2 204 1 
1 1 269 1 286 10 56 1 111 1 85 1 274 2 357 6 59 2 361 1 172 1 258 1 148 2 319 2 294 1 149 1 363 1 195 1 66 1 297 10 119 2 198 5 368 7 343 2 44 1 377 4 265 2 204 1 
1 1 269 1 286 7 56 1 85 1 274 2 357 4 59 2 361 1 172 1 258 1 148 2 319 1 294 1 149 1 363 1 195 1 66 1 297 7 119 2 198 3 368 4 343 2 44 1 377 2 265 2 204 1 
148 1 319 2 294 1 149 1 119 1 297 4 286 4 198 2 111 1 85 1 368 3 343 1 377 1 357 3 59 1 265 1 361 1 258 1 
148 1 149 1 195 1 119 1 297 2 286 2 83 1 85 1 44 1 274 1 357 1 59 1 305 1 265 1 156 1 258 1 
1 1 269 1 286 9 85 1 111 1 274 1 357 5 59 1 361 1 258 1 148 2 319 2 294 1 149 1 297 9 119 2 177 1 198 4 368 7 343 1 377 3 242 1 265 1 204 1 
1 1 269 1 286 9 85 1 111 1 274 1 357 5 59 1 361 1 258 1 148 2 319 2 294 1 149 1 297 9 119 2 177 1 198 4 368 7 343 1 377 3 242 1 265 1 204 1 
2 1 206 1 312 1 197 1 199 1 68 1 370 1 253 1 89 1 218 1 360 1 12 1 244 1 49 1 
74 1 
218 2 364 1 197 2 336 1 277 1 74 1 49 1 227 1 
108 1 217 1 196 1 364 1 197 5 239 1 227 1 126 1 209 1 375 2 218 5 166 1 263 1 130 1 336 2 74 1 49 2 236 2 337 2 
205 1 74 1 227 1 
329 2 102 1 74 1 
273 1 89 2 2 2 312 1 360 2 68 2 244 2 370 2 
347 1 310 1 0 1 182 1 224 2 2 2 311 1 312 1 140 2 162 1 164 1 273 1 34 1 89 2 354 1 90 1 192 2 193 1 146 1 360 3 13 1 14 1 15 1 98 1 194 1 298 1 300 1 68 3 125 1 370 2 201 2 372 1 303 1 23 1 304 1 306 2 244 2 
89 1 2 1 206 1 312 1 360 1 199 1 68 1 244 1 12 1 370 1 
318 1 2 1 197 1 41 1 68 1 199 1 86 1 227 1 356 1 355 1 218 1 360 1 74 1 135 1 
318 1 2 1 197 2 41 1 68 1 199 1 370 1 86 1 227 1 89 1 218 2 360 1 74 1 244 1 135 1 
96 1 218 1 197 1 336 1 49 1 
218 2 364 1 197 2 121 1 336 1 74 1 49 1 227 1 
218 1 197 1 336 1 
2 2 68 2 370 1 241 1 273 2 89 1 58 1 360 2 244 1 
42 1 228 1 183 1 
310 1 298 1 140 1 300 1 122 1 68 1 273 1 34 1 303 1 354 1 23 1 306 1 192 1 193 1 360 1 13 1 
2 5 68 5 323 2 370 4 334 1 241 1 273 1 89 4 355 1 378 1 11 1 360 5 244 1 157 1 
89 2 2 2 206 1 214 1 360 2 199 1 68 2 370 2 
273 1 205 1 
310 1 2 1 298 1 140 1 300 1 68 2 323 1 370 1 42 1 34 1 89 1 354 1 303 1 23 1 306 1 192 1 193 1 360 2 13 1 157 1 
273 1 89 3 2 3 360 3 68 3 244 1 323 1 370 3 
89 1 2 1 206 1 360 1 199 1 68 1 370 1 
241 1 89 1 58 1 2 1 360 1 199 1 68 1 244 1 370 1 
347 1 310 1 0 1 182 1 224 2 2 3 311 1 312 1 140 1 162 1 86 1 273 1 34 1 89 3 354 1 192 1 193 1 146 1 360 4 13 1 14 1 318 1 98 1 298 1 67 1 197 1 300 1 41 1 68 4 199 1 323 1 125 1 370 3 201 1 372 1 241 1 303 1 23 1 218 1 28 1 306 1 244 2 157 1 135 1 
273 1 89 1 355 1 2 2 378 1 360 2 68 2 323 1 370 1 
318 1 2 3 197 1 67 1 41 1 199 1 68 3 323 2 370 3 86 1 241 1 89 3 218 1 360 3 74 1 244 1 181 1 135 1 157 1 
2 2 68 2 323 1 370 2 241 1 42 1 228 1 89 2 360 2 244 1 
310 1 298 1 140 1 300 1 68 1 273 1 34 1 303 1 354 1 23 1 306 1 192 1 193 1 360 1 13 1 
310 1 298 1 140 1 68 1 273 1 34 1 189 1 303 1 354 1 23 1 306 1 192 1 360 1 77 1 13 1 
347 1 182 1 224 2 246 1 183 2 79 1 162 2 55 1 142 1 5 1 143 1 228 2 92 1 146 1 234 1 14 1 194 2 178 1 125 1 372 1 201 4 42 2 245 1 136 1 
318 1 89 1 2 1 360 1 214 1 199 1 68 1 370 1 
348 1 71 1 243 1 
348 2 71 2 289 1 369 1 147 1 50 1 
348 1 71 1 
348 1 71 1 
289 1 50 1 
289 1 50 1 
289 1 50 1 
175 1 348 1 71 1 
175 1 348 1 71 1 
175 1 348 1 71 1 
348 1 71 1 109 1 
348 1 71 1 109 1 
348 1 71 1 109 1 
139 1 348 1 2 2 327 1 160 1 332 1 273 1 89 2 171 1 360 2 17 1 197 1 238 1 151 1 68 2 370 2 301 1 342 1 103 1 218 1 71 1 48 1 29 1 243 1 
308 1 348 2 117 1 327 3 299 1 197 2 185 1 332 2 151 1 301 2 252 1 104 1 218 2 71 2 167 2 48 2 171 2 74 1 147 1 
16 1 229 2 59 2 83 1 343 1 
59 1 265 1 343 1 
59 1 265 1 83 1 
229 1 16 1 59 3 83 1 333 1 343 2 
229 1 16 1 190 1 59 2 83 1 343 1 
139 1 108 2 52 2 329 3 330 1 79 1 142 1 271 1 33 2 227 1 209 3 210 1 8 1 336 1 337 1 236 1 295 1 364 1 197 5 100 1 102 1 21 2 342 1 126 1 375 1 325 1 218 5 29 1 74 2 245 1 49 4 136 1 
108 6 52 6 329 9 287 1 79 3 288 1 142 3 271 2 33 6 227 1 209 8 8 3 336 6 236 2 337 2 96 5 338 1 295 2 176 1 197 9 364 1 366 1 100 1 102 3 152 1 342 4 126 1 375 2 218 9 25 5 130 1 74 5 245 3 49 7 136 3 
108 2 52 2 330 1 329 4 79 1 142 1 271 1 227 1 33 2 209 3 8 1 337 1 236 1 295 1 197 3 102 2 21 1 342 1 375 1 325 1 218 3 130 1 74 3 49 2 245 1 136 1 
108 4 52 4 329 7 330 1 287 1 79 2 288 1 142 2 271 1 227 1 33 4 209 5 8 2 337 1 236 1 295 1 197 4 102 3 21 2 152 1 342 2 375 1 325 1 218 4 130 1 74 4 49 3 245 2 136 2 
351 1 
23 1 298 1 13 1 
78 1 13 1 
205 1 65 1 13 1 
13 1 371 1 
298 1 13 1 
65 2 159 1 23 1 298 1 215 1 13 3 
247 1 194 4 162 3 270 2 141 1 110 1 142 1 124 1 69 1 201 7 145 1 92 3 335 1 30 1 234 2 136 1 137 1 293 1 
347 1 182 1 224 2 247 2 79 3 162 15 270 3 331 1 110 1 142 4 315 3 8 3 145 1 359 1 92 10 335 2 234 5 14 1 293 2 194 16 321 1 124 1 262 4 372 1 201 31 69 5 47 1 26 1 30 2 266 1 220 1 245 3 137 1 136 4 
347 2 182 2 224 4 247 1 270 2 162 4 142 1 145 1 92 4 335 1 234 3 14 2 293 1 216 1 194 5 124 1 372 2 201 9 69 1 47 1 219 1 30 1 136 1 137 1 
247 1 194 4 162 3 270 2 110 1 142 1 124 1 69 1 201 7 145 1 92 3 335 1 30 1 234 2 136 1 293 1 137 1 
247 1 194 4 162 3 270 2 110 1 142 1 124 1 69 1 201 7 145 1 92 3 335 1 30 1 234 2 136 1 293 1 137 1 
310 1 248 1 286 1 140 1 34 1 274 2 231 2 232 1 233 1 192 1 115 1 13 1 148 1 280 1 297 1 119 1 298 1 240 1 153 1 43 2 303 1 306 1 345 2 
310 1 286 1 161 1 140 1 83 1 85 1 333 1 274 1 231 1 59 2 37 1 170 1 192 1 292 1 148 1 297 1 119 1 237 1 343 1 43 1 70 1 303 1 265 1 306 1 345 1 268 1 
310 1 286 2 161 1 140 1 83 1 85 1 333 1 274 1 357 1 231 1 59 2 37 1 170 1 192 1 279 1 258 1 292 1 148 1 149 1 297 2 119 1 237 1 368 1 343 1 43 1 303 1 265 1 306 1 345 1 268 1 
310 1 286 3 161 1 140 1 83 1 333 1 274 1 35 1 357 1 231 1 59 2 37 1 170 1 192 1 258 1 292 1 148 1 149 1 297 3 119 1 237 1 368 2 343 1 153 1 43 1 70 1 303 1 265 1 306 1 345 1 
310 1 286 2 161 1 140 1 83 1 333 1 274 1 35 1 357 1 231 1 59 2 37 1 192 1 258 1 292 1 149 1 297 2 368 2 343 1 43 1 70 1 303 1 306 1 265 1 345 1 
184 1 
108 2 2 1 328 2 329 2 53 1 112 4 209 2 7 2 10 1 336 6 116 1 337 1 13 1 295 1 259 2 298 1 68 1 179 1 126 1 128 2 303 1 218 5 129 1 73 2 306 2 307 1 74 2 75 1 135 1 310 1 31 1 140 2 86 1 227 1 34 2 356 1 355 1 275 1 233 1 192 2 360 1 278 1 236 1 318 1 280 1 364 3 197 5 282 1 102 2 41 1 199 1 375 1 326 2 202 2 106 1 
2 1 86 1 112 2 355 1 356 1 360 1 336 2 277 1 116 1 318 1 197 3 364 1 282 1 41 1 68 1 199 1 179 1 218 3 129 1 326 1 307 1 135 1 
2 1 86 1 227 1 112 3 355 1 356 1 336 1 360 1 277 1 116 1 318 1 259 1 197 3 364 1 282 1 41 1 68 1 199 1 179 1 218 3 129 1 307 1 74 1 135 1 
2 1 328 1 86 1 227 1 112 3 355 1 356 1 277 1 360 1 336 2 116 1 318 1 259 1 364 1 197 3 282 1 41 1 68 1 199 1 179 1 218 3 129 1 326 1 307 1 74 1 135 1 
2 1 108 1 328 4 53 1 112 6 209 1 7 2 336 7 116 1 337 1 259 4 68 1 179 1 126 1 128 2 218 5 129 1 73 2 307 1 74 5 221 1 135 1 223 1 350 1 84 1 86 1 227 5 356 1 355 1 275 1 360 1 277 1 235 1 236 1 318 1 197 5 364 3 282 1 41 1 102 2 199 1 375 1 326 4 202 2 
2 1 108 1 328 2 53 1 329 2 112 4 209 1 7 2 336 4 116 1 337 1 259 2 68 1 179 1 126 1 128 2 218 4 129 1 73 2 307 1 74 2 75 1 135 1 86 1 227 1 355 1 356 1 275 1 360 1 236 1 318 1 197 4 364 2 282 1 41 1 102 2 199 1 375 1 202 2 326 2 
108 1 2 1 328 2 350 1 53 1 86 1 227 1 112 4 209 1 355 1 356 1 7 2 275 1 336 4 360 1 235 1 116 1 337 1 236 1 318 1 259 2 364 2 197 4 282 1 102 2 41 1 68 1 199 1 179 1 126 1 375 1 128 2 218 4 129 1 326 2 202 2 73 2 307 1 74 1 221 1 135 1 
108 1 2 1 328 2 350 1 53 1 86 1 227 1 112 4 209 1 355 1 356 1 7 2 275 1 336 4 360 1 235 1 116 1 337 1 236 1 318 1 259 2 364 2 197 4 282 1 102 2 41 1 68 1 199 1 179 1 126 1 375 1 128 2 218 4 129 1 326 2 202 2 73 2 307 1 74 1 221 1 135 1 
108 1 2 1 328 2 350 1 329 2 53 1 87 1 86 1 6 1 227 1 112 4 209 1 355 1 356 1 114 1 213 2 336 4 360 1 116 1 337 1 236 1 318 1 259 2 364 2 197 4 282 1 367 2 41 1 68 1 199 1 179 1 126 1 375 1 128 2 218 4 129 1 326 2 73 2 307 1 74 1 135 1 
108 1 2 1 350 1 328 3 53 1 84 1 86 1 227 1 112 5 209 1 355 1 356 1 7 2 275 1 360 1 336 5 235 1 116 1 337 1 236 1 318 1 259 3 364 2 197 4 282 1 102 2 41 1 68 1 199 1 179 1 126 1 375 1 128 2 218 4 129 1 202 2 73 2 326 3 307 1 74 1 221 1 135 1 
108 1 2 1 350 1 328 3 53 1 84 1 86 1 227 1 112 5 209 1 355 1 356 1 7 2 275 1 360 1 336 5 235 1 116 1 337 1 236 1 318 1 259 3 364 2 197 4 282 1 102 2 41 1 68 1 199 1 179 1 126 1 375 1 128 2 218 4 129 1 202 2 73 2 326 3 307 1 74 1 221 1 135 1 
2 1 108 1 328 2 53 1 329 2 112 4 209 1 213 2 336 4 116 1 337 1 259 2 68 1 179 1 126 1 128 2 218 4 129 1 73 2 307 1 74 1 75 1 135 1 87 1 86 1 227 1 355 1 356 1 360 1 236 1 318 1 197 4 364 2 282 1 41 1 367 2 199 1 375 1 326 2 
310 2 347 2 182 2 0 1 2 1 224 4 140 8 162 1 164 1 272 1 34 2 89 1 165 1 256 1 233 1 192 8 276 1 146 2 279 1 360 1 13 3 14 2 194 1 280 1 118 1 298 2 281 1 365 1 178 1 68 1 323 1 370 1 125 2 372 2 201 2 70 1 303 2 304 2 306 7 
347 1 182 1 224 2 2 1 183 1 79 1 162 2 142 1 228 1 89 1 8 1 92 1 146 1 360 1 234 1 14 1 95 1 194 1 68 1 125 1 370 1 42 1 241 1 372 1 302 1 201 3 244 1 245 1 136 1 
205 1 347 1 182 1 224 2 247 1 183 1 162 3 270 1 142 1 273 2 228 1 145 1 92 2 335 1 146 1 234 2 14 1 194 3 178 1 124 1 125 1 42 1 372 1 201 6 137 1 136 1 
347 2 0 1 182 2 224 4 183 11 79 1 162 6 164 1 142 1 315 3 273 1 228 4 8 2 91 1 359 1 92 2 146 2 234 1 64 1 14 2 194 8 262 3 125 1 69 1 372 2 302 1 201 14 42 11 266 1 132 1 381 1 245 2 136 2 
310 1 347 1 182 1 0 1 2 1 224 2 140 1 162 1 164 1 273 1 34 1 228 1 89 1 354 1 168 1 192 1 193 1 146 1 360 2 13 1 14 1 97 1 194 1 298 1 300 1 122 1 68 2 323 1 125 1 370 1 302 1 372 1 201 2 303 1 23 1 306 1 379 1 157 1 
0 1 2 1 247 1 285 1 4 2 162 10 164 1 8 2 335 1 13 2 14 3 298 2 300 2 68 3 124 1 125 3 302 1 69 4 70 1 303 2 23 2 306 3 137 1 136 3 347 3 310 2 182 3 224 6 311 2 183 7 79 2 140 3 270 1 82 2 142 3 188 1 273 2 34 1 89 1 228 7 354 2 145 1 92 8 192 3 193 2 146 3 360 3 234 4 194 10 99 2 323 1 370 1 372 3 201 20 42 7 376 2 105 1 157 1 245 2 
347 1 182 1 224 2 194 2 183 1 178 1 143 1 125 1 69 1 42 1 201 2 372 1 228 1 92 1 146 1 245 1 14 1 136 1 
347 1 182 1 224 2 183 1 79 1 162 2 178 1 55 1 142 1 125 1 42 1 201 2 372 1 228 1 92 1 146 1 234 1 14 1 
347 1 182 1 224 2 183 2 79 1 162 2 142 1 228 2 8 1 92 2 146 1 234 1 14 1 194 2 178 1 125 1 372 1 201 4 42 2 69 1 245 1 136 1 
347 1 182 1 224 2 194 2 183 1 281 1 143 1 125 1 69 1 42 1 201 2 372 1 228 1 92 1 146 1 245 1 14 1 136 1 
347 1 182 1 224 2 183 1 281 1 79 1 162 2 55 1 142 1 125 1 42 1 201 2 372 1 228 1 92 1 146 1 234 1 14 1 
347 1 182 1 224 2 183 2 79 1 162 2 142 1 228 2 8 1 92 2 146 1 234 1 14 1 194 2 281 1 125 1 372 1 201 4 42 2 69 1 245 1 136 1 
347 1 182 1 224 2 194 2 183 2 79 1 162 2 142 1 125 1 69 1 42 2 372 1 201 4 228 2 8 1 92 2 146 1 234 1 245 1 14 1 136 1 
310 1 347 1 182 1 0 1 224 2 311 1 140 1 162 1 164 1 273 1 34 1 354 1 192 1 193 1 146 1 360 1 13 1 14 1 194 1 298 1 300 1 68 1 125 1 201 2 372 1 303 1 23 1 306 1 
310 1 347 1 182 1 0 1 224 2 140 1 162 1 164 1 273 1 189 1 34 1 354 1 192 1 146 1 360 1 13 1 14 1 194 1 298 1 40 1 68 1 125 1 201 2 372 1 303 1 23 1 306 1 77 1 
347 1 182 1 224 2 183 2 79 1 162 2 142 1 228 2 8 1 92 2 146 1 234 1 14 1 194 2 125 1 372 1 302 1 201 4 42 2 69 1 245 1 136 1 
310 1 347 1 182 1 224 2 311 1 183 2 79 1 140 1 162 2 82 1 142 1 228 2 354 1 8 1 92 2 192 1 193 1 146 1 279 1 360 1 234 1 13 1 14 1 194 2 298 1 300 1 68 1 125 1 69 1 42 2 201 4 372 1 303 1 23 1 306 1 245 1 136 1 
347 1 182 1 224 2 2 1 183 1 79 1 162 1 142 1 89 1 228 1 8 1 92 1 169 1 146 1 360 1 14 1 194 2 68 1 125 1 370 1 69 1 241 1 372 1 302 1 201 3 42 1 244 1 245 1 136 1 
347 2 182 2 224 4 79 3 162 10 187 1 142 3 315 1 207 2 251 1 8 3 359 1 212 1 92 6 38 1 39 2 234 3 14 2 216 1 296 1 194 9 262 2 372 2 201 19 69 3 154 1 180 1 266 1 245 3 136 3 
347 3 182 3 224 6 3 1 79 2 162 12 142 2 187 1 315 2 207 1 254 1 8 3 212 2 359 2 61 1 92 4 38 2 39 4 234 2 14 3 216 1 296 1 194 14 320 1 262 2 69 2 372 3 201 26 127 1 47 2 180 1 107 1 245 3 136 3 
347 3 182 3 224 6 247 1 3 1 79 4 352 1 270 1 162 21 187 1 142 5 315 3 207 1 251 1 254 1 8 4 145 1 359 3 212 2 61 1 92 8 335 1 38 1 39 4 234 4 14 3 216 1 296 1 194 20 320 1 124 1 262 4 372 3 201 41 69 4 127 1 47 1 180 1 266 1 107 1 245 4 137 1 136 5 
347 4 182 4 224 8 247 1 3 1 79 3 352 1 270 1 162 18 187 1 142 4 315 3 207 1 251 1 254 1 8 4 145 1 359 3 212 2 61 1 92 7 335 1 38 1 39 4 234 4 14 4 216 1 296 1 194 20 320 1 124 1 262 4 372 4 201 38 69 3 127 1 47 2 180 1 266 1 107 1 245 4 137 1 136 5 
347 2 182 2 224 4 247 1 3 1 79 7 270 1 162 25 187 1 142 8 315 4 207 1 254 1 8 7 145 1 359 2 212 1 61 1 92 14 335 1 38 1 39 4 234 7 64 2 14 2 216 1 296 1 194 27 320 1 124 1 262 4 372 2 201 52 69 7 127 1 47 1 180 1 266 2 107 1 245 7 137 1 136 8 
252 1 308 1 348 1 71 1 48 1 171 1 332 1 76 1 147 1 301 1 
243 1 103 1 
174 1 348 1 22 1 71 1 48 1 171 1 332 1 63 1 301 1 
175 1 340 1 
109 1 19 1 369 1 
308 1 348 1 117 1 327 2 197 1 185 1 151 1 332 1 301 1 252 1 104 1 218 1 71 1 167 1 48 1 171 1 74 1 147 1 
308 1 348 1 117 1 327 2 197 1 185 1 151 1 332 1 301 1 252 1 104 1 218 1 71 1 167 1 48 1 171 1 74 1 147 1 
308 1 348 1 117 1 327 2 197 1 185 1 151 1 332 1 301 1 252 1 104 1 218 1 71 1 167 1 48 1 171 1 74 1 147 1 
175 1 369 1 340 1 
175 1 369 1 340 1 
109 1 19 1 
109 1 19 1 369 1 
160 1 238 1 
139 1 348 1 2 2 327 1 160 1 185 1 332 1 273 1 89 2 255 1 167 1 171 1 360 2 17 1 197 1 238 1 68 2 370 2 301 1 342 1 103 1 218 1 71 1 48 1 29 1 243 1 49 1 
310 1 347 1 182 1 0 1 2 2 224 2 80 1 140 2 162 1 164 1 211 1 192 2 146 1 360 2 13 1 14 1 194 1 118 1 298 1 365 1 68 2 125 1 302 1 372 1 201 2 303 1 24 1 304 2 306 2 134 1 133 1 
310 1 280 1 248 1 298 1 140 1 123 1 34 1 303 1 231 1 9 1 233 1 306 1 192 1 13 1 
310 1 20 1 161 1 140 1 83 1 123 1 333 1 343 1 70 1 303 1 231 1 59 2 36 1 37 1 170 1 265 1 306 1 192 1 
310 1 20 1 161 1 140 2 83 1 123 1 333 1 343 1 70 1 303 1 231 1 59 2 36 1 37 1 170 1 265 1 306 2 192 2 279 1 
310 1 161 1 140 1 83 1 333 1 343 1 70 1 303 1 231 1 59 2 144 1 36 1 37 1 170 1 265 1 306 1 192 1 
51 1 
108 1 196 1 239 1 227 1 126 1 375 1 209 1 74 1 236 1 337 1 
349 2 108 5 99 1 52 5 329 10 79 2 102 5 142 2 200 1 33 5 209 5 8 2 74 5 245 2 136 2 
218 1 197 1 364 1 336 1 74 1 227 1 
310 1 108 2 31 2 140 4 57 1 34 2 209 2 10 1 233 1 192 4 336 4 13 1 337 2 236 2 295 2 280 1 298 1 364 2 197 3 126 1 375 2 303 1 218 3 106 1 27 1 306 4 155 2 130 1 380 1 
205 1 209 1 108 1 196 1 239 1 74 1 227 1 
108 1 197 1 364 1 329 1 102 1 227 1 126 1 375 1 209 1 218 1 7 1 275 1 202 1 336 1 74 2 236 1 337 1 
159 1 108 8 249 2 52 6 329 12 250 1 290 2 209 9 8 2 336 5 13 10 337 4 173 2 65 2 295 2 298 3 126 4 303 3 23 3 218 5 306 3 74 8 267 1 135 2 346 2 136 2 310 4 349 2 31 1 78 2 79 2 140 3 142 2 227 2 33 6 34 1 230 2 192 3 279 1 236 4 99 2 196 1 197 5 364 3 239 1 102 6 322 1 371 3 200 2 375 4 46 2 155 1 380 1 245 2 
349 2 108 5 52 5 31 1 3 1 329 6 79 2 163 1 142 2 315 1 33 5 227 2 209 8 254 1 8 2 359 1 336 1 337 2 236 2 295 1 320 1 197 1 364 1 102 3 262 1 200 1 126 2 375 2 127 1 218 1 283 1 107 1 74 5 245 2 136 2 
349 2 108 2 2 1 247 1 206 1 312 1 142 1 209 2 253 1 89 1 145 1 358 1 335 1 360 1 235 1 12 1 337 1 236 1 197 1 199 1 68 1 200 1 370 1 126 1 375 1 218 1 244 1 136 2 
347 1 310 1 0 1 182 1 224 2 2 2 311 1 312 1 140 1 162 1 273 1 34 1 89 2 354 1 192 1 193 1 146 1 360 3 13 1 14 1 98 1 298 1 300 1 68 3 370 2 125 1 201 1 372 1 303 1 23 1 306 1 244 2 
108 2 295 1 52 2 31 1 329 4 270 1 102 2 33 2 227 2 126 1 375 1 209 1 74 4 236 1 337 1 
252 1 113 1 238 1 332 1 301 1 
332 1 362 1 301 1 
332 1 362 1 301 1 
332 1 362 1 301 1 
317 1 332 1 301 1 
317 1 332 1 301 1 
317 1 332 1 301 1 
332 1 301 1 
348 1 71 1 
347 1 216 1 182 1 224 2 247 2 194 5 162 5 142 2 372 1 69 2 201 10 145 1 358 1 92 5 335 2 234 3 14 1 136 2 
216 1 347 1 182 1 224 2 194 2 372 1 201 2 69 1 92 1 245 1 14 1 136 1 
216 1 347 1 182 1 224 2 194 2 79 1 162 2 142 1 372 1 201 4 69 1 8 1 92 2 234 1 245 1 14 1 136 1 
216 1 347 3 182 3 224 6 247 1 194 1 162 2 261 1 251 1 201 3 372 3 69 1 47 1 92 2 335 1 234 1 14 3 
347 5 182 5 224 10 247 3 79 3 270 1 331 1 162 18 142 5 315 3 251 1 8 3 145 2 359 1 92 12 335 3 234 7 14 5 216 1 194 16 261 1 321 1 124 1 262 4 372 5 201 34 69 5 45 1 47 2 26 1 266 1 245 3 137 1 136 5 
347 2 182 2 224 4 194 4 247 1 270 1 162 4 142 1 124 1 201 8 69 1 372 2 47 1 145 1 92 3 335 1 234 2 136 1 14 2 137 1 
205 1 247 1 194 3 270 1 162 3 142 1 124 1 201 6 145 1 92 2 335 1 234 2 137 1 136 1 
347 1 182 1 224 2 194 2 79 1 162 2 142 1 372 1 201 4 69 1 45 1 8 1 92 2 234 1 245 1 14 1 136 1 
194 3 79 1 162 4 142 1 262 2 315 1 201 7 69 1 8 1 359 1 92 2 266 1 234 1 245 1 136 1 
347 2 182 2 224 4 247 2 79 2 270 1 162 12 142 3 315 2 8 2 145 1 91 1 92 9 335 2 234 5 64 1 14 2 194 11 261 1 124 1 262 2 69 4 201 23 372 2 47 2 266 1 245 2 137 1 136 3 
201 1 162 1 262 1 
201 1 194 1 315 1 
347 1 182 1 224 2 194 3 99 1 79 1 162 3 142 1 372 1 201 6 69 1 45 1 8 1 92 3 234 2 245 1 14 1 136 1 
347 1 182 1 224 2 3 1 79 2 162 6 142 2 315 1 254 1 8 2 359 1 92 2 234 1 14 1 216 1 194 6 320 1 262 1 69 1 201 12 372 1 127 1 107 1 245 2 136 2 
69 1 201 6 247 1 194 3 145 1 92 2 335 1 162 3 234 1 142 1 136 1 
347 1 182 1 224 2 194 1 247 1 162 2 261 1 124 1 69 1 201 3 372 1 47 1 92 2 335 1 234 1 137 1 14 1 
347 1 182 1 224 2 247 1 270 1 162 4 142 1 315 1 145 1 359 1 92 2 335 1 234 2 14 1 216 1 194 4 262 1 124 1 201 8 372 1 107 1 136 1 137 1 
347 2 182 2 224 4 247 1 270 1 162 5 142 1 315 1 8 1 145 1 359 1 92 3 335 1 234 2 14 2 216 1 194 6 124 1 262 2 201 11 372 2 69 1 45 1 266 1 107 1 245 1 137 1 136 2 
347 3 182 3 224 6 247 1 3 1 79 2 270 1 162 10 142 3 315 1 254 1 8 2 145 1 359 1 92 4 335 1 234 3 14 3 216 1 194 9 320 1 124 1 262 1 69 1 201 19 372 3 45 1 127 1 47 1 107 1 245 2 137 1 136 3 
347 3 182 3 224 6 247 1 3 1 79 1 270 1 162 7 142 2 315 1 254 1 8 2 145 1 359 1 92 5 335 1 234 3 14 3 216 1 194 10 320 1 124 1 262 1 69 2 201 17 372 3 45 1 127 1 47 1 107 1 245 2 137 1 136 3 
347 1 182 1 224 2 247 1 270 1 162 4 142 1 315 1 145 1 359 1 92 2 335 1 234 2 14 1 216 1 194 4 262 1 124 1 201 8 372 1 107 1 136 1 137 1 
347 1 182 1 224 2 3 1 79 2 162 6 142 2 315 1 254 1 8 2 359 1 92 2 234 1 14 1 216 1 194 6 320 1 262 1 69 1 201 12 372 1 127 1 107 1 245 2 136 2 
347 4 182 4 224 8 247 1 3 1 79 1 270 1 162 8 142 2 315 1 254 1 8 2 145 1 359 1 92 5 335 1 234 3 14 4 216 1 194 10 320 1 124 1 262 1 69 2 201 18 372 4 45 1 127 1 47 2 107 1 245 2 137 1 136 3 
347 4 182 4 224 8 3 1 79 2 162 7 142 2 315 1 251 1 254 1 8 3 359 1 92 6 234 3 14 4 216 1 194 9 320 1 262 1 69 3 201 16 372 4 127 1 47 2 107 1 245 3 136 3 
247 3 194 3 162 4 142 1 124 1 201 7 69 3 145 1 92 6 335 3 234 3 137 2 136 1 
347 4 182 4 224 8 247 1 3 1 79 1 270 1 162 8 142 2 315 1 251 1 254 1 8 2 145 1 359 1 92 4 335 1 234 3 14 4 216 1 194 10 320 1 124 1 262 1 69 1 201 18 372 4 127 1 47 2 107 1 245 2 137 1 136 3 
273 1 2 1 355 1 378 1 360 1 68 1 222 1 
309 1 158 1 2 1 81 1 32 1 68 1 273 1 208 1 355 1 378 1 360 1 222 1 
310 1 280 1 18 1 298 1 140 4 34 1 303 1 233 1 306 4 192 4 94 1 279 1 13 1 
138 1 284 1 310 2 298 1 285 1 120 1 140 2 314 1 303 1 23 1 306 2 192 2 155 1 13 1 
310 1 34 1 303 1 59 1 161 1 265 1 192 1 140 1 306 1 83 1 
310 1 298 1 365 1 140 2 70 1 303 1 306 2 192 2 279 1 134 1 13 1 
310 2 280 1 298 2 365 1 140 5 272 1 34 1 303 2 256 1 233 1 306 4 192 5 94 1 155 1 279 1 13 3 
310 2 280 1 298 2 365 1 140 5 34 1 373 1 303 2 256 1 233 1 306 4 192 5 94 1 155 1 279 1 13 3 
310 1 2 1 298 1 140 1 68 2 323 1 370 1 273 1 34 1 89 1 354 1 303 1 23 1 306 1 192 1 360 2 13 1 77 1 
138 1 310 2 159 1 298 1 120 1 140 1 324 1 303 1 23 1 306 1 192 1 155 1 13 1 
310 1 205 1 34 1 303 1 280 1 298 1 233 1 192 1 140 1 306 1 13 1 
310 1 2 1 298 1 140 1 68 2 323 1 370 1 273 1 34 1 89 1 354 1 303 1 23 1 306 1 192 1 193 1 360 2 13 1 
173 1 318 1 310 1 2 2 78 1 298 2 140 1 199 1 68 2 323 1 86 1 370 2 273 1 89 1 354 1 303 1 23 2 306 1 192 1 155 1 193 1 360 2 13 3 
310 1 2 2 78 1 140 2 86 1 273 1 89 1 354 1 192 2 360 2 13 3 318 1 173 1 18 1 298 2 68 2 199 1 323 1 370 2 303 1 23 2 306 2 155 1 77 1 
310 1 78 1 140 3 227 1 34 1 60 1 192 3 336 1 13 4 173 1 65 1 18 1 298 1 150 1 197 2 371 1 303 1 218 2 23 1 306 3 155 1 74 1 135 1 
173 1 310 1 65 1 249 1 18 1 78 1 298 1 197 2 140 3 371 1 227 1 34 1 303 1 23 1 218 2 306 3 192 3 155 1 336 1 74 1 135 1 13 4 
310 1 303 1 192 1 140 1 306 1 276 1 
138 1 310 3 159 1 298 2 365 1 120 1 140 7 272 1 324 1 34 2 70 1 165 1 303 2 256 1 23 1 304 1 306 6 192 7 276 1 279 1 13 3 
2 1 247 1 4 1 162 3 335 1 13 1 14 2 298 1 300 1 68 2 124 1 125 2 302 1 303 1 23 1 24 1 306 1 137 1 136 1 347 2 310 1 182 2 224 4 311 1 183 1 140 1 82 1 270 1 142 1 273 2 228 1 89 1 354 1 145 1 92 2 192 1 193 1 146 2 279 1 360 2 234 2 194 3 323 1 370 1 372 2 201 6 42 1 
108 1 249 1 140 1 227 1 34 1 290 1 209 1 230 1 192 1 336 2 337 2 236 2 13 2 65 1 196 1 197 3 364 1 239 1 371 1 126 2 375 2 218 3 46 1 306 1 380 1 74 1 49 1 135 1 
310 2 65 1 159 1 298 1 140 2 303 1 23 1 306 2 192 2 276 1 279 1 267 1 13 2 
2 1 80 1 226 1 68 1 339 1 88 1 211 1 360 1 133 1 
225 1 131 1 226 1 
273 1 374 1 88 1 226 1 339 1 
318 1 225 1 197 2 67 1 226 1 41 1 199 1 86 1 339 2 227 1 273 1 88 2 374 2 218 2 264 1 131 1 74 1 135 1 49 1 
148 1 149 1 357 1 297 1 119 1 286 1 258 1 85 1 
148 1 149 2 297 4 119 1 286 4 54 1 198 1 313 1 186 1 368 2 44 1 377 1 357 3 258 2 
148 1 149 1 119 1 297 2 286 2 85 1 368 1 357 1 72 1 93 1 242 1 258 1 
148 1 149 1 119 1 297 3 286 3 54 2 313 1 101 1 85 1 44 2 357 1 258 1 
316 2 357 2 260 1 341 1 
148 1 291 1 297 1 119 1 286 1 85 1 
148 1 149 1 357 1 297 2 119 1 286 2 258 1 368 1 85 1 204 1 
203 1 
148 1 149 1 357 1 297 1 119 1 286 1 258 1 85 1 
205 1 149 1 357 1 258 1 
148 1 149 1 357 1 297 1 119 1 286 1 258 1 
274 1 297 1 345 1 
148 1 149 1 44 2 357 1 297 3 119 1 286 3 62 1 54 1 313 1 258 1 85 1 
319 1 148 1 149 1 357 1 297 2 119 1 286 2 258 1 368 1 
148 1 294 1 357 1 59 1 297 1 119 1 286 1 265 1 198 1 85 1 343 1 
148 1 357 1 297 1 119 1 286 1 258 1 85 1 
148 1 149 1 297 1 119 1 286 1 258 2 85 1 
148 2 119 2 297 2 286 2 85 1 353 1 344 1 357 1 257 1 258 1 
148 1 1 1 149 1 119 1 297 3 286 3 198 1 85 1 368 2 377 1 357 2 258 1 204 1 
148 1 149 1 119 1 297 2 286 2 83 1 85 1 368 1 333 1 343 1 357 1 59 2 191 1 265 1 258 1 
148 2 319 1 149 1 119 2 297 4 286 4 198 1 85 1 111 1 368 2 377 1 357 2 258 1 
148 1 149 1 119 1 297 3 286 3 368 1 85 1 44 1 357 1 258 1 204 1 
357 1 377 1 198 1 186 1 
357 1 258 1 

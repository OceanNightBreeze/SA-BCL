#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 1 112 2 275 4 161 2 140 1 187 1 116 1 117 2 253 1 10 1 351 1 126 1 336 1 175 1 15 2 130 2 152 1 133 6 201 1 66 3 267 9 204 2 377 5 180 1 247 9 75 1 295 1 273 2 
181 1 112 2 275 4 161 2 140 1 187 1 116 1 117 2 253 1 10 1 351 1 126 1 336 1 175 1 130 2 152 1 15 2 133 6 201 1 66 3 267 9 204 2 377 5 180 1 247 9 75 1 295 1 273 2 
181 1 112 2 275 5 161 2 140 1 187 1 116 1 117 2 253 1 10 1 351 1 126 1 336 1 175 1 130 2 152 1 15 2 133 7 201 1 66 4 267 10 204 2 377 6 180 1 247 10 75 1 295 1 273 2 
181 1 112 2 275 3 161 2 140 1 187 1 116 1 117 2 253 1 10 1 351 1 336 1 175 1 130 2 152 1 15 1 133 4 201 1 66 2 267 7 204 2 377 4 180 1 247 7 75 1 295 1 273 2 
181 1 126 1 112 1 275 2 140 1 175 1 130 1 15 2 133 3 66 1 117 1 204 1 267 4 253 1 377 3 10 1 247 4 273 1 
325 1 181 1 112 1 161 1 140 1 175 1 130 1 367 1 377 1 204 1 267 2 247 2 75 1 31 1 351 1 273 1 
181 1 275 1 336 1 161 1 140 1 175 1 130 2 133 1 66 1 204 2 267 3 377 2 247 3 
181 1 275 4 112 1 161 1 140 1 81 1 347 1 117 1 253 1 10 1 126 1 336 1 175 1 130 2 152 1 15 2 133 7 201 1 66 3 267 9 204 2 377 5 247 9 273 1 
181 1 275 4 112 1 161 1 140 1 81 1 347 1 117 1 253 1 10 1 126 1 336 1 175 1 130 2 152 1 15 2 133 7 201 1 66 3 267 9 204 2 377 5 247 9 273 1 
323 1 26 1 270 1 
26 1 13 1 288 2 
160 1 291 2 370 2 287 2 213 2 62 2 306 2 200 1 
160 1 111 1 25 1 232 2 80 2 169 1 8 1 370 2 56 1 192 2 237 1 306 2 122 1 222 1 93 1 309 1 287 3 62 2 41 1 200 1 312 1 313 1 289 2 264 1 102 1 266 1 18 1 104 1 291 2 107 2 213 3 21 1 379 1 248 1 76 1 110 1 359 1 
279 1 301 1 291 1 370 1 287 1 213 1 305 1 62 1 306 1 200 1 
26 1 182 1 287 1 62 1 97 1 98 1 99 1 376 1 279 1 371 1 270 1 213 1 108 1 32 1 
26 1 182 1 287 1 97 2 62 1 98 1 279 1 291 1 370 1 371 2 270 1 213 1 108 1 306 1 32 1 
256 1 371 1 363 1 84 1 97 1 
68 1 26 1 371 2 363 1 270 1 84 1 163 1 97 2 
371 1 84 1 97 1 
363 1 287 1 97 1 62 1 200 1 279 1 301 1 368 1 291 1 370 1 371 1 213 1 305 1 306 1 
26 1 
283 1 68 1 26 1 371 2 363 1 270 1 84 1 97 2 
360 1 26 1 37 1 363 2 97 5 167 1 44 1 234 2 342 1 68 1 70 1 228 1 371 5 206 2 148 2 270 1 84 2 158 1 74 1 
323 1 160 1 
195 1 160 1 151 1 287 2 39 1 62 2 279 1 291 1 370 1 213 2 306 1 
324 1 300 1 33 1 
160 1 93 1 309 1 287 1 80 1 41 1 312 1 264 1 289 1 213 1 192 1 248 1 122 1 76 1 359 1 254 1 
324 1 93 1 309 1 129 1 287 2 80 1 62 1 41 1 132 1 312 1 264 1 289 1 291 1 213 2 192 1 306 1 248 1 76 1 122 1 359 1 
160 1 291 3 370 1 129 1 287 3 213 3 62 3 306 3 
279 1 291 1 287 1 213 1 305 1 62 1 306 1 
195 1 287 1 39 1 62 1 279 1 291 1 370 1 213 1 306 1 
111 1 160 1 169 1 8 1 56 1 306 3 122 1 124 1 125 1 222 1 309 1 129 1 62 3 132 1 312 1 264 1 76 1 359 1 182 1 232 1 80 1 279 2 370 2 371 1 192 1 237 1 32 1 195 1 151 1 93 1 287 4 97 1 41 1 200 1 98 1 289 1 102 1 104 1 291 3 213 4 107 2 108 1 379 1 248 1 110 1 
160 1 151 1 129 1 287 2 62 2 99 1 279 1 291 1 302 1 213 2 306 1 
195 1 125 1 26 1 129 2 182 1 287 3 297 1 97 1 62 3 132 1 98 1 279 1 291 3 370 1 371 1 213 3 108 1 306 3 32 1 
324 1 195 1 291 2 370 1 129 1 287 2 213 2 62 2 306 2 300 1 
160 1 93 1 309 1 287 1 80 1 41 1 312 1 264 1 289 1 213 1 192 1 248 1 122 1 76 1 359 1 
160 1 93 1 287 1 80 1 183 1 278 1 41 1 312 1 264 1 289 1 213 1 192 1 122 1 76 1 359 1 
324 2 327 1 111 1 232 4 300 2 169 1 252 1 144 1 191 1 372 1 237 1 33 2 222 1 284 1 313 2 102 1 67 1 19 1 378 1 107 2 379 2 22 1 110 1 51 1 
287 1 62 1 98 1 279 1 291 1 213 1 281 1 306 1 
195 1 160 1 337 1 129 2 287 5 62 5 132 1 99 1 5 1 291 4 370 1 302 1 213 5 306 4 
279 1 291 1 287 1 213 1 305 1 62 1 306 1 
348 1 361 1 
348 1 361 1 
310 1 142 1 
310 1 142 1 
310 1 142 1 
101 1 348 1 361 1 
101 1 348 1 361 1 
348 1 361 1 331 1 
137 1 348 2 361 2 364 1 310 1 142 1 
101 1 348 1 361 1 
348 1 361 1 211 1 
348 1 361 1 211 1 
348 1 361 1 211 1 
139 1 361 2 238 2 26 1 364 1 141 2 97 2 186 1 299 2 153 2 203 2 348 2 120 1 371 2 269 1 106 3 280 1 193 1 77 1 
160 1 36 1 361 1 238 1 287 2 141 1 62 2 97 1 186 1 331 1 153 1 203 1 316 1 69 1 332 1 291 2 190 1 348 1 371 1 213 2 106 1 49 1 57 1 306 2 
112 1 117 1 273 1 
325 1 112 1 273 1 
325 1 6 1 117 2 217 1 382 1 273 3 
325 1 0 1 117 1 217 1 382 1 273 2 
325 1 117 1 382 1 217 2 273 2 
24 1 26 2 363 4 3 1 234 1 332 1 144 1 190 1 371 5 148 1 84 1 372 1 29 2 172 1 36 1 13 1 288 3 97 5 263 2 317 1 68 1 19 1 206 1 228 3 318 1 270 1 73 1 158 1 214 2 74 2 22 1 321 1 
360 1 24 1 26 5 363 7 234 2 144 3 371 9 148 2 84 6 372 3 172 2 256 5 36 4 13 3 288 9 97 9 242 1 225 1 263 6 314 1 68 1 19 3 46 1 206 2 228 8 48 1 270 1 50 1 73 3 158 1 214 6 74 6 22 3 274 5 321 2 
360 1 26 3 363 2 234 1 144 1 371 3 148 1 372 1 29 1 172 1 36 1 13 2 288 4 97 3 263 2 317 1 19 1 206 1 228 3 318 1 270 1 73 1 214 2 22 1 74 2 321 1 
360 1 26 4 363 3 234 1 144 2 371 4 148 1 372 2 29 2 172 1 36 2 13 3 288 7 97 4 225 1 263 4 317 1 19 2 46 1 206 1 228 5 318 1 270 1 50 1 73 2 214 4 22 2 74 4 321 1 
323 1 381 1 359 1 
96 1 359 1 
20 1 
76 1 359 1 
85 1 236 1 381 2 41 1 76 1 359 3 
41 1 76 1 359 1 
359 1 173 1 
255 2 328 1 224 1 128 1 232 7 165 1 240 1 340 1 313 4 103 1 252 3 144 1 378 2 147 1 212 1 379 3 22 1 
255 2 328 1 224 1 128 1 232 7 165 1 240 1 340 1 313 4 103 1 252 3 144 1 378 2 147 1 212 1 379 3 22 1 
255 2 328 1 224 1 128 1 232 7 165 1 240 1 340 1 313 4 103 1 252 3 144 1 146 1 378 2 147 1 212 1 379 3 22 1 
23 1 111 1 328 1 277 1 232 31 216 3 165 2 218 1 252 10 145 4 144 4 350 1 147 5 334 1 372 3 237 1 30 1 220 1 255 3 222 1 224 2 128 1 240 1 340 1 313 16 102 1 103 2 19 3 378 5 212 2 107 2 379 15 73 3 22 4 
255 2 111 2 328 1 222 2 258 1 224 1 232 9 165 1 240 1 340 1 218 1 313 5 102 2 103 1 252 4 144 1 378 3 147 1 209 1 212 1 107 4 379 4 237 2 22 1 
326 1 325 1 181 1 112 1 161 1 80 1 140 1 365 1 6 1 117 1 192 1 307 1 194 1 122 1 127 1 93 1 285 1 197 1 175 1 130 1 133 1 289 1 65 1 377 1 267 2 204 1 272 1 247 2 294 1 273 2 
325 1 181 1 112 1 161 1 80 1 140 1 365 1 6 1 117 1 192 1 149 1 194 1 122 1 127 1 93 1 285 1 197 1 130 1 133 2 202 1 289 1 65 1 377 1 267 3 204 1 246 1 272 1 247 3 294 1 273 2 
325 1 181 1 112 1 161 1 80 1 140 1 365 1 6 1 117 1 192 1 122 1 93 1 285 1 197 1 133 2 202 1 289 1 65 1 377 1 267 2 246 1 272 1 247 2 294 1 273 2 
161 2 93 1 114 1 80 1 365 2 130 1 4 1 251 1 264 1 289 1 65 2 235 1 135 1 204 1 267 1 192 1 320 1 272 2 149 1 247 1 122 1 76 1 359 1 
325 1 112 1 127 1 161 1 93 1 285 1 197 1 80 1 365 1 175 1 130 1 289 1 6 1 65 1 117 1 204 1 267 1 246 1 192 1 307 1 247 1 272 1 294 1 194 1 122 1 273 2 
42 1 
2 2 298 1 4 1 119 4 122 1 11 1 12 1 13 2 260 2 353 1 62 1 134 1 63 1 264 2 226 1 68 3 179 1 228 2 270 1 76 1 74 2 321 1 359 1 138 1 26 2 27 1 182 1 329 2 80 2 279 1 189 1 235 1 234 1 371 5 148 1 84 6 192 2 374 2 88 2 32 1 91 2 93 1 288 2 287 1 97 5 199 1 98 1 99 1 289 2 376 1 206 1 210 2 213 1 108 1 158 1 
182 1 298 1 279 1 119 2 371 3 84 2 32 1 283 1 91 1 287 1 62 1 353 1 97 3 98 1 99 1 134 1 376 1 226 1 68 1 179 1 213 1 108 1 
26 1 182 1 329 1 298 1 279 1 119 3 371 3 84 1 32 1 283 1 287 1 62 1 353 1 97 3 98 1 99 1 134 1 376 1 226 1 68 1 179 1 213 1 270 1 108 1 
26 1 182 1 329 1 298 1 2 1 279 1 119 3 371 3 84 2 32 1 283 1 91 1 287 1 62 1 353 1 97 3 98 1 99 1 134 1 376 1 226 1 68 1 179 1 213 1 270 1 108 1 
2 4 298 1 119 6 12 1 13 2 260 2 353 1 62 1 134 1 226 1 68 3 179 1 228 1 268 1 270 5 74 1 26 5 27 1 182 1 329 4 188 1 279 1 234 1 371 5 148 1 84 7 373 1 88 2 374 2 32 1 283 1 91 4 287 1 97 5 98 1 99 1 376 1 206 1 105 1 292 1 210 2 213 1 108 1 158 1 
298 1 2 2 119 4 12 1 13 2 260 2 62 1 353 1 134 1 226 1 68 2 179 1 228 1 270 1 74 1 26 2 27 1 182 1 329 2 279 1 189 1 234 1 371 4 148 1 84 4 88 2 374 2 32 1 91 2 287 1 288 2 97 4 98 1 99 1 376 1 206 1 210 2 213 1 108 1 158 1 
26 1 27 1 182 1 329 2 2 2 298 1 279 1 234 1 119 4 371 4 148 1 84 4 373 1 374 2 88 2 32 1 91 2 12 1 13 2 260 2 287 1 62 1 353 1 97 4 98 1 99 1 134 1 376 1 226 1 68 2 179 1 228 1 206 1 292 1 210 2 268 1 270 1 213 1 108 1 158 1 74 1 
26 1 27 1 182 1 329 2 2 2 298 1 279 1 234 1 119 4 371 4 148 1 84 4 373 1 374 2 88 2 32 1 91 2 12 1 13 2 260 2 287 1 62 1 353 1 97 4 98 1 99 1 134 1 376 1 226 1 68 2 179 1 228 1 206 1 292 1 210 2 268 1 270 1 213 1 108 1 158 1 74 1 
26 1 27 1 162 1 182 1 329 2 2 2 298 1 279 1 234 1 119 4 371 4 148 1 84 4 32 1 91 2 260 2 261 1 288 2 287 1 62 1 353 1 97 4 98 1 99 1 134 1 100 2 376 1 226 1 68 2 179 1 228 1 206 1 292 1 210 2 72 1 270 1 213 1 380 2 108 1 158 1 74 1 
26 1 27 1 182 1 329 3 298 1 2 3 279 1 234 1 119 5 371 4 148 1 84 5 373 1 374 2 88 2 32 1 91 3 12 1 13 2 260 2 287 1 62 1 353 1 97 4 98 1 99 1 134 1 376 1 226 1 68 2 179 1 228 1 206 1 292 1 105 1 210 2 268 1 270 1 213 1 108 1 158 1 74 1 
26 1 27 1 182 1 329 3 298 1 2 3 279 1 234 1 119 5 371 4 148 1 84 5 373 1 374 2 88 2 32 1 91 3 12 1 13 2 260 2 287 1 62 1 353 1 97 4 98 1 99 1 134 1 376 1 226 1 68 2 179 1 228 1 206 1 292 1 105 1 210 2 268 1 270 1 213 1 108 1 158 1 74 1 
298 1 2 2 119 4 261 1 260 2 62 1 353 1 134 1 226 1 68 2 179 1 228 1 270 1 74 1 26 1 27 1 182 1 329 2 279 1 189 1 234 1 371 4 148 1 84 4 32 1 91 2 287 1 288 2 97 4 98 1 99 1 100 2 376 1 206 1 210 2 213 1 108 1 380 2 158 1 
324 1 323 1 111 1 160 2 328 1 232 6 165 1 300 1 169 1 252 2 144 1 237 1 33 1 255 1 222 1 240 1 340 1 313 3 102 1 67 1 378 2 107 2 212 1 379 3 22 1 110 1 
324 11 160 1 111 2 23 1 277 1 232 14 216 3 143 1 300 4 169 2 252 2 145 3 144 1 8 1 147 1 372 2 237 2 33 11 34 1 222 2 14 1 313 8 341 1 102 2 18 1 19 1 378 1 107 4 379 6 357 1 73 2 22 2 110 1 
160 1 111 1 232 2 80 1 300 1 169 1 168 1 8 1 192 1 58 1 306 1 237 1 122 1 254 1 222 1 93 1 309 1 129 1 287 2 62 1 41 1 132 1 312 1 289 1 264 1 313 1 102 1 18 1 291 1 207 1 213 2 107 2 357 1 379 1 248 1 76 1 359 1 110 1 
160 2 111 3 165 1 115 2 166 2 300 7 169 3 252 8 8 1 306 1 122 2 255 1 222 3 259 1 309 2 129 1 62 1 132 1 312 2 264 1 313 10 315 1 18 1 19 2 357 1 73 2 229 2 76 2 22 3 359 2 324 7 79 1 328 1 232 20 80 3 144 3 333 2 147 4 192 3 372 2 237 3 33 7 93 2 287 3 240 1 340 1 41 2 289 3 102 3 104 2 291 1 378 4 246 1 212 1 107 6 213 3 379 10 248 2 110 3 
326 1 111 2 232 2 80 8 4 1 169 2 235 1 8 1 192 7 306 1 237 2 122 2 282 1 222 2 93 2 129 1 287 1 62 1 354 1 154 1 289 8 264 2 313 1 102 2 266 2 67 1 18 1 291 1 47 1 246 1 213 1 107 4 379 1 159 1 76 2 215 1 249 1 359 3 110 2 
324 1 111 1 232 3 300 1 169 1 252 1 144 1 370 1 372 1 306 1 237 1 59 1 33 1 195 1 222 1 287 1 62 1 313 1 102 1 291 1 19 1 378 1 107 2 213 1 357 1 73 1 379 2 22 1 110 1 
324 1 111 1 222 1 232 2 300 1 313 2 169 1 102 1 252 1 67 1 147 1 107 2 372 1 237 1 22 1 33 1 110 1 51 1 
324 1 111 1 222 1 232 2 300 1 169 1 102 1 252 1 67 1 144 1 19 1 378 1 191 1 107 2 379 2 237 1 33 1 110 1 
324 2 111 1 232 4 300 2 169 1 252 2 144 1 147 1 372 1 237 1 33 2 222 1 313 2 102 1 67 1 19 1 378 1 107 2 73 1 379 2 22 1 110 1 
324 1 111 1 222 1 232 2 354 1 300 1 313 2 169 1 102 1 252 1 147 1 107 2 372 1 237 1 22 1 33 1 110 1 51 1 
324 1 111 1 222 1 232 2 354 1 300 1 169 1 102 1 252 1 144 1 19 1 378 1 191 1 107 2 379 2 237 1 33 1 110 1 
324 2 111 1 232 4 300 2 169 1 252 2 144 1 147 1 372 1 237 1 33 2 222 1 354 1 313 2 102 1 19 1 378 1 107 2 73 1 379 2 22 1 110 1 
324 2 111 1 232 4 300 2 169 1 252 2 144 1 147 1 372 1 237 1 33 2 222 1 313 2 102 1 19 1 378 1 107 2 73 1 379 2 22 1 110 1 
160 1 111 1 232 2 80 1 169 1 8 1 192 1 237 1 122 1 222 1 93 1 309 1 287 1 41 1 312 1 313 1 289 1 264 1 102 1 18 1 104 1 213 1 107 2 379 1 248 1 76 1 359 1 110 1 
160 1 111 1 232 2 183 1 80 1 278 1 169 1 8 1 349 1 192 1 237 1 122 1 222 1 93 1 287 1 41 1 312 1 313 1 289 1 264 1 102 1 18 1 213 1 107 2 379 1 76 1 359 1 110 1 
324 2 111 1 232 4 300 2 169 1 252 2 144 1 147 1 372 1 237 1 33 2 222 1 313 2 102 1 19 1 378 1 107 2 73 1 357 1 379 2 22 1 110 1 
324 2 326 1 111 1 232 4 80 1 300 2 169 1 252 2 144 1 147 1 333 1 192 1 372 1 237 1 122 1 33 2 222 1 93 1 309 1 287 1 41 1 312 1 313 2 289 1 102 1 104 1 19 1 378 1 213 1 107 2 379 2 73 1 248 1 22 1 76 1 359 1 110 1 
324 1 111 1 232 3 300 1 169 1 83 1 252 1 144 1 370 1 147 1 372 1 306 1 237 1 33 1 195 1 222 1 287 1 62 1 313 2 102 1 291 1 19 1 107 2 213 1 379 1 357 1 73 1 22 1 110 1 
111 2 23 1 276 1 277 1 232 19 216 1 185 1 252 6 145 2 144 3 9 1 147 3 171 2 372 3 237 2 222 2 196 2 198 1 17 1 313 9 102 2 19 3 378 3 209 1 107 4 156 1 344 1 379 10 73 3 22 3 
111 3 276 1 277 2 232 26 216 2 55 1 218 2 252 4 144 2 145 2 9 1 147 2 171 1 372 3 87 1 237 3 335 1 222 3 196 4 60 1 61 1 198 2 17 1 313 14 102 3 290 1 19 2 378 2 209 1 107 6 156 2 379 12 73 3 22 3 
111 3 216 3 165 1 218 1 55 1 252 8 9 1 171 1 255 1 222 3 60 1 61 1 17 1 313 20 19 4 73 4 22 5 23 1 328 1 276 1 277 3 232 41 185 1 82 1 144 5 145 4 147 4 372 4 87 1 237 3 335 1 196 4 240 1 198 2 340 1 102 3 290 1 378 4 209 1 107 6 212 1 156 1 379 21 
111 4 23 1 328 1 276 1 277 3 232 38 216 3 185 1 165 1 82 1 55 1 218 2 252 7 145 4 144 4 9 1 147 3 171 1 372 4 87 1 237 4 335 1 255 1 222 4 60 1 196 4 61 1 240 1 198 2 340 1 17 1 313 20 102 4 290 1 19 3 378 4 209 1 212 1 107 8 156 1 379 18 73 4 22 5 
111 2 23 2 328 1 276 1 277 2 232 52 216 4 165 1 143 2 55 1 218 1 252 14 145 4 144 8 9 1 147 7 171 1 372 7 87 1 237 2 335 1 255 1 222 2 60 1 196 4 61 1 240 1 198 1 340 1 17 1 313 27 102 2 290 1 19 7 378 7 209 1 212 1 107 4 156 1 379 25 73 7 22 8 
203 1 238 1 348 1 361 1 120 1 208 1 193 1 364 1 141 1 153 1 
69 1 331 1 
203 1 45 1 118 1 223 1 238 1 348 1 361 1 141 1 153 1 
139 1 361 1 238 1 26 1 364 1 141 1 97 1 186 1 299 1 153 1 203 1 348 1 120 1 371 1 269 1 106 2 280 1 193 1 
139 1 361 1 238 1 26 1 364 1 141 1 97 1 186 1 299 1 153 1 203 1 348 1 120 1 371 1 269 1 106 2 280 1 193 1 
139 1 361 1 238 1 26 1 364 1 141 1 97 1 186 1 299 1 153 1 203 1 348 1 120 1 371 1 269 1 106 2 280 1 193 1 
137 1 101 1 271 1 
137 1 101 1 271 1 
211 1 89 1 
137 1 211 1 89 1 
316 1 49 1 
160 1 361 1 363 1 141 1 299 1 331 1 332 1 348 1 190 1 371 1 280 1 57 1 306 2 36 1 238 1 287 2 97 1 62 2 153 1 203 1 316 1 205 1 69 1 291 2 213 2 106 1 49 1 
101 1 271 1 
137 1 211 1 89 1 
78 1 111 1 232 2 80 2 164 1 169 1 369 1 8 1 192 2 237 1 122 1 222 1 93 1 95 1 287 2 62 2 289 2 43 1 313 1 102 1 266 2 18 1 213 2 107 2 357 1 379 1 76 1 159 1 359 1 249 1 110 1 
325 1 326 1 112 1 127 1 93 1 80 2 197 1 250 1 16 1 289 2 244 1 6 1 117 1 246 1 192 2 272 1 294 1 122 1 273 2 
325 1 112 1 127 1 93 1 80 1 197 1 289 1 244 1 6 1 117 1 246 1 192 1 356 1 272 1 294 1 122 1 273 2 
93 1 114 1 80 1 16 1 4 1 264 1 289 1 235 1 28 1 192 1 272 1 122 1 76 1 359 1 
325 1 112 1 127 1 93 1 80 1 197 1 250 1 16 1 289 1 244 1 6 1 117 1 246 1 192 1 272 1 294 1 122 1 273 2 
227 1 
167 1 323 1 44 1 228 1 26 1 270 1 74 1 
26 2 234 1 371 1 148 1 84 1 88 1 374 1 12 1 13 1 288 1 97 1 68 1 228 1 206 1 270 1 158 1 74 1 
345 2 115 2 346 1 167 1 122 3 173 2 257 1 13 6 177 1 263 6 63 1 264 1 265 2 68 3 19 2 228 9 270 2 319 2 73 2 230 2 76 3 22 2 74 8 321 2 359 10 326 1 322 2 26 8 80 3 184 1 234 4 144 2 371 5 148 4 192 3 84 5 372 2 236 1 32 2 93 4 94 2 288 12 96 3 38 2 97 5 41 3 289 3 44 1 206 4 158 4 381 2 214 6 52 1 53 2 
322 2 26 5 277 1 216 1 233 1 234 2 145 1 144 2 371 1 148 2 84 1 372 2 87 1 335 1 60 1 13 3 286 1 61 1 288 6 97 1 263 5 63 1 265 1 290 1 68 1 19 2 228 8 206 2 270 2 73 2 158 2 214 5 74 5 22 2 321 1 
322 2 165 1 279 1 301 1 234 1 368 1 144 1 370 1 371 1 148 1 305 1 306 1 287 1 97 1 62 1 340 1 311 1 200 1 265 1 291 1 206 1 228 2 268 1 213 1 212 1 158 1 22 2 74 2 
26 1 167 1 44 1 234 1 206 1 228 1 148 1 270 1 158 1 74 1 
322 2 13 5 26 5 288 10 115 1 263 5 265 1 144 2 19 2 228 5 372 2 73 2 214 5 22 2 74 5 
68 1 26 1 371 1 270 1 84 1 97 1 
360 1 138 1 80 4 184 1 4 1 234 2 235 1 371 3 148 2 192 4 84 4 122 1 257 2 93 1 97 3 199 1 355 1 289 4 264 2 63 2 68 2 206 2 228 2 358 1 158 1 76 1 74 2 359 1 321 2 
160 1 111 1 232 1 80 1 169 1 8 1 370 2 56 1 192 1 237 1 306 2 122 1 222 1 93 1 309 1 287 3 62 2 41 1 200 1 312 1 289 1 264 1 102 1 104 1 291 2 107 2 213 3 379 1 248 1 76 1 359 1 110 1 
255 1 13 2 26 4 288 4 263 2 63 1 234 1 206 1 228 1 148 1 270 2 158 1 214 2 74 2 321 1 
203 1 238 1 176 1 
203 1 238 1 176 1 
203 1 238 1 219 1 49 1 193 1 
203 1 238 1 176 1 
203 1 238 1 262 1 
203 1 238 1 262 1 
203 1 238 1 262 1 
203 1 238 1 
348 1 361 1 
255 1 111 2 328 1 222 2 232 8 240 1 165 1 340 1 313 4 218 1 102 2 252 3 144 1 378 2 147 1 107 4 212 1 379 4 237 2 22 1 
323 1 255 1 328 1 232 6 240 1 165 1 340 1 313 3 252 2 144 1 378 2 212 1 379 3 22 1 
111 1 222 1 232 4 241 1 313 2 102 1 252 2 144 1 19 1 378 1 147 1 107 2 372 1 379 2 73 1 237 1 22 1 
23 1 277 1 232 7 216 1 313 3 252 2 144 1 145 2 19 1 378 1 147 1 372 1 379 4 73 1 22 1 
23 1 111 2 328 1 232 23 216 2 165 2 143 1 218 2 252 9 145 2 144 3 147 4 372 2 237 2 34 1 221 1 255 1 222 2 240 1 340 1 313 11 102 2 19 2 378 5 212 2 107 4 73 2 379 12 22 3 
145 1 232 1 379 1 
313 1 232 1 216 1 
111 1 222 1 232 6 241 1 115 1 313 3 102 1 252 3 144 1 19 1 378 2 147 1 107 2 372 1 379 3 73 1 237 1 22 1 
111 1 277 1 232 12 216 1 252 2 145 1 144 2 147 1 372 2 87 1 237 1 335 1 222 1 60 1 61 1 313 6 102 1 290 1 19 2 378 1 209 1 107 2 379 6 73 2 22 2 
232 6 165 1 340 1 313 3 252 2 144 1 378 1 147 1 212 1 379 3 22 1 
221 1 111 1 328 1 222 1 232 3 165 1 240 1 313 1 218 1 102 1 252 2 378 1 147 1 212 1 107 2 379 2 237 1 
111 1 222 1 232 10 165 2 340 1 311 1 313 5 102 1 252 5 144 2 378 3 209 1 147 2 107 2 212 2 379 5 237 1 22 2 
111 1 222 1 232 2 313 2 102 1 252 1 209 1 147 1 107 2 372 1 237 1 22 1 
111 1 222 1 232 4 313 2 102 1 252 2 144 1 19 1 378 1 209 1 147 1 107 2 372 1 379 2 73 1 237 1 22 1 
221 1 111 3 222 3 232 3 185 1 165 1 218 1 313 1 102 3 252 2 378 1 209 1 147 1 107 6 212 1 379 2 237 3 
111 5 23 1 328 1 277 1 232 34 216 3 165 3 185 1 218 2 252 12 145 4 144 5 350 1 147 5 334 1 372 3 30 1 237 5 221 1 255 1 222 5 240 1 241 1 340 2 313 16 102 5 19 3 378 7 209 1 212 3 107 10 379 18 73 3 22 5 
111 1 328 1 277 1 232 8 216 1 165 1 252 2 144 1 145 1 237 1 335 1 255 1 222 1 240 1 340 1 313 4 102 1 378 2 209 1 107 2 212 1 379 4 22 1 
111 2 23 1 328 1 277 1 232 11 216 1 165 1 252 3 144 1 145 2 147 1 372 1 237 2 335 1 255 1 222 2 240 1 241 1 340 1 313 6 102 2 378 2 209 1 212 1 107 4 379 5 73 1 22 2 
111 3 328 1 277 1 232 19 216 1 165 1 218 1 252 4 145 1 144 3 147 1 372 2 87 1 237 3 335 1 255 1 222 3 60 1 61 1 240 1 241 1 340 1 313 9 102 3 290 1 19 2 378 3 209 1 212 1 107 6 379 10 73 2 22 3 
111 3 328 1 277 1 232 17 216 1 165 1 218 1 252 5 145 1 144 2 147 2 372 2 87 1 237 3 335 1 255 1 222 3 60 1 61 1 240 1 241 1 340 1 313 10 102 3 290 1 19 1 378 3 209 1 212 1 107 6 379 7 73 2 22 3 
111 1 328 1 277 1 232 8 216 1 165 1 252 2 144 1 145 1 237 1 335 1 255 1 222 1 240 1 340 1 313 4 102 1 378 2 209 1 107 2 212 1 379 4 22 1 
111 1 277 1 232 12 216 1 252 2 145 1 144 2 147 1 372 2 87 1 237 1 335 1 222 1 60 1 61 1 313 6 102 1 290 1 19 2 378 1 209 1 107 2 379 6 73 2 22 2 
111 4 328 1 277 1 232 18 216 1 165 1 218 2 252 5 145 1 144 2 147 2 372 2 87 1 237 4 335 1 255 1 222 4 60 1 61 1 240 1 241 1 340 1 313 10 102 4 290 1 19 1 378 3 209 1 212 1 107 8 379 8 73 2 22 3 
111 4 277 1 232 16 216 1 185 1 218 2 252 6 145 1 144 2 147 3 372 3 87 1 237 4 335 1 222 4 60 1 61 1 313 9 102 4 290 1 19 2 378 3 209 1 107 8 379 7 73 3 22 3 
328 1 232 7 240 2 165 3 340 1 313 3 252 6 144 1 378 3 147 3 212 3 379 4 22 1 
111 4 328 1 277 1 232 18 216 1 165 1 185 1 218 2 252 4 145 1 144 2 147 1 372 2 87 1 237 4 335 1 255 1 222 4 60 1 61 1 240 1 340 1 313 10 102 4 290 1 19 1 378 3 209 1 212 1 107 8 379 8 73 2 22 3 
160 1 302 1 287 1 213 1 293 1 62 1 99 1 
160 1 287 1 62 1 99 1 245 1 7 1 302 1 71 1 303 1 213 1 293 1 150 1 
323 1 289 1 264 1 235 1 93 1 80 1 192 1 122 1 76 1 4 1 359 1 
160 1 93 1 129 1 287 2 80 1 62 1 41 1 312 1 264 1 289 1 291 1 213 2 192 1 306 1 248 1 76 1 122 1 359 1 
160 1 182 1 80 1 279 2 192 1 306 1 122 1 173 1 257 1 151 1 93 1 129 1 287 2 38 1 62 2 41 2 98 1 312 1 289 1 291 2 213 2 248 1 76 2 359 3 
160 1 182 1 80 1 278 1 279 2 192 1 306 1 122 1 173 1 257 1 151 1 93 1 129 1 287 2 38 1 62 2 41 2 98 1 312 1 289 1 291 2 213 2 76 2 359 3 
257 1 90 1 362 1 26 1 93 1 80 3 38 1 339 1 96 1 97 2 41 1 264 1 289 3 371 2 270 1 192 3 84 1 381 1 32 1 76 1 122 1 173 1 359 4 
257 1 362 1 26 1 93 1 80 3 38 1 96 1 97 2 41 1 264 1 289 3 371 2 270 1 192 3 84 1 381 1 32 1 76 1 122 1 173 1 53 1 359 4 
289 1 93 1 80 1 192 1 122 1 215 1 
282 1 326 1 93 3 80 7 41 1 243 1 154 1 64 1 264 2 289 7 266 1 47 1 246 1 192 6 236 1 76 2 122 2 215 1 249 1 359 3 231 1 
111 2 160 2 164 1 165 1 300 1 166 1 169 2 252 2 306 1 122 1 255 1 222 2 309 1 129 1 62 1 312 1 313 3 357 1 76 1 22 1 359 1 326 1 324 1 328 1 232 6 80 1 144 1 333 1 192 1 237 2 33 1 93 1 287 2 240 1 41 1 340 1 289 1 102 2 104 1 291 1 378 2 107 4 213 2 212 1 379 3 248 1 110 2 
345 1 26 1 363 1 80 1 184 1 167 1 234 2 371 3 148 2 192 1 84 2 32 1 94 1 96 1 97 3 264 1 289 1 44 1 68 1 228 1 206 2 270 1 158 2 230 1 381 1 74 1 53 1 359 2 
326 1 93 2 80 2 41 1 346 1 289 2 192 2 236 1 381 1 76 1 122 1 215 1 359 2 
326 1 289 4 264 1 235 1 35 1 362 1 93 1 80 4 192 4 122 1 76 1 4 1 359 1 
257 1 93 2 259 1 80 2 1 1 41 1 64 1 289 2 192 2 304 1 76 1 122 1 359 1 231 1 
325 1 289 1 264 1 112 1 93 1 197 1 80 1 192 1 122 1 273 1 
289 2 326 1 93 1 95 1 246 1 80 2 192 2 122 1 76 1 359 1 249 1 
326 1 282 1 257 1 35 1 93 2 80 5 4 1 264 1 289 5 154 1 235 1 192 4 76 2 122 2 249 1 359 3 
326 1 282 1 257 1 35 1 113 1 93 2 80 5 4 1 264 1 289 5 235 1 192 4 76 2 122 2 249 1 359 3 
160 1 93 1 129 1 287 2 80 1 278 1 62 1 41 1 312 1 264 1 289 1 291 1 213 2 192 1 306 1 76 1 122 1 359 1 
257 1 93 2 80 1 41 1 243 1 64 1 289 1 192 1 236 1 76 1 122 1 359 1 231 1 
123 1 160 1 178 1 308 1 155 1 
296 1 26 1 363 1 182 1 279 2 301 1 368 1 370 1 371 2 305 1 306 1 121 1 32 1 123 1 125 1 308 1 287 1 338 1 62 1 97 2 200 1 98 1 291 1 178 1 213 1 155 1 270 1 108 1 
43 1 123 1 78 1 369 1 308 1 287 1 213 1 155 1 62 1 
123 1 296 1 338 1 
323 1 181 1 377 1 140 1 
181 1 377 1 267 1 204 1 140 1 247 1 130 1 
267 1 161 1 365 1 
181 1 239 1 140 1 175 1 130 1 377 1 204 1 267 3 86 1 247 3 75 2 375 1 
181 1 377 1 267 2 204 1 140 1 247 2 15 1 130 1 133 1 
112 1 117 1 275 1 377 1 253 1 267 1 204 1 247 1 175 1 130 1 273 1 
181 1 377 1 267 1 204 1 247 1 175 1 130 1 
181 2 267 1 204 1 140 1 247 1 175 1 130 1 
54 1 181 1 174 1 175 1 130 2 377 1 204 2 267 2 247 2 136 1 
181 1 275 1 140 1 175 1 130 1 152 1 201 1 133 2 66 1 204 1 267 3 377 2 247 3 
325 1 181 1 112 1 352 1 140 1 175 1 130 1 133 1 6 1 117 1 377 1 204 1 267 2 247 2 273 2 
181 1 126 1 275 1 140 1 175 1 130 2 15 1 133 2 66 1 204 2 267 4 377 2 247 4 
181 1 377 1 267 1 204 1 140 1 247 1 175 1 130 1 
181 2 275 1 140 2 330 1 130 1 133 2 66 1 267 4 204 1 377 3 86 1 247 4 75 1 375 1 
181 1 92 1 140 1 175 1 81 1 130 1 131 1 133 1 377 1 204 1 267 2 247 2 
181 1 140 1 175 1 130 1 40 1 377 1 204 1 267 3 86 1 247 3 75 2 375 2 
170 1 343 2 377 2 157 1 
267 1 204 1 109 1 247 1 175 1 130 1 
181 1 377 1 267 2 204 1 140 1 247 2 175 1 152 1 130 1 133 1 
366 1 
181 1 377 1 267 1 204 1 140 1 247 1 175 1 130 1 
181 1 140 1 175 1 130 1 152 1 133 1 204 1 267 3 377 1 247 3 75 1 
66 1 275 1 377 1 330 1 
181 1 377 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 142 (13,61) (13,61) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 142 (13,61) (13,61) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 142 (13,61) (13,61) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 142 (13,61) (13,61) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 142 168 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 142 168 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 1 367 2 65 1 129 2 142 1 79 1 95 1 275 2 305 4 219 1 13 1 319 1 166 1 359 1 58 1 61 1 179 1 354 4 299 1 116 1 340 1 244 1 
127 1 367 2 65 1 129 2 142 1 79 1 95 1 275 2 305 4 219 1 13 1 319 1 166 1 359 1 58 1 61 1 179 1 354 4 299 1 116 1 340 1 244 1 
127 1 367 2 65 1 129 2 142 1 79 1 95 1 275 2 305 4 219 1 13 1 319 1 166 1 359 1 58 1 61 1 179 1 354 4 299 1 116 1 340 1 244 1 
127 1 367 2 65 1 129 2 142 1 79 1 95 1 275 2 305 4 219 1 13 1 319 1 166 1 359 1 58 1 61 1 179 1 354 4 299 1 116 1 340 1 244 1 
127 1 270 1 129 1 91 1 142 1 3 1 79 1 95 2 275 1 305 4 134 2 319 3 166 3 359 1 58 1 101 1 354 4 299 1 
127 1 270 1 367 1 129 1 27 1 273 1 275 1 305 2 319 1 58 1 101 1 104 1 354 2 299 1 340 1 244 1 
127 1 270 1 367 1 129 2 79 1 95 1 275 2 305 3 219 1 319 2 166 1 101 1 354 3 
127 1 367 1 129 2 142 1 79 1 95 1 275 2 305 4 219 1 319 1 166 2 168 1 354 4 116 1 54 1 
127 1 367 1 129 2 142 1 79 1 95 1 275 2 305 4 219 1 319 1 166 2 168 1 354 4 116 1 54 1 
107 1 7 1 38 1 
271 1 38 1 313 2 
75 1 361 1 84 2 248 2 169 2 72 2 66 2 372 2 
329 1 183 1 184 1 66 3 209 2 361 1 211 1 334 2 124 1 169 2 72 2 170 1 267 1 75 1 76 1 151 1 130 1 248 2 216 1 218 1 217 1 274 1 372 3 155 2 109 2 198 1 375 2 84 2 158 1 57 1 86 1 37 1 137 1 87 1 323 1 326 1 325 1 
361 1 84 1 43 1 248 1 169 1 72 1 66 1 30 1 372 1 52 1 
356 1 107 1 152 1 204 1 66 1 372 1 252 1 15 1 84 1 265 1 38 1 105 1 52 1 288 1 
356 1 107 1 248 1 204 1 66 1 372 1 252 1 15 1 84 1 265 2 169 1 72 1 38 1 52 1 288 2 
280 1 265 1 247 1 352 1 288 1 
107 1 280 1 265 2 352 1 38 1 45 1 339 1 288 2 
265 1 352 1 288 1 
43 1 280 1 248 1 370 1 66 1 30 1 372 1 361 1 84 1 265 1 169 1 72 1 52 1 288 1 
38 1 
107 1 297 1 280 1 265 2 352 1 38 1 339 1 288 2 
107 1 280 2 290 1 330 1 175 2 373 1 331 1 210 1 49 2 123 1 350 1 265 5 8 2 352 2 38 1 225 1 178 1 339 1 288 5 
75 1 7 1 
75 2 248 1 66 2 372 2 221 1 84 2 169 1 72 1 300 1 
232 1 380 1 324 1 
75 1 76 1 216 1 184 1 66 1 217 1 372 1 109 1 209 1 375 1 158 1 57 1 86 1 37 1 147 1 323 1 
75 1 84 3 35 1 248 3 169 3 72 1 66 3 372 3 
84 1 248 1 169 1 66 1 30 1 372 1 52 1 
84 1 248 1 169 1 72 1 66 1 372 1 52 1 300 1 221 1 
258 1 356 1 183 1 184 1 204 1 66 4 209 1 361 1 211 1 362 1 334 1 124 1 265 1 169 3 72 2 267 1 52 1 288 1 75 1 76 1 151 1 130 1 248 3 216 1 218 1 217 1 274 1 372 4 318 1 155 2 109 1 252 1 15 1 375 1 84 3 158 1 57 1 35 1 86 1 37 1 137 1 87 1 323 1 300 1 
75 1 84 2 118 1 35 1 248 1 169 1 66 2 372 2 105 1 
356 1 248 3 204 1 66 3 318 1 372 3 252 1 15 1 84 3 362 1 35 2 265 1 59 1 169 3 72 1 38 1 300 1 52 1 288 1 
248 2 66 2 372 2 84 2 35 1 169 2 72 1 380 1 300 1 324 1 
75 1 76 1 216 1 184 1 66 1 217 1 372 1 109 1 209 1 375 1 158 1 57 1 86 1 37 1 323 1 
75 1 76 1 294 1 184 1 66 1 217 1 372 1 109 1 209 1 375 1 158 1 283 1 86 1 37 1 323 1 
140 1 329 2 182 1 2 1 183 1 232 2 4 1 206 1 211 1 334 4 145 1 267 1 266 1 130 1 83 1 274 1 155 2 222 1 321 1 87 1 137 2 380 2 324 2 327 1 
259 1 356 1 84 1 248 1 169 1 66 1 372 1 52 1 
76 1 248 1 184 1 216 1 217 1 66 2 318 1 372 2 109 1 209 1 375 1 84 1 158 1 57 1 35 1 86 1 169 1 37 1 323 1 324 1 
75 1 118 1 248 4 66 5 371 1 372 5 318 1 84 5 35 2 169 4 72 1 105 1 300 1 287 1 
259 1 84 2 248 2 169 2 66 2 30 1 372 2 52 1 
10 1 189 1 
10 1 189 1 
365 1 295 1 
365 1 295 1 
365 1 295 1 
10 1 189 1 51 1 
10 1 189 1 51 1 
10 1 125 1 189 1 
41 1 365 1 10 2 344 1 295 1 189 2 
10 1 189 1 51 1 
10 1 189 1 18 1 
10 1 189 1 18 1 
10 1 189 1 18 1 
192 3 10 2 344 1 42 2 215 1 302 2 173 2 81 1 29 2 234 2 276 1 157 1 377 1 265 2 38 1 189 2 161 1 73 1 288 2 
42 1 229 1 302 1 66 2 234 1 97 1 239 1 265 1 169 2 125 1 189 1 288 1 75 1 192 1 10 1 342 1 173 1 248 2 132 1 372 2 136 1 84 2 161 1 17 1 
359 1 58 1 299 1 
58 1 104 1 299 1 
63 1 359 2 64 1 104 1 268 1 299 3 
374 1 359 1 64 1 104 1 268 1 299 2 
359 1 64 1 104 1 268 2 299 2 
140 1 280 4 182 1 20 1 23 2 207 1 237 1 331 2 49 1 6 1 210 3 71 1 240 1 8 1 265 5 9 2 339 1 313 3 288 5 342 1 107 1 271 1 196 2 175 1 136 1 321 1 352 1 225 1 38 2 226 1 17 1 327 1 
140 3 280 7 261 1 92 1 182 3 23 6 237 3 331 6 264 5 6 1 49 2 210 8 71 2 265 9 8 2 9 6 312 1 339 1 313 9 288 9 107 1 246 1 271 3 26 1 247 5 175 2 136 4 321 3 378 1 352 6 38 5 225 1 178 1 226 2 327 3 
140 1 280 2 20 1 182 1 23 2 237 1 331 2 49 1 210 3 71 1 240 1 8 1 265 3 9 2 313 4 288 3 107 1 271 2 196 1 175 1 136 1 321 1 38 3 178 1 226 1 327 1 
140 2 280 3 261 1 20 1 182 2 23 4 237 2 331 4 49 1 210 5 71 1 240 1 8 1 265 4 9 4 313 7 288 4 107 1 271 3 26 1 196 2 175 1 136 2 321 2 378 1 38 4 178 1 226 1 327 2 
76 1 7 1 171 1 
76 1 220 1 
223 1 
76 1 86 1 
76 3 0 1 86 1 284 1 171 2 323 1 
76 1 86 1 323 1 
76 1 317 1 
329 4 182 1 2 3 368 1 203 1 82 1 4 2 67 1 96 1 31 1 296 2 99 1 33 1 334 7 137 3 327 1 355 1 
329 4 182 1 2 3 368 1 203 1 82 1 4 2 67 1 96 1 31 1 296 2 99 1 33 1 334 7 137 3 327 1 355 1 
329 4 182 1 2 3 368 1 203 1 82 1 4 2 67 1 96 1 31 1 296 2 99 1 33 1 334 7 379 1 137 3 327 1 355 1 
40 3 140 3 1 1 329 16 182 4 2 10 22 4 203 2 4 5 67 5 96 1 237 3 24 1 99 2 211 1 334 31 267 1 190 1 130 1 368 2 82 1 155 2 31 2 296 3 32 1 33 1 348 1 321 3 34 1 87 1 137 15 162 1 355 1 327 4 
329 5 182 1 2 4 203 1 4 3 67 1 96 1 99 1 211 2 334 9 267 2 343 1 130 2 368 1 82 1 155 4 31 1 296 2 32 1 199 1 87 2 137 4 327 1 355 1 
63 1 90 1 305 2 5 1 209 1 98 1 166 1 359 1 360 1 100 1 101 1 104 1 286 1 127 1 270 1 367 1 195 1 129 1 316 1 217 1 275 1 319 1 109 1 375 1 58 1 298 1 37 1 255 1 354 2 299 2 
63 1 117 1 90 1 301 1 305 3 5 1 209 1 98 1 359 1 166 2 360 1 101 1 104 1 364 1 270 1 367 1 195 1 129 1 316 1 217 1 275 1 319 1 109 1 375 1 58 1 298 1 37 1 255 1 354 3 299 2 
63 1 117 1 90 1 305 2 5 1 209 1 98 1 166 2 360 1 359 1 101 1 104 1 364 1 270 1 367 1 195 1 316 1 217 1 319 1 109 1 375 1 58 1 37 1 354 2 299 2 
76 1 367 2 195 2 301 1 129 1 231 1 131 1 153 1 217 1 275 1 305 1 47 1 109 1 5 2 209 1 98 2 375 1 158 1 146 1 86 1 37 1 39 1 354 1 
63 1 117 1 90 1 305 1 5 1 209 1 98 1 359 1 360 1 100 1 104 1 127 1 367 1 195 1 129 1 316 1 217 1 275 1 109 1 375 1 58 1 298 1 37 1 255 1 354 1 299 2 
363 1 
231 1 143 1 185 2 331 2 49 1 8 1 188 2 103 1 243 1 191 4 339 3 105 1 52 1 288 5 107 1 152 1 154 2 56 1 109 2 252 1 14 1 15 1 110 2 158 2 352 6 62 2 356 1 357 1 304 2 21 1 204 1 66 1 209 2 307 1 210 2 122 2 309 1 265 5 313 2 76 1 366 1 271 2 217 1 175 1 372 1 375 2 84 1 86 1 37 1 38 2 225 1 39 1 138 1 226 1 227 1 
356 1 204 1 21 1 66 1 265 3 103 1 191 2 105 1 52 1 339 1 288 3 152 1 372 1 252 1 14 1 15 1 84 1 110 1 297 1 352 2 138 1 227 1 
356 1 204 1 21 1 66 1 265 3 103 1 191 3 105 1 52 1 339 1 288 3 107 1 152 1 372 1 154 1 252 1 14 1 15 1 84 1 297 1 352 1 38 1 138 1 227 1 
356 1 304 1 204 1 21 1 66 1 265 3 103 1 191 3 339 1 105 1 52 1 288 3 107 1 152 1 372 1 154 1 252 1 14 1 15 1 84 1 110 1 297 1 352 2 38 1 138 1 227 1 
185 2 331 1 49 1 8 1 188 2 103 1 191 6 52 1 339 3 105 1 288 5 107 5 152 1 108 1 154 4 252 1 15 1 14 1 110 4 297 1 352 7 254 1 62 2 164 1 356 1 304 4 204 1 21 1 66 1 307 1 119 1 210 1 122 2 265 5 366 1 271 2 80 1 372 1 175 1 84 1 38 5 225 1 138 1 227 1 
185 2 331 1 49 1 8 1 188 2 103 1 191 4 52 1 105 1 339 2 288 4 107 1 152 1 154 2 252 1 15 1 14 1 110 2 352 4 62 2 356 1 357 1 304 2 204 1 21 1 66 1 307 1 210 1 122 2 265 4 313 2 366 1 271 2 372 1 175 1 84 1 225 1 38 2 138 1 227 1 
356 1 304 2 204 1 21 1 66 1 185 2 331 1 307 1 210 1 119 1 49 1 122 2 265 4 8 1 188 2 103 1 191 4 339 2 105 1 52 1 288 4 366 1 107 1 271 2 152 1 154 2 175 1 372 1 252 1 14 1 15 1 110 2 84 1 352 4 254 1 38 1 225 1 138 1 62 2 227 1 164 1 
356 1 304 2 204 1 21 1 66 1 185 2 331 1 307 1 210 1 119 1 49 1 122 2 265 4 8 1 188 2 103 1 191 4 339 2 105 1 52 1 288 4 366 1 107 1 271 2 152 1 154 2 175 1 372 1 252 1 14 1 15 1 110 2 84 1 352 4 254 1 38 1 225 1 138 1 62 2 227 1 164 1 
356 1 93 1 304 2 204 1 21 1 94 1 66 1 306 2 331 1 307 1 210 1 49 1 265 4 8 1 188 2 103 1 191 4 339 2 105 1 52 1 313 2 288 4 107 1 152 1 154 2 175 1 372 1 252 1 14 1 15 1 110 2 349 2 84 1 352 4 254 1 38 1 225 1 138 1 62 2 227 1 257 1 
356 1 304 3 204 1 21 1 66 1 185 2 331 1 307 1 210 1 49 1 119 1 122 2 8 1 265 4 188 2 103 1 191 5 339 2 105 1 52 1 288 4 366 1 107 1 271 2 152 1 80 1 175 1 372 1 154 3 252 1 14 1 15 1 84 1 110 3 254 1 352 5 38 1 225 1 138 1 62 2 227 1 164 1 
356 1 304 3 204 1 21 1 66 1 185 2 331 1 307 1 210 1 49 1 119 1 122 2 8 1 265 4 188 2 103 1 191 5 339 2 105 1 52 1 288 4 366 1 107 1 271 2 152 1 80 1 175 1 372 1 154 3 252 1 14 1 15 1 84 1 110 3 254 1 352 5 38 1 225 1 138 1 62 2 227 1 164 1 
356 1 357 1 304 2 21 1 204 1 66 1 306 2 331 1 307 1 210 1 49 1 8 1 265 4 188 2 103 1 191 4 339 2 105 1 52 1 313 2 288 4 107 1 152 1 154 2 175 1 372 1 252 1 14 1 15 1 110 2 349 2 84 1 352 4 38 1 225 1 138 1 62 2 227 1 257 1 
75 2 130 1 329 3 182 1 2 2 368 1 232 1 183 1 82 1 4 2 206 1 274 1 155 2 96 1 31 1 296 1 211 1 7 1 334 6 137 3 87 1 380 1 267 1 324 1 327 1 355 1 
40 3 140 2 329 8 2 2 182 2 183 2 232 11 22 3 4 1 67 1 237 2 211 2 334 14 170 1 190 1 267 2 53 1 75 1 289 1 130 2 218 1 274 1 155 4 348 1 321 1 85 1 224 1 137 6 87 2 380 4 115 1 324 11 327 1 
329 1 183 1 184 1 66 2 209 1 70 1 211 1 334 2 169 1 147 1 170 1 267 1 53 1 75 1 76 1 78 1 130 1 248 1 251 1 216 1 217 1 218 1 274 1 372 2 318 1 155 2 109 1 375 1 158 1 84 1 57 1 35 1 86 1 37 1 87 1 137 1 380 1 323 1 
140 2 44 1 329 10 182 3 2 8 183 3 232 7 184 2 4 4 96 1 237 2 334 20 187 1 53 1 248 1 155 6 109 3 296 1 158 1 57 2 256 2 355 1 117 1 260 1 66 3 67 4 209 3 211 3 124 2 169 1 170 1 267 3 75 2 76 2 130 3 272 2 368 1 369 2 216 2 82 1 218 1 217 2 274 3 318 1 372 3 31 1 375 3 84 1 321 2 35 1 86 2 37 2 137 10 87 3 380 7 323 2 324 7 180 2 327 3 
117 1 329 1 231 1 183 2 66 1 206 1 209 7 211 2 334 2 169 1 170 1 213 1 267 2 286 1 106 1 193 1 76 3 25 1 130 2 248 1 217 2 218 1 274 2 372 1 155 4 109 8 156 1 375 8 376 1 84 1 158 2 278 1 35 1 86 2 37 2 87 2 137 1 39 1 326 2 
140 1 329 1 2 1 182 1 232 1 183 1 4 1 66 1 237 1 211 1 334 3 169 1 241 1 72 1 267 1 53 1 130 1 248 1 274 1 372 1 155 2 84 1 321 1 87 1 137 2 380 1 324 1 300 1 327 1 
140 1 130 1 329 2 2 1 182 1 232 1 183 1 67 1 206 1 274 1 155 2 211 1 334 2 145 1 87 1 380 1 267 1 324 1 
130 1 2 1 232 1 183 1 4 1 206 1 274 1 155 2 222 1 211 1 321 1 334 2 87 1 137 2 380 1 267 1 324 1 327 1 
140 1 329 2 182 1 2 2 183 1 232 2 4 1 206 1 67 1 237 1 211 1 334 4 267 1 130 1 274 1 155 2 321 1 87 1 137 2 380 2 324 2 327 1 
140 1 130 1 329 2 2 1 182 1 232 1 183 1 67 1 274 1 155 2 211 1 334 2 145 1 87 1 380 1 213 1 267 1 324 1 
130 1 2 1 232 1 183 1 4 1 274 1 155 2 222 1 211 1 321 1 334 2 87 1 137 2 380 1 213 1 267 1 324 1 327 1 
140 1 329 2 182 1 2 2 183 1 232 2 4 1 67 1 237 1 211 1 334 4 213 1 267 1 130 1 274 1 155 2 321 1 87 1 137 2 380 2 324 2 327 1 
140 1 130 1 329 2 2 2 182 1 232 2 183 1 4 1 67 1 274 1 155 2 237 1 211 1 321 1 334 4 137 2 87 1 380 2 267 1 324 2 327 1 
329 1 183 1 184 1 66 1 209 1 211 1 334 2 124 1 170 1 267 1 75 1 76 1 130 1 216 1 217 1 218 1 274 1 372 1 155 2 109 1 375 1 158 1 57 1 86 1 37 1 87 1 137 1 323 1 
329 1 183 1 184 1 66 1 69 1 209 1 211 1 334 2 283 1 170 1 267 1 75 1 76 1 130 1 294 1 217 1 218 1 274 1 372 1 155 2 109 1 375 1 158 1 86 1 37 1 87 1 137 1 323 1 
140 1 329 2 182 1 2 2 183 1 232 2 4 1 67 1 237 1 211 1 334 4 267 1 53 1 130 1 274 1 155 2 321 1 87 1 137 2 380 2 324 2 327 1 
140 1 329 2 2 2 182 1 232 2 183 1 184 1 4 1 66 1 67 1 237 1 209 1 211 1 334 4 124 1 267 1 286 1 76 1 130 1 216 1 217 1 274 1 372 1 155 2 109 1 375 1 321 1 57 1 86 1 37 1 137 2 87 1 380 2 323 1 256 1 324 2 327 1 
140 1 329 2 2 1 182 1 183 1 232 1 66 1 67 1 237 1 211 1 334 3 169 1 72 1 267 1 53 1 130 1 248 1 274 1 372 1 155 2 321 1 84 1 137 1 87 1 380 1 353 1 300 1 324 1 327 1 
40 1 328 2 140 3 329 9 182 3 2 6 22 2 4 3 67 3 237 3 333 1 211 2 334 19 242 2 190 1 267 2 245 1 345 1 130 2 155 4 135 1 348 1 199 1 321 3 112 1 36 1 322 1 87 2 137 10 327 3 
40 2 328 4 140 3 329 14 2 4 182 3 22 2 4 2 67 2 237 3 208 1 333 1 211 3 334 26 242 1 267 3 190 2 172 1 245 1 128 1 345 1 130 3 11 1 250 1 155 6 32 2 135 2 199 1 321 2 36 2 137 12 87 3 16 1 327 2 
40 3 328 4 140 4 329 20 182 5 2 8 22 4 4 4 67 4 96 1 237 4 165 1 208 1 333 1 211 3 334 41 242 1 190 3 267 3 172 1 245 1 128 1 345 1 130 3 368 1 11 1 250 1 82 1 155 6 31 1 296 1 32 1 135 1 348 1 199 1 321 4 112 1 36 2 87 3 137 21 16 1 355 1 327 5 
40 3 328 4 140 4 329 20 182 5 2 7 22 4 4 4 67 3 96 1 237 4 165 1 208 1 333 1 211 4 334 38 242 1 190 3 267 4 172 1 245 1 128 1 345 1 130 4 368 1 11 1 250 1 82 1 155 8 31 1 296 1 32 2 135 1 348 1 199 1 321 3 112 1 36 2 87 4 137 18 16 1 355 1 327 4 
40 4 328 4 140 7 329 27 182 8 2 14 22 4 4 7 67 7 96 1 237 7 208 1 333 1 211 2 334 52 242 1 190 2 267 2 172 1 245 1 128 1 345 1 130 2 368 1 11 1 250 1 82 1 155 4 31 1 296 1 32 1 135 1 348 2 199 1 321 7 36 1 224 2 87 2 137 25 16 1 355 1 327 8 
10 1 344 1 42 1 173 1 302 1 81 1 189 1 73 1 282 1 234 1 
125 1 132 1 
10 1 194 1 42 1 308 1 173 1 302 1 303 1 189 1 234 1 
192 2 10 1 344 1 42 1 215 1 302 1 173 1 81 1 29 1 234 1 157 1 377 1 265 1 38 1 189 1 161 1 73 1 288 1 
192 2 10 1 344 1 42 1 215 1 302 1 173 1 81 1 29 1 234 1 157 1 377 1 265 1 38 1 189 1 161 1 73 1 288 1 
192 2 10 1 344 1 42 1 215 1 302 1 173 1 81 1 29 1 234 1 157 1 377 1 265 1 38 1 189 1 161 1 73 1 288 1 
41 1 28 1 51 1 
41 1 28 1 51 1 
197 1 18 1 
197 1 41 1 18 1 
229 1 97 1 
42 1 280 1 229 1 302 1 66 2 234 1 97 1 239 1 265 1 125 1 169 2 189 1 288 1 75 1 192 1 10 1 342 1 291 1 173 1 248 2 132 1 29 1 372 2 157 1 136 1 84 2 17 1 
28 1 51 1 
197 1 41 1 18 1 
329 1 183 1 66 2 263 1 209 2 211 1 335 1 50 1 334 2 336 1 170 1 148 1 267 1 53 1 76 1 130 1 217 1 218 1 274 1 372 2 155 2 109 2 156 1 375 2 84 2 278 1 86 1 37 1 87 1 137 1 326 2 
63 1 139 1 117 1 90 1 358 1 217 1 109 2 209 2 98 1 359 1 375 2 360 1 58 1 37 1 104 1 255 1 114 1 299 2 286 1 
63 1 117 1 90 1 217 1 46 1 109 1 209 1 98 1 359 1 375 1 360 1 58 1 37 1 104 1 255 1 114 1 299 2 
76 1 139 1 231 1 217 1 233 1 47 1 109 1 209 1 98 1 375 1 158 1 86 1 37 1 39 1 
63 1 139 1 117 1 90 1 358 1 217 1 109 1 209 1 98 1 359 1 375 1 360 1 58 1 37 1 104 1 255 1 114 1 299 2 
120 1 
210 1 107 1 7 1 123 1 350 1 38 1 331 1 
185 1 331 1 210 1 49 1 122 1 8 1 265 1 339 1 313 1 288 1 366 1 107 1 271 1 175 1 352 1 225 1 38 2 
181 1 140 2 182 2 237 2 331 8 238 2 49 4 8 4 284 1 286 1 339 3 9 6 288 5 107 2 249 2 109 3 252 2 158 1 350 1 352 5 262 2 23 6 205 2 209 3 210 9 123 1 309 1 265 5 310 1 126 2 171 2 311 2 313 12 76 10 314 1 271 6 369 2 217 4 317 2 174 1 175 4 176 2 220 3 375 3 321 2 86 3 37 3 225 4 38 8 226 2 381 1 323 3 89 2 327 2 
40 1 140 2 141 1 182 2 23 5 22 1 205 2 237 2 208 1 331 5 210 8 49 2 309 1 265 1 8 2 338 1 190 1 339 1 9 5 313 6 288 1 107 2 128 1 271 3 11 1 250 1 176 1 175 2 321 2 352 1 225 2 38 5 226 1 16 1 327 2 
43 1 182 2 66 1 205 2 331 2 361 1 49 1 210 2 8 1 265 1 169 1 72 1 52 1 288 1 368 1 248 1 82 1 370 1 176 1 30 1 372 1 175 1 31 1 84 1 113 1 225 1 164 1 327 1 
107 1 175 1 331 1 49 1 210 1 350 1 123 1 8 1 225 1 38 1 
140 2 271 5 369 1 182 2 23 5 205 2 176 1 237 2 331 5 210 5 321 2 38 5 9 5 313 10 327 2 
107 1 265 1 352 1 38 1 339 1 288 1 
181 2 231 1 143 1 209 4 331 2 49 2 210 2 121 1 8 2 309 2 265 3 243 1 339 2 341 1 288 3 76 1 217 1 175 2 174 1 109 4 375 4 158 2 86 1 37 1 352 4 225 1 178 1 39 1 226 2 
183 1 184 1 66 3 209 1 361 1 211 1 334 1 124 1 169 2 72 2 267 1 75 1 76 1 151 1 130 1 248 2 216 1 218 1 217 1 274 1 372 3 155 2 109 1 375 1 158 1 84 2 57 1 86 1 37 1 137 1 87 1 323 1 
107 2 271 2 23 2 175 1 296 1 331 2 49 1 210 1 8 1 309 1 225 1 38 4 226 1 9 2 313 4 
277 1 42 1 173 1 
277 1 42 1 173 1 
42 1 173 1 186 1 73 1 97 1 
277 1 42 1 173 1 
42 1 173 1 74 1 
42 1 173 1 74 1 
42 1 173 1 74 1 
42 1 173 1 
10 1 189 1 
130 2 329 4 182 1 2 3 368 1 82 1 4 2 67 1 155 4 96 1 31 1 296 1 32 1 211 2 334 8 137 4 87 2 267 2 327 1 355 1 
329 3 368 1 2 2 182 1 4 2 82 1 96 1 31 1 296 1 7 1 334 6 137 3 355 1 327 1 
140 1 130 1 329 2 2 2 182 1 4 1 67 1 155 2 237 1 211 1 321 1 334 4 137 2 87 1 163 1 267 1 327 1 
40 1 140 1 329 3 182 1 2 2 22 2 4 1 67 1 237 1 348 1 321 1 334 7 137 4 190 1 327 1 
40 2 140 2 329 11 2 9 182 3 22 2 4 5 67 4 96 1 237 2 332 1 211 2 334 23 267 2 289 1 130 2 368 2 82 1 155 4 31 2 296 1 32 2 348 1 321 2 224 1 137 12 87 2 355 1 327 3 
334 1 137 1 22 1 
40 1 334 1 329 1 
140 1 130 1 329 3 369 1 182 1 2 3 4 2 67 1 155 2 237 1 211 1 321 1 334 6 87 1 137 3 267 1 163 1 327 1 
40 1 140 2 329 6 182 2 2 2 22 1 4 1 67 1 237 2 208 1 211 1 334 12 190 1 267 1 128 1 130 1 250 1 11 1 155 2 199 1 321 2 137 6 87 1 16 1 327 2 
329 3 182 1 368 1 2 2 82 1 4 1 67 1 31 1 334 6 137 3 327 1 
130 1 329 1 2 2 368 1 4 1 67 1 96 1 155 2 31 1 332 1 32 1 211 1 334 3 137 2 87 1 267 1 355 1 
130 1 329 5 368 2 2 5 182 2 4 3 82 1 67 2 155 2 31 2 211 1 199 1 334 10 113 1 87 1 137 5 267 1 327 2 
140 1 130 1 329 2 182 1 2 1 67 1 155 2 211 1 199 1 334 2 87 1 267 1 
140 1 130 1 329 2 2 2 182 1 4 1 67 1 155 2 237 1 211 1 321 1 199 1 334 4 137 2 87 1 267 1 327 1 
130 3 329 1 368 1 2 2 4 1 67 1 155 6 31 1 32 1 332 1 211 3 199 1 334 3 112 1 137 2 87 3 267 3 
40 3 140 3 1 1 329 16 182 5 2 12 22 4 4 7 67 5 96 1 237 3 332 1 211 5 334 34 190 1 267 5 130 5 368 3 82 2 155 10 31 3 296 1 32 2 348 1 34 1 199 1 321 3 112 1 137 18 87 5 162 1 163 1 355 1 327 5 
40 1 329 4 182 1 2 2 22 1 4 2 96 1 211 1 334 8 190 1 267 1 130 1 368 1 250 1 82 1 155 2 31 1 296 1 199 1 137 4 87 1 327 1 355 1 
40 1 140 1 329 6 182 2 2 3 22 2 4 2 67 1 96 1 237 1 211 2 334 11 190 1 267 2 130 2 368 1 250 1 82 1 155 4 31 1 296 1 348 1 199 1 137 5 87 2 163 1 327 1 355 1 
40 1 140 2 329 9 182 3 2 4 22 1 4 3 67 1 96 1 237 2 208 1 211 3 334 19 190 1 267 3 128 1 130 3 368 1 11 1 250 1 82 1 155 6 31 1 296 1 32 1 199 1 321 2 137 10 87 3 163 1 16 1 355 1 327 3 
40 1 140 2 329 10 182 3 2 5 22 1 4 3 67 2 96 1 237 2 208 1 211 3 334 17 190 1 267 3 128 1 130 3 368 1 250 1 11 1 82 1 155 6 31 1 296 1 32 1 199 1 321 1 137 7 87 3 163 1 16 1 355 1 327 2 
40 1 329 4 182 1 2 2 22 1 4 2 96 1 211 1 334 8 190 1 267 1 130 1 368 1 250 1 82 1 155 2 31 1 296 1 199 1 137 4 87 1 327 1 355 1 
40 1 140 2 329 6 182 2 2 2 22 1 4 1 67 1 237 2 208 1 211 1 334 12 190 1 267 1 128 1 130 1 250 1 11 1 155 2 199 1 321 2 137 6 87 1 16 1 327 2 
40 1 140 2 329 10 182 3 2 5 22 1 4 3 67 2 96 1 237 2 208 1 211 4 334 18 190 1 267 4 128 1 130 4 368 1 11 1 250 1 82 1 155 8 31 1 296 1 32 2 199 1 321 1 137 8 87 4 163 1 16 1 355 1 327 2 
40 1 140 3 329 9 182 3 2 6 22 1 4 3 67 3 237 3 208 1 211 4 334 16 190 1 267 4 128 1 130 4 11 1 250 1 155 8 32 2 199 1 321 2 112 1 137 7 87 4 16 1 327 2 
329 3 368 3 2 6 182 1 4 3 82 1 67 3 96 2 31 3 334 7 137 4 327 1 355 1 
40 1 140 2 329 10 182 3 2 4 22 1 4 3 67 1 96 1 237 2 208 1 211 4 334 18 190 1 267 4 128 1 130 4 368 1 11 1 250 1 82 1 155 8 31 1 296 1 32 2 199 1 321 1 112 1 137 8 87 4 16 1 355 1 327 2 
75 1 84 1 118 1 346 1 66 1 372 1 105 1 
75 1 228 1 118 1 292 1 346 1 66 1 372 1 167 1 84 1 159 1 88 1 105 1 
76 1 375 1 7 1 158 1 231 1 86 1 37 1 217 1 39 1 109 1 209 1 
75 1 76 1 248 1 184 1 217 1 66 2 372 2 109 1 209 1 375 1 84 1 158 1 35 1 57 1 86 1 169 1 37 1 323 1 
356 1 181 1 184 1 66 2 209 1 169 1 52 1 75 1 76 3 248 2 249 1 217 1 317 1 372 2 109 1 15 1 375 1 84 2 57 1 35 1 86 2 37 1 323 2 
356 1 181 1 184 1 66 2 209 2 283 1 169 1 52 1 75 1 76 3 150 1 248 2 249 1 217 1 317 1 372 2 109 2 15 1 375 2 84 2 35 1 86 2 37 1 323 2 
181 1 200 1 48 1 209 3 265 2 171 1 288 2 76 4 107 1 150 1 249 1 217 1 317 1 220 1 109 3 252 1 375 3 158 1 86 1 37 1 352 1 38 1 323 1 
76 4 107 1 181 1 150 1 249 1 217 1 317 1 109 3 220 1 252 1 209 3 375 3 158 1 265 2 86 1 352 1 37 1 38 1 171 1 323 1 89 1 288 2 
193 1 375 1 37 1 217 1 109 1 209 1 
193 1 76 3 117 1 25 1 217 3 236 1 109 7 209 6 375 7 376 1 158 2 278 1 111 1 86 2 284 1 37 2 337 1 323 1 286 1 326 1 106 1 
329 3 182 1 2 2 232 1 183 2 184 1 4 2 66 2 96 1 209 1 211 2 334 6 50 1 124 1 169 1 267 2 53 1 286 1 75 2 76 1 130 2 368 1 248 1 216 1 82 1 217 1 274 2 372 2 155 4 31 1 109 1 296 1 375 1 84 1 35 1 57 1 86 1 37 1 137 3 87 2 380 1 323 1 256 1 324 1 180 1 327 1 355 1 
280 1 262 1 331 1 209 1 210 1 49 2 238 1 123 1 8 2 265 3 126 1 171 1 339 1 288 3 76 2 107 1 175 2 174 1 109 1 220 1 252 1 375 1 158 1 350 1 352 2 38 1 225 2 89 1 
193 1 76 2 314 1 217 2 109 2 209 2 375 2 86 1 284 1 37 1 171 1 323 1 286 1 
76 1 150 1 55 1 231 1 217 1 109 4 209 4 375 4 158 1 86 1 37 1 39 1 286 1 
76 1 181 1 19 1 217 2 133 1 109 2 209 2 375 2 111 1 187 1 86 1 37 1 337 1 323 1 
90 1 375 1 158 1 58 1 37 1 217 1 104 1 299 1 109 1 209 1 
76 1 117 1 375 2 278 1 335 1 86 1 37 1 217 1 286 1 109 2 209 2 
76 3 25 1 181 1 55 1 231 1 217 2 109 5 209 4 375 5 158 1 278 1 86 2 37 2 39 1 286 1 106 1 
76 3 181 1 55 1 231 1 347 1 217 2 109 5 209 4 375 5 158 1 278 1 86 2 37 2 39 1 286 1 106 1 
75 1 76 1 248 1 184 1 217 1 66 2 372 2 109 1 209 1 375 1 84 1 158 1 35 1 283 1 86 1 169 1 37 1 323 1 
76 1 181 1 217 2 236 1 109 1 209 1 375 1 111 1 86 1 284 1 37 1 337 1 323 1 
84 1 281 1 336 1 351 1 66 1 148 1 372 1 263 1 214 1 
281 1 60 1 144 1 
75 1 315 1 281 1 351 1 214 1 
75 1 356 1 107 1 77 1 280 1 281 1 315 2 204 1 144 1 252 1 15 1 362 1 265 2 60 1 351 2 38 1 52 1 288 2 214 2 
270 1 7 1 101 1 319 1 
270 1 129 1 101 1 305 1 275 1 354 1 319 1 
367 1 195 1 305 1 
279 1 127 1 270 1 129 1 293 1 275 1 305 3 319 1 101 1 285 1 354 3 340 2 
166 1 270 1 129 1 101 1 305 2 275 1 354 2 134 1 319 1 
127 1 129 1 3 1 95 1 275 1 305 1 319 1 359 1 58 1 354 1 299 1 
127 1 129 1 101 1 305 1 275 1 354 1 319 1 
127 1 270 1 129 1 101 2 305 1 275 1 354 1 
127 1 177 1 212 1 129 2 201 1 101 1 305 2 275 2 354 2 319 1 
127 1 270 1 129 1 230 1 275 1 305 1 101 1 354 1 116 1 
63 1 127 1 270 1 129 1 202 1 275 1 305 2 319 1 359 1 166 1 58 1 101 1 104 1 354 2 299 2 
127 1 270 1 129 2 91 1 79 1 95 1 275 2 305 4 134 1 319 2 166 2 101 1 354 4 
127 1 270 1 129 1 101 1 305 1 275 1 354 1 319 1 
279 1 270 2 129 1 230 1 293 1 79 1 95 1 305 4 275 1 319 3 166 2 101 2 354 4 340 1 
166 1 127 1 270 1 129 1 101 1 149 1 305 2 275 1 354 2 68 1 319 1 54 1 
279 2 127 1 270 1 129 1 293 1 275 1 305 3 319 1 253 1 101 1 354 3 340 2 
269 1 160 1 12 2 319 2 
127 1 129 1 305 1 275 1 354 1 235 1 
166 1 127 1 270 1 320 1 129 1 101 1 305 2 275 1 354 2 319 1 
102 1 
127 1 270 1 129 1 101 1 305 1 275 1 354 1 319 1 
127 1 270 1 129 1 275 1 305 3 319 1 166 1 320 1 101 1 354 3 340 1 
230 1 79 1 95 1 319 1 
101 1 319 1 

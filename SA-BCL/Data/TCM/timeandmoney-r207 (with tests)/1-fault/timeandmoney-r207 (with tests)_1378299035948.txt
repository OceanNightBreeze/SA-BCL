#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
26 1 289 4 320 1 295 1 366 1 101 2 371 6 178 1 228 9 86 2 299 1 300 2 187 1 14 2 231 3 34 5 253 1 115 1 116 1 92 2 70 1 71 1 24 2 307 2 213 1 144 1 146 1 216 9 
26 1 289 4 320 1 295 1 366 1 101 2 371 6 178 1 228 9 86 2 299 1 300 2 187 1 14 2 231 3 34 5 253 1 115 1 116 1 92 2 70 1 71 1 24 2 307 2 213 1 144 1 146 1 216 9 
26 1 289 5 320 1 295 1 366 1 101 2 371 7 178 1 228 10 86 2 299 1 300 2 187 1 14 2 231 4 34 6 253 1 115 1 116 1 92 2 70 1 71 1 24 2 307 2 213 1 144 1 146 1 216 10 
289 3 320 1 295 1 366 1 101 2 371 4 178 1 228 7 86 2 299 1 300 1 187 1 14 2 231 2 34 4 253 1 115 1 116 1 92 2 70 1 71 1 24 2 307 2 213 1 144 1 146 1 216 7 
26 1 289 2 231 1 14 1 253 1 34 3 116 1 92 1 71 1 101 1 307 1 371 3 228 4 86 1 146 1 216 4 299 1 300 2 
107 1 14 1 34 1 115 1 116 1 92 1 70 1 71 1 101 1 24 1 227 1 228 2 86 1 323 1 216 2 299 1 
289 1 231 1 34 2 116 1 71 1 366 1 101 2 24 1 371 1 228 3 86 2 216 3 299 1 
26 1 289 4 51 1 320 1 366 1 101 2 371 7 103 1 228 9 86 2 299 1 300 2 231 3 14 1 34 5 253 1 116 1 92 1 71 1 24 1 307 1 213 1 146 1 216 9 
26 1 289 4 51 1 320 1 366 1 101 2 371 7 103 1 228 9 86 2 299 1 300 2 231 3 14 1 34 5 253 1 116 1 92 1 71 1 24 1 307 1 213 1 146 1 216 9 
13 1 268 1 343 1 
13 1 331 1 347 2 
6 2 243 2 15 2 238 2 97 1 156 1 271 2 340 2 
196 1 198 1 270 1 97 1 271 2 98 2 5 1 28 1 57 1 202 1 6 2 367 1 243 3 296 1 176 1 246 1 370 1 374 2 10 1 156 1 11 2 186 1 33 1 15 3 351 1 35 2 378 1 336 1 302 1 72 1 118 1 305 2 238 2 95 1 122 1 340 2 25 1 
6 1 243 1 15 1 352 1 238 1 97 1 287 1 344 1 271 1 340 1 
197 1 13 1 343 1 15 1 362 1 221 1 337 1 258 1 194 1 243 1 93 1 94 1 238 1 287 1 
197 1 13 1 343 1 15 1 362 2 221 1 271 1 337 1 194 2 6 1 243 1 93 1 238 1 287 1 340 1 
194 1 290 1 191 1 334 1 362 1 
194 2 13 1 290 1 343 1 334 1 134 1 362 2 250 1 
194 1 290 1 362 1 
15 1 334 1 352 1 362 1 97 1 344 1 271 1 194 1 6 1 243 1 238 1 287 1 340 1 265 1 
13 1 
194 2 13 1 290 1 343 1 318 1 334 1 362 2 250 1 
13 1 290 2 343 1 0 1 334 2 138 1 362 5 54 2 303 1 194 5 345 1 308 1 133 1 166 1 250 1 274 1 106 2 87 2 357 1 
268 1 156 1 
15 2 271 1 6 1 243 2 152 1 238 2 105 1 156 2 340 1 
338 1 114 1 358 1 
196 1 198 1 15 1 35 1 270 1 173 1 98 1 72 1 243 1 367 1 305 1 118 1 246 1 95 1 122 1 156 1 
196 1 198 1 126 1 15 2 114 1 35 1 270 1 353 1 271 1 98 1 72 1 6 1 367 1 243 2 118 1 305 1 246 1 238 1 95 1 122 1 
6 3 243 3 15 3 353 1 238 3 156 1 271 3 340 1 
6 1 243 1 15 1 238 1 287 1 344 1 271 1 
6 1 243 1 15 1 152 1 238 1 287 1 105 1 271 1 340 1 
196 1 197 1 198 1 126 1 270 1 362 1 221 1 97 1 148 1 271 3 98 1 5 1 28 1 57 1 202 1 6 3 367 1 243 4 246 1 370 1 152 1 374 1 156 1 88 1 11 2 33 1 15 4 351 1 35 1 353 1 336 1 302 1 72 1 337 1 194 1 93 1 118 1 305 1 238 3 287 1 95 1 122 1 340 2 25 1 
258 1 6 1 243 2 15 2 353 1 238 2 156 1 263 1 271 1 
197 1 13 1 126 1 15 3 362 1 353 2 221 1 148 1 271 3 337 1 194 1 6 3 273 1 243 3 93 1 152 1 238 3 287 1 340 1 
15 2 114 1 353 1 271 2 6 2 243 2 152 1 238 2 358 1 340 1 
196 1 198 1 15 1 35 1 270 1 98 1 72 1 243 1 367 1 305 1 118 1 246 1 95 1 122 1 156 1 
196 1 198 1 15 1 35 1 98 1 72 1 243 1 367 1 305 1 118 1 373 1 95 1 325 1 122 1 156 1 
341 1 50 1 291 1 131 1 5 1 80 1 57 1 202 1 100 1 82 1 176 2 154 1 370 1 374 4 326 1 11 2 64 1 351 1 114 2 336 2 302 1 338 2 145 1 358 2 
6 1 243 1 150 1 15 1 221 1 238 1 287 1 271 1 
126 1 15 5 353 2 91 1 271 4 258 1 6 4 243 5 152 1 238 5 349 1 263 1 156 1 340 1 
6 2 150 1 243 2 15 2 238 2 287 1 344 1 271 2 
276 1 324 1 
276 1 324 1 
368 1 177 1 
368 1 177 1 
368 1 177 1 
218 1 276 1 324 1 
218 1 276 1 324 1 
276 1 324 1 61 1 
368 1 177 1 16 1 247 1 276 2 324 2 
218 1 276 1 324 1 
342 1 276 1 324 1 
342 1 276 1 324 1 
342 1 276 1 324 1 
328 1 315 2 13 1 16 1 276 2 27 3 362 2 37 1 139 1 3 1 224 1 194 2 8 1 214 1 43 2 248 2 262 2 324 2 251 2 
315 1 76 1 27 1 128 1 362 1 271 2 130 1 6 2 243 2 248 1 324 1 156 1 61 1 275 1 15 2 276 1 254 1 139 1 194 1 43 1 262 1 238 2 264 1 360 1 
14 1 307 1 92 1 
14 1 227 1 92 1 
380 1 307 2 14 3 227 1 104 1 283 1 
380 1 307 1 132 1 14 2 227 1 104 1 
380 1 307 1 14 2 227 1 104 2 
290 1 0 1 343 1 199 1 128 1 362 5 171 1 54 1 294 1 130 1 131 1 133 2 154 1 347 3 249 1 348 1 250 1 326 1 106 1 87 1 64 1 110 1 13 2 331 1 66 1 334 4 138 3 279 2 257 2 40 2 194 5 360 1 
290 6 343 1 0 1 319 5 362 9 53 1 294 1 54 2 131 3 133 6 154 3 347 9 249 2 250 1 326 3 106 2 87 2 183 1 64 3 110 3 13 5 331 3 66 2 162 1 191 5 334 7 138 8 277 1 279 6 379 1 164 1 40 6 194 9 166 1 360 4 
343 1 199 1 362 3 171 1 54 1 131 1 154 1 133 2 347 4 249 1 326 1 106 1 87 1 64 1 13 3 110 1 331 2 66 1 334 2 138 3 279 2 257 1 40 2 194 3 166 1 360 1 
343 1 199 1 362 4 171 1 54 1 131 2 154 2 133 4 347 7 249 1 326 2 106 1 87 1 183 1 64 2 13 4 110 2 331 3 66 1 162 1 334 3 138 5 279 4 379 1 257 2 40 4 194 4 166 1 360 2 
367 1 301 1 268 1 
367 1 121 1 
311 1 
367 1 118 1 
367 3 118 1 301 2 198 1 309 1 363 1 
367 1 118 1 198 1 
367 1 377 1 
220 1 280 1 233 1 336 3 242 1 282 1 82 3 100 2 346 1 83 1 176 4 261 1 154 1 374 7 142 1 203 2 326 1 
220 1 280 1 233 1 336 3 242 1 282 1 82 3 100 2 346 1 83 1 176 4 261 1 154 1 374 7 142 1 203 2 326 1 
220 1 280 1 233 1 336 3 242 1 282 1 82 3 100 2 346 1 83 1 212 1 176 4 261 1 154 1 374 7 142 1 203 2 326 1 
267 1 220 1 242 2 5 1 131 3 57 1 82 10 100 5 346 1 83 2 176 16 84 3 370 1 154 4 374 31 203 3 326 4 11 2 63 1 64 3 110 3 39 1 233 2 280 5 256 4 336 15 282 2 302 1 285 1 261 1 142 1 195 1 288 1 168 1 
52 1 220 1 242 1 5 2 57 2 100 3 82 4 346 1 176 5 83 1 154 1 370 2 374 9 203 2 326 1 11 4 113 1 233 1 280 1 336 4 302 2 282 1 261 1 195 1 
196 1 98 1 56 1 29 1 101 1 151 1 371 1 227 1 228 2 86 1 299 1 298 1 14 2 232 1 34 1 35 1 116 1 278 1 92 1 21 1 71 1 283 1 305 1 24 1 307 1 381 1 216 2 122 1 48 1 359 1 
196 1 129 1 170 1 98 1 56 1 29 1 101 1 371 2 227 1 228 3 86 1 181 1 299 1 298 1 14 2 232 1 34 1 35 1 116 1 92 1 21 1 283 1 305 1 24 1 307 1 381 1 216 3 122 1 48 1 359 1 
196 1 129 1 98 1 56 1 29 1 371 2 227 1 228 2 181 1 299 1 298 1 14 2 232 1 34 1 35 1 116 1 92 1 283 1 24 1 305 1 381 1 307 1 216 2 122 1 359 1 
196 1 1 1 350 1 17 1 332 1 170 1 35 1 98 1 29 2 367 1 101 1 118 1 24 2 305 1 381 2 228 1 59 1 86 1 95 1 122 1 216 1 182 1 359 2 
196 1 129 1 98 1 56 1 29 1 101 1 227 1 228 1 86 1 298 1 14 2 232 1 35 1 278 1 92 1 21 1 71 1 283 1 305 1 24 1 307 1 381 1 216 1 122 1 48 1 359 1 
46 1 
196 1 197 1 290 6 343 1 0 1 1 1 200 1 293 2 54 1 98 2 149 1 7 2 243 1 347 2 249 1 250 3 106 1 108 2 13 2 15 1 19 1 354 1 355 2 73 2 258 1 118 1 305 2 122 1 314 1 266 1 362 5 221 1 367 1 226 1 133 2 322 1 87 1 184 1 330 1 189 1 331 2 332 1 35 2 138 2 36 4 335 2 235 2 337 1 194 5 93 1 94 1 238 1 95 2 287 1 47 1 
197 1 266 1 290 2 318 1 362 3 221 1 243 1 250 1 184 1 15 1 19 1 36 2 335 1 337 1 258 1 194 3 93 1 94 1 238 1 287 1 47 1 314 1 
197 1 266 1 290 1 343 1 318 1 362 3 221 1 243 1 250 1 184 1 108 1 13 1 15 1 19 1 36 3 337 1 258 1 194 3 93 1 94 1 238 1 287 1 47 1 314 1 
197 1 266 1 290 2 343 1 318 1 362 3 221 1 293 1 243 1 250 1 184 1 108 1 13 1 15 1 19 1 36 3 335 1 337 1 258 1 194 3 93 1 94 1 238 1 287 1 47 1 314 1 
197 1 290 7 343 5 0 1 293 4 54 1 149 1 243 1 7 2 250 3 106 1 108 4 13 5 15 1 19 1 165 1 355 2 258 1 73 2 314 1 266 1 318 1 219 1 362 5 221 1 174 1 226 1 133 1 87 1 184 1 331 2 36 6 138 1 335 4 281 1 337 1 235 2 194 5 93 1 94 1 238 1 143 1 287 1 47 1 
197 1 290 4 0 1 343 1 293 2 54 1 149 1 243 1 7 2 347 2 250 2 106 1 108 2 13 2 15 1 19 1 355 2 258 1 73 2 314 1 266 1 362 4 221 1 226 1 133 1 322 1 87 1 184 1 331 2 36 4 138 1 335 2 337 1 235 2 194 4 93 1 94 1 238 1 287 1 47 1 
197 1 266 1 290 4 343 1 0 1 219 1 362 4 293 2 221 1 54 1 149 1 174 1 7 2 243 1 226 1 133 1 250 2 106 1 87 1 184 1 108 2 13 1 331 2 15 1 19 1 138 1 36 4 335 2 235 2 337 1 355 2 73 2 258 1 194 4 93 1 94 1 238 1 143 1 287 1 47 1 314 1 
197 1 266 1 290 4 343 1 0 1 219 1 362 4 293 2 221 1 54 1 149 1 174 1 7 2 243 1 226 1 133 1 250 2 106 1 87 1 184 1 108 2 13 1 331 2 15 1 19 1 138 1 36 4 335 2 235 2 337 1 355 2 73 2 258 1 194 4 93 1 94 1 238 1 143 1 287 1 47 1 314 1 
197 1 266 1 290 4 343 1 0 1 362 4 293 2 221 1 54 1 174 1 81 2 7 2 243 1 226 1 133 1 347 2 250 2 106 1 87 1 184 1 108 2 109 2 13 1 111 1 15 1 19 1 138 1 36 4 255 1 335 2 235 2 337 1 258 1 194 4 93 1 209 1 94 1 238 1 287 1 47 1 314 1 
197 1 266 1 290 5 343 1 0 1 219 1 362 4 221 1 293 3 54 1 149 1 174 1 7 2 243 1 226 1 133 1 250 2 106 1 87 1 184 1 108 3 13 1 331 2 15 1 19 1 138 1 36 5 335 3 281 1 235 2 337 1 355 2 73 2 258 1 194 4 93 1 94 1 143 1 238 1 287 1 47 1 314 1 
197 1 266 1 290 5 343 1 0 1 219 1 362 4 221 1 293 3 54 1 149 1 174 1 7 2 243 1 226 1 133 1 250 2 106 1 87 1 184 1 108 3 13 1 331 2 15 1 19 1 138 1 36 5 335 3 281 1 235 2 337 1 355 2 73 2 258 1 194 4 93 1 94 1 143 1 238 1 287 1 47 1 314 1 
197 1 290 4 0 1 343 1 293 2 54 1 243 1 7 2 347 2 250 2 106 1 108 2 109 2 13 1 15 1 19 1 255 1 258 1 314 1 266 1 362 4 221 1 81 2 226 1 133 1 322 1 87 1 184 1 36 4 138 1 335 2 337 1 235 2 194 4 93 1 94 1 238 1 287 1 47 1 
268 1 351 1 114 1 220 1 336 3 302 1 282 1 80 1 5 1 202 1 57 1 82 2 100 2 346 1 176 3 83 1 261 1 154 1 370 1 338 1 374 6 203 1 326 1 156 2 358 1 11 2 
77 1 5 1 131 1 57 1 202 1 82 2 100 1 176 6 102 1 84 2 370 1 154 2 374 10 326 1 11 2 136 1 64 2 110 2 351 1 114 8 280 1 256 2 336 4 302 1 236 1 211 1 338 8 358 3 168 1 
196 1 198 1 126 1 270 1 173 1 98 1 271 1 5 1 202 1 57 1 28 1 175 1 6 1 367 1 243 2 244 1 176 1 246 1 370 1 374 2 10 1 156 1 11 2 15 2 351 1 35 1 353 1 336 1 302 1 72 1 118 1 305 1 211 1 238 1 95 1 339 1 122 1 358 1 
196 2 198 2 96 2 98 3 5 3 57 3 202 3 100 4 6 1 99 2 346 1 243 3 246 2 154 3 203 1 10 1 60 2 156 2 11 6 64 2 110 2 15 3 351 3 114 7 353 1 302 3 72 2 305 3 211 1 118 2 260 1 261 1 122 2 358 7 126 1 129 1 270 2 220 1 271 1 131 2 28 1 30 1 82 8 367 2 31 2 83 1 176 10 370 3 374 20 326 3 32 1 33 2 35 3 280 4 336 10 282 1 338 7 238 1 95 1 
196 2 361 1 1 1 129 1 201 1 271 1 98 7 80 1 5 2 57 2 202 2 28 1 6 1 243 1 367 3 245 1 151 1 176 1 370 2 374 2 10 1 185 1 11 4 186 2 15 1 351 2 332 1 35 8 353 1 336 1 302 2 305 8 118 2 74 1 44 1 238 1 95 2 122 2 313 1 
271 1 5 1 131 1 57 1 202 1 82 1 100 1 6 1 243 1 176 1 152 1 370 1 154 1 374 3 326 1 11 2 64 1 159 1 110 1 15 1 351 1 114 1 336 2 302 1 211 1 338 1 238 1 358 1 340 1 
341 1 64 1 351 1 114 1 280 1 302 1 80 1 5 1 202 1 57 1 82 1 176 2 370 1 154 1 338 1 374 2 358 1 11 2 
351 1 114 1 336 2 302 1 80 1 5 1 131 1 202 1 57 1 82 1 100 1 370 1 338 1 374 2 145 1 326 1 358 1 11 2 
5 1 80 1 131 1 57 1 202 1 82 2 100 1 176 2 154 1 370 1 374 4 326 1 11 2 64 1 110 1 351 1 114 2 280 1 336 2 302 1 338 2 358 2 
341 1 64 1 351 1 114 1 280 1 302 1 5 1 202 1 57 1 82 1 176 2 370 1 154 1 338 1 374 2 313 1 358 1 11 2 
351 1 114 1 336 2 302 1 5 1 131 1 202 1 57 1 82 1 100 1 370 1 338 1 374 2 145 1 326 1 313 1 358 1 11 2 
5 1 131 1 57 1 202 1 82 2 100 1 176 2 154 1 370 1 374 4 326 1 11 2 64 1 110 1 351 1 114 2 280 1 336 2 302 1 338 2 313 1 358 2 
64 1 110 1 351 1 114 2 280 1 336 2 302 1 131 1 5 1 202 1 57 1 100 1 82 2 176 2 370 1 154 1 338 2 374 4 326 1 358 2 11 2 
196 1 33 1 198 1 15 1 351 1 35 1 270 1 336 1 302 1 98 1 5 1 72 1 28 1 57 1 202 1 243 1 367 1 305 1 118 1 176 1 246 1 370 1 374 2 10 1 95 1 122 1 156 1 11 2 
196 1 198 1 98 1 5 1 202 1 57 1 28 1 58 1 367 1 243 1 176 1 370 1 374 2 373 1 10 1 325 1 156 1 11 2 15 1 351 1 35 1 336 1 302 1 72 1 118 1 305 1 95 1 122 1 
5 1 131 1 57 1 202 1 82 2 100 1 176 2 154 1 370 1 374 4 326 1 11 2 64 1 110 1 351 1 114 2 280 1 336 2 302 1 211 1 338 2 358 2 
196 1 198 1 96 1 270 1 98 1 131 1 5 1 202 1 57 1 100 1 82 2 367 1 243 1 176 2 151 1 246 1 154 1 370 1 374 4 326 1 11 2 64 1 33 1 110 1 15 1 351 1 114 2 35 1 280 1 336 2 302 1 72 1 305 1 118 1 338 2 122 1 358 2 
271 1 131 1 5 1 57 1 202 1 82 1 6 1 243 1 176 2 152 1 370 1 154 1 374 3 326 1 11 2 64 1 110 1 15 1 351 1 114 1 280 1 193 1 336 1 302 1 211 1 338 1 238 1 340 1 358 1 
267 1 55 2 365 1 364 1 5 2 131 3 57 2 100 3 82 6 297 1 176 9 84 1 370 2 154 3 372 2 374 19 326 3 11 4 64 3 230 1 110 3 112 1 18 1 113 1 207 1 280 3 256 2 336 10 302 2 168 1 
267 2 2 1 292 1 55 1 365 1 5 3 131 2 57 3 82 4 100 2 297 1 176 14 84 2 370 3 154 3 372 4 374 26 85 1 326 2 11 6 229 1 188 1 64 3 110 3 112 2 18 1 113 1 280 2 207 2 256 2 336 12 302 3 120 1 195 2 
2 1 292 1 55 1 5 3 57 3 100 4 297 1 346 1 154 5 203 1 11 6 64 4 110 4 18 1 112 2 113 1 207 1 256 4 302 3 120 1 261 1 168 1 267 3 220 1 223 1 131 4 365 1 82 8 176 20 83 1 84 3 370 3 374 41 372 4 85 1 326 5 229 1 188 1 230 1 280 4 336 21 282 1 195 1 
267 3 2 1 220 1 292 1 55 1 223 1 365 1 5 4 131 3 57 4 100 4 82 7 346 1 297 1 83 1 176 20 84 3 370 4 154 5 372 4 374 38 203 1 85 1 326 4 11 8 229 1 188 1 64 4 230 1 110 4 112 2 18 1 113 1 207 1 280 3 256 4 336 18 282 1 302 4 261 1 120 1 195 2 168 1 
267 2 2 1 220 1 292 1 55 1 365 1 5 2 131 7 57 2 100 7 82 14 346 1 297 1 83 1 176 27 84 4 370 2 154 8 372 4 374 52 203 1 85 1 326 8 11 4 229 1 136 2 188 1 64 7 110 7 112 1 18 1 113 1 207 1 280 7 256 4 336 25 282 1 302 2 261 1 120 1 195 1 168 2 
328 1 315 1 204 1 16 1 276 1 43 1 248 1 262 1 324 1 224 1 
254 1 61 1 
315 1 160 1 75 1 276 1 43 1 248 1 262 1 179 1 324 1 
328 1 315 1 13 1 16 1 276 1 27 2 362 1 37 1 139 1 224 1 194 1 8 1 214 1 43 1 248 1 262 1 324 1 251 1 
328 1 315 1 13 1 16 1 276 1 27 2 362 1 37 1 139 1 224 1 194 1 8 1 214 1 43 1 248 1 262 1 324 1 251 1 
328 1 315 1 13 1 16 1 276 1 27 2 362 1 37 1 139 1 224 1 194 1 8 1 214 1 43 1 248 1 262 1 324 1 251 1 
218 1 247 1 117 1 
218 1 247 1 117 1 
342 1 239 1 
342 1 247 1 239 1 
76 1 264 1 
315 1 76 1 27 1 128 1 362 1 271 2 130 1 6 2 243 2 248 1 251 1 324 1 156 1 61 1 158 1 275 1 15 2 276 1 334 1 37 1 254 1 194 1 43 1 262 1 238 2 264 1 360 1 
218 1 117 1 
342 1 247 1 239 1 
196 1 241 1 201 1 98 2 5 1 202 1 57 1 28 1 367 1 243 2 245 1 176 1 369 1 370 1 374 2 321 1 10 1 327 1 11 2 186 2 15 2 351 1 35 2 336 1 302 1 118 1 305 2 211 1 238 2 122 1 123 1 
196 1 14 2 232 1 129 1 35 2 92 1 21 1 98 2 56 1 283 1 225 1 284 1 305 2 307 1 151 1 227 1 122 1 359 1 124 1 
196 1 329 1 14 2 232 1 129 1 35 1 92 1 21 1 98 1 56 1 283 1 284 1 305 1 307 1 227 1 122 1 359 1 
196 1 127 1 1 1 332 1 35 1 98 1 367 1 225 1 118 1 305 1 59 1 95 1 122 1 359 1 
196 1 14 2 232 1 129 1 35 1 92 1 21 1 98 1 56 1 283 1 225 1 284 1 305 1 307 1 227 1 122 1 359 1 124 1 
23 1 
13 1 268 1 343 1 308 1 133 1 138 1 303 1 
290 1 13 2 343 1 0 1 331 1 362 1 138 1 54 1 149 1 355 1 194 1 73 1 133 1 347 1 250 1 106 1 87 1 
196 4 240 2 198 3 290 5 343 2 0 4 54 4 98 3 99 2 151 1 154 2 347 12 249 2 155 2 250 3 106 4 64 2 301 2 13 8 110 2 354 1 69 2 303 1 259 2 118 3 305 3 308 1 121 3 122 3 316 1 217 2 169 1 317 1 363 1 362 5 222 1 131 2 272 2 367 10 133 8 375 2 180 1 326 2 87 4 89 2 377 2 331 6 35 3 138 9 279 6 337 2 40 6 194 5 95 1 
290 1 267 1 0 2 343 2 2 1 362 1 292 1 54 2 131 2 84 1 133 5 154 2 347 6 375 2 249 1 250 1 326 2 106 2 376 1 87 2 229 1 188 1 64 2 13 5 110 2 331 3 138 8 354 1 69 1 279 5 234 1 256 1 40 5 194 1 120 1 
0 1 362 1 97 1 54 1 344 1 271 1 6 1 243 1 83 1 154 2 133 2 375 2 326 1 106 1 87 1 15 1 352 1 138 2 69 1 282 1 194 1 261 1 237 1 143 1 238 1 287 1 340 1 265 1 
13 1 0 1 343 1 138 1 54 1 303 1 308 1 133 1 106 1 87 1 
64 2 110 2 13 5 331 5 138 5 69 1 279 5 131 2 40 5 99 1 154 2 133 5 347 10 375 2 326 2 
194 1 13 1 290 1 343 1 362 1 250 1 
196 1 49 1 169 2 290 4 0 1 1 1 200 1 317 1 362 3 54 2 98 4 367 1 133 2 249 2 250 2 106 2 87 2 62 1 330 1 332 1 35 4 138 2 354 2 194 3 118 1 305 4 166 1 95 2 122 1 
196 1 198 1 270 1 97 1 98 1 271 2 5 1 28 1 57 1 202 1 6 2 243 3 367 1 246 1 370 1 374 1 156 1 11 2 33 1 15 3 351 1 35 1 336 1 302 1 72 1 305 1 118 1 238 2 95 1 122 1 340 2 25 1 
13 4 331 2 0 1 343 2 138 1 354 1 279 2 54 1 40 2 133 2 347 4 203 1 249 1 106 1 87 1 
315 1 248 1 208 1 
315 1 248 1 208 1 
328 1 315 1 206 1 248 1 264 1 
315 1 248 1 208 1 
315 1 248 1 312 1 
315 1 248 1 312 1 
315 1 248 1 312 1 
315 1 248 1 
276 1 324 1 
220 1 280 1 336 4 302 2 282 1 5 2 57 2 82 3 100 2 346 1 176 4 83 1 261 1 154 1 370 2 374 8 203 1 195 1 326 1 11 4 
82 2 100 2 346 1 176 3 83 1 268 1 261 1 154 1 374 6 203 1 220 1 326 1 336 3 282 1 
64 1 110 1 280 1 336 2 302 1 131 1 5 1 57 1 100 1 82 2 176 2 370 1 154 1 9 1 374 4 326 1 11 2 
64 1 267 1 110 1 280 1 256 2 336 4 131 1 100 1 82 2 176 3 84 1 154 1 374 7 326 1 168 1 
269 1 220 1 77 1 131 2 5 2 57 2 82 9 100 5 346 1 83 2 176 11 84 2 154 3 370 2 374 23 203 1 326 3 11 4 136 1 64 2 110 2 280 4 256 2 336 12 282 2 302 2 261 1 195 2 168 1 
374 1 256 1 336 1 
176 1 84 1 374 1 
64 1 110 1 280 1 336 3 302 1 5 1 131 1 57 1 99 1 82 3 100 2 176 3 370 1 154 1 9 1 374 6 326 1 11 2 
267 1 2 1 292 1 5 1 131 2 57 1 100 1 82 2 176 6 84 1 370 1 154 2 374 12 326 2 11 2 229 1 188 1 64 2 110 2 113 1 280 1 256 1 336 6 302 1 120 1 
280 1 336 3 282 1 100 1 82 2 176 3 83 1 261 1 154 1 374 6 326 1 
269 1 220 1 280 1 336 2 282 1 302 1 5 1 57 1 82 2 100 1 346 1 176 1 83 1 370 1 374 3 195 1 11 2 
113 1 280 2 336 5 302 1 282 2 5 1 57 1 100 3 82 5 83 2 176 5 261 1 370 1 154 2 237 1 374 10 326 2 11 2 
64 1 113 1 280 1 302 1 5 1 57 1 82 1 176 2 370 1 154 1 374 2 11 2 
64 1 110 1 113 1 280 1 336 2 302 1 131 1 5 1 57 1 100 1 82 2 176 2 370 1 154 1 374 4 326 1 11 2 
230 1 269 1 113 1 280 1 336 2 302 3 282 1 5 3 57 3 100 1 82 2 83 1 176 1 370 3 374 3 195 1 11 6 
267 1 269 1 220 1 5 5 131 3 57 5 82 12 100 7 346 1 83 3 176 16 84 3 370 5 154 5 9 1 374 34 203 1 326 5 63 1 11 10 64 3 230 1 110 3 113 1 280 5 256 4 336 18 282 3 302 5 285 1 261 2 195 2 288 1 168 1 
267 1 292 1 220 1 5 1 57 1 100 2 82 2 346 1 176 4 83 1 84 1 154 1 370 1 374 8 203 1 326 1 11 2 113 1 256 1 336 4 302 1 282 1 261 1 
267 1 220 1 292 1 5 2 57 2 100 2 82 3 346 1 83 1 176 6 84 1 370 2 154 2 374 11 9 1 203 1 326 1 11 4 64 1 110 1 113 1 280 1 256 2 336 5 282 1 302 2 261 1 168 1 
267 1 2 1 220 1 292 1 5 3 131 2 57 3 100 3 82 4 346 1 83 1 176 9 84 1 370 3 154 3 9 1 374 19 203 1 326 3 11 6 229 1 188 1 64 2 110 2 113 1 280 1 256 1 336 10 282 1 302 3 261 1 120 1 195 1 
267 1 2 1 220 1 292 1 5 3 131 1 57 3 100 3 82 5 346 1 83 1 176 10 84 1 370 3 154 3 9 1 374 17 203 1 326 2 11 6 229 1 188 1 64 2 110 2 113 1 280 2 256 1 336 7 282 1 302 3 261 1 120 1 195 1 
267 1 292 1 220 1 5 1 57 1 100 2 82 2 346 1 176 4 83 1 84 1 154 1 370 1 374 8 203 1 326 1 11 2 113 1 256 1 336 4 302 1 282 1 261 1 
267 1 2 1 292 1 5 1 131 2 57 1 100 1 82 2 176 6 84 1 370 1 154 2 374 12 326 2 11 2 229 1 188 1 64 2 110 2 113 1 280 1 256 1 336 6 302 1 120 1 
267 1 2 1 220 1 292 1 5 4 131 1 57 4 100 3 82 5 346 1 83 1 176 10 84 1 370 4 154 3 374 18 9 1 203 1 326 2 11 8 229 1 188 1 64 2 110 2 113 1 280 2 256 1 336 8 282 1 302 4 261 1 120 1 195 2 
267 1 2 1 292 1 5 4 131 2 57 4 100 3 82 6 176 9 84 1 370 4 154 3 374 16 326 2 11 8 229 1 188 1 64 3 230 1 110 3 113 1 280 3 256 1 336 7 302 4 120 1 195 2 
220 2 280 3 336 4 282 3 100 3 82 6 346 1 83 3 176 3 261 1 154 1 374 7 326 1 
267 1 2 1 220 1 292 1 5 4 131 1 57 4 100 3 82 4 346 1 83 1 176 10 84 1 370 4 154 3 374 18 203 1 326 2 11 8 229 1 188 1 64 2 230 1 110 2 113 1 280 1 256 1 336 8 282 1 302 4 261 1 120 1 195 2 
258 1 243 1 15 1 137 1 238 1 156 1 263 1 
15 1 67 1 137 1 68 1 79 1 22 1 258 1 243 1 141 1 238 1 156 1 263 1 
196 1 367 1 118 1 305 1 268 1 1 1 332 1 35 1 95 1 122 1 98 1 
196 1 198 1 15 2 35 1 353 1 271 1 98 1 72 1 6 1 367 1 243 2 118 1 305 1 246 1 238 1 95 1 122 1 156 1 
197 1 196 1 217 1 377 1 198 2 169 1 15 2 35 1 353 1 221 1 271 1 98 1 72 1 6 2 367 3 243 2 118 2 305 1 246 1 238 2 287 1 122 1 156 1 
197 1 196 1 217 1 377 1 198 2 169 1 15 2 35 2 353 1 221 1 271 1 98 2 72 1 6 2 367 3 243 2 118 2 305 2 153 1 238 2 287 1 325 1 122 1 156 1 
196 1 12 1 217 1 13 1 377 1 198 1 169 1 290 1 301 1 343 1 35 3 362 2 98 3 337 1 194 2 367 4 118 1 305 3 153 1 121 1 95 1 215 1 122 1 
196 1 217 1 13 1 377 1 198 1 169 1 290 1 301 1 343 1 35 3 362 2 98 3 337 1 194 2 367 4 118 1 305 3 153 1 121 1 155 1 95 1 122 1 
196 1 305 1 35 1 44 1 122 1 98 1 
196 3 205 1 361 1 147 1 198 1 129 1 35 7 363 1 98 6 367 3 305 7 118 2 119 1 245 1 74 1 151 1 44 1 95 2 122 2 185 1 186 1 
196 1 198 1 96 1 270 1 220 1 271 1 98 1 5 2 202 2 57 2 82 2 100 2 6 1 346 1 367 1 243 2 31 1 176 3 83 1 151 1 246 1 154 1 370 2 374 6 203 1 321 1 326 1 156 2 11 4 33 1 15 2 351 2 114 1 35 1 353 1 336 3 282 1 302 2 72 1 118 1 211 1 305 1 261 1 338 1 238 1 122 1 358 1 
290 2 343 1 0 2 317 1 362 3 54 2 98 1 272 1 367 2 133 1 155 1 250 1 106 2 87 2 13 1 89 1 301 1 35 1 334 1 138 1 303 1 337 1 194 3 259 1 305 1 308 1 121 1 95 1 
196 2 301 1 198 1 35 2 363 1 98 2 367 2 305 2 118 1 151 1 44 1 180 1 122 1 
196 1 1 1 332 1 35 4 4 1 98 4 367 1 305 4 118 1 151 1 153 1 95 1 122 1 
196 2 205 1 169 1 198 1 35 2 98 2 30 1 41 1 367 1 305 2 118 1 119 1 122 1 135 1 
196 1 305 1 14 1 227 1 232 1 35 1 95 1 92 1 122 1 98 1 
196 1 129 1 35 2 98 2 367 1 305 2 118 1 151 1 245 1 122 1 327 1 
196 2 169 1 361 1 1 1 332 1 35 5 4 1 98 4 367 3 305 5 118 2 151 1 74 1 245 1 95 1 122 2 
196 2 169 1 361 1 1 1 90 1 332 1 35 5 4 1 98 4 367 3 305 5 118 2 151 1 245 1 95 1 122 2 
196 1 198 1 15 2 35 1 353 1 271 1 98 1 72 1 6 1 367 1 243 2 118 1 305 1 238 1 95 1 325 1 122 1 156 1 
196 2 205 1 169 1 147 1 198 1 35 1 363 1 98 1 367 1 305 1 118 1 119 1 122 1 
140 1 306 1 333 1 20 1 156 1 
197 1 13 1 65 1 343 1 334 1 333 2 362 2 221 1 192 1 20 2 148 1 337 1 194 2 140 2 93 1 306 1 287 1 45 1 156 1 
241 1 15 1 333 1 20 1 243 1 306 1 369 1 238 1 123 1 
65 1 306 1 45 1 
268 1 34 1 116 1 299 1 
101 1 34 1 228 1 86 1 116 1 216 1 299 1 
24 1 381 1 228 1 
34 1 115 2 116 1 38 1 71 1 304 1 101 1 42 1 228 3 86 1 216 3 299 1 
101 1 371 1 34 1 228 2 86 1 116 1 216 2 299 1 300 1 
289 1 101 1 14 1 307 1 34 1 228 1 86 1 92 1 146 1 216 1 71 1 
101 1 34 1 228 1 86 1 216 1 299 1 71 1 
101 1 228 1 86 1 116 1 216 1 299 2 71 1 
34 1 172 1 78 1 71 1 101 2 228 2 86 2 216 2 299 1 167 1 
289 1 231 1 34 2 116 1 320 1 71 1 101 1 213 1 371 2 228 3 86 1 216 3 299 1 
14 2 34 1 116 1 92 1 71 1 283 1 101 1 307 1 356 1 227 1 371 1 228 2 86 1 216 2 299 1 
26 1 289 1 231 1 34 2 116 1 71 1 101 2 371 2 228 4 86 2 216 4 299 1 300 1 
101 1 34 1 228 1 86 1 116 1 216 1 299 1 71 1 
289 1 231 1 34 3 115 1 163 1 116 2 38 1 304 1 101 1 371 2 228 4 86 1 216 4 299 2 
34 1 161 1 51 1 116 1 71 1 101 1 371 1 228 2 86 1 216 2 299 1 125 1 
34 1 115 2 116 1 38 1 71 1 304 2 101 1 228 3 286 1 86 1 216 3 299 1 
210 2 34 2 310 1 252 1 
101 1 228 1 86 1 216 1 71 1 157 1 
101 1 371 1 213 1 34 1 228 2 86 1 116 1 216 2 299 1 71 1 
190 1 
101 1 34 1 228 1 86 1 116 1 216 1 299 1 71 1 
34 1 115 1 116 1 71 1 101 1 371 1 213 1 228 3 86 1 216 3 299 1 
289 1 231 1 34 1 163 1 
34 1 299 1 

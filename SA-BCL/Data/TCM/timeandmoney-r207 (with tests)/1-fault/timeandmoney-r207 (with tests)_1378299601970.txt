#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
197 1 133 1 65 1 95 9 231 1 170 1 138 1 314 2 291 6 344 5 237 1 101 1 73 2 180 1 322 1 354 1 8 4 78 9 303 2 32 1 304 2 359 1 254 1 128 2 282 2 84 1 16 2 132 3 
197 1 133 1 65 1 95 9 231 1 170 1 138 1 314 2 291 6 344 5 237 1 101 1 73 2 180 1 322 1 354 1 8 4 78 9 303 2 32 1 304 2 359 1 254 1 128 2 282 2 84 1 16 2 132 3 
197 1 133 1 65 1 95 10 231 1 170 1 138 1 314 2 291 7 344 6 237 1 101 1 73 2 180 1 322 1 354 1 8 5 78 10 303 2 32 1 304 2 359 1 254 1 128 2 282 2 84 1 16 2 132 4 
197 1 133 1 65 1 95 7 231 1 170 1 138 1 314 2 291 4 344 4 237 1 101 1 73 2 180 1 322 1 354 1 8 3 78 7 303 2 32 1 304 1 359 1 128 2 282 2 84 1 16 2 132 2 
322 1 133 1 8 2 65 1 95 4 170 1 78 4 314 1 291 3 304 2 254 1 344 3 128 1 282 1 237 1 16 1 132 1 73 1 
322 1 133 1 65 1 231 1 95 2 78 2 303 1 32 1 344 1 128 1 296 1 282 1 238 1 16 1 72 1 73 1 
322 1 133 1 8 1 65 1 95 3 78 3 303 1 291 1 359 1 344 2 16 2 73 2 132 1 
133 1 65 1 95 9 170 1 314 1 291 7 344 5 237 1 178 1 73 2 180 1 322 1 354 1 8 4 78 9 303 1 56 1 304 2 359 1 254 1 128 1 282 1 16 2 132 3 
133 1 65 1 95 9 170 1 314 1 291 7 344 5 237 1 178 1 73 2 180 1 322 1 354 1 8 4 78 9 303 1 56 1 304 2 359 1 254 1 128 1 282 1 16 2 132 3 
351 1 124 1 258 1 
33 1 351 1 118 2 
10 2 375 2 330 1 281 2 100 2 371 1 14 2 313 2 
263 2 228 2 165 1 265 1 313 2 230 2 232 1 234 1 3 1 46 1 100 3 70 1 371 1 239 1 347 1 241 1 26 1 276 1 275 1 375 2 27 1 181 1 216 1 159 1 356 1 247 2 146 2 10 3 329 1 330 1 253 1 82 1 305 1 113 1 281 2 58 1 14 2 
10 1 375 1 330 1 155 1 281 1 100 1 14 1 313 1 39 1 171 1 
375 1 351 1 155 1 214 1 92 1 246 1 136 1 313 1 363 1 171 1 79 1 10 2 45 1 186 1 330 1 281 2 124 1 100 2 59 1 14 1 39 2 
375 2 351 1 155 1 214 1 246 1 136 1 313 2 363 1 171 1 79 1 10 2 186 2 330 1 281 2 124 1 100 2 59 2 14 2 39 2 
186 1 294 1 59 1 160 1 173 1 
321 1 351 1 186 2 294 1 124 1 59 2 160 1 30 1 
186 1 59 1 160 1 
375 1 155 1 136 1 313 1 171 1 10 1 294 1 186 1 330 1 281 1 100 1 59 1 14 1 39 1 
351 1 
351 1 186 2 294 1 124 1 59 2 160 1 30 1 335 1 
351 1 17 1 94 1 18 2 30 1 160 2 377 2 20 2 150 1 294 2 186 5 35 1 366 1 272 1 124 1 22 1 59 5 306 1 225 1 
371 1 258 1 
375 1 278 1 313 1 10 2 281 2 100 2 47 1 371 2 14 1 
175 1 369 1 334 1 
27 1 263 1 228 1 159 1 247 1 232 1 10 1 234 1 3 1 343 1 329 1 82 1 113 1 100 1 371 1 347 1 
10 3 375 3 281 3 100 3 371 1 313 1 14 3 222 1 
10 1 375 1 281 1 100 1 14 1 39 1 171 1 
10 1 375 1 278 1 281 1 100 1 47 1 14 1 313 1 39 1 
228 1 165 1 230 1 232 1 234 1 3 1 345 1 100 4 47 1 347 1 239 1 241 1 246 1 247 1 356 1 146 2 10 4 186 1 305 1 113 1 59 1 58 1 14 3 263 1 265 1 313 2 363 1 269 1 371 1 26 1 275 1 276 1 375 3 27 1 214 1 159 1 79 1 329 1 330 1 82 1 281 3 39 2 40 1 222 1 163 1 
10 2 375 1 45 1 281 2 100 2 371 1 14 1 209 1 222 1 
375 3 351 1 214 1 42 1 246 1 313 1 363 1 79 1 10 3 186 1 345 1 281 3 100 3 47 1 59 1 14 3 39 1 40 1 222 2 
10 2 375 2 281 2 100 2 369 1 47 1 14 2 313 1 222 1 334 1 
27 1 263 1 228 1 159 1 247 1 232 1 10 1 234 1 3 1 329 1 113 1 82 1 100 1 371 1 347 1 
27 1 263 1 228 1 106 1 247 1 232 1 10 1 234 1 3 1 329 1 271 1 82 1 100 1 371 1 347 1 
165 1 264 1 230 4 289 1 44 1 21 1 175 2 5 1 369 2 141 1 239 1 241 1 26 1 276 2 323 1 219 1 356 1 146 2 253 2 161 1 58 1 114 1 307 1 334 2 
10 1 375 1 34 1 281 1 100 1 14 1 363 1 39 1 
27 1 375 1 263 1 228 1 159 1 247 1 232 1 3 1 234 1 10 2 329 1 82 1 113 1 281 1 100 2 369 1 347 1 14 1 40 1 222 1 
185 1 10 5 375 4 45 1 281 5 100 5 371 1 47 1 313 1 14 4 209 1 40 1 222 2 96 1 
10 2 34 1 375 2 281 2 100 2 14 2 39 1 171 1 
204 1 355 1 
204 1 355 1 
364 1 308 1 
364 1 308 1 
364 1 308 1 
204 1 355 1 137 1 
204 1 355 1 137 1 
261 1 204 1 355 1 
262 1 204 2 187 1 355 2 364 1 308 1 
204 1 355 1 137 1 
204 1 355 1 250 1 
204 1 355 1 250 1 
204 1 355 1 250 1 
213 1 374 3 351 1 361 1 89 2 337 1 182 2 157 2 144 1 355 2 302 2 290 1 186 2 204 2 187 1 140 1 129 1 59 2 62 2 
196 1 89 1 337 1 261 1 168 1 204 1 205 1 100 2 371 1 177 1 240 1 373 1 375 2 374 1 182 1 157 1 244 1 355 1 10 2 186 1 281 2 59 1 14 2 62 1 
128 1 282 1 314 1 
128 1 282 1 296 1 
282 3 296 1 311 1 184 1 314 2 251 1 
282 2 296 1 311 1 119 1 314 1 251 1 
282 2 296 1 311 2 314 1 251 1 
196 1 118 3 88 1 260 2 18 1 120 1 20 1 44 1 122 1 21 1 294 4 236 2 366 3 124 1 273 1 373 1 7 2 351 2 323 1 244 1 217 1 160 1 30 1 377 1 33 1 11 1 186 5 161 1 59 5 283 1 306 1 225 2 
196 4 118 9 260 6 43 1 199 1 18 2 120 2 66 1 20 2 173 5 44 3 122 1 21 3 294 7 366 8 272 1 124 1 273 3 206 1 298 5 7 6 351 5 323 3 215 1 217 2 160 6 30 1 377 2 33 3 186 9 161 3 59 9 189 1 306 1 225 6 
196 1 88 1 118 4 260 2 18 1 120 1 20 1 44 1 21 1 294 2 236 1 366 3 272 1 124 1 273 1 351 3 7 2 323 1 217 1 377 1 33 2 11 1 186 3 161 1 59 3 225 2 
196 2 118 7 88 1 260 4 43 1 199 1 18 1 120 1 20 1 44 2 21 2 294 3 236 2 366 5 272 1 124 1 273 2 351 4 7 4 323 2 217 1 377 1 33 3 11 1 186 4 161 2 59 4 189 1 225 4 
82 1 258 1 357 1 
82 1 255 1 
211 1 
82 1 232 1 
82 3 347 1 109 1 232 1 357 2 194 1 
82 1 347 1 232 1 
82 1 93 1 
276 3 323 1 134 1 264 2 266 1 326 1 230 7 289 3 149 1 358 1 44 1 203 1 253 4 6 1 126 1 207 1 301 2 
276 3 323 1 134 1 264 2 266 1 326 1 230 7 289 3 149 1 358 1 44 1 203 1 253 4 6 1 126 1 207 1 301 2 
276 3 323 1 134 1 264 2 266 1 326 1 230 7 289 3 149 1 358 1 44 1 203 1 253 4 6 1 57 1 126 1 207 1 301 2 
134 1 165 1 264 5 310 1 266 1 312 1 230 31 289 10 149 2 174 1 44 4 21 3 203 5 6 1 273 3 126 2 239 1 23 1 207 1 208 4 50 1 301 3 276 15 323 4 324 1 326 2 356 1 146 2 358 2 280 3 253 16 161 3 58 1 224 1 
134 1 165 2 264 3 310 1 266 1 230 9 289 4 149 1 44 1 203 1 6 1 239 2 126 1 301 2 276 4 277 1 323 1 75 1 326 1 356 2 146 4 358 1 253 5 58 2 
133 1 263 1 228 1 229 1 65 1 95 2 172 1 314 1 291 1 315 1 234 1 3 1 317 1 344 1 296 1 125 1 73 1 74 1 353 1 322 1 105 1 158 1 247 1 110 1 78 2 184 1 303 1 128 1 282 2 16 1 
133 1 263 1 228 1 229 1 65 1 95 3 314 1 291 2 315 1 234 1 3 1 317 1 344 1 296 1 125 1 25 1 73 1 353 1 352 1 105 1 158 1 247 1 184 1 110 1 78 3 303 1 252 1 128 1 282 2 16 1 
133 1 263 1 228 1 229 1 65 1 95 2 314 1 291 2 315 1 234 1 3 1 317 1 344 1 296 1 25 1 353 1 352 1 158 1 247 1 110 1 78 2 184 1 303 1 128 1 282 2 
263 1 228 1 229 2 95 1 232 1 3 1 202 1 234 1 319 1 143 1 73 1 353 2 247 1 78 1 110 2 127 1 303 2 252 1 329 1 82 1 115 1 16 1 226 1 
263 1 228 1 229 1 95 1 314 1 315 1 234 1 3 1 317 1 296 1 125 1 73 1 74 1 353 1 352 1 322 1 105 1 158 1 247 1 110 1 78 1 184 1 303 1 128 1 282 2 16 1 
98 1 
0 1 227 1 338 1 90 2 228 2 92 1 2 1 232 1 234 1 3 1 45 1 100 1 297 2 243 4 351 4 246 1 107 1 247 2 10 1 186 5 59 5 60 2 306 1 190 2 192 2 360 1 118 2 117 1 263 2 200 1 18 1 363 1 268 1 20 1 366 2 124 3 370 1 319 1 274 2 28 2 214 1 217 1 30 3 160 6 377 1 79 1 33 2 329 2 82 1 281 1 38 1 39 1 225 2 381 1 226 1 
360 1 117 1 0 1 227 1 92 1 363 1 2 1 45 1 100 1 124 2 243 2 351 2 214 1 246 1 30 1 160 2 79 1 10 1 186 3 281 1 59 3 60 1 39 1 335 1 
360 1 351 2 243 3 117 1 0 1 227 1 214 1 90 1 92 1 246 1 363 1 2 1 79 1 10 1 186 2 45 1 281 1 124 2 100 1 59 2 39 1 
360 1 117 1 0 1 227 1 90 1 92 1 363 1 2 1 45 1 100 1 124 3 243 3 351 3 214 1 246 1 30 1 160 2 79 1 10 1 186 3 281 1 59 3 60 1 39 1 192 1 335 1 
336 1 0 1 227 1 338 1 90 3 92 1 136 1 2 1 171 1 292 1 45 1 100 2 297 2 351 4 243 5 246 1 10 2 186 5 59 5 60 4 14 1 306 1 190 2 192 4 360 1 117 1 313 1 363 1 18 1 201 1 20 1 366 1 318 1 124 4 274 2 375 1 376 1 155 1 214 1 28 2 30 3 160 7 377 1 79 1 33 2 330 1 281 2 39 2 225 1 335 1 381 1 
360 1 118 2 117 1 0 1 338 1 227 1 90 2 92 1 18 1 363 1 2 1 268 1 20 1 45 1 366 1 100 1 124 3 297 2 274 2 243 4 351 4 28 2 214 1 246 1 160 4 30 2 377 1 79 1 33 2 10 1 186 4 281 1 59 4 60 2 306 1 190 2 39 1 192 2 225 1 381 1 
360 1 336 1 117 1 0 1 338 1 227 1 90 2 92 1 18 1 363 1 2 1 201 1 20 1 45 1 366 1 100 1 124 3 297 2 274 2 243 4 351 3 376 1 28 2 214 1 246 1 160 4 30 2 377 1 79 1 33 2 10 1 186 4 281 1 59 4 60 2 306 1 190 2 39 1 192 2 225 1 381 1 
360 1 336 1 117 1 0 1 338 1 227 1 90 2 92 1 18 1 363 1 2 1 201 1 20 1 45 1 366 1 100 1 124 3 297 2 274 2 243 4 351 3 376 1 28 2 214 1 246 1 160 4 30 2 377 1 79 1 33 2 10 1 186 4 281 1 59 4 60 2 306 1 190 2 39 1 192 2 225 1 381 1 
360 1 118 2 117 1 0 1 227 1 90 2 92 1 18 1 363 1 2 1 20 1 316 2 45 1 366 1 100 1 124 3 320 1 274 2 243 4 351 3 376 1 214 1 246 1 160 4 30 2 248 2 377 1 79 1 10 1 186 4 112 1 281 1 59 4 60 2 306 1 190 2 39 1 192 2 225 1 164 1 381 1 
360 1 336 1 117 1 0 1 338 1 227 1 90 3 92 1 18 1 363 1 2 1 20 1 201 1 292 1 45 1 366 1 100 1 124 3 297 2 274 2 243 5 351 3 376 1 28 2 214 1 246 1 30 2 160 5 377 1 79 1 33 2 10 1 186 4 281 1 59 4 60 3 306 1 190 2 39 1 192 3 225 1 381 1 
360 1 336 1 117 1 0 1 338 1 227 1 90 3 92 1 18 1 363 1 2 1 20 1 201 1 292 1 45 1 366 1 100 1 124 3 297 2 274 2 243 5 351 3 376 1 28 2 214 1 246 1 30 2 160 5 377 1 79 1 33 2 10 1 186 4 281 1 59 4 60 3 306 1 190 2 39 1 192 3 225 1 381 1 
360 1 118 2 117 1 0 1 227 1 90 2 92 1 18 1 363 1 2 1 268 1 20 1 316 2 45 1 366 1 100 1 124 3 274 2 243 4 351 3 214 1 246 1 160 4 30 2 248 2 377 1 79 1 10 1 186 4 112 1 281 1 59 4 60 2 306 1 190 2 39 1 192 2 225 1 381 1 
134 1 165 1 264 2 266 1 230 6 289 2 149 1 44 1 175 1 6 1 369 1 371 2 239 1 126 1 241 1 26 1 301 1 276 3 323 1 356 1 146 2 253 3 58 1 114 1 258 1 334 1 
264 1 165 2 230 14 289 2 174 1 123 1 44 1 175 11 21 1 203 1 70 1 371 1 369 11 273 2 239 2 23 1 208 3 241 2 26 1 275 1 276 6 323 2 183 1 356 2 145 1 146 4 80 1 280 3 253 8 161 2 58 2 193 1 334 4 
63 1 263 1 228 1 91 1 165 1 230 2 232 1 3 1 234 1 343 1 100 2 371 1 70 1 347 1 239 1 241 1 26 1 275 1 276 1 27 1 375 1 159 1 247 1 356 1 146 2 80 1 10 2 329 1 82 1 113 1 253 1 281 1 58 1 14 1 162 1 222 1 40 1 334 1 
134 1 228 3 165 3 135 2 230 20 289 8 232 2 44 3 234 2 3 2 175 7 6 1 100 3 239 3 347 2 241 3 301 1 352 1 52 2 247 3 356 3 249 1 146 6 10 3 113 2 253 10 188 2 58 3 14 1 61 1 259 2 263 3 264 4 266 1 265 2 149 1 21 2 203 4 371 2 70 1 369 7 273 2 126 1 26 3 276 10 275 1 375 1 27 2 323 3 159 2 80 1 329 1 81 1 82 2 281 1 161 2 40 1 222 1 334 7 
263 7 287 1 228 8 165 2 230 2 232 2 172 1 3 2 234 2 235 1 100 1 70 1 239 2 319 1 210 1 241 2 26 2 275 1 276 1 375 1 352 1 216 2 31 1 247 8 356 2 146 4 10 1 279 1 329 2 82 3 253 1 281 1 114 1 58 2 257 1 14 1 222 1 41 1 226 1 
264 1 165 1 313 1 230 3 289 1 44 1 175 1 21 1 100 1 369 1 47 1 273 1 239 1 241 1 26 1 276 2 375 1 323 1 356 1 146 2 80 1 10 1 253 1 281 1 161 1 58 1 14 1 334 1 380 1 
323 1 165 1 230 2 289 1 356 1 146 2 175 1 203 1 253 2 161 1 369 1 114 1 58 1 141 1 239 1 334 1 241 1 26 1 
276 2 264 1 165 1 230 2 289 1 356 1 146 2 44 1 175 1 21 1 5 1 369 1 114 1 58 1 239 1 334 1 241 1 26 1 
165 1 264 1 230 4 289 2 44 1 175 2 21 1 203 1 273 1 369 2 239 1 241 1 26 1 276 2 323 1 356 1 146 2 253 2 161 1 58 1 114 1 334 2 
323 1 165 1 230 2 289 1 356 1 146 2 175 1 203 1 253 2 161 1 369 1 58 1 141 1 239 1 334 1 41 1 241 1 26 1 
276 2 264 1 165 1 230 2 289 1 356 1 146 2 44 1 175 1 21 1 5 1 369 1 58 1 239 1 334 1 41 1 241 1 26 1 
165 1 264 1 230 4 289 2 44 1 175 2 21 1 203 1 273 1 369 2 239 1 241 1 26 1 276 2 323 1 356 1 146 2 253 2 161 1 58 1 41 1 334 2 
165 1 264 1 230 4 289 2 44 1 175 2 21 1 203 1 273 1 369 2 239 1 241 1 26 1 276 2 323 1 356 1 146 2 253 2 161 1 58 1 334 2 
263 1 228 1 165 1 265 1 230 2 232 1 3 1 234 1 100 1 70 1 371 1 347 1 239 1 241 1 26 1 275 1 276 1 27 1 159 1 247 1 356 1 146 2 10 1 329 1 253 1 113 1 82 1 58 1 
263 1 228 1 165 1 230 2 232 1 3 1 234 1 271 1 100 1 70 1 371 1 347 1 239 1 241 1 26 1 275 1 276 1 27 1 106 1 247 1 356 1 146 2 10 1 329 1 253 1 82 1 58 1 130 1 
165 1 264 1 230 4 289 2 44 1 175 2 21 1 203 1 273 1 369 2 239 1 241 1 26 1 276 2 323 1 356 1 146 2 80 1 253 2 161 1 58 1 334 2 
263 1 228 1 264 1 165 1 265 1 135 1 230 4 289 2 232 1 172 1 44 1 3 1 234 1 21 1 175 2 203 1 100 1 369 2 273 1 347 1 239 1 241 1 26 1 276 2 27 1 323 1 159 1 247 1 356 1 146 2 10 1 253 2 113 1 82 1 161 1 58 1 334 2 
165 1 313 1 230 3 289 1 44 1 21 1 175 1 203 1 100 1 47 1 273 1 369 1 239 1 241 1 24 1 26 1 276 1 375 1 323 1 356 1 146 2 80 1 10 1 253 2 281 1 161 1 58 1 14 1 334 1 
309 1 340 1 264 3 147 1 165 2 267 1 230 19 289 6 270 1 121 2 174 1 44 3 21 3 203 3 99 2 273 3 239 2 23 1 208 2 276 10 277 1 323 3 325 1 356 2 146 4 280 1 253 9 161 3 58 2 85 1 
195 1 309 1 285 1 310 2 264 2 147 1 165 3 267 2 230 26 167 1 289 4 270 1 121 4 44 2 174 2 21 2 203 2 99 1 273 3 239 3 208 2 276 12 277 1 323 3 325 2 356 3 146 6 280 2 253 14 379 1 161 3 58 3 221 1 86 1 
285 1 134 1 165 3 340 1 230 41 167 1 289 8 44 5 174 3 6 1 99 1 239 3 301 1 356 3 146 6 253 20 58 3 195 1 309 1 147 1 264 4 310 1 266 1 267 1 270 1 121 4 149 1 21 4 203 4 273 4 23 1 126 1 208 4 152 1 276 21 277 1 323 5 325 2 280 3 379 1 161 4 221 1 86 1 
195 1 309 1 285 1 134 1 340 1 310 2 264 4 147 1 165 4 266 1 167 1 267 1 230 38 289 7 270 1 149 1 121 4 174 3 44 4 21 3 203 3 99 1 6 1 273 4 126 1 239 4 23 1 208 4 152 1 301 1 276 18 277 1 323 5 325 2 356 4 146 8 280 3 379 1 253 20 161 4 58 4 221 1 86 1 
195 1 309 1 285 1 134 1 310 1 264 7 147 1 165 2 266 1 167 1 267 1 230 52 289 14 270 1 149 1 121 4 174 2 44 8 21 7 203 7 99 1 6 1 273 7 126 1 239 2 23 2 208 4 301 1 276 25 277 1 323 8 325 1 356 2 146 4 280 4 379 1 253 27 161 7 58 2 221 1 86 1 193 2 
67 1 213 1 204 1 89 1 182 1 187 1 157 1 129 1 355 1 62 1 
261 1 168 1 
212 1 204 1 89 1 182 1 13 1 36 1 157 1 355 1 62 1 
213 1 374 2 351 1 337 1 89 1 182 1 157 1 144 1 355 1 302 1 290 1 186 1 204 1 187 1 140 1 129 1 59 1 62 1 
213 1 374 2 351 1 337 1 89 1 182 1 157 1 144 1 355 1 302 1 290 1 186 1 204 1 187 1 140 1 129 1 59 1 62 1 
213 1 374 2 351 1 337 1 89 1 182 1 157 1 144 1 355 1 302 1 290 1 186 1 204 1 187 1 140 1 129 1 59 1 62 1 
262 1 76 1 137 1 
262 1 76 1 137 1 
293 1 250 1 
293 1 262 1 250 1 
177 1 240 1 
196 1 89 1 261 1 341 1 168 1 290 1 294 1 204 1 205 1 100 2 371 1 177 1 240 1 373 1 374 1 375 2 182 1 157 1 244 1 302 1 355 1 10 2 186 1 281 2 59 1 14 2 62 1 
76 1 137 1 
293 1 262 1 250 1 
287 1 263 2 228 2 165 1 230 2 232 1 3 1 234 1 235 1 176 1 100 2 70 1 239 1 241 1 153 1 26 1 350 1 154 1 275 1 276 1 216 2 245 1 247 2 356 1 146 2 80 1 10 2 82 1 253 1 281 2 58 1 
352 1 263 2 228 2 29 1 158 1 247 2 184 1 110 1 172 1 314 1 97 1 315 1 3 1 234 1 68 1 128 1 282 2 296 1 125 1 
352 1 263 1 228 1 29 1 158 1 247 1 184 1 110 1 314 1 315 1 234 1 3 1 128 1 282 2 296 1 125 1 223 1 
263 1 288 1 228 1 247 1 232 1 110 1 3 1 234 1 68 1 329 1 82 1 319 1 143 1 226 1 
352 1 263 1 228 1 29 1 158 1 247 1 184 1 110 1 314 1 97 1 315 1 3 1 234 1 68 1 128 1 282 2 296 1 125 1 
12 1 
351 1 366 1 17 1 124 1 22 1 258 1 225 1 
118 1 338 1 18 1 20 1 366 1 124 1 297 1 351 2 28 1 30 1 160 1 377 1 33 1 186 1 59 1 306 1 225 1 
228 1 1 1 169 1 232 1 3 2 234 1 44 1 347 1 48 1 349 1 7 3 351 3 247 1 109 1 357 1 186 2 255 2 59 2 306 2 259 1 118 6 263 1 260 3 18 2 148 1 20 2 151 1 21 1 366 4 367 1 273 1 214 1 323 1 217 1 77 1 160 2 30 1 377 2 33 3 329 1 82 4 161 1 225 3 
195 1 118 6 285 1 260 5 200 1 167 1 18 2 20 2 174 1 44 2 21 2 366 8 124 2 273 2 208 1 102 1 7 5 351 5 323 2 217 1 77 2 160 1 30 1 54 1 377 2 33 3 186 1 280 1 379 1 161 2 59 1 306 2 37 1 86 1 225 5 
336 1 266 1 136 1 313 1 18 1 171 1 19 1 149 1 20 1 44 1 366 2 100 1 126 1 102 1 375 1 323 2 155 1 77 2 377 1 10 1 186 1 330 1 281 1 59 1 306 1 14 1 39 1 225 2 
351 1 17 1 18 1 377 1 20 1 366 1 22 1 124 1 306 1 225 1 
259 1 7 5 118 10 351 5 260 5 323 2 77 2 33 5 44 2 21 2 366 5 161 2 273 2 102 1 225 5 
351 1 186 1 124 1 59 1 160 1 30 1 
263 4 228 4 18 2 200 2 232 1 20 2 3 1 234 1 366 2 272 1 368 1 51 1 348 2 319 1 217 2 107 1 247 4 160 4 30 2 377 2 111 1 329 2 186 3 82 1 59 3 306 1 38 1 225 2 226 1 
263 1 228 1 165 1 265 1 313 2 230 1 232 1 234 1 3 1 100 3 371 1 239 1 347 1 241 1 26 1 276 1 275 1 375 2 27 1 159 1 247 1 356 1 146 2 10 3 329 1 330 1 305 1 113 1 82 1 281 2 58 1 14 2 
118 4 7 2 351 4 260 2 217 1 18 1 200 1 377 1 20 1 33 2 366 1 124 2 306 1 225 2 301 1 
157 1 131 1 62 1 
157 1 131 1 62 1 
104 1 213 1 157 1 177 1 62 1 
157 1 131 1 62 1 
157 1 333 1 62 1 
157 1 333 1 62 1 
157 1 333 1 62 1 
157 1 62 1 
204 1 355 1 
276 4 323 1 134 1 264 2 165 2 310 1 266 1 230 8 289 3 356 2 149 1 146 4 44 1 203 1 253 4 6 1 58 2 239 2 126 1 301 1 
276 3 134 1 323 1 264 2 266 1 230 6 289 2 149 1 44 1 253 3 6 1 126 1 258 1 301 1 
276 2 323 1 264 1 165 1 230 4 289 2 356 1 146 2 44 1 21 1 203 1 253 2 161 1 346 1 58 1 273 1 239 1 
276 4 323 1 264 1 230 7 289 2 44 1 174 1 21 1 280 1 203 1 253 3 161 1 273 1 23 1 208 2 
134 1 264 5 310 2 165 2 266 1 230 23 289 9 149 2 123 1 44 3 21 2 203 4 6 1 273 2 126 2 23 1 239 2 208 2 301 1 276 12 323 3 356 2 146 4 280 2 253 11 161 2 58 2 193 1 284 1 
276 1 208 1 230 1 
280 1 253 1 230 1 
276 3 259 1 323 1 165 1 264 2 230 6 356 1 289 3 146 2 44 1 21 1 203 1 253 3 161 1 58 1 346 1 273 1 239 1 
195 1 285 1 165 1 264 1 230 12 167 1 289 2 174 1 44 2 21 2 203 1 273 2 239 1 208 1 276 6 277 1 323 2 356 1 146 2 280 1 253 6 379 1 161 2 58 1 86 1 
276 3 323 1 264 1 266 1 230 6 289 2 149 1 44 1 203 1 253 3 126 1 
276 2 134 1 264 1 310 1 165 1 230 3 289 2 356 1 149 1 146 2 203 1 253 1 6 1 58 1 126 1 239 1 284 1 
276 5 277 1 323 2 165 1 264 3 266 1 230 10 356 1 289 5 19 1 149 2 146 2 44 2 203 2 253 5 58 1 239 1 126 2 
277 1 323 1 165 1 230 2 356 1 289 1 146 2 203 1 253 2 161 1 58 1 239 1 
276 2 277 1 323 1 264 1 165 1 230 4 289 2 356 1 146 2 44 1 21 1 203 1 253 2 161 1 58 1 273 1 239 1 
276 2 277 1 310 1 340 1 165 3 264 1 230 3 356 3 289 2 149 1 146 6 203 1 253 1 58 3 239 3 126 1 284 1 
134 1 310 2 340 1 165 5 264 7 266 2 312 1 230 34 289 12 149 3 174 1 44 5 21 3 203 5 6 1 346 1 273 3 126 3 239 5 23 1 208 4 50 1 301 1 276 18 277 1 323 5 356 5 146 10 280 3 253 16 161 3 58 5 284 1 224 1 
134 1 165 1 264 2 266 1 230 8 167 1 289 2 149 1 44 1 174 1 6 1 239 1 126 1 208 1 301 1 276 4 277 1 323 1 356 1 146 2 280 1 253 4 58 1 
134 1 264 2 165 2 266 1 230 11 167 1 289 3 149 1 44 1 174 1 203 1 6 1 346 1 273 1 126 1 239 2 23 1 208 2 301 1 276 5 277 1 323 2 356 2 146 4 280 1 253 6 161 1 58 2 
195 1 285 1 134 1 165 3 264 3 310 1 266 1 230 19 167 1 289 4 149 1 174 1 44 3 21 2 203 1 6 1 346 1 273 2 126 1 239 3 208 1 301 1 276 10 277 1 323 3 356 3 146 6 280 1 253 9 379 1 161 2 58 3 86 1 
195 1 285 1 134 1 310 1 165 3 264 3 266 1 230 17 167 1 289 5 149 1 174 1 44 2 21 1 203 2 6 1 346 1 273 2 126 1 239 3 208 1 301 1 276 7 277 1 323 3 356 3 146 6 280 1 253 10 379 1 161 2 58 3 86 1 
134 1 165 1 264 2 266 1 230 8 167 1 289 2 149 1 44 1 174 1 6 1 239 1 126 1 208 1 301 1 276 4 277 1 323 1 356 1 146 2 280 1 253 4 58 1 
195 1 285 1 165 1 264 1 230 12 167 1 289 2 174 1 44 2 21 2 203 1 273 2 239 1 208 1 276 6 277 1 323 2 356 1 146 2 280 1 253 6 379 1 161 2 58 1 86 1 
195 1 285 1 134 1 165 4 264 3 310 2 266 1 230 18 167 1 289 5 149 1 174 1 44 2 21 1 203 2 6 1 346 1 273 2 126 1 239 4 208 1 301 1 276 8 277 1 323 3 356 4 146 8 280 1 253 10 379 1 161 2 58 4 86 1 
195 1 285 1 165 4 340 1 264 3 310 2 230 16 167 1 289 6 174 1 44 2 21 2 203 3 273 3 239 4 208 1 276 7 277 1 323 3 356 4 146 8 280 1 253 9 379 1 161 3 58 4 86 1 
276 4 134 2 323 1 264 3 266 1 230 7 289 6 149 3 44 1 203 3 253 3 6 1 126 3 
195 1 285 1 134 1 165 4 340 1 264 3 310 2 266 1 230 18 167 1 289 4 149 1 174 1 44 2 21 1 203 1 6 1 273 2 126 1 239 4 208 1 301 1 276 8 277 1 323 3 356 4 146 8 280 1 253 10 379 1 161 2 58 4 86 1 
10 1 45 1 281 1 100 1 371 1 209 1 103 1 
286 1 156 1 10 1 328 1 45 1 281 1 100 1 371 1 49 1 332 1 209 1 103 1 
3 1 234 1 329 1 263 1 82 1 228 1 247 1 232 1 319 1 258 1 226 1 
27 1 375 1 263 1 228 1 247 1 232 1 3 1 10 2 234 1 329 1 82 1 113 1 281 1 100 2 371 1 347 1 14 1 222 1 
27 1 375 2 263 1 228 1 93 1 363 1 108 1 247 1 232 2 79 1 3 1 10 2 234 1 82 3 113 1 281 2 100 2 371 1 347 2 14 1 39 1 222 1 348 1 
263 2 228 2 93 1 363 1 232 2 234 1 3 1 100 2 371 1 347 2 348 1 375 2 27 1 106 1 247 2 108 1 79 1 10 2 220 1 82 3 281 2 14 1 39 1 222 1 
263 1 228 1 93 1 136 1 313 1 171 1 232 1 365 1 234 1 3 1 100 1 124 1 347 1 348 1 375 1 351 1 155 1 214 1 160 1 247 1 108 1 357 1 10 1 186 2 330 1 82 4 281 1 255 1 59 2 14 1 15 1 39 1 
263 1 228 1 93 1 136 1 313 1 171 1 232 1 234 1 3 1 100 1 124 1 347 1 348 1 349 1 375 1 351 1 155 1 214 1 160 1 247 1 108 1 357 1 10 1 186 2 330 1 82 4 281 1 255 1 59 2 14 1 39 1 
3 1 234 1 263 1 228 1 257 1 247 1 
352 1 263 6 362 1 64 1 216 1 228 7 31 1 247 7 109 1 232 2 172 1 233 1 234 2 3 3 235 1 279 1 329 2 82 3 347 1 257 1 210 1 
263 1 134 1 228 1 264 2 165 2 266 1 135 1 265 1 230 6 289 2 232 1 172 1 149 1 44 1 3 1 234 1 175 1 6 1 100 2 369 1 371 2 126 1 347 1 239 2 241 2 301 1 26 2 350 1 276 3 27 1 375 1 52 1 323 1 159 1 356 2 247 1 146 4 80 1 10 2 253 3 82 1 113 1 281 1 58 2 14 1 222 1 334 1 
228 1 1 1 136 1 169 1 171 1 44 2 294 1 100 1 51 1 102 1 349 1 351 2 247 1 357 1 10 1 186 3 255 1 59 3 306 2 14 1 263 1 17 1 266 1 313 1 18 2 19 1 20 2 149 1 151 1 366 4 22 1 124 2 126 1 375 1 214 1 323 2 155 1 77 2 30 1 160 2 377 2 329 1 330 1 82 2 281 1 39 1 225 5 
263 2 228 2 247 2 109 1 232 1 172 1 357 1 234 1 3 2 82 2 48 1 347 1 257 1 
116 1 263 4 228 4 247 4 232 1 172 1 3 1 234 1 329 1 220 1 82 1 319 1 226 1 
263 2 64 1 228 2 166 1 247 2 232 1 233 1 234 1 3 2 82 1 347 1 299 1 348 1 61 1 
3 1 234 1 329 1 263 1 128 1 228 1 282 1 296 1 247 1 315 1 
352 1 263 2 228 2 247 2 232 1 172 1 234 1 3 1 235 1 82 1 153 1 
116 1 263 4 228 5 247 5 31 1 232 2 172 1 234 2 3 2 329 1 235 1 82 3 348 1 319 1 210 1 226 1 
116 1 263 4 228 5 218 1 247 5 31 1 232 2 172 1 234 2 3 2 329 1 235 1 82 3 348 1 319 1 226 1 
27 1 375 1 263 1 228 1 106 1 247 1 232 1 3 1 10 2 234 1 329 1 82 1 281 1 100 2 371 1 347 1 14 1 222 1 
263 1 362 1 64 1 228 1 247 1 109 1 232 1 233 1 234 1 3 2 82 1 347 1 348 1 
339 1 245 1 10 1 295 1 281 1 176 1 100 1 191 1 154 1 
295 1 55 1 300 1 
87 1 295 1 339 1 371 1 191 1 
87 1 339 1 136 1 313 1 363 1 171 1 294 1 295 1 345 1 100 1 124 1 300 1 179 1 375 1 351 1 214 1 155 1 246 1 55 1 79 1 10 1 186 2 330 1 281 1 59 2 14 1 39 2 191 1 
133 1 344 1 65 1 258 1 
133 1 344 1 65 1 95 1 78 1 16 1 73 1 
229 1 95 1 303 1 
322 1 133 1 344 1 69 1 83 1 65 1 231 2 95 3 78 3 16 1 242 1 73 1 
304 1 133 1 344 1 65 1 95 2 78 2 16 1 291 1 73 1 
322 1 8 1 95 1 170 1 78 1 314 1 344 1 128 1 282 1 16 1 73 1 
322 1 344 1 65 1 95 1 78 1 16 1 73 1 
322 1 133 1 65 2 95 1 78 1 16 1 73 1 
322 1 198 1 65 1 95 2 78 2 327 1 9 1 344 1 16 2 73 2 
322 1 133 1 354 1 8 1 65 1 95 3 78 3 291 2 344 2 16 1 73 1 180 1 132 1 
322 1 133 1 65 1 95 2 78 2 184 1 314 1 291 1 4 1 344 1 128 1 296 1 282 2 16 1 73 1 
322 1 133 1 8 1 65 1 95 4 78 4 291 2 304 1 254 1 344 2 16 2 73 2 132 1 
322 1 133 1 344 1 65 1 95 1 78 1 16 1 73 1 
133 2 8 1 231 1 65 2 95 4 78 4 291 2 344 3 69 1 71 1 16 1 242 1 73 1 132 1 
322 1 133 1 65 1 95 2 78 2 342 1 291 1 331 1 344 1 16 1 73 1 178 1 
322 1 133 1 95 3 231 2 65 1 78 3 139 1 344 1 69 2 16 1 242 1 73 1 
378 1 344 2 256 2 142 1 
322 1 53 1 95 1 78 1 16 1 73 1 
322 1 133 1 354 1 344 1 65 1 95 2 78 2 16 1 291 1 73 1 
372 1 
322 1 133 1 344 1 65 1 95 1 78 1 16 1 73 1 
322 1 133 1 354 1 95 3 231 1 65 1 78 3 291 1 344 1 16 1 73 1 
344 1 8 1 71 1 132 1 
344 1 65 1 

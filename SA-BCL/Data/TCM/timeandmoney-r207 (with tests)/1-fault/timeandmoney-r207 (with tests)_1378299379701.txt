#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 79 252 73 (179,318) (179,318) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 79 252 73 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 79 252 73 319 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 79 252 73 (179,318) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 79 252 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 79 39 74 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 79 252 73 (179,318) (179,318) 240 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 79 252 73 319 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 79 223 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 79 223 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 79 223 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 79 223 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 79 223 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
126 1 276 3 197 1 48 1 326 1 221 1 243 3 245 1 54 2 142 2 149 1 238 1 66 2 
126 1 127 1 45 1 48 1 221 2 308 1 54 2 232 1 142 5 98 1 149 3 238 6 66 2 320 1 276 9 197 4 326 1 280 1 243 9 27 1 28 2 245 1 167 2 117 1 80 1 84 1 209 2 334 2 
126 1 127 1 45 1 48 1 221 2 308 1 54 2 232 1 142 5 98 1 149 3 238 6 66 2 320 1 276 9 197 4 326 1 280 1 243 9 27 1 28 2 245 1 167 2 117 1 80 1 84 1 209 2 334 2 
126 1 127 1 45 1 48 1 221 2 308 1 54 2 232 1 142 6 98 1 149 4 238 7 66 2 320 1 276 10 197 5 326 1 280 1 243 10 27 1 28 2 245 1 167 2 117 1 80 1 84 1 209 2 334 2 
126 1 45 1 48 1 221 2 308 1 54 2 232 1 142 4 98 1 149 2 238 4 66 2 320 1 276 7 197 3 326 1 280 1 243 7 27 1 28 1 245 1 167 2 117 1 80 1 84 1 209 2 334 2 
126 1 127 1 276 4 45 1 197 2 48 1 326 1 243 4 28 2 27 1 54 1 142 3 167 1 149 1 238 3 66 1 209 1 334 1 
126 1 320 1 276 2 298 1 48 1 326 1 221 1 243 2 177 1 54 1 142 1 167 1 235 1 98 1 66 1 334 1 
126 1 45 1 127 1 48 1 221 1 54 2 142 5 149 3 193 1 238 7 66 2 276 9 197 4 326 1 280 1 243 9 28 2 27 1 245 1 167 1 170 1 84 1 209 1 334 1 
126 1 45 1 127 1 48 1 221 1 54 2 142 5 149 3 193 1 238 7 66 2 276 9 197 4 326 1 280 1 243 9 28 2 27 1 245 1 167 1 170 1 84 1 209 1 334 1 
324 1 266 1 252 1 79 1 73 1 318 1 179 1 141 1 
23 1 
324 2 300 1 266 2 23 1 176 1 301 1 62 1 141 1 
324 5 300 2 47 2 23 1 176 1 301 1 8 1 307 1 141 2 233 1 266 5 78 1 267 2 268 2 83 1 207 1 294 1 152 1 195 1 
77 1 23 1 176 1 
23 1 329 1 151 2 
252 1 79 1 73 1 
252 1 79 1 73 1 319 1 
252 1 79 1 73 1 179 1 
0 1 324 1 129 1 23 1 159 1 278 1 2 1 176 1 303 1 93 1 55 1 266 1 81 1 116 1 
252 1 79 1 
287 1 324 1 300 1 266 1 141 1 
249 1 324 2 300 1 266 2 23 1 176 1 301 1 141 1 
324 1 300 1 266 1 
322 1 255 1 168 1 
255 2 290 1 168 2 164 1 121 1 210 1 
255 1 168 1 
255 1 168 1 
290 1 164 1 
290 1 164 1 
290 1 164 1 
255 1 168 1 16 1 
255 1 168 1 16 1 
255 1 168 1 16 1 
255 1 168 1 264 1 
255 1 168 1 264 1 
255 1 168 1 264 1 
239 1 273 1 20 1 255 2 324 2 157 2 23 1 70 2 302 2 50 1 305 3 202 1 312 2 266 2 289 2 203 1 168 2 60 1 210 1 
312 1 255 1 324 1 266 1 157 1 168 1 70 1 79 1 60 1 302 1 305 1 
298 1 76 2 167 2 205 1 209 1 
167 1 209 1 334 1 
298 1 167 1 334 1 
247 1 298 1 76 1 167 3 205 1 209 2 
298 1 76 1 167 2 146 1 205 1 209 1 
88 1 300 1 47 1 176 1 301 1 262 1 225 1 141 4 307 3 10 2 313 1 266 5 267 1 148 1 188 2 268 1 15 1 151 3 271 1 152 1 153 1 324 5 23 2 329 1 75 1 166 1 111 1 331 1 82 2 118 1 207 2 125 1 
130 1 300 6 47 2 220 1 176 1 301 1 262 3 225 2 226 1 141 7 307 8 313 4 266 9 267 2 148 3 188 6 268 2 17 1 151 9 271 3 152 1 272 5 321 1 324 9 23 5 329 3 287 5 166 2 331 3 78 1 82 6 118 3 206 1 207 6 125 1 
88 1 47 1 176 1 225 1 262 1 141 2 307 3 313 1 10 1 266 3 267 1 148 1 268 1 188 2 15 1 151 4 271 1 324 3 23 3 329 2 166 1 331 1 78 1 82 2 118 1 207 2 
88 1 47 1 220 1 176 1 225 1 262 2 307 5 141 3 313 2 10 2 266 4 267 1 148 2 188 4 268 1 15 1 17 1 151 7 271 2 321 1 324 4 23 4 329 3 166 1 331 2 78 1 82 4 118 2 207 4 
216 1 259 1 19 1 
77 1 13 1 270 1 
196 1 13 1 
145 1 13 1 
213 1 145 1 112 1 13 3 208 1 270 2 
145 1 13 1 208 1 
89 1 13 1 
254 2 128 1 104 7 22 1 134 3 219 1 107 1 328 2 330 4 284 1 286 1 96 1 331 1 265 1 315 1 118 1 173 3 65 1 
254 5 128 2 215 3 134 15 219 5 222 1 262 3 229 1 265 1 315 2 97 1 148 3 65 1 64 1 271 3 154 1 68 1 104 31 22 2 277 2 24 4 107 1 328 3 284 1 330 16 286 2 248 1 37 1 331 4 120 1 118 4 173 10 122 1 86 1 
254 3 128 1 134 4 219 1 315 1 190 1 65 1 154 2 104 9 22 1 277 4 328 2 107 1 330 5 284 1 286 1 248 1 331 1 37 2 250 1 118 1 173 4 122 2 86 2 
254 2 128 1 104 7 22 1 134 3 219 1 107 1 328 2 330 4 284 1 286 1 331 1 265 1 315 1 118 1 173 3 65 1 
254 2 128 1 104 7 22 1 134 3 219 1 107 1 328 2 330 4 284 1 286 1 331 1 265 1 315 1 118 1 173 3 65 1 
297 1 214 1 221 2 140 2 7 1 53 2 54 1 95 1 145 1 13 1 236 1 100 1 66 1 274 1 276 1 21 2 69 1 243 1 26 2 200 1 288 1 251 2 292 2 171 1 
275 1 126 1 298 1 276 1 21 1 25 1 161 1 221 1 243 1 26 1 140 1 108 1 263 1 53 1 309 1 54 1 110 1 247 1 288 1 251 1 292 1 167 2 171 1 66 1 209 1 334 1 
126 1 298 1 48 1 221 1 140 1 263 1 53 1 309 1 54 1 142 1 316 1 238 1 66 1 275 1 21 1 276 2 25 1 326 1 26 1 243 2 108 1 110 1 247 1 251 1 288 1 292 1 167 2 171 1 209 1 334 1 
298 1 48 1 221 1 140 1 263 1 53 1 54 1 142 1 14 1 238 2 66 1 274 1 275 1 21 1 276 3 161 1 25 1 326 1 26 1 243 3 108 1 110 1 247 1 251 1 288 1 292 1 167 2 171 1 209 1 334 1 
298 1 48 1 221 1 140 1 53 1 142 1 14 1 238 2 275 1 21 1 276 2 161 1 326 1 26 1 243 2 108 1 110 1 247 1 251 1 288 1 292 1 167 2 171 1 209 1 334 1 
257 1 
0 1 256 1 2 1 176 1 260 1 93 1 7 2 12 2 266 5 13 1 267 1 268 1 18 2 23 2 198 2 278 1 200 1 33 1 288 1 291 2 115 1 204 1 293 1 116 1 123 1 207 2 300 6 129 1 47 1 301 3 303 1 304 2 225 1 140 2 228 2 53 2 307 2 145 1 55 1 58 2 236 1 147 1 63 4 151 2 152 1 324 5 160 1 159 1 162 1 72 1 329 2 165 1 251 2 171 1 81 1 
0 1 324 3 300 2 129 1 159 1 160 1 278 1 2 1 301 1 72 1 303 1 93 1 165 1 266 3 55 1 115 1 293 1 116 1 81 1 62 1 63 2 18 1 
0 1 300 1 129 1 2 1 176 1 301 1 303 1 93 1 55 1 266 3 62 1 63 3 324 3 160 1 159 1 23 1 278 1 198 1 72 1 165 1 115 1 293 1 81 1 116 1 
0 1 129 1 300 2 2 1 176 1 301 1 303 1 93 1 55 1 266 3 12 1 62 1 63 3 18 1 324 3 160 1 159 1 23 1 278 1 198 1 72 1 165 1 115 1 293 1 81 1 116 1 
0 1 2 1 176 5 93 1 180 1 12 4 266 5 267 1 268 1 18 4 23 5 278 1 198 4 33 1 291 2 115 1 204 1 293 1 116 1 207 1 300 7 129 1 47 1 136 1 301 3 303 1 304 2 227 1 228 2 307 1 55 1 58 2 62 1 63 6 152 1 324 5 159 1 160 1 72 1 244 1 329 2 165 1 81 1 253 1 
0 1 2 1 176 1 93 1 266 4 12 2 267 1 268 1 18 2 23 2 278 1 198 2 33 1 291 2 115 1 204 1 293 1 116 1 207 1 123 1 129 1 300 4 47 1 301 2 303 1 304 2 228 2 307 1 55 1 58 2 63 4 151 2 152 1 324 4 159 1 160 1 72 1 329 2 165 1 81 1 
0 1 300 4 129 1 47 1 2 1 176 1 136 1 301 2 303 1 304 2 93 1 228 2 307 1 12 2 55 1 266 4 267 1 58 2 268 1 63 4 152 1 18 2 324 4 23 1 160 1 159 1 198 2 278 1 72 1 329 2 244 1 33 1 165 1 291 2 115 1 204 1 293 1 81 1 116 1 253 1 207 1 
0 1 300 4 129 1 47 1 2 1 176 1 136 1 301 2 303 1 304 2 93 1 228 2 307 1 12 2 55 1 266 4 267 1 58 2 268 1 63 4 152 1 18 2 324 4 23 1 160 1 159 1 198 2 278 1 72 1 329 2 244 1 33 1 165 1 291 2 115 1 204 1 293 1 81 1 116 1 253 1 207 1 
87 1 0 1 300 4 129 1 47 1 2 1 176 1 135 2 301 2 303 1 304 2 93 1 307 1 12 2 55 1 266 4 267 1 268 1 63 4 151 2 152 1 18 2 324 4 23 1 160 1 159 1 198 2 278 1 72 1 244 1 29 1 36 2 165 1 291 2 115 1 114 1 204 1 293 1 81 1 116 1 207 1 
0 1 129 1 300 5 47 1 2 1 176 1 136 1 301 2 303 1 304 2 93 1 180 1 228 2 307 1 55 1 266 4 12 3 267 1 58 2 268 1 63 5 152 1 18 3 324 4 23 1 160 1 159 1 278 1 198 3 72 1 329 2 244 1 33 1 165 1 291 2 115 1 204 1 293 1 81 1 116 1 253 1 207 1 
0 1 129 1 300 5 47 1 2 1 176 1 136 1 301 2 303 1 304 2 93 1 180 1 228 2 307 1 55 1 266 4 12 3 267 1 58 2 268 1 63 5 152 1 18 3 324 4 23 1 160 1 159 1 278 1 198 3 72 1 329 2 244 1 33 1 165 1 291 2 115 1 204 1 293 1 81 1 116 1 253 1 207 1 
87 1 0 1 2 1 176 1 93 1 266 4 12 2 267 1 268 1 18 2 23 1 278 1 198 2 36 2 291 2 115 1 204 1 293 1 116 1 207 1 123 1 129 1 300 4 47 1 135 2 301 2 303 1 304 2 307 1 55 1 63 4 151 2 152 1 324 4 159 1 160 1 72 1 165 1 81 1 
254 3 174 1 133 1 215 1 134 10 219 3 94 1 262 3 229 1 311 2 184 1 97 1 185 2 148 3 59 1 190 1 194 1 271 3 154 2 104 19 158 1 24 2 277 4 330 9 37 2 331 3 118 3 173 6 122 2 86 2 
254 2 174 1 133 1 215 2 219 2 134 12 94 2 262 3 5 1 311 4 11 1 97 2 185 1 148 2 59 2 61 1 190 1 194 1 271 3 154 3 104 26 277 6 24 2 71 1 330 14 248 2 331 2 37 3 118 3 173 4 122 3 43 1 124 1 86 3 
254 4 174 1 262 4 94 1 5 1 11 1 184 1 97 3 185 1 190 1 194 1 271 4 104 41 277 6 24 4 107 1 284 1 37 3 118 5 122 3 43 1 124 1 128 1 215 3 133 1 219 4 134 21 229 1 311 4 144 1 315 1 148 4 59 2 61 1 65 1 154 3 71 1 328 1 330 20 248 1 331 5 173 8 86 3 
254 4 128 1 174 1 133 1 215 3 134 18 219 3 94 1 262 4 5 1 229 1 311 4 144 1 11 1 184 1 315 1 97 3 185 1 148 3 59 2 61 1 190 1 65 1 194 1 271 4 154 4 104 38 24 4 277 8 71 1 328 1 107 1 284 1 330 20 248 2 37 4 331 4 118 5 173 7 43 1 122 4 124 1 86 4 
254 7 128 1 174 1 133 1 215 4 134 25 219 7 94 1 262 7 5 1 229 2 311 4 11 1 315 1 97 2 185 1 148 7 59 1 61 1 190 1 65 1 194 1 271 7 154 2 104 52 24 4 277 4 71 1 328 1 107 1 284 1 330 27 248 1 37 2 331 8 118 8 42 2 173 14 43 1 122 2 124 1 86 2 
239 1 202 1 312 1 255 1 157 1 168 1 70 1 41 1 302 1 210 1 
322 1 234 1 
312 1 323 1 255 1 157 1 168 1 70 1 302 1 178 1 31 1 
239 1 273 1 324 1 255 1 157 1 23 1 70 1 302 1 50 1 305 2 202 1 312 1 266 1 289 1 203 1 168 1 60 1 210 1 
239 1 273 1 324 1 255 1 157 1 23 1 70 1 302 1 50 1 305 2 202 1 312 1 266 1 289 1 203 1 168 1 60 1 210 1 
239 1 273 1 324 1 255 1 157 1 23 1 70 1 302 1 50 1 305 2 202 1 312 1 266 1 289 1 203 1 168 1 60 1 210 1 
16 1 121 1 30 1 
16 1 121 1 30 1 
281 1 264 1 
281 1 121 1 264 1 
186 1 6 1 
322 1 255 1 324 1 157 1 70 1 302 1 50 1 305 1 6 1 74 1 75 1 141 1 312 1 313 1 234 1 266 1 289 1 186 1 168 1 39 1 79 1 153 1 
16 1 30 1 
281 1 121 1 264 1 
297 2 129 2 299 1 218 1 134 1 4 1 224 1 140 2 53 2 145 1 55 2 314 1 13 1 192 1 150 1 154 1 155 1 104 2 241 1 278 2 277 2 106 1 330 1 37 1 288 1 251 2 113 1 171 1 122 1 86 1 333 1 
105 1 69 1 175 1 140 1 200 1 7 1 53 1 145 1 288 1 251 1 13 1 292 1 236 1 171 1 
275 1 298 1 105 1 161 1 137 1 140 1 263 1 108 1 53 1 247 1 251 1 38 1 288 1 292 1 167 2 171 1 209 1 334 1 
275 1 298 1 105 1 161 1 137 1 140 2 263 1 108 1 53 2 247 1 288 1 251 2 38 1 292 1 316 1 167 2 171 1 209 1 334 1 
275 1 298 1 161 1 140 1 283 1 263 1 108 1 53 1 247 1 251 1 38 1 288 1 292 1 167 2 171 1 209 1 334 1 
237 1 
47 1 23 1 176 1 8 1 307 1 233 1 267 1 268 1 207 1 152 1 
23 5 262 2 329 5 307 5 183 1 331 2 57 2 188 5 148 2 82 5 119 1 118 2 207 5 151 10 271 2 
324 1 266 1 300 1 23 1 176 1 301 1 
300 4 256 1 47 2 217 2 260 2 301 2 140 4 225 2 53 4 7 2 307 2 145 1 143 1 266 3 13 1 267 2 147 1 268 2 236 1 152 1 103 1 324 3 200 1 288 1 251 4 78 1 171 1 172 1 207 2 
233 1 77 1 23 1 176 1 207 1 8 1 307 1 
300 1 47 1 176 1 301 1 228 1 307 1 266 1 267 1 58 1 268 1 151 1 152 1 324 1 23 2 329 1 33 1 207 1 
89 2 3 2 176 2 260 1 92 2 262 2 8 1 7 1 183 2 266 5 13 10 267 4 268 4 188 6 270 2 271 2 196 3 23 8 199 2 34 2 288 3 118 2 119 2 208 3 207 8 296 2 44 1 213 1 300 5 47 4 217 1 138 1 301 3 225 2 140 3 52 2 53 3 307 9 143 1 233 1 145 3 316 1 57 2 148 2 151 12 152 4 324 5 159 2 327 1 329 6 331 2 251 3 171 4 82 6 
300 1 47 2 215 1 176 2 260 1 301 1 225 1 262 2 5 1 307 8 11 1 266 1 97 1 57 2 267 2 188 5 268 2 148 2 61 1 151 6 152 2 271 2 324 1 23 5 242 1 24 1 329 3 109 1 331 2 82 5 119 1 118 2 207 5 43 1 124 1 
324 1 128 1 47 1 240 1 136 1 73 1 107 1 179 1 307 2 331 1 266 1 252 1 315 1 57 2 267 1 268 1 79 1 118 1 318 1 207 1 152 1 
252 1 79 1 73 1 319 1 
47 1 23 4 176 2 260 1 328 1 225 1 329 2 307 1 267 1 188 2 268 1 82 2 151 4 207 2 152 1 
239 1 312 1 157 1 101 1 6 1 
35 1 312 1 157 1 
35 1 312 1 157 1 
35 1 312 1 157 1 
312 1 157 1 182 1 
312 1 157 1 182 1 
312 1 157 1 182 1 
312 1 157 1 
255 1 168 1 
254 3 128 2 104 10 277 2 240 1 219 2 134 5 107 1 330 5 37 1 331 2 315 2 190 1 118 2 173 5 122 1 86 1 154 1 
104 2 277 2 219 1 330 2 37 1 190 1 118 1 173 1 122 1 271 1 154 1 86 1 
254 1 104 4 134 2 277 2 219 1 262 1 330 2 331 1 37 1 148 1 190 1 118 1 173 2 122 1 271 1 154 1 86 1 
254 1 128 1 104 3 134 2 277 6 219 1 139 1 330 1 248 1 37 3 184 1 315 1 190 1 173 2 122 3 154 3 86 3 
254 7 128 3 215 3 134 18 219 5 222 1 139 1 51 1 262 3 229 1 184 1 315 3 97 1 148 3 190 1 65 1 64 1 271 3 154 5 104 34 24 4 277 10 328 1 107 2 284 1 330 16 248 2 37 5 331 5 120 1 118 5 173 12 122 5 86 5 
254 2 128 1 104 8 134 4 219 1 277 4 328 1 107 1 330 4 284 1 248 1 331 1 37 2 315 1 118 1 173 3 65 1 122 2 154 2 86 2 
254 2 128 1 104 6 134 3 328 1 107 1 284 1 330 3 331 1 77 1 315 1 118 1 65 1 173 2 
254 1 104 4 134 2 277 2 219 1 51 1 262 1 330 2 331 1 37 1 148 1 118 1 173 2 122 1 271 1 154 1 86 1 
254 1 104 7 215 1 24 2 134 4 219 1 262 1 330 3 229 1 331 1 97 1 148 1 118 1 173 2 271 1 
254 5 128 2 215 2 91 1 219 4 134 12 139 1 262 2 229 1 315 2 148 2 65 1 271 2 154 2 104 23 24 2 277 4 328 1 107 1 284 1 330 11 248 2 331 3 37 2 118 3 42 1 173 9 122 2 86 2 
104 1 134 1 24 1 
104 1 215 1 330 1 
254 2 104 6 277 2 134 3 219 1 51 1 262 1 330 3 183 1 37 1 331 1 148 1 118 1 173 3 122 1 271 1 86 1 154 1 
254 1 215 1 219 1 134 6 262 2 5 1 11 1 97 1 148 2 61 1 190 1 271 2 154 1 104 12 24 1 277 2 330 6 37 1 331 2 118 2 173 2 122 1 43 1 86 1 124 1 
254 1 128 1 104 6 134 3 219 1 107 1 330 3 331 1 315 1 118 1 173 2 
254 1 128 1 104 3 219 1 134 2 277 2 139 1 330 1 284 1 248 1 37 1 315 1 173 2 65 1 122 1 154 1 86 1 
254 2 128 1 215 1 134 4 97 1 315 1 61 1 190 1 65 1 154 1 104 8 24 1 277 2 328 1 107 1 330 4 284 1 331 1 37 1 118 1 173 2 122 1 86 1 
254 2 128 1 215 1 134 5 219 1 51 1 262 1 229 1 315 1 97 1 61 1 190 1 65 1 271 1 154 2 104 11 24 2 277 4 328 1 107 1 284 1 330 6 331 1 37 2 118 2 173 3 122 2 86 2 
254 3 128 1 215 1 219 1 134 10 51 1 262 2 5 1 11 1 315 1 97 1 148 2 61 1 190 1 65 1 271 2 154 3 104 19 24 1 277 6 328 1 107 1 284 1 330 9 248 1 37 3 331 3 118 3 173 4 122 3 43 1 86 3 124 1 
254 3 128 1 215 1 219 2 134 7 51 1 262 2 5 1 11 1 315 1 97 1 148 1 61 1 190 1 65 1 271 2 154 3 104 17 24 1 277 6 328 1 107 1 284 1 330 10 248 1 37 3 331 2 118 3 173 5 122 3 43 1 86 3 124 1 
254 2 128 1 215 1 134 4 97 1 315 1 61 1 190 1 65 1 154 1 104 8 24 1 277 2 328 1 107 1 330 4 284 1 331 1 37 1 118 1 173 2 122 1 86 1 
254 1 215 1 219 1 134 6 262 2 5 1 11 1 97 1 148 2 61 1 190 1 271 2 154 1 104 12 24 1 277 2 330 6 37 1 331 2 118 2 173 2 122 1 43 1 86 1 124 1 
254 3 128 1 215 1 219 2 134 8 51 1 262 2 5 1 11 1 315 1 97 1 148 1 61 1 190 1 65 1 271 2 154 4 104 18 24 1 277 8 328 1 107 1 284 1 330 10 248 2 37 4 331 2 118 3 173 5 122 4 43 1 124 1 86 4 
254 3 215 1 219 3 134 7 262 3 5 1 11 1 184 1 97 1 148 2 61 1 190 1 271 3 154 4 104 16 24 1 277 8 330 9 248 2 37 4 331 2 118 3 173 6 122 4 43 1 124 1 86 4 
254 3 128 3 104 7 134 4 219 3 107 1 284 1 330 3 331 1 315 3 118 1 65 2 173 6 
254 3 128 1 215 1 219 1 134 8 262 2 5 1 11 1 184 1 315 1 97 1 148 1 61 1 190 1 65 1 271 2 154 4 104 18 24 1 277 8 328 1 107 1 284 1 330 10 248 2 37 4 331 2 118 3 173 4 122 4 43 1 124 1 86 4 
310 1 55 1 129 1 325 1 278 1 258 1 81 1 
212 1 325 1 129 1 90 1 278 1 258 1 279 1 9 1 310 1 55 1 56 1 81 1 
261 1 140 4 200 1 7 1 53 4 145 1 251 4 288 1 316 1 13 1 236 1 171 1 191 1 
46 1 132 1 217 1 163 1 140 2 282 1 53 2 145 1 251 2 288 1 13 1 171 2 208 1 85 1 
275 1 298 1 288 1 251 1 167 1 171 1 140 1 53 1 7 1 334 1 
161 1 218 1 4 1 140 2 53 2 145 1 251 2 288 1 316 1 13 1 171 1 
217 1 218 1 200 1 140 5 7 1 53 4 145 2 251 5 288 2 316 1 13 3 236 1 40 1 171 2 191 1 99 1 
217 1 218 1 200 1 140 5 7 1 53 4 306 1 145 2 251 5 288 2 316 1 13 3 236 1 40 1 171 2 191 1 
145 1 288 1 77 1 251 1 13 1 236 1 171 1 200 1 140 1 53 1 7 1 
79 1 223 1 
79 1 223 1 
79 1 223 1 
211 1 300 1 89 1 217 1 176 1 261 1 140 3 53 3 7 1 145 1 266 2 13 4 317 1 270 1 196 1 324 2 159 1 23 1 199 1 288 1 251 3 171 1 208 1 
196 1 324 2 89 1 300 1 23 1 159 1 217 1 176 1 199 1 261 1 140 3 7 1 53 3 34 1 145 1 266 2 251 3 288 1 13 4 171 1 208 1 270 1 
288 1 251 1 171 1 140 1 53 1 230 1 
297 1 102 1 213 1 46 1 131 1 161 1 218 1 140 7 282 1 7 2 53 6 230 1 145 2 251 7 288 2 316 1 13 3 40 1 171 3 99 1 208 1 
79 1 223 1 
296 1 300 2 47 2 3 1 176 1 301 1 140 1 52 1 8 1 53 1 7 1 307 1 141 1 233 1 143 1 266 3 13 2 267 2 268 2 152 2 270 1 196 1 324 3 23 1 159 1 34 1 251 1 207 1 
213 1 327 1 140 2 53 2 230 1 145 1 251 2 288 1 316 1 13 2 171 2 208 1 270 1 
79 1 223 1 
213 1 46 1 131 1 217 1 140 1 282 1 53 1 145 1 251 1 288 1 13 1 171 2 208 1 
126 1 276 1 142 1 48 1 326 1 243 1 66 1 54 1 
276 4 197 1 48 2 326 2 243 4 181 1 201 1 54 1 142 3 98 1 269 1 149 1 238 2 66 1 
126 1 276 2 156 1 48 1 326 1 243 2 54 1 285 1 142 1 193 1 238 1 66 1 
126 1 276 3 48 1 326 1 243 3 54 1 201 2 142 1 98 2 269 1 66 1 67 1 
142 2 1 2 332 1 295 1 
126 1 276 1 243 1 32 1 66 1 54 1 
126 1 276 2 142 1 48 1 326 1 280 1 243 2 238 1 66 1 54 1 
49 1 
126 1 276 1 142 1 48 1 326 1 243 1 66 1 54 1 
142 1 77 1 48 1 326 1 
276 1 142 1 48 1 326 1 243 1 66 1 54 1 
221 1 26 1 243 1 
126 1 276 3 48 1 326 1 243 3 54 1 201 1 246 1 142 1 98 2 269 1 66 1 
276 2 142 1 48 1 326 1 243 2 28 1 238 1 66 1 54 1 
126 1 276 1 197 1 243 1 27 1 54 1 142 1 167 1 66 1 209 1 334 1 
126 1 276 1 142 1 48 1 243 1 66 1 54 1 
126 1 276 1 48 2 326 1 243 1 66 1 54 1 
126 1 276 2 48 1 243 2 54 2 231 1 142 1 169 1 187 1 66 2 
126 1 276 3 197 1 48 1 326 1 280 1 243 3 54 1 142 2 84 1 149 1 238 2 66 1 
126 1 298 1 276 2 48 1 326 1 243 2 54 1 247 1 142 1 167 2 189 1 238 1 66 1 209 1 334 1 
126 1 276 4 127 1 197 1 48 1 326 1 243 4 28 1 54 2 142 2 149 1 238 2 66 2 
126 1 276 3 142 1 48 1 326 1 98 1 280 1 243 3 238 1 66 1 54 1 
142 1 197 1 149 1 181 1 
142 1 48 1 

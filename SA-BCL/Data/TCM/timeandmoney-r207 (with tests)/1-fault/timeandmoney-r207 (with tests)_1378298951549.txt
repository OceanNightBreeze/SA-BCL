#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 1 301 2 185 2 6 1 95 1 187 2 303 9 148 1 358 9 221 5 9 1 340 2 101 2 10 1 282 4 259 1 88 1 287 1 22 2 288 1 322 1 111 3 136 1 350 1 72 1 270 2 231 1 271 6 
49 1 185 2 301 2 6 1 95 1 187 2 303 9 148 1 358 9 221 5 9 1 340 2 101 2 10 1 282 4 259 1 88 1 287 1 22 2 288 1 322 1 111 3 136 1 350 1 72 1 270 2 231 1 271 6 
49 1 185 2 301 2 6 1 95 1 187 2 303 10 148 1 358 10 221 6 9 1 340 2 101 2 10 1 282 5 259 1 88 1 287 1 22 2 288 1 322 1 111 4 136 1 350 1 72 1 270 2 231 1 271 7 
49 1 259 1 301 2 185 2 95 1 6 1 303 7 187 2 148 1 88 1 22 2 287 1 358 7 221 4 288 1 9 1 111 2 340 2 136 1 101 1 350 1 10 1 72 1 282 3 270 2 271 4 231 1 
49 1 301 1 185 1 95 1 303 4 148 1 88 1 22 1 358 4 221 3 9 1 111 1 322 1 340 1 101 2 282 2 270 1 271 3 
49 1 301 1 303 2 187 1 132 1 88 1 22 1 358 2 221 1 288 1 9 1 254 1 340 1 72 1 154 1 270 1 
49 1 301 2 6 1 303 3 187 1 88 1 358 3 221 2 9 1 111 1 282 1 270 2 271 1 
49 1 185 1 259 1 301 2 95 1 6 1 303 9 187 1 148 1 88 1 22 1 358 9 221 5 9 1 322 1 111 3 340 1 101 2 350 1 30 1 247 1 282 4 270 2 271 7 
49 1 185 1 259 1 301 2 95 1 6 1 303 9 187 1 148 1 88 1 22 1 358 9 221 5 9 1 322 1 111 3 340 1 101 2 350 1 30 1 247 1 282 4 270 2 271 7 
240 1 332 1 238 1 
240 1 163 2 74 1 
99 2 42 2 274 2 56 2 33 1 150 2 375 1 78 2 
212 1 118 2 1 1 184 1 53 1 274 2 217 1 55 1 56 3 234 1 150 2 78 3 279 1 99 2 100 1 364 1 126 1 33 1 153 2 199 1 158 2 63 1 34 1 13 1 37 1 20 1 372 1 266 1 373 2 375 1 135 1 347 1 89 1 42 2 114 1 211 2 170 1 
99 1 42 1 274 1 91 1 56 1 33 1 150 1 172 1 320 1 78 1 
48 1 240 1 273 1 56 1 346 1 264 1 150 1 78 1 176 1 60 1 124 1 196 1 238 1 172 1 
48 1 240 1 274 1 56 1 346 1 264 2 150 1 78 1 176 2 99 1 60 1 42 1 124 1 238 1 172 1 
176 1 207 1 162 1 264 1 46 1 
7 1 176 2 240 1 80 1 207 1 162 1 238 1 264 2 
176 1 207 1 264 1 
141 1 274 1 162 1 56 1 264 1 150 1 320 1 78 1 176 1 99 1 42 1 91 1 33 1 172 1 
240 1 
176 2 75 1 240 1 80 1 207 1 162 1 238 1 264 2 
315 1 240 1 160 1 4 1 94 1 162 2 356 2 149 1 264 5 243 1 134 1 176 5 80 1 90 2 207 2 342 1 238 1 168 2 157 1 
332 1 375 1 
130 1 5 1 274 1 56 2 150 2 375 2 78 2 99 1 42 1 
225 1 122 1 147 1 
118 1 1 1 184 1 13 1 53 1 56 1 375 1 78 1 89 1 100 1 364 1 114 1 178 1 211 1 153 1 170 1 
118 1 1 1 225 1 184 1 13 1 53 1 274 1 56 2 150 1 78 2 89 1 42 1 100 1 364 1 29 1 114 1 170 1 211 1 153 1 368 1 
99 1 42 3 29 1 274 3 56 3 150 3 375 1 78 3 
42 1 274 1 56 1 150 1 172 1 320 1 78 1 
99 1 42 1 130 1 5 1 274 1 56 1 150 1 172 1 78 1 
212 1 118 1 48 1 1 1 214 1 184 1 53 1 5 1 274 3 217 1 55 1 56 4 234 1 150 3 78 4 176 1 99 2 60 1 124 1 100 1 364 1 29 1 125 1 126 1 33 1 153 1 368 1 158 2 63 1 34 1 13 1 346 1 264 1 266 1 373 1 375 1 135 1 347 1 89 1 42 3 114 1 170 1 211 1 172 1 
42 1 273 1 274 1 29 1 107 1 56 2 150 2 375 1 78 2 
48 1 214 1 240 1 5 1 274 3 56 3 346 1 264 1 150 3 78 3 176 1 99 1 60 1 42 3 124 1 29 2 341 1 368 1 172 1 
225 1 5 1 274 2 147 1 56 2 150 2 78 2 99 1 42 2 29 1 
118 1 1 1 184 1 13 1 53 1 56 1 375 1 78 1 89 1 100 1 364 1 114 1 211 1 153 1 170 1 
118 1 184 1 13 1 53 1 56 1 375 1 78 1 308 1 89 1 364 1 25 1 114 1 211 1 153 1 170 1 
212 1 330 1 297 1 122 2 147 2 55 1 77 1 360 1 126 1 181 1 199 2 158 2 63 2 103 1 34 1 225 2 65 1 14 1 19 1 373 4 135 1 347 1 378 1 45 1 
42 1 274 1 346 1 56 1 139 1 150 1 172 1 78 1 
273 1 5 1 186 1 274 4 107 1 56 5 150 5 375 1 78 5 99 1 42 4 29 2 368 1 182 1 
42 2 274 2 56 2 139 1 150 2 172 1 320 1 78 2 
309 1 257 1 
309 1 257 1 
38 1 193 1 
38 1 193 1 
38 1 193 1 
309 1 57 1 257 1 
309 1 57 1 257 1 
309 1 285 1 257 1 
309 2 325 1 38 1 257 2 380 1 193 1 
309 1 57 1 257 1 
309 1 302 1 257 1 
309 1 302 1 257 1 
309 1 302 1 257 1 
213 2 240 1 258 2 264 2 277 1 334 3 348 2 26 1 176 2 236 1 195 1 244 1 309 2 325 1 179 2 352 1 257 2 283 2 353 1 
213 1 274 2 355 1 56 2 334 1 150 2 78 2 176 1 309 1 28 1 283 1 257 1 316 1 258 1 262 1 285 1 264 1 205 1 375 1 348 1 69 1 42 2 353 1 210 1 
340 1 185 1 22 1 
340 1 132 1 22 1 
185 2 340 3 280 1 371 1 132 1 281 1 
185 1 340 2 371 1 132 1 281 1 374 1 
185 1 340 2 371 1 132 1 281 2 
330 1 144 2 356 1 251 1 149 3 337 1 220 1 176 5 59 2 80 1 61 1 342 2 238 1 315 1 202 1 240 2 65 1 14 1 162 4 18 1 262 1 264 5 163 3 205 1 378 1 90 1 207 1 379 1 168 1 140 2 210 1 74 1 
330 3 300 5 4 1 144 6 145 1 356 2 149 8 337 3 220 2 176 9 361 1 80 1 362 1 61 2 342 6 238 1 202 1 315 1 240 5 65 3 14 3 162 7 66 1 264 9 68 1 163 9 205 4 164 1 378 3 207 6 90 2 168 2 140 6 74 3 46 5 
330 1 4 1 144 2 356 1 149 3 337 1 220 1 176 3 59 1 61 1 342 2 238 1 240 3 65 1 14 1 162 2 18 1 264 3 205 1 163 4 378 1 90 1 379 1 168 1 140 2 74 2 
330 2 144 4 4 1 356 1 149 5 337 2 220 1 176 4 59 2 362 1 61 1 342 4 238 1 240 4 65 2 14 2 18 1 162 3 66 1 264 4 163 7 205 2 164 1 378 2 90 1 379 1 168 1 140 4 74 3 
332 1 114 1 40 1 
114 1 359 1 
245 1 
13 1 114 1 
89 1 13 1 114 3 275 1 40 2 313 1 
89 1 13 1 114 1 
114 1 133 1 
63 3 103 2 298 1 14 1 188 1 97 1 373 7 77 3 41 1 378 1 113 1 290 1 138 1 367 1 293 1 199 4 201 2 
63 3 103 2 298 1 14 1 188 1 97 1 373 7 77 3 41 1 378 1 113 1 290 1 138 1 367 1 293 1 199 4 201 2 
63 3 103 2 142 1 298 1 14 1 188 1 97 1 373 7 77 3 41 1 378 1 113 1 290 1 138 1 367 1 293 1 199 4 201 2 
212 1 330 3 298 1 54 1 188 2 97 5 55 1 337 3 77 10 27 4 8 1 81 1 367 1 155 1 199 16 201 3 158 2 63 15 103 5 65 3 14 4 241 1 319 3 373 31 135 1 347 1 41 2 113 1 378 4 290 2 44 1 138 1 293 2 171 1 
158 4 212 2 103 3 63 4 298 1 54 1 14 1 188 1 250 1 97 1 55 2 58 1 373 9 77 4 135 2 347 2 41 1 378 1 290 1 138 1 367 1 293 1 199 5 201 2 
118 1 0 1 232 1 49 1 185 1 301 1 303 2 187 1 358 2 221 1 252 1 9 1 197 1 340 2 364 1 280 1 311 1 153 1 314 1 132 1 88 1 22 1 289 1 167 1 292 1 211 1 92 1 170 1 270 1 271 1 
118 1 0 1 232 1 49 1 185 1 301 1 303 3 187 1 358 3 235 1 221 1 252 1 9 1 197 1 340 2 364 1 280 1 237 1 311 1 153 1 314 1 161 1 132 1 22 1 292 1 211 1 92 1 170 1 270 1 271 2 
118 1 232 1 49 1 185 1 187 1 303 2 358 2 235 1 221 1 252 1 9 1 197 1 340 2 364 1 280 1 237 1 311 1 153 1 314 1 132 1 22 1 292 1 211 1 170 1 271 2 
118 1 232 2 184 1 13 1 301 1 161 1 106 1 187 2 303 1 358 1 307 1 364 1 223 1 114 1 311 2 292 2 328 1 170 1 183 1 211 1 153 1 270 1 200 1 
118 1 0 1 232 1 185 1 301 1 303 1 187 1 358 1 235 1 252 1 197 1 340 2 364 1 280 1 311 1 153 1 314 1 132 1 88 1 22 1 167 1 292 1 211 1 92 1 170 1 270 1 
198 1 
48 1 184 2 273 1 146 2 149 2 56 1 150 1 60 1 196 1 61 1 342 2 102 1 238 1 153 2 240 2 13 1 16 4 106 1 67 1 346 1 163 2 206 2 207 6 351 1 114 1 291 1 168 1 211 2 170 1 117 1 116 2 74 2 172 1 118 2 120 1 216 1 174 1 356 1 175 2 78 1 176 5 80 3 124 1 364 1 310 1 180 2 84 1 315 1 260 2 264 5 265 1 227 1 90 1 268 2 183 1 
48 1 75 1 273 1 216 1 56 1 150 1 78 1 176 3 60 1 124 1 80 1 196 1 16 2 67 1 346 1 264 3 265 1 206 1 227 1 207 2 291 1 172 1 
48 1 75 1 273 1 216 1 56 1 150 1 78 1 176 3 60 1 124 1 80 1 196 1 238 1 240 1 16 3 67 1 346 1 264 3 265 1 227 1 207 1 268 1 291 1 172 1 
48 1 75 1 273 1 216 1 56 1 150 1 175 1 78 1 176 3 60 1 80 1 124 1 196 1 238 1 240 1 16 3 67 1 346 1 264 3 265 1 206 1 227 1 207 2 268 1 291 1 172 1 
48 1 273 1 2 1 146 2 56 1 149 1 150 1 60 1 98 1 196 1 342 1 102 1 238 5 344 1 240 5 16 6 346 1 67 1 110 1 206 4 207 7 291 1 168 1 116 2 172 1 74 2 75 1 216 1 356 1 175 4 306 1 78 1 176 5 124 1 80 3 310 1 180 2 315 1 260 2 264 5 265 1 227 1 90 1 268 4 
48 1 273 1 146 2 56 1 149 1 150 1 60 1 196 1 342 1 102 1 238 1 240 2 16 4 346 1 67 1 163 2 206 2 207 4 291 1 168 1 116 2 117 1 172 1 74 2 216 1 356 1 175 2 78 1 176 4 124 1 80 2 310 1 180 2 315 1 260 2 264 4 265 1 227 1 90 1 268 2 
48 1 273 1 2 1 216 1 146 2 356 1 149 1 56 1 150 1 175 2 78 1 176 4 98 1 60 1 80 2 124 1 196 1 342 1 310 1 102 1 238 1 180 2 315 1 240 1 260 2 16 4 67 1 346 1 264 4 265 1 110 1 206 2 227 1 207 4 90 1 268 2 291 1 168 1 116 2 74 2 172 1 
48 1 273 1 2 1 216 1 146 2 356 1 149 1 56 1 150 1 175 2 78 1 176 4 98 1 60 1 80 2 124 1 196 1 342 1 310 1 102 1 238 1 180 2 315 1 240 1 260 2 16 4 67 1 346 1 264 4 265 1 110 1 206 2 227 1 207 4 90 1 268 2 291 1 168 1 116 2 74 2 172 1 
48 1 50 1 273 1 52 1 216 1 146 2 356 1 149 1 56 1 357 2 305 2 336 1 150 1 175 2 78 1 176 4 98 1 60 1 80 2 124 1 196 1 342 1 102 1 238 1 315 1 240 1 260 2 16 4 67 1 346 1 264 4 163 2 265 1 206 2 227 1 207 4 90 1 268 2 291 1 168 1 172 1 
48 1 2 1 273 1 216 1 146 2 356 1 149 1 56 1 150 1 306 1 175 3 78 1 176 4 98 1 60 1 80 2 124 1 196 1 342 1 310 1 102 1 238 1 180 2 315 1 240 1 260 2 16 5 67 1 346 1 264 4 265 1 110 1 206 3 227 1 90 1 207 5 268 3 291 1 168 1 116 2 74 2 172 1 
48 1 2 1 273 1 216 1 146 2 356 1 149 1 56 1 150 1 306 1 175 3 78 1 176 4 98 1 60 1 80 2 124 1 196 1 342 1 310 1 102 1 238 1 180 2 315 1 240 1 260 2 16 5 67 1 346 1 264 4 265 1 110 1 206 3 227 1 90 1 207 5 268 3 291 1 168 1 116 2 74 2 172 1 
48 1 273 1 146 2 56 1 149 1 336 1 150 1 60 1 196 1 342 1 102 1 238 1 240 1 16 4 346 1 67 1 163 2 206 2 207 4 291 1 168 1 117 1 172 1 216 1 356 1 305 2 357 2 175 2 78 1 176 4 124 1 80 2 315 1 260 2 264 4 265 1 227 1 90 1 268 2 
158 2 212 1 63 3 103 2 34 1 225 1 298 1 122 1 332 1 14 1 147 1 55 1 373 6 375 2 77 2 135 1 347 1 360 1 378 1 290 1 138 1 367 1 126 1 293 1 199 3 201 1 
212 2 330 1 122 11 147 4 189 1 97 1 55 2 335 1 77 2 337 2 27 3 279 1 126 2 155 1 199 8 158 4 103 1 63 6 34 1 225 11 65 2 14 2 241 1 266 1 319 3 373 14 375 1 267 1 135 2 347 2 321 1 378 1 269 1 
118 1 212 1 1 1 184 1 53 1 274 1 147 1 55 1 56 2 150 1 78 2 152 1 279 1 100 1 364 1 29 1 178 1 126 1 153 1 368 1 199 1 158 2 63 1 34 1 13 1 266 1 373 2 375 1 135 1 347 1 89 1 42 1 349 1 114 1 269 1 170 1 211 1 329 1 
1 2 330 2 143 1 184 1 53 2 274 1 147 7 56 3 55 3 97 4 234 2 150 1 337 2 235 1 151 2 279 1 100 2 153 3 199 10 201 1 158 6 103 4 63 10 284 1 13 2 65 2 14 3 347 3 290 1 114 2 293 1 211 3 170 2 73 1 118 3 212 3 298 1 122 7 77 8 78 3 222 2 29 1 364 2 367 1 126 3 368 1 34 3 225 7 370 2 266 1 373 20 375 2 135 3 89 2 42 1 378 3 269 1 137 2 138 1 
118 8 212 2 184 2 3 1 274 1 56 1 55 2 150 1 78 1 235 1 360 1 279 1 29 1 364 2 31 1 126 2 153 8 199 1 158 4 63 1 64 1 34 2 13 2 318 1 106 1 372 2 266 1 373 2 135 2 347 2 42 1 228 1 289 1 165 1 112 1 114 3 170 2 211 7 183 1 
212 1 330 1 122 1 5 1 274 1 147 1 55 1 56 1 150 1 77 1 337 1 78 1 99 1 126 1 199 1 158 2 103 1 63 2 34 1 225 1 65 1 14 1 373 3 135 1 347 1 42 1 378 1 43 1 269 1 
158 2 212 1 34 1 225 1 122 1 65 1 14 1 147 1 97 1 55 1 373 2 77 1 135 1 347 1 360 1 126 1 45 1 199 2 
158 2 212 1 103 1 63 2 34 1 297 1 330 1 225 1 122 1 147 1 55 1 373 2 77 1 135 1 347 1 360 1 378 1 126 1 
212 1 330 1 122 2 147 2 55 1 97 1 337 1 77 2 360 1 126 1 199 2 158 2 63 2 103 1 34 1 225 2 65 1 14 1 373 4 135 1 347 1 378 1 
158 2 212 1 34 1 225 1 122 1 65 1 14 1 147 1 97 1 55 1 373 2 77 1 135 1 347 1 165 1 126 1 45 1 199 2 
158 2 212 1 103 1 63 2 34 1 297 1 330 1 225 1 122 1 147 1 55 1 373 2 77 1 135 1 347 1 165 1 378 1 126 1 
212 1 330 1 122 2 147 2 55 1 97 1 337 1 77 2 126 1 199 2 158 2 63 2 103 1 34 1 225 2 65 1 14 1 373 4 135 1 347 1 165 1 378 1 
212 1 330 1 122 2 147 2 55 1 97 1 337 1 77 2 126 1 199 2 158 2 63 2 103 1 34 1 225 2 65 1 14 1 373 4 135 1 347 1 378 1 
118 1 212 1 1 1 184 1 53 1 56 1 55 1 234 1 78 1 279 1 100 1 364 1 126 1 153 1 199 1 158 2 63 1 34 1 13 1 266 1 373 2 375 1 135 1 347 1 89 1 114 1 170 1 211 1 
118 1 212 1 184 1 53 1 96 1 56 1 55 1 78 1 279 1 308 1 364 1 126 1 153 1 199 1 158 2 63 1 34 1 13 1 266 1 373 2 375 1 135 1 347 1 89 1 25 1 114 1 170 1 211 1 
212 1 330 1 122 2 147 2 55 1 97 1 337 1 77 2 126 1 199 2 158 2 63 2 103 1 34 1 225 2 65 1 14 1 373 4 135 1 347 1 378 1 269 1 
118 1 212 1 330 1 1 1 122 2 53 1 147 2 97 1 56 1 55 1 234 1 77 2 337 1 78 1 151 1 100 1 364 1 126 1 153 1 199 2 158 2 103 1 63 2 34 1 225 2 13 1 65 1 14 1 373 4 135 1 347 1 89 1 289 1 378 1 114 1 170 1 211 1 
212 1 330 1 5 1 122 1 274 1 147 1 97 1 55 1 56 1 150 1 77 1 337 1 78 1 99 1 126 1 199 2 158 2 63 1 34 1 225 1 65 1 14 1 109 1 373 3 135 1 347 1 42 1 378 1 269 1 
212 2 330 3 51 1 55 2 97 3 58 1 337 3 77 6 27 2 338 1 123 1 155 1 199 9 158 4 103 3 63 10 203 1 65 3 104 2 15 1 14 3 241 1 319 1 373 19 135 2 347 2 378 3 326 2 115 1 209 1 
212 3 47 1 173 1 295 1 330 2 54 2 97 2 55 3 58 1 77 4 337 3 338 1 27 2 82 1 155 2 199 14 158 6 103 2 63 12 203 1 65 3 104 1 15 2 14 3 261 1 319 2 373 26 135 3 347 3 323 1 378 2 326 4 115 1 209 2 
47 1 330 4 54 1 97 4 55 3 58 1 337 4 338 1 155 3 199 20 201 1 158 6 63 21 103 4 65 4 203 1 104 1 14 5 15 1 241 1 347 3 290 1 209 2 115 1 293 1 212 3 173 1 295 1 298 1 215 1 77 8 27 4 123 1 82 1 367 1 261 1 319 3 373 41 135 3 378 5 323 1 326 4 138 1 
47 1 212 4 173 1 295 1 330 3 298 1 215 1 54 2 55 4 97 3 58 1 337 4 77 7 27 4 338 1 123 1 367 1 82 1 155 3 199 20 201 1 158 8 103 4 63 18 203 1 65 4 104 1 15 1 14 5 261 1 241 1 319 3 373 38 135 4 347 4 323 1 378 4 326 4 290 1 115 1 138 1 209 2 293 1 
47 1 212 2 173 1 295 1 330 7 298 1 54 1 55 2 97 7 58 1 337 7 77 14 27 4 338 1 367 1 82 1 155 2 199 27 201 1 158 4 103 7 63 25 203 1 65 7 104 1 15 1 14 8 261 1 241 2 319 4 373 52 135 2 347 2 321 2 323 1 378 8 326 4 290 1 115 1 138 1 209 1 293 1 
213 1 348 1 244 1 309 1 258 1 325 1 276 1 277 1 283 1 257 1 
69 1 285 1 
213 1 348 1 309 1 166 1 258 1 11 1 283 1 257 1 127 1 
213 1 240 1 258 1 264 1 277 1 334 2 348 1 26 1 176 1 236 1 195 1 244 1 309 1 325 1 179 1 353 1 257 1 283 1 
213 1 240 1 258 1 264 1 277 1 334 2 348 1 26 1 176 1 236 1 195 1 244 1 309 1 325 1 179 1 353 1 257 1 283 1 
213 1 240 1 258 1 264 1 277 1 334 2 348 1 26 1 176 1 236 1 195 1 244 1 309 1 325 1 179 1 353 1 257 1 283 1 
190 1 57 1 380 1 
190 1 57 1 380 1 
255 1 302 1 
255 1 302 1 380 1 
316 1 355 1 
213 1 355 1 274 2 56 2 334 1 150 2 78 2 236 1 176 1 309 1 28 1 179 1 283 1 257 1 316 1 258 1 317 1 162 1 262 1 285 1 264 1 205 1 375 1 348 1 69 1 42 2 210 1 
190 1 57 1 
255 1 302 1 380 1 
118 2 212 1 3 1 55 1 56 2 150 2 78 2 279 1 364 1 126 1 153 2 86 1 199 1 158 2 63 1 34 1 13 1 36 1 242 1 372 2 266 1 373 2 135 1 347 1 112 1 114 1 269 1 230 1 170 1 211 2 249 1 
118 2 12 1 185 1 132 1 192 1 22 1 235 1 252 1 289 1 340 2 364 1 280 1 208 1 292 1 170 1 211 2 153 2 92 1 314 1 
118 1 121 1 185 1 132 1 192 1 22 1 235 1 252 1 340 2 364 1 280 1 292 1 211 1 153 1 92 1 170 1 314 1 
118 1 296 1 184 1 13 1 106 1 364 1 114 1 208 1 292 1 170 1 211 1 153 1 183 1 200 1 
118 1 12 1 185 1 132 1 192 1 22 1 235 1 252 1 340 2 364 1 280 1 208 1 292 1 211 1 153 1 92 1 170 1 314 1 
294 1 
240 1 160 1 332 1 342 1 149 1 238 1 243 1 
356 1 149 1 176 1 80 1 342 1 310 1 238 1 180 1 315 1 240 2 264 1 163 1 90 1 207 1 168 1 116 1 74 1 
330 2 184 1 233 1 331 2 144 6 93 2 333 1 149 9 278 1 337 2 61 2 342 8 238 2 153 3 62 2 240 8 13 3 160 1 65 2 14 2 286 2 163 12 243 1 23 2 289 1 207 5 114 10 168 4 170 3 211 3 74 6 118 3 120 1 119 2 356 4 359 3 176 5 253 2 124 2 80 3 364 4 312 1 313 1 315 4 370 2 133 2 264 5 40 2 89 3 90 4 378 2 327 1 140 6 381 2 
47 1 120 1 173 1 295 1 330 2 144 5 356 2 149 8 337 2 176 1 27 1 80 1 363 1 61 1 342 5 238 2 82 1 155 1 315 2 240 5 65 2 14 2 261 1 286 2 264 1 163 6 319 1 207 1 90 2 378 2 71 1 168 2 140 5 381 1 74 3 
141 1 2 1 274 1 356 1 56 1 149 2 150 1 78 1 176 1 99 1 339 1 342 2 33 1 315 1 14 2 286 2 264 1 320 1 42 1 90 1 378 1 91 1 290 1 168 1 138 1 293 1 381 1 172 1 
315 1 240 1 160 1 356 1 149 1 243 1 90 1 342 1 238 1 168 1 
330 2 240 5 65 2 144 5 14 2 370 1 286 2 149 5 163 10 337 2 378 2 342 5 140 5 381 1 74 5 
176 1 240 1 80 1 207 1 238 1 264 1 
118 4 120 2 184 2 233 1 4 1 356 2 149 2 176 3 80 2 364 1 61 2 342 2 312 2 84 1 153 4 315 1 13 1 17 1 106 1 264 3 21 1 90 2 207 4 351 1 114 1 168 2 170 1 211 4 183 1 
212 1 118 1 1 1 184 1 53 1 274 2 217 1 56 3 55 1 234 1 150 2 78 3 99 2 100 1 364 1 33 1 126 1 153 1 158 2 63 1 34 1 13 1 266 1 373 1 375 1 135 1 347 1 89 1 42 2 114 1 211 1 170 1 
315 1 120 1 240 4 144 2 356 1 149 1 163 4 90 1 61 1 342 2 238 2 168 1 140 2 201 1 74 2 
213 1 377 1 283 1 
213 1 377 1 283 1 
213 1 316 1 244 1 32 1 283 1 
213 1 377 1 283 1 
213 1 194 1 283 1 
213 1 194 1 283 1 
213 1 194 1 283 1 
213 1 283 1 
309 1 257 1 
158 4 212 2 63 4 103 2 298 1 54 1 14 1 97 1 55 2 373 8 77 3 135 2 347 2 378 1 290 1 138 1 367 1 293 1 199 4 201 1 
63 3 103 2 298 1 332 1 14 1 373 6 77 2 378 1 290 1 367 1 138 1 293 1 199 3 201 1 
158 2 212 1 103 1 63 2 330 1 65 1 14 1 55 1 97 1 373 4 77 2 337 1 135 1 347 1 378 1 199 2 128 1 
103 1 63 4 330 1 65 1 14 1 241 1 97 1 319 1 373 7 337 1 77 2 27 2 378 1 155 1 199 3 
212 2 330 2 298 1 54 2 97 4 55 2 77 9 337 2 27 2 367 1 199 11 201 1 158 4 63 12 103 5 65 2 14 3 241 1 319 2 39 1 373 23 267 1 135 2 347 2 321 1 378 3 290 2 138 1 293 2 
63 1 27 1 373 1 
319 1 373 1 199 1 
212 1 158 2 63 3 103 2 330 1 65 1 14 1 370 1 55 1 97 1 373 6 337 1 77 3 135 1 347 1 378 1 199 3 128 1 
212 1 47 1 173 1 330 2 295 1 97 1 55 1 58 1 337 2 77 2 27 1 82 1 155 1 199 6 158 2 63 6 103 1 65 2 14 2 261 1 319 1 373 12 135 1 347 1 378 2 
63 3 103 1 14 1 97 1 373 6 77 2 378 1 290 1 138 1 293 1 199 3 
158 2 212 1 103 1 63 2 298 1 54 1 97 1 55 1 39 1 373 3 77 2 135 1 347 1 290 1 367 1 293 1 199 1 
212 1 158 2 103 3 63 5 14 2 55 1 97 2 58 1 373 10 77 5 135 1 347 1 339 1 378 2 290 2 138 1 293 2 199 5 
158 2 212 1 65 1 14 1 55 1 97 1 58 1 373 2 77 1 135 1 347 1 199 2 
158 2 212 1 103 1 63 2 330 1 65 1 14 1 55 1 97 1 58 1 373 4 77 2 337 1 135 1 347 1 378 1 199 2 
158 6 212 3 63 2 103 1 54 1 55 3 97 1 58 1 39 1 373 3 77 2 135 3 347 3 123 1 290 1 293 1 199 1 
212 5 330 3 298 1 54 2 55 5 97 5 58 1 337 3 77 12 27 4 123 1 81 1 367 1 155 1 199 16 201 1 128 1 158 10 63 18 103 7 65 3 14 5 241 1 39 1 319 3 373 34 135 5 347 5 378 5 290 3 44 1 138 2 293 3 171 1 
158 2 212 1 103 2 63 4 298 1 14 1 55 1 58 1 319 1 373 8 77 2 135 1 347 1 27 1 378 1 290 1 138 1 367 1 82 1 293 1 155 1 199 4 201 1 
212 2 298 1 55 2 97 1 58 1 337 1 77 3 27 2 367 1 82 1 155 1 199 6 201 1 128 1 158 4 103 2 63 5 65 1 14 2 241 1 319 1 373 11 135 2 347 2 378 1 290 1 138 1 293 1 
212 3 47 1 173 1 295 1 330 2 298 1 54 1 97 1 55 3 58 1 337 2 77 4 27 1 367 1 82 1 155 1 199 9 201 1 128 1 158 6 63 10 103 3 65 2 14 3 261 1 319 1 373 19 135 3 347 3 378 3 290 1 138 1 293 1 
212 3 47 1 173 1 330 1 295 1 298 1 54 1 97 2 55 3 58 1 337 2 77 5 27 1 367 1 82 1 155 1 199 10 201 1 128 1 158 6 63 7 103 3 65 2 14 3 261 1 319 1 373 17 135 3 347 3 378 2 290 1 138 1 293 1 
158 2 212 1 103 2 63 4 298 1 14 1 55 1 58 1 319 1 373 8 77 2 135 1 347 1 27 1 378 1 290 1 138 1 367 1 82 1 293 1 155 1 199 4 201 1 
212 1 47 1 173 1 330 2 295 1 97 1 55 1 58 1 337 2 77 2 27 1 82 1 155 1 199 6 158 2 63 6 103 1 65 2 14 2 261 1 319 1 373 12 135 1 347 1 378 2 
212 4 47 1 173 1 295 1 330 1 298 1 54 2 97 2 55 4 58 1 337 2 77 5 27 1 367 1 82 1 155 1 199 10 201 1 128 1 158 8 63 8 103 3 65 2 14 3 261 1 319 1 373 18 135 4 347 4 378 2 290 1 138 1 293 1 
212 4 47 1 173 1 295 1 330 2 54 2 97 3 55 4 58 1 337 3 77 6 27 1 123 1 82 1 155 1 199 9 158 8 63 7 103 3 65 3 14 3 261 1 319 1 373 16 135 4 347 4 378 2 
63 4 103 3 298 2 14 1 97 3 373 7 77 6 378 1 290 3 367 1 138 1 293 3 199 3 
212 4 47 1 173 1 295 1 330 1 298 1 54 2 97 1 55 4 58 1 337 2 77 4 27 1 123 1 367 1 82 1 155 1 199 10 201 1 158 8 63 8 103 3 65 2 14 3 261 1 319 1 373 18 135 4 347 4 378 2 290 1 138 1 293 1 
273 1 107 1 56 1 150 1 375 1 343 1 78 1 
345 1 273 1 107 1 56 1 150 1 375 1 78 1 226 1 376 1 366 1 156 1 343 1 
118 1 184 1 13 1 332 1 364 1 106 1 114 1 170 1 183 1 153 1 211 1 
118 1 1 1 184 1 13 1 53 1 274 1 56 2 150 1 375 1 78 2 89 1 42 1 364 1 29 1 114 1 211 1 153 1 170 1 
62 1 118 1 1 1 13 2 53 1 274 2 133 1 346 1 56 2 150 2 375 1 78 2 60 1 89 2 42 1 364 1 29 1 114 3 312 1 211 1 153 1 170 1 172 1 
118 2 53 1 274 2 56 2 150 2 78 2 308 1 60 1 29 1 364 1 312 1 153 2 62 1 13 2 133 1 346 1 375 1 89 2 42 1 114 3 170 1 211 2 354 1 172 1 
62 1 118 3 272 1 184 1 240 1 13 1 133 1 218 1 264 2 40 1 359 1 176 2 89 1 124 1 207 1 364 1 114 4 238 1 312 1 211 3 153 3 170 1 354 1 
62 1 118 3 184 1 240 1 13 1 93 1 133 1 264 2 40 1 359 1 176 2 89 1 124 1 207 1 364 1 114 4 238 1 312 1 211 3 153 3 170 1 354 1 
118 1 364 1 318 1 170 1 153 1 211 1 
118 7 64 1 184 2 129 1 13 2 318 1 372 1 79 1 235 1 89 1 228 1 289 1 112 1 364 3 31 1 114 3 211 6 153 7 85 1 170 2 313 1 
212 2 118 1 1 1 298 1 122 1 53 1 274 1 147 1 55 2 56 2 234 1 150 1 77 2 78 2 151 1 222 1 100 1 364 1 29 1 367 1 126 2 86 1 153 1 199 3 201 1 158 4 63 3 103 2 34 2 225 1 13 1 14 1 373 6 375 2 135 2 347 2 89 1 42 1 289 1 378 1 290 1 114 1 269 1 138 1 293 1 170 1 211 1 
118 1 184 1 233 1 331 1 93 1 356 2 149 1 359 1 176 3 253 1 124 1 80 1 342 1 238 1 153 1 315 2 240 1 160 1 162 1 264 3 243 1 40 1 23 1 90 2 207 2 114 2 168 2 211 1 
118 2 13 1 318 1 333 1 40 1 89 1 289 1 364 2 114 2 211 2 153 2 170 1 313 1 
118 4 184 1 13 1 106 1 289 1 364 1 246 1 114 1 211 4 153 4 183 1 170 1 354 1 
118 2 129 1 13 1 79 1 89 1 364 2 114 1 312 1 248 1 83 1 211 2 153 2 170 1 73 1 
118 1 184 1 340 1 364 1 132 1 170 1 153 1 211 1 22 1 314 1 
118 2 13 1 36 1 235 1 289 1 112 1 364 1 114 1 211 2 153 2 170 1 
118 5 184 1 13 2 106 1 289 1 228 1 112 1 364 2 246 1 114 3 31 1 312 1 183 1 211 4 153 5 170 2 
118 5 159 1 184 1 13 2 106 1 289 1 112 1 364 2 246 1 114 3 31 1 312 1 183 1 211 4 153 5 170 2 
118 1 184 1 13 1 53 1 274 1 56 2 150 1 375 1 78 2 89 1 308 1 42 1 364 1 29 1 114 1 211 1 153 1 170 1 
118 1 129 1 13 1 79 1 89 1 364 2 114 1 312 1 211 1 153 1 85 1 170 1 313 1 
369 1 324 1 204 1 375 1 219 1 
141 1 274 1 56 1 150 1 78 1 176 1 99 1 238 1 33 1 240 1 162 1 108 1 264 1 320 1 42 1 70 1 324 1 91 1 169 1 172 1 
324 1 242 1 204 1 56 1 230 1 150 1 249 1 78 1 219 1 
324 1 108 1 169 1 
221 1 49 1 9 1 332 1 
221 1 49 1 9 1 301 1 303 1 270 1 358 1 
187 1 303 1 311 1 
49 1 301 1 303 3 304 1 88 1 263 1 358 3 221 1 288 2 9 1 256 1 270 1 
221 1 49 1 9 1 301 1 101 1 303 2 270 1 271 1 358 2 
221 1 340 1 185 1 301 1 303 1 148 1 88 1 282 1 22 1 270 1 358 1 
221 1 49 1 301 1 303 1 88 1 270 1 358 1 
49 2 9 1 301 1 303 1 88 1 270 1 358 1 
49 1 76 1 301 2 303 2 88 1 358 2 221 1 177 1 365 1 270 2 
49 1 301 1 259 1 303 3 88 1 358 3 221 2 9 1 111 1 350 1 282 1 270 1 271 2 
239 1 49 1 301 1 185 1 303 2 132 1 88 1 22 1 358 2 221 1 9 1 340 2 280 1 270 1 271 1 
49 1 301 2 303 4 88 1 358 4 221 2 9 1 322 1 111 1 101 1 282 1 270 2 271 2 
221 1 49 1 9 1 301 1 303 1 88 1 270 1 358 1 
49 2 301 1 105 1 303 4 263 1 358 4 288 1 221 3 9 2 111 1 256 1 282 1 270 1 271 2 
49 1 301 1 303 2 88 1 358 2 221 1 9 1 229 1 30 1 270 1 87 1 271 1 
49 1 299 1 301 1 303 3 263 1 88 1 358 3 221 1 288 2 9 1 256 2 270 1 
221 2 35 1 131 1 24 2 
301 1 303 1 191 1 88 1 270 1 358 1 
221 1 49 1 9 1 301 1 350 1 303 2 88 1 270 1 271 1 358 2 
224 1 
221 1 49 1 9 1 301 1 303 1 88 1 270 1 358 1 
49 1 301 1 303 3 88 1 358 3 288 1 221 1 9 1 350 1 270 1 271 1 
221 1 111 1 105 1 282 1 
221 1 49 1 

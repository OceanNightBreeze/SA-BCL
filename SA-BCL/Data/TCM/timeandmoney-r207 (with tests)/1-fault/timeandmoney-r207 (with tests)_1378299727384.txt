#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 349 (131,249) (131,249) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 349 (131,249) (131,249) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 349 (131,249) (131,249) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 218 4 187 2 147 1 228 1 79 7 349 1 109 3 110 1 68 2 55 7 19 1 262 2 90 2 315 2 298 2 366 1 180 1 221 3 131 1 62 2 222 1 249 1 251 1 134 1 
194 1 218 4 187 2 147 1 228 1 79 7 349 1 109 3 110 1 68 2 55 7 19 1 262 2 90 2 315 2 298 2 366 1 180 1 221 3 131 1 62 2 222 1 249 1 251 1 134 1 
194 1 218 4 187 2 147 1 228 1 79 7 349 1 109 3 110 1 68 2 55 7 19 1 262 2 90 2 315 2 298 2 366 1 180 1 221 3 131 1 62 2 222 1 249 1 251 1 134 1 
194 1 218 4 147 1 79 7 55 7 262 2 315 2 366 1 180 1 221 3 62 2 131 1 222 1 249 1 134 1 251 1 14 1 187 2 228 1 109 4 349 1 110 1 68 2 19 1 90 2 164 1 298 2 
14 1 218 3 187 1 228 1 79 4 349 1 109 3 110 2 68 1 55 4 262 1 90 1 315 1 164 1 8 1 298 1 366 1 221 2 
194 1 14 1 359 1 187 1 147 1 228 1 79 2 109 1 55 2 262 1 315 1 90 1 164 1 125 1 62 1 319 1 
14 1 218 1 228 1 79 3 109 2 55 3 262 2 315 2 164 1 298 1 221 1 62 1 251 1 
218 7 102 1 79 9 55 9 262 2 315 2 8 1 366 1 221 4 62 1 222 1 105 1 251 1 14 1 187 1 228 1 109 5 349 1 110 2 68 1 19 1 90 1 164 1 298 3 
218 7 102 1 79 9 55 9 262 2 315 2 8 1 366 1 221 4 62 1 222 1 105 1 251 1 14 1 187 1 228 1 109 5 349 1 110 2 68 1 19 1 90 1 164 1 298 3 
41 1 32 1 255 1 
32 1 94 1 306 2 
93 2 104 2 209 2 268 2 76 2 37 1 261 1 84 2 
100 1 311 1 153 2 152 1 261 1 220 1 343 1 200 1 10 1 245 1 265 1 104 2 158 1 268 2 37 1 223 2 84 3 106 1 253 1 372 2 293 1 225 1 208 2 86 1 66 1 141 1 163 1 190 1 209 2 232 2 328 1 233 1 50 1 234 1 93 3 76 2 119 1 
155 1 205 1 138 1 93 1 104 1 209 1 268 1 76 1 37 1 84 1 
205 1 41 1 160 1 32 1 123 1 209 1 362 1 175 1 34 1 165 1 286 1 93 1 247 1 84 1 
205 1 41 1 160 1 32 1 123 1 209 1 362 1 175 2 286 1 104 1 93 1 247 2 76 1 268 1 84 1 
346 1 236 1 52 1 247 1 175 1 
307 1 346 1 41 1 236 1 32 1 331 1 247 2 175 2 
236 1 247 1 175 1 
346 1 205 1 338 1 138 1 209 1 175 1 155 1 104 1 93 1 247 1 76 1 268 1 37 1 84 1 
32 1 
320 1 346 1 41 1 236 1 32 1 331 1 247 2 175 2 
346 2 41 1 145 1 275 1 348 1 32 1 341 1 313 1 297 1 33 2 175 5 113 1 353 2 236 2 11 2 182 1 331 1 247 5 63 1 
347 1 253 1 372 1 208 1 190 1 209 1 220 1 328 1 200 1 343 1 233 1 234 1 10 1 93 2 76 1 268 1 159 1 223 1 381 1 84 2 
255 1 261 1 
336 1 209 2 261 2 288 1 93 2 104 1 76 1 268 1 84 2 
347 1 21 1 92 1 
253 1 372 1 208 1 190 1 261 1 220 1 328 1 343 1 200 1 233 1 234 1 10 1 93 1 334 1 223 1 84 1 
4 1 111 1 209 5 261 1 165 1 243 1 288 1 93 5 104 1 76 4 268 4 159 1 381 2 84 5 
205 1 138 1 93 2 209 2 268 2 76 2 350 1 84 2 
104 1 93 3 209 3 268 3 76 3 261 1 381 1 84 3 
205 1 138 1 93 1 209 1 268 1 76 1 84 1 
336 1 205 1 288 1 93 1 104 1 209 1 268 1 76 1 84 1 
100 1 311 1 123 1 153 2 261 1 220 1 362 1 175 1 200 1 343 1 286 1 288 1 10 1 265 1 104 2 268 3 247 1 159 1 37 1 223 1 84 4 253 1 15 1 205 1 372 1 160 1 293 1 225 1 208 1 86 1 66 1 141 1 163 1 190 1 209 3 232 1 69 1 328 1 233 1 234 1 93 4 76 3 381 1 119 1 
165 1 243 1 93 2 209 2 268 1 76 1 261 1 381 1 84 2 
205 1 15 1 160 1 32 1 123 1 209 3 362 1 175 1 286 1 288 1 104 1 93 3 73 1 247 1 76 3 268 3 159 1 381 2 84 3 
347 1 288 1 21 1 93 2 104 1 209 2 268 2 76 2 381 1 84 2 
372 1 253 1 208 1 190 1 261 1 220 1 328 1 343 1 200 1 233 1 234 1 10 1 93 1 223 1 84 1 
372 1 253 1 208 1 140 1 190 1 256 1 261 1 220 1 328 1 200 1 234 1 10 1 93 1 223 1 84 1 
347 2 40 1 293 2 100 1 225 1 29 1 311 1 240 1 374 1 66 1 163 1 153 2 363 1 232 4 278 1 329 1 237 1 21 2 92 2 115 1 267 1 158 2 217 1 119 1 
205 1 160 1 93 1 209 1 268 1 76 1 350 1 84 1 
373 1 98 1 
373 1 98 1 
135 1 301 1 
135 1 301 1 
135 1 301 1 
373 1 173 1 98 1 
373 1 173 1 98 1 
206 1 373 1 98 1 
135 1 157 1 373 2 301 1 356 1 98 2 
373 1 173 1 98 1 
373 1 198 1 98 1 
373 1 198 1 98 1 
373 1 198 1 98 1 
136 1 371 1 206 1 373 1 294 1 209 2 261 1 175 1 379 1 93 2 179 1 345 1 61 1 304 1 303 1 370 1 247 1 76 2 268 2 170 1 84 2 98 1 271 1 64 1 
290 1 373 2 283 2 32 1 7 1 175 2 263 1 157 1 379 1 179 2 345 2 304 2 303 3 96 1 247 2 170 2 250 1 98 2 357 1 
187 1 68 1 90 1 
187 1 319 1 90 1 
42 1 287 1 17 1 68 2 319 1 90 3 
42 1 287 1 68 1 326 1 319 1 90 2 
287 1 42 2 68 1 319 1 90 2 
257 1 337 2 310 2 32 2 124 1 313 3 33 1 175 5 364 1 244 2 61 1 11 1 182 1 247 5 204 1 65 1 346 4 136 1 371 1 40 1 41 1 275 2 353 1 329 1 236 1 115 1 237 1 94 1 305 1 331 1 332 1 306 3 
172 1 257 3 337 6 145 1 52 5 32 5 53 1 124 2 314 5 313 8 33 2 175 9 364 2 244 6 11 2 182 1 247 9 346 7 321 1 371 4 40 3 41 1 275 6 353 2 329 3 236 6 354 1 115 3 237 3 72 1 94 3 380 1 332 1 331 1 306 9 
257 1 337 2 145 1 310 1 32 3 124 1 313 3 33 1 175 3 364 1 244 2 11 1 247 3 204 1 346 2 65 1 371 1 40 1 41 1 275 2 353 1 329 1 115 1 237 1 94 2 306 4 
172 1 257 2 337 4 145 1 310 2 32 4 53 1 124 1 313 5 33 1 175 4 364 1 244 4 11 1 247 4 204 1 65 1 346 3 371 2 40 2 41 1 275 4 353 1 329 2 115 2 237 2 72 1 94 3 306 7 
253 1 255 1 181 1 
166 1 253 1 
60 1 
253 1 10 1 190 1 
253 1 239 1 
253 1 10 1 
253 3 365 1 10 1 181 2 246 1 190 1 
40 1 186 1 185 1 293 3 374 2 31 1 197 2 325 1 89 1 6 1 276 1 57 1 232 7 329 1 158 4 133 1 217 3 
40 1 186 1 185 1 293 3 374 2 31 1 197 2 325 1 89 1 6 1 276 1 57 1 232 7 329 1 158 4 133 1 217 3 
40 1 185 1 186 1 293 3 374 2 31 1 197 2 325 1 89 1 6 1 276 1 57 1 232 7 329 1 158 4 212 1 133 1 217 3 
257 3 311 1 31 1 259 1 197 3 153 2 6 2 57 2 158 16 202 4 12 1 36 1 83 1 133 2 40 4 185 1 186 1 225 1 293 15 107 1 374 5 46 3 325 5 163 1 89 2 276 1 232 31 329 4 237 3 115 3 169 1 51 1 119 1 217 10 
40 1 185 1 186 1 107 1 293 4 225 2 311 2 374 3 197 2 325 1 163 2 89 1 6 1 153 4 340 1 276 1 57 1 232 9 329 1 158 5 22 1 133 1 217 4 119 2 
99 1 218 1 79 2 54 1 55 2 262 1 315 1 200 1 62 1 223 1 319 1 85 1 14 1 372 1 187 1 208 1 227 1 228 1 45 1 109 1 17 1 68 1 142 1 90 2 164 1 211 1 234 1 74 1 97 1 216 1 
218 2 79 3 54 1 55 3 56 1 262 1 315 1 200 1 62 1 223 1 319 1 85 1 14 1 372 1 187 1 208 1 45 1 109 1 17 1 68 1 231 1 142 1 90 2 164 1 211 1 234 1 168 1 74 1 97 1 216 1 
218 2 79 2 55 2 56 1 200 1 62 1 223 1 319 1 85 1 14 1 372 1 187 1 208 1 45 1 109 1 17 1 68 1 231 1 142 1 90 2 164 1 211 1 234 1 97 1 216 1 
280 1 253 1 372 1 208 1 78 1 79 1 45 2 55 1 142 2 342 1 262 1 315 1 328 1 200 1 234 1 10 1 177 1 168 1 62 2 117 1 223 1 97 2 25 1 
85 1 99 1 372 1 187 1 208 1 228 1 79 1 45 1 17 1 54 1 68 1 55 1 231 1 142 1 262 1 90 2 315 1 211 1 200 1 234 1 74 1 62 1 223 1 97 1 319 1 216 1 
146 1 
280 1 282 4 101 2 154 1 200 1 286 1 10 1 11 1 247 5 252 2 253 1 205 1 160 1 208 2 108 1 209 1 165 1 353 1 300 1 302 2 355 1 75 1 306 2 120 1 27 1 360 1 78 1 32 2 123 1 124 1 313 2 80 2 33 1 362 1 175 5 316 2 34 1 130 1 182 1 223 2 269 2 84 1 372 2 41 1 137 1 322 2 275 2 189 1 87 1 328 2 234 1 236 6 93 1 94 2 331 3 
282 2 123 1 154 1 362 1 175 3 34 1 286 1 247 3 84 1 320 1 205 1 160 1 322 1 189 1 108 1 87 1 209 1 165 1 236 2 93 1 331 1 75 1 
282 3 123 1 32 1 154 1 362 1 175 3 34 1 316 1 286 1 247 3 84 1 320 1 205 1 160 1 41 1 189 1 108 1 87 1 209 1 165 1 236 1 93 1 331 1 75 1 
282 3 101 1 123 1 32 1 154 1 362 1 175 3 34 1 316 1 286 1 247 3 84 1 320 1 205 1 160 1 41 1 322 1 189 1 108 1 87 1 209 1 165 1 236 2 93 1 331 1 75 1 
282 6 101 4 199 1 154 1 103 1 286 1 11 1 247 5 252 2 205 1 160 1 108 1 209 1 71 1 165 1 353 1 355 1 302 2 75 1 123 1 32 5 313 1 362 1 33 1 80 2 175 5 34 1 316 4 178 1 182 1 130 1 269 2 84 1 320 1 41 5 322 4 275 1 189 1 188 1 87 1 236 7 93 1 94 2 331 3 
282 4 101 2 154 1 286 1 11 1 247 4 252 2 205 1 160 1 108 1 209 1 165 1 353 1 300 1 355 1 302 2 75 1 306 2 123 1 32 2 313 1 362 1 33 1 80 2 175 4 34 1 316 2 182 1 130 1 269 2 84 1 41 1 322 2 275 1 189 1 87 1 236 4 93 1 94 2 331 2 
282 4 101 2 32 1 123 1 313 1 154 1 80 2 33 1 362 1 175 4 103 1 316 2 34 1 286 1 178 1 11 1 130 1 182 1 247 4 269 2 84 1 252 2 205 1 41 1 160 1 322 2 275 1 189 1 108 1 188 1 87 1 209 1 165 1 353 1 236 4 302 2 355 1 93 1 94 2 331 2 75 1 
282 4 101 2 32 1 123 1 313 1 154 1 80 2 33 1 362 1 175 4 103 1 316 2 34 1 286 1 178 1 11 1 130 1 182 1 247 4 269 2 84 1 252 2 205 1 41 1 160 1 322 2 275 1 189 1 108 1 188 1 87 1 209 1 165 1 353 1 236 4 302 2 355 1 93 1 94 2 331 2 75 1 
0 2 282 4 195 1 101 2 32 1 123 1 313 1 154 1 80 2 33 1 362 1 175 4 316 2 34 1 286 1 178 1 82 1 11 1 130 1 182 1 247 4 269 2 84 1 205 1 41 1 160 1 322 2 275 1 189 1 108 1 87 1 209 1 375 2 165 1 353 1 236 4 93 1 331 2 95 1 75 1 306 2 
282 5 101 3 32 1 123 1 313 1 154 1 80 2 33 1 362 1 175 4 103 1 34 1 316 3 286 1 178 1 11 1 130 1 182 1 247 4 269 2 84 1 252 2 205 1 41 1 160 1 322 3 275 1 188 1 189 1 108 1 87 1 209 1 71 1 165 1 353 1 236 5 302 2 355 1 93 1 94 2 331 2 75 1 
282 5 101 3 32 1 123 1 313 1 154 1 80 2 33 1 362 1 175 4 103 1 34 1 316 3 286 1 178 1 11 1 130 1 182 1 247 4 269 2 84 1 252 2 205 1 41 1 160 1 322 3 275 1 188 1 189 1 108 1 87 1 209 1 71 1 165 1 353 1 236 5 302 2 355 1 93 1 94 2 331 2 75 1 
0 2 282 4 101 2 154 1 286 1 11 1 247 4 205 1 160 1 108 1 209 1 165 1 353 1 300 1 75 1 306 2 123 1 32 1 313 1 362 1 33 1 80 2 175 4 34 1 316 2 82 1 182 1 130 1 269 2 84 1 41 1 322 2 275 1 189 1 87 1 375 2 236 4 93 1 331 2 
100 1 311 1 197 1 153 2 261 2 57 1 158 3 347 1 40 1 185 1 186 1 225 1 293 3 66 1 374 2 255 1 163 1 89 1 276 1 232 6 278 1 329 1 21 1 92 1 119 1 217 2 
257 2 100 1 311 2 153 4 261 1 158 8 202 3 317 1 12 1 39 1 347 11 40 1 293 6 225 2 86 1 374 1 66 2 46 3 325 1 295 1 163 2 232 14 91 1 50 1 377 1 329 2 92 11 237 2 21 4 115 1 51 1 217 2 119 2 
100 1 311 1 258 1 153 2 261 1 220 1 200 1 343 1 10 1 158 1 129 1 268 1 223 1 159 1 39 1 84 2 253 1 372 1 225 1 293 1 208 1 66 1 86 1 190 1 163 1 209 1 327 1 232 2 328 1 233 1 234 1 50 1 21 1 93 2 334 1 76 1 381 1 119 1 
100 3 197 1 3 1 153 6 57 1 343 2 200 2 156 2 10 2 158 10 159 1 347 7 253 2 293 10 208 3 66 3 209 1 163 3 351 2 21 7 115 2 76 1 119 3 217 8 257 2 311 3 261 2 220 2 265 2 268 1 223 3 84 3 39 1 40 3 372 3 185 1 186 1 225 3 374 4 86 1 324 2 325 4 231 1 190 2 89 1 276 1 232 20 328 1 277 2 191 1 143 1 233 2 50 1 234 2 329 3 92 7 237 2 93 3 381 1 
280 1 122 1 100 2 311 2 78 1 174 1 241 1 153 4 152 2 176 1 200 2 10 2 158 1 268 1 223 8 84 1 272 1 253 3 372 7 207 1 225 2 293 1 323 1 227 1 208 8 66 2 86 1 231 1 209 1 163 2 232 2 278 1 328 2 234 2 50 1 93 1 76 1 381 1 119 2 
257 1 100 1 311 1 153 2 288 1 104 1 158 1 268 1 39 1 84 1 347 1 40 1 225 1 293 2 374 1 66 1 163 1 209 1 232 3 329 1 21 1 92 1 237 1 115 1 93 1 76 1 215 1 217 1 119 1 
347 1 100 1 225 1 311 1 29 1 66 1 325 1 163 1 153 2 232 2 278 1 329 1 21 1 92 1 237 1 158 2 217 1 119 1 
347 1 40 1 100 1 225 1 293 2 311 1 240 1 374 1 66 1 163 1 153 2 232 2 278 1 21 1 92 1 115 1 217 1 119 1 
257 1 100 1 311 1 153 2 158 2 347 2 40 1 225 1 293 2 66 1 374 1 325 1 163 1 232 4 278 1 329 1 237 1 92 2 21 2 115 1 119 1 217 2 
347 1 272 1 100 1 225 1 311 1 29 1 66 1 325 1 163 1 153 2 232 2 329 1 21 1 92 1 237 1 158 2 217 1 119 1 
347 1 272 1 40 1 100 1 225 1 293 2 311 1 240 1 374 1 66 1 163 1 153 2 232 2 21 1 92 1 115 1 217 1 119 1 
257 1 100 1 311 1 153 2 158 2 272 1 347 2 40 1 225 1 293 2 66 1 374 1 325 1 163 1 232 4 329 1 237 1 92 2 21 2 115 1 119 1 217 2 
347 2 257 1 40 1 293 2 100 1 225 1 311 1 374 1 66 1 325 1 163 1 153 2 232 4 329 1 115 1 21 2 92 2 237 1 158 2 217 2 119 1 
100 1 311 1 153 2 261 1 220 1 200 1 343 1 10 1 265 1 158 1 223 1 84 1 372 1 253 1 225 1 293 1 208 1 66 1 86 1 190 1 163 1 232 2 328 1 233 1 50 1 234 1 93 1 119 1 
100 1 311 1 153 2 261 1 220 1 200 1 10 1 158 1 223 1 84 1 372 1 253 1 225 1 293 1 208 1 66 1 86 1 67 1 140 1 190 1 163 1 256 1 232 2 328 1 50 1 234 1 93 1 119 1 
257 1 100 1 311 1 153 2 158 2 39 1 347 2 40 1 225 1 293 2 66 1 374 1 325 1 163 1 232 4 329 1 237 1 92 2 21 2 115 1 119 1 217 2 
257 1 100 1 311 1 153 2 220 1 200 1 343 1 265 1 10 1 158 2 223 1 84 1 347 2 40 1 372 1 253 1 293 2 225 1 208 1 227 1 374 1 66 1 325 1 190 1 163 1 232 4 277 1 233 1 234 1 329 1 115 1 21 2 92 2 237 1 93 1 217 2 119 1 
257 1 100 1 311 1 153 2 288 1 104 1 158 2 268 1 39 1 84 1 347 1 40 1 293 1 225 1 66 1 325 1 163 1 209 1 232 3 114 1 329 1 115 1 237 1 92 1 21 1 93 1 76 1 217 1 119 1 
281 1 148 1 197 1 284 1 153 6 57 1 158 20 202 4 12 1 13 1 291 1 293 21 107 1 16 1 163 3 115 4 116 1 22 1 217 8 119 3 171 1 257 4 309 1 28 4 311 3 368 1 183 1 40 5 184 2 186 1 185 1 225 3 374 4 46 3 325 4 49 1 89 1 232 41 276 1 235 1 329 5 237 4 51 3 
281 1 257 4 309 1 28 4 148 1 311 4 197 1 284 1 153 8 57 1 368 1 158 20 202 4 183 1 12 1 13 1 291 1 184 2 40 4 185 1 186 1 107 2 225 4 293 18 374 4 16 1 46 3 325 3 49 1 163 4 89 1 276 1 232 38 235 1 329 5 237 4 115 3 116 1 22 1 51 3 171 1 119 4 217 7 
281 1 257 7 309 1 28 4 148 1 311 2 197 1 284 1 153 4 57 1 368 1 158 27 202 4 183 1 12 2 291 1 184 1 40 8 185 1 186 1 107 1 225 2 293 25 374 7 16 1 46 4 325 7 49 1 163 2 89 1 276 1 232 52 91 2 235 1 329 8 237 7 115 7 116 1 22 1 51 2 119 2 217 14 
281 1 257 3 309 2 28 2 311 2 153 4 368 1 158 9 202 2 369 1 12 1 13 1 184 1 40 3 225 2 293 10 374 3 46 1 325 3 49 1 163 2 232 19 329 3 237 3 115 3 116 1 22 1 51 1 119 2 217 6 
281 1 257 3 309 1 28 4 311 3 148 1 284 1 153 6 368 1 158 14 202 2 183 1 40 2 184 2 291 1 107 2 293 12 225 3 374 2 16 1 46 2 325 2 49 2 163 3 232 26 235 1 329 3 237 3 115 2 116 1 22 1 51 2 217 4 119 3 
263 1 157 1 373 1 345 1 179 1 304 1 248 1 7 1 170 1 98 1 
206 1 64 1 
373 1 254 1 345 1 179 1 151 1 304 1 170 1 285 1 98 1 
173 1 230 1 
339 1 356 1 198 1 
373 1 283 1 32 1 7 1 175 1 263 1 157 1 379 1 179 1 345 1 304 1 303 2 96 1 247 1 170 1 250 1 98 1 357 1 
373 1 283 1 32 1 7 1 175 1 263 1 157 1 379 1 179 1 345 1 304 1 303 2 96 1 247 1 170 1 250 1 98 1 357 1 
373 1 283 1 32 1 7 1 175 1 263 1 157 1 379 1 179 1 345 1 304 1 303 2 96 1 247 1 170 1 250 1 98 1 357 1 
173 1 230 1 356 1 
173 1 230 1 356 1 
339 1 198 1 
339 1 356 1 198 1 
370 1 271 1 
283 1 261 1 175 1 242 1 345 1 179 1 61 1 247 1 370 1 268 2 84 2 64 1 271 1 346 1 371 1 136 1 373 1 206 1 294 1 209 2 93 2 304 1 303 1 76 2 170 1 357 1 98 1 
100 1 311 1 174 1 361 1 153 2 152 2 200 1 10 1 158 1 223 2 39 1 224 1 84 2 253 1 372 2 207 1 225 1 293 1 208 2 66 1 86 1 163 1 209 2 296 1 232 2 234 1 50 1 93 2 330 1 23 1 119 1 
85 1 372 2 187 1 208 2 227 1 17 1 162 1 54 1 68 1 231 1 142 1 90 2 200 1 234 1 59 1 335 1 223 2 319 1 216 1 
85 1 273 1 372 1 187 1 208 1 17 1 54 1 68 1 231 1 142 1 90 2 200 1 234 1 59 1 223 1 319 1 216 1 
280 1 253 1 372 1 121 1 208 1 78 1 162 1 142 1 328 1 200 1 234 1 10 1 177 1 223 1 
85 1 372 1 187 1 208 1 17 1 162 1 54 1 68 1 231 1 142 1 90 2 200 1 234 1 59 1 335 1 223 1 319 1 216 1 
58 1 
41 1 275 1 32 1 255 1 313 1 297 1 63 1 
32 2 313 1 33 1 175 1 11 1 182 1 247 1 252 1 41 1 275 1 353 1 236 1 302 1 355 1 94 1 331 1 306 1 
337 6 239 2 149 2 150 2 200 3 286 2 244 6 10 3 203 2 11 4 289 1 246 1 247 5 63 1 253 10 208 3 297 1 166 3 353 4 115 2 24 2 120 1 306 12 77 2 257 2 32 8 124 2 313 9 33 4 175 5 81 1 127 2 266 1 182 4 181 2 223 3 372 3 40 2 41 2 227 1 226 2 43 2 275 8 324 2 190 3 328 1 234 4 279 1 236 5 329 2 237 2 94 6 331 3 238 1 
257 2 337 5 148 1 32 5 284 1 124 1 313 8 33 2 175 1 244 5 202 1 11 2 182 2 247 1 183 1 291 1 40 2 41 2 292 1 43 1 226 2 275 5 16 1 46 1 353 2 236 1 329 2 192 1 237 2 115 2 94 3 331 1 51 1 120 1 306 6 
338 1 313 2 57 1 33 1 175 1 155 1 104 1 11 1 182 1 247 1 268 1 37 1 38 1 84 1 205 1 40 1 43 1 138 1 226 2 275 2 188 1 209 1 89 1 276 1 353 1 329 2 93 1 76 1 
41 1 275 1 32 1 297 1 313 1 33 1 353 1 11 1 182 1 63 1 
257 2 337 5 40 2 43 1 226 2 275 5 324 1 32 5 313 5 329 2 244 5 237 2 115 2 94 5 306 10 
41 1 236 1 32 1 331 1 247 1 175 1 
27 1 280 1 145 1 360 1 30 1 78 1 124 2 313 2 33 2 175 3 200 1 10 1 11 2 289 2 182 1 247 3 223 4 253 1 372 4 208 4 275 2 18 1 328 2 353 2 234 1 279 1 236 4 331 2 120 2 
100 1 311 1 153 2 261 1 220 1 343 1 200 1 265 1 10 1 104 2 268 2 223 1 37 1 84 3 372 1 253 1 293 1 225 1 208 1 86 1 66 1 141 1 209 2 190 1 163 1 232 1 328 1 233 1 234 1 93 3 76 2 119 1 
337 2 41 2 275 2 197 1 32 4 124 1 313 1 33 1 353 1 244 2 94 2 11 1 182 1 306 4 120 1 
345 1 179 1 333 1 
345 1 179 1 333 1 
308 1 345 1 179 1 370 1 7 1 
345 1 179 1 333 1 
35 1 345 1 179 1 
35 1 345 1 179 1 
35 1 345 1 179 1 
345 1 179 1 
373 1 98 1 
148 1 311 1 197 1 153 2 57 1 158 4 202 1 40 1 186 1 185 1 293 4 225 1 374 2 46 1 163 1 89 1 232 8 276 1 329 1 22 1 51 1 119 1 217 2 
257 1 148 1 311 2 197 1 153 4 57 1 158 6 202 2 12 1 40 1 185 1 186 1 293 5 225 2 374 2 46 1 325 1 163 2 89 1 276 1 232 11 329 2 378 1 237 1 22 1 51 1 119 2 217 3 
257 2 148 1 311 3 197 1 284 1 153 6 57 1 158 9 202 1 183 1 291 1 40 3 185 1 186 1 293 10 225 3 107 1 374 3 46 1 16 1 325 1 163 3 89 1 276 1 232 19 329 3 378 1 237 2 115 2 22 1 51 1 119 3 217 4 
257 2 148 1 311 3 197 1 284 1 153 6 57 1 158 10 202 1 183 1 291 1 40 2 185 1 186 1 107 1 293 7 225 3 374 3 46 1 16 1 325 2 163 3 89 1 276 1 232 17 329 3 378 1 237 2 115 1 22 1 51 1 119 3 217 5 
148 1 311 1 197 1 153 2 57 1 158 4 202 1 40 1 186 1 185 1 293 4 225 1 374 2 46 1 163 1 89 1 232 8 276 1 329 1 22 1 51 1 119 1 217 2 
257 2 148 1 311 1 284 1 153 2 158 6 202 1 183 1 291 1 40 2 293 6 225 1 374 1 46 1 16 1 325 1 163 1 232 12 329 2 237 2 115 2 22 1 51 1 119 1 217 2 
257 2 148 1 311 4 197 1 284 1 153 8 57 1 158 10 202 1 183 1 291 1 40 2 185 1 186 1 293 8 225 4 107 2 374 3 16 1 46 1 325 2 163 4 89 1 276 1 232 18 329 3 378 1 237 2 115 1 22 1 51 1 119 4 217 5 
257 3 148 1 311 4 284 1 153 8 158 9 202 1 183 1 13 1 291 1 40 2 293 7 225 4 107 2 374 3 16 1 46 1 325 3 163 4 232 16 329 3 237 3 115 2 22 1 51 1 119 4 217 6 
40 1 186 1 185 2 293 4 374 3 325 3 89 3 232 7 57 3 276 1 329 1 158 3 217 6 
257 2 148 1 311 4 197 1 284 1 153 8 57 1 158 10 202 1 183 1 13 1 291 1 40 2 185 1 186 1 293 8 225 4 107 2 374 3 16 1 46 1 325 1 163 4 89 1 276 1 232 18 329 3 237 2 115 1 22 1 51 1 119 4 217 4 
40 1 186 1 185 1 293 4 225 2 107 1 311 2 374 2 197 1 325 1 163 2 153 4 89 1 276 1 232 8 57 1 329 1 158 4 217 3 119 2 
40 1 186 1 185 1 293 3 374 2 197 1 255 1 89 1 57 1 276 1 232 6 329 1 158 3 217 2 
257 1 40 1 293 2 225 1 311 1 374 1 325 1 163 1 153 2 232 4 329 1 115 1 378 1 237 1 158 2 217 2 119 1 
257 1 40 1 293 4 374 1 46 1 325 1 232 7 329 1 115 1 237 1 158 3 202 2 12 1 51 1 217 2 
257 2 311 2 197 1 153 4 57 2 158 11 202 2 12 1 317 1 40 3 185 1 186 1 293 12 107 2 225 2 374 5 46 2 325 4 163 2 89 2 210 1 276 1 232 23 91 1 329 3 237 2 115 2 217 9 119 2 
293 1 202 1 232 1 
158 1 46 1 232 1 
257 1 40 1 225 1 293 3 311 1 374 2 324 1 325 1 163 1 153 2 232 6 329 1 378 1 237 1 115 1 158 3 119 1 217 3 
257 2 148 1 311 1 284 1 153 2 158 6 202 1 183 1 291 1 40 2 293 6 225 1 374 1 46 1 16 1 325 1 163 1 232 12 329 2 237 2 115 2 22 1 51 1 119 1 217 2 
40 1 293 3 374 1 325 1 89 1 276 1 232 6 57 1 329 1 158 3 217 2 
185 1 186 1 293 2 107 1 225 1 311 1 374 1 325 1 163 1 89 1 210 1 153 2 57 1 232 3 158 1 217 2 119 1 
40 2 225 1 293 5 311 1 374 3 325 2 163 1 153 2 89 2 57 2 232 10 276 1 329 2 158 5 22 1 38 1 119 1 217 5 
225 1 311 1 325 1 163 1 153 2 232 2 329 1 237 1 158 2 22 1 119 1 217 1 
257 1 40 1 293 2 225 1 311 1 374 1 325 1 163 1 153 2 232 4 329 1 115 1 237 1 158 2 22 1 217 2 119 1 
107 1 293 2 225 3 311 3 374 1 325 1 163 3 210 1 153 6 89 1 232 3 57 1 158 1 22 1 13 1 119 3 217 2 
257 3 311 5 197 1 153 10 57 3 158 16 202 4 36 1 12 1 83 1 13 1 40 5 185 1 186 1 107 2 293 18 225 5 374 7 46 3 325 5 163 5 89 3 210 1 276 2 232 34 329 5 378 1 237 3 115 3 169 1 22 1 51 1 119 5 217 12 
165 1 243 1 93 1 209 1 20 1 261 1 84 1 
358 1 144 1 312 1 209 1 20 1 261 1 165 1 299 1 243 1 93 1 193 1 84 1 
200 1 280 1 234 1 253 1 372 1 10 1 208 1 78 1 255 1 223 1 328 1 
253 1 372 1 208 1 190 1 209 1 261 1 220 1 328 1 200 1 233 1 234 1 10 1 93 2 76 1 268 1 223 1 381 1 84 2 
239 1 149 1 123 1 261 1 220 1 200 1 10 2 289 1 268 2 223 1 84 2 372 1 253 3 205 1 160 1 208 1 209 2 190 2 233 1 234 1 93 2 76 1 381 1 
239 1 149 1 123 1 261 1 220 1 200 1 10 2 289 1 268 2 223 2 318 1 84 2 372 2 253 3 205 1 160 1 208 2 140 1 209 2 190 2 234 1 93 2 76 1 381 1 
372 3 253 4 41 1 239 1 208 3 149 1 139 1 32 1 190 1 328 1 175 2 200 1 286 1 166 1 234 1 236 1 10 1 289 1 181 1 247 2 223 3 318 1 270 1 
372 3 253 4 41 1 239 1 208 3 149 1 32 1 190 1 328 1 175 2 200 1 286 1 166 1 234 1 127 1 236 1 10 1 289 1 181 1 247 2 223 3 318 1 
200 1 234 1 372 1 208 1 223 1 176 1 
372 6 253 3 122 1 323 1 227 1 208 7 174 1 48 1 231 1 241 1 190 1 152 1 176 1 328 2 200 2 9 1 234 3 10 2 246 1 223 7 26 1 
100 2 197 1 153 4 57 1 343 1 200 1 156 1 10 1 158 3 347 1 253 1 293 3 208 1 66 2 209 1 163 2 21 1 76 1 119 2 217 2 311 2 361 1 220 1 261 2 265 1 268 1 223 1 84 2 39 1 372 1 40 1 186 1 185 1 225 2 227 1 374 2 190 1 89 1 276 1 232 6 277 1 233 1 234 1 329 1 92 1 93 2 381 1 
77 1 32 1 313 1 33 2 175 3 286 1 127 1 11 2 203 1 182 2 181 1 247 3 223 1 63 1 346 1 372 1 253 2 41 1 208 1 275 1 297 1 328 1 353 2 166 1 279 1 236 2 331 1 24 1 
372 2 253 2 227 1 208 2 190 1 176 1 200 1 234 2 266 1 10 1 181 1 246 1 223 2 
280 1 372 4 253 1 208 4 227 1 78 1 161 1 328 1 200 1 234 1 10 1 223 4 318 1 
372 2 253 1 208 2 260 1 229 1 48 1 190 1 200 1 191 1 9 1 234 2 10 1 289 1 223 2 
200 1 85 1 234 1 372 1 187 1 208 1 223 1 319 1 90 1 328 1 
200 1 234 1 253 1 372 2 10 1 208 2 227 1 174 1 231 1 23 1 223 2 
280 1 372 4 253 3 122 1 208 5 227 1 323 1 78 1 161 1 174 1 328 1 200 2 234 2 10 2 289 1 223 5 
280 1 372 4 253 3 122 1 208 5 227 1 78 1 161 1 174 1 328 1 200 2 234 2 167 1 10 2 289 1 223 5 
253 1 372 1 208 1 140 1 190 1 209 1 261 1 220 1 328 1 200 1 234 1 10 1 93 2 76 1 268 1 223 1 381 1 84 2 
372 1 253 1 208 1 48 1 190 1 200 1 9 1 234 2 10 1 289 1 246 1 223 1 26 1 
344 1 219 1 47 1 88 1 261 1 
346 1 205 1 15 1 41 1 160 1 219 2 32 1 123 1 47 2 88 2 261 1 362 1 175 2 344 1 286 1 213 1 214 1 247 2 132 1 
344 1 93 1 219 1 330 1 88 1 209 1 296 1 84 1 224 1 
344 1 214 1 213 1 
14 1 109 1 255 1 164 1 
14 1 79 1 109 1 55 1 262 1 315 1 164 1 
62 1 55 1 97 1 
194 2 14 1 228 1 79 3 109 1 55 3 262 1 112 1 315 1 164 1 352 1 376 1 
14 1 218 1 79 2 109 1 110 1 55 2 262 1 315 1 164 1 
366 1 187 1 228 1 79 1 109 1 221 1 68 1 55 1 262 1 90 1 315 1 
228 1 79 1 109 1 55 1 262 1 315 1 164 1 
14 1 228 1 79 1 55 1 262 1 315 1 164 2 
264 1 274 1 367 1 228 1 79 2 109 1 55 2 262 2 315 2 164 1 
14 1 218 2 228 1 79 3 109 2 55 3 19 1 262 1 315 1 164 1 298 1 221 1 222 1 
14 1 218 1 187 1 228 1 44 1 79 2 109 1 17 1 68 1 55 2 262 1 90 2 315 1 164 1 319 1 
14 1 218 2 228 1 79 4 109 2 110 1 55 4 262 2 315 2 164 1 8 1 298 1 221 1 
14 1 228 1 79 1 109 1 55 1 262 1 315 1 164 1 
194 1 14 2 218 2 2 1 79 4 109 3 55 4 112 1 262 1 315 1 164 2 352 1 298 1 221 1 
14 1 218 1 102 1 228 1 201 1 196 1 79 2 109 1 55 2 262 1 315 1 164 1 
194 2 14 1 228 1 79 3 109 1 55 3 112 1 262 1 315 1 164 1 352 2 118 1 
1 1 128 1 109 2 5 2 
228 1 79 1 55 1 262 1 70 1 315 1 
14 1 218 1 228 1 79 2 109 1 55 2 19 1 262 1 315 1 164 1 
126 1 
14 1 228 1 79 1 109 1 55 1 262 1 315 1 164 1 
194 1 218 1 14 1 228 1 79 3 109 1 55 3 19 1 262 1 315 1 164 1 
298 1 2 1 109 1 221 1 
109 1 164 1 

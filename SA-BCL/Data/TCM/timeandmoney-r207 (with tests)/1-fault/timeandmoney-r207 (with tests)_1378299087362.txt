#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
353 2 295 1 230 1 233 2 182 5 355 1 46 1 138 4 97 1 98 1 188 6 308 1 141 1 144 1 211 2 242 1 50 1 265 2 245 3 214 1 247 2 35 1 16 2 378 1 206 2 84 1 224 9 22 9 
353 2 295 1 230 1 233 2 182 5 355 1 46 1 138 4 97 1 98 1 188 6 308 1 141 1 144 1 211 2 242 1 50 1 265 2 245 3 214 1 247 2 35 1 16 2 378 1 206 2 84 1 224 9 22 9 
353 2 295 1 230 1 233 2 182 6 355 1 46 1 138 5 97 1 98 1 188 7 308 1 141 1 144 1 211 2 242 1 50 1 265 2 245 4 214 1 247 2 35 1 16 2 378 1 206 2 84 1 224 10 22 10 
353 2 295 1 230 1 233 1 182 4 355 1 46 1 138 3 97 1 98 1 188 4 308 1 141 1 144 1 211 2 242 1 50 1 265 2 245 2 214 1 247 2 16 2 378 1 206 2 84 1 224 7 22 7 
353 1 233 2 182 3 247 1 35 1 138 2 16 1 308 1 188 3 211 1 144 1 378 1 50 1 206 1 84 1 224 4 245 1 22 4 
353 1 107 1 182 1 355 1 247 1 98 1 211 1 291 1 203 1 378 1 50 1 206 1 84 1 224 2 265 1 22 2 
230 1 182 2 247 2 138 1 188 1 211 2 378 1 50 1 84 1 224 3 265 1 245 1 22 3 
353 1 230 1 233 2 182 5 46 1 138 4 97 1 188 7 308 1 211 2 144 1 50 1 265 1 245 3 108 1 370 1 247 2 35 1 16 1 378 1 206 1 84 1 224 9 22 9 
353 1 230 1 233 2 182 5 46 1 138 4 97 1 188 7 308 1 211 2 144 1 50 1 265 1 245 3 108 1 370 1 247 2 35 1 16 1 378 1 206 1 84 1 224 9 22 9 
12 1 198 1 39 1 
173 2 126 1 198 1 
153 2 329 2 262 2 150 1 299 1 358 2 14 2 123 2 
159 1 299 1 358 2 301 2 237 1 327 2 168 1 329 2 261 1 189 2 262 3 140 1 99 1 362 1 5 1 193 2 333 1 266 1 74 1 123 2 150 1 285 1 287 1 171 1 248 1 249 1 340 1 115 1 14 2 153 3 118 1 223 1 156 1 271 1 292 2 351 1 178 1 
153 1 329 1 8 1 262 1 55 1 373 1 299 1 358 1 14 1 123 1 
366 1 8 1 25 1 358 1 198 1 153 1 289 1 262 1 376 1 82 1 204 1 253 1 39 1 76 1 
366 1 8 1 25 1 358 1 198 1 14 1 153 1 289 2 329 1 262 1 82 1 253 1 39 1 123 1 76 2 
63 1 289 1 200 1 21 1 76 1 
63 1 289 2 368 1 201 1 198 1 39 1 21 1 76 2 
289 1 21 1 76 1 
63 1 8 1 41 1 55 1 373 1 299 1 358 1 14 1 153 1 289 1 329 1 262 1 76 1 123 1 
198 1 
63 1 289 2 368 1 113 1 198 1 39 1 21 1 76 2 
63 2 255 1 354 1 368 1 114 1 90 1 198 1 289 5 307 1 260 2 48 1 377 1 192 1 272 2 321 1 323 2 39 1 76 5 21 2 
150 1 12 1 
109 1 150 2 358 2 14 1 153 2 329 1 60 1 262 2 123 1 
240 1 380 1 105 1 
150 1 149 1 171 1 248 1 301 1 237 1 327 1 115 1 153 1 168 1 262 1 271 1 292 1 266 1 74 1 351 1 
153 3 329 3 124 1 262 3 150 1 358 3 123 1 14 3 
153 1 329 1 8 1 262 1 373 1 358 1 14 1 
153 1 329 1 8 1 60 1 109 1 262 1 358 1 14 1 123 1 
159 1 25 1 299 1 278 1 237 1 358 3 301 1 327 1 163 1 168 1 329 3 261 1 189 2 262 4 362 1 193 1 74 1 266 1 333 1 146 1 123 2 76 1 366 1 8 1 124 1 150 1 285 1 287 1 171 1 248 1 115 1 14 3 153 4 289 1 60 1 118 1 82 1 223 1 156 1 271 1 292 1 351 1 253 1 178 1 
180 1 153 2 329 1 262 2 124 1 376 1 150 1 358 2 14 1 
366 1 8 1 124 2 25 1 278 1 358 3 198 1 14 3 153 3 289 1 329 3 60 1 262 3 82 1 318 1 146 1 253 1 123 1 76 1 
124 1 358 2 14 2 153 2 329 2 60 1 262 2 240 1 123 1 105 1 
150 1 171 1 248 1 301 1 237 1 327 1 115 1 153 1 168 1 262 1 271 1 292 1 266 1 74 1 351 1 
311 1 150 1 248 1 301 1 327 1 115 1 153 1 168 1 262 1 271 1 292 1 350 1 266 1 74 1 351 1 
159 1 298 1 326 1 261 1 189 2 99 2 362 1 100 1 240 2 102 1 244 1 193 4 105 2 310 1 11 1 285 1 287 1 314 1 118 2 223 1 380 2 274 1 179 1 275 1 
153 1 329 1 8 1 262 1 82 1 358 1 304 1 14 1 
124 1 171 1 248 1 278 1 358 1 301 1 237 1 327 1 115 1 14 1 153 2 168 1 329 1 262 2 271 1 292 1 351 1 74 1 266 1 105 1 
180 1 246 1 124 2 150 1 278 1 358 5 14 4 153 5 329 4 60 1 262 5 376 1 61 1 123 1 
153 2 329 2 8 1 262 2 373 1 358 2 304 1 14 2 
157 1 334 1 
157 1 334 1 
52 1 194 1 
52 1 194 1 
52 1 194 1 
154 1 157 1 334 1 
176 1 157 1 334 1 
52 1 194 1 73 1 157 2 20 1 334 2 
154 1 157 1 334 1 
154 1 157 1 334 1 
238 1 157 1 334 1 
238 1 157 1 334 1 
238 1 157 1 334 1 
369 3 338 1 183 1 34 2 69 2 198 1 164 1 344 2 289 2 239 2 71 2 157 2 19 1 20 1 334 2 273 1 325 1 254 1 76 2 
369 1 150 1 183 1 358 2 69 1 14 2 153 2 344 1 289 1 329 2 220 1 262 2 316 1 142 1 239 1 191 1 71 1 176 1 263 1 157 1 319 1 320 1 334 1 76 1 
353 1 16 1 206 1 
353 1 291 1 206 1 
353 3 16 2 291 1 302 1 186 1 104 1 
353 2 16 1 347 1 291 1 302 1 186 1 
353 2 16 1 291 1 302 2 186 1 
63 4 255 1 354 2 298 1 135 1 92 1 165 2 260 1 48 3 101 1 72 1 263 1 76 5 310 1 9 1 368 1 11 1 198 2 314 1 173 3 15 1 289 5 220 1 317 1 126 1 379 2 272 1 320 1 323 1 21 1 40 2 39 1 
63 7 130 1 255 1 354 6 298 3 44 5 90 1 135 3 165 6 260 2 48 8 101 2 72 2 76 9 147 1 310 3 368 1 11 3 374 1 198 5 152 1 314 3 173 9 289 9 220 4 200 5 270 1 317 1 126 3 379 6 272 2 225 1 323 2 21 6 39 1 
63 2 354 2 298 1 90 1 135 1 165 2 260 1 48 3 101 1 72 1 76 3 310 1 9 1 11 1 198 3 314 1 15 1 289 3 173 4 220 1 126 2 379 2 272 1 323 1 39 1 40 1 
63 3 354 4 298 2 90 1 135 2 165 4 260 1 48 5 101 1 72 1 76 4 147 1 310 2 9 1 11 2 198 4 152 1 314 2 173 7 289 4 15 1 220 2 126 3 379 4 272 1 225 1 323 1 39 1 40 2 
12 1 271 1 75 1 
271 1 58 1 
70 1 
271 1 248 1 
168 1 356 1 271 3 248 1 184 1 75 2 
168 1 271 1 248 1 
125 1 271 1 
310 1 65 1 298 1 234 1 79 1 326 2 185 1 28 2 222 1 118 3 99 4 205 1 349 1 85 1 193 7 363 1 275 3 
310 1 65 1 298 1 234 1 79 1 326 2 185 1 28 2 222 1 118 3 99 4 205 1 349 1 85 1 193 7 363 1 275 3 
310 1 65 1 298 1 234 1 267 1 79 1 326 2 185 1 28 2 222 1 118 3 99 4 205 1 349 1 85 1 363 1 193 7 275 3 
352 1 65 1 159 1 234 2 298 4 89 1 326 5 135 3 27 4 94 1 185 2 360 1 28 3 261 1 189 2 362 1 99 16 243 1 363 1 193 31 310 4 11 3 287 1 79 1 172 1 314 3 222 5 81 1 118 15 36 3 205 2 349 2 85 1 275 10 
159 2 298 1 234 1 42 1 326 3 185 1 360 1 28 2 261 2 189 4 362 2 99 5 193 9 363 1 310 1 287 2 79 1 343 1 222 1 118 4 349 1 205 1 85 1 275 4 
24 1 353 2 1 1 182 1 277 1 301 1 327 1 259 1 188 1 211 1 50 1 265 1 266 1 74 1 104 1 106 1 215 1 336 1 247 1 218 1 16 1 199 1 291 1 378 1 206 1 292 1 84 1 224 2 324 1 22 2 
353 2 1 1 182 1 277 1 301 1 258 1 327 1 259 1 187 1 188 2 211 1 50 1 265 1 266 1 74 1 104 1 215 1 336 1 247 1 116 1 218 1 16 1 199 1 291 1 206 1 292 1 84 1 224 3 324 1 22 3 
353 2 1 1 182 1 277 1 301 1 258 1 327 1 259 1 188 2 50 1 265 1 266 1 74 1 104 1 336 1 116 1 199 1 16 1 291 1 292 1 206 1 84 1 224 2 324 1 22 2 
277 2 301 1 327 1 3 1 187 1 211 1 264 1 265 2 32 1 74 1 266 1 148 1 336 2 53 1 247 1 248 1 115 1 375 1 199 2 271 1 292 1 224 1 22 1 
353 2 1 1 277 1 301 1 327 1 259 1 211 1 265 1 266 1 74 1 104 1 106 1 215 1 336 1 247 1 116 1 218 1 16 1 199 1 291 1 378 1 206 1 292 1 224 1 324 1 22 1 
195 1 
2 1 327 2 91 2 3 1 48 2 241 2 8 1 339 1 248 1 288 1 198 2 115 2 57 4 153 1 289 5 202 1 204 1 292 2 294 2 253 1 21 6 255 1 354 2 66 1 162 2 25 1 301 2 358 1 260 1 262 1 72 1 32 1 266 1 74 1 213 1 76 5 367 2 366 1 33 2 368 3 312 1 173 2 315 1 221 1 376 1 82 1 83 1 126 2 271 1 272 1 88 2 226 1 323 1 39 1 227 1 
366 1 8 1 368 1 312 1 162 1 339 1 25 1 113 1 358 1 288 1 57 2 153 1 289 3 315 1 262 1 82 1 376 1 204 1 213 1 253 1 21 2 76 3 
25 1 358 1 91 1 262 1 213 1 76 3 366 1 8 1 312 1 368 1 339 1 113 1 288 1 198 1 57 3 153 1 315 1 289 3 376 1 82 1 204 1 253 1 21 1 39 1 
25 1 162 1 358 1 91 1 262 1 241 1 213 1 76 3 366 1 8 1 368 1 312 1 339 1 113 1 288 1 198 1 57 3 153 1 315 1 289 3 376 1 82 1 204 1 253 1 21 2 39 1 
2 1 91 4 95 1 48 1 241 4 8 1 339 1 113 1 288 1 198 5 57 6 59 1 117 1 153 1 289 5 204 1 18 1 294 2 253 1 21 7 255 1 354 1 162 4 25 1 358 1 262 1 260 1 213 1 76 5 366 1 367 2 33 2 312 1 368 3 217 1 315 1 221 1 82 1 376 1 126 2 272 1 88 2 323 1 39 5 
255 1 354 1 162 2 25 1 2 1 358 1 91 2 260 1 262 1 48 1 241 2 213 1 76 4 367 2 366 1 8 1 33 2 368 2 312 1 339 1 288 1 198 2 57 4 153 1 173 2 315 1 289 4 221 1 376 1 82 1 83 1 126 2 204 1 294 2 272 1 88 2 323 1 253 1 39 1 21 4 
255 1 354 1 162 2 25 1 2 1 358 1 91 2 260 1 262 1 48 1 241 2 213 1 76 4 367 2 366 1 8 1 33 2 368 2 312 1 217 1 339 1 288 1 198 1 57 4 59 1 117 1 153 1 315 1 289 4 221 1 376 1 82 1 126 2 204 1 294 2 272 1 88 2 253 1 323 1 39 1 21 4 
255 1 354 1 162 2 25 1 2 1 358 1 91 2 260 1 262 1 48 1 241 2 213 1 76 4 367 2 366 1 8 1 33 2 368 2 312 1 217 1 339 1 288 1 198 1 57 4 59 1 117 1 153 1 315 1 289 4 221 1 376 1 82 1 126 2 204 1 294 2 272 1 88 2 253 1 323 1 39 1 21 4 
158 2 255 1 297 2 354 1 162 2 25 1 357 1 2 1 358 1 91 2 208 1 260 1 262 1 48 1 241 2 213 1 76 4 367 2 366 1 8 1 33 2 368 2 110 1 312 1 217 1 339 1 288 1 198 1 57 4 153 1 173 2 315 1 289 4 376 1 82 1 204 1 272 1 253 1 323 1 39 1 21 4 
255 1 354 1 25 1 162 3 2 1 358 1 91 3 95 1 260 1 262 1 48 1 241 3 213 1 76 4 367 2 366 1 8 1 33 2 368 2 312 1 217 1 339 1 288 1 198 1 57 5 117 1 59 1 153 1 315 1 289 4 221 1 376 1 82 1 126 2 204 1 294 2 272 1 88 2 323 1 253 1 39 1 21 5 
255 1 354 1 25 1 162 3 2 1 358 1 91 3 95 1 260 1 262 1 48 1 241 3 213 1 76 4 367 2 366 1 8 1 33 2 368 2 312 1 217 1 339 1 288 1 198 1 57 5 117 1 59 1 153 1 315 1 289 4 221 1 376 1 82 1 126 2 204 1 294 2 272 1 88 2 323 1 253 1 39 1 21 5 
158 2 255 1 297 2 354 1 162 2 25 1 2 1 358 1 91 2 260 1 262 1 48 1 241 2 213 1 76 4 367 2 366 1 8 1 33 2 368 2 312 1 110 1 339 1 288 1 198 1 57 4 153 1 173 2 315 1 289 4 376 1 82 1 83 1 204 1 272 1 323 1 253 1 39 1 21 4 
159 1 234 1 298 1 326 2 28 1 261 1 189 2 362 1 99 3 240 1 244 1 363 1 193 6 105 1 310 1 285 1 150 2 12 1 287 1 79 1 118 3 223 1 205 1 85 1 380 1 275 2 
159 2 298 1 89 1 326 1 135 2 27 3 279 1 261 2 189 4 362 2 99 8 240 4 243 1 193 14 105 11 310 2 283 1 150 1 285 2 11 1 78 1 287 2 340 1 314 2 222 1 174 1 118 6 175 1 223 1 156 1 36 3 380 11 275 2 
64 1 159 1 278 1 237 1 301 1 358 1 327 1 168 1 279 1 329 1 262 2 189 2 261 1 362 1 99 1 240 1 49 1 74 1 266 1 193 2 51 1 124 1 150 1 149 1 285 1 287 1 171 1 248 1 115 1 340 1 14 1 153 2 118 1 223 1 271 1 156 1 292 1 351 1 
232 2 234 1 278 1 237 2 326 4 327 3 135 2 328 2 329 1 279 1 189 6 99 10 240 7 193 20 333 2 105 7 150 2 285 3 11 2 287 3 248 2 116 1 340 1 115 1 14 1 153 3 118 10 156 1 205 1 292 3 351 2 159 3 160 1 298 3 301 3 358 1 168 2 28 1 261 3 262 3 362 3 309 2 363 1 266 2 74 2 310 3 124 1 216 1 79 1 171 2 314 2 222 4 127 1 223 3 271 2 85 1 380 7 37 2 275 8 
24 1 159 2 161 1 300 1 45 1 358 1 301 7 327 8 136 1 3 1 329 1 262 1 261 2 189 4 362 2 99 1 244 1 32 1 74 2 266 2 193 2 124 1 285 2 287 2 249 2 248 2 116 1 115 2 340 1 14 1 153 1 251 1 118 1 223 2 271 3 156 1 292 8 86 1 38 1 
159 1 298 1 358 1 326 1 135 1 329 1 279 1 261 1 189 2 262 1 362 1 99 1 240 1 212 1 193 3 105 1 123 1 310 1 285 1 11 1 287 1 14 1 314 1 153 1 60 1 118 2 223 1 380 1 275 1 
310 1 159 1 285 1 287 1 314 1 222 1 189 2 261 1 362 1 99 2 223 1 240 1 102 1 244 1 380 1 193 2 275 1 105 1 
159 1 298 1 285 1 11 1 287 1 326 1 189 2 261 1 362 1 118 2 223 1 240 1 244 1 380 1 193 2 275 1 105 1 179 1 
159 1 298 1 326 1 135 1 261 1 189 2 99 2 362 1 240 2 244 1 193 4 105 2 310 1 285 1 11 1 287 1 314 1 222 1 118 2 223 1 380 2 275 2 
310 1 159 1 285 1 287 1 300 1 314 1 222 1 189 2 261 1 362 1 99 2 223 1 240 1 102 1 380 1 193 2 275 1 105 1 
159 1 298 1 285 1 11 1 287 1 300 1 326 1 189 2 261 1 362 1 118 2 223 1 240 1 380 1 193 2 275 1 105 1 179 1 
159 1 298 1 300 1 326 1 135 1 261 1 189 2 99 2 362 1 240 2 193 4 105 2 310 1 285 1 11 1 287 1 314 1 222 1 118 2 223 1 380 2 275 2 
310 1 159 1 298 1 11 1 285 1 287 1 326 1 135 1 314 1 222 1 189 2 261 1 118 2 362 1 99 2 223 1 240 2 380 2 193 4 275 2 105 2 
159 1 237 1 301 1 327 1 168 1 262 1 189 2 261 1 99 1 362 1 193 2 74 1 266 1 333 1 150 1 285 1 287 1 171 1 248 1 340 1 115 1 153 1 118 1 223 1 271 1 156 1 292 1 351 1 
159 1 301 1 327 1 166 1 168 1 262 1 189 2 261 1 99 1 362 1 193 2 74 1 266 1 311 1 150 1 285 1 287 1 248 1 340 1 115 1 153 1 118 1 223 1 271 1 156 1 292 1 350 1 351 1 
159 1 298 1 326 1 135 1 279 1 261 1 189 2 99 2 362 1 240 2 193 4 105 2 310 1 285 1 11 1 287 1 314 1 222 1 118 2 223 1 380 2 275 2 
24 1 159 1 298 1 237 1 301 1 326 1 327 1 135 1 168 1 262 1 189 2 261 1 99 2 362 1 240 2 309 1 193 4 74 1 266 1 333 1 105 2 310 1 11 1 285 1 287 1 171 1 248 1 314 1 153 1 222 1 118 2 223 1 271 1 292 1 380 2 351 1 275 2 
159 1 298 1 358 1 135 1 329 1 279 1 209 1 261 1 189 2 262 1 362 1 99 2 240 1 193 3 123 1 105 1 310 1 11 1 285 1 287 1 14 1 314 1 153 1 60 1 222 1 118 1 223 1 380 1 275 1 
159 2 298 3 42 1 236 1 89 2 134 1 326 2 135 3 27 5 305 2 137 1 261 2 189 4 362 2 99 13 243 3 193 28 365 1 310 3 54 4 10 1 11 3 371 1 287 2 314 3 155 1 222 2 118 15 346 1 36 3 129 1 275 4 
159 2 298 3 42 1 236 1 89 2 134 1 326 3 135 3 27 5 305 2 137 1 261 2 189 4 362 2 99 13 243 3 193 28 365 1 310 3 54 4 10 1 11 3 371 1 287 2 314 3 155 1 222 2 118 15 346 1 36 3 129 1 275 5 
159 1 234 3 298 6 42 1 236 1 89 1 134 1 326 6 135 3 27 3 305 1 137 1 28 3 261 1 189 2 362 1 99 22 243 2 363 3 193 41 310 6 54 4 10 1 11 3 371 1 287 1 79 3 314 3 155 1 222 3 174 1 118 19 36 3 205 3 85 3 129 1 275 9 
159 2 298 4 42 1 236 1 89 2 134 1 326 4 135 4 27 4 305 1 137 1 261 2 189 4 362 2 99 14 243 2 193 30 310 4 284 1 54 4 10 2 11 4 371 1 287 2 314 4 155 1 222 3 118 16 346 1 36 2 129 1 275 7 
159 1 298 1 42 1 236 1 135 1 305 2 27 1 137 1 261 1 189 2 362 1 99 5 243 1 193 10 310 1 54 2 10 1 11 1 287 1 314 1 155 1 118 5 36 1 129 2 
344 1 4 1 239 1 71 1 157 1 69 1 20 1 334 1 164 1 254 1 
191 1 176 1 
344 1 231 1 239 1 71 1 157 1 252 1 69 1 334 1 306 1 
369 2 338 1 183 1 34 1 69 1 198 1 164 1 344 1 289 1 239 1 71 1 157 1 19 1 20 1 334 1 273 1 254 1 76 1 
369 2 338 1 183 1 34 1 69 1 198 1 164 1 344 1 289 1 239 1 71 1 157 1 19 1 20 1 334 1 273 1 254 1 76 1 
369 2 338 1 183 1 34 1 69 1 198 1 164 1 344 1 289 1 239 1 71 1 157 1 19 1 20 1 334 1 273 1 254 1 76 1 
154 1 111 1 73 1 
154 1 111 1 73 1 
238 1 293 1 
238 1 73 1 293 1 
316 1 319 1 
63 1 358 2 69 1 361 1 329 2 262 2 142 1 239 1 71 1 191 1 263 1 334 1 76 1 369 1 150 1 34 1 14 2 153 2 344 1 289 1 220 1 316 1 176 1 157 1 320 1 319 1 273 1 
154 1 111 1 
238 1 73 1 293 1 
159 1 26 1 358 2 301 2 327 2 136 1 279 1 121 1 262 2 189 2 261 1 362 1 99 1 74 1 266 1 6 1 193 2 285 1 287 1 248 1 249 2 250 1 196 1 340 1 153 2 118 1 223 1 271 1 156 1 292 2 86 1 
353 2 24 1 296 1 181 1 337 1 301 2 327 2 259 1 116 1 218 1 16 1 199 1 291 1 206 1 292 2 74 1 266 1 324 1 104 1 
353 2 337 1 120 1 301 1 327 1 259 1 116 1 218 1 16 1 199 1 291 1 206 1 292 1 266 1 74 1 324 1 104 1 
296 1 53 1 248 1 301 1 327 1 115 1 3 1 199 1 271 1 292 1 32 1 74 1 266 1 177 1 
353 2 296 1 181 1 337 1 301 1 327 1 259 1 116 1 218 1 16 1 199 1 291 1 206 1 292 1 74 1 266 1 324 1 104 1 
77 1 
354 1 48 1 377 1 12 1 114 1 198 1 39 1 
255 1 354 1 368 1 198 2 289 1 173 1 221 1 260 1 48 1 126 1 294 1 272 1 88 1 323 1 39 1 76 1 21 1 
131 1 232 2 133 1 327 3 135 2 280 2 48 9 103 2 145 2 11 2 56 1 248 3 114 1 198 8 115 1 13 2 58 3 290 2 289 5 292 3 253 2 21 5 24 1 255 4 354 8 66 1 298 2 356 1 301 3 303 2 359 2 165 6 168 3 260 4 72 2 169 1 74 4 266 3 75 2 76 5 310 2 368 3 80 1 219 2 314 2 173 12 125 2 377 1 126 6 271 10 379 6 272 4 323 4 39 2 
255 2 0 1 354 5 66 1 298 2 67 1 43 1 135 2 27 1 139 1 165 5 331 1 260 2 48 8 72 1 243 1 145 1 76 1 310 2 368 1 11 2 371 1 198 5 342 1 314 2 289 1 290 2 173 6 126 3 36 1 379 5 272 2 323 2 21 1 39 2 
255 1 354 2 234 1 298 1 41 1 299 1 358 1 329 1 262 1 260 1 48 2 145 1 76 1 123 1 310 2 8 1 55 1 373 1 79 1 197 1 117 1 14 1 153 1 290 2 289 1 205 1 272 1 323 1 
255 1 354 1 114 1 198 1 260 1 48 1 377 1 272 1 323 1 39 1 
310 2 232 1 354 5 298 2 11 2 135 2 198 5 314 2 165 5 290 2 173 10 48 5 126 5 379 5 145 1 
289 1 368 1 198 1 39 1 76 1 21 1 
23 1 255 1 354 2 66 2 133 1 90 1 301 4 327 4 3 1 260 2 48 2 72 2 281 1 32 1 74 1 266 1 76 3 368 2 248 1 80 2 115 2 289 3 202 1 271 1 292 4 272 2 323 2 227 1 21 4 
159 1 299 1 301 1 358 2 237 1 327 1 329 2 168 1 261 1 189 2 262 3 362 1 193 1 333 1 266 1 74 1 123 2 150 1 285 1 287 1 171 1 248 1 115 1 14 2 153 3 118 1 223 1 156 1 271 1 292 1 351 1 178 1 
255 1 354 2 66 1 198 4 165 2 173 4 28 1 260 1 48 1 126 2 72 1 379 2 272 1 323 1 39 2 
344 1 239 1 30 1 
344 1 316 1 239 1 143 1 254 1 
344 1 239 1 30 1 
344 1 239 1 30 1 
344 1 345 1 239 1 
344 1 345 1 239 1 
344 1 345 1 239 1 
344 1 239 1 
157 1 334 1 
159 1 298 1 234 1 42 1 326 2 27 1 28 1 261 1 189 2 362 1 99 4 243 1 193 8 363 1 310 1 371 1 287 1 79 1 118 4 36 1 205 1 85 1 275 2 
207 1 159 2 298 1 234 1 42 1 89 1 326 2 135 1 27 2 28 1 261 2 189 4 362 2 99 6 243 1 363 1 193 11 310 2 371 1 287 2 79 1 314 1 222 1 118 5 36 1 205 1 85 1 275 3 
207 1 159 3 0 1 234 1 298 3 42 1 43 1 326 3 135 2 27 1 139 1 360 1 28 1 331 1 261 3 189 6 362 3 99 9 243 1 363 1 193 19 310 3 11 2 371 1 287 3 79 1 314 2 222 1 118 10 36 1 205 1 85 1 275 4 
207 1 159 3 0 1 234 1 298 2 42 1 43 1 326 3 135 2 27 1 139 1 360 1 28 1 331 1 261 3 189 6 362 3 99 10 243 1 363 1 193 17 310 3 11 1 371 1 287 3 79 1 314 2 222 2 118 7 36 1 205 1 85 1 275 5 
159 1 298 1 234 1 42 1 326 2 27 1 28 1 261 1 189 2 362 1 99 4 243 1 193 8 363 1 310 1 371 1 287 1 79 1 118 4 36 1 205 1 85 1 275 2 
159 1 0 1 298 2 42 1 43 1 326 1 135 2 27 1 139 1 331 1 261 1 189 2 362 1 99 6 243 1 193 12 310 2 11 2 371 1 287 1 314 2 222 1 118 6 36 1 275 2 
207 1 159 4 0 1 234 1 298 2 42 1 43 1 326 3 135 2 27 1 139 1 360 2 28 1 331 1 261 4 189 8 362 4 99 10 243 1 363 1 193 18 310 3 11 1 371 1 287 4 79 1 314 2 222 2 118 8 36 1 205 1 85 1 275 5 
159 4 0 1 298 2 42 1 43 1 326 3 135 3 27 1 139 1 360 2 331 1 261 4 189 8 362 4 99 9 243 1 193 16 310 3 11 2 371 1 287 4 314 3 222 3 118 7 346 1 36 1 275 6 
310 1 298 1 234 3 79 1 326 3 222 3 118 4 99 3 205 3 85 1 193 7 363 2 275 6 
159 4 0 1 234 1 298 2 42 1 43 1 326 3 135 2 27 1 139 1 360 2 28 1 331 1 261 4 189 8 362 4 99 10 243 1 363 1 193 18 310 3 11 1 371 1 287 4 79 1 314 2 222 1 118 8 346 1 36 1 205 1 85 1 275 4 
310 1 159 2 298 1 234 1 287 2 79 1 326 2 360 1 28 1 222 1 189 4 261 2 118 4 99 4 362 2 205 1 85 1 193 8 363 1 275 3 
310 1 234 1 298 1 12 1 79 1 326 2 28 1 118 3 99 3 205 1 85 1 363 1 193 6 275 2 
207 1 310 1 159 1 298 1 11 1 287 1 326 1 135 1 314 1 189 2 261 1 222 1 118 2 362 1 99 2 193 4 275 2 
310 1 298 1 11 1 89 1 326 1 135 1 27 2 314 1 222 1 118 4 99 3 36 1 243 1 193 7 275 2 
159 2 234 2 298 3 89 1 326 5 135 2 27 2 360 2 28 1 189 4 261 2 99 11 362 2 363 1 193 23 310 3 11 2 287 2 79 1 314 2 222 4 118 12 174 1 175 1 36 2 205 2 85 1 275 9 62 1 
118 1 193 1 27 1 
99 1 36 1 193 1 
207 1 310 1 159 1 232 1 298 1 11 1 287 1 326 2 135 1 314 1 261 1 189 2 222 1 362 1 118 3 99 3 193 6 275 3 
159 1 0 1 298 2 42 1 43 1 326 1 135 2 27 1 139 1 331 1 261 1 189 2 362 1 99 6 243 1 193 12 310 2 11 2 371 1 287 1 314 2 222 1 118 6 36 1 275 2 
310 1 298 1 234 1 79 1 326 1 222 1 99 3 118 3 205 1 193 6 275 2 
159 1 234 1 287 1 326 1 360 1 222 1 189 2 261 1 99 1 118 2 362 1 205 1 85 1 363 1 193 3 275 2 62 1 
310 2 159 1 234 2 298 2 287 1 42 1 79 1 326 3 197 1 261 1 189 2 222 2 362 1 99 5 118 5 205 2 193 10 275 5 
310 1 159 1 42 1 287 1 314 1 189 2 261 1 222 1 362 1 99 2 193 2 275 1 
310 1 159 1 298 1 11 1 42 1 287 1 326 1 135 1 314 1 189 2 261 1 222 1 118 2 362 1 99 2 193 4 275 2 
159 3 234 1 42 1 287 3 326 1 360 1 189 6 261 3 222 1 118 2 362 3 99 1 346 1 205 1 193 3 62 1 275 2 
352 1 207 1 159 5 234 3 298 5 42 1 89 1 326 7 135 3 27 4 360 2 28 1 261 5 189 10 362 5 99 16 243 1 363 1 193 34 310 5 11 3 287 5 79 2 172 1 314 3 81 1 222 5 118 18 346 1 36 3 205 3 85 1 62 1 275 12 
153 1 180 1 262 1 376 1 150 1 268 1 358 1 
180 1 150 1 235 1 268 1 358 1 341 1 153 1 96 1 262 1 376 1 17 1 335 1 
12 1 271 1 248 1 292 1 301 1 327 1 32 1 74 1 266 1 115 1 3 1 
124 1 150 1 171 1 248 1 358 1 301 1 327 1 115 1 14 1 153 2 168 1 329 1 262 2 271 1 292 1 351 1 74 1 266 1 
366 1 8 1 124 1 150 1 171 1 248 2 358 2 80 1 301 1 327 1 219 1 14 2 153 2 168 2 329 1 125 1 262 2 82 1 271 3 292 1 351 1 74 1 266 1 
366 1 311 1 8 1 124 1 150 1 248 2 358 2 80 1 301 2 327 2 219 1 14 2 153 2 168 2 329 1 125 1 262 2 82 1 271 3 292 2 351 1 74 1 266 1 7 1 
301 3 327 3 168 1 332 1 266 1 75 1 74 1 7 1 76 2 248 1 80 1 198 1 219 1 115 1 58 1 289 2 125 1 271 4 292 3 381 1 253 1 21 1 39 1 
248 1 80 1 301 3 327 3 198 1 115 1 219 1 58 1 168 1 289 2 125 1 271 4 292 3 103 1 74 1 75 1 266 1 7 1 253 1 39 1 76 2 21 1 
292 1 301 1 327 1 74 1 266 1 38 1 
24 1 161 1 356 1 313 1 249 1 248 2 45 1 301 6 327 7 116 1 115 2 168 1 251 1 271 3 348 1 292 7 86 1 266 2 74 3 38 1 229 1 
234 1 237 1 327 1 326 2 329 1 279 1 189 4 99 3 240 1 333 1 193 6 105 1 285 2 150 2 287 2 248 1 14 1 153 2 118 3 205 1 292 1 351 1 24 1 159 2 298 1 26 1 301 1 358 1 168 1 28 1 261 2 262 2 362 2 309 1 266 1 74 1 363 1 310 1 124 1 171 1 79 1 223 2 271 1 85 1 380 1 37 1 275 2 
63 1 255 2 354 1 133 1 301 1 327 1 359 1 260 2 48 1 280 1 103 1 75 1 76 3 368 1 114 1 198 1 115 1 13 1 58 1 289 3 377 1 271 2 292 1 272 2 323 2 253 1 39 1 21 2 
24 1 356 1 248 1 301 2 327 2 168 1 271 2 292 2 169 1 75 1 266 1 74 2 38 1 
24 1 248 1 301 4 327 4 115 1 3 1 271 1 31 1 292 4 32 1 74 1 266 1 7 1 
216 1 248 1 80 1 301 2 327 2 167 1 168 1 190 1 271 1 348 1 292 2 266 1 74 2 229 1 
353 1 291 1 206 1 292 1 301 1 327 1 74 1 266 1 324 1 115 1 
24 1 271 1 248 1 292 2 301 2 327 2 86 1 196 1 74 1 266 1 116 1 
24 1 161 1 248 2 80 1 301 4 327 5 115 1 3 1 251 1 271 3 31 1 292 5 32 1 86 1 266 2 74 2 
24 1 161 1 257 1 248 2 80 1 301 4 327 5 115 1 3 1 271 3 31 1 292 5 32 1 86 1 266 2 74 2 
311 1 124 1 150 1 248 1 358 1 301 1 327 1 115 1 14 1 153 2 168 1 329 1 262 2 271 1 292 1 351 1 74 1 266 1 
356 1 313 1 248 1 80 1 301 1 327 1 168 1 271 1 348 1 292 1 266 1 74 2 229 1 
132 1 358 1 250 1 153 1 121 1 262 1 29 1 6 1 364 1 
112 1 170 1 364 1 
150 1 256 1 29 1 132 1 364 1 
63 1 366 1 8 1 112 1 150 1 132 2 256 2 25 1 198 1 93 1 289 2 82 1 29 2 170 1 146 1 253 1 364 1 39 1 76 2 
182 1 12 1 50 1 84 1 
182 1 211 1 247 1 50 1 84 1 224 1 22 1 
336 1 224 1 265 1 
182 1 372 1 247 1 47 1 98 2 211 1 378 1 50 1 224 3 84 1 22 3 228 1 
188 1 233 1 182 1 211 1 247 1 50 1 84 1 224 2 22 2 
353 1 16 1 182 1 144 1 211 1 247 1 378 1 206 1 224 1 138 1 22 1 
182 1 211 1 247 1 378 1 84 1 224 1 22 1 
211 1 247 1 378 1 50 1 84 2 224 1 22 1 
119 1 182 1 247 2 151 1 68 1 211 2 378 1 84 1 224 2 22 2 
182 2 247 1 46 1 138 1 97 1 188 2 211 1 378 1 50 1 84 1 224 3 245 1 22 3 
353 2 182 1 247 1 16 1 188 1 211 1 291 1 378 1 50 1 206 1 84 1 224 2 22 2 282 1 104 1 
233 1 182 2 247 2 35 1 138 1 188 2 211 2 378 1 50 1 84 1 224 4 245 1 22 4 
182 1 211 1 247 1 378 1 50 1 84 1 224 1 22 1 
276 1 182 3 247 1 138 1 47 1 98 1 188 2 211 1 50 2 84 2 224 4 245 1 228 1 22 4 
182 1 370 1 247 1 188 1 211 1 378 1 128 1 50 1 84 1 224 2 87 1 22 2 
182 1 247 1 47 1 330 1 98 2 211 1 378 1 50 1 224 3 84 1 22 3 228 2 
210 1 182 2 286 1 322 2 
269 1 211 1 247 1 378 1 224 1 22 1 
97 1 188 1 182 1 211 1 247 1 378 1 50 1 84 1 224 2 22 2 
122 1 
182 1 211 1 247 1 378 1 50 1 84 1 224 1 22 1 
182 1 247 1 97 1 188 1 98 1 211 1 378 1 50 1 224 3 84 1 22 3 
276 1 182 1 245 1 138 1 
182 1 84 1 

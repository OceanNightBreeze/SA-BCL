#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 258 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
360 2 314 1 93 1 365 2 343 5 251 1 303 9 269 1 270 2 81 2 305 1 171 2 128 1 105 2 130 6 236 3 238 1 306 1 61 2 151 4 62 1 113 1 11 1 207 9 329 1 287 1 358 1 120 1 
360 2 314 1 93 1 365 2 343 5 251 1 303 9 269 1 270 2 81 2 305 1 171 2 128 1 105 2 130 6 236 3 238 1 306 1 61 2 151 4 62 1 113 1 11 1 207 9 329 1 287 1 358 1 120 1 
360 2 314 1 93 1 365 2 343 6 251 1 303 10 269 1 270 2 81 2 305 1 171 2 128 1 105 2 130 7 236 4 238 1 306 1 61 2 151 5 62 1 113 1 11 1 207 10 329 1 287 1 358 1 120 1 
360 2 314 1 93 1 365 2 343 4 251 1 303 7 269 1 270 2 81 2 305 1 171 2 128 1 105 2 130 4 236 2 238 1 306 1 61 1 151 3 62 1 113 1 11 1 207 7 329 1 287 1 120 1 
360 1 151 2 62 1 365 1 343 3 113 1 11 1 207 4 303 4 270 1 81 1 305 1 171 1 130 3 236 1 61 2 358 1 120 1 
360 1 348 1 62 1 343 1 365 1 11 1 207 2 186 1 229 1 303 2 287 1 81 1 128 1 171 1 105 1 120 1 
151 1 62 1 365 2 343 2 11 1 207 3 251 1 303 3 81 2 105 1 130 1 236 1 120 1 
360 1 365 2 343 5 251 1 303 9 270 1 81 2 305 1 171 1 105 1 130 7 236 3 306 1 61 2 151 4 62 1 113 1 11 1 207 9 329 1 332 1 44 1 120 1 358 1 
360 1 365 2 343 5 251 1 303 9 270 1 81 2 305 1 171 1 105 1 130 7 236 3 306 1 61 2 151 4 62 1 113 1 11 1 207 9 329 1 332 1 44 1 120 1 358 1 
265 1 18 1 162 1 
52 2 198 1 18 1 
39 1 114 2 95 2 199 2 104 2 189 1 20 2 218 2 
47 1 296 1 95 3 222 1 122 1 145 1 78 1 196 2 368 1 126 1 28 1 147 2 370 1 199 2 104 2 59 1 60 2 275 1 35 1 374 1 63 1 351 1 352 1 260 1 209 1 185 1 334 1 67 1 39 1 285 2 114 2 135 1 189 1 20 3 218 2 219 1 21 2 
340 1 114 1 95 1 199 1 104 1 189 1 8 1 34 1 20 1 218 1 
316 1 95 1 265 1 64 1 66 1 114 1 262 1 103 1 136 1 345 1 18 1 34 1 20 1 90 1 
316 1 95 1 265 1 64 1 66 2 114 1 262 1 136 2 199 1 104 1 345 1 18 1 34 1 218 1 20 1 
369 1 136 1 66 1 174 1 25 1 
136 2 265 1 129 1 366 1 18 1 66 2 174 1 25 1 
136 1 66 1 25 1 
340 1 95 1 66 1 114 1 136 1 199 1 104 1 189 1 8 1 34 1 174 1 218 1 20 1 177 1 
18 1 
136 2 265 1 129 1 18 1 66 2 174 1 25 1 268 1 
91 2 264 1 326 1 265 1 342 1 280 2 98 1 298 1 66 5 25 2 333 1 228 1 286 1 136 5 70 2 160 1 129 1 18 1 174 2 
39 1 162 1 
95 2 311 1 39 2 114 2 199 1 104 1 170 1 20 2 218 1 
256 1 79 1 255 1 
47 1 35 1 296 1 374 1 95 1 153 1 260 1 185 1 196 1 67 1 39 1 285 1 28 1 59 1 20 1 21 1 
47 1 35 1 374 1 296 1 95 2 260 1 185 1 67 1 196 1 54 1 285 1 79 1 28 1 114 1 104 1 59 1 175 1 218 1 20 2 21 1 
95 5 65 1 39 1 54 1 114 5 199 1 104 4 43 1 170 1 336 1 175 2 218 4 20 5 90 1 
114 2 95 2 104 2 118 1 8 1 34 1 20 2 218 2 
39 1 114 3 95 3 199 1 104 3 175 1 20 3 218 3 
114 1 95 1 104 1 8 1 34 1 20 1 218 1 
114 1 95 1 199 1 104 1 170 1 34 1 20 1 218 1 311 1 
47 1 296 1 316 1 95 4 122 1 145 1 78 1 196 1 368 1 54 1 126 1 28 1 147 2 252 1 199 2 104 3 345 1 170 1 59 1 33 1 60 1 34 1 175 1 275 1 35 1 374 1 351 1 64 1 352 1 260 1 66 1 185 1 334 1 67 1 39 1 285 1 262 1 114 3 135 1 136 1 189 1 20 4 218 3 21 1 
39 1 114 2 95 2 104 1 43 1 20 2 218 1 175 1 90 1 
316 1 95 3 64 1 66 1 100 1 54 1 114 3 262 1 136 1 199 1 104 3 345 1 170 1 18 1 33 1 34 1 175 2 218 3 20 3 
256 1 95 2 114 2 79 1 199 1 104 2 170 1 175 1 218 2 20 2 
35 1 47 1 296 1 374 1 95 1 260 1 185 1 196 1 67 1 39 1 285 1 28 1 59 1 20 1 21 1 
35 1 47 1 374 1 95 1 376 1 260 1 185 1 196 1 67 1 39 1 285 1 288 1 59 1 20 1 21 1 
221 1 361 1 317 1 97 1 299 1 78 1 126 1 79 2 147 2 127 1 255 2 60 4 275 1 256 2 327 1 279 1 351 1 352 1 334 1 40 1 135 2 88 1 219 2 295 1 
114 1 95 1 345 1 104 1 118 1 34 1 20 1 218 1 
134 1 247 1 
134 1 247 1 
179 1 206 1 
179 1 206 1 
179 1 206 1 
134 1 216 1 247 1 
134 1 216 1 247 1 
134 1 16 1 247 1 
134 2 179 1 206 1 247 2 266 1 300 1 
134 1 216 1 247 1 
134 1 188 1 247 1 
134 1 188 1 247 1 
134 1 188 1 247 1 
95 2 144 1 2 1 3 1 66 1 134 1 27 1 39 1 114 2 136 1 42 1 187 1 104 2 71 1 254 1 234 1 16 1 322 1 247 1 237 1 20 2 272 1 218 2 161 1 
359 2 38 1 3 2 66 2 300 1 53 1 134 2 27 2 51 1 42 2 136 2 15 1 71 2 254 3 247 2 380 1 18 1 138 1 272 1 
360 1 270 1 171 1 
360 1 348 1 171 1 
360 3 165 1 348 1 270 2 289 1 381 1 
360 2 348 1 270 1 289 1 381 1 119 1 
360 2 348 1 270 1 289 1 381 2 
91 1 1 1 2 1 144 1 265 1 342 1 97 1 4 1 25 1 228 2 52 3 124 2 321 1 127 1 371 1 198 1 32 2 129 1 174 4 149 1 278 1 279 1 84 1 280 1 66 5 333 3 40 1 136 5 70 1 187 1 18 2 45 2 
141 1 91 2 1 3 265 1 342 1 97 3 4 1 25 6 228 6 52 9 369 5 127 3 371 2 198 3 32 6 235 1 172 1 129 1 174 7 273 1 279 3 84 2 280 2 66 9 282 1 333 8 69 5 40 3 286 1 136 9 187 4 70 2 18 5 220 1 45 6 
91 1 1 1 265 1 97 1 228 2 124 1 52 4 127 1 371 1 198 2 32 2 174 2 149 1 278 1 279 1 84 1 280 1 66 3 333 3 40 1 286 1 136 3 70 1 187 1 18 3 45 2 
141 1 91 1 1 2 265 1 97 2 228 4 52 7 124 2 127 2 371 1 198 3 32 4 235 1 172 1 149 1 174 3 278 1 279 2 84 1 280 1 66 4 333 5 40 2 286 1 136 4 70 1 187 2 18 4 45 4 
47 1 341 1 162 1 
47 1 117 1 
276 1 
47 1 374 1 67 1 
47 1 85 1 
47 1 67 1 
47 3 374 1 241 1 341 2 5 1 67 1 
48 1 327 3 279 1 97 1 224 1 225 1 157 1 86 2 12 1 214 1 135 3 291 1 271 1 60 7 295 2 219 4 140 1 
48 1 327 3 279 1 97 1 224 1 225 1 157 1 86 2 12 1 214 1 135 3 291 1 271 1 60 7 295 2 219 4 140 1 
48 1 327 3 279 1 97 1 281 1 224 1 225 1 157 1 86 2 12 1 214 1 135 3 291 1 271 1 60 7 295 2 219 4 140 1 
48 1 1 3 97 4 224 2 225 1 78 1 302 1 126 1 147 2 29 1 127 3 232 1 271 2 60 31 109 1 327 10 36 1 279 4 352 1 157 5 334 1 86 3 12 2 40 3 214 2 14 3 135 15 291 1 337 4 72 1 140 1 219 16 295 5 339 1 
126 1 258 1 147 2 214 1 352 1 271 1 60 1 309 1 78 1 219 1 334 1 86 1 
360 2 362 1 165 1 343 1 365 1 196 1 303 2 270 1 81 1 169 1 58 1 171 1 105 1 130 1 59 1 347 1 176 1 35 1 257 1 348 1 62 1 204 1 11 1 207 2 156 1 331 1 213 1 285 1 21 1 120 1 
360 2 165 1 362 1 76 1 343 1 365 1 301 1 196 1 303 3 270 1 81 1 58 1 171 1 105 1 130 2 59 1 347 1 176 1 35 1 348 1 62 1 204 1 11 1 207 3 156 1 331 1 68 1 213 1 285 1 21 1 
360 2 165 1 343 1 301 1 196 1 303 2 270 1 58 1 171 1 105 1 130 2 59 1 347 1 176 1 35 1 348 1 62 1 11 1 207 2 156 1 331 1 68 1 213 1 285 1 21 1 
35 1 47 1 166 1 76 1 182 1 365 1 207 1 156 2 331 2 185 1 67 1 196 1 244 1 213 2 303 1 285 1 304 1 320 1 81 1 105 2 59 1 21 1 338 1 
360 2 35 1 165 1 362 1 348 1 204 1 365 1 207 1 156 1 331 1 301 1 196 1 303 1 285 1 213 1 270 1 58 1 169 1 81 1 171 1 105 1 59 1 347 1 176 1 21 1 120 1 
354 1 
47 1 91 1 94 2 250 1 95 1 342 1 195 4 196 2 52 2 197 1 304 1 344 2 103 1 198 2 57 1 345 1 59 1 350 1 64 1 66 5 310 1 67 1 114 1 262 1 70 1 115 1 116 2 158 1 18 2 20 1 21 2 316 1 265 1 25 6 228 2 318 2 320 1 319 1 371 1 129 3 131 1 34 1 35 1 375 2 280 1 283 2 333 2 185 2 285 2 379 1 136 5 290 2 294 1 191 1 90 1 
94 1 316 1 95 1 195 2 25 2 268 1 319 1 103 1 345 1 129 1 34 1 350 1 64 1 66 3 262 1 114 1 379 1 136 3 115 1 191 1 20 1 90 1 
316 1 95 1 265 1 195 3 25 1 268 1 319 1 103 1 345 1 129 1 34 1 350 1 64 1 66 3 283 1 262 1 114 1 379 1 136 3 115 1 18 1 191 1 20 1 90 1 
94 1 316 1 95 1 265 1 195 3 25 2 268 1 319 1 103 1 345 1 129 1 34 1 350 1 64 1 66 3 283 1 262 1 114 1 379 1 136 3 115 1 290 1 18 1 191 1 20 1 90 1 
91 1 94 4 250 1 95 1 342 1 195 6 103 1 344 2 198 2 345 1 350 1 64 1 66 5 211 1 262 1 114 1 115 1 70 1 116 2 18 5 17 1 20 1 316 1 265 5 25 7 26 1 268 1 228 1 318 2 319 1 129 3 34 1 131 1 178 1 375 2 280 1 283 4 333 1 379 1 136 5 41 1 290 4 191 1 90 1 
91 1 250 1 94 2 95 1 342 1 195 4 52 2 103 1 344 2 198 2 345 1 350 1 64 1 66 4 310 1 262 1 114 1 70 1 115 1 116 2 18 2 20 1 316 1 265 1 25 4 228 1 318 2 319 1 129 2 34 1 131 1 375 2 280 1 283 2 333 1 379 1 136 4 290 2 191 1 90 1 
91 1 94 2 250 1 316 1 95 1 265 1 342 1 195 4 25 4 228 1 318 2 319 1 344 2 103 1 198 2 345 1 129 2 131 1 34 1 178 1 350 1 64 1 375 2 280 1 66 4 283 2 211 1 333 1 262 1 114 1 379 1 136 4 115 1 70 1 116 2 290 2 18 1 17 1 191 1 20 1 90 1 
91 1 94 2 250 1 316 1 95 1 265 1 342 1 195 4 25 4 228 1 318 2 319 1 344 2 103 1 198 2 345 1 129 2 131 1 34 1 178 1 350 1 64 1 375 2 280 1 66 4 283 2 211 1 333 1 262 1 114 1 379 1 136 4 115 1 70 1 116 2 290 2 18 1 17 1 191 1 20 1 90 1 
91 1 94 2 316 1 95 1 265 1 342 1 195 4 25 4 227 2 228 1 52 2 319 1 344 2 103 1 253 1 345 1 129 2 324 2 131 1 34 1 240 1 350 1 64 1 375 2 280 1 66 4 283 2 211 1 333 1 262 1 114 1 379 1 136 4 115 1 70 1 290 2 18 1 191 1 263 1 20 1 90 1 
91 1 250 1 94 3 316 1 95 1 265 1 342 1 195 5 25 5 228 1 318 2 319 1 344 2 103 1 198 2 345 1 129 2 131 1 34 1 178 1 350 1 64 1 375 2 280 1 66 4 283 3 211 1 333 1 262 1 114 1 379 1 136 4 41 1 70 1 115 1 116 2 290 3 18 1 17 1 191 1 20 1 90 1 
91 1 250 1 94 3 316 1 95 1 265 1 342 1 195 5 25 5 228 1 318 2 319 1 344 2 103 1 198 2 345 1 129 2 131 1 34 1 178 1 350 1 64 1 375 2 280 1 66 4 283 3 211 1 333 1 262 1 114 1 379 1 136 4 41 1 70 1 115 1 116 2 290 3 18 1 17 1 191 1 20 1 90 1 
91 1 94 2 95 1 342 1 195 4 52 2 103 1 344 2 345 1 350 1 64 1 66 4 310 1 262 1 114 1 70 1 115 1 18 1 263 1 20 1 316 1 265 1 25 4 227 2 228 1 319 1 129 2 324 2 34 1 131 1 375 2 280 1 283 2 333 1 379 1 136 4 290 2 191 1 90 1 
221 1 48 1 97 1 224 1 78 1 79 1 126 1 147 2 255 1 60 6 275 1 256 1 327 2 351 1 279 1 352 1 334 1 86 1 12 1 39 2 135 3 291 1 140 1 162 1 295 2 219 3 
1 2 145 1 97 1 78 2 126 2 79 11 147 4 29 1 127 2 255 11 60 14 275 1 256 4 327 2 277 1 351 2 279 2 155 1 352 2 209 1 157 1 334 2 39 1 243 1 40 1 135 6 14 3 190 1 248 1 337 3 295 1 219 8 339 1 
47 1 296 1 95 2 145 1 78 1 196 1 54 1 28 1 126 1 147 2 230 1 104 1 323 1 59 1 60 2 175 1 275 1 35 1 374 1 256 1 277 1 153 1 351 1 352 1 260 1 209 1 185 1 67 1 334 1 39 1 285 1 284 1 114 1 135 1 20 2 218 1 21 1 219 1 
47 2 296 2 48 1 1 2 95 3 97 3 145 1 6 2 301 1 196 3 54 1 147 6 104 1 59 2 255 7 60 20 106 2 256 7 351 3 352 3 260 2 209 1 308 1 353 1 157 4 67 2 12 1 114 1 218 1 20 3 21 3 163 2 219 10 224 1 24 2 78 3 368 2 126 3 28 2 79 7 127 2 325 1 175 1 275 3 35 2 374 2 277 1 327 8 279 3 185 1 86 1 334 3 39 2 285 3 40 2 135 10 291 1 140 1 295 4 
221 1 47 3 95 1 167 1 145 1 301 1 78 2 196 7 126 2 304 1 147 4 320 1 30 1 31 1 104 1 7 1 59 2 60 2 175 1 307 1 275 2 35 2 257 1 63 2 351 2 112 1 352 2 209 1 185 2 334 2 67 2 285 8 114 1 135 1 20 1 218 1 74 1 21 8 219 1 
1 1 95 1 97 1 78 1 79 1 126 1 147 2 127 1 199 1 104 1 170 1 255 1 60 3 275 1 256 1 327 1 277 1 351 1 279 1 83 1 352 1 334 1 40 1 114 1 135 2 218 1 20 1 295 1 219 1 
221 1 361 1 256 1 327 1 351 1 279 1 352 1 157 1 78 1 334 1 79 1 126 1 147 2 127 1 255 1 60 2 219 2 275 1 
221 1 256 1 327 1 351 1 97 1 352 1 78 1 334 1 40 1 79 1 126 1 147 2 135 2 255 1 60 2 88 1 295 1 275 1 
221 1 1 1 97 1 78 1 126 1 79 2 147 2 127 1 255 2 60 4 275 1 256 2 327 2 279 1 351 1 352 1 157 1 334 1 40 1 135 2 219 2 295 1 
361 1 256 1 327 1 351 1 279 1 352 1 157 1 78 1 334 1 79 1 126 1 147 2 127 1 30 1 255 1 60 2 219 2 275 1 
256 1 327 1 351 1 97 1 352 1 78 1 334 1 40 1 79 1 126 1 147 2 135 2 30 1 255 1 60 2 88 1 295 1 275 1 
1 1 97 1 78 1 126 1 79 2 147 2 127 1 30 1 255 2 60 4 275 1 256 2 327 2 279 1 351 1 352 1 157 1 334 1 40 1 135 2 219 2 295 1 
256 2 1 1 327 2 351 1 279 1 97 1 352 1 157 1 78 1 334 1 40 1 79 2 126 1 147 2 135 2 127 1 255 2 60 4 295 1 219 2 275 1 
47 1 296 1 95 1 145 1 78 1 196 1 368 1 28 1 126 1 147 2 59 1 60 2 275 1 35 1 374 1 351 1 352 1 260 1 209 1 185 1 67 1 334 1 39 1 285 1 135 1 20 1 219 1 21 1 
47 1 95 1 145 1 78 1 196 1 126 1 147 2 59 1 60 2 275 1 35 1 374 1 351 1 376 1 352 1 260 1 209 1 185 1 67 1 334 1 39 1 285 1 288 1 135 1 215 1 20 1 219 1 21 1 
1 1 97 1 78 1 126 1 79 2 147 2 127 1 255 2 60 4 275 1 256 2 277 1 327 2 279 1 351 1 352 1 157 1 334 1 40 1 135 2 219 2 295 1 
47 1 296 1 1 1 95 1 97 1 6 1 78 1 196 1 368 1 79 2 28 1 126 1 147 2 127 1 59 1 255 2 60 4 275 1 35 1 256 2 374 1 257 1 327 2 279 1 351 1 352 1 260 1 157 1 67 1 334 1 40 1 285 1 135 2 20 1 295 1 219 2 21 1 
22 1 1 1 95 1 97 1 78 1 126 1 79 1 147 2 127 1 199 1 104 1 170 1 255 1 60 3 275 1 256 1 327 1 277 1 351 1 279 1 352 1 157 1 334 1 40 1 114 1 135 1 218 1 20 1 219 2 
315 1 1 3 97 3 78 2 126 2 101 1 147 4 29 1 127 3 346 1 201 1 60 19 202 1 82 2 327 6 205 2 279 3 352 2 328 1 309 1 157 3 334 2 40 3 135 10 14 1 217 1 337 2 295 3 219 9 339 1 
315 2 1 3 97 2 78 3 126 3 101 2 147 6 29 2 127 3 346 1 201 1 60 26 349 1 82 1 327 4 36 2 205 4 279 3 352 3 328 1 157 2 309 1 334 3 212 1 40 2 245 1 135 12 14 2 19 1 89 1 337 2 295 2 219 14 46 1 
48 1 315 1 1 4 97 5 224 1 78 3 126 3 101 2 147 6 29 3 127 4 346 1 201 1 60 41 349 1 82 1 327 8 36 1 205 4 279 5 352 3 328 1 242 1 309 1 157 4 86 1 334 3 12 1 212 1 40 4 245 1 135 21 14 3 291 1 217 1 19 1 89 1 337 4 140 1 295 4 219 20 46 1 339 1 
48 1 315 1 1 4 97 4 224 1 78 4 126 4 101 2 147 8 29 3 127 4 346 1 201 1 60 38 349 1 82 1 327 7 36 2 205 4 279 5 352 4 328 1 242 1 309 1 157 3 86 1 334 4 12 1 212 1 40 3 245 1 135 18 14 3 291 1 217 1 19 1 89 1 337 4 140 1 295 4 219 20 46 1 339 1 
48 1 315 1 1 7 97 8 224 1 78 2 126 2 101 1 147 4 29 2 127 7 346 1 201 1 60 52 349 1 82 1 327 14 36 1 205 4 279 8 352 2 328 1 309 1 157 7 86 1 334 2 12 1 212 1 40 7 245 1 135 25 14 4 291 1 19 1 89 1 248 2 337 4 140 1 295 7 219 27 46 1 339 2 
27 1 134 1 363 1 42 1 15 1 71 1 3 1 247 1 380 1 300 1 
16 1 237 1 
27 1 134 1 42 1 168 1 200 1 71 1 3 1 247 1 357 1 
261 1 216 1 
121 1 188 1 266 1 
359 1 38 1 3 1 66 1 300 1 134 1 27 1 51 1 136 1 42 1 15 1 71 1 254 2 247 1 380 1 18 1 138 1 272 1 
359 1 38 1 3 1 66 1 300 1 134 1 27 1 51 1 136 1 42 1 15 1 71 1 254 2 247 1 380 1 18 1 138 1 272 1 
359 1 38 1 3 1 66 1 300 1 134 1 27 1 51 1 136 1 42 1 15 1 71 1 254 2 247 1 380 1 18 1 138 1 272 1 
261 1 216 1 266 1 
261 1 216 1 266 1 
121 1 188 1 
121 1 188 1 266 1 
234 1 161 1 
359 1 95 2 2 1 144 1 223 1 3 1 51 1 27 1 104 2 254 1 322 1 234 1 174 1 237 1 66 1 134 1 39 1 114 2 136 1 42 1 187 1 71 1 247 1 16 1 20 2 218 2 161 1 
47 1 75 1 95 2 167 1 145 1 78 1 196 2 126 1 147 2 7 1 59 1 60 2 275 1 35 1 239 1 9 1 277 1 63 2 351 1 352 1 330 1 209 1 67 1 334 1 285 2 114 2 135 1 292 1 20 2 21 2 219 1 
360 2 35 1 165 1 257 1 362 1 348 1 226 1 301 1 196 2 285 2 213 1 270 1 58 1 171 1 59 1 293 1 176 1 21 2 139 1 
360 2 35 1 165 1 362 1 348 1 96 1 301 1 196 1 285 1 213 1 270 1 58 1 171 1 59 1 293 1 176 1 21 1 
35 1 47 1 182 1 185 1 67 1 196 1 285 1 213 1 304 1 320 1 59 1 173 1 21 1 139 1 
360 2 35 1 165 1 362 1 348 1 226 1 301 1 196 1 285 1 213 1 270 1 58 1 171 1 59 1 293 1 176 1 21 1 139 1 
210 1 
264 1 265 1 298 1 18 1 333 1 162 1 228 1 
91 1 250 1 265 1 342 1 25 1 228 1 318 1 52 1 198 1 129 1 280 1 66 1 333 1 136 1 70 1 116 1 18 2 
47 10 193 1 91 4 1 2 341 2 342 4 194 2 97 2 298 1 50 1 99 2 196 3 52 12 56 2 198 6 59 4 106 2 107 1 257 1 208 2 66 5 67 3 70 4 117 3 158 1 18 8 21 3 313 1 264 1 316 2 265 2 77 2 25 5 228 8 127 2 371 2 32 6 129 3 373 1 35 3 374 3 241 1 279 2 184 2 280 4 85 2 378 2 333 9 185 1 285 3 40 2 136 5 87 2 45 6 
91 2 1 2 265 2 342 2 97 2 25 1 228 5 52 6 29 1 127 2 371 1 233 1 198 3 32 5 129 1 349 1 279 2 184 1 280 2 66 1 378 2 333 8 212 1 40 2 245 1 136 1 14 1 70 2 158 1 18 5 89 1 337 1 192 1 45 5 46 1 
249 1 340 1 91 1 95 1 342 1 97 1 224 1 228 2 199 1 104 1 8 1 34 1 177 1 178 1 279 2 184 1 280 1 378 2 66 1 333 2 12 1 114 1 136 1 70 1 189 1 291 1 20 1 218 1 
91 1 264 1 265 1 342 1 280 1 298 1 333 1 228 1 70 1 18 1 
1 2 279 2 184 1 97 2 378 2 333 5 228 5 52 10 40 2 127 2 198 5 32 5 18 5 106 1 45 5 
136 1 265 1 129 1 18 1 66 1 25 1 
47 1 91 2 342 1 25 4 196 4 228 2 304 1 320 1 231 1 371 2 57 1 59 1 129 2 373 2 107 1 35 1 280 2 66 3 185 2 333 2 67 1 285 4 286 1 136 3 70 2 158 2 137 1 294 1 21 4 
47 1 296 1 95 3 122 1 145 1 78 1 196 1 368 1 28 1 126 1 147 2 199 2 104 2 59 1 60 1 275 1 35 1 374 1 351 1 352 1 260 1 185 1 334 1 67 1 39 1 285 1 114 2 135 1 189 1 20 3 218 2 21 1 
91 1 265 2 342 1 280 1 333 1 86 1 228 2 52 4 371 1 198 2 70 1 32 2 158 1 18 4 45 2 
27 1 71 1 259 1 
27 1 71 1 259 1 
27 1 246 1 71 1 380 1 161 1 
27 1 71 1 259 1 
27 1 132 1 71 1 
27 1 132 1 71 1 
27 1 132 1 71 1 
27 1 71 1 
134 1 247 1 
48 1 327 3 36 1 279 1 97 1 352 2 224 1 157 1 78 2 86 1 334 2 12 1 126 2 147 4 135 4 291 1 60 8 219 4 295 2 140 1 
12 1 48 1 327 2 135 3 279 1 97 1 291 1 224 1 60 6 219 3 295 2 140 1 162 1 86 1 
1 1 327 2 110 1 279 1 97 1 352 1 157 1 78 1 334 1 40 1 126 1 147 2 135 2 127 1 60 4 295 1 219 2 
1 1 327 2 279 1 97 1 157 1 40 1 29 1 135 4 14 1 127 1 60 7 337 2 295 1 219 3 339 1 
48 1 1 2 97 3 224 2 78 2 126 2 147 4 127 2 60 23 327 9 36 2 279 3 183 1 352 2 157 4 86 1 334 2 12 2 40 2 14 2 135 12 291 1 190 1 337 2 248 1 140 1 219 11 295 5 339 1 
135 1 60 1 337 1 
14 1 60 1 219 1 
1 1 327 3 110 1 279 1 97 1 352 1 157 1 78 1 334 1 40 1 126 1 147 2 135 3 127 1 106 1 60 6 219 3 295 2 
1 2 97 2 78 1 126 1 147 2 29 1 127 2 60 12 349 1 327 2 279 2 352 1 157 1 309 1 334 1 212 1 40 2 245 1 14 1 135 6 337 1 89 1 219 6 295 1 46 1 
327 2 279 1 97 1 224 1 157 1 12 1 135 3 291 1 60 6 219 3 295 1 
48 1 327 2 36 1 183 1 224 1 352 1 157 1 78 1 334 1 12 1 126 1 147 2 135 2 60 3 219 1 295 1 140 1 
249 1 327 5 279 2 97 2 352 1 224 2 309 1 157 2 78 1 334 1 12 2 126 1 147 2 135 5 291 1 60 10 295 3 219 5 
327 1 279 1 352 1 309 1 157 1 78 1 334 1 126 1 147 2 127 1 60 2 219 2 
1 1 327 2 279 1 97 1 352 1 309 1 157 1 78 1 334 1 40 1 126 1 147 2 135 2 127 1 60 4 295 1 219 2 
327 2 36 1 183 1 352 3 224 1 309 1 157 1 78 3 334 3 12 1 126 3 147 6 135 2 217 1 60 3 295 1 219 1 
48 1 1 3 97 5 224 3 78 5 302 1 126 5 147 10 29 1 127 3 232 1 60 34 109 1 327 12 36 2 110 1 279 5 183 1 352 5 309 1 157 5 86 1 334 5 12 3 40 3 135 18 14 3 291 2 217 1 337 4 140 1 219 16 295 7 339 1 
48 1 97 1 224 1 78 1 126 1 147 2 29 1 60 8 349 1 327 2 279 1 352 1 309 1 86 1 334 1 12 1 14 1 135 4 291 1 337 1 219 4 140 1 295 2 
48 1 1 1 97 1 224 1 78 2 126 2 147 4 29 1 127 1 60 11 349 1 327 3 110 1 279 2 352 2 309 1 157 1 86 1 334 2 12 1 135 5 14 1 291 1 337 2 295 2 140 1 219 6 339 1 
48 1 1 2 97 3 224 1 78 3 126 3 147 6 29 1 127 2 60 19 349 1 327 4 110 1 36 1 279 3 352 3 157 1 309 1 86 1 334 3 12 1 212 1 40 2 245 1 14 1 135 10 291 1 337 1 89 1 140 1 219 9 295 3 46 1 
48 1 1 2 97 2 224 1 78 3 126 3 147 6 29 1 127 2 60 17 349 1 327 5 110 1 36 1 279 3 352 3 157 2 309 1 86 1 334 3 12 1 212 1 40 1 245 1 14 1 135 7 291 1 337 1 89 1 140 1 219 10 295 3 46 1 
48 1 97 1 224 1 78 1 126 1 147 2 29 1 60 8 349 1 327 2 279 1 352 1 309 1 86 1 334 1 12 1 14 1 135 4 291 1 337 1 219 4 140 1 295 2 
1 2 97 2 78 1 126 1 147 2 29 1 127 2 60 12 349 1 327 2 279 2 352 1 157 1 309 1 334 1 212 1 40 2 245 1 14 1 135 6 337 1 89 1 219 6 295 1 46 1 
48 1 1 2 97 2 224 1 78 4 126 4 147 8 29 1 127 2 60 18 349 1 327 5 110 1 36 2 279 3 352 4 157 2 309 1 86 1 334 4 12 1 212 1 40 1 245 1 135 8 14 1 291 1 89 1 337 1 140 1 219 10 295 3 46 1 
1 3 97 2 78 4 126 4 147 8 29 1 127 3 60 16 349 1 327 6 36 2 279 3 352 4 157 3 309 1 334 4 212 1 40 2 245 1 135 7 14 1 217 1 89 1 337 1 219 9 295 3 46 1 
48 2 327 6 279 1 97 1 224 3 157 3 12 3 135 4 291 1 60 7 140 1 295 3 219 3 
48 1 1 2 97 2 224 1 78 4 126 4 147 8 29 1 127 2 60 18 349 1 327 4 36 2 279 3 352 4 157 1 309 1 86 1 334 4 12 1 212 1 40 1 245 1 135 8 14 1 291 1 217 1 89 1 337 1 140 1 219 10 295 3 46 1 
39 1 114 1 152 1 95 1 43 1 20 1 90 1 
37 1 152 1 180 1 95 1 335 1 39 1 125 1 114 1 43 1 20 1 150 1 90 1 
35 1 47 1 285 1 304 1 320 1 59 1 162 1 21 1 185 1 67 1 196 1 
47 1 35 1 374 1 95 2 260 1 185 1 67 1 196 1 39 1 285 1 114 1 28 1 104 1 59 1 175 1 218 1 20 2 21 1 
47 3 95 2 196 1 28 1 56 1 104 2 345 1 59 1 34 1 373 1 175 1 35 1 374 2 64 1 85 1 260 1 67 2 39 1 285 1 114 2 20 2 218 1 21 1 
47 3 95 2 196 2 56 1 104 2 345 1 59 1 34 1 373 1 175 1 35 1 374 2 64 1 376 1 85 1 260 1 67 2 39 1 285 2 114 2 20 2 218 1 21 2 164 1 
47 4 35 1 374 1 316 1 364 1 297 1 265 1 341 1 85 1 66 2 25 1 185 1 67 1 196 3 285 3 136 2 56 1 117 1 59 1 18 1 373 1 21 3 164 1 
47 4 35 1 374 1 316 1 265 1 341 1 85 1 99 1 66 2 25 1 185 1 67 1 196 3 285 3 136 2 56 1 117 1 59 1 18 1 373 1 21 3 164 1 
35 1 285 1 31 1 59 1 21 1 196 1 
47 3 35 2 257 1 374 1 142 1 63 1 241 1 112 1 154 1 301 1 185 2 196 6 67 2 285 7 31 1 7 1 59 3 74 1 307 1 21 7 73 1 
47 1 296 1 48 1 95 2 97 1 6 1 196 1 147 4 104 1 59 1 255 1 60 6 256 1 257 1 351 2 352 2 260 1 67 1 12 1 114 1 218 1 20 2 21 1 219 3 224 1 24 1 78 2 368 1 28 1 126 2 79 1 175 1 275 2 35 1 239 1 374 1 277 1 327 2 279 1 334 2 86 1 285 1 39 2 135 3 291 1 140 1 295 2 
47 2 91 2 264 1 316 1 265 1 341 1 342 2 194 1 298 1 77 1 99 1 25 2 228 1 196 1 129 1 174 1 107 1 280 2 66 3 333 1 185 1 285 1 136 3 87 1 70 2 117 1 18 1 21 1 
47 2 35 1 257 1 313 1 374 1 241 1 341 1 196 2 67 1 285 2 31 1 59 2 21 2 
47 1 35 1 257 1 267 1 185 1 196 4 67 1 285 4 304 1 320 1 59 1 21 4 164 1 
47 1 35 1 203 1 374 1 142 1 353 1 196 2 67 1 285 2 55 1 59 2 373 1 21 2 73 1 
360 1 35 1 285 1 348 1 58 1 171 1 59 1 21 1 185 1 196 1 
35 1 47 1 75 1 285 2 257 1 7 1 59 1 301 1 21 2 67 1 196 2 
47 3 35 2 257 1 267 1 185 1 196 4 67 2 285 5 304 1 320 1 7 1 59 2 373 1 21 5 307 1 74 1 
47 3 35 2 257 1 267 1 185 1 196 4 67 2 285 5 304 1 320 1 372 1 7 1 59 2 373 1 21 5 74 1 
47 1 35 1 374 1 95 2 376 1 260 1 185 1 67 1 196 1 39 1 285 1 114 1 104 1 59 1 175 1 218 1 20 2 21 1 
35 1 47 1 374 1 285 1 142 1 241 1 154 1 59 2 373 1 73 1 21 1 67 1 196 1 
0 1 39 1 102 1 181 1 23 1 
0 2 316 1 265 1 64 1 23 1 181 2 377 1 66 2 13 1 39 1 262 1 102 2 136 2 345 1 18 1 33 1 34 1 174 1 312 1 
0 1 9 1 114 1 95 1 23 1 181 1 292 1 330 1 20 1 
13 1 23 1 377 1 
62 1 343 1 11 1 162 1 
303 1 62 1 81 1 343 1 365 1 11 1 207 1 
105 1 207 1 156 1 
92 1 62 1 343 1 365 1 207 3 11 1 355 1 303 3 81 1 128 2 274 1 120 1 
303 2 62 1 81 1 343 1 365 1 11 1 130 1 207 2 61 1 
360 1 303 1 151 1 270 1 81 1 171 1 343 1 365 1 113 1 207 1 120 1 
303 1 81 1 343 1 365 1 11 1 207 1 120 1 
303 1 62 1 81 1 365 1 11 2 207 1 120 1 
343 1 365 2 11 1 207 2 133 1 123 1 303 2 81 2 159 1 120 1 
151 1 62 1 365 1 343 2 11 1 207 3 329 1 303 3 81 1 130 2 236 1 306 1 120 1 
360 2 165 1 348 1 62 1 343 1 365 1 11 1 207 2 303 2 146 1 270 1 81 1 171 1 130 1 120 1 
151 1 62 1 365 2 343 2 11 1 207 4 303 4 81 2 130 2 236 1 61 1 120 1 358 1 
303 1 62 1 81 1 343 1 365 1 11 1 207 1 120 1 
92 1 151 1 62 2 111 1 365 1 343 3 11 2 207 4 355 1 303 4 81 1 128 1 130 2 236 1 
108 1 62 1 10 1 343 1 365 1 11 1 207 2 303 2 81 1 130 1 120 1 44 1 
92 2 62 1 343 1 365 1 207 3 11 1 355 1 367 1 303 3 81 1 128 2 120 1 
49 1 143 1 356 2 343 2 
303 1 81 1 365 1 148 1 207 1 120 1 
303 2 62 1 81 1 343 1 365 1 11 1 130 1 207 2 306 1 120 1 
80 1 
303 1 62 1 81 1 343 1 365 1 11 1 207 1 120 1 
62 1 365 1 343 1 207 3 11 1 303 3 81 1 128 1 130 1 306 1 120 1 
151 1 111 1 343 1 236 1 
343 1 11 1 

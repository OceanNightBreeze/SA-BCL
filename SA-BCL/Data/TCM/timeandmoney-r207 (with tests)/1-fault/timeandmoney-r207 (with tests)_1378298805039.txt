#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
365 2 0 1 243 2 246 1 318 1 1 1 131 9 292 1 369 3 322 2 6 5 7 1 134 1 185 2 375 9 59 4 280 6 356 2 332 1 111 1 305 1 66 1 307 1 379 1 310 1 16 1 191 2 338 2 
365 2 243 2 0 1 246 1 318 1 1 1 131 9 292 1 369 3 322 2 6 5 7 1 134 1 185 2 375 9 59 4 280 6 356 2 332 1 111 1 305 1 66 1 307 1 379 1 310 1 16 1 338 2 191 2 
365 2 243 2 0 1 246 1 318 1 1 1 131 10 292 1 369 4 322 2 6 6 7 1 134 1 185 2 375 10 59 5 280 7 356 2 332 1 111 1 305 1 66 1 307 1 379 1 310 1 16 1 338 2 191 2 
365 2 243 2 0 1 246 1 318 1 1 1 131 7 292 1 369 2 322 2 6 4 7 1 134 1 185 2 375 7 59 3 280 4 356 2 332 1 111 1 305 1 307 1 379 1 310 1 16 1 338 2 191 1 
375 4 365 1 59 2 243 1 280 3 356 1 1 1 332 1 131 4 292 1 369 1 66 1 322 1 307 1 6 3 310 1 338 1 191 2 
375 2 106 1 185 1 365 1 316 1 356 1 246 1 332 1 131 2 292 1 322 1 6 1 307 1 134 1 179 1 338 1 
375 3 185 1 59 1 280 1 356 2 332 1 131 3 111 1 292 1 369 1 322 2 307 1 6 2 
365 1 243 1 318 1 1 1 131 9 292 1 4 1 369 3 322 2 6 5 185 1 375 9 59 4 206 1 280 7 356 2 332 1 111 1 66 1 307 1 379 1 310 1 191 2 338 1 
365 1 243 1 318 1 1 1 131 9 292 1 4 1 369 3 322 2 6 5 185 1 375 9 59 4 206 1 280 7 356 2 332 1 111 1 66 1 307 1 379 1 310 1 191 2 338 1 
177 1 186 1 344 1 
177 1 94 1 216 2 
260 2 132 2 115 2 19 2 214 1 37 2 267 2 81 1 
19 2 196 1 320 1 247 1 23 2 132 3 201 1 51 1 203 1 27 1 53 1 346 1 325 1 279 2 57 1 326 1 81 1 141 2 33 1 107 1 61 1 214 1 213 1 215 1 37 2 260 3 233 1 64 1 147 2 150 1 115 2 265 1 337 1 15 1 267 2 90 2 169 1 
260 1 234 1 132 1 256 1 115 1 69 1 19 1 37 1 267 1 81 1 
255 1 34 1 19 1 260 1 261 1 234 1 177 1 132 1 114 1 370 1 344 1 324 1 221 1 82 1 
255 2 34 2 19 1 37 1 260 1 261 1 234 1 177 1 132 1 115 1 370 1 344 1 324 1 267 1 82 1 
255 1 34 1 173 1 360 1 144 1 
177 1 255 2 34 2 344 1 89 1 288 1 360 1 144 1 
255 1 34 1 144 1 
256 1 255 1 34 1 165 1 19 1 360 1 37 1 260 1 234 1 132 1 69 1 115 1 267 1 81 1 
177 1 
146 1 177 1 255 2 34 2 344 1 89 1 360 1 144 1 
255 5 228 1 328 2 123 1 34 5 352 1 74 2 45 2 49 1 360 2 144 2 177 1 148 1 344 1 89 1 138 1 380 1 300 1 55 1 
186 1 214 1 
85 1 19 2 214 2 37 1 260 2 132 2 115 1 240 1 267 1 
187 1 262 1 120 1 
205 1 107 1 214 1 213 1 215 1 260 1 132 1 64 1 147 1 265 1 325 1 279 1 57 1 15 1 90 1 169 1 
107 1 19 1 213 1 215 1 11 1 37 1 260 2 132 2 64 1 147 1 115 1 118 1 120 1 325 1 265 1 15 1 57 1 279 1 90 1 169 1 
260 3 132 3 115 3 19 3 214 1 11 1 267 1 37 3 
260 1 234 1 132 1 256 1 115 1 19 1 37 1 
260 1 234 1 132 1 85 1 115 1 19 1 240 1 37 1 267 1 
95 1 19 3 196 1 320 1 273 1 23 1 132 4 201 1 51 1 370 1 203 1 27 1 324 1 325 1 57 1 279 1 326 1 82 1 81 1 141 2 33 1 107 1 61 1 255 1 34 1 214 1 213 1 215 1 11 1 37 3 260 4 261 1 234 1 64 1 147 1 150 1 115 3 240 1 118 1 265 1 15 1 267 2 90 1 169 1 
260 2 132 2 114 1 115 1 19 2 214 1 11 1 92 1 37 1 
255 1 34 1 19 3 11 2 273 1 37 3 260 3 234 1 261 1 177 1 132 3 115 3 370 1 240 1 118 1 324 1 267 1 82 1 381 1 
19 2 11 1 37 2 260 2 187 1 132 2 115 2 240 1 120 1 267 1 
107 1 214 1 213 1 215 1 260 1 132 1 64 1 147 1 265 1 325 1 279 1 57 1 15 1 90 1 169 1 
244 1 214 1 213 1 215 1 260 1 3 1 132 1 147 1 265 1 325 1 279 1 57 1 15 1 90 1 169 1 
364 1 245 1 196 1 79 1 320 1 23 4 158 1 201 1 203 2 27 1 141 2 33 1 61 1 329 1 357 1 12 1 187 2 262 2 113 1 237 1 120 2 337 2 152 1 71 1 
260 1 234 1 132 1 72 1 115 1 19 1 324 1 37 1 
19 5 212 1 214 1 11 2 37 4 260 5 132 5 114 1 67 1 115 4 240 1 118 1 92 1 267 1 
260 2 234 1 132 2 256 1 72 1 115 2 19 2 37 2 
306 1 309 1 
306 1 309 1 
350 1 302 1 
350 1 302 1 
350 1 302 1 
306 1 210 1 309 1 
306 1 210 1 309 1 
306 1 309 1 22 1 
42 1 306 2 350 1 35 1 309 2 302 1 
306 1 210 1 309 1 
306 1 249 1 309 1 
306 1 249 1 309 1 
306 1 249 1 309 1 
255 2 208 1 34 2 172 1 35 1 75 1 46 1 130 1 275 1 258 3 177 1 306 2 159 2 309 2 104 2 137 2 241 2 56 1 153 2 
193 1 93 1 73 1 172 1 19 2 272 1 22 1 132 2 137 1 104 1 255 1 34 1 358 1 214 1 37 2 258 1 260 2 306 1 14 1 115 2 309 1 88 1 241 1 153 1 
365 1 243 1 338 1 
106 1 365 1 338 1 
106 1 243 2 317 1 373 1 168 1 338 3 
106 1 243 1 317 1 335 1 373 1 338 2 
106 1 243 1 317 1 373 2 338 2 
93 1 94 1 245 1 74 1 154 1 272 1 45 1 49 2 367 1 158 1 295 1 177 2 298 2 344 1 251 2 277 2 300 1 255 5 328 1 34 5 209 1 357 1 304 1 216 3 12 1 360 4 144 1 286 1 148 3 88 1 89 1 312 1 
94 3 170 5 245 3 173 5 74 2 271 1 272 4 154 2 45 2 49 6 158 3 24 1 295 3 177 5 344 1 251 6 138 1 277 6 300 1 255 9 328 2 164 1 34 9 209 1 357 3 304 2 216 9 12 3 360 7 144 6 239 1 308 1 148 8 89 1 220 1 
94 2 245 1 74 1 154 1 272 1 45 1 367 1 49 2 158 1 295 1 177 3 298 1 344 1 251 2 138 1 277 2 255 3 328 1 34 3 357 1 304 1 12 1 216 4 360 2 148 3 312 1 
94 3 245 2 74 1 271 1 154 1 272 2 45 1 367 1 49 4 158 2 24 1 295 2 177 4 298 2 344 1 251 4 277 4 138 1 255 4 328 1 164 1 34 4 357 2 304 1 216 7 12 2 360 3 148 5 312 1 
186 1 215 1 31 1 
60 1 215 1 
112 1 
325 1 215 1 
200 1 18 1 325 1 213 1 215 3 31 2 
325 1 213 1 215 1 
254 1 215 1 
327 1 245 1 124 1 223 1 76 2 79 2 23 7 157 1 232 1 158 1 237 3 40 1 203 3 287 1 54 1 337 4 91 1 
327 1 245 1 124 1 223 1 76 2 79 2 23 7 157 1 232 1 158 1 237 3 40 1 203 3 287 1 54 1 337 4 91 1 
327 1 245 1 124 1 223 1 76 2 79 2 157 1 23 7 232 1 158 1 176 1 237 3 40 1 203 3 287 1 54 1 337 4 91 1 
41 4 124 5 245 4 223 2 196 1 76 3 155 1 341 1 79 5 320 1 157 1 23 31 158 4 295 3 296 1 133 1 203 15 27 1 54 2 252 1 253 1 327 2 141 2 33 1 357 3 12 3 232 1 333 1 237 10 40 1 287 1 70 3 337 16 91 2 
245 1 124 1 223 1 196 2 76 2 79 3 320 2 23 9 157 1 158 1 25 1 203 4 27 2 54 1 253 1 141 4 327 1 33 2 282 1 232 1 237 4 287 1 337 5 91 1 
365 1 243 1 195 1 131 2 292 1 322 1 6 1 50 1 136 1 372 1 29 1 279 1 57 1 58 1 375 2 185 1 348 1 106 1 280 1 356 1 110 1 332 1 378 1 147 1 307 1 68 1 265 1 168 1 90 1 338 2 
365 1 243 1 195 1 171 1 197 1 366 1 131 3 292 1 322 1 6 1 50 1 136 1 372 1 29 1 279 1 57 1 375 3 185 1 348 1 106 1 280 2 356 1 110 1 378 1 147 1 307 1 168 1 265 1 90 1 338 2 
365 1 243 1 195 1 171 1 366 1 131 2 292 1 6 1 136 1 29 1 279 1 57 1 185 1 375 2 348 1 106 1 280 2 110 1 378 1 147 1 307 1 265 1 168 1 90 1 338 2 
121 1 195 2 197 1 174 1 131 1 322 1 29 2 325 1 279 1 57 1 375 1 185 2 349 1 354 1 356 1 110 2 215 1 285 1 218 1 147 1 265 1 90 1 169 1 
106 1 348 1 185 1 375 1 365 1 243 1 195 1 356 1 110 1 332 1 366 1 131 1 378 1 322 1 147 1 50 1 68 1 136 1 372 1 168 1 265 1 29 1 57 1 279 1 90 1 338 2 
149 1 
94 2 96 1 154 1 45 1 49 2 100 1 344 1 52 1 105 1 300 1 57 1 207 2 255 5 62 2 354 1 215 1 216 2 260 1 261 1 114 1 117 1 311 1 119 4 265 1 221 1 169 2 74 1 19 1 224 1 78 2 174 1 177 2 132 1 370 1 26 2 371 1 324 1 325 1 28 1 374 2 183 2 279 2 82 1 32 1 142 1 328 1 34 5 144 6 334 2 234 1 147 2 148 2 336 1 89 3 90 2 
19 1 224 1 100 1 132 1 370 1 371 1 324 1 82 1 32 1 142 1 255 3 207 1 34 3 144 2 260 1 261 1 234 1 146 1 114 1 119 2 89 1 221 1 
19 1 224 1 100 1 132 1 177 1 370 1 371 1 344 1 324 1 82 1 32 1 142 1 255 3 34 3 144 1 260 1 334 1 261 1 234 1 146 1 114 1 119 3 89 1 221 1 
19 1 224 1 78 1 100 1 132 1 177 1 370 1 371 1 344 1 324 1 82 1 32 1 142 1 255 3 207 1 34 3 144 2 260 1 334 1 146 1 261 1 234 1 114 1 89 1 119 3 221 1 
194 1 94 2 45 1 49 1 100 1 199 1 344 5 300 1 105 1 301 1 207 4 255 5 62 2 260 1 261 1 114 1 117 1 119 6 266 1 221 1 74 1 19 1 224 1 78 4 132 1 177 5 370 1 371 1 135 1 26 2 324 1 374 2 183 2 82 1 32 1 142 1 328 1 34 5 144 7 334 4 234 1 146 1 148 1 89 3 
94 2 74 1 19 1 45 1 224 1 78 2 49 1 100 1 177 2 132 1 370 1 344 1 26 2 371 1 52 1 324 1 105 1 300 1 374 2 183 2 82 1 32 1 207 2 142 1 255 4 62 2 328 1 34 4 216 2 144 4 334 2 260 1 261 1 234 1 114 1 148 1 117 1 89 2 119 4 221 1 
94 2 74 1 19 1 45 1 224 1 78 2 49 1 100 1 199 1 177 1 132 1 370 1 344 1 26 2 371 1 135 1 324 1 105 1 300 1 374 2 183 2 82 1 32 1 207 2 142 1 255 4 62 2 328 1 34 4 144 4 334 2 260 1 261 1 234 1 114 1 148 1 117 1 89 2 119 4 266 1 221 1 
94 2 74 1 19 1 45 1 224 1 78 2 49 1 100 1 199 1 177 1 132 1 370 1 344 1 26 2 371 1 135 1 324 1 105 1 300 1 374 2 183 2 82 1 32 1 207 2 142 1 255 4 62 2 328 1 34 4 144 4 334 2 260 1 261 1 234 1 114 1 148 1 117 1 89 2 119 4 266 1 221 1 
122 1 74 1 19 1 45 1 224 1 78 2 49 1 100 1 199 1 177 1 132 1 370 1 344 1 80 2 26 2 371 1 324 1 105 1 300 1 8 2 374 2 82 1 32 1 207 2 142 1 255 4 328 1 34 4 216 2 144 4 334 2 260 1 261 1 234 1 236 1 114 1 167 1 148 1 89 2 119 4 221 1 
194 1 94 2 74 1 19 1 45 1 224 1 78 3 49 1 100 1 199 1 177 1 132 1 370 1 344 1 26 2 371 1 135 1 324 1 105 1 300 1 374 2 183 2 82 1 32 1 142 1 255 4 207 3 62 2 328 1 34 4 144 5 260 1 334 3 261 1 234 1 114 1 148 1 117 1 89 2 119 5 266 1 221 1 
194 1 94 2 74 1 19 1 45 1 224 1 78 3 49 1 100 1 199 1 177 1 132 1 370 1 344 1 26 2 371 1 135 1 324 1 105 1 300 1 374 2 183 2 82 1 32 1 142 1 255 4 207 3 62 2 328 1 34 4 144 5 260 1 334 3 261 1 234 1 114 1 148 1 117 1 89 2 119 5 266 1 221 1 
74 1 19 1 45 1 224 1 78 2 49 1 100 1 177 1 132 1 370 1 344 1 80 2 26 2 371 1 52 1 324 1 105 1 300 1 8 2 374 2 82 1 32 1 207 2 142 1 255 4 328 1 34 4 216 2 144 4 334 2 260 1 261 1 234 1 114 1 236 1 148 1 89 2 119 4 221 1 
327 1 141 2 33 1 61 1 186 1 245 1 223 1 76 1 196 1 214 2 79 2 320 1 23 6 157 1 232 1 158 1 187 1 262 1 237 2 113 1 201 1 203 3 27 1 287 1 120 1 337 3 
41 3 124 1 245 1 196 2 47 1 79 1 320 2 23 14 158 2 295 2 133 1 201 2 203 6 180 1 27 2 346 1 162 1 141 4 33 2 61 1 257 1 357 1 214 1 12 2 333 1 187 4 262 11 237 2 150 1 362 1 70 3 120 11 337 8 
340 1 270 1 19 1 196 1 320 1 23 2 132 2 201 1 250 1 203 1 27 1 325 1 346 1 57 1 279 1 205 1 141 2 107 1 33 1 61 1 214 1 213 1 215 1 11 1 37 1 260 2 187 1 64 1 147 1 362 1 115 1 150 1 118 1 265 1 15 1 337 1 90 1 169 1 
125 1 19 1 196 1 320 1 23 2 132 1 201 1 203 2 27 1 279 1 141 2 33 1 61 1 86 1 11 1 359 1 37 1 260 1 147 1 362 1 115 1 150 1 118 1 87 1 90 1 169 1 
268 1 19 1 196 2 366 1 174 1 320 2 247 2 23 2 274 1 132 1 201 2 203 1 27 2 160 1 346 1 325 2 57 2 279 7 9 1 204 1 58 1 141 4 33 2 61 2 354 1 143 1 11 1 215 3 37 1 260 1 113 1 147 8 115 1 150 1 189 1 265 2 337 1 90 8 169 2 
245 1 19 1 196 1 79 1 320 1 23 3 158 1 295 1 132 1 201 1 203 2 27 1 141 2 33 1 61 1 10 1 357 1 12 1 37 1 260 1 187 1 262 1 237 1 362 1 115 1 240 1 120 1 337 1 267 1 
364 1 141 2 33 1 61 1 124 1 196 1 320 1 23 2 12 1 158 1 187 1 262 1 237 1 113 1 201 1 27 1 120 1 337 2 
141 2 33 1 61 1 329 1 245 1 196 1 357 1 79 1 320 1 23 2 187 1 262 1 237 1 113 1 201 1 203 2 27 1 120 1 
124 1 245 1 196 1 79 1 320 1 23 4 158 1 295 1 201 1 203 2 27 1 141 2 33 1 61 1 357 1 12 1 187 2 262 2 113 1 237 2 120 2 337 2 
364 1 141 2 33 1 61 1 124 1 143 1 196 1 320 1 23 2 12 1 158 1 187 1 262 1 237 1 201 1 27 1 120 1 337 2 
141 2 33 1 61 1 329 1 245 1 143 1 196 1 357 1 79 1 320 1 23 2 187 1 262 1 237 1 201 1 203 2 27 1 120 1 
124 1 245 1 196 1 79 1 320 1 23 4 158 1 295 1 201 1 203 2 27 1 141 2 33 1 61 1 143 1 357 1 12 1 187 2 262 2 237 2 120 2 337 2 
124 1 245 1 196 1 79 1 320 1 23 4 158 1 295 1 201 1 203 2 27 1 141 2 33 1 61 1 357 1 12 1 187 2 262 2 237 2 120 2 337 2 
196 1 320 1 23 2 132 1 201 1 51 1 203 1 27 1 346 1 325 1 57 1 279 1 141 2 107 1 33 1 61 1 214 1 213 1 215 1 260 1 64 1 147 1 150 1 265 1 337 1 15 1 90 1 169 1 
244 1 196 1 320 1 23 2 3 1 132 1 201 1 203 1 27 1 346 1 325 1 57 1 279 1 141 2 33 1 61 1 214 1 213 1 215 1 260 1 147 1 263 1 150 1 265 1 337 1 15 1 90 1 169 1 
124 1 245 1 196 1 79 1 320 1 23 4 158 1 295 1 201 1 203 2 27 1 141 2 33 1 61 1 357 1 12 1 187 2 262 2 237 2 362 1 120 2 337 2 
245 1 124 1 196 1 79 1 320 1 23 4 158 1 295 1 132 1 248 1 201 1 51 1 203 2 27 1 325 1 57 1 279 1 58 1 141 2 107 1 33 1 61 1 357 1 213 1 215 1 12 1 260 1 187 2 262 2 64 1 237 2 147 1 120 2 265 1 337 2 15 1 90 1 
242 1 245 1 124 1 19 1 196 1 320 1 23 3 158 1 295 1 132 1 201 1 203 1 27 1 141 2 33 1 61 1 357 1 12 1 37 1 260 1 187 1 262 1 237 1 362 1 115 1 240 1 120 1 337 2 267 1 
41 4 43 1 245 5 196 3 2 1 157 1 158 5 295 4 293 1 5 1 297 1 203 21 347 1 253 1 357 4 166 1 12 4 264 2 70 3 124 4 223 1 76 1 127 4 79 4 319 1 320 3 23 41 225 1 133 1 27 3 227 1 184 1 141 6 327 1 33 3 230 1 282 1 232 1 333 3 38 1 237 8 287 1 337 20 
41 4 43 1 124 3 245 4 223 1 76 1 196 4 127 4 319 1 2 1 79 4 320 4 157 1 23 38 158 5 293 1 295 4 225 1 5 1 297 1 133 1 203 18 227 1 27 4 347 1 184 1 253 2 327 1 141 8 33 4 230 1 357 3 166 1 282 1 12 4 232 1 333 3 38 1 237 7 264 2 287 1 70 3 337 20 
41 4 43 1 124 7 245 8 223 1 76 1 196 2 127 4 319 1 2 1 79 7 320 2 157 1 23 52 158 8 293 1 295 7 225 1 5 1 297 1 133 2 203 25 27 2 347 1 253 1 327 1 141 4 33 2 230 1 257 2 357 7 166 1 282 1 12 7 232 1 333 2 38 1 237 14 264 1 287 1 70 4 337 27 
41 2 43 1 124 3 245 3 196 2 127 2 79 3 320 2 23 19 158 3 295 3 5 1 297 1 133 1 203 10 227 1 27 2 347 1 141 4 33 2 357 3 166 2 231 1 282 1 12 3 333 1 237 6 264 1 70 1 337 9 
41 2 43 1 124 2 245 2 196 3 127 4 319 1 2 1 79 2 320 3 23 26 158 3 293 1 295 3 5 1 225 1 297 2 203 12 27 3 347 1 253 2 141 6 33 3 230 1 357 2 166 1 282 1 12 3 333 2 38 1 237 4 264 2 70 2 337 14 
306 1 35 1 309 1 103 1 137 1 104 1 241 1 56 1 275 1 153 1 
193 1 22 1 
192 1 306 1 309 1 137 1 104 1 175 1 241 1 290 1 153 1 
255 1 208 1 34 1 172 1 35 1 75 1 46 1 275 1 258 2 177 1 306 1 159 1 309 1 104 1 137 1 241 1 56 1 153 1 
255 1 208 1 34 1 172 1 35 1 75 1 46 1 275 1 258 2 177 1 306 1 159 1 309 1 104 1 137 1 241 1 56 1 153 1 
255 1 208 1 34 1 172 1 35 1 75 1 46 1 275 1 258 2 177 1 306 1 159 1 309 1 104 1 137 1 241 1 56 1 153 1 
42 1 210 1 289 1 
42 1 210 1 289 1 
249 1 321 1 
42 1 249 1 321 1 
73 1 358 1 
193 1 93 1 73 1 75 1 19 2 272 1 77 1 22 1 132 2 159 1 137 1 104 1 255 1 34 1 358 1 214 1 360 1 37 2 258 1 260 2 306 1 14 1 115 2 309 1 88 1 241 1 153 1 
210 1 289 1 
42 1 249 1 321 1 
17 1 19 2 126 1 196 1 320 1 247 2 23 2 274 1 291 1 132 2 201 1 203 1 27 1 325 1 278 1 346 1 57 1 279 2 139 1 141 2 33 1 61 1 215 1 260 2 147 2 362 1 150 1 189 1 265 1 337 1 90 2 
106 1 58 1 365 1 243 1 163 1 195 1 366 1 294 1 378 1 147 2 50 1 219 1 136 1 168 1 265 1 57 1 279 2 90 2 338 2 
106 1 365 1 243 1 195 1 366 1 294 1 378 1 147 1 50 1 188 1 136 1 168 1 265 1 279 1 57 1 90 1 338 2 
349 1 163 1 195 1 354 1 174 1 215 1 147 1 323 1 265 1 325 1 57 1 279 1 90 1 169 1 
106 1 365 1 243 1 163 1 195 1 366 1 294 1 378 1 147 1 50 1 219 1 136 1 168 1 265 1 279 1 57 1 90 1 338 2 
368 1 
177 1 148 1 123 1 186 1 344 1 55 1 49 1 
94 1 74 1 45 1 49 1 177 2 344 1 300 1 183 1 255 1 328 1 62 1 34 1 216 1 144 1 148 1 117 1 89 1 
94 6 96 1 245 2 154 2 97 2 45 4 156 2 99 2 49 8 158 2 295 2 101 1 200 1 344 2 251 6 300 4 55 1 57 3 58 1 254 2 60 3 255 5 357 2 213 3 215 10 216 12 12 2 363 2 265 4 169 1 269 2 123 1 74 4 177 8 178 1 276 1 277 6 181 2 325 3 182 1 279 3 31 2 82 2 328 4 34 5 281 2 331 2 86 2 283 1 144 5 147 3 148 9 89 3 90 3 
41 1 94 3 96 1 74 2 245 2 154 1 45 2 156 1 2 1 99 2 49 5 158 2 293 1 295 2 225 1 177 5 344 2 299 1 251 5 277 5 300 2 161 1 255 1 328 2 34 1 230 1 357 2 216 6 12 2 144 1 333 1 38 1 148 8 89 1 70 1 
74 1 245 1 223 1 19 1 45 1 156 1 99 2 49 2 158 2 132 1 300 1 81 1 327 1 256 1 255 1 328 1 34 1 353 1 165 1 232 1 37 1 260 1 234 1 148 2 69 1 115 1 266 1 267 1 
328 1 123 1 74 1 45 1 49 1 177 1 148 1 344 1 300 1 55 1 
94 5 245 2 357 2 156 1 86 1 99 2 12 2 49 5 216 10 158 2 295 2 177 5 148 5 251 5 277 5 
177 1 255 1 34 1 344 1 89 1 144 1 
74 2 96 2 154 2 45 2 174 1 49 2 345 1 138 1 325 1 300 1 182 2 57 1 279 4 255 3 328 2 34 3 354 1 215 1 283 1 144 4 147 4 336 1 148 2 151 1 311 1 89 2 265 1 90 4 169 2 
19 2 196 1 320 1 23 1 132 3 201 1 51 1 203 1 27 1 325 1 279 1 57 1 326 1 81 1 141 2 107 1 33 1 61 1 214 1 213 1 215 1 37 2 260 3 64 1 147 1 150 1 115 2 265 1 15 1 90 1 267 2 169 1 
94 2 328 1 74 1 96 1 76 1 154 1 45 1 216 4 49 2 177 4 148 1 344 2 251 2 277 2 300 1 
137 1 21 1 153 1 
137 1 21 1 153 1 
73 1 137 1 48 1 275 1 153 1 
137 1 21 1 153 1 
137 1 190 1 153 1 
137 1 190 1 153 1 
137 1 190 1 153 1 
137 1 153 1 
306 1 309 1 
41 1 245 1 223 1 76 1 196 1 79 2 320 1 23 8 157 1 158 1 225 1 203 4 27 1 141 2 327 1 33 1 282 1 232 1 333 1 237 2 70 1 287 1 337 4 
41 2 245 1 124 1 223 1 76 1 196 2 79 2 320 2 157 1 23 11 158 2 295 1 225 1 133 1 203 5 27 2 327 1 141 4 33 2 330 1 282 1 12 1 232 1 333 1 237 3 287 1 70 1 337 6 
41 1 124 1 245 3 223 1 76 1 196 3 79 3 2 1 320 3 157 1 23 19 158 3 293 1 295 2 225 1 203 10 27 3 253 1 327 1 141 6 33 3 330 1 230 1 357 2 282 1 12 2 232 1 333 1 38 1 237 4 287 1 70 1 337 9 
41 1 124 2 245 2 223 1 76 1 196 3 79 3 2 1 320 3 157 1 23 17 158 3 293 1 295 2 225 1 203 7 27 3 253 1 327 1 141 6 33 3 330 1 357 1 230 1 282 1 12 2 232 1 333 1 38 1 237 5 287 1 70 1 337 10 
41 1 245 1 223 1 76 1 196 1 79 2 320 1 23 8 157 1 158 1 225 1 203 4 27 1 141 2 327 1 33 1 282 1 232 1 333 1 237 2 70 1 287 1 337 4 
41 1 124 1 245 2 196 1 79 1 2 1 320 1 23 12 158 2 293 1 295 2 225 1 203 6 27 1 141 2 33 1 357 2 230 1 282 1 12 2 333 1 38 1 237 2 70 1 337 6 
41 1 124 2 245 2 223 1 76 1 196 4 2 1 79 3 320 4 157 1 23 18 158 3 293 1 295 2 225 1 203 8 27 4 253 2 327 1 141 8 33 4 330 1 230 1 357 1 282 1 12 2 232 1 333 1 38 1 237 5 287 1 70 1 337 10 
41 1 124 3 245 2 196 4 2 1 79 3 320 4 23 16 158 3 293 1 295 3 225 1 203 7 27 4 227 1 253 2 141 8 33 4 230 1 357 2 282 1 12 3 333 1 38 1 237 6 70 1 337 9 
327 3 245 1 124 3 223 3 79 3 23 7 157 2 232 1 158 1 237 6 203 4 287 1 337 3 
41 1 124 1 245 2 223 1 76 1 196 4 2 1 79 3 320 4 157 1 23 18 158 3 293 1 295 2 225 1 203 8 27 4 227 1 253 2 327 1 141 8 33 4 230 1 357 1 282 1 12 2 232 1 333 1 38 1 237 4 287 1 70 1 337 10 
141 4 327 1 33 2 245 1 124 1 223 1 76 1 196 2 79 2 320 2 23 8 157 1 232 1 158 1 237 3 203 4 27 2 287 1 337 4 253 1 
327 1 186 1 245 1 223 1 76 1 79 2 157 1 23 6 232 1 158 1 237 2 203 3 287 1 337 3 
141 2 33 1 245 1 330 1 124 1 357 1 196 1 79 1 320 1 12 1 23 4 158 1 295 1 237 2 203 2 27 1 337 2 
41 2 245 1 124 1 357 1 79 1 23 7 12 1 158 1 333 1 295 1 133 1 237 2 203 4 70 1 337 3 
41 2 124 4 245 3 223 2 76 1 196 2 79 5 320 2 157 1 23 23 158 3 295 2 133 1 203 12 180 1 27 2 253 2 327 2 141 4 33 2 377 1 357 2 257 1 12 2 232 1 237 9 287 1 70 2 337 11 
41 1 203 1 23 1 
70 1 23 1 337 1 
141 2 33 1 330 1 124 1 245 1 196 1 357 1 86 1 79 2 320 1 23 6 12 1 158 1 295 1 237 3 203 3 27 1 337 3 
41 1 124 1 245 2 196 1 79 1 2 1 320 1 23 12 158 2 293 1 295 2 225 1 203 6 27 1 141 2 33 1 357 2 230 1 282 1 12 2 333 1 38 1 237 2 70 1 337 6 
327 1 237 2 124 1 245 1 223 1 203 3 79 1 23 6 337 3 232 1 158 1 
327 1 141 2 33 1 377 1 124 1 223 1 196 1 79 1 320 1 157 1 23 3 237 2 203 2 27 1 287 1 337 1 253 1 
141 2 327 2 33 1 353 1 124 2 245 2 223 2 196 1 79 3 320 1 282 1 23 10 232 1 158 2 237 5 203 5 27 1 337 5 
141 2 33 1 124 1 196 1 320 1 282 1 12 1 23 2 158 1 237 1 27 1 337 2 
141 2 33 1 245 1 124 1 357 1 196 1 79 1 320 1 282 1 12 1 23 4 158 1 295 1 237 2 203 2 27 1 337 2 
141 6 327 1 33 3 377 1 124 1 223 1 196 3 79 1 320 3 23 3 282 1 237 2 203 2 227 1 27 3 337 1 253 1 
41 4 124 5 245 5 223 3 76 1 155 1 196 5 79 7 320 5 157 1 23 34 158 5 295 3 296 1 133 1 203 18 227 1 27 5 252 1 253 2 327 3 141 10 33 5 377 1 330 1 357 3 282 1 12 3 232 2 333 1 237 12 287 1 70 3 337 16 
260 1 132 1 114 1 238 1 19 1 214 1 92 1 
108 1 19 1 128 1 214 1 361 1 260 1 132 1 114 1 238 1 116 1 314 1 92 1 
147 1 186 1 354 1 265 1 325 1 174 1 215 1 57 1 279 1 90 1 169 1 
107 1 19 1 214 1 213 1 215 1 11 1 37 1 260 2 132 2 147 1 115 1 325 1 265 1 15 1 279 1 57 1 90 1 169 1 
19 2 132 2 370 1 324 1 325 2 182 1 57 1 279 1 107 1 254 1 331 1 214 1 213 2 11 1 215 3 37 1 260 2 234 1 147 1 115 2 265 1 15 1 90 1 
244 1 19 2 132 2 370 1 324 1 325 2 182 1 57 1 279 2 254 1 331 1 214 1 213 2 11 1 215 3 37 1 260 2 234 1 147 2 115 2 265 1 15 1 222 1 90 2 
98 1 20 1 177 1 344 1 325 1 182 1 57 1 279 3 31 1 82 1 254 1 60 1 255 2 34 2 331 1 213 1 215 4 144 1 147 3 265 1 222 1 90 3 169 1 
254 1 255 2 60 1 34 2 331 1 97 1 213 1 215 4 144 1 177 1 147 3 344 1 325 1 265 1 182 1 279 3 57 1 222 1 90 3 169 1 82 1 31 1 
147 1 265 1 57 1 279 1 90 1 9 1 
268 1 58 1 303 1 366 1 213 1 247 1 215 3 13 1 274 1 200 1 39 1 147 7 160 1 325 2 265 3 279 6 57 2 9 1 204 1 90 7 169 2 
124 1 245 2 223 1 19 1 196 1 79 2 320 1 23 8 157 1 158 2 132 1 201 1 203 4 27 1 278 1 279 1 58 1 327 1 141 2 33 1 61 1 353 1 214 1 11 1 359 1 232 1 37 1 260 1 234 1 237 3 147 1 362 1 115 1 287 1 337 4 313 1 90 1 
269 1 123 1 74 2 97 1 45 2 49 1 177 1 344 1 181 1 300 2 55 1 279 1 31 1 82 1 255 3 60 1 328 2 34 3 281 1 215 2 283 1 360 1 144 2 147 1 148 1 89 1 90 1 169 1 
58 1 200 1 178 1 147 2 265 2 325 1 213 1 215 2 57 1 279 2 90 2 9 1 31 1 
58 1 354 1 174 1 215 1 147 4 202 1 265 1 325 1 279 4 57 1 222 1 90 4 169 1 
140 1 303 1 213 1 215 1 65 1 39 1 147 2 235 1 325 1 265 2 182 1 279 2 57 1 90 2 
106 1 365 1 378 1 147 1 265 1 57 1 279 1 90 1 338 1 169 1 
58 1 147 2 17 1 265 1 325 1 366 1 215 1 57 1 279 2 90 2 274 1 
58 1 268 1 354 1 174 1 215 3 274 1 147 5 202 1 160 1 325 2 265 2 182 1 279 4 57 2 90 5 169 1 
58 1 354 1 174 1 215 3 274 1 217 1 147 5 202 1 160 1 325 2 265 2 182 1 279 4 57 2 90 5 169 1 
244 1 19 1 214 1 213 1 215 1 11 1 37 1 260 2 132 2 147 1 115 1 325 1 265 1 15 1 279 1 57 1 90 1 169 1 
303 1 213 1 215 1 13 1 200 1 39 1 147 1 325 1 265 2 182 1 279 1 57 1 90 1 
139 1 351 1 19 1 126 1 63 1 259 1 291 1 260 1 132 1 
315 1 351 1 284 1 
83 1 351 1 63 1 214 1 259 1 
83 2 255 2 315 1 351 1 34 2 63 2 214 1 273 1 360 1 284 1 259 2 342 1 234 1 261 1 177 1 370 1 344 1 324 1 82 1 
6 1 307 1 186 1 292 1 
375 1 322 1 6 1 307 1 356 1 131 1 292 1 
185 1 375 1 110 1 
375 3 356 1 211 1 109 1 332 1 131 3 292 1 322 1 6 1 307 1 134 2 226 1 
375 2 322 1 6 1 307 1 280 1 356 1 131 2 292 1 191 1 
375 1 365 1 59 1 243 1 322 1 6 1 356 1 1 1 332 1 131 1 338 1 
375 1 322 1 6 1 307 1 356 1 332 1 131 1 
375 1 322 1 307 2 356 1 332 1 131 1 292 1 
375 2 84 1 356 2 332 1 131 2 322 2 6 1 307 1 343 1 102 1 
375 3 59 1 280 2 356 1 318 1 332 1 131 3 292 1 369 1 322 1 307 1 6 2 379 1 
106 1 375 2 365 1 243 1 280 1 356 1 44 1 332 1 131 2 292 1 322 1 6 1 307 1 168 1 338 2 
375 4 59 1 280 2 356 2 332 1 131 4 292 1 369 1 322 2 66 1 307 1 6 2 191 1 
375 1 322 1 6 1 307 1 356 1 332 1 131 1 292 1 
375 4 59 1 229 1 280 2 356 1 109 1 131 4 292 2 369 1 322 1 307 2 6 3 134 1 226 1 
375 2 280 1 356 1 332 1 131 2 36 1 292 1 4 1 322 1 6 1 307 1 30 1 
375 3 356 1 109 2 332 1 131 3 292 1 198 1 322 1 6 1 307 1 134 2 226 1 
376 1 6 2 355 1 129 2 
145 1 375 1 322 1 356 1 332 1 131 1 
375 2 322 1 6 1 307 1 280 1 318 1 356 1 332 1 131 2 292 1 
339 1 
375 1 322 1 6 1 307 1 356 1 332 1 131 1 292 1 
375 3 280 1 356 1 318 1 332 1 131 3 292 1 322 1 307 1 6 1 134 1 
59 1 369 1 6 1 229 1 
6 1 307 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 115 77 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 84 1 153 1 29 3 298 1 86 9 332 1 261 2 302 2 65 1 164 2 109 2 165 1 362 4 310 1 14 9 178 5 240 1 122 1 317 1 181 1 16 1 245 2 100 1 281 2 184 2 352 6 251 1 
152 1 84 1 153 1 29 3 298 1 86 9 332 1 261 2 302 2 65 1 164 2 109 2 165 1 362 4 310 1 14 9 178 5 240 1 122 1 317 1 181 1 16 1 245 2 100 1 281 2 184 2 352 6 251 1 
152 1 84 1 153 1 29 4 298 1 86 10 332 1 261 2 302 2 65 1 164 2 109 2 165 1 362 5 310 1 14 10 178 6 240 1 122 1 317 1 181 1 16 1 245 2 100 1 281 2 184 2 352 7 251 1 
152 1 84 1 153 1 29 2 298 1 86 7 332 1 261 2 302 2 65 1 164 2 109 1 165 1 362 3 310 1 14 7 178 4 240 1 122 1 317 1 16 1 245 2 100 1 281 2 184 2 352 4 251 1 
14 4 178 3 29 1 298 1 86 4 240 1 181 1 261 1 16 1 302 1 245 1 100 1 109 2 281 1 362 2 310 1 184 1 352 3 
14 2 178 1 298 1 86 2 120 1 240 1 317 1 261 1 302 1 32 1 164 1 245 1 100 1 165 1 101 1 184 1 
14 3 178 2 29 1 298 1 86 3 240 1 122 1 302 2 164 1 100 1 362 1 184 2 352 1 
84 1 29 3 298 1 86 9 332 1 261 1 302 2 164 1 109 2 362 4 310 1 312 1 14 9 178 5 122 1 240 1 199 1 181 1 16 1 245 1 100 1 281 1 184 2 352 7 
84 1 29 3 298 1 86 9 332 1 261 1 302 2 164 1 109 2 362 4 310 1 312 1 14 9 178 5 122 1 240 1 199 1 181 1 16 1 245 1 100 1 281 1 184 2 352 7 
129 1 355 1 295 1 
129 1 244 1 9 2 
360 2 345 2 268 2 250 2 7 2 94 2 79 1 263 1 
4 1 5 1 105 1 299 1 130 1 30 1 7 3 336 2 157 1 285 1 263 1 133 2 160 1 33 1 233 1 360 3 91 2 268 2 39 1 69 1 269 1 194 1 195 1 94 2 314 1 345 2 140 2 372 1 243 1 247 2 322 1 124 1 250 2 54 1 327 1 79 1 208 1 
228 1 134 1 360 1 345 1 147 1 268 1 250 1 7 1 94 1 79 1 
129 1 82 1 328 1 228 1 176 1 355 1 345 1 7 1 224 1 231 1 360 1 52 1 13 1 56 1 
129 1 82 1 328 1 228 1 176 2 355 1 345 1 7 1 224 2 231 1 360 1 268 1 250 1 94 1 56 1 
176 1 202 1 316 1 224 1 313 1 
129 1 371 1 176 2 202 1 355 1 316 1 68 1 224 2 
176 1 316 1 224 1 
228 1 176 1 96 1 345 1 224 1 7 1 134 1 202 1 360 1 147 1 268 1 250 1 79 1 94 1 
129 1 
129 1 176 2 202 1 355 1 316 1 68 1 174 1 224 2 
129 1 196 1 238 1 176 5 283 1 355 1 187 2 316 2 258 2 284 1 224 5 358 2 334 1 200 1 202 2 68 1 55 1 169 1 341 1 
295 1 263 1 
345 2 222 1 7 2 263 2 360 2 350 1 268 1 250 1 94 1 
330 1 357 1 131 1 
314 1 5 1 105 1 30 1 7 1 223 1 336 1 285 1 263 1 160 1 360 1 243 1 91 1 247 1 322 1 269 1 
360 3 345 3 268 1 294 1 250 3 7 3 94 3 263 1 
228 1 360 1 345 1 147 1 250 1 7 1 94 1 
228 1 360 1 350 1 345 1 268 1 222 1 250 1 7 1 94 1 
82 1 328 1 228 1 254 1 4 1 5 1 105 1 299 1 30 1 7 4 336 1 157 1 285 1 231 1 263 1 133 1 160 1 33 1 360 4 91 1 268 2 39 1 69 1 269 1 194 1 94 3 314 1 176 1 197 1 345 3 222 1 140 2 224 1 243 1 322 1 146 1 247 1 124 1 250 3 294 1 54 1 327 1 79 1 56 1 
360 2 52 1 345 2 250 1 294 1 156 1 7 2 94 1 263 1 
129 1 228 1 82 1 328 1 176 1 254 1 345 3 222 1 224 1 7 3 231 1 360 3 146 1 268 1 294 2 250 3 378 1 94 3 56 1 
330 1 345 2 222 1 7 2 131 1 360 2 268 1 294 1 250 2 94 2 
314 1 5 1 105 1 30 1 7 1 336 1 285 1 263 1 160 1 360 1 243 1 91 1 247 1 322 1 269 1 
5 1 105 1 154 1 30 1 7 1 336 1 285 1 263 1 160 1 360 1 91 1 247 1 322 1 269 1 24 1 
330 2 299 1 357 2 157 2 131 2 8 1 108 1 63 1 133 4 33 1 233 2 12 1 38 1 39 1 69 1 270 1 194 1 140 2 201 1 225 1 351 1 324 1 54 1 127 1 
228 1 328 1 189 1 360 1 345 1 250 1 7 1 94 1 
254 1 314 1 345 1 5 1 105 1 30 1 7 2 336 1 131 1 285 1 160 1 243 1 360 2 91 1 322 1 247 1 269 1 294 1 250 1 94 1 
254 1 345 5 222 1 156 1 7 5 301 1 263 1 360 5 52 1 268 1 294 2 250 4 116 1 94 4 
189 1 228 1 360 2 345 2 147 1 250 2 7 2 94 2 
342 1 300 1 
342 1 300 1 
73 1 45 1 
73 1 45 1 
73 1 45 1 
342 1 300 1 320 1 
342 1 300 1 320 1 
1 1 342 1 300 1 
73 1 45 1 342 2 300 2 209 1 159 1 
342 1 300 1 320 1 
21 1 342 1 300 1 
21 1 342 1 300 1 
21 1 342 1 300 1 
129 1 176 2 141 1 260 1 224 2 335 1 242 1 216 2 300 2 49 1 367 1 262 2 36 2 235 1 271 3 93 2 342 2 209 1 237 2 
1 1 85 1 257 1 7 2 300 1 216 1 262 1 263 1 34 1 360 2 35 1 271 1 342 1 93 1 363 1 94 2 237 1 176 1 177 1 345 2 224 1 49 1 250 2 377 1 
245 1 281 1 261 1 
245 1 120 1 261 1 
78 1 281 2 110 1 120 1 261 3 291 1 
78 1 281 1 120 1 309 1 261 2 291 1 
78 2 281 1 120 1 261 2 291 1 
129 2 57 1 354 1 283 1 355 1 85 1 106 2 187 1 258 1 358 1 9 3 286 1 68 1 270 1 363 1 220 1 177 1 238 2 176 5 315 1 316 1 224 5 142 1 144 2 201 1 200 3 321 1 50 2 202 4 244 1 324 1 127 1 
252 5 129 5 57 2 354 3 283 1 355 1 172 1 106 6 187 2 258 2 358 2 9 9 135 1 219 1 68 1 270 3 289 1 363 4 220 1 313 5 238 6 176 9 316 6 224 9 348 1 201 3 200 8 321 2 168 1 50 6 202 7 244 3 55 1 324 3 127 3 
129 3 57 1 354 1 355 1 187 1 106 2 258 1 358 1 9 4 286 1 270 1 363 1 176 3 238 2 315 1 224 3 144 1 201 1 200 3 321 1 50 2 202 2 244 2 55 1 324 1 127 1 
129 4 57 1 354 2 355 1 172 1 106 4 187 1 258 1 358 1 9 7 286 1 135 1 270 2 363 2 176 4 238 4 315 1 224 4 144 2 201 2 200 5 321 1 50 4 168 1 202 3 244 3 55 1 324 2 127 2 
191 1 269 1 295 1 
185 1 269 1 
167 1 
105 1 269 1 
163 1 5 1 105 1 191 2 269 3 117 1 
5 1 105 1 269 1 
269 1 206 1 
60 1 333 1 214 2 157 4 368 1 201 1 225 3 133 9 217 1 233 5 182 1 323 1 351 2 324 1 41 1 193 1 115 1 
60 1 333 1 214 2 157 4 368 1 201 1 225 3 133 9 217 1 233 5 182 1 323 1 351 2 324 1 41 1 193 1 115 1 
364 1 60 1 333 1 214 2 157 4 368 1 201 1 225 3 133 9 217 1 233 5 182 1 323 1 351 2 324 1 41 1 193 1 115 1 
354 3 60 7 211 1 333 2 214 1 157 17 132 1 217 1 133 34 33 1 11 1 233 17 39 1 41 1 270 3 193 1 194 1 115 3 118 4 272 1 140 2 368 1 77 1 201 5 225 13 293 1 182 3 51 1 349 3 323 2 351 6 324 5 54 1 127 3 128 1 
60 1 211 1 333 1 214 2 157 5 232 1 133 11 217 1 33 2 233 6 39 2 41 1 194 2 193 1 115 1 140 4 241 1 201 1 225 4 182 1 323 1 351 3 324 1 54 2 
298 1 86 2 30 1 336 1 261 2 302 1 89 1 91 1 164 1 110 1 288 1 14 2 178 1 138 1 120 1 240 1 275 1 277 1 245 1 100 1 281 1 247 1 322 1 375 1 102 1 149 1 325 1 184 1 352 1 380 1 
298 1 86 3 30 1 336 1 261 2 302 1 89 1 91 1 162 1 164 1 110 1 288 1 14 3 178 1 138 1 120 1 275 1 245 1 100 1 281 1 247 1 322 1 203 1 102 1 149 1 325 1 184 1 352 2 380 1 103 1 
298 1 86 2 30 1 336 1 261 2 91 1 164 1 110 1 288 1 14 2 178 1 138 1 120 1 275 1 245 1 100 1 247 1 322 1 281 1 203 1 102 1 325 1 352 2 380 1 103 1 
171 1 3 1 104 1 86 1 105 1 30 1 336 1 302 1 160 1 91 1 162 1 164 2 190 1 269 1 42 1 14 1 97 1 275 2 247 1 322 1 102 2 325 2 184 1 
86 1 30 1 336 1 261 2 302 1 89 1 91 1 164 1 110 1 288 1 14 1 138 1 120 1 240 1 275 1 245 1 281 1 247 1 322 1 203 1 375 1 102 1 149 1 325 1 184 1 380 1 
72 1 
328 1 228 1 0 1 283 1 186 1 105 1 187 1 107 2 336 2 7 1 231 1 9 2 160 2 190 1 111 1 287 4 68 3 13 1 71 1 238 2 345 1 121 2 200 2 292 2 244 2 123 1 247 2 205 1 20 1 249 2 207 2 129 2 81 1 82 1 253 2 171 1 355 1 210 1 27 1 258 1 30 1 358 1 303 1 360 1 91 2 269 1 176 5 316 6 180 1 224 5 48 2 321 1 322 1 52 1 56 1 
228 1 328 1 81 1 82 1 176 3 27 1 345 1 186 1 316 2 224 3 7 1 231 1 360 1 123 1 52 1 287 2 111 1 68 1 174 1 249 1 13 1 56 1 
129 1 228 1 328 1 81 1 82 1 176 3 355 1 27 1 345 1 186 1 316 1 121 1 224 3 7 1 231 1 360 1 123 1 52 1 287 3 111 1 68 1 174 1 13 1 56 1 
82 1 81 1 328 1 228 1 129 1 27 1 355 1 186 1 7 1 231 1 360 1 111 1 287 3 68 1 174 1 13 1 176 3 345 1 316 2 121 1 224 3 48 1 123 1 52 1 249 1 56 1 
228 1 328 1 283 1 186 1 187 1 107 2 7 1 231 1 287 6 111 1 68 3 13 1 238 1 345 1 75 1 198 1 121 4 347 1 200 1 292 2 244 2 123 1 205 1 249 4 207 2 82 1 81 1 129 5 253 2 27 1 355 5 258 1 358 1 360 1 305 1 174 1 176 5 316 7 47 1 180 1 224 5 48 4 52 1 56 1 
129 2 81 1 82 1 328 1 228 1 253 2 283 1 355 1 27 1 186 1 187 1 258 1 107 2 358 1 7 1 231 1 9 2 360 1 111 1 287 4 68 2 13 1 238 1 176 4 345 1 316 4 121 2 180 1 224 4 48 2 200 1 292 2 244 2 123 1 52 1 205 1 20 1 249 2 207 2 56 1 
129 1 82 1 81 1 328 1 228 1 253 2 283 1 355 1 27 1 186 1 187 1 258 1 107 2 7 1 358 1 231 1 360 1 111 1 287 4 68 2 13 1 238 1 176 4 345 1 75 1 316 4 121 2 47 1 347 1 180 1 224 4 48 2 200 1 292 2 244 2 123 1 52 1 205 1 249 2 207 2 56 1 
129 1 82 1 81 1 328 1 228 1 253 2 283 1 355 1 27 1 186 1 187 1 258 1 107 2 7 1 358 1 231 1 360 1 111 1 287 4 68 2 13 1 238 1 176 4 345 1 75 1 316 4 121 2 47 1 347 1 180 1 224 4 48 2 200 1 292 2 244 2 123 1 52 1 205 1 249 2 207 2 56 1 
129 1 82 1 81 1 328 1 228 1 283 1 355 1 27 1 186 1 187 1 258 1 107 2 7 1 358 1 231 1 9 2 360 1 90 1 111 1 287 4 112 2 68 2 70 1 13 1 236 2 238 1 176 4 345 1 75 1 316 4 121 2 180 1 319 1 224 4 48 2 200 1 123 1 52 1 249 2 207 2 56 1 
129 1 82 1 81 1 328 1 228 1 253 2 283 1 355 1 27 1 186 1 187 1 258 1 107 2 358 1 7 1 231 1 360 1 305 1 111 1 287 5 68 2 13 1 238 1 176 4 345 1 75 1 316 5 121 3 47 1 347 1 180 1 224 4 48 3 200 1 292 2 244 2 123 1 52 1 205 1 249 3 207 2 56 1 
129 1 82 1 81 1 328 1 228 1 253 2 283 1 355 1 27 1 186 1 187 1 258 1 107 2 358 1 7 1 231 1 360 1 305 1 111 1 287 5 68 2 13 1 238 1 176 4 345 1 75 1 316 5 121 3 47 1 347 1 180 1 224 4 48 3 200 1 292 2 244 2 123 1 52 1 205 1 249 3 207 2 56 1 
129 1 81 1 82 1 328 1 228 1 283 1 355 1 27 1 186 1 187 1 258 1 107 2 358 1 7 1 231 1 9 2 360 1 111 1 287 4 112 2 68 2 13 1 236 2 238 1 176 4 345 1 316 4 121 2 180 1 224 4 319 1 48 2 200 1 123 1 52 1 20 1 249 2 207 2 56 1 
330 1 299 1 357 1 214 1 131 1 157 4 263 3 217 1 133 8 33 1 233 4 12 1 39 1 69 1 41 1 193 1 194 1 115 1 140 2 201 1 225 2 182 1 295 1 351 2 54 1 324 1 
354 2 60 1 330 4 4 1 299 1 357 11 157 6 131 11 158 1 263 1 133 14 33 2 233 8 39 2 69 2 270 1 166 1 194 2 195 1 114 1 118 3 140 4 201 1 225 2 293 1 246 1 374 1 349 3 351 1 54 2 324 2 127 2 128 1 
254 1 330 1 5 1 4 1 105 1 299 1 30 1 336 1 7 2 88 1 157 1 285 1 263 1 160 1 133 2 33 1 360 2 233 1 91 1 265 1 39 1 269 1 69 1 194 1 114 1 195 1 94 1 314 1 345 1 140 2 223 1 243 1 322 1 247 1 250 1 294 1 54 1 353 1 
2 1 330 7 60 4 4 1 5 2 105 2 62 1 336 3 7 3 157 11 285 2 160 1 233 11 234 2 69 3 193 1 194 3 195 1 114 1 115 1 345 1 201 3 243 2 247 3 203 1 124 2 294 1 250 1 351 4 127 2 254 1 354 2 299 3 357 7 30 2 214 1 131 7 263 3 217 1 133 22 33 3 360 3 91 3 39 3 40 2 269 2 41 1 270 2 94 1 314 2 139 2 140 6 225 8 373 2 182 1 322 2 54 3 324 3 151 1 
171 1 4 1 105 2 299 2 130 2 30 2 7 1 336 8 157 1 160 2 133 2 33 2 360 1 233 1 12 1 91 7 267 1 190 1 308 1 39 2 269 3 69 2 137 1 194 2 195 1 94 1 311 1 344 1 365 1 345 1 140 4 277 1 17 1 322 2 247 8 203 1 250 1 294 1 54 2 
354 1 330 1 357 1 299 1 7 1 131 1 157 2 133 3 33 1 360 1 233 1 268 1 39 1 69 1 270 1 194 1 114 1 94 1 345 1 222 1 140 2 201 1 225 1 280 1 250 1 351 1 54 1 324 1 127 1 
60 1 330 1 140 2 357 1 299 1 131 1 225 1 133 2 33 1 233 2 12 1 38 1 39 1 69 1 54 1 324 1 194 1 127 1 
330 1 140 2 357 1 299 1 131 1 157 2 108 1 201 1 225 1 133 2 33 1 12 1 39 1 69 1 351 1 54 1 270 1 194 1 
354 1 330 2 60 1 299 1 357 2 131 2 157 2 133 4 33 1 233 2 12 1 39 1 69 1 270 1 194 1 140 2 201 1 225 2 351 1 324 1 54 1 127 1 
60 1 330 1 140 2 357 1 299 1 131 1 225 1 133 2 17 1 33 1 233 2 38 1 39 1 69 1 54 1 324 1 194 1 127 1 
330 1 140 2 357 1 299 1 131 1 157 2 108 1 201 1 225 1 133 2 17 1 33 1 39 1 69 1 351 1 54 1 270 1 194 1 
354 1 330 2 60 1 299 1 357 2 131 2 157 2 133 4 33 1 233 2 39 1 69 1 270 1 194 1 140 2 201 1 17 1 225 2 351 1 324 1 54 1 127 1 
354 1 330 2 60 1 299 1 357 2 131 2 157 2 133 4 33 1 233 2 39 1 69 1 270 1 194 1 140 2 201 1 225 2 351 1 324 1 54 1 127 1 
5 1 4 1 105 1 299 1 30 1 336 1 7 1 157 1 285 1 263 1 133 2 160 1 33 1 233 1 360 1 91 1 39 1 269 1 69 1 194 1 195 1 314 1 140 2 243 1 322 1 247 1 124 1 54 1 
5 1 4 1 105 1 154 1 299 1 30 1 336 1 7 1 157 1 285 1 263 1 133 2 160 1 33 1 233 1 360 1 91 1 39 1 269 1 69 1 340 1 194 1 195 1 140 2 322 1 247 1 54 1 24 1 
354 1 330 2 60 1 299 1 357 2 131 2 157 2 133 4 33 1 233 2 39 1 69 1 270 1 194 1 114 1 140 2 201 1 225 2 351 1 324 1 54 1 127 1 
354 1 60 1 330 2 5 1 105 1 357 2 299 1 30 1 336 1 7 1 157 2 131 2 285 1 133 4 33 1 233 2 360 1 234 1 91 1 39 1 269 1 69 1 270 1 194 1 314 1 140 2 277 1 201 1 225 2 243 1 322 1 247 1 124 1 351 1 324 1 54 1 127 1 
354 1 60 1 330 1 299 1 357 1 7 1 157 1 131 1 133 3 33 1 360 1 233 2 268 1 39 1 69 1 270 1 194 1 114 1 94 1 345 1 222 1 15 1 140 2 201 1 225 1 250 1 54 1 324 1 127 1 
58 1 354 3 60 3 256 1 157 10 232 1 133 19 33 2 233 9 39 2 339 2 270 3 194 2 118 2 119 1 366 1 179 1 140 4 201 3 225 6 293 1 349 1 351 3 23 1 54 2 324 3 25 1 381 2 127 3 128 1 
329 1 58 2 354 3 60 2 211 2 157 12 215 1 232 1 133 26 33 3 233 14 39 3 339 4 92 1 270 2 194 3 118 2 119 2 366 1 46 1 179 1 140 6 143 1 201 2 225 4 99 1 349 2 351 2 54 3 324 3 381 1 25 1 127 3 128 2 
329 1 58 2 354 4 211 1 60 4 256 1 230 1 215 1 157 19 217 1 232 1 133 36 33 3 233 17 39 3 339 4 92 1 270 4 193 1 194 3 115 1 118 4 119 1 366 1 46 1 179 1 140 6 143 1 201 4 225 8 293 1 99 1 182 1 349 3 351 4 54 3 324 4 381 1 25 1 127 4 128 3 
329 1 58 2 354 4 211 2 60 3 256 1 230 1 214 1 215 1 157 19 217 1 232 1 133 40 33 4 233 21 39 4 339 4 41 1 92 1 270 3 193 1 194 4 115 1 118 4 119 1 366 1 46 1 179 1 140 8 143 1 201 4 225 7 293 1 99 1 182 1 349 3 351 4 54 4 324 5 381 1 25 1 127 4 128 3 
329 1 58 1 354 7 211 1 60 7 214 1 215 1 157 26 158 2 217 1 232 1 133 54 33 2 233 28 39 2 339 4 41 1 92 1 270 7 193 1 194 2 115 1 118 4 119 1 366 1 46 1 179 1 140 4 143 1 201 8 225 14 293 2 99 1 182 1 349 4 351 7 54 2 324 8 381 1 25 1 127 7 128 2 
141 1 342 1 300 1 93 1 216 1 367 1 262 1 278 1 209 1 237 1 
1 1 377 1 
28 1 229 1 342 1 300 1 93 1 216 1 262 1 221 1 237 1 
129 1 176 1 141 1 260 1 224 1 335 1 49 1 216 1 300 1 367 1 262 1 36 1 235 1 271 2 93 1 342 1 209 1 237 1 
129 1 176 1 141 1 260 1 224 1 335 1 49 1 216 1 300 1 367 1 262 1 36 1 235 1 271 2 93 1 342 1 209 1 237 1 
129 1 176 1 141 1 260 1 224 1 335 1 49 1 216 1 300 1 367 1 262 1 36 1 235 1 271 2 93 1 342 1 209 1 237 1 
320 1 159 1 188 1 
320 1 159 1 188 1 
136 1 21 1 
136 1 21 1 159 1 
35 1 257 1 
1 1 61 1 85 1 257 1 7 2 335 1 300 1 216 1 262 1 263 1 34 1 360 2 35 1 36 1 271 1 342 1 93 1 363 1 94 2 237 1 176 1 177 1 345 2 224 1 202 1 377 1 250 2 
320 1 188 1 
136 1 21 1 159 1 
4 1 105 1 212 1 87 1 299 1 130 2 30 1 336 2 7 2 157 1 133 2 33 1 360 2 233 1 91 2 37 1 39 1 269 1 69 1 194 1 114 1 195 1 344 1 95 1 365 1 345 2 273 1 140 2 322 1 247 2 54 1 
138 1 120 1 30 1 275 1 336 2 155 1 261 2 277 1 91 2 245 1 337 1 281 1 322 1 247 2 110 1 67 1 203 1 288 1 149 1 
138 1 120 1 275 1 30 1 336 1 261 2 91 1 245 1 281 1 247 1 322 1 110 1 67 1 203 1 288 1 149 1 379 1 
171 1 105 1 97 1 30 1 275 1 76 1 336 1 155 1 160 1 91 1 322 1 247 1 190 1 269 1 
138 1 120 1 30 1 275 1 336 1 155 1 261 2 91 1 245 1 337 1 281 1 247 1 322 1 110 1 67 1 203 1 288 1 149 1 
31 1 
129 1 196 1 238 1 355 1 295 1 284 1 200 1 
129 2 176 1 253 1 238 1 283 1 355 1 316 1 187 1 258 1 224 1 358 1 9 1 200 1 292 1 244 1 68 1 205 1 
282 1 185 3 283 4 5 3 105 3 187 4 106 6 284 1 6 1 336 3 9 12 64 2 160 1 191 2 68 3 290 2 117 1 196 1 238 8 346 2 200 9 201 2 244 6 247 3 206 2 170 1 127 2 297 2 129 8 354 2 355 2 210 1 258 4 30 4 358 4 264 2 91 3 307 1 269 10 270 2 175 2 176 5 316 5 274 1 276 2 224 5 277 1 321 2 50 6 373 2 322 3 227 2 324 2 56 2 
129 5 329 1 354 2 283 2 210 1 355 2 106 5 187 2 258 2 358 2 215 1 9 6 68 1 290 1 92 1 270 2 118 1 176 1 175 2 238 5 316 1 224 1 143 1 200 8 201 2 321 1 50 5 99 1 244 3 349 1 53 1 183 1 324 2 127 2 128 1 
238 1 176 1 175 1 283 1 187 1 258 1 347 1 224 1 358 1 200 1 77 1 182 1 115 1 
196 1 129 1 238 1 283 1 355 1 187 1 258 1 284 1 358 1 200 1 
129 5 175 2 238 5 354 2 106 5 9 10 201 2 200 5 50 5 373 1 244 5 290 1 324 2 270 2 127 2 
129 1 176 1 355 1 316 1 68 1 224 1 
282 2 171 1 59 1 283 1 210 2 105 1 187 2 258 2 30 1 358 2 336 4 303 1 160 2 91 4 307 1 190 1 68 2 269 1 71 1 238 2 176 3 316 4 224 3 200 2 321 2 322 1 247 4 376 1 55 1 
4 1 5 1 105 1 299 1 30 1 336 1 7 3 157 1 285 1 263 1 133 1 160 1 33 1 360 3 91 1 268 2 39 1 269 1 69 1 194 1 94 2 314 1 345 2 140 2 243 1 247 1 322 1 124 1 250 2 54 1 327 1 79 1 
129 4 238 2 283 1 355 2 210 1 106 2 187 1 258 1 214 1 358 1 9 4 200 1 321 1 50 2 244 2 
218 1 262 1 237 1 
218 1 262 1 237 1 
35 1 66 1 367 1 262 1 237 1 
218 1 262 1 237 1 
192 1 262 1 237 1 
192 1 262 1 237 1 
192 1 262 1 237 1 
262 1 237 1 
342 1 300 1 
60 1 211 1 140 4 225 2 217 1 33 2 182 1 39 2 351 1 54 2 194 2 193 1 115 1 
214 1 157 4 201 1 217 1 225 2 133 8 233 4 182 1 295 1 351 2 41 1 324 1 193 1 115 1 
354 1 60 1 331 1 140 2 157 2 201 1 225 2 133 4 33 1 233 2 39 1 351 1 270 1 54 1 324 1 194 1 127 1 
354 1 60 1 157 4 201 1 133 7 225 2 233 3 293 1 349 1 351 1 270 1 324 1 118 2 127 1 128 1 
83 1 354 2 60 4 211 2 214 1 157 11 158 1 217 1 133 21 33 2 233 10 39 2 41 1 270 2 193 1 194 2 115 2 118 2 140 4 201 3 225 9 293 1 182 2 349 2 374 1 351 5 324 3 54 2 127 2 
157 1 118 1 133 1 
233 1 349 1 133 1 
354 1 60 1 331 1 140 2 157 3 201 1 133 6 225 3 33 1 233 3 373 1 39 1 351 2 54 1 324 1 270 1 194 1 127 1 
329 1 354 2 60 1 157 6 215 1 133 12 232 1 33 1 233 6 39 1 92 1 270 2 194 1 118 1 140 2 143 1 201 2 225 2 99 1 349 1 351 1 54 1 324 2 127 2 128 1 
60 1 157 3 201 1 133 6 225 2 233 3 182 1 351 1 41 1 324 1 115 1 
83 1 60 1 211 1 140 2 157 1 225 2 133 1 217 1 33 1 182 1 39 1 351 1 54 1 193 1 194 1 115 1 
60 2 140 2 157 5 77 1 201 2 232 1 225 4 133 10 33 1 233 5 182 1 39 1 351 2 54 1 41 1 324 2 194 1 115 1 
60 1 140 2 232 1 133 2 225 1 33 1 233 2 39 1 54 1 324 1 194 1 127 1 
354 1 60 1 140 2 157 2 201 1 225 2 232 1 133 4 33 1 233 2 39 1 351 1 270 1 54 1 324 1 194 1 127 1 
140 2 157 1 232 1 225 1 133 2 33 1 233 1 182 1 39 1 351 1 54 1 194 1 115 1 
83 1 354 3 211 2 60 5 331 1 256 1 157 14 132 1 217 1 232 1 133 26 11 1 33 5 233 12 39 5 41 1 270 3 193 1 194 5 115 3 118 4 140 10 201 4 225 11 293 1 182 3 51 1 349 3 351 6 54 5 324 4 127 3 128 1 
214 1 157 5 133 10 232 1 217 1 33 1 233 5 39 1 92 1 41 1 194 1 193 1 118 1 115 1 140 2 201 1 225 2 182 1 349 1 351 2 324 1 54 1 128 1 
354 1 60 1 331 1 214 1 157 6 217 1 133 13 232 1 33 2 233 7 39 2 41 1 92 1 193 1 194 2 115 1 118 2 140 4 201 1 225 3 293 1 182 1 349 1 351 2 54 2 324 2 127 1 128 1 
329 1 354 2 60 1 211 1 331 1 214 1 157 11 215 1 217 1 133 21 232 1 33 3 233 10 39 3 41 1 92 1 270 2 193 1 194 3 115 1 118 1 140 6 143 1 201 3 225 4 99 1 182 1 349 1 351 3 54 3 324 3 127 2 128 1 
329 1 354 2 211 1 60 2 331 1 214 1 157 8 215 1 217 1 133 19 232 1 33 3 233 11 39 3 41 1 92 1 270 1 193 1 194 3 115 1 118 1 140 6 143 1 201 2 225 5 99 1 182 1 349 1 351 3 54 3 324 3 127 2 128 1 
214 1 157 5 133 10 232 1 217 1 33 1 233 5 39 1 92 1 41 1 194 1 193 1 118 1 115 1 140 2 201 1 225 2 182 1 349 1 351 2 324 1 54 1 128 1 
329 1 354 2 60 1 157 6 215 1 133 12 232 1 33 1 233 6 39 1 92 1 270 2 194 1 118 1 140 2 143 1 201 2 225 2 99 1 349 1 351 1 54 1 324 2 127 2 128 1 
329 1 354 2 60 2 211 2 331 1 214 1 157 9 215 1 217 1 133 20 232 1 33 4 233 11 39 4 41 1 92 1 270 1 193 1 194 4 115 1 118 1 140 8 143 1 201 2 225 5 99 1 182 1 349 1 351 3 54 4 324 3 127 2 128 1 
329 1 354 3 60 3 211 2 256 1 157 7 215 1 133 16 232 1 33 4 233 9 39 4 92 1 270 2 194 4 118 1 140 8 143 1 201 2 225 6 99 1 349 1 351 3 54 4 324 3 127 3 128 1 
60 2 157 2 217 1 225 4 133 4 233 2 182 2 351 2 193 2 115 2 
329 1 354 2 60 1 211 2 256 1 214 1 157 9 215 1 217 1 133 20 232 1 33 4 233 11 39 4 41 1 92 1 270 1 193 1 194 4 115 1 118 1 140 8 143 1 201 2 225 4 99 1 182 1 349 1 351 3 54 4 324 3 127 2 128 1 
360 1 345 1 52 1 113 1 7 1 156 1 263 1 
345 1 156 1 7 1 263 1 173 1 279 1 360 1 52 1 148 1 113 1 343 1 26 1 
171 1 91 1 322 1 247 1 190 1 105 1 269 1 295 1 30 1 336 1 160 1 
345 1 5 1 105 1 30 1 7 2 336 1 285 1 263 1 160 1 360 2 243 1 91 1 247 1 322 1 269 1 294 1 250 1 94 1 
228 1 328 1 282 1 345 2 5 2 105 2 30 1 7 2 336 1 231 1 285 1 263 1 264 1 360 2 243 1 91 1 247 1 322 1 269 3 294 1 250 2 206 1 94 1 
228 1 328 1 282 1 345 2 5 2 105 2 154 1 30 1 7 2 336 2 231 1 285 1 263 1 264 1 360 2 91 2 247 2 322 1 204 1 269 3 294 1 250 2 206 1 94 1 
129 1 176 2 282 1 185 1 355 1 5 1 105 1 316 1 30 1 359 1 224 2 336 3 160 1 264 1 91 3 247 3 322 1 204 1 191 1 269 4 206 1 326 1 56 1 
129 1 176 2 282 1 185 1 355 1 5 1 346 1 105 1 316 1 30 1 224 2 336 3 160 1 264 1 91 3 247 3 322 1 204 1 191 1 269 4 206 1 56 1 
91 1 322 1 247 1 267 1 30 1 336 1 
5 1 105 2 356 1 130 1 30 3 336 7 318 1 277 1 226 1 160 2 91 6 267 1 247 7 322 2 203 1 308 1 269 3 137 1 117 1 311 1 344 1 
330 1 5 1 105 1 357 1 299 2 30 1 214 1 7 2 336 1 131 1 157 4 285 1 263 3 133 8 217 1 33 2 233 4 360 2 91 1 234 1 37 1 39 2 269 1 69 2 41 1 193 1 194 2 114 1 115 1 94 1 314 1 345 1 139 1 140 4 277 1 201 1 225 2 243 1 182 1 322 1 247 1 124 1 250 1 294 1 351 2 324 1 54 2 
129 1 185 1 283 2 355 1 187 2 258 2 284 1 358 2 336 1 160 1 64 1 91 1 307 1 191 1 68 1 269 2 196 1 238 1 176 3 346 1 316 2 224 3 276 1 200 1 202 1 247 1 227 1 56 1 
5 1 105 1 30 2 336 2 277 1 91 2 267 1 247 2 322 1 191 1 269 2 170 1 117 1 
171 1 105 1 30 1 336 4 277 1 160 1 91 4 145 1 247 4 322 1 190 1 204 1 269 1 
282 1 44 1 2 1 5 1 105 1 30 2 336 2 318 1 226 1 91 2 247 2 306 1 322 1 269 1 
91 1 245 1 322 1 247 1 120 1 288 1 30 1 336 1 261 1 160 1 
105 1 87 1 30 1 336 2 277 1 91 2 247 2 322 1 203 1 269 1 344 1 
282 1 171 1 105 2 30 2 336 5 277 1 160 1 91 4 145 1 247 5 322 2 190 1 308 1 269 3 311 1 344 1 
282 1 171 1 105 2 98 1 30 2 336 5 277 1 160 1 91 4 145 1 247 5 322 2 190 1 269 3 311 1 344 1 
345 1 5 1 105 1 154 1 30 1 7 2 336 1 285 1 263 1 160 1 360 2 91 1 247 1 322 1 269 1 294 1 250 1 94 1 
282 1 5 1 105 1 356 1 30 2 336 1 318 1 226 1 91 1 247 1 322 1 269 1 117 1 
360 1 74 1 304 1 345 1 212 1 273 1 338 1 7 1 95 1 
74 1 150 1 80 1 
43 1 304 1 74 1 338 1 263 1 
129 1 228 1 328 1 82 1 176 2 43 2 74 1 355 1 224 2 231 1 263 1 202 1 304 2 266 1 146 1 338 2 150 1 56 1 80 1 
178 1 100 1 298 1 295 1 
14 1 178 1 100 1 298 1 86 1 184 1 302 1 
164 1 86 1 325 1 
14 3 178 1 86 3 298 1 240 1 317 2 302 1 10 1 19 1 100 1 248 1 184 1 
14 2 178 1 100 1 109 1 298 1 86 2 184 1 352 1 302 1 
14 1 178 1 86 1 240 1 261 1 302 1 245 1 281 1 362 1 310 1 184 1 
14 1 178 1 100 1 86 1 240 1 184 1 302 1 
14 1 100 2 298 1 86 1 240 1 184 1 302 1 
369 1 14 2 178 1 100 1 86 2 240 1 184 2 302 2 296 1 18 1 
14 3 84 1 178 2 29 1 298 1 86 3 332 1 240 1 302 1 100 1 362 1 184 1 352 2 
239 1 14 2 178 1 298 1 120 1 86 2 240 1 261 2 302 1 245 1 100 1 281 1 110 1 184 1 352 1 
14 4 178 2 29 1 298 1 86 4 240 1 181 1 302 2 100 1 109 1 362 1 184 2 352 2 
14 1 178 1 100 1 298 1 86 1 240 1 184 1 302 1 
14 4 178 3 29 1 298 2 86 4 317 1 302 1 19 1 100 2 361 1 248 1 362 1 184 1 352 2 
14 2 178 1 86 2 298 1 240 1 199 1 302 1 370 1 100 1 22 1 184 1 352 1 
19 1 14 3 178 1 100 1 298 1 86 3 248 2 240 1 317 2 125 1 184 1 302 1 
161 2 255 1 178 2 213 1 
14 1 86 1 240 1 184 1 259 1 302 1 
84 1 14 2 178 1 100 1 298 1 86 2 240 1 184 1 352 1 302 1 
126 1 
14 1 178 1 100 1 298 1 86 1 240 1 184 1 302 1 
14 3 84 1 178 1 86 3 298 1 240 1 317 1 302 1 100 1 184 1 352 1 
178 1 29 1 361 1 362 1 
178 1 100 1 

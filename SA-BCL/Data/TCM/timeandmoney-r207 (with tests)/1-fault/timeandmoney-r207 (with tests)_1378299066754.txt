#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
273 1 116 1 274 1 277 4 94 1 221 2 34 1 98 9 315 2 258 3 260 1 341 2 317 2 73 1 11 2 224 1 318 9 319 1 80 1 82 1 156 1 183 1 226 1 307 2 291 2 357 1 230 5 52 6 
273 1 116 1 274 1 277 4 94 1 221 2 34 1 98 9 315 2 258 3 260 1 341 2 73 1 317 2 11 2 224 1 318 9 319 1 80 1 82 1 156 1 183 1 226 1 307 2 291 2 357 1 230 5 52 6 
273 1 116 1 274 1 277 5 94 1 221 2 34 1 98 10 315 2 258 4 260 1 341 2 73 1 317 2 11 2 224 1 318 10 319 1 80 1 82 1 156 1 183 1 226 1 307 2 291 2 357 1 230 6 52 7 
273 1 116 1 277 3 94 1 221 2 34 1 98 7 315 2 258 2 260 1 341 2 73 1 317 1 11 2 224 1 318 7 319 1 80 1 82 1 156 1 183 1 226 1 307 2 291 2 357 1 230 4 52 4 
319 1 274 1 80 1 277 2 82 1 221 1 226 1 34 1 315 1 98 4 258 1 341 1 291 1 317 2 11 1 230 3 318 4 52 3 
104 1 319 1 273 1 180 1 82 1 32 1 183 1 221 1 34 1 98 2 315 1 307 1 341 1 230 1 11 1 318 2 
319 1 277 1 82 1 221 2 34 1 98 3 258 1 307 1 73 1 11 2 230 2 318 3 52 1 
274 1 277 4 221 2 34 1 98 9 315 1 258 3 341 1 73 1 317 2 11 2 224 1 318 9 319 1 80 1 82 1 159 1 226 1 307 1 291 1 206 1 357 1 230 5 52 7 
274 1 277 4 221 2 34 1 98 9 315 1 258 3 341 1 73 1 317 2 11 2 224 1 318 9 319 1 80 1 82 1 159 1 226 1 307 1 291 1 206 1 357 1 230 5 52 7 
222 1 19 1 300 1 
222 1 161 1 361 2 
24 2 61 1 87 1 348 2 67 2 245 2 309 2 264 2 
359 1 233 1 162 1 163 1 216 1 166 1 279 1 5 2 339 1 61 1 340 1 63 1 121 2 192 1 123 1 67 2 72 1 13 1 264 3 77 1 128 2 348 3 179 2 245 2 371 1 44 1 24 2 84 2 305 1 87 1 186 1 187 1 309 2 270 1 90 1 294 1 208 1 
24 1 30 1 87 1 348 1 133 1 67 1 245 1 309 1 109 1 264 1 
348 1 245 1 370 1 304 1 83 1 109 1 222 1 48 1 8 1 259 1 292 1 252 1 300 1 264 1 
348 1 245 1 370 1 83 1 109 1 24 1 222 1 48 1 8 1 67 1 259 2 309 1 252 2 300 1 264 1 
202 1 368 1 111 1 259 1 252 1 
222 1 368 1 111 1 259 2 356 1 252 2 300 1 255 1 
368 1 259 1 252 1 
30 1 348 1 245 1 109 1 24 1 111 1 87 1 133 1 259 1 67 1 309 1 252 1 75 1 264 1 
222 1 
143 1 222 1 368 1 111 1 259 2 252 2 300 1 255 1 
368 2 154 1 93 1 322 1 350 1 196 1 278 1 324 2 142 2 280 1 255 1 338 1 222 1 111 2 65 2 259 5 252 5 300 1 14 1 
233 1 77 1 348 2 163 1 216 1 179 1 245 1 279 1 5 1 201 1 24 1 305 1 63 1 192 1 121 1 309 1 72 1 375 1 283 1 264 2 
61 1 19 1 
348 2 244 1 245 2 24 1 61 2 67 1 309 1 37 1 264 2 
53 1 283 1 40 1 
77 1 233 1 348 1 163 1 216 1 179 1 279 1 5 1 364 1 61 1 305 1 63 1 121 1 192 1 72 1 264 1 
24 3 61 1 348 3 67 1 245 3 309 3 375 1 264 3 
24 1 30 1 348 1 245 1 309 1 109 1 264 1 
24 1 348 1 244 1 67 1 245 1 309 1 37 1 109 1 264 1 
359 1 233 1 213 1 162 1 216 1 163 1 166 1 279 1 5 1 339 1 61 1 340 1 63 1 192 1 8 1 121 1 123 1 67 2 259 1 72 1 36 1 13 1 264 4 77 1 128 1 244 1 348 4 179 1 245 3 370 1 83 1 109 1 24 3 201 1 84 2 305 1 87 1 48 1 186 1 309 3 375 1 90 1 252 1 208 1 
24 1 61 1 79 1 348 2 245 2 309 1 375 1 292 1 264 2 
244 1 348 3 245 3 370 1 83 1 109 1 201 1 24 3 222 1 8 1 48 1 67 1 259 1 309 3 375 2 36 1 252 1 379 1 264 3 
24 2 348 2 244 1 67 1 245 2 309 2 375 1 283 1 40 1 264 2 
77 1 233 1 348 1 163 1 216 1 179 1 279 1 5 1 61 1 305 1 121 1 192 1 63 1 72 1 264 1 
77 1 233 1 348 1 163 1 179 1 279 1 5 1 61 1 305 1 121 1 63 1 72 1 207 1 29 1 264 1 
359 1 53 2 162 1 31 1 217 1 166 2 339 1 340 1 100 1 283 2 13 1 40 2 128 4 321 1 369 1 129 1 84 2 353 1 49 1 270 2 229 1 355 1 90 1 209 1 
24 1 48 1 348 1 245 1 309 1 336 1 109 1 264 1 
42 1 79 1 348 5 244 1 245 5 24 4 201 1 144 1 61 1 67 1 309 4 375 2 292 1 264 5 
24 2 30 1 348 2 336 1 245 2 309 2 109 1 264 2 
212 1 248 1 
212 1 248 1 
360 1 150 1 
360 1 150 1 
360 1 150 1 
212 1 248 1 253 1 
212 1 85 1 248 1 
212 2 360 1 248 2 122 1 191 1 150 1 
212 1 248 1 253 1 
212 1 248 1 253 1 
314 1 212 1 248 1 
314 1 212 1 248 1 
314 1 212 1 248 1 
241 1 190 1 212 2 115 1 153 1 285 2 335 2 181 1 139 3 296 1 141 2 222 1 248 2 169 2 122 1 259 2 66 1 252 2 189 2 
212 1 214 1 335 1 139 1 167 1 141 1 219 1 33 1 61 1 169 1 259 1 66 1 262 1 264 2 175 1 348 2 245 2 288 1 24 2 85 1 248 1 309 2 252 1 189 1 
315 1 341 1 291 1 
315 1 341 1 32 1 
211 1 315 3 275 1 291 2 32 1 173 1 
211 1 315 2 291 1 81 1 32 1 173 1 
211 2 315 2 291 1 32 1 173 1 
361 3 234 1 93 2 31 1 217 1 254 2 142 1 255 1 33 1 222 2 65 1 259 5 193 2 100 1 343 1 262 1 300 1 175 1 368 1 321 1 196 1 350 3 324 1 157 1 21 1 45 1 26 1 161 1 111 4 249 1 330 2 252 5 
361 9 56 1 93 6 31 3 217 3 254 6 142 2 95 1 33 4 255 1 338 1 222 5 65 2 259 9 193 6 100 3 343 1 300 1 320 1 368 6 321 3 106 1 196 1 350 8 324 2 157 2 21 3 22 1 352 1 202 5 26 2 161 3 111 7 378 5 252 9 
234 1 361 4 31 1 93 2 217 1 254 2 142 1 33 1 338 1 222 3 65 1 259 3 193 2 100 1 300 1 321 1 350 3 324 1 157 1 21 1 26 1 161 2 111 2 249 1 330 1 252 3 
361 7 234 1 31 2 93 4 217 2 254 4 142 1 95 1 33 2 338 1 222 4 65 1 259 4 193 4 100 2 300 1 320 1 321 2 350 5 324 1 157 1 21 2 22 1 26 1 161 3 111 3 249 1 330 2 252 4 
63 1 19 1 6 1 
63 1 377 1 
134 1 
233 1 63 1 
103 1 233 1 305 1 311 1 63 3 6 2 
233 1 305 1 63 1 
63 1 114 1 
243 1 345 1 367 1 128 7 321 1 349 1 166 3 237 1 353 3 96 1 132 1 100 1 355 2 137 2 270 4 331 1 39 1 
243 1 345 1 367 1 128 7 321 1 349 1 166 3 237 1 353 3 96 1 132 1 100 1 355 2 137 2 270 4 331 1 39 1 
243 1 367 1 345 1 128 7 321 1 349 1 166 3 237 1 353 3 96 1 132 1 100 1 355 2 137 2 270 4 331 1 39 1 91 1 
162 1 166 3 339 1 237 1 147 1 96 1 340 1 9 1 124 1 365 1 344 1 240 1 13 1 39 1 243 2 346 1 128 6 349 1 84 2 353 2 270 3 137 1 355 1 331 1 
243 1 367 1 345 1 78 1 128 9 162 2 321 1 349 1 166 4 237 1 339 2 353 4 84 4 96 1 269 1 132 1 340 2 124 1 100 1 355 3 137 2 270 5 331 1 13 2 
334 1 0 1 275 1 279 1 32 1 5 1 221 1 34 1 98 2 315 2 121 1 341 1 238 1 342 1 72 1 11 1 318 2 319 1 176 1 179 1 107 1 82 1 131 1 185 1 307 1 291 1 136 1 308 1 230 1 52 1 
334 1 0 1 275 1 279 1 32 1 5 1 220 1 221 1 120 1 34 1 98 3 315 2 121 1 341 1 238 1 342 1 72 1 11 1 318 3 179 1 82 1 131 1 185 1 307 1 291 1 51 1 136 1 308 1 230 1 52 2 
334 1 275 1 279 1 32 1 5 1 220 1 34 1 98 2 315 2 121 1 238 1 341 1 342 1 72 1 318 2 179 1 82 1 131 1 185 1 307 1 291 1 51 1 308 1 230 1 52 2 
334 2 233 1 301 1 163 1 179 1 286 1 266 1 279 1 5 1 221 1 373 1 120 1 98 1 185 2 63 1 27 1 121 1 307 2 238 2 282 1 72 1 11 1 318 1 
334 1 0 1 275 1 279 1 32 1 5 1 221 1 98 1 315 2 121 1 341 1 238 1 342 1 72 1 11 1 318 1 319 1 176 1 179 1 131 1 185 1 307 1 291 1 51 1 136 1 308 1 
35 1 
163 2 117 1 165 1 5 2 337 1 255 3 222 2 223 1 65 1 121 2 63 1 8 1 259 5 70 1 72 1 126 2 300 1 263 1 264 1 301 1 127 1 348 1 179 2 350 2 303 1 304 1 83 1 271 2 89 2 233 1 361 2 235 2 93 2 279 1 142 1 282 1 101 1 105 2 368 6 245 1 196 1 370 1 324 1 157 1 109 1 110 1 161 2 203 2 290 1 327 2 48 1 205 4 292 1 252 5 333 1 
105 1 368 2 348 1 245 1 370 1 304 1 337 1 83 1 255 1 109 1 143 1 223 1 290 1 8 1 48 1 259 3 70 1 205 2 292 1 252 3 333 1 264 1 
337 1 255 1 143 1 222 1 223 1 8 1 259 3 70 1 264 1 300 1 368 1 348 1 245 1 370 1 304 1 83 1 109 1 290 1 48 1 205 3 271 1 292 1 252 3 333 1 
337 1 255 1 143 1 222 1 223 1 8 1 259 3 70 1 264 1 300 1 105 1 368 2 348 1 245 1 370 1 304 1 83 1 109 1 290 1 48 1 327 1 205 3 271 1 292 1 252 3 333 1 
55 1 337 1 255 3 222 5 223 1 8 1 65 1 259 5 68 1 70 1 126 2 264 1 300 5 76 1 348 1 350 1 303 1 304 1 83 1 271 4 89 2 231 1 235 2 93 1 142 1 143 1 101 1 105 4 368 7 245 1 196 1 370 1 324 1 109 1 46 1 161 2 290 1 203 2 327 4 48 1 205 6 292 1 252 5 333 1 
361 2 235 2 93 1 142 1 337 1 255 2 222 2 223 1 65 1 8 1 259 4 70 1 126 2 101 1 300 1 263 1 264 1 105 2 368 4 348 1 245 1 350 1 196 1 370 1 303 1 324 1 304 1 83 1 109 1 161 2 203 2 290 1 327 2 48 1 271 2 89 2 205 4 292 1 252 4 333 1 
55 1 235 2 93 1 142 1 337 1 255 2 222 1 223 1 8 1 65 1 259 4 68 1 70 1 126 2 101 1 300 1 264 1 76 1 105 2 368 4 348 1 245 1 350 1 196 1 370 1 303 1 324 1 304 1 83 1 109 1 161 2 203 2 290 1 327 2 48 1 271 2 89 2 205 4 292 1 252 4 333 1 
55 1 235 2 93 1 142 1 337 1 255 2 222 1 223 1 8 1 65 1 259 4 68 1 70 1 126 2 101 1 300 1 264 1 76 1 105 2 368 4 348 1 245 1 350 1 196 1 370 1 303 1 324 1 304 1 83 1 109 1 161 2 203 2 290 1 327 2 48 1 271 2 89 2 205 4 292 1 252 4 333 1 
55 1 361 2 93 1 218 1 142 1 59 1 337 1 255 2 222 1 97 2 223 1 8 1 65 1 259 4 70 1 126 2 300 1 151 2 264 1 105 2 368 4 348 1 245 1 350 1 196 1 370 1 303 1 324 1 304 1 20 1 83 1 109 1 203 2 290 1 327 2 48 1 271 2 205 4 292 1 252 4 333 1 
55 1 235 2 93 1 142 1 337 1 255 2 222 1 223 1 65 1 8 1 259 4 68 1 70 1 126 2 101 1 300 1 264 1 76 1 105 3 368 5 348 1 245 1 350 1 196 1 370 1 303 1 324 1 304 1 83 1 109 1 161 2 203 2 290 1 48 1 327 3 89 2 205 5 271 3 292 1 252 4 231 1 333 1 
55 1 235 2 93 1 142 1 337 1 255 2 222 1 223 1 65 1 8 1 259 4 68 1 70 1 126 2 101 1 300 1 264 1 76 1 105 3 368 5 348 1 245 1 350 1 196 1 370 1 303 1 324 1 304 1 83 1 109 1 161 2 203 2 290 1 48 1 327 3 89 2 205 5 271 3 292 1 252 4 231 1 333 1 
361 2 93 1 218 1 142 1 337 1 255 2 222 1 97 2 223 1 65 1 8 1 259 4 70 1 126 2 300 1 263 1 151 2 264 1 105 2 368 4 348 1 245 1 350 1 196 1 370 1 303 1 324 1 304 1 83 1 109 1 203 2 290 1 327 2 48 1 271 2 205 4 292 1 252 4 333 1 
359 1 53 1 162 1 166 3 339 1 61 2 96 1 340 1 100 1 283 1 40 1 13 1 367 1 345 1 128 6 19 1 321 1 84 2 353 2 132 1 355 2 270 3 137 1 90 1 331 1 209 1 
359 1 53 16 162 2 31 4 217 2 166 9 237 2 339 2 61 1 340 2 123 1 100 2 283 16 365 4 240 1 13 2 40 6 346 4 128 22 347 2 321 4 326 2 182 1 158 1 21 4 353 4 84 4 187 1 328 1 188 1 355 2 270 13 90 2 
359 1 233 1 162 1 216 1 163 1 166 1 279 1 5 1 364 1 339 1 61 1 146 1 63 1 192 1 121 1 340 1 123 1 72 1 40 1 13 1 264 2 77 1 366 1 128 2 348 2 179 1 245 1 24 1 201 1 84 2 305 1 187 1 188 1 309 1 375 1 270 1 90 1 293 1 
53 7 162 3 163 1 216 2 217 2 166 10 5 3 339 3 7 1 61 2 257 2 121 3 340 3 63 2 123 1 72 2 171 1 13 3 264 3 77 2 345 1 128 20 348 3 179 3 21 2 24 1 84 6 353 8 305 2 132 1 187 1 309 1 188 1 137 1 355 4 270 10 90 3 359 3 233 2 31 2 362 2 279 2 237 4 96 1 192 2 100 3 283 7 194 2 40 7 367 1 321 3 245 1 201 1 51 1 251 2 112 1 375 1 331 1 208 2 
359 2 233 2 54 1 162 2 163 2 92 1 166 1 279 2 5 7 339 2 60 1 63 3 121 8 340 2 123 1 71 1 282 1 72 2 74 1 13 2 264 1 301 1 128 2 348 1 179 8 245 1 107 1 371 2 24 1 160 1 84 4 187 1 51 1 309 1 375 1 204 1 270 1 90 2 209 1 
359 1 53 1 162 1 31 1 217 1 166 2 339 1 340 1 67 1 100 1 283 1 40 1 13 1 264 1 128 3 244 1 348 1 321 1 245 1 21 1 24 1 353 1 84 2 228 1 188 1 309 1 355 1 270 1 90 1 
359 1 53 1 128 2 162 1 321 1 31 1 129 1 237 1 339 1 353 1 84 2 340 1 283 1 270 2 90 1 40 1 13 1 209 1 
359 1 53 1 128 2 162 1 369 1 217 1 166 2 339 1 353 1 84 2 340 1 100 1 355 1 283 1 90 1 40 1 13 1 209 1 
359 1 53 2 128 4 162 1 321 1 31 1 217 1 166 2 21 1 237 1 339 1 353 2 84 2 340 1 100 1 355 1 283 2 270 2 90 1 40 2 13 1 209 1 
359 1 53 1 128 2 162 1 321 1 92 1 31 1 129 1 237 1 339 1 353 1 84 2 340 1 283 1 270 2 90 1 40 1 13 1 
359 1 53 1 128 2 162 1 369 1 92 1 217 1 166 2 339 1 353 1 84 2 340 1 100 1 355 1 283 1 90 1 40 1 13 1 
359 1 53 2 128 4 162 1 321 1 92 1 31 1 217 1 166 2 21 1 237 1 339 1 353 2 84 2 340 1 100 1 355 1 283 2 270 2 90 1 40 2 13 1 
359 1 53 2 128 4 162 1 321 1 31 1 217 1 166 2 21 1 237 1 339 1 353 2 84 2 340 1 100 1 355 1 283 2 270 2 90 1 40 2 13 1 
359 1 77 1 233 1 128 2 162 1 348 1 163 1 216 1 179 1 166 1 279 1 5 1 339 1 84 2 61 1 305 1 340 1 63 1 121 1 192 1 123 1 187 1 72 1 270 1 90 1 13 1 264 1 208 1 
359 1 77 1 233 1 128 2 162 1 348 1 163 1 179 1 57 1 166 1 279 1 5 1 339 1 84 2 61 1 305 1 340 1 63 1 121 1 123 1 187 1 72 1 270 1 90 1 207 1 13 1 29 1 264 1 
359 1 53 2 162 1 31 1 217 1 166 2 339 1 237 1 340 1 100 1 283 2 13 1 40 2 128 4 321 1 21 1 84 2 353 2 188 1 270 2 355 1 90 1 
359 1 53 2 233 1 162 1 216 1 31 1 217 1 166 2 279 1 5 1 237 1 339 1 192 1 121 1 63 1 340 1 100 1 72 1 283 2 40 2 13 1 264 1 77 1 128 4 348 1 321 1 179 1 107 1 21 1 353 2 84 2 305 1 251 1 355 1 270 2 90 1 208 1 
359 1 53 1 162 1 31 1 217 1 166 1 237 1 339 1 340 1 67 1 100 1 261 1 283 1 13 1 40 1 264 1 128 3 244 1 348 1 321 1 245 1 21 1 24 1 353 1 84 2 188 1 309 1 270 2 90 1 
1 1 162 4 164 1 217 5 166 27 58 1 339 4 62 1 340 4 124 2 299 1 13 4 15 1 345 2 346 5 78 1 16 2 347 2 128 60 21 7 353 13 84 8 86 1 354 1 132 2 355 6 270 33 137 2 276 4 31 7 363 1 237 7 96 2 148 1 100 7 316 1 365 5 240 3 152 1 367 2 321 9 326 2 376 1 331 2 
1 1 162 4 276 4 164 1 31 3 217 3 166 17 58 1 363 1 237 3 339 4 96 1 62 1 340 4 124 2 316 1 100 4 365 2 240 2 299 1 13 4 152 1 15 1 367 1 345 1 16 1 78 1 346 2 128 35 321 4 21 3 353 5 84 8 86 1 354 1 132 1 137 1 355 2 270 18 376 1 331 1 
162 3 164 1 276 4 31 5 217 4 166 20 58 1 363 1 237 3 339 3 96 1 62 1 340 3 124 2 316 1 100 5 365 3 299 1 240 2 13 3 152 1 15 1 367 1 345 1 16 1 78 1 346 3 128 42 347 1 321 6 326 1 21 5 84 6 353 8 86 1 354 1 132 1 137 1 270 22 355 5 376 1 331 1 
1 1 162 4 276 3 164 1 31 3 217 3 166 16 58 1 363 1 237 3 339 4 96 1 62 1 340 4 124 2 316 1 100 4 365 2 240 2 299 1 13 4 15 1 367 1 345 1 16 1 78 1 346 2 128 33 177 1 321 4 21 3 353 6 84 8 86 1 354 1 132 1 137 1 355 3 270 17 376 1 331 1 
162 3 164 1 276 4 31 7 217 6 166 22 58 1 363 1 237 4 339 3 62 2 340 3 124 2 316 1 100 6 365 4 299 1 240 2 13 3 152 1 15 1 16 2 78 1 346 4 128 46 347 2 321 7 326 2 21 7 353 8 84 6 86 1 354 1 270 24 355 4 376 1 
190 1 212 1 248 1 153 1 169 1 122 1 335 1 287 1 141 1 189 1 
85 1 214 1 
174 1 212 1 248 1 169 1 135 1 335 1 310 1 141 1 189 1 
241 1 190 1 212 1 153 1 285 1 335 1 181 1 139 2 296 1 141 1 222 1 248 1 169 1 122 1 66 1 259 1 252 1 189 1 
241 1 190 1 212 1 153 1 285 1 335 1 181 1 139 2 296 1 141 1 222 1 248 1 169 1 122 1 66 1 259 1 252 1 189 1 
241 1 190 1 212 1 153 1 285 1 335 1 181 1 139 2 296 1 141 1 222 1 248 1 169 1 122 1 66 1 259 1 252 1 189 1 
99 1 253 1 191 1 
99 1 253 1 191 1 
314 1 149 1 
314 1 149 1 191 1 
167 1 288 1 
212 1 214 1 335 1 139 1 167 1 141 1 219 1 33 1 61 1 169 1 259 1 262 1 264 2 241 1 175 1 302 1 348 2 285 1 245 2 288 1 24 2 85 1 111 1 248 1 309 2 252 1 189 1 
99 1 253 1 
314 1 149 1 191 1 
359 1 233 1 162 1 166 1 279 1 5 2 339 1 63 1 121 2 340 1 123 1 71 1 72 1 38 1 13 1 264 2 128 2 348 2 179 2 245 2 371 2 325 1 198 1 268 1 23 1 84 2 187 1 188 1 204 1 270 1 90 1 
334 1 275 1 179 2 279 1 107 1 32 1 5 2 131 1 315 2 121 2 168 1 341 1 291 1 51 1 136 1 342 1 72 1 358 1 41 1 
334 1 275 1 179 1 279 1 32 1 5 1 131 1 315 2 121 1 281 1 341 1 291 1 51 1 136 1 342 1 72 1 41 1 
334 1 233 1 301 1 163 1 179 1 279 1 5 1 373 1 63 1 121 1 168 1 282 1 72 1 138 1 
334 1 275 1 179 1 279 1 32 1 5 1 131 1 315 2 121 1 168 1 341 1 291 1 51 1 136 1 342 1 72 1 358 1 41 1 
298 1 
222 1 19 1 93 1 350 1 278 1 280 1 300 1 
361 1 235 1 93 1 142 1 255 1 222 2 65 1 259 1 101 1 300 1 368 1 350 1 196 1 324 1 161 1 89 1 252 1 
295 2 215 1 163 1 254 6 217 2 5 3 6 2 255 3 119 2 222 8 63 10 65 4 121 3 8 2 259 5 125 2 72 4 300 2 127 1 179 3 178 2 350 9 21 2 305 3 233 3 311 1 361 12 31 2 93 8 278 1 279 3 312 1 142 4 280 1 313 2 193 6 100 2 194 2 242 2 368 5 321 2 155 2 196 4 107 1 324 4 197 1 157 2 289 1 161 6 47 2 374 1 377 3 252 5 114 2 
361 10 164 1 93 8 31 4 254 8 217 4 58 1 142 2 255 1 222 7 64 1 65 2 259 1 193 8 316 1 100 4 365 2 284 1 299 1 240 1 300 2 242 1 127 1 368 1 346 2 347 1 321 4 350 13 196 2 324 2 326 1 157 1 21 4 86 1 161 5 47 3 252 1 
30 1 93 2 142 1 96 1 65 1 259 1 67 1 68 1 239 1 100 1 75 1 264 1 242 1 348 1 321 2 245 1 196 1 350 2 324 1 109 1 24 1 47 2 87 1 132 1 133 1 309 1 331 1 252 1 
93 1 196 1 350 1 278 1 324 1 142 1 280 1 222 1 65 1 300 1 
242 1 361 10 321 2 31 2 93 5 254 5 217 2 350 5 21 2 222 5 161 5 47 2 193 5 100 2 194 1 
222 1 368 1 259 1 252 1 300 1 255 1 
233 1 215 1 163 2 93 2 165 1 279 1 142 2 5 4 255 2 338 1 256 1 63 1 65 2 121 4 259 3 282 1 72 1 127 2 301 1 368 4 179 4 196 1 350 2 267 1 324 2 197 2 157 2 110 1 252 3 
359 1 233 1 162 1 163 1 216 1 166 1 279 1 5 1 339 1 61 1 340 1 121 1 192 1 63 1 123 1 67 2 72 1 13 1 264 3 77 1 128 1 348 3 179 1 245 2 24 2 84 2 305 1 87 1 186 1 309 2 90 1 208 1 
127 1 361 4 93 2 254 2 196 1 350 1 324 1 142 1 157 1 222 4 161 2 65 1 193 2 137 1 300 2 
247 1 335 1 141 1 
190 1 335 1 288 1 141 1 102 1 
247 1 335 1 141 1 
247 1 335 1 141 1 
335 1 265 1 141 1 
335 1 265 1 141 1 
335 1 265 1 141 1 
335 1 141 1 
212 1 248 1 
162 2 164 1 31 2 217 1 166 10 58 1 237 4 339 2 96 2 340 2 124 1 239 1 100 4 316 1 365 1 240 1 299 1 13 2 367 1 345 1 346 1 78 1 128 24 321 5 21 2 84 4 353 9 86 1 132 2 137 1 270 14 355 5 331 2 
162 3 164 1 31 2 217 1 166 7 58 1 237 1 339 3 96 1 340 3 124 1 100 2 316 1 365 1 240 1 299 1 13 3 367 1 345 1 78 1 346 1 128 17 321 3 130 1 21 2 84 6 353 4 86 1 132 1 137 1 270 10 355 3 331 1 
162 3 164 1 31 4 217 4 166 15 58 1 339 3 237 2 96 1 340 3 124 1 316 1 100 5 365 2 299 1 240 1 13 3 367 1 345 1 346 2 78 1 128 29 347 1 321 5 130 1 326 1 21 4 84 6 353 6 86 1 132 1 137 1 270 14 355 4 331 1 
162 3 164 1 31 4 217 3 166 12 58 1 339 3 237 3 96 1 340 3 124 1 316 1 100 4 365 2 299 1 240 1 13 3 367 1 345 1 346 2 78 1 128 27 347 1 321 5 130 1 326 1 21 4 84 6 353 7 86 1 132 1 137 1 270 15 355 4 331 1 
162 2 164 1 31 2 217 1 166 10 58 1 237 4 339 2 96 2 340 2 124 1 239 1 100 4 316 1 365 1 240 1 299 1 13 2 367 1 345 1 346 1 78 1 128 24 321 5 21 2 84 4 353 9 86 1 132 2 137 1 270 14 355 5 331 2 
162 1 164 1 31 4 217 4 166 11 58 1 339 1 237 2 340 1 316 1 100 4 365 2 299 1 240 1 13 1 346 2 78 1 128 22 347 1 321 4 326 1 21 4 84 2 353 4 86 1 270 11 355 2 
162 4 164 1 31 4 217 3 166 13 58 1 339 4 237 3 96 1 340 4 124 2 316 1 100 4 365 2 299 1 240 1 13 4 367 1 345 1 78 1 346 2 128 28 347 1 321 5 130 1 326 1 21 4 84 8 353 7 86 1 132 1 137 1 270 15 355 4 331 1 
1 1 162 2 31 1 217 1 166 4 339 2 340 2 100 1 365 2 240 1 13 2 78 1 346 1 128 7 347 1 321 1 21 1 84 4 353 1 86 1 270 3 355 1 
345 1 367 2 128 7 321 1 166 4 237 3 353 6 96 3 132 1 100 1 355 3 270 3 331 3 
1 1 162 2 31 1 217 1 166 4 339 2 340 2 100 1 365 2 240 1 13 2 78 1 346 1 128 7 347 1 321 1 21 1 84 4 353 1 86 1 270 3 355 1 
345 1 367 1 128 8 162 2 321 1 166 4 237 1 339 2 353 3 84 4 96 1 132 1 340 2 124 1 100 1 137 1 270 4 355 2 331 1 13 2 
345 1 367 1 128 6 19 1 321 1 166 3 353 2 96 1 132 1 100 1 137 1 355 2 270 3 331 1 
128 4 162 1 321 1 31 1 217 1 166 2 130 1 21 1 339 1 237 1 353 2 84 2 340 1 100 1 355 1 270 2 13 1 
346 2 128 12 347 1 321 2 31 2 217 2 166 6 326 1 21 2 237 1 353 2 100 2 355 1 270 6 365 2 240 1 
162 2 31 2 217 2 166 12 237 4 339 2 96 2 340 2 124 2 9 1 100 3 365 2 13 2 367 1 345 1 346 2 347 1 128 23 321 3 326 1 182 1 21 2 353 9 84 4 132 1 137 1 270 11 355 5 331 2 
128 1 166 1 365 1 
346 1 128 1 270 1 
128 6 162 1 321 1 31 1 217 1 166 3 130 1 21 1 339 1 237 1 84 2 353 3 340 1 100 1 270 3 355 2 194 1 13 1 
162 1 164 1 31 4 217 4 166 11 58 1 339 1 237 2 340 1 316 1 100 4 365 2 299 1 240 1 13 1 346 2 78 1 128 22 347 1 321 4 326 1 21 4 84 2 353 4 86 1 270 11 355 2 
128 6 321 1 166 3 237 1 353 2 96 1 132 1 100 1 270 3 355 1 331 1 
367 1 345 1 128 3 162 1 166 2 237 1 339 1 353 2 84 2 96 1 340 1 9 1 124 1 270 1 355 1 331 1 13 1 
78 1 128 10 162 1 321 2 166 5 339 1 237 2 84 2 353 5 96 2 340 1 132 1 239 1 100 2 355 3 270 5 331 2 13 1 
78 1 128 2 162 1 321 1 31 1 339 1 237 1 84 2 353 1 340 1 270 2 13 1 
78 1 128 4 162 1 321 1 31 1 217 1 166 2 21 1 339 1 237 1 353 2 84 2 340 1 100 1 355 1 270 2 13 1 
1 1 78 1 128 3 162 3 166 2 339 3 237 1 84 6 353 2 96 1 340 3 124 1 9 1 355 1 270 1 331 1 13 3 
1 1 162 4 166 8 237 3 339 4 96 2 340 4 9 1 124 1 100 2 239 1 365 1 344 1 240 1 13 4 345 1 367 1 78 1 346 1 128 15 321 2 130 1 353 6 84 8 132 1 270 7 355 3 331 2 
61 1 18 1 348 1 79 1 245 1 292 1 264 1 
210 1 43 1 18 1 79 1 348 1 245 1 297 1 246 1 61 1 292 1 170 1 264 1 
233 1 301 1 63 1 19 1 121 1 163 1 179 1 282 1 72 1 279 1 5 1 
233 1 77 1 348 2 163 1 179 1 245 1 279 1 5 1 24 1 61 1 305 1 63 1 121 1 192 1 309 1 72 1 375 1 264 2 
233 2 77 1 348 2 178 1 179 1 245 2 370 1 279 1 197 1 5 1 109 1 24 1 61 1 305 2 48 1 63 3 121 1 192 1 309 2 72 1 375 1 114 1 264 2 
233 2 279 1 5 2 61 1 121 2 63 3 72 1 264 2 77 1 348 2 179 2 178 1 245 2 370 1 197 1 109 1 24 1 305 2 28 1 48 1 309 2 375 1 207 1 114 1 
233 1 163 1 3 1 279 1 6 1 5 3 222 1 63 4 121 3 8 1 259 2 72 1 300 1 368 1 179 3 178 1 197 1 305 1 28 1 377 1 252 2 113 1 114 1 
233 1 295 1 368 1 163 1 178 1 179 3 279 1 197 1 5 3 6 1 222 1 305 1 28 1 8 1 121 3 63 4 259 2 72 1 377 1 252 2 300 1 114 1 
54 1 121 1 179 1 72 1 279 1 5 1 
233 2 54 1 311 1 163 2 179 7 371 1 107 1 279 2 5 6 351 1 60 1 160 1 305 1 121 7 63 3 50 1 51 1 71 1 72 3 74 1 12 1 
53 1 162 2 216 1 166 3 5 1 339 2 61 2 121 1 340 2 63 1 72 1 13 2 264 2 77 1 345 1 128 6 348 2 179 1 24 1 84 4 353 2 305 1 132 1 309 1 188 1 355 2 270 3 137 1 90 2 359 2 233 1 362 1 279 1 96 1 192 1 100 1 283 1 38 1 40 1 367 1 321 1 245 1 107 1 251 1 375 1 331 1 208 1 
295 1 215 1 163 1 93 1 278 1 142 2 280 1 5 1 6 1 255 1 313 1 222 1 119 1 121 1 65 2 63 2 8 1 259 3 300 1 368 2 179 1 155 1 350 1 196 2 324 2 111 1 377 1 252 3 
233 1 54 1 311 1 179 2 107 1 279 1 6 1 5 2 289 1 305 1 121 2 63 2 72 2 
301 1 233 1 163 1 179 4 108 1 107 1 279 1 5 4 28 1 121 4 63 1 282 1 72 1 
233 1 179 2 279 1 197 1 5 2 305 1 121 2 63 1 50 1 69 1 112 1 72 2 332 1 12 1 
131 1 315 1 121 1 163 1 341 1 179 1 72 1 279 1 32 1 5 1 
233 1 179 2 107 1 279 1 325 1 5 2 121 2 63 1 51 1 71 1 72 1 
301 1 233 2 163 1 179 5 108 1 107 1 279 2 197 1 5 4 160 1 60 1 121 5 63 3 282 1 71 1 72 2 
195 1 301 1 233 2 163 1 179 5 108 1 107 1 279 2 197 1 5 4 60 1 121 5 63 3 282 1 71 1 72 2 
233 1 77 1 348 2 163 1 179 1 245 1 279 1 5 1 24 1 61 1 305 1 63 1 121 1 309 1 72 1 375 1 207 1 264 2 
233 1 311 1 179 1 279 1 197 1 5 1 351 1 305 1 121 1 63 1 50 1 72 2 12 1 
348 1 245 1 198 1 268 1 25 1 23 1 172 1 232 1 264 1 
25 1 17 1 225 1 
25 1 61 1 140 1 172 1 232 1 
17 1 370 1 140 2 225 1 83 1 109 1 25 1 61 1 222 1 145 1 111 1 8 1 48 1 259 2 36 1 252 2 172 2 300 1 232 2 
34 1 19 1 230 1 82 1 
221 1 34 1 98 1 230 1 11 1 82 1 318 1 
307 1 238 1 318 1 
319 1 4 1 82 1 183 2 221 1 372 1 98 3 34 1 230 1 11 1 272 1 318 3 
221 1 34 1 98 2 317 1 230 1 11 1 82 1 318 2 52 1 
319 1 80 1 277 1 221 1 98 1 315 1 291 1 341 1 11 1 230 1 318 1 
221 1 319 1 98 1 230 1 11 1 82 1 318 1 
221 1 319 1 34 1 98 1 11 1 82 2 318 1 
319 1 118 1 82 1 184 1 221 2 98 2 306 1 230 1 11 2 318 2 
319 1 277 1 82 1 221 1 34 1 98 3 258 1 357 1 11 1 224 1 230 2 318 3 52 2 
319 1 275 1 82 1 32 1 221 1 34 1 315 2 98 2 291 1 341 1 329 1 230 1 11 1 318 2 52 1 
319 1 274 1 277 1 82 1 221 2 34 1 98 4 258 1 317 1 11 2 230 2 318 4 52 2 
221 1 319 1 34 1 98 1 230 1 11 1 82 1 318 1 
2 1 277 1 4 1 82 2 183 1 372 1 221 1 34 2 98 4 258 1 11 1 230 3 318 4 52 2 
319 1 323 1 82 1 200 1 221 1 159 1 98 2 34 1 230 1 11 1 318 2 52 1 
319 1 4 2 82 1 183 2 372 1 221 1 98 3 34 1 88 1 230 1 11 1 318 3 
227 1 236 1 230 2 199 2 
221 1 319 1 98 1 250 1 11 1 318 1 
221 1 319 1 34 1 98 2 357 1 230 1 11 1 82 1 318 2 52 1 
10 1 
221 1 319 1 34 1 98 1 230 1 11 1 82 1 318 1 
319 1 82 1 183 1 221 1 98 3 34 1 357 1 11 1 230 1 318 3 52 1 
258 1 2 1 277 1 230 1 
230 1 82 1 

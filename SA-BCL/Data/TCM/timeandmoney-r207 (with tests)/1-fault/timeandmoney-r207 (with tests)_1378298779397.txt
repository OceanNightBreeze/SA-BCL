#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isNegative()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
105 1 313 2 78 1 108 1 336 5 188 1 213 1 292 1 4 9 220 2 88 1 196 1 375 2 127 1 91 1 342 1 148 6 69 2 152 1 16 1 255 2 207 1 101 3 366 2 332 9 160 2 334 1 49 4 
105 1 313 2 78 1 108 1 336 5 188 1 213 1 292 1 4 9 220 2 88 1 196 1 375 2 127 1 91 1 342 1 148 6 69 2 152 1 16 1 255 2 207 1 101 3 332 9 160 2 366 2 334 1 49 4 
105 1 313 2 78 1 108 1 336 6 188 1 213 1 292 1 4 10 220 2 88 1 196 1 375 2 127 1 91 1 342 1 148 7 69 2 152 1 16 1 255 2 207 1 101 4 332 10 160 2 366 2 334 1 49 5 
105 1 313 2 78 1 108 1 336 4 188 1 213 1 292 1 4 7 220 2 88 1 375 2 127 1 91 1 342 1 148 4 69 2 152 1 16 1 255 2 207 1 101 2 332 7 160 2 366 1 334 1 49 3 
105 1 313 1 336 3 196 1 127 1 342 1 148 3 69 1 152 1 255 1 4 4 101 1 160 1 220 1 332 4 366 2 334 1 49 2 
105 1 139 1 336 1 127 1 375 1 140 1 69 1 292 1 255 1 97 1 207 1 4 2 160 1 220 1 332 2 334 1 
105 1 336 2 127 1 375 1 213 1 148 1 4 3 101 1 160 2 220 2 332 3 334 1 49 1 
105 1 313 1 78 1 336 5 196 1 127 1 42 1 375 1 188 1 342 1 148 7 213 1 69 1 152 1 255 1 33 1 4 9 101 3 366 2 160 2 220 2 332 9 334 1 49 4 
105 1 313 1 78 1 336 5 196 1 127 1 42 1 375 1 188 1 342 1 148 7 213 1 69 1 152 1 255 1 33 1 4 9 101 3 366 2 160 2 220 2 332 9 334 1 49 4 
259 1 355 1 122 1 
240 1 274 2 122 1 
268 1 178 1 161 2 82 2 11 2 378 2 25 2 46 2 
161 2 187 2 235 1 210 1 25 2 316 1 31 1 338 1 268 1 116 1 319 1 2 1 82 3 143 2 321 1 371 2 176 1 85 1 277 1 9 1 324 1 178 1 124 2 325 2 65 1 11 3 14 1 346 1 132 1 256 1 331 1 378 2 183 1 46 2 21 1 285 1 159 1 
268 1 377 1 161 1 82 1 11 1 378 1 241 1 25 1 46 1 115 1 
247 1 161 1 64 1 11 1 355 1 163 1 81 1 377 1 82 1 304 1 122 1 263 1 333 1 221 1 
247 1 161 1 11 1 355 1 25 1 81 2 377 1 82 1 378 1 304 2 46 1 122 1 263 1 333 1 221 1 
182 1 237 1 304 1 81 1 177 1 
182 1 335 1 355 1 304 2 47 1 81 2 177 1 122 1 
304 1 81 1 177 1 
161 1 11 1 25 1 214 1 81 1 115 1 268 1 377 1 182 1 82 1 241 1 378 1 304 1 46 1 
122 1 
271 1 182 1 335 1 355 1 304 2 81 2 177 1 122 1 
179 1 335 1 353 2 355 1 13 1 376 1 368 2 357 1 81 5 151 1 181 1 182 2 304 5 305 1 194 1 121 1 361 2 177 2 122 1 
178 1 259 1 
161 2 178 2 11 2 25 1 282 1 57 1 82 2 378 1 46 1 
315 1 280 1 345 1 
178 1 187 1 325 1 11 1 316 1 132 1 319 1 82 1 192 1 143 1 321 1 21 1 285 1 159 1 9 1 324 1 
161 1 187 1 325 1 11 2 315 1 25 1 27 1 316 1 199 1 132 1 319 1 82 2 46 1 143 1 21 1 321 1 285 1 159 1 9 1 324 1 
178 1 161 3 82 3 378 1 11 3 25 3 46 3 27 1 
377 1 161 1 82 1 11 1 25 1 46 1 115 1 
377 1 161 1 57 1 82 1 11 1 378 1 25 1 46 1 282 1 
161 3 187 1 235 1 210 1 25 3 27 1 316 1 81 1 268 1 116 1 319 1 82 4 143 1 321 1 371 1 218 1 176 1 85 1 9 1 221 1 324 1 247 1 178 1 124 2 325 1 65 1 11 4 14 1 225 1 346 1 282 1 199 1 132 1 256 1 377 1 378 2 183 1 46 3 304 1 21 1 285 1 159 1 263 1 333 1 
178 1 161 2 82 2 64 1 107 1 11 2 25 1 46 1 27 1 
247 1 161 3 11 3 25 3 27 2 225 1 343 1 81 1 282 1 199 1 377 1 82 3 378 1 304 1 46 3 122 1 221 1 263 1 333 1 
161 2 11 2 25 2 315 1 27 1 345 1 282 1 82 2 378 1 46 2 
178 1 187 1 325 1 11 1 316 1 132 1 319 1 82 1 143 1 321 1 21 1 285 1 159 1 9 1 324 1 
178 1 187 1 325 1 11 1 316 1 319 1 82 1 17 1 117 1 143 1 21 1 285 1 159 1 9 1 324 1 
235 1 210 1 315 2 109 1 51 1 28 1 53 1 2 2 118 1 371 4 176 1 124 2 65 1 14 1 280 2 345 2 227 1 346 1 43 1 153 1 70 1 256 2 308 1 48 1 
377 1 161 1 82 1 11 1 25 1 46 1 29 1 333 1 
161 5 178 1 64 1 107 1 11 5 66 1 299 1 25 4 27 2 282 1 199 1 82 5 378 1 46 4 
377 1 161 2 82 2 11 2 25 2 46 2 29 1 115 1 
99 1 372 1 
99 1 372 1 
96 1 79 1 
96 1 79 1 
96 1 79 1 
298 1 99 1 372 1 
298 1 99 1 372 1 
99 1 294 1 372 1 
96 1 339 1 79 1 99 2 1 1 372 2 
298 1 99 1 372 1 
287 1 99 1 372 1 
287 1 99 1 372 1 
287 1 99 1 372 1 
374 1 265 1 129 1 81 2 358 1 228 2 302 1 32 1 339 1 360 2 44 2 98 1 350 2 304 2 99 2 372 2 40 2 136 3 122 1 
137 1 161 2 24 1 25 2 265 1 165 1 81 1 82 2 37 1 294 1 40 1 372 1 178 1 63 1 11 2 228 1 202 1 44 1 379 1 46 2 350 1 304 1 99 1 136 1 
255 1 313 1 69 1 
255 1 140 1 69 1 
313 2 252 1 140 1 52 1 369 1 69 3 
313 1 20 1 252 1 140 1 52 1 69 2 
313 1 252 1 140 1 52 2 69 2 
353 1 335 1 355 1 368 1 51 1 357 1 53 1 81 5 55 1 240 1 274 3 37 1 5 1 38 2 361 1 177 1 122 2 41 1 246 1 179 3 180 1 181 2 153 1 202 1 201 2 182 4 379 1 304 5 22 2 308 1 351 1 309 1 
161 1 236 1 237 1 355 1 25 1 214 1 81 2 115 1 268 1 82 1 241 1 177 1 122 1 326 1 11 1 226 1 377 1 182 2 378 1 304 2 46 1 
353 1 355 1 368 1 51 1 81 3 53 1 240 2 274 4 37 1 38 2 121 1 361 1 122 3 41 1 246 1 179 3 180 1 181 2 153 1 201 1 182 2 304 3 22 2 308 1 351 1 309 1 
353 1 355 1 368 1 51 2 81 4 53 2 317 1 240 3 274 7 37 2 38 4 121 1 361 1 122 4 41 1 246 1 179 5 180 1 126 1 181 4 153 2 201 2 182 3 304 4 22 4 308 2 351 2 309 1 233 1 
259 1 285 1 7 1 
285 1 95 1 
76 1 
21 1 285 1 
217 1 173 1 21 1 285 3 7 2 9 1 
21 1 285 1 9 1 
341 1 285 1 
234 1 106 1 12 1 250 1 251 1 211 1 227 2 43 3 153 1 256 3 155 1 2 4 59 1 371 7 308 1 175 1 352 2 
234 1 106 1 12 1 250 1 251 1 211 1 227 2 43 3 153 1 256 3 155 1 2 4 59 1 371 7 308 1 175 1 352 2 
234 1 106 1 12 1 250 1 212 1 251 1 211 1 227 2 43 3 153 1 256 3 155 1 2 4 59 1 371 7 308 1 175 1 352 2 
234 2 235 1 106 1 211 1 110 1 51 3 113 4 53 3 168 1 2 16 59 1 61 3 371 31 39 1 176 1 175 5 124 2 87 1 65 1 125 1 12 2 250 2 251 1 14 1 227 5 43 10 153 4 256 15 155 2 232 1 351 3 308 4 352 3 185 1 
234 1 124 4 235 2 65 2 106 1 12 1 250 1 211 1 110 1 14 2 112 1 227 3 43 4 153 1 256 4 155 1 2 5 59 1 174 1 371 9 308 1 175 1 176 2 352 2 
187 1 105 1 77 1 313 1 336 1 140 1 369 1 266 1 319 1 172 1 36 1 143 1 4 2 220 1 325 1 328 1 127 1 375 1 224 1 148 1 69 2 254 1 255 1 306 1 100 1 102 1 332 2 160 1 159 1 334 1 
187 1 105 1 77 1 313 1 336 1 290 1 140 1 369 1 319 1 275 1 172 1 36 1 143 1 4 3 220 1 325 1 328 1 375 1 224 1 148 2 130 1 69 2 255 1 306 1 100 1 102 1 332 3 160 1 159 1 334 1 
187 1 105 1 77 1 313 1 336 1 290 1 140 1 369 1 319 1 275 1 172 1 36 1 143 1 4 2 325 1 375 1 224 1 148 2 69 2 255 1 306 1 102 1 332 2 159 1 334 1 
296 1 209 1 187 1 325 1 77 2 375 2 26 1 316 1 130 1 301 1 319 1 170 1 143 1 21 1 306 2 4 1 285 1 365 1 102 2 159 1 160 1 220 1 332 1 
187 1 325 1 77 1 313 1 328 1 375 1 127 1 140 1 224 1 369 1 69 2 254 1 255 1 319 1 275 1 36 1 172 1 143 1 4 1 306 1 100 1 102 1 159 1 160 1 220 1 332 1 
269 1 
161 1 354 2 353 1 355 1 316 2 163 1 357 1 319 1 274 2 170 1 177 6 361 1 122 2 221 1 179 2 325 2 222 1 64 1 279 1 11 1 181 2 131 1 230 1 71 2 21 1 285 1 333 1 75 1 138 4 187 2 335 3 368 1 26 1 81 5 82 1 240 2 35 2 143 2 86 1 247 1 297 1 90 2 300 1 94 2 377 1 203 2 204 1 205 2 349 1 304 5 309 1 159 1 262 1 263 1 103 1 
138 2 247 1 161 1 64 1 335 1 279 1 11 1 163 1 81 3 271 1 377 1 230 1 203 1 204 1 82 1 304 3 177 2 103 1 221 1 333 1 263 1 75 1 
138 3 247 1 161 1 64 1 335 1 279 1 11 1 355 1 163 1 81 3 94 1 271 1 377 1 230 1 204 1 82 1 304 3 177 1 122 1 103 1 221 1 333 1 263 1 75 1 
138 3 161 1 335 1 354 1 355 1 163 1 81 3 271 1 82 1 177 2 221 1 122 1 247 1 64 1 11 1 279 1 94 1 230 1 377 1 204 1 203 1 304 3 263 1 333 1 103 1 75 1 
138 6 161 1 353 1 335 3 354 4 355 5 368 1 163 1 357 1 81 5 191 1 271 1 82 1 240 2 35 2 86 1 361 1 177 7 122 5 221 1 248 1 247 1 297 1 179 1 64 1 90 2 279 1 11 1 128 1 94 4 181 1 230 1 377 1 258 1 204 1 203 4 71 2 205 2 133 1 304 5 263 1 333 1 103 1 75 1 
161 1 353 1 354 2 355 1 163 1 357 1 274 2 361 1 177 4 221 1 122 2 179 1 222 1 64 1 11 1 279 1 181 1 230 1 71 2 333 1 75 1 138 4 335 2 368 1 81 4 82 1 240 2 35 2 86 1 247 1 297 1 90 2 94 2 377 1 204 1 203 2 205 2 304 4 103 1 263 1 
138 4 161 1 354 2 335 2 353 1 355 1 368 1 163 1 357 1 81 4 191 1 82 1 240 2 35 2 86 1 177 4 361 1 122 1 221 1 248 1 247 1 297 1 179 1 64 1 90 2 11 1 279 1 128 1 94 2 181 1 230 1 377 1 203 2 204 1 71 2 205 2 304 4 263 1 333 1 103 1 75 1 
138 4 161 1 354 2 335 2 353 1 355 1 368 1 163 1 357 1 81 4 191 1 82 1 240 2 35 2 86 1 177 4 361 1 122 1 221 1 248 1 247 1 297 1 179 1 64 1 90 2 11 1 279 1 128 1 94 2 181 1 230 1 377 1 203 2 204 1 71 2 205 2 304 4 263 1 333 1 103 1 75 1 
138 4 161 1 354 2 335 2 353 1 355 1 368 1 163 1 357 1 81 4 82 1 274 2 60 2 177 4 361 1 122 1 221 1 248 1 247 1 297 1 179 1 64 1 90 2 11 1 279 1 15 2 94 2 181 1 231 1 230 1 377 1 203 2 204 1 363 1 71 2 304 4 263 1 333 1 103 1 75 1 50 1 
138 5 161 1 335 2 353 1 354 3 355 1 368 1 163 1 357 1 81 4 191 1 82 1 240 2 35 2 86 1 361 1 177 5 122 1 221 1 248 1 247 1 297 1 179 1 64 1 90 2 11 1 279 1 128 1 94 3 181 1 230 1 377 1 258 1 204 1 203 3 71 2 205 2 304 4 263 1 333 1 103 1 75 1 
138 5 161 1 335 2 353 1 354 3 355 1 368 1 163 1 357 1 81 4 191 1 82 1 240 2 35 2 86 1 361 1 177 5 122 1 221 1 248 1 247 1 297 1 179 1 64 1 90 2 11 1 279 1 128 1 94 3 181 1 230 1 377 1 258 1 204 1 203 3 71 2 205 2 304 4 263 1 333 1 103 1 75 1 
138 4 161 1 354 2 335 2 353 1 355 1 368 1 163 1 357 1 81 4 82 1 274 2 60 2 177 4 361 1 122 1 221 1 247 1 297 1 179 1 222 1 64 1 90 2 279 1 11 1 15 2 94 2 181 1 230 1 377 1 231 1 203 2 204 1 71 2 304 4 263 1 333 1 103 1 75 1 
235 1 210 1 106 1 315 1 211 1 2 3 59 1 371 6 176 1 124 2 178 2 65 1 250 1 12 1 14 1 280 1 345 1 227 2 346 1 43 2 70 1 153 1 256 3 259 1 308 1 352 1 
311 1 235 2 210 1 315 11 51 1 113 3 291 1 53 2 30 1 31 1 168 1 2 8 371 14 61 3 175 1 219 1 176 2 178 1 124 4 65 2 14 2 280 11 227 1 345 4 43 2 346 2 153 2 256 6 232 1 183 1 135 1 351 2 308 1 
187 1 161 1 235 1 210 1 25 1 316 1 27 1 31 1 319 1 82 2 2 1 192 1 242 1 143 1 321 1 371 2 176 1 9 1 324 1 178 1 124 2 325 1 65 1 11 2 14 1 147 1 345 1 346 1 199 1 132 1 256 1 303 1 183 1 46 1 21 1 285 1 135 1 159 1 
161 1 210 3 106 1 211 1 315 7 316 1 51 2 53 2 319 2 2 10 273 1 58 2 59 1 275 1 3 1 321 2 176 3 175 4 9 2 324 2 178 2 124 6 325 3 65 3 11 3 12 1 14 3 280 7 227 4 330 2 132 2 183 1 21 2 285 2 135 1 74 2 187 3 235 3 25 1 27 1 31 1 82 3 143 3 371 20 144 1 85 2 249 2 250 1 345 7 199 1 346 3 43 8 153 3 256 10 46 1 308 3 351 2 352 1 159 2 
161 1 187 7 235 2 210 2 162 1 25 1 26 1 27 1 316 2 164 1 266 1 31 1 338 2 169 1 319 2 82 1 2 1 34 1 170 1 275 1 143 8 371 2 176 2 245 1 62 1 124 4 325 8 65 2 11 1 14 2 198 1 346 2 70 1 256 1 183 1 46 1 21 2 285 3 159 2 
161 1 235 1 210 1 315 1 25 1 51 1 53 1 142 1 82 1 2 1 371 3 176 1 124 2 65 1 11 1 14 1 280 1 227 1 345 1 43 1 282 1 346 1 153 1 256 2 378 1 46 1 135 1 351 1 308 1 
124 2 210 1 235 1 65 1 315 1 109 1 14 1 280 1 53 1 345 1 43 1 346 1 70 1 153 1 2 2 371 2 175 1 176 1 
124 2 210 1 235 1 65 1 315 1 14 1 51 1 280 1 227 1 345 1 43 1 346 1 70 1 256 2 118 1 371 2 308 1 176 1 
235 1 210 1 315 2 51 1 53 1 2 2 371 4 176 1 175 1 124 2 65 1 14 1 280 2 345 2 227 1 346 1 43 2 153 1 70 1 256 2 351 1 308 1 
124 2 210 1 235 1 65 1 315 1 109 1 14 1 280 1 164 1 53 1 345 1 43 1 346 1 153 1 2 2 371 2 175 1 176 1 
124 2 210 1 235 1 65 1 315 1 14 1 51 1 280 1 164 1 227 1 345 1 43 1 346 1 256 2 118 1 371 2 308 1 176 1 
235 1 210 1 315 2 51 1 164 1 53 1 2 2 371 4 176 1 175 1 124 2 65 1 14 1 280 2 345 2 227 1 346 1 43 2 153 1 256 2 351 1 308 1 
235 1 210 1 315 2 51 1 53 1 2 2 371 4 176 1 175 1 124 2 65 1 14 1 280 2 345 2 227 1 346 1 43 2 153 1 256 2 351 1 308 1 
187 1 210 1 235 1 316 1 31 1 319 1 2 1 82 1 143 1 321 1 371 2 85 1 176 1 9 1 324 1 178 1 124 2 325 1 65 1 11 1 14 1 346 1 132 1 256 1 183 1 21 1 285 1 159 1 
187 1 210 1 235 1 316 1 31 1 319 1 2 1 117 1 82 1 143 1 371 2 176 1 9 1 324 1 178 1 124 2 325 1 65 1 11 1 14 1 346 1 256 1 17 1 283 1 183 1 21 1 285 1 159 1 
235 1 210 1 315 2 51 1 53 1 2 2 371 4 176 1 175 1 124 2 65 1 14 1 280 2 345 2 227 1 346 1 43 2 153 1 256 2 351 1 135 1 308 1 
187 1 210 1 235 1 315 2 51 1 53 1 266 1 319 1 2 2 82 1 58 1 143 1 321 1 371 4 175 1 85 1 176 1 9 1 324 1 124 2 325 1 65 1 11 1 14 1 280 2 227 1 345 2 43 2 346 1 153 1 132 1 256 2 21 1 285 1 308 1 351 1 159 1 
161 1 235 1 210 1 25 1 315 1 51 1 53 1 82 1 2 2 371 3 175 1 176 1 124 2 65 1 11 1 14 1 280 1 150 1 345 1 43 1 282 1 346 1 153 1 256 1 378 1 46 1 308 1 135 1 351 1 
106 1 211 1 110 1 0 1 51 4 113 4 53 4 168 3 56 2 2 20 59 1 320 1 174 1 61 3 175 4 176 3 123 4 124 6 65 3 12 1 14 3 227 4 232 1 134 1 73 1 235 3 141 1 83 1 371 41 145 1 373 1 250 1 93 1 43 8 153 5 256 21 257 1 157 1 158 1 308 5 351 4 352 1 261 1 
235 4 106 1 211 1 0 1 110 2 141 1 51 3 113 4 53 4 168 3 56 2 2 20 83 1 59 1 174 1 320 1 371 38 61 3 176 4 175 3 373 1 145 1 123 4 124 8 65 4 12 1 250 1 14 4 93 1 227 4 43 7 153 5 257 1 256 18 157 1 232 1 158 1 134 1 351 4 308 4 352 1 261 1 73 1 
235 2 106 1 211 1 0 1 110 1 141 1 51 7 113 4 53 7 30 2 168 2 56 1 2 27 83 1 59 1 174 1 320 1 371 52 61 4 176 2 175 7 373 1 145 1 123 4 124 4 65 2 12 1 250 1 14 2 227 7 43 14 153 8 257 1 256 25 157 1 232 2 158 1 134 1 351 7 308 8 352 1 73 1 
235 2 51 3 113 2 53 3 168 1 56 1 2 9 174 1 320 1 119 1 371 19 61 1 176 2 175 3 123 2 124 4 65 2 14 2 227 3 43 6 153 3 257 1 256 10 157 2 232 1 158 1 351 3 308 3 261 1 73 1 
235 3 0 1 110 2 141 1 51 2 113 2 53 3 168 2 56 2 2 14 83 1 174 1 320 1 371 26 61 2 175 2 176 3 373 1 123 4 145 1 124 6 65 3 14 3 227 2 43 4 153 3 256 12 257 1 157 1 158 1 134 1 308 2 351 3 73 2 
302 1 339 1 156 1 44 1 350 1 99 1 40 1 372 1 358 1 228 1 
63 1 294 1 
23 1 171 1 44 1 350 1 99 1 40 1 372 1 238 1 228 1 
374 1 265 1 129 1 81 1 358 1 228 1 302 1 339 1 360 1 44 1 98 1 304 1 350 1 99 1 372 1 40 1 136 2 122 1 
374 1 265 1 129 1 81 1 358 1 228 1 302 1 339 1 360 1 44 1 98 1 304 1 350 1 99 1 372 1 40 1 136 2 122 1 
374 1 265 1 129 1 81 1 358 1 228 1 302 1 339 1 360 1 44 1 98 1 304 1 350 1 99 1 372 1 40 1 136 2 122 1 
298 1 322 1 1 1 
298 1 322 1 1 1 
287 1 193 1 
287 1 193 1 1 1 
137 1 165 1 
137 1 161 2 24 1 25 2 165 1 81 1 82 2 360 1 37 1 294 1 40 1 372 1 178 1 89 1 63 1 11 2 228 1 202 1 182 1 44 1 379 1 98 1 304 1 350 1 46 2 99 1 136 1 
298 1 322 1 
287 1 193 1 1 1 
161 2 187 2 235 1 210 1 162 1 80 1 31 1 338 2 319 1 370 1 82 2 2 1 143 2 371 2 176 1 62 1 362 1 195 1 124 2 325 2 65 1 11 2 14 1 281 1 346 1 256 1 183 1 21 1 285 1 135 1 159 1 
187 2 367 1 325 2 313 1 140 1 369 1 149 1 266 1 69 2 255 1 319 1 275 1 172 1 36 1 143 2 306 1 100 1 159 1 8 1 
187 1 325 1 313 1 140 1 369 1 149 1 69 2 255 1 319 1 275 1 84 1 172 1 36 1 143 1 306 1 100 1 159 1 
296 1 187 1 325 1 289 1 26 1 316 1 319 1 170 1 143 1 21 1 306 1 285 1 159 1 8 1 
187 1 367 1 325 1 313 1 140 1 369 1 149 1 69 2 255 1 319 1 275 1 172 1 36 1 143 1 306 1 100 1 159 1 8 1 
189 1 
179 1 259 1 355 1 13 1 376 1 122 1 181 1 
353 1 335 1 355 1 368 1 357 1 81 1 240 1 274 1 35 1 86 1 361 1 177 1 122 2 179 1 181 1 205 1 304 1 
312 2 353 4 355 2 264 2 316 1 51 2 357 4 266 1 53 2 54 1 319 4 274 12 217 1 276 1 323 2 361 4 177 5 7 2 9 3 221 2 122 8 179 9 325 3 10 1 13 1 181 8 330 2 21 3 22 6 285 10 364 2 187 3 335 3 368 4 81 5 240 6 143 3 341 2 244 1 38 6 376 1 200 1 95 3 153 2 154 2 347 2 349 1 304 5 351 2 308 2 309 2 159 3 260 2 208 2 
335 1 353 2 355 2 368 2 264 2 141 1 51 2 113 1 357 2 81 1 53 2 168 1 274 6 83 1 240 3 38 5 61 1 177 1 361 2 122 5 373 1 145 1 179 8 253 1 181 5 153 2 349 1 304 1 22 5 364 1 134 1 351 2 308 2 309 1 310 1 
161 1 353 1 106 1 368 1 25 1 264 2 357 1 214 1 81 1 115 1 268 1 82 1 241 1 361 1 179 2 327 1 11 1 12 1 250 1 128 1 181 2 153 2 377 1 378 1 304 1 46 1 364 1 308 1 
179 1 353 1 13 1 355 1 376 1 368 1 357 1 181 1 361 1 122 1 
179 5 264 2 51 2 53 2 181 5 330 1 153 2 274 10 240 5 22 5 364 1 38 5 351 2 308 2 122 5 
335 1 355 1 304 1 81 1 177 1 122 1 
187 4 353 2 335 2 314 1 368 2 26 1 316 2 357 1 81 3 54 1 319 1 170 1 293 1 143 4 276 2 121 1 361 2 177 4 325 4 179 2 181 2 131 1 349 2 304 3 21 1 285 1 309 2 159 1 262 1 
187 1 161 2 210 1 235 1 25 2 316 1 268 1 116 1 319 1 82 3 143 1 321 1 371 1 176 1 85 1 9 1 324 1 178 1 124 2 325 1 65 1 11 3 14 1 346 1 132 1 256 1 378 2 183 1 46 2 21 1 285 1 159 1 
179 1 353 1 355 2 368 1 357 1 181 2 240 2 274 4 349 1 22 2 38 2 309 1 352 1 361 1 122 4 
44 1 184 1 40 1 
44 1 184 1 40 1 
137 1 44 1 40 1 286 1 358 1 
44 1 184 1 40 1 
44 1 40 1 190 1 
44 1 40 1 190 1 
44 1 40 1 190 1 
44 1 40 1 
99 1 372 1 
235 1 106 1 211 1 113 1 168 1 2 4 83 1 59 1 174 1 61 1 371 8 176 1 124 2 65 1 250 1 12 1 14 1 227 2 43 2 153 1 256 4 308 1 352 1 
235 2 106 1 211 1 111 1 113 2 53 1 168 1 2 6 83 1 59 1 174 1 371 11 61 1 176 2 175 1 124 4 65 2 12 1 250 1 14 2 227 2 43 3 153 2 256 5 232 1 308 1 351 1 352 1 
235 3 106 1 211 1 111 1 110 1 141 1 51 2 113 1 53 2 168 1 2 9 83 1 59 1 174 1 61 1 371 19 175 1 176 3 145 1 373 1 124 6 65 3 12 1 250 1 14 3 227 3 43 4 153 3 256 10 134 1 351 2 308 3 352 1 
235 3 106 1 211 1 111 1 110 1 141 1 51 1 113 1 53 2 168 1 2 10 83 1 59 1 174 1 61 1 371 17 175 2 176 3 145 1 373 1 124 6 65 3 12 1 250 1 14 3 227 3 43 5 153 3 256 7 134 1 351 2 308 2 352 1 
235 1 106 1 211 1 113 1 168 1 2 4 83 1 59 1 174 1 61 1 371 8 176 1 124 2 65 1 250 1 12 1 14 1 227 2 43 2 153 1 256 4 308 1 352 1 
235 1 141 1 51 2 113 1 53 2 168 1 2 6 83 1 174 1 61 1 371 12 175 1 176 1 145 1 373 1 124 2 65 1 14 1 227 1 43 2 153 2 256 6 134 1 351 2 308 2 
235 4 106 1 211 1 111 1 110 2 141 1 51 1 113 1 53 2 168 1 2 10 83 1 59 1 174 1 371 18 61 1 175 2 176 4 373 1 145 1 124 8 65 4 12 1 250 1 14 4 227 3 43 5 153 3 256 8 134 1 351 2 308 2 352 1 
235 4 110 2 141 1 51 2 113 1 53 3 168 1 2 9 83 1 174 1 371 16 61 1 175 3 176 4 373 1 145 1 124 8 65 4 14 4 227 3 43 6 153 3 256 7 134 1 351 3 308 2 261 1 
106 1 250 3 12 3 211 1 227 3 43 6 153 1 256 4 2 3 59 2 371 7 308 1 175 3 
235 4 106 1 211 1 110 2 141 1 51 1 113 1 53 2 168 1 2 10 83 1 59 1 174 1 371 18 61 1 175 1 176 4 373 1 145 1 124 8 65 4 12 1 250 1 14 4 227 3 43 4 153 3 256 8 134 1 351 2 308 2 352 1 261 1 
124 4 235 2 65 2 106 1 250 1 12 1 211 1 110 1 14 2 227 2 43 3 153 1 256 4 2 4 59 1 371 8 308 1 175 1 176 2 352 1 
153 1 256 3 2 3 259 1 106 1 59 1 12 1 250 1 211 1 371 6 308 1 352 1 227 2 43 2 
124 2 235 1 65 1 111 1 51 1 14 1 53 1 227 1 43 2 153 1 256 2 2 2 371 4 308 1 351 1 176 1 175 1 
51 1 113 2 53 1 227 1 43 2 153 1 168 1 256 4 2 3 232 1 371 7 61 1 308 1 351 1 175 1 
311 1 235 2 106 1 211 1 110 2 51 2 113 2 53 2 30 1 2 11 59 1 61 2 371 23 175 4 176 2 124 4 65 2 12 2 250 2 14 2 227 5 43 9 153 3 256 12 348 1 232 1 351 2 308 3 352 1 
256 1 371 1 113 1 
2 1 371 1 61 1 
124 2 235 1 65 1 111 1 14 1 51 1 53 1 227 2 330 1 43 3 153 1 256 3 2 3 371 6 351 1 308 1 176 1 175 1 
235 1 141 1 51 2 113 1 53 2 168 1 2 6 83 1 174 1 61 1 371 12 175 1 176 1 145 1 373 1 124 2 65 1 14 1 227 1 43 2 153 2 256 6 134 1 351 2 308 2 
106 1 250 1 12 1 227 1 43 2 153 1 256 3 2 3 371 6 308 1 175 1 
124 2 235 1 65 1 12 1 250 1 211 1 110 1 14 1 227 1 43 2 256 2 2 1 348 1 59 1 371 3 175 1 176 1 
124 2 235 1 65 1 327 1 106 1 250 2 12 2 14 1 227 3 43 5 153 2 256 5 2 5 174 1 371 10 308 2 176 1 175 2 
124 2 235 1 65 1 14 1 53 1 43 1 153 1 2 2 174 1 371 2 176 1 175 1 
124 2 235 1 65 1 51 1 14 1 53 1 227 1 43 2 153 1 256 2 2 2 174 1 371 4 308 1 351 1 176 1 175 1 
124 6 235 3 65 3 250 1 12 1 110 1 14 3 227 1 43 2 256 2 348 1 2 1 174 1 371 3 176 3 175 1 261 1 
235 5 106 2 211 1 110 2 111 1 51 3 113 4 53 3 168 1 2 16 59 1 174 1 39 1 371 34 61 3 176 5 175 5 87 1 124 10 65 5 12 3 250 3 14 5 227 7 43 12 153 5 256 18 348 1 232 1 351 3 308 5 352 1 261 1 185 1 
178 1 161 1 82 1 64 1 11 1 107 1 19 1 
178 1 161 1 64 1 107 1 11 1 288 1 167 1 239 1 82 1 19 1 216 1 307 1 
187 1 319 1 325 1 259 1 170 1 26 1 143 1 21 1 316 1 285 1 159 1 
178 1 161 1 187 1 325 1 11 2 25 1 27 1 316 1 319 1 82 2 46 1 143 1 21 1 321 1 285 1 159 1 9 1 324 1 
187 1 161 2 25 2 27 1 319 1 82 2 143 1 341 1 321 1 276 1 9 2 324 1 247 1 178 1 325 1 11 2 377 1 154 1 46 1 21 2 285 3 159 1 333 1 
187 2 161 2 25 2 27 1 319 1 117 1 82 2 340 1 143 2 341 1 276 1 9 2 324 1 247 1 178 1 325 2 11 2 377 1 154 1 46 1 21 2 285 3 159 1 333 1 
187 3 325 3 355 1 316 1 356 1 92 1 81 2 95 1 154 1 319 1 340 1 341 1 304 2 143 3 21 1 276 1 285 4 177 1 7 1 159 1 122 1 221 1 9 1 
187 3 325 3 355 1 316 1 81 2 95 1 154 1 319 1 340 1 341 1 304 2 143 3 21 1 276 1 285 4 323 1 177 1 7 1 159 1 122 1 221 1 9 1 
187 1 319 1 325 1 143 1 159 1 198 1 
187 6 325 7 337 1 316 2 266 1 198 1 166 1 338 1 169 1 319 3 34 1 275 1 217 1 143 7 21 2 285 3 295 1 159 2 245 1 9 1 62 1 
161 1 210 2 106 1 211 1 315 1 266 1 319 1 2 3 58 1 59 1 321 1 176 2 9 1 324 1 124 4 178 2 325 1 65 2 11 2 12 1 14 2 280 1 227 2 132 1 21 1 285 1 135 1 74 1 187 1 235 2 25 1 27 1 80 1 82 2 143 1 371 6 85 1 250 1 345 1 346 2 43 2 153 1 256 3 46 1 308 1 159 1 352 1 
187 1 312 1 353 2 335 1 355 1 368 2 316 1 357 2 81 3 54 1 143 1 323 1 361 2 177 2 7 1 122 1 221 1 179 1 325 1 13 1 376 1 181 1 95 1 347 1 182 1 304 3 285 2 260 1 
187 2 325 2 266 1 198 1 319 2 217 1 143 2 21 1 244 1 285 2 7 1 159 1 9 1 
187 4 325 4 26 1 316 1 266 1 319 1 72 1 340 1 170 1 143 4 21 1 285 1 159 1 
187 2 325 2 337 1 267 1 319 2 143 2 3 1 243 1 21 1 276 1 285 1 295 1 159 1 9 1 
255 1 187 1 319 1 325 1 36 1 140 1 143 1 316 1 69 1 159 1 
187 2 325 2 266 1 319 1 275 1 143 2 21 1 285 1 159 1 362 1 62 1 
187 4 325 5 26 1 316 1 266 1 319 2 169 1 72 1 170 1 143 5 21 2 276 1 285 3 159 2 245 1 62 1 
187 4 325 5 26 1 316 1 266 1 318 1 319 2 169 1 72 1 170 1 143 5 21 2 276 1 285 3 159 2 62 1 
178 1 161 1 187 1 325 1 11 2 25 1 27 1 316 1 319 1 82 2 117 1 46 1 143 1 21 1 285 1 159 1 9 1 324 1 
187 1 325 1 337 1 166 1 319 2 217 1 143 1 21 1 276 1 285 1 295 1 159 1 9 1 
161 1 146 1 11 1 281 1 329 1 359 1 370 1 82 1 195 1 
223 1 67 1 329 1 
178 1 359 1 146 1 68 1 329 1 
247 1 178 1 146 2 355 1 223 1 225 1 329 1 81 2 67 1 68 2 377 1 359 2 182 1 18 1 304 2 122 1 221 1 333 1 263 1 
105 1 259 1 336 1 334 1 
105 1 336 1 4 1 332 1 220 1 160 1 334 1 
77 1 375 1 4 1 
278 1 105 1 336 1 127 1 197 1 215 1 207 2 4 3 160 1 220 1 332 3 334 1 
105 1 336 1 4 2 148 1 366 1 332 2 220 1 160 1 334 1 
313 1 336 1 127 1 342 1 69 1 255 1 4 1 160 1 220 1 332 1 49 1 
336 1 127 1 4 1 332 1 220 1 160 1 334 1 
105 1 127 1 4 1 332 1 220 1 160 1 334 2 
336 1 127 1 380 1 4 2 6 1 120 1 160 2 220 2 332 2 334 1 
105 1 78 1 336 2 127 1 188 1 148 2 4 3 101 1 160 1 220 1 332 3 334 1 49 1 
105 1 313 1 336 1 127 1 140 1 369 1 148 1 114 1 69 2 255 1 4 2 160 1 220 1 332 2 334 1 
105 1 336 2 127 1 196 1 148 2 4 4 101 1 160 2 220 2 332 4 366 1 334 1 49 1 
105 1 336 1 127 1 4 1 332 1 220 1 160 1 334 1 
278 1 105 2 336 3 148 2 215 1 284 1 207 1 4 4 101 1 332 4 160 1 220 1 334 2 49 1 
105 1 336 1 127 1 148 1 344 1 33 1 206 1 4 2 160 1 220 1 332 2 334 1 
278 2 105 1 336 1 127 1 215 1 207 2 45 1 4 3 160 1 220 1 332 3 334 1 
186 2 272 1 336 2 104 1 
270 1 127 1 4 1 332 1 220 1 160 1 
105 1 78 1 336 1 127 1 4 2 148 1 332 2 220 1 160 1 334 1 
229 1 
105 1 336 1 127 1 4 1 332 1 220 1 160 1 334 1 
105 1 78 1 336 1 207 1 127 1 4 3 148 1 332 3 220 1 160 1 334 1 
284 1 336 1 101 1 49 1 
336 1 334 1 

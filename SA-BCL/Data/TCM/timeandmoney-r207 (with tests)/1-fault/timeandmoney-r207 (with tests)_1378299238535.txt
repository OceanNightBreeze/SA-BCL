#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 1 291 3 190 1 59 1 166 1 250 2 293 1 118 5 167 6 145 1 39 2 274 1 220 9 46 2 175 2 129 1 225 1 306 1 377 1 105 9 108 4 267 2 354 1 288 2 382 2 235 1 114 1 355 1 
54 1 291 3 190 1 59 1 166 1 293 1 118 5 250 2 167 6 145 1 39 2 274 1 220 9 46 2 175 2 129 1 225 1 306 1 377 1 105 9 108 4 267 2 354 1 288 2 382 2 235 1 114 1 355 1 
54 1 291 4 190 1 59 1 166 1 293 1 118 6 250 2 167 7 145 1 39 2 274 1 220 10 46 2 175 2 129 1 225 1 306 1 377 1 105 10 108 5 267 2 354 1 288 2 382 2 235 1 114 1 355 1 
54 1 291 2 190 1 59 1 166 1 293 1 118 4 250 1 167 4 39 2 274 1 220 7 46 2 175 2 129 1 225 1 306 1 377 1 105 7 108 3 267 2 354 1 288 2 382 2 235 1 114 1 355 1 
291 1 175 1 190 1 166 1 250 2 118 3 167 3 306 1 145 1 105 4 39 1 274 1 108 2 382 1 288 1 220 4 235 1 46 1 
175 1 190 1 59 1 225 1 374 1 118 1 271 1 105 2 39 1 24 1 274 1 267 1 288 1 220 2 382 1 235 1 
291 1 39 2 274 1 190 1 108 1 267 1 118 2 293 1 167 1 220 3 288 2 235 1 105 3 
291 3 190 1 166 1 293 1 118 5 250 2 167 7 145 1 39 2 274 1 220 9 46 1 323 1 175 1 306 1 105 9 108 4 204 1 267 1 354 1 288 2 382 1 235 1 114 1 
291 3 190 1 166 1 293 1 118 5 250 2 167 7 145 1 39 2 274 1 220 9 46 1 323 1 175 1 306 1 105 9 108 4 204 1 267 1 354 1 288 2 382 1 235 1 114 1 
78 1 30 1 49 1 
3 2 30 1 255 1 
365 2 77 2 85 2 116 2 230 1 315 2 134 1 338 2 
188 1 53 1 236 1 85 2 33 1 116 2 315 2 211 1 6 1 61 1 334 1 91 1 365 2 215 2 92 2 299 1 252 1 336 2 338 3 68 1 340 2 371 1 322 1 97 1 72 1 277 1 132 1 75 1 345 1 106 1 265 1 77 3 158 2 230 1 134 1 135 1 186 1 
365 1 77 1 85 1 116 1 315 1 134 1 287 1 124 1 338 1 80 1 
69 1 85 1 343 1 17 1 58 1 20 1 246 1 375 1 49 1 77 1 30 1 338 1 368 1 80 1 
69 1 85 1 116 1 315 1 17 2 375 2 20 1 246 1 49 1 365 1 77 1 30 1 338 1 368 1 80 1 
14 1 379 1 283 1 17 1 375 1 
14 1 379 1 17 2 99 1 375 2 30 1 125 1 49 1 
14 1 17 1 375 1 
141 1 85 1 116 1 315 1 17 1 375 1 379 1 365 1 77 1 134 1 287 1 124 1 338 1 80 1 
30 1 
14 1 379 1 17 2 99 1 111 1 375 2 30 1 49 1 
14 2 289 1 4 2 17 5 360 1 99 1 332 1 375 5 35 1 49 1 36 1 104 2 272 2 379 2 273 1 296 1 300 1 30 1 113 1 
230 1 78 1 
85 2 116 1 315 1 365 1 77 2 230 2 148 1 254 1 338 2 
165 1 192 1 234 1 
340 1 188 1 322 1 236 1 371 1 53 1 277 1 211 1 132 1 363 1 77 1 158 1 230 1 135 1 336 1 338 1 
188 1 340 1 53 1 371 1 236 1 322 1 85 1 277 1 315 1 211 1 192 1 132 1 365 1 77 2 158 1 135 1 336 1 338 2 370 1 150 1 
85 5 116 1 315 4 343 1 365 4 181 1 77 5 308 1 230 1 275 1 254 1 338 5 150 2 370 1 
365 2 140 1 77 2 85 2 315 2 287 1 338 2 80 1 
365 3 77 3 85 3 116 1 230 1 315 3 338 3 150 1 
365 1 77 1 85 1 315 1 287 1 338 1 80 1 
365 1 77 1 85 1 116 1 315 1 148 1 254 1 338 1 80 1 
188 1 53 1 236 1 85 3 33 1 116 2 315 3 211 1 6 1 61 1 334 1 91 1 365 3 215 2 92 1 252 1 336 1 254 1 338 4 368 1 68 1 150 1 370 1 340 1 371 1 322 1 69 1 72 1 277 1 17 1 20 1 246 1 375 1 132 1 345 1 347 1 106 1 77 4 158 1 230 1 110 1 134 1 135 1 80 1 
365 1 181 1 77 2 85 2 230 1 315 1 343 1 338 2 150 1 
69 1 85 3 116 1 315 3 142 1 17 1 375 1 246 1 20 1 347 1 365 3 77 3 30 1 254 1 338 3 368 1 80 1 370 1 150 2 
365 2 77 2 85 2 116 1 315 2 165 1 192 1 254 1 338 2 150 1 
340 1 188 1 322 1 236 1 371 1 53 1 277 1 211 1 132 1 77 1 158 1 230 1 135 1 336 1 338 1 
340 1 188 1 322 1 236 1 371 1 53 1 211 1 132 1 77 1 158 1 351 1 230 1 42 1 336 1 338 1 
33 2 165 2 192 2 333 1 88 1 61 1 62 1 334 1 215 2 65 1 194 1 92 4 252 1 45 1 72 1 128 1 75 2 345 1 106 1 378 1 229 1 352 1 234 2 268 1 
69 1 365 1 140 1 77 1 85 1 315 1 338 1 80 1 
83 1 170 1 
83 1 170 1 
200 1 2 1 
200 1 2 1 
200 1 2 1 
83 1 214 1 170 1 
83 1 214 1 170 1 
295 1 83 1 170 1 
200 1 2 1 83 2 156 1 321 1 170 2 
83 1 214 1 170 1 
83 1 324 1 170 1 
83 1 324 1 170 1 
83 1 324 1 170 1 
237 1 83 1 85 2 55 1 315 2 292 1 170 1 121 1 365 2 295 1 242 1 9 1 367 1 338 2 47 1 17 1 375 1 227 1 101 1 157 1 77 2 230 1 29 1 185 1 
83 2 162 1 55 2 223 1 292 2 17 2 375 2 376 1 227 1 101 2 170 2 298 1 160 1 353 2 367 2 30 1 185 3 67 1 321 1 
175 1 382 1 46 1 
175 1 374 1 382 1 
258 1 175 3 143 1 79 1 374 1 46 2 
258 1 175 2 278 1 79 1 374 1 46 1 
258 2 175 2 79 1 374 1 46 1 
3 3 238 2 4 1 117 1 57 1 191 1 36 2 62 1 272 1 121 1 65 1 335 2 219 2 300 3 255 1 14 1 47 1 17 5 98 1 99 1 375 5 49 1 104 1 379 4 229 1 25 1 309 1 29 1 380 1 113 1 30 2 268 1 
3 9 330 1 238 6 4 2 57 2 191 2 36 6 62 3 272 2 296 1 123 1 65 3 147 1 219 6 301 1 300 8 255 3 14 6 47 4 17 9 99 1 375 9 49 1 104 2 280 5 379 7 229 3 283 5 266 1 25 3 232 1 309 1 30 5 113 1 268 3 
3 4 4 1 238 2 117 1 57 1 191 1 62 1 36 2 272 1 296 1 65 1 335 1 219 2 300 3 255 2 47 1 17 3 375 3 49 1 104 1 379 2 229 1 25 1 380 1 30 3 268 1 
3 7 238 4 330 1 4 1 117 1 57 1 191 1 62 2 36 4 272 1 296 1 65 2 335 2 147 1 219 4 300 5 255 3 47 2 17 4 375 4 49 1 104 1 379 3 229 2 25 2 232 1 380 1 30 4 268 2 
78 1 241 1 132 1 
153 1 132 1 
203 1 
53 1 371 1 132 1 
37 1 132 1 
53 1 132 1 
53 1 371 1 342 1 284 1 241 2 132 3 
33 3 333 3 22 1 251 1 75 4 88 2 228 1 23 1 229 1 40 1 65 1 184 1 52 1 92 7 245 1 310 1 303 2 
33 3 333 3 22 1 251 1 75 4 88 2 228 1 23 1 229 1 40 1 65 1 184 1 52 1 92 7 245 1 310 1 303 2 
33 3 86 1 333 3 22 1 251 1 75 4 88 2 228 1 23 1 229 1 40 1 65 1 52 1 184 1 92 7 245 1 310 1 303 2 
290 1 33 15 189 1 333 10 251 2 88 5 62 3 334 1 364 1 215 2 40 2 65 4 92 31 252 1 245 2 339 1 303 3 22 1 75 16 345 1 228 1 106 1 23 5 264 4 229 4 50 1 25 3 285 1 52 1 184 2 137 3 310 1 268 3 187 1 
33 4 333 4 251 1 88 3 334 2 364 1 215 4 40 1 65 1 92 9 252 2 245 1 303 2 22 1 75 5 345 2 106 2 23 1 229 1 107 1 184 1 52 1 310 1 311 1 
188 1 190 1 143 1 118 1 167 1 89 1 38 1 39 1 274 1 196 1 336 1 220 2 149 1 46 1 256 1 340 1 322 1 173 1 15 1 175 2 374 1 179 1 348 1 105 2 158 1 267 1 109 1 382 1 288 1 235 1 
188 1 190 1 143 1 118 1 167 2 89 1 38 1 39 1 196 1 336 1 220 3 149 1 46 1 256 1 340 1 322 1 173 1 15 1 175 2 372 1 374 1 326 1 179 1 105 3 158 1 267 1 205 1 382 1 288 1 235 1 
188 1 190 1 143 1 118 1 167 2 89 1 38 1 196 1 336 1 220 2 149 1 46 1 340 1 322 1 173 1 175 2 372 1 374 1 326 1 179 1 105 2 158 1 267 1 382 1 235 1 
188 1 53 1 357 1 5 1 211 1 87 1 144 1 38 2 39 1 171 1 320 1 196 2 336 1 220 1 340 1 322 1 173 2 132 1 105 1 158 1 267 2 205 1 288 1 
188 1 143 1 89 1 38 1 39 1 274 1 196 1 336 1 220 1 149 1 46 1 256 1 340 1 322 1 173 1 15 1 175 2 372 1 374 1 179 1 105 1 158 1 267 1 109 1 382 1 288 1 
297 1 
53 1 1 1 3 2 4 1 56 1 331 4 211 2 58 1 7 2 169 1 213 1 171 1 172 1 10 1 300 2 336 2 338 1 255 2 340 2 126 1 14 6 69 1 259 2 17 5 343 1 177 2 19 1 20 1 132 1 77 1 26 2 231 1 30 2 80 1 188 1 313 2 357 1 85 1 191 1 36 2 272 1 146 2 368 1 322 1 99 3 373 1 375 5 247 1 246 1 102 2 49 1 104 1 328 1 158 2 113 1 
14 2 69 1 85 1 331 2 17 3 343 1 99 1 373 1 58 1 246 1 375 3 19 1 247 1 20 1 169 1 328 1 77 1 26 1 111 1 368 1 338 1 80 1 
313 1 85 1 331 3 58 1 169 1 338 1 368 1 14 1 69 1 343 1 17 3 373 1 99 1 20 1 247 1 19 1 375 3 246 1 49 1 328 1 77 1 111 1 30 1 80 1 
313 1 85 1 331 3 58 1 7 1 169 1 338 1 368 1 69 1 14 2 343 1 17 3 99 1 373 1 20 1 247 1 19 1 375 3 246 1 49 1 328 1 77 1 26 1 111 1 30 1 80 1 
1 1 4 1 331 6 58 1 7 4 169 1 10 1 300 1 338 1 255 2 69 1 14 7 174 1 259 2 17 5 343 1 344 1 20 1 19 1 177 2 77 1 26 4 30 5 80 1 313 4 85 1 36 1 272 1 146 2 368 1 151 1 48 1 373 1 99 3 246 1 375 5 247 1 102 2 103 1 49 5 104 1 328 1 111 1 113 1 
1 1 3 2 4 1 331 4 58 1 7 2 169 1 10 1 300 1 338 1 255 2 69 1 14 4 126 1 259 2 343 1 17 4 20 1 19 1 177 2 77 1 26 2 30 2 80 1 313 2 85 1 36 1 272 1 146 2 368 1 373 1 99 2 246 1 375 4 247 1 102 2 49 1 104 1 328 1 113 1 
313 2 1 1 85 1 4 1 331 4 58 1 7 2 36 1 169 1 272 1 10 1 146 2 300 1 338 1 368 1 255 2 14 4 69 1 259 2 174 1 48 1 343 1 17 4 344 1 99 2 373 1 177 2 20 1 247 1 19 1 375 4 246 1 102 2 49 1 104 1 328 1 77 1 26 2 30 1 113 1 80 1 
313 2 1 1 85 1 4 1 331 4 58 1 7 2 36 1 169 1 272 1 10 1 146 2 300 1 338 1 368 1 255 2 14 4 69 1 259 2 174 1 48 1 343 1 17 4 344 1 99 2 373 1 177 2 20 1 247 1 19 1 375 4 246 1 102 2 49 1 104 1 328 1 77 1 26 2 30 1 113 1 80 1 
313 2 1 1 3 2 85 1 358 1 4 1 331 4 209 1 58 1 212 2 7 2 36 1 169 1 272 1 146 2 300 1 338 1 368 1 14 4 69 1 259 2 174 1 343 1 17 4 99 2 325 2 373 1 20 1 247 1 19 1 375 4 246 1 262 1 49 1 104 1 328 1 77 1 26 2 30 1 113 1 80 1 
1 1 313 3 85 1 4 1 331 5 58 1 7 3 36 1 169 1 272 1 10 1 146 2 300 1 338 1 368 1 255 2 151 1 69 1 14 5 259 2 174 1 48 1 343 1 17 4 344 1 99 2 373 1 177 2 20 1 247 1 19 1 375 4 246 1 102 2 49 1 104 1 328 1 77 1 26 3 30 1 113 1 80 1 
1 1 313 3 85 1 4 1 331 5 58 1 7 3 36 1 169 1 272 1 10 1 146 2 300 1 338 1 368 1 255 2 151 1 69 1 14 5 259 2 174 1 48 1 343 1 17 4 344 1 99 2 373 1 177 2 20 1 247 1 19 1 375 4 246 1 102 2 49 1 104 1 328 1 77 1 26 3 30 1 113 1 80 1 
1 1 3 2 4 1 331 4 58 1 212 2 7 2 169 1 300 1 338 1 69 1 14 4 126 1 259 2 343 1 17 4 20 1 19 1 77 1 26 2 30 1 80 1 313 2 85 1 358 1 36 1 272 1 146 2 368 1 373 1 325 2 99 2 246 1 375 4 247 1 49 1 104 1 328 1 113 1 
33 3 165 1 192 1 333 2 251 1 88 2 61 1 334 1 215 2 65 1 92 6 252 1 245 1 303 1 72 1 22 1 75 3 345 1 106 1 229 1 78 1 352 1 230 2 52 1 234 1 310 1 
290 1 33 6 270 1 165 4 333 2 192 11 88 1 193 1 61 1 62 2 334 2 91 1 215 4 65 1 92 14 252 2 72 2 178 1 75 8 345 2 23 1 106 2 265 1 264 3 229 2 230 1 25 2 159 1 286 1 234 11 137 3 268 1 187 1 
188 1 53 1 236 1 85 1 33 1 315 1 211 1 165 1 363 1 61 1 334 1 365 1 91 1 215 2 92 2 252 1 336 1 338 2 150 1 370 1 340 1 371 1 322 1 72 1 277 1 18 1 132 1 198 1 75 1 345 1 106 1 327 1 265 1 158 1 77 2 230 1 135 1 286 1 
53 2 211 1 165 7 333 8 251 1 61 3 62 2 334 3 215 6 65 3 216 2 252 3 336 3 338 3 303 1 257 1 68 2 340 3 72 3 22 1 132 2 75 10 345 3 23 4 265 1 229 3 77 3 230 2 25 2 135 2 234 7 310 1 268 2 188 2 236 2 32 1 85 1 33 10 315 1 239 2 192 7 88 4 91 1 365 1 243 1 92 20 245 1 370 1 150 1 322 2 371 2 276 2 372 1 277 2 106 3 158 3 52 1 286 1 112 2 
188 2 53 2 357 1 85 1 33 1 315 1 211 2 361 1 61 2 8 1 334 2 365 1 91 1 215 4 318 1 171 1 12 1 92 2 252 2 336 7 337 1 338 1 150 1 340 8 322 2 97 2 72 2 372 1 74 1 132 3 75 1 345 2 348 1 106 2 265 1 77 1 158 8 352 1 269 1 
85 1 116 1 33 2 315 1 165 1 333 1 192 1 88 1 61 1 62 1 334 1 365 1 215 2 65 1 92 3 252 1 93 1 254 1 338 1 72 1 75 1 345 1 106 1 229 1 77 1 25 1 286 1 234 1 268 1 
72 1 128 1 165 1 333 1 192 1 75 2 61 1 345 1 62 1 334 1 23 1 106 1 215 2 229 1 352 1 92 2 252 1 234 1 
72 1 33 2 165 1 333 1 192 1 88 1 61 1 345 1 334 1 106 1 215 2 65 1 352 1 92 2 194 1 252 1 234 1 268 1 
33 2 165 2 192 2 333 2 88 1 62 1 61 1 334 1 215 2 65 1 92 4 252 1 72 1 75 2 345 1 106 1 23 1 229 1 25 1 352 1 234 2 268 1 
72 1 128 1 165 1 74 1 333 1 192 1 75 2 61 1 345 1 62 1 334 1 23 1 106 1 215 2 229 1 92 2 252 1 234 1 
72 1 33 2 165 1 74 1 333 1 192 1 88 1 61 1 345 1 334 1 106 1 215 2 65 1 92 2 194 1 252 1 234 1 268 1 
33 2 165 2 192 2 333 2 88 1 62 1 61 1 334 1 215 2 65 1 92 4 252 1 72 1 74 1 75 2 345 1 106 1 23 1 229 1 25 1 234 2 268 1 
72 1 33 2 165 2 333 2 192 2 75 2 88 1 61 1 345 1 62 1 334 1 23 1 106 1 215 2 229 1 65 1 25 1 92 4 252 1 234 2 268 1 
188 1 53 1 236 1 33 1 211 1 61 1 334 1 91 1 215 2 92 2 252 1 336 1 338 1 68 1 340 1 371 1 322 1 72 1 277 1 132 1 75 1 345 1 106 1 265 1 158 1 77 1 230 1 135 1 
188 1 53 1 236 1 33 1 211 1 61 1 334 1 91 1 215 2 92 2 42 1 252 1 336 1 338 1 340 1 371 1 322 1 72 1 132 1 75 1 279 1 345 1 106 1 265 1 158 1 77 1 351 1 230 1 
33 2 165 2 192 2 333 2 88 1 62 1 61 1 334 1 215 2 65 1 92 4 252 1 72 1 75 2 345 1 106 1 23 1 229 1 25 1 286 1 234 2 268 1 
188 1 236 1 53 1 33 2 165 2 333 2 192 2 88 1 62 1 61 1 334 1 215 2 65 1 92 4 216 1 252 1 336 1 338 1 68 1 340 1 371 1 322 1 72 1 277 1 132 1 75 2 345 1 348 1 23 1 106 1 229 1 158 1 77 1 25 1 135 1 234 2 268 1 
85 1 33 1 116 1 315 1 165 1 333 1 192 1 61 1 62 1 334 1 365 1 215 2 65 1 92 3 252 1 254 1 338 1 95 1 72 1 75 2 345 1 23 1 106 1 229 1 77 1 25 1 286 1 234 1 268 1 
290 1 33 10 333 6 88 3 168 1 62 3 334 2 215 4 65 3 11 2 217 1 92 19 252 2 66 1 70 1 16 1 261 1 75 9 345 2 106 2 23 3 264 2 229 3 307 2 282 1 25 3 137 1 268 3 311 1 187 1 
115 1 314 1 290 2 33 12 333 4 88 2 168 1 62 3 334 3 364 2 215 6 65 2 11 1 92 26 252 3 44 1 66 2 70 1 260 1 261 1 226 1 75 14 345 3 349 1 23 2 106 3 264 2 229 3 307 4 282 2 25 3 137 2 268 2 311 1 
115 1 290 3 333 8 251 1 62 4 168 1 334 3 215 6 65 5 217 1 11 1 252 3 66 1 303 1 70 1 260 1 261 1 226 1 22 1 75 20 345 3 23 4 349 1 264 4 229 5 307 4 25 4 137 3 268 4 310 1 187 1 311 1 314 1 33 21 34 1 88 4 364 1 92 41 44 1 245 1 106 3 282 2 52 1 
115 1 314 1 290 3 33 18 34 1 333 7 251 1 88 4 168 1 62 4 334 4 364 2 215 8 65 4 11 1 217 1 92 38 252 4 44 1 245 1 66 1 303 1 70 1 260 1 261 1 226 1 22 1 75 20 345 4 349 1 106 4 23 3 264 4 229 5 307 4 282 2 25 4 52 1 137 3 310 1 268 3 311 1 187 1 
115 1 314 1 290 2 33 25 333 14 251 1 88 7 168 1 62 7 334 2 364 1 215 4 65 8 11 1 92 52 252 2 44 1 245 1 66 1 303 1 70 1 260 1 261 1 226 1 22 1 75 27 345 2 349 1 106 2 23 7 264 4 229 8 307 4 282 1 25 7 52 1 159 2 137 4 310 1 268 7 311 1 187 2 
127 1 83 1 162 1 55 1 292 1 367 1 101 1 67 1 321 1 170 1 
295 1 157 1 
71 1 83 1 55 1 292 1 130 1 218 1 367 1 101 1 170 1 
197 1 214 1 
317 1 324 1 156 1 
83 1 162 1 55 1 223 1 17 1 292 1 375 1 227 1 101 1 170 1 298 1 160 1 353 1 367 1 30 1 185 2 67 1 321 1 
83 1 162 1 55 1 223 1 17 1 292 1 375 1 227 1 101 1 170 1 298 1 160 1 353 1 367 1 30 1 185 2 67 1 321 1 
83 1 162 1 55 1 223 1 17 1 292 1 375 1 227 1 101 1 170 1 298 1 160 1 353 1 367 1 30 1 185 2 67 1 321 1 
156 1 197 1 214 1 
156 1 197 1 214 1 
317 1 324 1 
317 1 324 1 156 1 
237 1 9 1 
237 1 83 1 85 2 55 1 315 2 292 1 170 1 121 1 295 1 365 2 242 1 9 1 367 1 338 2 47 1 223 1 17 1 375 1 101 1 379 1 157 1 77 2 230 1 353 1 29 1 206 1 185 1 
188 1 53 1 85 2 33 1 164 1 361 1 61 1 334 1 91 1 215 2 318 1 64 1 92 2 252 1 336 2 338 2 340 2 322 1 97 2 72 1 305 1 132 1 21 1 75 1 345 1 106 1 265 1 158 2 77 2 248 1 286 1 
188 1 340 2 322 1 173 1 175 2 372 1 143 1 374 1 131 1 348 1 89 1 158 2 336 2 43 1 382 1 149 1 81 1 46 1 256 1 
340 1 188 1 322 1 173 1 175 2 372 1 143 1 374 1 199 1 89 1 158 1 336 1 382 1 149 1 81 1 46 1 256 1 
188 1 340 1 322 1 53 1 173 1 357 1 154 1 211 1 131 1 132 1 171 1 158 1 320 1 336 1 
340 1 188 1 322 1 173 1 175 2 372 1 143 1 374 1 131 1 89 1 158 1 336 1 43 1 382 1 149 1 81 1 46 1 256 1 
180 1 
289 1 78 1 332 1 300 1 30 1 49 1 36 1 
3 1 4 1 36 1 272 1 10 1 300 1 255 1 14 1 17 1 99 1 177 1 375 1 102 1 49 1 104 1 113 1 30 2 
53 3 289 1 3 12 4 4 211 1 332 1 60 1 62 2 63 2 172 1 65 2 219 6 300 9 336 3 255 6 340 3 14 5 304 2 176 1 342 1 17 5 132 10 348 1 76 1 229 2 25 2 27 1 136 2 30 8 268 2 188 3 312 2 139 2 356 2 238 6 241 2 191 2 362 2 36 8 272 4 37 2 369 2 322 4 371 3 276 2 153 3 99 3 246 2 375 5 49 2 104 4 202 1 158 3 113 4 
115 1 356 2 314 1 3 6 290 1 238 5 4 2 191 1 36 5 62 2 272 2 63 1 172 1 65 2 219 5 300 8 44 1 255 3 13 1 14 1 260 1 17 1 99 1 375 1 226 1 49 2 104 2 264 1 229 2 25 2 113 2 30 5 138 1 137 1 268 2 
356 2 141 1 85 1 4 1 116 1 315 1 251 1 36 2 272 1 365 1 63 1 65 1 300 2 245 1 124 1 338 1 302 1 48 1 17 1 375 1 104 1 229 2 77 1 134 1 287 1 113 1 80 1 310 1 
289 1 4 1 332 1 36 1 49 1 104 1 272 1 113 1 30 1 300 1 
276 1 356 2 3 10 238 5 62 2 36 5 229 2 63 1 65 2 25 2 219 5 30 5 300 5 255 5 268 2 
14 1 17 1 99 1 375 1 30 1 49 1 
188 1 53 1 357 1 4 2 56 1 211 2 191 2 60 2 36 2 272 2 120 1 122 1 296 1 171 1 172 2 336 4 300 2 340 4 322 1 14 4 17 3 99 2 375 3 132 1 104 2 202 1 158 4 231 1 113 1 
188 1 236 1 53 1 85 2 33 1 116 2 315 2 211 1 6 1 61 1 334 1 91 1 365 2 215 2 92 1 252 1 336 1 338 3 68 1 340 1 322 1 371 1 72 1 277 1 132 1 345 1 106 1 158 1 77 3 230 1 134 1 135 1 
3 4 238 2 4 1 191 1 36 2 49 2 104 1 272 1 172 1 219 2 113 1 300 1 30 4 255 2 303 1 
55 1 195 1 367 1 
55 1 195 1 367 1 
9 1 55 1 329 1 367 1 208 1 
55 1 195 1 367 1 
182 1 55 1 367 1 
182 1 55 1 367 1 
182 1 55 1 367 1 
55 1 367 1 
83 1 170 1 
33 4 333 3 22 1 75 4 251 1 88 2 345 2 334 2 23 1 106 2 364 1 229 1 215 4 65 1 52 1 92 8 252 2 245 1 310 1 303 1 
33 3 22 1 333 2 251 1 75 3 88 2 229 1 65 1 78 1 52 1 92 6 245 1 310 1 303 1 
33 2 333 2 100 1 75 2 88 1 345 1 62 1 334 1 106 1 23 1 215 2 229 1 65 1 25 1 92 4 252 1 268 1 
290 1 33 4 333 2 75 3 88 1 62 1 23 1 264 2 229 1 65 1 25 1 92 7 137 1 268 1 187 1 
33 12 270 1 333 9 251 2 88 5 62 2 334 2 364 2 215 4 65 3 92 23 252 2 245 2 303 1 22 1 75 11 345 2 23 4 106 2 264 2 229 3 25 2 52 1 159 1 137 2 249 1 310 1 268 2 187 1 
264 1 33 1 92 1 
92 1 75 1 137 1 
276 1 33 3 333 3 100 1 75 3 88 2 345 1 62 1 334 1 106 1 23 1 215 2 229 1 65 1 25 1 92 6 252 1 268 1 
115 1 314 1 290 1 33 6 333 2 88 1 62 2 334 1 215 2 65 2 92 12 252 1 44 1 260 1 226 1 75 6 345 1 23 1 106 1 264 1 229 2 25 2 137 1 268 2 311 1 
33 3 333 2 75 3 251 1 88 1 23 1 229 1 65 1 92 6 245 1 310 1 
33 2 333 2 22 1 75 1 251 1 88 1 345 1 334 1 23 1 364 1 106 1 215 2 52 1 92 3 252 1 245 1 249 1 
33 5 333 5 251 2 75 5 88 3 345 1 334 1 106 1 23 2 215 2 229 2 65 2 92 10 252 1 245 2 302 1 310 1 311 1 
333 1 75 2 345 1 62 1 334 1 106 1 23 1 215 2 229 1 92 2 252 1 311 1 
33 2 333 2 75 2 88 1 345 1 62 1 334 1 106 1 23 1 215 2 229 1 65 1 25 1 92 4 252 1 268 1 311 1 
33 2 333 2 251 1 75 1 88 1 345 3 334 3 364 1 106 3 23 1 215 6 217 1 92 3 252 3 245 1 249 1 311 1 
290 1 33 18 333 12 251 3 88 7 62 3 334 5 364 2 215 10 65 5 217 1 92 34 252 5 245 3 339 1 303 1 22 1 100 1 75 16 345 5 106 5 23 5 264 4 229 5 50 1 285 1 25 3 52 1 249 1 137 3 310 2 268 3 311 1 187 1 
314 1 290 1 33 4 333 2 251 1 88 2 334 1 215 2 65 1 92 8 252 1 245 1 303 1 22 1 75 4 345 1 106 1 264 1 229 1 52 1 137 1 310 1 311 1 
314 1 290 1 33 5 333 3 251 1 88 2 62 1 334 2 215 4 65 1 92 11 252 2 245 1 303 1 22 1 100 1 75 6 345 2 106 2 23 1 264 2 229 2 25 1 52 1 137 1 310 1 311 1 187 1 
115 1 314 1 290 1 33 10 333 4 251 1 88 3 62 2 334 3 364 1 215 6 65 3 92 19 252 3 44 1 245 1 303 1 260 1 226 1 22 1 100 1 75 9 345 3 23 1 106 3 264 1 229 3 25 2 52 1 137 1 310 1 268 2 311 1 
115 1 314 1 290 1 33 7 333 5 251 1 88 3 62 2 334 3 364 1 215 6 65 2 92 17 252 3 44 1 245 1 303 1 260 1 226 1 22 1 100 1 75 10 345 3 23 2 106 3 264 1 229 3 25 2 52 1 137 1 310 1 268 1 311 1 
314 1 290 1 33 4 333 2 251 1 88 2 334 1 215 2 65 1 92 8 252 1 245 1 303 1 22 1 75 4 345 1 106 1 264 1 229 1 52 1 137 1 310 1 311 1 
115 1 314 1 290 1 33 6 333 2 88 1 62 2 334 1 215 2 65 2 92 12 252 1 44 1 260 1 226 1 75 6 345 1 23 1 106 1 264 1 229 2 25 2 137 1 268 2 311 1 
115 1 314 1 290 1 33 8 333 5 251 1 88 3 62 2 334 4 364 2 215 8 65 2 92 18 252 4 44 1 245 1 303 1 260 1 226 1 22 1 100 1 75 10 345 4 23 2 106 4 264 1 229 3 25 2 52 1 137 1 310 1 268 1 311 1 
115 1 314 1 290 1 33 7 333 6 88 3 62 3 334 4 364 2 215 8 65 2 92 16 217 1 252 4 44 1 260 1 226 1 75 9 345 4 23 3 106 4 264 1 229 3 25 3 137 1 268 2 311 1 
33 4 22 1 333 6 251 3 75 3 88 3 23 3 229 1 65 1 52 2 92 7 245 3 310 1 
115 1 314 1 290 1 33 8 333 4 251 1 88 3 62 2 334 4 364 2 215 8 65 2 92 18 217 1 252 4 44 1 245 1 303 1 260 1 226 1 22 1 75 10 345 4 23 1 106 4 264 1 229 3 25 2 52 1 137 1 310 1 268 1 311 1 
77 1 85 1 181 1 230 1 343 1 210 1 338 1 
0 1 82 1 85 1 222 1 155 1 210 1 343 1 181 1 77 1 230 1 338 1 207 1 
188 1 340 1 322 1 53 1 357 1 171 1 158 1 78 1 211 1 132 1 336 1 
340 1 188 1 53 1 371 1 236 1 322 1 85 1 315 1 277 1 211 1 132 1 365 1 77 2 158 1 230 1 336 1 338 2 150 1 
340 1 188 1 139 1 69 1 53 2 371 2 236 1 322 1 85 2 315 2 277 1 132 3 60 1 365 1 37 1 77 2 158 1 230 1 336 1 368 1 338 2 80 1 150 1 
188 1 31 1 236 1 53 2 139 1 85 2 315 2 60 1 365 1 37 1 42 1 336 2 338 2 368 1 150 1 340 2 322 1 371 2 69 1 132 3 158 2 77 2 230 1 80 1 
188 1 31 1 139 1 53 1 211 1 241 1 60 1 90 1 37 1 336 3 340 3 14 1 322 1 371 1 153 1 341 1 17 2 375 2 246 1 132 4 49 1 158 3 30 1 
340 3 188 1 31 1 53 1 371 1 139 1 322 1 14 1 153 1 211 1 17 2 246 1 375 2 241 1 132 4 60 1 49 1 37 1 158 3 30 1 336 3 369 1 
188 1 340 1 322 1 158 1 12 1 336 1 
340 7 188 2 371 1 53 2 322 3 97 1 372 1 342 1 211 2 361 1 132 3 8 1 348 1 201 1 158 7 244 1 12 1 253 1 336 6 337 1 269 1 
188 1 53 1 236 1 85 1 33 3 315 1 165 1 192 1 333 2 251 1 88 2 61 2 334 2 365 1 215 4 65 1 92 6 216 1 252 2 336 1 245 1 338 2 303 1 150 1 68 1 340 1 371 1 322 1 72 2 277 1 22 1 132 1 75 3 345 2 348 1 106 2 229 1 77 2 158 1 230 2 52 1 248 1 286 1 135 1 112 1 234 1 310 1 
312 1 289 1 4 2 211 1 332 1 241 1 36 1 272 2 300 1 336 1 369 1 340 1 14 2 304 1 153 1 17 3 99 1 375 3 246 1 132 2 49 1 104 2 379 1 202 1 158 1 30 1 113 2 136 1 
188 1 340 2 322 2 53 1 371 1 76 1 158 2 342 1 12 1 241 1 132 2 336 2 348 1 
340 4 188 1 31 1 322 1 53 1 357 1 211 1 132 1 348 1 171 1 158 4 94 1 336 4 
340 2 188 1 371 1 53 1 322 2 32 1 132 1 60 1 158 2 350 1 244 1 28 1 253 1 336 2 
188 1 340 1 322 1 175 1 158 1 211 1 374 1 336 1 382 1 89 1 
188 1 340 2 322 1 53 1 158 2 372 1 361 1 132 1 21 1 336 2 348 1 
340 5 188 2 53 2 322 2 357 1 211 1 361 1 132 3 60 1 348 1 8 1 171 1 158 5 94 1 336 4 337 1 
340 5 188 2 53 2 322 2 357 1 211 1 361 1 132 3 60 1 348 1 8 1 171 1 158 5 94 1 336 4 381 1 
340 1 188 1 53 1 371 1 236 1 322 1 85 1 315 1 211 1 132 1 365 1 77 2 158 1 230 1 42 1 336 1 338 2 150 1 
340 1 188 1 371 1 53 1 322 2 342 1 132 1 60 1 201 1 158 1 244 1 253 1 336 1 
230 1 359 1 316 1 294 1 119 1 
69 1 152 1 359 1 17 2 246 1 375 2 20 1 294 2 316 2 263 1 49 1 119 2 347 1 379 1 230 1 30 1 368 1 80 1 96 1 
85 1 305 1 359 1 164 1 294 1 119 1 64 1 77 1 338 1 
152 1 359 1 263 1 
190 1 78 1 118 1 235 1 
39 1 190 1 118 1 220 1 288 1 235 1 105 1 
267 1 196 1 220 1 
73 1 84 1 190 1 225 2 118 1 346 1 105 3 39 1 274 1 288 1 220 3 235 1 
39 1 190 1 118 1 250 1 167 1 220 2 288 1 235 1 105 2 
39 1 175 1 274 1 108 1 118 1 306 1 382 1 220 1 288 1 46 1 105 1 
39 1 274 1 118 1 220 1 288 1 235 1 105 1 
39 1 274 1 190 1 220 1 288 1 235 2 105 1 
221 1 281 1 366 1 39 2 274 1 118 1 220 2 288 2 235 1 105 2 
291 1 190 1 118 2 167 2 105 3 39 1 274 1 108 1 354 1 288 1 220 3 235 1 114 1 
175 2 190 1 143 1 374 1 118 1 167 1 105 2 39 1 274 1 51 1 288 1 220 2 382 1 235 1 46 1 
291 1 39 2 274 1 190 1 108 1 118 2 250 1 167 2 145 1 220 4 288 2 235 1 105 4 
39 1 274 1 190 1 118 1 220 1 288 1 235 1 105 1 
84 1 73 1 291 1 190 2 225 1 118 3 167 2 105 4 39 1 108 1 161 1 220 4 288 1 235 2 
190 1 163 1 118 1 167 1 105 2 39 1 274 1 133 1 204 1 288 1 220 2 235 1 
73 1 84 2 190 1 225 2 118 1 105 3 39 1 274 1 41 1 288 1 220 3 235 1 
319 1 183 2 233 1 118 2 
39 1 274 1 240 1 220 1 288 1 105 1 
39 1 274 1 190 1 118 1 167 1 354 1 220 2 288 1 235 1 105 2 
224 1 
39 1 274 1 190 1 118 1 220 1 288 1 235 1 105 1 
190 1 225 1 118 1 167 1 105 3 39 1 274 1 354 1 288 1 220 3 235 1 
291 1 108 1 118 1 161 1 
118 1 235 1 

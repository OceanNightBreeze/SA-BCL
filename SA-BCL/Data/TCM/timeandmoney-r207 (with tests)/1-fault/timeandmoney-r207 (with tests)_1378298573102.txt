#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 43 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 1 240 1 367 2 133 3 372 1 242 2 359 2 309 3 321 1 349 1 122 1 44 1 256 1 
208 1 257 1 353 1 21 3 240 1 133 9 359 2 242 2 321 2 5 2 136 1 224 1 89 1 273 1 367 5 13 1 228 2 96 1 308 2 372 6 309 9 231 1 349 1 122 1 254 1 44 4 256 1 163 2 
208 1 257 1 353 1 21 3 240 1 133 9 359 2 242 2 321 2 5 2 136 1 224 1 89 1 273 1 367 5 13 1 228 2 96 1 308 2 372 6 309 9 231 1 349 1 122 1 254 1 44 4 256 1 163 2 
208 1 257 1 353 1 21 4 240 1 133 10 359 2 242 2 321 2 5 2 136 1 224 1 89 1 273 1 367 6 13 1 228 2 96 1 308 2 372 7 309 10 231 1 349 1 122 1 254 1 44 5 256 1 163 2 
208 1 257 1 353 1 21 2 240 1 133 7 359 2 242 2 321 2 5 2 136 1 224 1 89 1 273 1 367 4 13 1 228 1 308 2 372 4 309 7 231 1 349 1 122 1 254 1 44 3 256 1 163 2 
21 1 240 1 367 3 228 2 96 1 133 4 372 3 308 1 242 1 359 1 309 4 5 1 122 1 254 1 44 2 163 1 256 1 136 1 
367 1 240 1 260 1 22 1 133 2 242 1 359 1 309 2 321 1 5 1 122 1 256 1 163 1 350 1 89 1 224 1 
353 1 21 3 240 1 133 9 359 2 242 2 321 1 5 1 267 1 361 1 136 1 273 1 367 5 228 2 96 1 372 7 308 1 309 9 349 1 122 1 254 1 44 4 256 1 163 1 
353 1 21 3 240 1 133 9 359 2 242 2 321 1 5 1 267 1 361 1 136 1 273 1 367 5 228 2 96 1 372 7 308 1 309 9 349 1 122 1 254 1 44 4 256 1 163 1 
118 1 49 1 188 1 355 1 201 1 119 1 41 1 345 1 3 1 102 1 323 1 284 1 82 1 222 1 
216 1 
345 2 41 1 216 1 49 2 123 1 379 1 211 1 77 1 
143 1 304 1 49 5 249 2 277 1 331 2 230 1 97 1 111 1 100 1 77 1 296 1 41 2 345 5 216 1 170 1 123 2 379 1 71 2 
216 1 264 1 379 1 
216 1 291 1 140 2 
102 2 3 2 118 2 323 1 82 2 201 2 119 2 344 1 
287 1 189 1 23 1 334 2 167 1 317 1 3 2 78 1 28 1 322 1 268 1 323 1 192 2 31 1 81 1 82 2 270 2 221 1 153 1 340 1 247 1 118 2 200 1 12 1 201 2 251 1 63 2 119 3 344 1 102 3 101 1 67 1 377 1 182 2 47 1 236 1 72 1 
102 1 3 1 118 1 188 1 323 1 355 1 82 1 201 1 119 1 222 1 
364 1 118 1 275 1 49 1 130 1 355 1 119 1 146 1 102 1 345 1 216 1 379 1 70 1 245 1 
118 1 275 1 49 2 130 1 355 1 201 1 119 1 345 2 3 1 102 1 216 1 82 1 379 1 70 1 245 1 
345 1 41 1 49 1 123 1 285 1 
345 2 41 1 216 1 49 2 123 1 379 1 56 1 77 1 
345 1 49 1 123 1 
226 1 118 2 278 1 201 1 119 2 344 2 102 2 3 1 82 1 
232 1 108 1 380 1 
200 1 63 1 119 1 344 1 167 1 102 1 101 1 67 1 322 1 192 1 31 1 270 1 221 1 194 1 340 1 72 1 
264 1 344 1 
364 1 226 1 118 5 201 1 333 2 119 5 344 1 295 1 3 4 102 5 338 1 82 4 204 1 33 1 
102 2 3 2 118 2 60 1 355 1 82 2 119 2 222 1 
118 1 108 1 200 1 333 1 63 1 119 2 167 1 295 1 101 1 3 1 102 2 322 1 67 1 192 1 31 1 82 1 221 1 270 1 340 1 72 1 
102 3 3 3 118 3 201 1 82 3 333 1 119 3 344 1 
102 1 3 1 118 1 355 1 82 1 119 1 222 1 
102 1 3 1 226 1 118 1 355 1 278 1 82 1 201 1 119 1 
49 1 287 1 189 1 130 1 355 1 23 1 333 1 334 2 167 1 317 1 295 1 3 3 78 1 114 1 322 1 323 1 192 1 151 1 31 1 81 1 82 3 221 1 270 1 153 1 245 1 340 1 226 1 118 3 275 1 200 1 12 1 201 2 251 1 63 1 119 4 344 1 101 1 102 4 345 1 67 1 377 1 182 1 70 1 72 1 
364 1 102 2 3 1 118 2 82 1 333 1 119 2 344 1 33 1 
226 1 118 3 275 1 49 1 276 1 355 1 130 1 201 1 333 2 119 3 295 1 345 1 3 3 102 3 216 1 114 1 82 3 245 1 70 1 
226 1 118 2 108 1 201 1 333 1 119 2 3 2 102 2 82 2 380 1 
200 1 63 1 119 1 344 1 167 1 102 1 101 1 67 1 322 1 192 1 31 1 270 1 221 1 340 1 72 1 
200 1 63 1 119 1 344 1 167 1 102 1 101 1 179 1 322 1 192 1 31 1 270 1 221 1 72 1 197 1 
286 1 108 2 20 1 287 2 189 1 52 1 23 1 334 2 25 1 191 1 268 2 81 1 153 1 272 1 117 1 12 1 251 1 370 1 232 2 311 1 17 1 182 4 380 2 351 1 
102 1 3 1 118 1 355 1 130 1 60 1 82 1 119 1 
215 1 261 1 155 1 
354 1 312 1 157 1 261 2 138 1 155 2 
261 1 155 1 
261 1 155 1 
157 1 138 1 
157 1 138 1 
157 1 138 1 
261 1 121 1 155 1 
261 1 121 1 155 1 
261 1 121 1 155 1 
205 1 261 1 155 1 
205 1 261 1 155 1 
205 1 261 1 155 1 
49 1 261 1 132 1 2 1 3 2 215 1 263 1 244 1 325 1 115 1 82 2 195 1 87 1 155 1 88 1 225 1 248 1 118 2 329 1 119 2 344 1 345 1 102 2 253 1 
248 3 49 2 354 1 61 1 132 2 261 2 335 1 345 2 216 1 244 2 253 2 233 1 6 1 7 2 195 1 48 1 87 2 363 1 155 2 
15 2 260 1 219 1 163 2 308 1 
5 1 163 1 308 1 
5 1 260 1 163 1 
15 1 161 1 260 1 219 1 163 3 308 2 
15 1 347 1 260 1 219 1 163 2 308 1 
143 3 286 1 49 5 0 1 52 1 291 1 356 1 166 1 1 1 358 2 2 1 77 1 296 1 263 1 216 2 266 1 300 2 220 1 225 1 249 1 93 2 94 1 331 1 370 1 100 2 345 5 41 4 17 1 140 3 123 1 379 1 71 1 
143 8 286 3 49 9 0 2 52 3 291 3 356 1 77 1 296 1 216 5 299 1 266 3 193 1 326 5 300 6 220 2 8 1 304 1 225 4 249 2 11 1 93 6 331 2 370 3 177 1 100 6 345 9 41 7 17 3 140 9 123 6 379 1 124 1 285 5 71 2 
143 3 286 1 49 3 0 1 52 1 291 2 1 1 358 1 216 3 266 1 220 1 300 2 304 1 225 1 249 1 93 2 94 1 331 1 370 1 100 2 41 2 345 3 17 1 140 4 379 1 71 1 
143 5 286 2 49 4 0 1 52 2 291 3 1 1 358 2 216 4 266 2 300 4 220 1 304 1 225 2 249 1 11 1 93 4 94 1 331 1 370 2 177 1 100 4 345 4 41 3 17 2 140 7 379 1 124 1 71 1 
148 1 
264 1 64 1 167 1 
54 1 167 1 
322 1 200 1 167 1 
167 1 154 1 
322 1 167 1 
322 1 200 1 64 2 167 3 223 1 184 1 
286 1 287 3 128 1 259 1 368 1 158 1 25 2 297 1 217 1 134 1 268 4 311 3 17 1 180 1 182 7 103 2 172 1 164 1 
107 4 286 4 128 1 74 3 287 15 189 1 259 2 241 1 23 1 52 3 76 1 334 2 25 5 297 2 134 1 217 2 243 1 266 3 268 16 153 1 172 5 305 1 92 1 12 1 368 1 158 1 370 3 162 1 311 10 17 4 255 1 182 31 103 3 164 2 
286 1 287 4 128 1 189 2 190 1 259 1 241 1 23 2 334 4 25 3 297 1 134 1 217 1 268 5 153 2 172 1 12 2 368 1 14 1 311 4 17 1 182 9 103 2 164 1 
286 1 287 3 128 1 259 1 368 1 158 1 25 2 297 1 217 1 134 1 268 4 311 3 17 1 182 7 103 2 172 1 164 1 
286 1 287 3 128 1 259 1 368 1 158 1 25 2 297 1 217 1 134 1 268 4 311 3 17 1 182 7 103 2 172 1 164 1 
352 2 9 1 59 1 109 1 62 1 63 1 292 2 293 1 167 1 133 1 242 1 359 1 309 1 321 2 79 1 322 1 192 1 282 1 31 1 221 1 270 1 18 2 72 1 
352 1 127 1 260 1 292 1 133 1 112 1 359 1 242 1 321 1 5 1 192 1 270 1 221 1 63 1 120 1 308 1 309 1 42 1 310 1 161 1 203 1 18 1 256 1 104 1 163 2 72 1 
352 1 127 1 240 1 260 1 292 1 133 2 112 1 359 1 242 1 321 1 5 1 80 1 192 1 270 1 221 1 367 1 63 1 120 1 372 1 308 1 309 2 42 1 161 1 122 1 203 1 18 1 256 1 104 1 163 2 72 1 
352 1 127 1 240 1 260 1 292 1 293 1 133 3 359 1 242 1 321 1 5 1 192 1 270 1 221 1 367 1 63 1 120 1 308 1 372 2 309 3 42 1 161 1 310 1 122 1 203 1 18 1 104 1 163 2 72 1 186 1 
352 1 127 1 240 1 260 1 292 1 133 2 321 1 5 1 192 1 270 1 221 1 367 1 63 1 120 1 372 2 308 1 309 2 42 1 310 1 161 1 122 1 18 1 163 2 72 1 186 1 
330 1 
143 2 187 2 49 5 0 1 50 1 291 2 109 1 110 2 146 1 296 1 192 2 245 1 55 2 118 1 249 1 156 1 63 2 119 1 345 5 346 1 123 6 70 1 71 1 72 1 313 1 130 1 355 1 24 1 167 1 168 2 212 2 213 1 77 3 216 2 322 1 31 2 32 1 270 2 221 1 271 1 364 1 275 1 274 1 175 1 331 1 369 1 100 2 178 1 40 4 102 1 332 2 282 1 234 2 140 2 379 1 
364 1 313 1 118 1 187 1 275 1 49 3 355 1 130 1 175 1 24 1 119 1 211 1 213 1 77 1 146 1 40 2 345 3 102 1 32 1 123 2 245 1 70 1 
364 1 313 1 118 1 275 1 49 3 355 1 130 1 175 1 24 1 119 1 211 1 110 1 213 1 77 1 146 1 40 3 345 3 102 1 216 1 32 1 123 1 379 1 245 1 70 1 
313 1 187 1 49 3 130 1 355 1 24 1 211 1 110 1 213 1 168 1 77 1 146 1 216 1 32 1 245 1 364 1 118 1 275 1 175 1 119 1 40 3 102 1 345 3 123 2 379 1 70 1 
143 1 187 4 49 5 291 2 110 4 146 1 296 1 298 1 245 1 55 2 118 1 249 1 119 1 345 5 123 7 70 1 71 1 125 1 313 1 355 1 130 1 24 1 211 1 316 1 168 4 213 1 212 2 77 3 216 5 32 1 86 1 364 1 90 1 275 1 274 1 175 1 331 1 100 1 40 6 178 1 102 1 332 2 234 2 379 5 
143 1 187 2 49 4 291 2 110 2 146 1 296 1 245 1 55 2 118 1 249 1 119 1 345 4 346 1 123 4 70 1 71 1 313 1 355 1 130 1 24 1 213 1 212 2 168 2 77 2 216 2 32 1 364 1 274 1 275 1 175 1 331 1 100 1 40 4 178 1 102 1 332 2 234 2 140 2 379 1 
143 1 313 1 187 2 49 4 130 1 355 1 24 1 291 2 110 2 168 2 212 2 213 1 77 2 146 1 296 1 216 1 298 1 32 1 86 1 245 1 55 2 364 1 118 1 274 1 275 1 249 1 175 1 119 1 331 1 100 1 178 1 40 4 102 1 345 4 332 2 234 2 123 4 379 1 70 1 71 1 125 1 
143 1 313 1 187 2 49 4 130 1 355 1 24 1 291 2 110 2 168 2 212 2 213 1 77 2 146 1 296 1 216 1 298 1 32 1 86 1 245 1 55 2 364 1 118 1 274 1 275 1 249 1 175 1 119 1 331 1 100 1 178 1 40 4 102 1 345 4 332 2 234 2 123 4 379 1 70 1 71 1 125 1 
364 1 313 1 118 1 275 1 49 2 355 1 130 1 175 1 24 1 119 1 213 1 146 1 40 2 345 2 102 1 43 1 32 1 245 1 70 1 
143 1 313 1 187 3 49 4 130 1 355 1 24 1 291 2 110 3 212 2 213 1 168 3 77 2 146 1 296 1 216 1 298 1 32 1 86 1 245 1 55 2 364 1 118 1 90 1 274 1 275 1 249 1 175 1 119 1 331 1 100 1 178 1 40 5 102 1 345 4 332 2 234 2 123 5 379 1 70 1 71 1 125 1 
143 1 313 1 187 3 49 4 130 1 355 1 24 1 291 2 110 3 212 2 213 1 168 3 77 2 146 1 296 1 216 1 298 1 32 1 86 1 245 1 55 2 364 1 118 1 90 1 274 1 275 1 249 1 175 1 119 1 331 1 100 1 178 1 40 5 102 1 345 4 332 2 234 2 123 5 379 1 70 1 71 1 125 1 
143 1 313 1 187 2 49 4 130 1 355 1 24 1 110 2 168 2 212 2 213 1 77 2 146 1 296 1 216 1 26 1 32 1 245 1 341 2 364 1 118 1 275 1 249 1 175 1 119 1 331 1 37 2 100 1 178 1 40 4 345 4 102 1 346 1 332 2 123 4 140 2 379 1 70 1 71 1 
287 1 189 2 23 2 333 1 109 1 167 3 334 4 191 1 3 1 80 1 322 2 192 8 268 1 31 2 82 1 81 2 221 2 270 8 153 2 247 2 196 1 118 1 58 1 12 2 63 7 251 2 119 1 36 1 139 1 102 1 374 1 310 1 282 1 377 1 182 2 141 1 236 1 72 2 239 1 
108 1 286 1 287 2 189 1 129 1 23 1 52 1 334 2 25 1 3 1 266 1 268 1 81 1 82 1 153 1 226 1 118 1 12 1 201 1 251 1 119 1 370 1 102 1 232 1 311 1 283 1 17 1 182 3 380 1 
108 1 286 1 128 1 287 3 189 1 23 1 334 2 25 2 297 1 191 1 134 1 217 1 264 1 268 3 81 1 153 1 12 1 251 1 368 1 344 2 232 1 311 2 17 1 182 6 103 1 380 1 
107 3 108 11 286 1 287 6 74 3 189 2 23 2 52 1 76 1 334 4 25 1 319 1 266 2 268 8 81 1 153 2 172 1 306 1 12 2 251 2 344 1 370 2 280 1 66 1 232 11 311 2 162 1 283 1 17 2 377 1 182 14 236 1 380 4 
287 1 189 1 290 1 23 1 333 1 167 1 334 2 295 1 3 1 322 1 192 1 268 1 31 1 81 1 82 1 221 1 270 1 194 1 153 1 340 1 118 1 200 1 12 1 63 1 251 1 119 2 344 1 101 1 102 2 67 1 283 1 45 1 377 1 182 2 236 1 72 1 380 1 185 1 
286 3 108 7 287 10 189 3 288 1 144 2 51 2 52 2 333 1 334 6 295 1 297 1 3 1 192 3 153 3 340 2 118 1 200 2 12 3 63 3 251 3 119 3 344 2 68 1 67 2 310 1 311 8 17 3 72 2 19 2 128 1 23 3 262 1 167 2 25 4 317 2 217 1 134 1 322 2 266 2 268 10 31 1 82 1 81 3 270 3 221 2 172 4 368 1 370 2 99 2 102 3 101 2 232 7 283 1 377 1 182 20 103 1 236 1 380 7 
108 1 20 1 189 1 12 1 23 1 251 1 334 2 370 1 191 1 232 1 268 2 311 1 17 1 81 1 182 2 153 1 380 1 172 1 
117 1 108 1 286 1 287 2 189 1 12 1 23 1 52 1 251 1 334 2 25 1 191 1 232 1 311 1 81 1 182 2 153 1 380 1 
108 2 286 1 287 2 189 1 23 1 52 1 334 2 25 1 191 1 266 1 268 2 81 1 153 1 172 1 12 1 251 1 370 1 232 2 311 2 17 1 182 4 380 2 
58 1 108 1 20 1 189 1 12 1 23 1 251 1 334 2 370 1 232 1 268 2 311 1 17 1 81 1 182 2 153 1 380 1 172 1 
58 1 117 1 108 1 286 1 287 2 189 1 12 1 23 1 52 1 251 1 334 2 25 1 232 1 311 1 81 1 182 2 153 1 380 1 
108 2 286 1 287 2 189 1 23 1 52 1 334 2 25 1 266 1 268 2 81 1 153 1 172 1 58 1 12 1 251 1 370 1 232 2 311 2 17 1 182 4 380 2 
108 2 286 1 287 2 189 1 23 1 52 1 334 2 25 1 266 1 268 2 81 1 153 1 172 1 12 1 251 1 370 1 232 2 311 2 17 1 182 4 380 2 
287 1 189 1 23 1 167 1 334 2 317 1 322 1 268 1 192 1 31 1 81 1 221 1 270 1 153 1 340 1 200 1 12 1 63 1 251 1 119 1 344 1 101 1 102 1 67 1 377 1 182 2 236 1 72 1 
287 1 189 1 23 1 167 1 334 2 53 1 322 1 268 1 192 1 31 1 81 1 221 1 270 1 153 1 197 1 200 1 12 1 63 1 251 1 119 1 344 1 101 1 102 1 179 1 377 1 182 2 236 1 72 1 
108 2 286 1 287 2 189 1 23 1 52 1 334 2 25 1 266 1 268 2 81 1 153 1 172 1 12 1 251 1 370 1 232 2 311 2 17 1 283 1 182 4 380 2 
286 1 108 2 287 2 189 1 144 1 52 1 23 1 167 1 334 2 25 1 317 1 80 1 322 1 266 1 268 2 192 1 81 1 221 1 270 1 153 1 340 1 172 1 200 1 12 1 63 1 251 1 119 1 370 1 101 1 102 1 232 2 67 1 311 2 17 1 182 4 72 1 380 2 
286 1 108 1 287 1 189 1 52 1 23 1 334 2 294 1 3 1 266 1 268 2 81 1 82 1 153 1 172 1 226 1 118 1 12 1 201 1 251 1 119 1 370 1 102 1 232 1 311 1 283 1 17 1 182 3 380 1 
107 4 286 5 287 21 190 1 189 3 241 1 52 4 334 6 297 1 149 1 153 3 343 1 10 1 12 3 250 1 16 1 311 8 162 1 17 5 207 1 73 1 74 3 128 1 23 3 131 1 76 3 318 2 25 4 134 1 217 1 266 4 268 20 324 4 327 1 172 4 368 1 370 4 281 1 375 1 376 1 182 41 183 1 103 1 
73 1 107 4 286 4 128 1 287 18 74 3 189 4 190 1 241 2 131 1 23 4 52 3 76 3 334 8 25 4 318 2 297 1 217 1 134 1 149 1 266 4 324 4 268 20 327 1 153 4 172 3 10 1 343 1 250 1 12 4 368 1 370 4 281 1 376 1 375 1 16 1 162 1 311 7 17 5 182 38 103 1 183 1 207 1 
73 1 107 4 286 8 128 1 287 25 74 4 189 2 190 1 241 1 23 2 52 7 76 2 334 4 25 7 318 1 297 1 217 1 134 1 149 1 266 7 324 4 268 27 327 1 153 2 172 7 343 1 250 1 12 2 368 1 370 7 66 2 281 1 376 1 375 1 16 1 162 2 311 14 17 8 182 52 103 1 183 1 207 1 
73 2 107 2 286 3 75 1 287 10 74 1 189 2 190 1 131 1 23 2 52 3 76 1 334 4 25 3 318 1 266 3 324 2 268 9 153 2 172 3 343 1 250 1 12 2 370 3 375 1 162 1 311 6 17 3 182 19 183 1 
73 1 107 2 286 2 287 12 74 2 189 3 190 1 241 2 23 3 52 2 76 2 334 6 25 2 318 2 149 1 266 3 324 4 268 14 327 1 153 3 172 2 343 1 250 2 12 3 370 3 281 1 375 1 376 1 16 1 311 4 17 3 182 26 183 1 207 1 
209 1 244 1 354 1 253 1 233 1 261 1 132 1 87 1 335 1 155 1 
215 1 329 1 
174 1 244 1 337 1 253 1 261 1 132 1 206 1 87 1 155 1 
121 1 301 1 
312 1 205 1 105 1 
248 2 49 1 354 1 61 1 132 1 261 1 335 1 345 1 216 1 244 1 253 1 233 1 6 1 7 1 195 1 87 1 363 1 155 1 
248 2 49 1 354 1 61 1 132 1 261 1 335 1 345 1 216 1 244 1 253 1 233 1 6 1 7 1 195 1 87 1 363 1 155 1 
248 2 49 1 354 1 61 1 132 1 261 1 335 1 345 1 216 1 244 1 253 1 233 1 6 1 7 1 195 1 87 1 363 1 155 1 
312 1 121 1 301 1 
312 1 121 1 301 1 
205 1 105 1 
312 1 205 1 105 1 
115 1 88 1 
49 1 261 1 132 1 2 1 215 1 3 2 263 1 244 1 218 1 325 1 115 1 82 2 7 1 363 1 87 1 155 1 88 1 225 1 248 1 118 2 329 1 119 2 344 1 102 2 345 1 41 1 253 1 
314 1 315 1 287 1 189 1 23 1 357 1 167 1 334 2 322 1 192 2 268 1 81 1 221 1 270 2 339 1 153 1 247 2 118 2 12 1 251 1 63 2 119 2 36 1 102 2 373 1 283 1 377 1 182 2 141 1 236 1 72 1 
9 1 137 1 63 1 109 1 292 1 167 1 336 1 322 1 192 1 31 1 282 1 221 1 270 1 72 1 
137 1 127 1 260 1 63 1 292 1 308 1 42 1 5 1 265 1 192 1 161 1 310 1 269 1 270 1 221 1 163 2 104 1 72 1 
137 1 127 1 260 1 63 2 292 1 308 1 42 1 5 1 80 1 265 1 192 2 161 1 310 1 269 1 221 1 270 2 163 2 104 1 72 1 
127 1 260 1 63 1 292 1 98 1 308 1 42 1 5 1 265 1 192 1 161 1 310 1 270 1 221 1 163 2 104 1 72 1 
366 1 
143 1 249 1 277 1 331 1 100 1 296 1 216 1 170 1 379 1 71 1 
143 5 286 2 289 1 93 5 51 1 52 2 291 5 370 2 100 5 147 2 216 5 266 2 17 2 300 5 140 10 
345 1 216 1 49 1 123 1 379 1 77 1 
143 2 49 3 0 2 50 2 109 1 167 1 77 2 296 1 113 1 322 1 192 4 31 2 221 1 270 4 304 1 249 2 156 1 63 4 252 2 369 1 331 2 100 2 345 3 348 1 282 1 123 4 72 1 71 2 126 1 
143 1 216 1 264 1 277 1 170 1 379 1 100 1 
143 1 274 1 49 1 249 1 291 1 331 1 77 1 100 1 296 1 345 1 216 2 234 1 123 1 140 1 379 1 55 1 71 1 
143 9 49 5 286 2 0 2 289 2 50 1 51 2 52 2 291 6 296 4 113 1 147 2 192 3 300 6 54 3 245 2 154 2 198 1 199 2 249 4 200 3 63 3 252 1 64 2 159 1 160 2 345 5 17 2 123 5 72 4 71 4 167 10 77 3 360 2 216 8 80 1 322 3 266 2 170 1 31 1 83 2 362 2 221 3 270 3 365 2 93 6 277 1 331 4 370 2 100 8 140 12 379 2 238 1 184 1 
143 8 107 1 49 1 286 2 74 1 0 1 289 1 50 1 52 2 291 3 76 1 77 1 296 2 147 2 216 5 149 1 266 2 300 5 327 1 34 1 249 2 93 5 331 2 370 2 38 1 100 5 345 1 281 1 376 1 17 2 123 1 140 6 379 2 207 1 71 2 
143 2 49 1 286 1 188 1 289 1 355 1 320 1 296 1 297 1 3 1 147 2 217 1 298 1 323 1 82 1 222 1 118 1 249 1 201 1 368 1 119 1 331 1 100 2 102 1 345 1 17 2 284 1 71 1 
287 1 189 1 23 1 334 2 167 1 317 1 3 2 78 1 322 1 192 1 323 1 31 1 82 2 81 1 270 1 221 1 153 1 340 1 118 2 200 1 12 1 201 2 63 1 251 1 119 3 344 1 102 3 101 1 67 1 377 1 182 1 72 1 
143 1 249 1 93 2 0 1 50 1 291 2 331 1 100 2 296 1 216 4 140 4 300 2 379 2 103 1 71 1 
244 1 145 1 87 1 335 1 88 1 
244 1 152 1 87 1 
244 1 152 1 87 1 
244 1 152 1 87 1 
244 1 106 1 87 1 
244 1 106 1 87 1 
244 1 106 1 87 1 
244 1 87 1 
261 1 155 1 
107 1 286 1 74 1 287 4 128 1 189 1 190 1 23 1 76 1 334 2 25 2 297 1 134 1 217 1 268 4 153 1 12 1 368 1 281 1 311 2 17 1 182 8 103 1 
107 2 286 1 128 1 287 5 74 1 190 1 189 2 23 2 76 1 334 4 25 2 297 1 217 1 134 1 266 1 268 6 153 2 57 1 172 1 12 2 368 1 370 1 281 1 162 1 311 3 17 2 182 11 103 1 
107 1 286 3 128 1 74 1 287 10 189 3 190 1 241 1 23 3 52 2 76 1 334 6 25 3 297 1 217 1 134 1 149 1 266 2 268 9 327 1 153 3 57 1 172 1 12 3 368 1 370 2 281 1 376 1 311 4 17 3 182 19 103 1 207 1 
107 1 286 2 128 1 74 1 287 7 189 3 190 1 241 1 23 3 52 1 76 1 334 6 25 3 297 1 217 1 134 1 149 1 266 2 268 10 327 1 153 3 57 1 172 2 12 3 368 1 370 2 281 1 376 1 311 5 17 3 182 17 103 1 207 1 
107 1 286 1 74 1 287 4 128 1 189 1 190 1 23 1 76 1 334 2 25 2 297 1 134 1 217 1 268 4 153 1 12 1 368 1 281 1 311 2 17 1 182 8 103 1 
107 1 286 2 74 1 287 6 189 1 190 1 23 1 52 2 76 1 334 2 25 1 149 1 266 2 268 6 327 1 153 1 172 1 12 1 370 2 281 1 376 1 311 2 17 2 182 12 207 1 
107 1 286 2 128 1 287 8 74 1 189 4 190 1 241 2 23 4 52 1 76 1 334 8 25 3 297 1 217 1 134 1 149 1 266 2 268 10 327 1 153 4 57 1 172 2 12 4 368 1 370 2 281 1 376 1 311 5 17 3 182 18 103 1 207 1 
107 1 286 2 287 7 74 1 190 1 189 4 241 2 23 4 131 1 52 2 76 1 334 8 25 3 149 1 266 3 268 9 327 1 153 4 172 3 12 4 370 3 281 1 376 1 311 6 17 3 182 16 207 1 
286 1 287 4 128 1 368 1 25 3 297 3 134 2 217 3 268 3 311 6 17 1 182 7 172 3 
107 1 286 2 128 1 287 8 74 1 190 1 189 4 241 2 23 4 131 1 52 1 76 1 334 8 25 3 297 1 217 1 134 1 149 1 266 2 268 10 327 1 153 4 172 1 12 4 368 1 370 2 281 1 376 1 311 4 17 3 182 18 103 1 207 1 
286 2 287 5 189 1 190 1 12 1 23 1 368 1 334 2 25 3 320 1 297 2 217 2 268 5 311 5 17 2 182 10 153 1 172 2 
190 1 189 1 12 1 23 1 334 2 370 1 268 2 311 1 17 1 182 2 153 1 172 1 
286 1 287 2 190 1 189 1 12 1 52 1 23 1 334 2 370 1 25 1 266 1 268 2 311 2 17 1 182 4 153 1 172 1 
287 2 190 1 189 3 241 1 12 3 131 1 23 3 334 6 25 1 297 1 217 1 4 1 268 1 311 2 182 3 153 3 172 1 
107 4 286 5 128 1 287 18 74 3 189 5 190 1 241 2 131 1 23 5 52 3 76 1 334 10 25 7 297 3 217 3 134 1 243 1 4 1 266 3 268 16 153 5 57 1 172 5 305 1 12 5 368 2 370 3 162 1 311 12 17 5 255 1 182 34 103 1 
286 1 287 4 128 1 189 2 12 2 241 1 23 2 368 1 334 4 25 2 297 1 134 1 217 1 268 4 311 3 17 1 182 8 103 1 153 2 172 1 
286 1 287 3 128 1 368 1 25 2 297 1 134 1 217 1 264 1 268 3 311 2 17 1 182 6 103 1 
286 1 287 2 189 1 12 1 52 1 23 1 334 2 370 1 25 1 266 1 268 2 311 2 17 1 182 4 153 1 57 1 172 1 
107 2 286 1 287 4 74 1 52 1 76 1 370 1 25 1 266 1 268 3 162 1 311 2 17 1 182 7 172 1 
107 2 286 3 128 1 74 2 287 12 189 2 241 2 52 2 23 2 334 4 25 5 297 2 217 2 134 1 4 1 266 2 268 11 153 2 172 4 12 2 368 1 370 2 280 1 66 1 311 9 162 1 17 3 182 23 103 1 
107 1 287 1 182 1 
74 1 268 1 182 1 
286 1 287 3 189 1 12 1 51 1 23 1 52 1 334 2 370 1 25 2 266 1 268 3 311 3 17 1 182 6 153 1 57 1 172 1 
107 1 286 2 74 1 287 6 189 1 190 1 23 1 52 2 76 1 334 2 25 1 149 1 266 2 268 6 327 1 153 1 172 1 12 1 370 2 281 1 376 1 311 2 17 2 182 12 207 1 
286 1 287 3 368 1 25 1 297 1 217 1 268 3 311 2 17 1 182 6 172 1 
287 2 128 1 189 1 241 1 12 1 23 1 334 2 25 1 297 1 217 1 134 1 4 1 268 1 311 2 182 3 153 1 172 1 
102 1 364 1 118 1 116 1 119 1 344 1 33 1 
364 1 118 1 119 1 344 1 214 1 102 1 85 1 116 1 237 1 33 1 302 1 173 1 
95 1 63 4 109 1 167 1 80 1 322 1 192 4 31 1 282 1 270 4 221 1 72 1 142 1 
200 1 63 2 252 1 167 1 371 1 27 1 68 1 322 1 192 2 150 1 270 2 221 1 72 2 303 1 
42 1 5 1 192 1 260 1 31 1 63 1 221 1 270 1 163 1 72 1 
63 2 36 1 167 1 373 1 80 1 322 1 192 2 310 1 270 2 221 1 72 1 
109 1 63 4 252 1 36 1 167 3 80 1 322 2 192 5 282 1 31 1 270 5 221 2 72 2 142 1 239 1 196 1 
109 1 63 4 252 1 36 1 167 3 80 1 322 2 192 5 282 1 31 1 270 5 221 2 135 1 72 2 142 1 196 1 
264 1 322 1 192 1 282 1 31 1 109 1 63 1 221 1 270 1 167 1 72 1 
118 1 200 1 333 1 63 1 119 2 344 1 167 1 101 1 3 1 102 2 322 1 192 1 31 1 82 1 270 1 221 1 340 1 72 1 
118 2 275 1 200 2 355 1 130 1 333 1 63 1 119 2 252 1 344 1 167 3 360 1 101 1 3 1 102 2 322 2 192 1 82 2 270 1 221 1 154 1 340 1 72 1 
130 1 355 1 333 1 167 3 360 1 3 1 322 2 192 2 82 2 221 1 270 2 154 1 118 2 275 1 200 2 95 1 63 2 252 1 119 2 344 1 102 2 101 1 179 1 72 1 
49 2 167 4 360 1 216 1 322 1 192 3 31 1 221 1 270 3 54 1 245 1 154 1 200 1 95 1 63 3 64 1 252 1 345 2 69 1 123 1 181 1 379 1 72 1 
365 1 49 2 200 1 95 1 63 3 252 1 64 1 167 4 360 1 345 2 216 1 322 1 192 3 31 1 123 1 379 1 270 3 221 1 245 1 54 1 154 1 72 1 
192 1 63 1 221 1 270 1 72 1 139 1 
200 1 63 6 36 1 167 3 139 1 27 1 374 1 80 1 322 2 192 7 310 1 31 2 270 7 221 2 235 1 247 1 72 3 196 1 239 1 303 1 184 1 
19 1 108 1 286 1 287 3 128 1 189 2 144 1 23 2 333 1 357 1 167 1 334 4 25 2 317 1 297 1 3 1 217 1 134 1 80 1 322 1 268 3 192 1 81 2 82 1 221 1 270 1 153 2 340 1 118 1 200 1 12 2 368 1 251 2 63 1 119 2 344 2 101 1 102 2 232 1 67 1 311 2 17 1 283 1 182 6 103 1 72 1 380 1 
143 1 49 3 167 2 77 1 296 2 113 1 216 1 192 1 170 1 31 1 270 1 362 1 54 1 245 1 365 1 199 1 249 2 277 1 63 1 64 1 331 2 160 1 100 1 345 3 41 1 123 2 379 1 71 2 
198 1 200 1 63 2 64 1 167 2 139 1 80 1 322 1 192 2 270 2 221 1 72 2 184 1 
118 1 200 1 333 1 63 1 119 2 344 1 167 1 101 1 3 1 102 2 179 1 322 1 192 1 31 1 82 1 270 1 221 1 72 1 
200 1 63 1 252 1 167 1 27 1 322 1 192 1 270 1 221 1 235 1 72 2 303 1 184 1 
169 1 210 1 344 1 46 1 171 1 
275 1 49 2 227 1 35 1 210 2 355 1 130 1 344 1 41 1 345 2 216 1 169 1 114 1 202 1 379 1 245 1 46 2 70 1 171 2 
118 1 314 1 315 1 210 1 119 1 102 1 169 1 46 1 339 1 
169 1 227 1 202 1 
367 1 122 1 240 1 256 1 133 1 309 1 359 1 242 1 
21 1 240 2 367 3 176 1 133 4 372 2 309 4 242 1 359 1 30 1 122 2 84 1 44 1 89 1 
342 1 258 1 367 1 240 1 133 2 372 1 242 1 359 1 309 2 267 1 122 1 256 1 
367 1 240 1 176 2 133 3 242 1 359 1 309 3 29 1 122 1 84 1 256 1 89 2 
367 2 229 2 279 1 65 1 
91 1 256 1 133 1 309 1 359 1 242 1 
353 1 367 1 122 1 240 1 256 1 133 2 372 1 309 2 359 1 242 1 
39 1 
367 1 122 1 240 1 256 1 133 1 309 1 359 1 242 1 
264 1 367 1 122 1 240 1 
367 1 122 1 240 1 133 1 309 1 359 1 242 1 
321 1 18 1 309 1 
165 1 367 1 240 1 176 1 133 3 242 1 359 1 309 3 122 1 84 1 256 1 89 2 
367 1 122 1 240 1 228 1 133 2 372 1 309 2 359 1 242 1 
367 1 133 1 308 1 242 1 359 1 309 1 5 1 254 1 44 1 256 1 163 1 
367 1 122 1 256 1 133 1 309 1 359 1 242 1 
122 2 240 1 256 1 133 1 309 1 359 1 242 1 
367 1 307 1 133 2 242 2 359 2 309 2 122 1 246 1 328 1 256 1 
273 1 353 1 21 1 240 1 367 2 133 3 372 2 242 1 359 1 309 3 122 1 44 1 256 1 
367 1 240 1 260 1 133 2 308 1 372 1 242 1 359 1 309 2 5 1 161 1 122 1 378 1 163 2 256 1 
21 1 240 1 367 2 228 1 96 1 133 4 372 2 242 2 359 2 309 4 122 1 44 1 256 1 
353 1 367 1 122 1 240 1 256 1 133 3 372 1 89 1 309 3 359 1 242 1 
30 1 21 1 367 1 44 1 
367 1 122 1 

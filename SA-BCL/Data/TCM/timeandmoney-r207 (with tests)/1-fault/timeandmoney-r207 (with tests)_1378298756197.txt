#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
24 1 158 9 48 1 136 4 328 2 161 5 73 1 331 1 337 1 76 1 220 2 33 1 124 9 222 1 56 2 224 1 169 1 225 2 285 3 347 1 372 2 110 2 172 1 317 2 255 1 375 1 16 1 355 6 
24 1 158 9 48 1 136 4 328 2 161 5 73 1 331 1 337 1 76 1 220 2 33 1 124 9 222 1 56 2 224 1 169 1 225 2 285 3 347 1 372 2 110 2 172 1 317 2 255 1 375 1 16 1 355 6 
24 1 158 10 48 1 136 5 328 2 161 6 73 1 331 1 337 1 76 1 220 2 33 1 124 10 222 1 56 2 224 1 169 1 225 2 285 4 347 1 372 2 110 2 172 1 317 2 255 1 375 1 16 1 355 7 
24 1 158 7 48 1 136 3 328 1 161 4 73 1 331 1 337 1 76 1 220 2 33 1 124 7 222 1 56 2 224 1 169 1 225 2 285 2 347 1 372 2 110 2 172 1 317 2 375 1 16 1 355 4 
225 1 158 4 136 2 285 1 328 2 347 1 110 1 161 3 372 1 317 1 255 1 337 1 76 1 16 1 355 3 124 4 56 1 224 1 
225 1 158 2 199 1 161 1 347 1 110 1 303 1 331 1 317 1 375 1 76 1 192 1 220 1 124 2 56 1 224 1 
225 2 158 3 136 1 285 1 347 1 161 2 317 2 76 1 355 1 33 1 220 1 124 3 224 1 
158 9 48 1 136 4 328 2 161 5 335 1 337 1 76 1 220 1 33 1 124 9 222 1 56 1 224 1 225 2 285 3 83 1 347 1 372 1 110 1 317 2 255 1 16 1 355 7 
158 9 48 1 136 4 328 2 161 5 335 1 337 1 76 1 220 1 33 1 124 9 222 1 56 1 224 1 225 2 285 3 83 1 347 1 372 1 110 1 317 2 255 1 16 1 355 7 
163 1 205 1 243 1 
346 2 243 1 138 1 
226 2 62 2 59 1 370 2 130 2 84 2 79 1 101 2 
2 1 183 2 101 2 120 1 245 1 304 1 190 1 305 1 365 1 339 1 265 1 77 1 168 1 79 1 34 1 35 2 57 1 269 2 144 2 226 2 59 1 370 3 252 1 130 2 286 1 146 1 84 2 131 2 228 1 173 1 62 3 113 1 207 1 114 1 93 1 279 1 155 1 
226 1 323 1 62 1 59 1 370 1 130 1 84 1 208 1 101 1 350 1 
370 1 108 1 315 1 243 1 229 1 101 1 133 1 51 1 188 1 163 1 62 1 15 1 323 1 65 1 
226 1 370 1 108 1 130 1 84 1 315 1 243 1 133 2 101 1 51 2 188 1 163 1 62 1 15 1 323 1 
210 1 283 1 133 1 51 1 105 1 
163 1 210 1 243 1 133 2 51 2 105 1 332 1 196 1 
210 1 133 1 51 1 
226 1 59 1 370 1 130 1 84 1 133 1 101 1 350 1 51 1 323 1 62 1 309 1 208 1 105 1 
243 1 
163 1 210 1 243 1 133 2 51 2 105 1 332 1 195 1 
357 1 209 2 297 1 298 2 210 2 27 1 201 1 243 1 133 5 51 5 232 2 332 1 163 1 320 1 218 1 20 1 43 1 276 1 105 2 
205 1 79 1 
342 1 226 1 370 2 130 1 84 1 101 2 62 2 79 2 46 1 
31 1 63 1 121 1 
269 1 144 1 370 1 146 1 131 1 228 1 215 1 190 1 305 1 62 1 265 1 77 1 113 1 168 1 79 1 114 1 
342 1 197 1 226 1 370 5 130 4 84 4 242 1 101 5 62 5 79 1 194 2 65 1 22 1 125 1 
323 1 62 2 370 2 4 1 130 2 84 2 101 2 350 1 
226 1 62 3 370 3 130 3 84 3 79 1 194 1 101 3 
323 1 62 1 370 1 130 1 84 1 101 1 350 1 
342 1 226 1 323 1 62 1 370 1 130 1 84 1 46 1 101 1 
183 1 101 3 51 1 188 1 304 1 190 1 305 1 365 1 339 1 265 1 77 1 168 1 79 1 34 1 35 2 194 1 125 1 57 1 269 1 144 1 342 1 226 2 59 1 370 4 252 1 108 1 130 3 286 1 146 1 84 3 315 1 131 1 228 1 147 1 173 1 133 1 175 1 15 1 62 4 323 1 113 1 207 1 114 1 93 1 
197 1 62 2 370 2 130 1 84 1 79 1 194 1 65 1 101 2 
342 1 226 1 370 3 108 1 130 3 315 1 84 3 243 1 147 1 133 1 101 3 51 1 188 1 323 1 62 3 15 1 123 1 194 2 125 1 
342 1 226 1 370 2 130 2 84 2 101 2 121 1 62 2 63 1 194 1 
269 1 144 1 370 1 146 1 131 1 228 1 190 1 305 1 62 1 77 1 265 1 113 1 168 1 79 1 114 1 
269 1 144 1 239 1 25 1 370 1 131 1 228 1 29 1 190 1 305 1 323 1 62 1 77 1 265 1 113 1 168 1 79 1 
26 1 2 2 183 4 121 2 304 1 31 2 307 1 365 1 34 2 267 1 35 2 143 1 81 1 251 1 252 1 286 1 287 1 288 1 149 1 39 1 63 2 21 1 207 1 93 1 
323 1 62 1 370 1 130 1 4 1 84 1 101 1 188 1 
269 1 144 1 370 2 130 1 146 1 84 1 131 1 228 1 101 1 190 1 305 1 62 2 63 1 265 1 77 1 113 1 168 1 194 1 114 1 125 1 
189 1 248 1 
189 1 248 1 
180 1 300 1 
180 1 300 1 
180 1 300 1 
189 1 119 1 248 1 
189 1 119 1 248 1 
189 1 141 1 248 1 
180 1 189 2 300 1 248 2 326 1 179 1 
189 1 119 1 248 1 
189 1 248 1 327 1 
189 1 248 1 327 1 
189 1 248 1 327 1 
67 1 159 1 296 1 117 1 299 1 50 1 101 2 51 1 162 1 189 1 264 1 141 1 167 1 79 1 193 1 310 1 248 1 370 2 130 2 84 2 133 1 62 2 236 1 278 1 
67 2 11 1 0 1 159 1 96 1 117 3 243 1 373 1 133 2 51 2 150 1 189 2 204 1 264 2 91 2 236 2 278 2 248 2 179 1 
110 1 372 1 56 1 
110 1 303 1 56 1 
280 1 99 1 372 2 110 3 132 1 303 1 
280 1 336 1 372 1 110 2 132 1 303 1 
280 2 372 1 110 2 132 1 303 1 
357 1 209 1 298 1 210 1 184 2 299 1 243 2 50 1 138 1 51 5 162 1 103 2 332 1 163 1 122 1 142 2 105 4 143 1 82 1 287 1 200 1 346 3 288 1 348 1 201 3 149 1 133 5 232 1 206 1 20 2 178 1 115 1 
357 1 209 2 210 6 298 2 184 6 299 4 283 5 243 5 138 3 51 9 332 1 163 1 122 3 55 5 142 6 105 7 143 3 107 1 287 3 346 9 288 3 201 8 149 3 133 9 174 1 232 2 257 1 206 2 135 1 20 6 178 2 276 1 115 1 47 1 156 1 
209 1 298 1 184 2 299 1 243 3 138 2 51 3 103 1 163 1 122 1 142 2 105 2 143 1 200 1 287 1 346 4 288 1 348 1 201 3 133 3 149 1 232 1 206 1 178 1 20 2 276 1 
209 1 298 1 184 4 299 2 243 4 138 3 51 4 103 2 163 1 122 2 142 4 105 3 143 2 107 1 200 1 287 2 346 7 288 2 348 1 201 5 133 4 149 2 232 1 206 1 135 1 178 1 20 4 276 1 47 1 
205 1 265 1 360 1 
265 1 295 1 
52 1 
305 1 265 1 113 1 
247 1 265 1 
265 1 113 1 
305 1 265 3 113 1 253 1 360 2 72 1 
343 1 282 1 227 1 2 4 183 7 86 2 5 1 254 1 149 1 202 1 376 1 307 2 217 1 340 1 34 3 143 1 81 3 
343 1 282 1 227 1 2 4 183 7 86 2 5 1 254 1 149 1 202 1 376 1 307 2 217 1 340 1 34 3 143 1 81 3 
343 1 282 1 227 1 2 4 183 7 254 1 86 2 5 1 149 1 202 1 376 1 307 2 217 1 54 1 340 1 34 3 143 1 81 3 
282 1 185 1 183 31 2 16 330 1 5 1 304 1 338 3 307 5 365 1 122 3 217 2 340 1 9 1 34 15 35 2 311 1 143 4 81 10 58 1 343 2 227 2 252 1 287 3 254 1 86 3 288 3 111 1 149 4 202 2 290 4 376 5 44 1 207 1 
58 1 343 1 282 1 227 1 2 5 183 9 252 2 254 1 86 2 149 1 202 1 363 1 304 2 376 1 307 3 365 2 217 1 340 1 32 1 34 4 207 2 35 4 143 1 81 4 
158 2 99 1 70 1 329 1 211 1 161 1 303 1 190 1 216 1 76 1 220 1 124 2 56 1 224 1 144 1 269 1 225 1 131 1 347 1 372 1 228 1 110 2 230 1 317 1 61 1 112 1 134 1 355 1 42 1 277 1 
158 3 99 1 70 1 329 1 211 1 161 1 303 1 190 1 76 1 220 1 124 3 56 1 144 1 269 1 225 1 131 1 347 1 372 1 228 1 110 2 38 1 230 1 317 1 89 1 61 1 256 1 112 1 134 1 42 1 355 2 
158 2 99 1 70 1 211 1 161 1 303 1 190 1 76 1 220 1 124 2 56 1 144 1 269 1 131 1 347 1 228 1 110 2 372 1 38 1 230 1 89 1 61 1 112 1 42 1 355 2 
269 1 144 1 225 1 158 1 249 1 241 1 70 2 131 1 228 1 187 1 230 2 317 1 190 1 14 1 256 1 265 1 77 1 113 1 78 1 42 2 379 1 220 2 124 1 
158 1 99 1 70 1 329 1 211 1 303 1 190 1 220 1 124 1 56 1 224 1 144 1 269 1 225 1 131 1 372 1 228 1 110 2 38 1 230 1 317 1 61 1 112 1 134 1 42 1 277 1 
369 1 
241 1 243 2 138 2 101 1 51 5 332 3 188 1 334 1 190 1 140 2 144 2 250 1 344 1 108 1 346 2 201 2 352 1 62 1 15 1 113 1 206 1 259 2 20 2 153 4 65 1 357 1 209 1 210 6 298 1 69 1 301 1 302 1 163 1 364 2 214 2 75 2 77 2 265 1 219 1 366 2 269 2 370 1 271 1 131 2 315 1 228 1 133 5 229 1 232 1 273 2 321 1 377 1 323 1 324 1 379 1 
250 1 210 2 271 1 344 1 370 1 108 1 315 1 133 3 302 1 229 1 101 1 51 3 332 1 188 1 321 1 323 1 62 1 15 1 75 1 153 2 65 1 195 1 
210 1 243 1 101 1 302 1 51 3 188 1 332 1 163 1 366 1 195 1 250 1 370 1 344 1 271 1 108 1 315 1 229 1 133 3 321 1 15 1 62 1 323 1 153 3 65 1 
210 2 243 1 101 1 302 1 51 3 332 1 188 1 364 1 163 1 75 1 366 1 195 1 250 1 370 1 344 1 271 1 108 1 315 1 229 1 133 3 321 1 15 1 62 1 323 1 153 3 65 1 
243 5 101 1 138 2 51 5 188 1 332 3 334 1 140 2 195 1 250 1 344 1 108 1 201 1 352 1 15 1 62 1 152 1 20 1 259 2 153 6 293 1 65 1 357 1 209 1 210 7 298 1 160 1 302 1 364 4 163 5 214 2 75 4 308 1 366 4 126 1 271 1 370 1 315 1 133 5 229 1 232 1 273 2 321 1 323 1 
243 2 101 1 138 2 51 4 188 1 332 2 334 1 140 2 250 1 344 1 108 1 346 2 201 1 352 1 15 1 62 1 20 1 259 2 153 4 65 1 357 1 209 1 298 1 210 4 302 1 214 2 364 2 163 1 75 2 366 2 271 1 370 1 315 1 133 4 229 1 232 1 273 2 321 1 323 1 377 1 
357 1 209 1 210 4 298 1 160 1 243 1 138 2 101 1 302 1 51 4 332 2 188 1 163 1 364 2 214 2 334 1 75 2 140 2 366 2 126 1 250 1 370 1 344 1 271 1 108 1 315 1 201 1 229 1 133 4 232 1 273 2 352 1 321 1 15 1 62 1 323 1 259 2 20 1 152 1 153 4 65 1 
357 1 209 1 210 4 298 1 160 1 243 1 138 2 101 1 302 1 51 4 332 2 188 1 163 1 364 2 214 2 334 1 75 2 140 2 366 2 126 1 250 1 370 1 344 1 271 1 108 1 315 1 201 1 229 1 133 4 232 1 273 2 352 1 321 1 15 1 62 1 323 1 259 2 20 1 152 1 153 4 65 1 
157 1 357 1 209 1 181 1 210 4 298 1 243 1 101 1 302 1 51 4 332 2 188 1 163 1 364 2 214 2 334 1 75 2 140 2 366 2 126 1 170 2 250 1 370 1 344 1 271 1 108 1 346 2 315 1 201 1 229 1 133 4 232 1 321 1 275 2 15 1 62 1 323 1 18 1 20 1 153 4 65 1 
357 1 209 1 298 1 210 5 160 1 243 1 138 2 101 1 302 1 51 4 332 2 188 1 163 1 214 2 364 3 334 1 140 2 308 1 75 3 366 3 126 1 250 1 370 1 344 1 271 1 108 1 315 1 201 1 229 1 133 4 232 1 273 2 352 1 321 1 15 1 62 1 323 1 259 2 20 1 152 1 153 5 65 1 
357 1 209 1 298 1 210 5 160 1 243 1 138 2 101 1 302 1 51 4 332 2 188 1 163 1 214 2 364 3 334 1 140 2 308 1 75 3 366 3 126 1 250 1 370 1 344 1 271 1 108 1 315 1 201 1 229 1 133 4 232 1 273 2 352 1 321 1 15 1 62 1 323 1 259 2 20 1 152 1 153 5 65 1 
357 1 209 1 210 4 298 1 243 1 302 1 101 1 51 4 332 2 188 1 163 1 364 2 214 2 334 1 75 2 140 2 366 2 170 2 250 1 344 1 370 1 271 1 108 1 346 2 315 1 201 1 229 1 133 4 232 1 321 1 377 1 275 2 62 1 15 1 323 1 18 1 20 1 153 4 65 1 
282 1 2 3 183 6 121 1 304 1 31 1 307 2 365 1 217 1 340 1 34 3 79 2 35 2 143 1 81 2 343 1 252 1 286 1 254 1 86 1 149 1 205 1 63 1 21 1 207 1 93 1 
183 14 2 8 330 1 120 1 121 4 304 2 31 11 307 1 338 3 365 2 122 2 339 1 9 1 79 1 34 6 35 4 143 1 81 2 252 2 286 1 287 2 85 1 288 1 149 2 13 1 318 1 376 1 290 3 63 11 207 2 93 2 380 1 382 1 
183 2 2 1 101 1 120 1 139 1 121 1 190 1 215 1 304 1 305 1 365 1 265 1 77 1 339 1 168 1 79 1 34 1 194 1 35 2 125 1 144 1 269 1 370 2 252 1 130 1 146 1 286 1 131 1 84 1 228 1 231 1 318 1 62 2 113 1 17 1 114 1 207 1 93 1 
95 1 282 1 183 20 2 10 186 1 101 1 190 2 6 2 339 1 340 1 194 1 143 3 144 3 343 1 252 3 286 3 146 2 287 2 254 1 288 2 149 3 62 3 151 1 63 7 113 2 207 3 114 2 263 2 120 1 121 7 304 3 31 7 305 2 307 4 365 3 122 2 217 1 77 1 265 2 168 2 79 2 34 10 35 6 125 1 368 2 81 8 269 3 370 3 130 1 131 3 84 1 86 1 228 2 38 1 173 2 318 1 87 2 376 4 93 3 
2 1 183 2 241 1 101 1 120 1 190 2 304 2 216 1 365 2 265 3 77 2 339 1 34 1 194 1 35 4 314 1 144 8 269 7 370 1 252 2 130 1 286 2 84 1 131 8 228 2 148 1 38 1 62 1 176 1 113 2 19 1 378 1 21 1 379 1 207 2 93 2 66 1 279 2 381 1 
2 1 183 3 101 1 121 1 31 1 304 1 307 1 365 1 122 1 34 2 35 2 143 1 81 1 342 1 226 1 370 1 252 1 130 1 286 1 287 1 84 1 288 1 149 1 318 1 319 1 62 1 63 1 207 1 93 1 
26 1 183 2 252 1 2 2 286 1 287 1 149 1 121 1 31 1 304 1 376 1 365 1 63 1 21 1 207 1 35 2 93 1 81 1 
183 2 252 1 286 1 288 1 121 1 31 1 304 1 307 1 365 1 63 1 21 1 34 2 207 1 35 2 267 1 93 1 143 1 81 1 
2 2 183 4 121 2 304 1 31 2 307 1 122 1 365 1 34 2 35 2 143 1 81 2 252 1 287 1 286 1 288 1 149 1 376 1 63 2 21 1 207 1 93 1 
26 1 183 2 252 1 2 2 286 1 287 1 149 1 121 1 31 1 304 1 376 1 365 1 63 1 207 1 35 2 93 1 81 1 381 1 
183 2 252 1 286 1 288 1 121 1 31 1 304 1 307 1 365 1 63 1 34 2 207 1 35 2 267 1 93 1 143 1 81 1 381 1 
2 2 183 4 121 2 304 1 31 2 307 1 122 1 365 1 34 2 35 2 143 1 81 2 252 1 287 1 286 1 288 1 149 1 376 1 63 2 207 1 93 1 381 1 
183 4 2 2 121 2 304 1 31 2 307 1 122 1 365 1 34 2 35 2 143 1 81 2 252 1 287 1 286 1 288 1 149 1 376 1 63 2 207 1 93 1 
2 1 183 2 120 1 190 1 304 1 305 1 365 1 77 1 265 1 339 1 168 1 79 1 34 1 35 2 144 1 269 1 370 1 252 1 146 1 286 1 131 1 228 1 173 1 62 1 113 1 114 1 207 1 93 1 
239 1 25 1 183 1 29 1 190 1 304 1 305 1 365 1 284 1 77 1 265 1 339 1 168 1 79 1 34 1 35 2 144 1 269 1 370 1 252 1 286 1 131 1 228 1 323 1 62 1 113 1 207 1 93 1 
2 2 183 4 121 2 304 1 31 2 307 1 122 1 365 1 34 2 35 2 143 1 81 2 252 1 287 1 286 1 288 1 149 1 318 1 376 1 63 2 207 1 93 1 
183 4 2 2 121 2 31 2 190 1 304 1 305 1 216 1 307 1 365 1 122 1 265 1 168 1 34 2 35 2 368 1 143 1 81 2 144 1 269 1 370 1 252 1 287 1 146 1 286 1 131 1 288 1 228 1 149 1 173 1 376 1 62 1 63 2 113 1 114 1 207 1 93 1 
2 2 183 3 101 1 121 1 304 1 31 1 365 1 122 1 34 1 35 2 143 1 81 1 342 1 226 1 370 1 252 1 130 1 286 1 287 1 84 1 288 1 149 1 318 1 376 1 62 1 63 1 207 1 93 1 325 1 
358 1 262 1 183 19 2 9 330 1 244 1 213 2 363 1 304 2 307 3 104 1 338 1 365 2 122 3 9 1 34 10 35 4 221 1 143 3 81 6 198 1 252 2 287 3 288 3 60 2 149 3 290 2 376 3 354 1 207 2 
358 1 262 2 183 26 2 14 3 1 330 2 244 1 213 1 363 1 30 1 304 3 307 2 104 2 338 2 365 3 122 3 34 12 35 6 221 1 367 1 143 2 81 4 58 2 252 3 345 1 287 3 288 2 60 4 349 1 149 3 353 1 376 2 290 2 207 3 
282 1 2 20 183 41 3 1 330 3 100 1 244 1 338 3 104 1 340 1 9 1 143 5 58 1 343 1 252 3 287 4 345 1 288 4 254 1 149 5 60 4 349 1 353 1 290 4 354 1 207 3 358 1 262 2 213 1 363 1 30 1 304 3 307 4 122 4 365 3 217 1 34 21 221 1 35 6 367 1 81 8 86 1 376 4 
282 1 358 1 3 1 262 2 183 38 2 20 330 3 100 1 244 1 213 1 363 1 30 1 304 4 307 4 104 1 338 3 365 4 122 4 217 1 340 1 9 1 34 18 35 8 221 1 367 1 143 4 81 7 58 2 343 1 252 4 345 1 287 4 86 1 254 1 288 3 349 1 60 4 149 5 353 1 290 4 376 3 354 1 207 4 
282 1 358 1 3 1 262 1 183 52 2 27 330 2 244 1 213 1 363 1 30 1 304 2 307 7 104 1 338 4 365 2 122 7 217 1 340 1 9 2 34 25 35 4 221 1 367 1 143 8 81 14 58 1 343 1 252 2 345 1 287 7 86 1 254 1 288 7 349 1 60 4 149 8 13 2 353 1 290 4 376 7 207 2 
67 1 189 1 53 1 204 1 264 1 236 1 248 1 278 1 179 1 150 1 
296 1 141 1 
67 1 189 1 264 1 12 1 236 1 248 1 278 1 116 1 268 1 
97 1 119 1 
326 1 223 1 327 1 
67 1 11 1 0 1 159 1 117 2 243 1 373 1 133 1 51 1 150 1 189 1 204 1 264 1 91 1 236 1 278 1 248 1 179 1 
67 1 11 1 0 1 159 1 117 2 243 1 373 1 133 1 51 1 150 1 189 1 204 1 264 1 91 1 236 1 278 1 248 1 179 1 
67 1 11 1 0 1 159 1 117 2 243 1 373 1 133 1 51 1 150 1 189 1 204 1 264 1 91 1 236 1 278 1 248 1 179 1 
97 1 119 1 326 1 
97 1 119 1 326 1 
223 1 327 1 
326 1 223 1 327 1 
167 1 310 1 
67 1 296 1 117 1 299 1 50 1 101 2 51 1 162 1 189 1 264 1 141 1 167 1 79 1 193 1 310 1 248 1 80 1 105 1 11 1 370 2 130 2 84 2 133 1 62 2 91 1 236 1 278 1 
2 1 183 2 118 1 137 1 362 1 101 2 120 1 190 1 304 1 365 1 265 1 165 1 339 1 34 1 35 2 144 2 269 2 370 2 252 1 286 1 131 2 228 1 148 1 318 1 62 2 113 1 378 1 92 1 207 1 93 1 279 2 
269 2 144 2 99 1 131 2 70 1 329 1 211 1 372 1 110 2 228 1 38 1 303 1 212 1 190 1 61 1 216 1 7 1 56 1 312 1 
269 1 144 1 99 1 131 1 70 1 329 1 211 1 372 1 110 2 228 1 38 1 303 1 212 1 190 1 61 1 341 1 56 1 
269 1 144 1 249 1 241 1 131 1 70 1 228 1 190 1 265 1 77 1 113 1 379 1 10 1 312 1 
269 1 144 1 99 1 131 1 70 1 329 1 211 1 372 1 110 2 228 1 38 1 303 1 212 1 190 1 61 1 7 1 56 1 312 1 
64 1 
163 1 297 1 205 1 218 1 20 1 201 1 243 1 
357 1 209 1 210 1 298 1 346 1 243 2 201 1 133 1 138 1 51 1 232 1 332 1 273 1 163 1 352 1 259 1 20 1 
184 6 243 8 138 6 51 5 246 2 332 3 190 3 191 2 247 2 142 6 143 2 144 3 106 1 287 2 346 12 201 9 288 2 149 2 206 2 113 3 292 2 356 1 20 8 295 3 357 4 209 4 297 1 298 4 210 5 360 2 361 2 72 1 163 2 305 3 216 1 122 2 166 2 265 10 77 1 218 1 313 1 269 3 37 1 171 1 131 3 315 2 228 4 133 5 232 4 87 2 88 2 324 1 177 2 45 2 
357 2 209 2 210 1 298 2 184 5 3 1 330 1 243 5 361 1 138 3 51 1 332 1 163 2 338 1 122 2 166 2 142 5 367 1 143 2 272 1 345 1 287 2 346 6 201 8 288 2 133 1 349 1 149 2 232 2 353 1 322 1 290 1 324 1 206 1 20 5 
357 1 209 1 282 1 298 1 160 1 361 1 101 1 51 1 166 2 217 1 309 1 143 1 343 1 226 1 59 1 370 1 130 1 84 1 201 2 133 1 149 2 350 1 232 1 203 1 323 1 62 1 20 2 208 1 
357 1 209 1 297 1 298 1 243 1 201 1 232 1 163 1 218 1 20 1 
184 5 287 2 346 10 243 5 288 2 201 5 361 1 149 2 138 5 87 1 122 2 166 2 20 5 142 5 143 2 
163 1 210 1 243 1 133 1 51 1 332 1 
357 1 209 2 298 2 210 4 69 1 241 1 301 1 51 3 332 2 190 1 265 1 77 2 313 2 144 4 269 4 131 4 228 1 201 2 133 3 232 2 113 1 206 2 324 2 356 1 20 2 276 1 379 1 294 1 237 1 
183 1 101 2 304 1 190 1 305 1 365 1 339 1 77 1 265 1 168 1 79 1 34 1 35 2 57 1 144 1 269 1 226 2 59 1 370 3 252 1 130 2 146 1 286 1 131 1 84 2 228 1 173 1 62 3 113 1 207 1 114 1 93 1 
357 1 209 1 298 1 184 2 346 4 86 1 201 1 243 4 138 2 232 1 163 2 206 1 324 1 20 2 142 2 
274 1 264 1 236 1 
274 1 264 1 236 1 
204 1 281 1 264 1 310 1 236 1 
274 1 264 1 236 1 
264 1 316 1 236 1 
264 1 316 1 236 1 
264 1 316 1 236 1 
264 1 236 1 
189 1 248 1 
58 1 343 1 282 1 183 8 2 4 252 2 86 1 254 1 149 1 304 2 376 1 307 2 365 2 217 1 340 1 34 4 207 2 35 4 143 1 81 3 
343 1 282 1 2 3 183 6 86 1 254 1 149 1 205 1 307 2 217 1 340 1 34 3 143 1 81 2 
252 1 2 2 183 4 145 1 287 1 288 1 149 1 304 1 307 1 376 1 365 1 122 1 34 2 207 1 35 2 143 1 81 2 
183 7 2 3 287 1 330 1 288 1 149 1 307 1 290 2 338 1 376 1 122 1 9 1 34 4 143 1 81 2 
282 1 2 11 183 23 304 2 338 2 307 5 122 2 365 2 217 2 340 1 9 1 34 12 35 4 143 3 81 9 58 2 343 2 252 2 287 2 86 1 254 1 85 1 288 2 149 3 13 1 376 4 290 2 234 1 207 2 
290 1 183 1 34 1 
338 1 183 1 2 1 
252 1 183 6 2 3 145 1 287 1 288 1 149 1 87 1 304 1 376 1 307 2 365 1 122 1 34 3 35 2 207 1 143 1 81 3 
183 12 2 6 3 1 330 1 363 1 304 1 338 1 307 1 365 1 122 2 34 6 35 2 367 1 143 2 81 2 252 1 287 2 345 1 288 2 349 1 149 2 353 1 376 1 290 1 207 1 
343 1 282 1 376 1 307 1 217 1 183 6 2 3 34 3 149 1 143 1 81 2 
58 1 343 1 2 1 183 3 252 1 254 1 304 1 376 1 307 1 365 1 217 1 340 1 234 1 34 2 207 1 35 2 81 2 
343 2 282 1 252 1 2 5 183 10 149 2 363 1 304 1 203 1 307 3 376 2 365 1 217 2 34 5 35 2 207 1 143 2 81 5 
252 1 2 2 183 2 287 1 149 1 363 1 304 1 376 1 365 1 207 1 35 2 81 1 
252 1 2 2 183 4 287 1 288 1 149 1 363 1 304 1 307 1 376 1 365 1 122 1 34 2 207 1 35 2 143 1 81 2 
58 1 343 1 183 3 252 3 2 1 363 1 304 3 307 1 376 1 365 3 217 1 354 1 234 1 34 2 207 3 35 6 81 2 
282 2 185 1 183 34 2 16 330 1 363 1 304 5 338 3 307 7 365 5 122 3 217 3 340 1 9 1 34 18 35 10 143 5 81 12 58 2 343 3 252 5 145 1 287 3 86 1 254 1 288 3 111 1 149 5 290 4 376 5 354 1 234 1 44 1 207 5 
282 1 183 8 2 4 330 1 363 1 304 1 338 1 307 2 365 1 217 1 340 1 34 4 35 2 143 1 81 2 343 1 252 1 86 1 254 1 149 1 349 1 290 1 207 1 
282 1 183 11 2 6 330 1 363 1 304 2 307 2 338 1 365 2 122 1 217 1 340 1 9 1 34 5 35 4 143 1 81 3 343 1 252 2 145 1 287 1 86 1 254 1 349 1 149 2 290 2 376 1 207 2 
282 1 183 19 2 9 3 1 330 1 363 1 304 3 338 1 307 3 365 3 122 2 217 1 340 1 34 10 35 6 367 1 143 3 81 4 58 1 343 1 252 3 145 1 345 1 287 2 86 1 254 1 288 2 349 1 149 3 353 1 376 1 290 1 207 3 
282 1 183 17 2 10 3 1 330 1 363 1 304 3 338 1 307 3 365 3 122 2 217 1 340 1 34 7 35 6 367 1 143 2 81 5 58 1 343 1 252 3 145 1 287 2 345 1 86 1 254 1 288 1 349 1 149 3 353 1 376 2 290 1 207 3 
282 1 183 8 2 4 330 1 363 1 304 1 338 1 307 2 365 1 217 1 340 1 34 4 35 2 143 1 81 2 343 1 252 1 86 1 254 1 149 1 349 1 290 1 207 1 
183 12 2 6 3 1 330 1 363 1 304 1 338 1 307 1 365 1 122 2 34 6 35 2 367 1 143 2 81 2 252 1 287 2 345 1 288 2 349 1 149 2 353 1 376 1 290 1 207 1 
282 1 183 18 2 10 3 1 330 1 363 1 304 4 338 1 307 3 365 4 122 2 217 1 340 1 34 8 35 8 367 1 143 2 81 5 58 2 343 1 252 4 345 1 145 1 287 2 86 1 254 1 288 1 349 1 149 3 353 1 376 2 290 1 207 4 
183 16 2 9 3 1 330 1 363 1 304 4 338 1 307 3 365 4 122 3 34 7 35 8 367 1 143 2 81 6 58 2 252 4 345 1 287 3 288 2 349 1 149 3 353 1 376 3 290 1 354 1 207 4 
343 3 282 1 183 7 2 3 254 2 149 1 307 3 376 3 217 3 340 1 34 4 143 1 81 6 
282 1 183 18 2 10 3 1 330 1 363 1 304 4 338 1 307 3 365 4 122 2 217 1 340 1 34 8 35 8 367 1 143 2 81 4 58 2 343 1 252 4 345 1 287 2 86 1 254 1 288 1 349 1 149 3 353 1 376 1 290 1 354 1 207 4 
197 1 62 1 370 1 359 1 79 1 101 1 65 1 
197 1 49 1 370 1 359 1 109 1 101 1 74 1 333 1 164 1 62 1 79 1 65 1 
144 1 269 1 190 1 205 1 265 1 77 1 113 1 241 1 131 1 228 1 379 1 
269 1 144 1 370 2 130 1 146 1 84 1 131 1 228 1 101 1 190 1 305 1 62 2 265 1 77 1 113 1 168 1 79 1 194 1 
269 1 144 1 370 2 108 1 130 1 146 1 84 2 131 1 228 1 101 2 188 1 190 1 305 2 247 1 323 1 62 2 265 3 113 2 292 1 168 1 79 1 194 1 313 1 
239 1 25 1 101 2 188 1 190 1 305 2 247 1 265 3 168 1 79 1 194 1 313 1 144 1 269 1 370 2 108 1 130 1 131 1 84 2 228 1 62 2 323 2 113 2 292 1 
210 1 240 1 360 1 243 1 51 2 163 1 190 1 305 1 306 1 247 1 265 4 77 1 313 1 127 1 144 3 269 3 131 3 315 1 228 1 133 2 113 1 292 1 295 1 
127 1 269 3 144 3 210 1 315 1 131 3 243 1 228 1 360 1 133 2 51 2 163 1 190 1 305 1 247 1 191 1 77 1 265 4 113 1 292 1 295 1 313 1 
144 1 269 1 190 1 19 1 131 1 228 1 
314 1 269 6 144 7 270 1 261 1 371 1 131 7 228 3 38 1 72 1 190 2 305 1 216 1 77 2 265 3 176 1 113 2 19 1 378 1 279 1 66 1 
282 1 183 6 2 3 118 1 263 1 101 1 121 1 31 1 190 1 304 2 305 1 216 1 307 2 365 2 217 1 265 1 340 1 168 1 79 2 34 3 194 1 35 4 368 1 143 1 81 2 269 1 144 1 343 1 370 2 252 2 130 1 286 2 146 1 84 1 131 1 86 1 254 1 228 1 149 1 173 1 318 1 62 2 63 1 113 1 207 2 114 1 93 2 
357 2 209 2 297 1 298 2 210 2 243 1 360 1 51 3 246 1 332 1 163 1 191 1 77 1 265 2 218 1 105 1 144 1 269 1 131 1 315 1 201 1 133 3 232 2 177 1 20 1 356 1 45 1 295 1 
269 2 144 2 37 1 131 2 360 1 228 2 72 1 190 1 305 1 216 1 265 2 113 1 19 1 
127 1 269 4 144 4 241 1 131 4 228 1 190 1 216 1 77 1 265 1 113 1 379 1 154 1 
269 2 144 2 95 1 261 1 98 1 371 1 131 2 28 1 228 2 190 1 305 1 265 1 113 1 313 1 
144 1 269 1 190 1 77 1 211 1 131 1 110 1 228 1 303 1 56 1 
144 2 269 2 190 1 216 1 265 1 113 1 378 1 131 2 228 1 362 1 38 1 
269 4 144 5 241 1 131 5 228 2 190 2 216 1 77 1 265 3 176 1 113 2 378 1 379 1 154 1 66 1 313 1 
269 4 144 5 182 1 241 1 131 5 228 2 190 2 216 1 77 1 265 3 113 2 378 1 379 1 154 1 66 1 313 1 
25 1 239 1 101 1 190 1 305 1 77 1 265 1 168 1 79 1 194 1 144 1 269 1 370 2 130 1 131 1 84 1 228 1 62 2 323 1 113 1 
269 1 144 1 270 1 261 1 371 1 131 1 228 2 72 1 190 1 305 1 265 1 113 1 313 1 
62 1 8 1 370 1 165 1 90 1 266 1 92 1 137 1 101 1 
374 1 233 1 266 1 
8 1 90 1 266 1 79 1 102 1 
108 1 315 1 243 1 147 1 133 2 102 2 51 2 188 1 163 1 374 1 40 1 323 1 233 1 8 2 15 1 90 2 266 1 79 1 105 1 
205 1 76 1 161 1 347 1 
158 1 225 1 76 1 161 1 347 1 124 1 317 1 
42 1 220 1 124 1 
225 1 158 3 161 1 347 1 317 1 331 2 291 1 76 1 124 3 260 1 36 1 224 1 
158 2 225 1 76 1 328 1 355 1 161 1 347 1 124 2 317 1 
158 1 225 1 136 1 337 1 110 1 372 1 161 1 124 1 56 1 317 1 224 1 
158 1 225 1 161 1 347 1 124 1 317 1 224 1 
158 1 225 1 76 1 347 2 124 1 317 1 224 1 
225 2 158 2 161 1 347 1 351 1 317 2 258 1 124 2 23 1 224 1 
225 1 158 3 48 1 136 1 285 1 347 1 161 2 317 1 76 1 355 2 124 3 222 1 224 1 
225 1 158 2 1 1 99 1 161 1 347 1 110 2 372 1 303 1 317 1 76 1 355 1 124 2 56 1 224 1 
225 2 158 4 136 1 285 1 328 1 347 1 161 2 317 2 255 1 76 1 355 2 124 4 224 1 
158 1 225 1 76 1 161 1 347 1 124 1 317 1 224 1 
158 4 225 1 136 1 285 1 347 2 161 3 331 1 317 1 291 1 76 2 355 2 124 4 36 1 94 1 
225 1 158 2 68 1 161 1 347 1 317 1 335 1 76 1 355 1 235 1 124 2 224 1 
225 1 158 3 161 1 347 1 317 1 331 2 289 1 291 1 76 1 124 3 36 2 224 1 
129 1 41 2 71 1 161 2 
158 1 225 1 124 1 317 1 238 1 224 1 
48 1 158 2 225 1 76 1 355 1 161 1 347 1 124 2 317 1 224 1 
128 1 
158 1 225 1 76 1 161 1 347 1 124 1 317 1 224 1 
48 1 158 3 225 1 76 1 355 1 161 1 347 1 124 3 331 1 317 1 224 1 
136 1 285 1 161 1 94 1 
161 1 347 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (179,228) 272 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (47,311) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (1,5,30) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (47,311) (47,311) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 76 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (1,5,30) (1,5,30) 22 223 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 76 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 283 130 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (179,228) (179,228) (164,251) 44 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (179,228) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (179,228) (179,228) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (47,311) (47,311) 192 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (179,228) 272 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 157 (21,124) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 157 (21,124) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 157 (144,242) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 157 (144,242) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 2 269 1 6 2 301 1 48 4 88 9 181 2 50 6 94 2 307 1 308 3 135 1 226 2 274 1 276 1 317 2 139 1 18 1 231 1 237 1 153 1 327 2 332 5 113 1 34 1 207 9 339 1 117 1 
127 2 269 1 6 2 301 1 48 4 88 9 181 2 50 6 94 2 307 1 308 3 135 1 226 2 274 1 276 1 317 2 139 1 18 1 231 1 237 1 153 1 327 2 332 5 113 1 34 1 207 9 339 1 117 1 
127 2 269 1 6 2 301 1 48 5 88 10 181 2 50 7 94 2 307 1 308 4 135 1 226 2 274 1 276 1 317 2 139 1 18 1 231 1 237 1 153 1 327 2 332 6 113 1 34 1 207 10 339 1 117 1 
127 2 269 1 6 2 301 1 48 3 88 7 181 2 50 4 94 2 307 1 308 2 135 1 226 1 274 1 276 1 317 2 139 1 18 1 231 1 237 1 327 2 332 4 113 1 34 1 207 7 339 1 117 1 
127 1 48 2 153 1 88 4 327 1 50 3 181 1 94 1 308 1 307 1 332 3 226 2 34 1 317 1 207 4 139 1 18 1 117 1 
127 1 239 1 301 1 6 1 88 2 327 1 93 1 94 1 307 1 332 1 333 1 135 1 317 1 207 2 18 1 117 1 
6 1 48 1 88 3 50 1 94 2 307 1 308 1 332 2 274 1 317 2 207 3 18 1 117 1 
127 1 84 1 6 1 48 4 153 1 88 9 327 1 181 1 50 7 94 2 307 1 308 3 332 5 113 1 226 2 34 1 274 1 276 1 139 1 317 2 207 9 18 1 117 1 171 1 
127 1 84 1 6 1 48 4 153 1 88 9 327 1 181 1 50 7 94 2 307 1 308 3 332 5 113 1 226 2 34 1 274 1 276 1 139 1 317 2 207 9 18 1 117 1 171 1 
122 1 76 1 247 1 
122 1 60 1 249 2 
51 2 210 2 280 2 176 2 270 2 58 1 288 2 
280 1 210 1 282 2 176 1 61 2 27 1 65 1 270 1 272 1 288 1 51 1 252 2 228 1 58 1 233 1 196 1 
51 1 210 1 280 1 176 1 311 1 270 1 58 1 288 1 
51 1 1 1 176 1 86 1 5 1 270 1 
51 1 1 1 210 1 280 1 176 1 270 1 288 1 
30 1 326 1 151 1 8 1 103 1 
122 1 30 2 100 1 140 1 326 2 151 1 8 1 247 1 
30 1 326 1 151 1 
51 1 210 1 280 1 30 1 176 1 311 1 47 1 326 1 270 1 8 1 58 1 288 1 
122 1 
122 1 30 2 298 1 140 1 326 2 151 1 8 1 247 1 
260 1 0 1 279 1 122 1 85 1 149 1 217 2 326 5 7 2 8 2 151 2 111 1 90 1 247 1 309 1 30 5 32 2 140 1 168 1 
76 1 
51 2 210 1 280 1 176 2 250 1 163 1 270 2 288 1 
51 1 210 1 297 1 282 1 176 1 252 1 238 1 61 1 65 1 270 1 288 1 
210 4 280 1 297 1 176 5 238 2 86 1 270 5 288 4 51 5 158 1 188 1 163 1 234 1 
51 1 210 1 176 1 270 1 288 1 
51 3 280 1 210 3 176 3 238 1 270 3 288 3 
51 1 210 1 176 1 270 1 288 1 
51 1 210 1 280 1 250 1 176 1 163 1 270 1 288 1 
51 2 280 1 210 2 297 1 176 2 238 1 163 1 270 2 288 2 
51 2 210 1 176 2 238 1 86 1 270 2 234 1 288 1 
51 1 210 1 297 1 176 1 238 1 270 1 288 1 
51 1 210 1 280 1 176 1 163 1 270 1 288 1 
282 1 252 1 61 1 65 1 
282 1 252 1 61 1 65 1 
186 1 123 1 31 1 82 1 177 1 316 1 216 1 120 2 
51 1 210 1 29 1 176 1 270 1 288 1 
125 1 128 1 
125 1 128 1 
306 1 235 1 
306 1 235 1 
306 1 235 1 
125 1 162 1 128 1 
125 1 162 1 128 1 
125 1 128 1 286 1 
262 1 125 2 128 2 246 1 306 1 235 1 
125 1 162 1 128 1 
125 1 128 1 180 1 
125 1 128 1 180 1 
125 1 128 1 180 1 
146 1 321 1 210 2 147 1 176 2 125 1 148 1 215 1 128 1 326 1 285 1 270 2 271 1 286 1 329 1 183 1 288 2 305 1 51 2 30 1 161 1 315 1 79 1 
19 1 146 2 321 3 122 1 125 2 148 2 299 1 128 2 326 2 329 2 246 1 184 1 30 2 13 1 161 1 315 2 338 2 37 1 194 1 
127 1 327 1 181 1 
127 1 239 1 327 1 
127 3 213 1 239 1 154 1 56 1 181 2 
127 2 213 1 254 1 239 1 154 1 181 1 
127 2 213 2 239 1 154 1 181 1 
260 2 172 1 122 2 45 2 217 1 7 1 8 4 305 1 224 1 275 2 54 1 55 1 140 1 318 2 142 1 145 1 60 1 199 1 147 1 149 1 326 5 285 1 151 1 328 1 111 3 204 1 247 1 30 5 289 1 249 3 32 1 167 1 
260 6 172 3 122 5 268 5 267 1 45 6 217 2 7 2 9 1 8 7 224 3 312 1 275 6 54 3 55 3 140 1 145 2 103 5 60 3 20 1 147 4 199 1 149 1 326 9 151 6 111 8 244 1 247 1 30 9 289 2 249 9 32 2 167 3 292 1 168 1 
260 2 122 3 172 1 45 2 217 1 7 1 8 2 224 1 275 2 54 1 55 1 318 1 142 1 145 1 60 2 147 1 326 3 111 3 204 1 247 1 30 3 289 1 32 1 249 4 167 1 168 1 
260 4 122 4 172 2 45 4 217 1 7 1 9 1 8 3 224 2 275 4 312 1 54 2 55 2 318 2 142 1 145 1 60 3 147 2 326 4 111 5 244 1 204 1 247 1 30 4 289 1 249 7 32 1 167 2 168 1 
331 1 134 1 76 1 
134 1 98 1 
245 1 
134 1 36 1 243 1 
134 1 74 1 
134 1 243 1 
331 2 134 3 4 1 49 1 36 1 243 1 
40 1 322 1 126 3 323 1 300 1 112 1 224 1 70 3 273 1 291 1 337 2 167 1 38 2 319 4 258 1 118 1 101 7 
40 1 322 1 126 3 323 1 300 1 112 1 224 1 70 3 273 1 291 1 337 2 167 1 38 2 319 4 258 1 118 1 101 7 
40 1 322 1 126 3 323 1 300 1 112 1 224 1 70 3 273 1 291 1 337 2 167 1 38 2 319 4 258 1 118 1 101 7 197 1 
40 2 172 3 126 10 82 1 177 1 300 1 220 1 224 4 273 1 16 1 313 1 316 1 55 3 54 3 319 16 101 31 322 2 323 2 284 1 150 3 152 1 110 4 112 1 70 15 156 1 31 1 291 1 337 5 167 4 38 3 257 1 118 2 258 5 120 2 
40 1 322 1 126 4 323 1 3 1 177 2 82 2 300 1 224 1 70 4 273 1 31 2 137 1 316 2 291 1 337 3 167 1 257 1 38 2 319 5 118 1 258 1 101 9 120 4 
121 1 127 2 265 1 6 1 88 2 50 1 181 1 94 1 307 1 53 1 317 1 18 1 56 1 102 1 278 1 236 1 282 1 61 1 239 1 24 1 25 1 327 1 109 1 67 1 332 1 114 1 252 1 336 1 207 2 117 1 
121 1 127 2 6 1 88 3 181 1 89 1 50 2 94 1 53 1 317 1 18 1 56 1 278 1 236 1 282 1 61 1 239 1 24 1 25 1 327 1 109 1 67 1 332 1 73 1 114 1 252 1 160 1 336 1 207 3 117 1 
121 1 127 2 282 1 61 1 239 1 24 1 6 1 88 2 327 1 109 1 181 1 50 2 67 1 332 1 73 1 160 1 252 1 114 1 53 1 336 1 207 2 18 1 56 1 117 1 278 1 
2 1 6 2 46 1 88 1 89 1 94 1 97 1 134 1 138 1 53 1 317 1 282 1 61 1 24 2 64 1 65 1 243 1 67 2 72 1 114 2 252 1 336 1 207 1 
121 1 127 2 6 1 88 1 181 1 94 1 307 1 53 1 317 1 56 1 102 1 278 1 236 1 282 1 61 1 239 1 24 1 25 1 327 1 109 1 67 1 114 1 252 1 160 1 336 1 207 1 
187 1 
260 1 1 1 2 1 176 1 42 1 266 1 86 1 5 1 217 1 46 1 7 1 270 1 223 1 303 1 51 1 134 1 53 1 140 1 105 1 282 2 22 1 61 2 149 1 326 2 65 2 151 2 111 1 243 1 30 2 289 1 33 1 32 1 252 2 336 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
1 1 176 1 298 1 266 1 22 1 5 1 86 1 326 2 151 1 270 1 223 1 51 1 30 2 33 1 140 1 
1 1 176 1 266 1 149 1 22 1 86 1 217 1 5 1 326 1 7 1 270 1 223 1 51 1 30 1 32 1 33 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
51 1 1 1 30 1 176 1 33 1 266 1 22 1 86 1 5 1 326 1 270 1 223 1 
1 1 176 1 266 1 149 1 22 1 86 1 217 1 5 1 326 1 7 1 270 1 223 1 51 1 30 1 32 1 33 1 
40 1 123 1 126 1 177 1 82 1 216 1 300 1 224 1 273 1 186 1 31 1 316 1 291 1 337 1 76 1 38 1 319 2 118 1 101 2 120 2 
177 1 82 1 283 1 216 1 150 1 130 1 110 1 70 1 186 1 31 1 316 1 256 1 319 1 101 2 120 2 
210 1 106 1 281 1 297 1 176 1 82 1 177 1 238 1 216 1 270 1 288 1 70 1 51 1 186 1 31 1 316 1 78 1 256 1 319 1 101 2 120 2 209 1 
210 1 297 1 176 1 177 1 82 1 216 1 44 1 179 1 270 1 51 1 186 1 316 1 228 1 101 1 281 1 282 1 238 1 61 1 65 1 288 1 70 1 31 1 251 1 252 1 256 1 120 2 
106 1 282 1 177 1 82 1 216 1 61 1 65 1 186 1 31 1 252 1 17 1 316 1 341 1 319 1 101 1 120 2 
210 1 172 1 176 1 82 1 177 1 216 1 270 1 132 1 224 1 51 1 186 1 316 1 55 1 54 1 319 1 101 2 280 1 288 1 70 1 31 1 163 1 256 1 167 1 120 2 
172 1 123 1 177 1 82 1 216 1 224 1 186 1 335 1 31 1 316 1 319 1 101 1 120 2 
123 1 177 1 82 1 216 1 70 1 186 1 31 1 316 1 54 1 340 1 167 1 101 1 120 2 
172 1 123 1 177 1 82 1 216 1 224 1 70 1 186 1 31 1 316 1 54 1 55 1 167 1 319 1 101 2 120 2 
172 1 177 1 82 1 216 1 224 1 186 1 335 1 31 1 316 1 341 1 319 1 101 1 120 2 
177 1 82 1 216 1 70 1 186 1 31 1 316 1 54 1 341 1 340 1 167 1 101 1 120 2 
172 1 177 1 82 1 216 1 224 1 70 1 186 1 31 1 316 1 54 1 55 1 167 1 341 1 319 1 101 2 120 2 
172 1 177 1 82 1 216 1 224 1 70 1 186 1 31 1 316 1 54 1 55 1 167 1 319 1 101 2 120 2 
282 1 252 1 61 1 228 1 65 1 
174 1 282 1 252 1 61 1 65 1 
172 1 177 1 82 1 216 1 224 1 70 1 186 1 31 1 316 1 54 1 55 1 167 1 256 1 319 1 101 2 120 2 
282 1 252 1 265 1 61 1 228 1 179 1 
210 1 172 1 176 1 82 1 177 1 216 1 270 1 224 1 51 1 186 1 316 1 55 1 54 1 319 1 101 2 280 1 288 1 70 1 31 1 163 1 256 1 167 1 120 2 294 1 
172 3 263 2 126 6 82 2 177 2 220 1 224 3 136 1 137 1 16 1 189 1 52 1 316 2 55 3 54 3 232 1 57 1 319 9 193 2 101 19 59 1 150 1 110 2 70 10 31 2 337 3 167 3 258 3 120 4 259 1 
172 3 126 4 263 4 82 3 177 3 220 2 304 1 224 3 136 1 137 1 189 2 52 1 316 3 55 3 54 2 57 1 319 14 193 1 101 26 59 2 320 1 200 1 150 2 110 2 287 1 70 12 31 3 159 1 337 2 167 2 208 1 257 2 258 2 120 6 
172 4 263 4 177 3 82 3 273 1 16 1 189 1 193 1 101 41 200 1 110 4 287 1 31 3 291 1 208 1 38 1 118 1 120 6 39 1 40 1 126 8 300 1 220 3 224 5 304 1 136 1 137 1 316 3 52 1 54 4 55 4 319 20 57 1 232 1 59 2 320 1 150 3 70 21 159 1 337 4 167 5 257 1 258 4 
40 1 172 4 263 4 126 7 82 4 177 4 300 1 220 3 304 1 224 5 136 1 273 1 137 1 16 1 189 1 52 1 316 4 55 4 54 3 232 1 57 1 319 20 193 1 101 38 59 2 320 1 200 1 150 3 110 4 287 1 70 18 159 1 31 4 291 1 337 4 167 4 38 1 208 1 257 2 118 1 258 3 39 1 120 8 
40 1 172 7 263 4 126 14 82 2 177 2 300 1 220 2 304 1 224 8 136 1 273 1 137 1 16 2 189 1 52 1 316 2 55 7 54 7 57 1 319 27 193 1 101 52 59 1 320 1 200 1 150 4 110 4 287 1 70 25 159 1 31 2 206 2 291 1 337 7 167 8 38 1 257 1 208 1 118 1 258 7 120 4 
146 1 125 1 148 1 299 1 128 1 315 1 255 1 37 1 329 1 246 1 
215 1 286 1 
146 1 125 1 148 1 178 1 23 1 128 1 315 1 219 1 329 1 
162 1 35 1 
296 1 262 1 180 1 
19 1 146 1 321 2 122 1 125 1 148 1 299 1 128 1 326 1 329 1 246 1 184 1 30 1 161 1 315 1 338 1 37 1 194 1 
19 1 146 1 321 2 122 1 125 1 148 1 299 1 128 1 326 1 329 1 246 1 184 1 30 1 161 1 315 1 338 1 37 1 194 1 
19 1 146 1 321 2 122 1 125 1 148 1 299 1 128 1 326 1 329 1 246 1 184 1 30 1 161 1 315 1 338 1 37 1 194 1 
262 1 162 1 35 1 
262 1 162 1 35 1 
296 1 180 1 
296 1 262 1 180 1 
271 1 183 1 
210 2 176 2 125 1 128 1 215 1 218 1 8 1 270 2 271 1 183 1 305 1 51 2 315 1 194 1 146 1 321 1 147 1 148 1 326 1 285 1 286 1 329 1 288 2 30 1 338 1 79 1 
51 2 185 1 176 2 99 1 221 1 270 2 
121 1 127 2 282 2 265 1 61 2 239 1 24 1 240 1 25 1 327 1 109 1 181 1 71 1 160 1 252 2 53 1 336 1 56 1 170 1 
121 1 127 2 282 1 61 1 239 1 24 1 240 1 25 1 129 1 327 1 109 1 181 1 160 1 252 1 336 1 53 1 56 1 
2 1 282 1 61 1 24 1 64 1 46 1 65 1 243 1 134 1 71 1 252 1 53 1 336 1 253 1 
121 1 127 2 282 1 61 1 239 1 24 1 240 1 25 1 327 1 109 1 181 1 71 1 160 1 252 1 53 1 336 1 56 1 170 1 
43 1 
260 1 0 1 122 1 85 1 76 1 111 1 247 1 
260 1 122 2 60 1 81 1 149 1 217 1 326 1 7 1 151 1 111 1 247 1 30 1 249 1 32 1 314 1 140 1 119 1 
0 1 260 8 172 2 4 1 265 1 85 1 7 4 87 1 11 1 182 2 14 2 98 3 275 6 190 1 191 2 195 2 198 2 282 3 111 9 289 2 30 5 32 4 36 3 122 8 42 1 124 2 214 2 45 6 217 4 224 2 134 10 53 4 55 2 54 2 140 3 143 2 60 6 149 4 61 3 324 1 63 2 326 5 65 1 151 5 243 3 247 2 331 2 334 1 249 12 252 3 74 2 336 3 164 2 167 2 
260 5 122 5 172 2 42 1 45 5 220 1 217 2 7 2 182 1 304 1 224 2 14 2 275 5 229 1 55 2 54 2 140 1 320 1 60 3 149 2 150 1 326 1 151 1 111 8 110 1 287 1 68 1 247 2 289 1 30 1 249 6 159 1 32 2 167 2 208 1 
260 1 40 1 210 1 280 1 176 1 149 1 47 1 217 1 326 1 7 1 270 1 111 2 288 1 224 1 51 1 30 1 273 1 32 1 14 2 311 1 167 1 58 1 192 1 118 1 104 1 
0 1 260 1 122 1 149 1 85 1 217 1 7 1 111 1 247 1 32 1 
260 5 172 2 60 5 122 5 45 5 111 5 182 1 224 2 14 2 249 10 275 5 55 2 54 2 191 1 167 2 
122 1 30 1 326 1 140 1 151 1 247 1 
260 2 2 1 42 2 217 2 46 1 7 2 87 2 303 1 134 1 53 1 140 2 105 1 282 4 149 1 61 4 324 1 326 3 65 2 151 4 243 1 111 2 205 1 289 2 30 3 32 2 252 4 336 1 166 1 168 1 
51 1 210 1 280 1 282 1 176 1 252 1 61 1 228 1 65 1 270 1 58 1 272 1 288 1 
260 2 60 2 122 4 42 1 149 1 45 2 217 1 7 1 111 1 247 2 289 1 249 4 32 1 275 2 38 1 
148 1 62 1 329 1 
148 1 62 1 329 1 
148 1 290 1 37 1 271 1 329 1 
148 1 62 1 329 1 
148 1 329 1 69 1 
148 1 329 1 69 1 
148 1 329 1 69 1 
148 1 329 1 
125 1 128 1 
40 1 126 3 177 2 82 2 300 1 224 1 70 4 273 1 31 2 316 2 291 1 337 2 167 1 38 1 319 4 257 1 258 1 118 1 101 8 120 4 
40 1 126 2 300 1 224 1 70 3 273 1 291 1 337 2 76 1 167 1 38 1 319 3 118 1 101 6 
172 1 126 2 175 1 177 1 82 1 224 1 70 2 31 1 316 1 337 1 54 1 55 1 167 1 319 2 258 1 101 4 120 2 
172 1 126 2 220 1 150 1 110 2 224 1 70 4 16 1 337 1 54 1 55 1 167 1 319 3 258 1 101 7 
40 2 172 2 126 9 177 2 82 2 300 1 224 3 273 1 16 1 316 2 55 2 54 2 319 11 101 23 283 1 150 2 110 2 248 1 70 12 31 2 206 1 291 1 337 5 167 3 38 1 257 2 118 2 258 4 120 4 
70 1 110 1 101 1 
150 1 319 1 101 1 
172 1 175 1 126 3 82 1 177 1 224 1 70 3 31 1 316 1 55 1 54 1 337 2 191 1 167 1 319 3 258 1 101 6 120 2 
320 1 172 2 126 2 177 1 82 1 220 1 150 1 110 1 287 1 224 2 304 1 70 6 31 1 159 1 137 1 316 1 337 1 54 2 55 2 167 2 208 1 319 6 258 1 101 12 120 2 
40 1 126 2 224 1 70 3 273 1 337 1 167 1 319 3 118 1 258 1 101 6 
40 1 126 2 177 1 82 1 300 1 248 1 70 2 31 1 316 1 291 1 337 1 319 1 257 1 258 1 118 1 101 3 120 2 
40 2 126 5 82 1 177 1 224 2 70 5 273 1 31 1 137 1 316 1 337 3 167 2 319 5 192 1 118 2 258 2 101 10 120 2 
172 1 126 1 177 1 82 1 224 1 31 1 137 1 316 1 319 2 258 1 101 2 120 2 
172 1 126 2 177 1 82 1 224 1 70 2 31 1 137 1 316 1 337 1 54 1 55 1 167 1 319 2 258 1 101 4 120 2 
40 1 126 2 177 3 82 3 248 1 70 2 31 3 137 1 316 3 337 1 257 1 232 1 319 1 118 1 258 1 101 3 120 6 
40 3 172 3 175 1 126 12 82 5 177 5 300 1 220 1 224 5 273 2 137 1 313 1 16 1 316 5 55 3 54 3 232 1 319 16 101 34 284 1 150 3 152 1 110 4 248 1 70 18 31 5 291 1 337 7 167 5 38 1 257 2 118 3 258 5 120 10 
40 1 126 2 82 1 177 1 300 1 220 1 224 1 273 1 137 1 316 1 319 4 101 8 150 1 110 1 70 4 159 1 31 1 291 1 337 2 167 1 38 1 118 1 120 2 
40 1 172 1 175 1 126 3 82 2 177 2 300 1 220 1 224 2 273 1 137 1 16 1 316 2 55 1 319 6 101 11 150 1 110 2 70 5 159 1 31 2 291 1 337 2 167 1 38 1 118 1 258 1 120 4 
40 1 172 2 175 1 126 4 82 3 177 3 300 1 220 1 304 1 224 3 273 1 137 1 316 3 55 2 54 2 319 9 101 19 320 1 150 1 110 1 287 1 70 10 159 1 31 3 291 1 337 3 167 3 38 1 257 1 208 1 118 1 258 1 120 6 
40 1 172 2 175 1 126 5 82 3 177 3 300 1 220 1 304 1 224 3 273 1 137 1 316 3 55 2 54 1 319 10 101 17 320 1 150 1 110 1 287 1 70 7 159 1 31 3 291 1 337 3 167 2 38 1 257 1 208 1 118 1 258 2 120 6 
40 1 126 2 82 1 177 1 300 1 220 1 224 1 273 1 137 1 316 1 319 4 101 8 150 1 110 1 70 4 159 1 31 1 291 1 337 2 167 1 38 1 118 1 120 2 
320 1 172 2 126 2 177 1 82 1 220 1 150 1 110 1 287 1 224 2 304 1 70 6 31 1 159 1 137 1 316 1 337 1 54 2 55 2 167 2 208 1 319 6 258 1 101 12 120 2 
40 1 172 2 175 1 126 5 82 4 177 4 300 1 220 1 304 1 224 3 273 1 137 1 316 4 55 2 54 1 319 10 101 18 320 1 150 1 110 1 287 1 70 8 159 1 31 4 291 1 337 3 167 2 38 1 208 1 257 2 118 1 258 2 120 8 
172 3 126 6 82 4 177 4 220 1 304 1 224 3 137 1 316 4 55 3 54 2 232 1 319 9 101 16 320 1 150 1 110 1 287 1 70 7 159 1 31 4 337 3 167 2 208 1 257 2 258 3 120 8 
40 3 126 6 300 2 224 1 70 4 273 1 291 1 337 3 167 1 319 3 118 3 258 3 101 7 
40 1 172 2 126 4 82 4 177 4 300 1 220 1 304 1 224 3 273 1 137 1 316 4 55 2 54 1 232 1 319 10 101 18 320 1 150 1 110 1 287 1 70 8 159 1 31 4 291 1 337 3 167 2 38 1 208 1 257 2 118 1 258 1 120 8 
51 1 176 1 15 1 86 1 270 1 234 1 
212 1 176 1 83 1 201 1 86 1 108 1 270 1 28 1 51 1 15 1 234 1 
134 1 2 1 282 1 252 1 53 1 336 1 61 1 46 1 76 1 65 1 243 1 
210 1 176 1 282 1 21 1 238 1 61 1 270 1 65 1 243 1 288 1 51 1 134 1 157 1 252 1 53 1 336 1 36 1 
210 1 176 1 282 1 21 1 238 1 61 1 270 1 87 1 243 1 288 1 51 1 134 1 157 1 252 1 53 1 336 1 36 1 
210 1 176 1 282 1 238 1 61 1 270 1 87 1 243 1 242 1 288 1 51 1 134 1 157 1 252 1 53 1 336 1 36 1 
122 1 87 1 134 4 225 1 98 1 53 1 277 1 144 1 195 1 198 1 282 3 61 3 326 2 151 1 65 1 243 1 247 1 331 1 30 2 252 3 74 1 336 1 36 1 
122 1 282 3 124 1 61 3 326 2 65 1 87 1 151 1 243 1 247 1 331 1 30 2 134 4 98 1 74 1 252 3 53 1 336 1 277 1 36 1 195 1 198 1 
282 1 252 1 53 1 336 1 61 1 222 1 
282 7 264 1 4 1 265 1 61 6 27 1 302 1 65 2 222 1 66 1 243 2 330 1 133 1 134 3 160 1 252 7 336 2 53 3 116 1 77 1 36 1 
51 1 210 1 176 1 238 1 270 1 288 1 
260 1 0 1 122 1 124 1 85 1 217 2 7 2 8 1 134 2 98 1 140 1 143 1 198 1 282 1 61 1 149 2 324 1 63 1 326 3 65 1 151 2 111 1 247 1 331 1 30 3 32 2 252 1 164 1 
331 1 134 2 282 2 4 1 252 2 265 1 53 2 336 1 61 2 36 1 243 1 222 1 11 1 
80 1 2 1 282 4 265 1 61 4 46 1 65 1 243 1 134 1 252 4 53 1 336 1 277 1 
41 1 282 2 264 1 107 1 61 2 87 1 243 1 10 1 134 1 252 2 336 1 53 2 116 1 36 1 
127 1 282 1 252 1 53 1 336 1 61 1 239 1 65 1 327 1 109 1 
134 1 282 2 160 1 252 2 265 1 53 1 336 1 115 1 61 2 243 1 330 1 
80 1 2 1 282 5 265 1 61 4 46 1 302 1 87 1 65 1 243 2 330 1 133 1 134 3 252 5 336 2 53 2 
80 1 2 1 282 5 265 1 61 4 46 1 241 1 87 1 65 1 243 2 330 1 133 1 134 3 252 5 336 2 53 2 
210 1 176 1 282 1 238 1 61 1 270 1 65 1 243 1 242 1 288 1 51 1 134 1 157 1 252 1 53 1 336 1 36 1 
282 1 264 1 4 1 61 1 87 1 66 1 243 1 134 1 252 1 336 1 53 2 116 1 36 1 
51 1 185 1 96 1 173 1 211 1 176 1 99 1 221 1 270 1 
211 1 325 1 75 1 
96 1 173 1 310 1 211 1 
96 1 173 1 30 1 310 1 211 1 325 1 75 1 326 1 8 1 295 1 
332 1 18 1 76 1 117 1 
332 1 207 1 317 1 18 1 88 1 117 1 94 1 
6 1 88 1 67 1 
332 1 207 3 317 1 301 2 18 1 141 1 88 3 117 1 91 1 94 1 95 1 307 1 
332 1 226 1 207 2 317 1 18 1 88 2 117 1 50 1 94 1 
332 1 127 1 34 1 207 1 317 1 48 1 88 1 327 1 181 1 94 1 307 1 
332 1 207 1 317 1 18 1 88 1 94 1 307 1 
207 1 317 1 18 2 88 1 117 1 94 1 307 1 
88 2 202 1 94 2 307 1 332 1 317 2 207 2 18 1 165 1 293 1 
48 1 88 3 50 2 94 1 307 1 308 1 332 2 113 1 276 1 317 1 207 3 18 1 117 1 
127 2 239 1 88 2 327 1 181 1 50 1 92 1 94 1 307 1 332 1 317 1 207 2 18 1 56 1 117 1 
48 1 88 4 153 1 50 2 94 2 307 1 308 1 332 2 226 1 317 2 207 4 18 1 117 1 
332 1 207 1 317 1 18 1 88 1 117 1 94 1 307 1 
301 1 26 1 48 1 88 4 50 2 94 1 95 1 308 1 332 3 207 4 317 1 18 2 141 1 117 2 
84 1 88 2 131 1 50 1 94 1 307 1 332 1 12 1 317 1 207 2 18 1 117 1 
301 2 88 3 94 1 307 1 155 1 95 2 332 1 317 1 207 3 18 1 141 1 117 1 
332 2 261 2 169 1 203 1 
207 1 317 1 230 1 88 1 94 1 307 1 
332 1 276 1 207 2 317 1 18 1 88 2 117 1 50 1 94 1 307 1 
227 1 
332 1 207 1 317 1 18 1 88 1 117 1 94 1 307 1 
301 1 88 3 50 1 94 1 307 1 332 1 276 1 317 1 207 3 18 1 117 1 
332 1 26 1 48 1 308 1 
332 1 18 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 285 192 (185,204) (73,128) (73,128) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 285 192 (185,204) (73,128) (73,128) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 285 192 (185,204) (73,128) (73,128) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 285 192 (185,204) (73,128) (73,128) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 285 (72,125,275,360) 332 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 285 192 (185,204) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 285 192 (185,204) 264 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 285 192 (185,204) 264 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 285 (72,125,275,360) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 285 192 166 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 285 192 226 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 285 192 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
185 1 128 1 55 3 130 1 278 3 73 1 282 2 120 1 204 1 213 1 285 1 63 1 83 1 192 1 3 2 340 1 66 1 355 1 50 1 91 2 
185 1 128 1 55 3 130 1 278 3 73 1 282 2 120 1 204 1 213 1 285 1 63 1 83 1 192 1 3 2 340 1 66 1 355 1 50 1 91 2 
185 1 128 1 55 3 130 1 278 3 73 1 282 2 120 1 204 1 213 1 285 1 63 1 83 1 192 1 3 2 340 1 66 1 355 1 50 1 91 2 
185 1 128 1 55 3 130 1 278 3 73 1 282 2 120 1 204 1 213 1 285 1 63 1 83 1 192 1 3 2 340 1 66 1 355 1 50 1 91 2 
285 1 83 1 3 1 332 1 340 1 55 2 278 2 270 1 194 1 125 1 91 1 213 1 
0 1 186 1 55 2 278 2 130 1 316 1 294 1 282 1 120 1 63 1 83 1 3 1 340 1 11 1 50 1 91 1 
285 1 83 1 192 1 3 2 340 1 185 1 55 2 278 2 282 1 91 2 213 1 
275 1 185 1 55 3 278 3 264 1 282 1 213 1 285 1 83 1 3 2 192 1 340 1 270 1 91 2 
275 1 185 1 55 3 278 3 264 1 282 1 213 1 285 1 83 1 3 2 192 1 340 1 270 1 91 2 
75 1 304 1 190 1 
315 2 252 1 190 1 
152 1 47 2 162 2 299 2 246 2 74 2 18 2 133 1 
314 1 162 3 74 2 238 1 319 2 165 1 95 2 240 1 18 3 338 1 245 1 47 2 216 1 299 2 21 1 246 2 6 1 126 1 81 2 152 1 248 1 369 1 203 1 133 1 177 1 156 1 256 2 88 1 138 1 35 1 36 2 68 1 180 1 357 1 142 1 90 1 182 1 
114 1 38 1 47 1 162 1 299 1 246 1 74 1 146 1 18 1 133 1 
162 1 304 1 190 1 18 1 146 1 351 1 339 1 295 1 167 1 85 1 322 1 244 1 299 1 206 1 
162 1 304 1 190 1 74 1 18 1 146 1 351 2 339 1 167 1 322 1 244 1 47 1 299 1 206 2 246 1 
296 1 327 1 366 1 206 1 351 1 
266 1 296 1 327 1 206 2 304 1 190 1 326 1 351 2 
296 1 206 1 351 1 
327 1 38 1 162 1 74 1 146 1 133 1 18 1 351 1 114 1 243 1 47 1 299 1 206 1 246 1 
190 1 
296 1 327 1 206 2 304 1 49 1 190 1 326 1 351 2 
327 2 222 1 199 2 57 1 28 1 304 1 111 2 190 1 31 1 372 2 351 5 353 1 296 2 136 1 330 1 206 5 195 1 172 1 326 1 
152 1 75 1 
152 2 303 1 162 2 348 1 74 1 18 2 47 1 299 2 246 1 
115 1 129 1 378 1 
152 1 248 1 162 1 361 1 319 1 165 1 18 1 240 1 338 1 256 1 216 1 21 1 36 1 180 1 90 1 182 1 
129 1 248 1 162 2 58 1 165 1 74 1 319 1 240 1 18 2 338 1 47 1 256 1 216 1 299 1 21 1 36 1 180 1 181 1 90 1 182 1 
26 1 152 1 303 1 162 5 58 2 74 4 18 5 295 1 47 4 324 1 299 5 246 1 231 1 181 1 
25 1 114 1 47 2 162 2 299 2 74 2 146 1 18 2 
152 1 47 3 162 3 299 3 58 1 246 1 74 3 18 3 
114 1 47 1 162 1 299 1 74 1 146 1 18 1 
47 1 303 1 162 1 299 1 246 1 348 1 74 1 146 1 18 1 
314 1 162 4 363 1 165 1 74 3 319 1 95 2 240 1 18 4 146 1 338 1 339 1 167 1 322 1 244 1 47 3 216 1 299 3 21 1 246 2 6 1 126 1 81 1 152 1 248 1 303 1 58 1 203 1 133 1 351 1 156 1 256 1 88 1 138 1 206 1 35 1 13 1 36 1 180 1 181 1 357 1 90 1 142 1 182 1 
295 1 152 1 47 1 324 1 162 2 299 2 58 1 74 1 18 2 
303 1 162 3 58 2 363 1 190 1 74 3 146 1 18 3 351 1 339 1 167 1 322 1 244 1 47 3 299 3 206 1 246 1 181 1 380 1 
129 1 303 1 162 2 58 1 74 2 18 2 47 2 299 2 246 1 378 1 
152 1 248 1 162 1 319 1 165 1 18 1 240 1 338 1 256 1 216 1 21 1 36 1 180 1 90 1 182 1 
152 1 248 1 162 1 319 1 165 1 18 1 240 1 169 1 256 1 216 1 21 1 36 1 258 1 180 1 90 1 
314 1 95 2 267 1 46 1 217 1 126 1 6 2 173 1 81 4 103 1 129 2 249 1 108 1 369 2 203 1 115 2 88 1 138 1 179 1 34 1 35 1 230 1 288 1 378 2 
25 1 322 1 47 1 162 1 299 1 74 1 146 1 18 1 
356 1 61 1 
356 1 61 1 
51 1 269 1 
51 1 269 1 
51 1 269 1 
12 1 356 1 61 1 
137 1 356 1 61 1 
51 1 269 1 170 1 77 1 356 2 61 2 
12 1 356 1 61 1 
12 1 356 1 61 1 
87 1 356 1 61 1 
87 1 356 1 61 1 
87 1 356 1 61 1 
233 1 162 2 189 1 362 1 74 2 336 1 18 2 47 2 193 1 299 2 152 1 200 1 155 1 112 1 61 1 351 1 65 1 135 1 308 1 137 1 118 1 206 1 207 1 356 1 
119 1 233 1 43 1 109 1 335 1 155 2 190 1 336 2 61 2 351 2 65 2 298 1 308 2 206 2 170 1 228 2 207 3 356 2 102 1 
63 1 66 1 130 1 
63 1 0 1 130 1 
145 1 260 1 0 1 66 2 20 1 130 3 
145 1 260 1 0 1 66 1 341 1 130 2 
145 2 260 1 0 1 66 1 130 2 
71 1 39 1 184 1 315 3 362 1 189 1 190 2 265 1 296 1 46 1 100 1 197 2 326 1 327 4 222 2 199 1 249 1 252 1 281 2 304 1 111 1 31 1 307 1 372 1 351 5 64 1 135 1 206 5 330 3 34 1 230 1 289 2 
71 1 39 3 184 2 315 9 189 4 190 5 212 1 296 6 366 5 46 3 100 2 326 1 327 7 53 1 222 6 199 2 106 1 249 3 279 5 252 3 281 6 304 1 82 1 111 2 132 1 31 1 372 2 351 9 353 1 206 9 330 8 34 3 230 3 312 1 289 6 
184 1 39 1 315 4 189 1 190 3 265 1 46 1 100 1 197 1 327 2 199 1 222 2 249 1 252 2 281 2 304 1 111 1 372 1 351 3 64 1 353 1 206 3 330 3 34 1 230 1 289 2 
184 1 39 2 315 7 189 2 190 4 265 1 46 2 100 1 197 2 327 3 53 1 199 1 222 4 106 1 249 2 252 3 281 4 304 1 82 1 111 1 372 1 351 4 353 1 64 1 206 4 330 5 34 2 230 2 289 4 
216 1 333 1 75 1 
216 1 107 1 
337 1 
248 1 216 1 240 1 
42 1 216 1 
248 1 216 1 
248 1 354 1 94 1 216 3 333 2 240 1 
6 3 127 1 52 2 81 7 368 1 328 1 54 1 108 3 201 1 369 4 62 1 267 2 46 1 257 1 34 1 143 1 79 1 
6 3 127 1 52 2 81 7 368 1 328 1 54 1 108 3 201 1 369 4 62 1 267 2 46 1 257 1 34 1 143 1 79 1 
6 3 127 1 52 2 81 7 368 1 328 1 54 1 108 3 201 1 369 4 62 1 267 2 46 1 257 1 34 1 22 1 143 1 79 1 
39 3 314 1 95 2 19 1 267 5 148 1 46 4 271 1 79 2 6 15 127 2 81 31 52 3 368 1 328 1 54 2 249 3 201 1 108 10 280 1 369 16 203 1 255 1 9 4 62 1 157 3 88 1 138 1 257 5 287 1 34 4 230 3 158 1 143 2 
6 4 127 1 52 2 81 9 368 1 328 1 54 1 314 2 108 4 369 5 370 1 203 2 95 4 19 1 62 1 267 3 46 1 88 2 138 2 257 1 34 1 70 1 143 1 79 1 
0 1 316 1 319 1 165 1 365 1 96 1 3 1 340 1 168 1 323 1 20 1 270 1 5 1 55 2 278 2 130 2 29 1 282 1 63 1 373 1 83 1 66 1 256 1 11 1 139 1 36 1 141 1 91 1 381 1 90 1 
0 1 316 1 319 1 165 1 365 1 96 1 3 1 168 1 20 1 323 1 270 2 5 1 23 1 55 3 278 3 250 1 130 2 153 1 282 1 63 1 83 1 66 1 256 1 11 1 139 1 36 1 141 1 91 1 381 1 90 1 
0 1 316 1 319 1 165 1 365 1 168 1 323 1 20 1 270 2 5 1 23 1 55 2 278 2 130 2 153 1 282 1 63 1 83 1 66 1 256 1 11 1 36 1 141 1 381 1 90 1 
259 1 15 1 165 1 319 1 365 2 3 1 323 2 216 1 5 2 367 1 248 1 55 1 278 1 250 1 7 1 282 2 352 1 84 1 256 1 36 1 180 1 91 1 90 1 
0 1 319 1 165 1 365 1 96 1 3 1 340 1 168 1 323 1 20 1 5 1 55 1 278 1 130 2 153 1 282 1 63 1 373 1 66 1 256 1 139 1 36 1 141 1 91 1 381 1 90 1 
364 1 
183 2 2 2 237 2 190 2 146 1 45 2 339 1 242 1 295 1 296 6 244 1 299 1 100 1 150 2 248 1 199 1 7 1 252 2 304 1 253 1 111 1 351 5 256 2 206 5 311 1 209 2 359 1 262 1 315 2 162 1 263 4 15 1 319 2 165 1 211 1 18 1 167 1 322 1 214 1 216 1 171 1 326 3 222 2 277 1 131 2 371 1 31 1 372 1 85 1 330 2 36 2 140 1 180 2 90 1 92 1 
162 1 263 2 2 1 211 1 18 1 146 1 339 1 295 1 242 1 167 1 296 2 322 1 244 1 299 1 49 1 326 1 253 1 371 1 351 3 85 1 206 3 92 1 
183 1 162 1 263 3 211 1 190 1 18 1 146 1 339 1 295 1 242 1 296 1 167 1 322 1 244 1 299 1 49 1 326 1 253 1 304 1 371 1 351 3 85 1 206 3 92 1 
183 1 162 1 263 3 2 1 211 1 190 1 18 1 146 1 45 1 339 1 295 1 242 1 167 1 296 2 322 1 244 1 299 1 49 1 326 1 253 1 304 1 371 1 351 3 85 1 206 3 92 1 
183 4 2 4 237 2 190 5 146 1 45 4 339 1 242 1 295 1 296 7 244 1 99 1 299 1 49 1 150 2 199 1 252 2 253 1 304 5 154 1 111 1 351 5 206 5 209 2 210 1 263 6 162 1 211 1 18 1 167 1 322 1 220 1 326 3 222 1 277 1 131 2 371 1 31 1 372 1 85 1 33 1 330 1 140 1 92 1 
183 2 237 2 2 2 190 2 146 1 45 2 339 1 295 1 242 1 296 4 244 1 299 1 150 2 199 1 252 2 253 1 304 1 111 1 351 4 206 4 209 2 263 4 162 1 315 2 211 1 18 1 167 1 322 1 214 1 326 2 222 1 277 1 131 2 371 1 31 1 372 1 85 1 330 1 140 1 92 1 
183 2 210 1 162 1 263 4 2 2 237 2 190 1 211 1 18 1 146 1 45 2 339 1 295 1 242 1 296 4 167 1 322 1 244 1 299 1 220 1 150 2 326 2 222 1 199 1 277 1 131 2 252 2 304 1 253 1 371 1 111 1 31 1 372 1 351 4 85 1 33 1 330 1 206 4 140 1 209 2 92 1 
183 2 210 1 162 1 263 4 2 2 237 2 190 1 211 1 18 1 146 1 45 2 339 1 295 1 242 1 296 4 167 1 322 1 244 1 299 1 220 1 150 2 326 2 222 1 199 1 277 1 131 2 252 2 304 1 253 1 371 1 111 1 31 1 372 1 351 4 85 1 33 1 330 1 206 4 140 1 209 2 92 1 
183 2 315 2 162 1 263 4 163 2 236 2 2 2 237 2 190 1 211 1 18 1 146 1 45 2 339 1 295 1 242 1 296 4 167 1 322 1 244 1 299 1 343 1 220 1 149 1 150 2 326 2 222 1 199 1 277 1 304 1 253 1 371 1 111 1 31 1 372 1 351 4 85 1 330 1 206 4 159 1 92 1 
183 3 210 1 162 1 263 5 237 2 2 3 190 1 211 1 18 1 146 1 45 3 339 1 295 1 242 1 167 1 296 5 322 1 244 1 299 1 220 1 150 2 326 2 222 1 199 1 277 1 131 2 252 2 304 1 253 1 371 1 154 1 111 1 31 1 372 1 351 4 85 1 33 1 330 1 206 4 140 1 209 2 92 1 
183 3 210 1 162 1 263 5 237 2 2 3 190 1 211 1 18 1 146 1 45 3 339 1 295 1 242 1 167 1 296 5 322 1 244 1 299 1 220 1 150 2 326 2 222 1 199 1 277 1 131 2 252 2 304 1 253 1 371 1 154 1 111 1 31 1 372 1 351 4 85 1 33 1 330 1 206 4 140 1 209 2 92 1 
183 2 236 2 237 2 2 2 190 1 146 1 45 2 339 1 295 1 242 1 296 4 244 1 299 1 150 2 199 1 253 1 304 1 111 1 351 4 206 4 159 1 263 4 162 1 315 2 163 2 211 1 18 1 167 1 322 1 214 1 326 2 222 1 277 1 371 1 31 1 372 1 85 1 330 1 92 1 
314 1 95 2 267 2 46 1 75 1 79 1 126 1 6 3 173 1 81 6 52 1 368 1 129 1 328 1 152 2 108 2 369 3 203 1 62 1 115 1 88 1 138 1 35 1 34 1 378 1 143 1 
39 2 314 2 14 1 317 1 95 4 267 1 46 2 76 1 300 1 6 6 126 2 81 14 152 1 129 11 249 1 108 2 369 8 203 2 254 1 255 1 9 3 115 11 88 2 157 3 138 2 257 1 35 1 34 1 230 2 68 1 378 4 158 1 357 1 
313 1 314 1 162 2 361 1 165 1 319 1 74 1 95 2 240 1 18 2 338 1 47 1 216 1 299 1 21 1 126 1 6 1 302 1 81 2 152 1 248 1 58 1 369 1 203 1 254 1 113 1 256 1 88 1 138 1 35 1 36 1 180 1 68 1 378 1 181 1 90 1 357 1 182 1 
39 2 95 6 240 2 338 2 47 1 46 3 299 1 301 2 6 10 52 1 152 2 248 2 249 2 58 1 108 8 153 1 59 2 202 2 203 3 254 1 10 1 62 1 156 2 115 7 256 3 257 4 68 1 357 1 314 3 162 3 319 3 74 1 165 2 18 3 267 4 268 1 216 2 21 2 79 1 126 3 274 1 81 20 368 1 328 1 129 7 369 10 88 3 138 3 375 2 34 3 35 3 36 3 230 2 180 1 181 1 378 7 90 2 143 1 182 2 
37 1 314 2 162 1 15 1 74 1 165 2 319 7 95 4 18 1 297 1 47 1 245 2 299 1 216 3 126 2 6 1 173 1 81 2 248 2 58 1 7 1 29 1 153 1 369 1 203 2 32 1 86 1 67 1 256 8 88 2 89 1 138 2 227 1 35 2 36 8 180 2 68 1 90 2 357 1 
39 1 314 1 162 1 74 1 95 2 18 1 267 1 47 1 46 1 299 1 246 1 126 1 6 2 81 3 129 1 303 1 249 1 108 1 369 1 203 1 254 1 115 1 117 1 88 1 138 1 35 1 34 1 230 1 378 1 
126 1 81 2 173 1 129 1 314 1 108 1 369 2 203 1 95 2 115 1 46 1 88 1 138 1 217 1 257 1 35 1 230 1 378 1 
126 1 6 2 81 2 173 1 129 1 314 1 249 1 108 1 203 1 95 2 267 1 115 1 88 1 138 1 35 1 34 1 378 1 288 1 
39 1 314 1 95 2 267 1 46 1 126 1 6 2 173 1 81 4 129 2 249 1 108 2 369 2 203 1 115 2 88 1 138 1 257 1 35 1 34 1 230 1 378 2 
126 1 81 2 129 1 314 1 108 1 369 2 203 1 95 2 32 1 115 1 46 1 88 1 138 1 217 1 257 1 35 1 230 1 378 1 
126 1 6 2 81 2 129 1 314 1 249 1 108 1 203 1 95 2 32 1 267 1 115 1 88 1 138 1 35 1 34 1 378 1 288 1 
39 1 314 1 95 2 267 1 46 1 126 1 6 2 81 4 129 2 249 1 108 2 369 2 203 1 32 1 115 2 88 1 138 1 257 1 35 1 34 1 230 1 378 2 
39 1 314 1 95 2 267 1 46 1 126 1 6 2 81 4 129 2 249 1 108 2 369 2 203 1 115 2 88 1 138 1 257 1 35 1 34 1 230 1 378 2 
314 1 162 1 165 1 319 1 95 2 240 1 18 1 338 1 216 1 21 1 126 1 6 1 81 2 152 1 248 1 369 1 203 1 156 1 256 1 88 1 138 1 35 1 36 1 68 1 180 1 90 1 357 1 182 1 
314 1 162 1 165 1 319 1 95 2 240 1 18 1 169 1 342 1 216 1 21 1 126 1 6 1 81 2 152 1 248 1 369 1 203 1 256 1 88 1 138 1 35 1 258 1 36 1 68 1 180 1 90 1 357 1 
39 1 314 1 95 2 267 1 46 1 126 1 6 2 81 4 129 2 249 1 108 2 369 2 203 1 254 1 115 2 88 1 138 1 257 1 35 1 34 1 230 1 378 2 
39 1 314 1 162 1 165 1 319 1 95 2 240 1 18 1 338 1 267 1 46 1 216 1 21 1 6 2 126 1 81 4 129 2 248 1 249 1 108 2 29 1 369 2 59 1 203 1 156 1 115 2 256 1 88 1 138 1 257 1 34 1 35 1 230 1 36 1 378 2 90 1 182 1 
93 1 39 1 314 1 162 1 74 1 95 2 18 1 47 1 46 1 299 1 246 1 6 1 126 1 81 3 129 1 303 1 249 1 108 1 369 2 203 1 254 1 115 1 88 1 138 1 257 1 34 1 35 1 230 1 378 1 
144 1 40 1 39 3 314 2 164 1 95 4 267 3 46 3 272 1 273 1 151 2 78 1 6 10 81 19 276 1 249 3 108 6 369 9 370 1 203 2 350 2 255 1 9 2 88 2 157 1 138 2 257 3 34 3 230 3 158 1 
144 1 40 2 39 3 314 3 290 1 95 6 19 2 267 2 46 3 272 1 151 4 78 1 6 12 81 26 276 2 247 1 249 2 108 4 369 14 306 1 370 1 203 3 350 1 9 2 178 1 88 3 157 2 138 3 257 2 34 2 230 3 69 1 158 2 232 1 
144 1 40 1 39 4 314 3 290 1 164 1 95 6 19 1 267 4 46 5 272 1 151 4 78 1 79 1 6 21 52 1 81 41 368 1 247 1 276 2 328 1 249 4 108 8 369 20 306 1 370 1 203 3 350 1 255 1 9 4 62 1 178 1 374 1 88 3 157 3 138 3 257 4 34 5 230 4 69 1 158 3 143 1 232 1 
144 1 40 1 39 4 314 4 290 1 164 1 95 8 19 2 267 4 46 5 272 1 151 4 78 1 79 1 6 18 52 1 81 38 368 1 247 1 276 2 328 1 249 3 108 7 369 20 306 1 370 1 203 4 350 1 255 1 9 4 62 1 178 1 374 1 88 4 157 3 138 4 257 3 34 4 230 4 69 1 158 3 143 1 232 1 
144 1 40 1 39 7 314 2 290 1 317 2 95 4 19 1 267 7 46 8 272 1 151 4 78 1 79 1 6 25 52 1 81 52 368 1 247 1 276 1 328 1 249 7 108 14 369 27 306 1 370 1 203 2 350 1 255 2 9 4 62 1 178 1 88 2 157 4 138 2 257 7 34 8 230 7 69 1 158 2 143 1 232 1 
65 1 308 1 109 1 170 1 335 1 155 1 60 1 336 1 356 1 61 1 
193 1 137 1 
65 1 24 1 308 1 310 1 229 1 155 1 336 1 356 1 61 1 
174 1 12 1 
87 1 101 1 77 1 
233 1 43 1 109 1 335 1 155 1 190 1 336 1 351 1 61 1 65 1 298 1 308 1 206 1 170 1 228 1 207 2 356 1 102 1 
233 1 43 1 109 1 335 1 155 1 190 1 336 1 351 1 61 1 65 1 298 1 308 1 206 1 170 1 228 1 207 2 356 1 102 1 
233 1 43 1 109 1 335 1 155 1 190 1 336 1 351 1 61 1 65 1 298 1 308 1 206 1 170 1 228 1 207 2 356 1 102 1 
174 1 12 1 77 1 
174 1 12 1 77 1 
87 1 101 1 
87 1 101 1 77 1 
118 1 112 1 
162 2 189 1 362 1 336 1 74 2 18 2 122 1 193 1 47 2 299 2 102 1 327 1 152 1 200 1 155 1 112 1 351 1 61 1 65 1 135 1 308 1 137 1 118 1 206 1 228 1 207 1 356 1 
37 1 314 1 162 2 235 1 165 1 319 2 95 2 18 2 191 1 297 1 245 2 216 1 299 2 126 1 6 1 81 2 248 1 345 1 369 1 203 1 254 1 223 1 116 1 256 2 88 1 138 1 35 1 36 2 68 1 90 1 357 1 
0 1 130 2 29 1 153 1 165 1 319 2 96 1 63 1 168 1 66 1 20 1 323 1 256 2 48 1 36 2 196 1 208 1 141 1 90 1 
0 1 130 2 153 1 319 1 165 1 96 1 63 1 168 1 66 1 20 1 323 1 256 1 286 1 36 1 208 1 141 1 90 1 
248 1 7 1 15 1 347 1 165 1 319 1 323 1 256 1 216 1 36 1 180 1 196 1 367 1 90 1 
0 1 130 2 153 1 165 1 319 1 96 1 63 1 168 1 66 1 20 1 323 1 256 1 48 1 36 1 196 1 208 1 141 1 90 1 
105 1 
222 1 57 1 75 1 330 1 304 1 190 1 172 1 
199 1 222 1 315 1 131 1 252 1 304 1 111 1 190 2 31 1 372 1 351 1 296 1 206 1 330 1 140 1 326 1 209 1 
39 2 42 2 234 2 333 2 334 2 190 8 239 1 240 3 339 2 296 5 46 2 100 2 301 2 198 1 248 3 199 4 56 2 251 2 107 3 249 2 57 1 252 6 346 1 304 2 110 2 111 4 351 5 354 1 256 3 206 5 160 2 315 12 165 4 319 3 216 10 172 1 171 1 326 3 222 8 29 1 281 6 31 4 134 1 372 4 224 2 329 1 225 2 330 9 34 2 36 3 230 2 180 1 90 3 289 6 
39 2 290 1 315 6 334 2 190 5 296 1 46 2 100 1 171 1 326 1 247 1 199 2 222 5 56 1 249 2 281 5 252 3 304 2 306 1 176 1 111 2 31 2 372 2 351 1 9 1 157 1 206 1 330 8 376 1 34 2 230 2 69 1 158 1 232 1 289 5 
38 1 210 1 162 1 334 2 74 1 146 1 18 1 243 1 46 2 47 1 299 1 246 1 79 1 199 1 328 1 222 2 56 1 27 1 111 1 31 1 372 1 133 1 351 1 114 1 206 1 330 2 34 1 143 1 
199 1 222 1 57 1 304 1 111 1 190 1 31 1 372 1 330 1 172 1 
39 2 222 5 56 1 315 10 249 2 281 5 252 5 334 2 190 5 46 2 330 5 34 2 230 2 301 1 289 5 
296 1 206 1 304 1 190 1 326 1 351 1 
261 1 359 1 262 1 15 1 165 1 319 4 97 1 296 4 216 1 100 2 171 2 326 2 248 1 199 2 222 2 7 1 346 2 111 2 31 1 372 2 134 1 351 3 353 1 256 4 330 2 206 3 36 4 180 2 90 1 
314 1 162 3 319 1 74 2 165 1 95 2 18 3 240 1 338 1 47 2 299 2 216 1 21 1 246 2 6 1 126 1 81 1 152 1 248 1 203 1 133 1 156 1 256 1 88 1 138 1 35 1 36 1 180 1 357 1 142 1 90 1 182 1 
52 1 222 2 199 1 315 4 281 2 252 2 304 2 111 1 190 4 31 1 372 1 330 1 100 1 171 1 289 2 
65 1 155 1 321 1 
65 1 187 1 118 1 335 1 155 1 
65 1 155 1 321 1 
65 1 155 1 321 1 
65 1 155 1 331 1 
65 1 155 1 331 1 
65 1 155 1 331 1 
65 1 155 1 
356 1 61 1 
6 4 52 1 81 8 368 1 328 1 314 2 108 3 369 4 203 2 95 4 19 1 62 1 267 2 46 1 88 2 138 2 257 1 34 1 79 1 143 1 
6 3 52 1 81 6 368 1 328 1 108 2 369 3 62 1 267 2 46 1 75 1 34 1 79 1 143 1 
6 2 81 4 39 1 314 1 41 1 249 1 108 2 369 2 203 1 95 2 267 1 46 1 88 1 138 1 257 1 34 1 230 1 
6 4 81 7 39 1 249 1 108 2 369 3 255 1 9 2 267 1 46 1 157 1 257 1 34 1 230 1 158 1 
39 2 314 2 292 1 317 1 95 4 19 2 267 5 46 3 76 1 79 2 6 12 52 1 81 23 368 1 328 1 249 2 108 9 369 11 203 2 255 1 9 2 62 1 157 2 88 2 138 2 257 4 34 3 230 2 143 2 
6 1 81 1 9 1 
81 1 157 1 369 1 
6 3 81 6 39 1 314 1 41 1 249 1 108 3 369 3 203 1 95 2 267 2 46 1 88 1 138 1 257 1 34 1 230 1 301 1 
39 2 314 1 290 1 95 2 267 1 46 2 6 6 81 12 247 1 249 2 108 2 369 6 370 1 306 1 203 1 9 1 157 1 88 1 138 1 257 1 34 2 230 2 69 1 158 1 232 1 
6 3 81 6 328 1 108 2 369 3 267 1 46 1 257 1 34 1 79 1 143 1 
6 2 81 3 368 1 314 1 108 2 292 1 369 1 203 1 95 2 19 1 62 1 267 1 88 1 138 1 257 1 143 1 79 1 
6 5 81 10 314 1 328 1 27 1 108 5 369 5 370 1 203 1 95 2 267 3 46 2 88 1 138 1 257 2 34 2 79 2 143 2 
81 2 314 1 108 1 369 2 370 1 203 1 95 2 46 1 88 1 138 1 257 1 230 1 
6 2 81 4 39 1 314 1 249 1 108 2 369 2 370 1 203 1 95 2 267 1 46 1 88 1 138 1 257 1 34 1 230 1 
6 2 81 3 314 3 292 1 108 2 164 1 369 1 370 1 203 3 95 6 19 1 267 1 88 3 138 3 257 1 79 1 143 1 
39 3 314 5 41 1 292 1 164 1 95 10 19 2 267 7 46 5 271 1 79 3 6 18 52 1 81 34 368 1 328 2 249 3 108 12 280 1 369 16 370 1 203 5 255 1 9 4 62 1 88 5 157 3 138 5 257 5 287 1 34 5 230 3 158 1 143 3 
314 1 95 2 267 2 46 1 79 1 6 4 52 1 81 8 368 1 328 1 108 2 369 4 370 1 203 1 9 1 62 1 157 1 88 1 138 1 34 1 69 1 158 1 143 1 
39 1 314 2 41 1 95 4 267 2 46 2 79 1 6 5 52 1 81 11 368 1 328 1 108 3 369 6 370 1 203 2 255 1 9 2 62 1 88 2 157 1 138 2 257 1 34 1 230 1 69 1 158 1 143 1 
39 2 314 3 41 1 290 1 95 6 19 1 267 3 46 3 79 1 6 10 52 1 81 19 368 1 247 1 328 1 249 2 108 4 369 9 370 1 306 1 203 3 9 1 62 1 157 1 88 3 138 3 257 1 34 3 230 2 69 1 158 1 143 1 232 1 
39 2 314 3 41 1 290 1 95 6 19 1 267 3 46 3 79 1 6 7 52 1 81 17 368 1 247 1 328 1 249 1 108 5 369 10 370 1 306 1 203 3 9 1 62 1 157 1 88 3 138 3 257 2 34 2 230 2 69 1 158 1 143 1 232 1 
314 1 95 2 267 2 46 1 79 1 6 4 52 1 81 8 368 1 328 1 108 2 369 4 370 1 203 1 9 1 62 1 157 1 88 1 138 1 34 1 69 1 158 1 143 1 
39 2 314 1 290 1 95 2 267 1 46 2 6 6 81 12 247 1 249 2 108 2 369 6 370 1 306 1 203 1 9 1 157 1 88 1 138 1 257 1 34 2 230 2 69 1 158 1 232 1 
39 2 314 4 41 1 290 1 95 8 19 2 267 3 46 3 79 1 6 8 52 1 81 18 368 1 247 1 328 1 249 1 108 5 369 10 306 1 370 1 203 4 9 1 62 1 88 4 157 1 138 4 257 2 34 2 230 2 69 1 158 1 143 1 232 1 
39 3 314 4 290 1 164 1 95 8 19 2 267 3 46 3 6 7 81 16 247 1 249 2 108 6 369 9 306 1 370 1 203 4 9 1 88 4 157 1 138 4 257 3 34 2 230 3 69 1 158 1 232 1 
6 4 81 7 368 1 328 1 108 6 369 3 62 2 267 3 46 1 257 3 34 1 79 3 143 3 
39 2 314 4 290 1 164 1 95 8 19 2 267 3 46 3 79 1 6 8 52 1 81 18 368 1 247 1 328 1 249 1 108 4 369 10 306 1 370 1 203 4 9 1 62 1 88 4 157 1 138 4 257 1 34 2 230 2 69 1 158 1 143 1 232 1 
295 1 152 1 162 1 299 1 324 1 16 1 18 1 
152 1 162 1 283 1 16 1 349 1 18 1 98 1 295 1 324 1 299 1 379 1 221 1 
248 1 256 1 216 1 7 1 75 1 15 1 36 1 165 1 319 1 180 1 90 1 
152 1 248 1 162 2 58 1 165 1 74 1 319 1 240 1 18 2 47 1 256 1 216 1 299 1 21 1 36 1 180 1 90 1 182 1 
42 1 162 2 319 1 74 1 165 1 18 2 240 2 146 1 322 1 244 1 47 2 299 2 216 3 21 1 152 1 248 2 58 1 346 1 110 1 256 1 36 1 90 1 182 1 
42 1 162 2 319 2 74 1 165 1 18 2 240 2 146 1 322 1 244 1 47 2 299 2 216 3 21 1 152 1 248 2 58 1 346 1 110 1 256 2 258 1 36 2 377 1 90 1 
42 1 333 1 1 1 319 3 165 1 190 1 240 1 339 1 296 1 216 4 248 1 107 1 346 1 304 1 110 1 351 2 205 1 256 3 206 2 36 3 377 1 180 1 90 1 
248 1 42 1 107 1 333 1 304 1 346 1 110 1 190 1 165 1 319 3 240 1 351 2 339 1 224 1 296 1 256 3 216 4 206 2 36 3 377 1 180 1 90 1 
256 1 89 1 36 1 165 1 319 1 90 1 
37 1 248 2 161 1 188 1 29 1 153 1 319 6 165 3 44 1 240 1 86 1 354 1 245 1 67 1 256 7 216 3 89 1 227 1 36 7 180 2 90 2 
314 2 162 2 165 1 74 1 319 1 95 4 240 1 18 2 338 1 267 2 46 1 47 1 216 1 299 1 21 1 79 1 6 3 126 2 52 1 81 6 368 1 129 1 152 2 328 1 248 1 108 2 58 1 29 1 369 3 59 1 203 2 254 1 62 1 156 1 223 1 115 1 256 1 88 2 138 2 375 1 34 1 35 2 36 1 378 1 90 1 143 1 182 1 
160 1 333 1 190 1 319 1 339 1 296 2 216 2 172 1 326 1 327 1 222 1 199 2 251 1 107 1 57 1 304 1 111 2 31 2 372 2 134 1 351 3 224 1 225 1 256 1 330 1 206 3 36 1 180 1 
248 1 333 1 29 1 319 2 165 2 240 1 354 1 256 2 216 2 89 1 36 2 198 1 90 1 
248 1 7 1 29 1 15 1 165 1 319 4 121 1 256 4 216 1 36 4 377 1 180 1 90 1 
104 1 248 1 188 1 346 1 319 2 165 2 44 1 240 1 147 1 10 1 256 2 216 1 36 2 90 1 
63 1 168 1 0 1 256 1 130 1 36 1 165 1 319 1 180 1 90 1 
37 1 248 1 256 2 216 1 29 1 153 1 36 2 165 1 319 2 90 1 191 1 
37 1 248 2 7 1 29 1 346 1 15 1 319 4 165 2 121 1 256 5 67 1 216 3 227 1 36 5 180 1 90 2 
37 1 248 2 7 1 29 1 346 1 15 1 8 1 319 4 165 2 121 1 256 5 216 3 227 1 36 5 180 1 90 2 
152 1 248 1 162 2 58 1 165 1 74 1 319 1 240 1 18 2 47 1 256 1 216 1 299 1 21 1 36 1 258 1 180 1 90 1 
248 1 161 1 188 1 346 1 319 1 165 2 44 1 240 1 354 1 256 1 216 1 36 1 90 1 
241 1 344 1 152 1 291 1 123 1 
327 1 344 2 152 1 291 1 304 1 293 1 363 1 190 1 146 1 351 2 339 1 241 2 167 1 322 1 244 1 215 1 206 2 123 2 219 1 
116 1 344 1 162 1 299 1 345 1 291 1 235 1 123 1 18 1 
215 1 291 1 293 1 
83 1 11 1 75 1 316 1 
83 1 3 1 55 1 278 1 11 1 316 1 91 1 
278 1 282 1 365 1 
55 3 175 1 278 3 316 1 284 1 320 1 120 2 83 1 3 1 340 1 11 1 91 1 
83 1 3 1 55 2 278 2 11 1 270 1 316 1 194 1 91 1 
285 1 83 1 3 1 340 1 55 1 278 1 125 1 91 1 213 1 
83 1 3 1 340 1 55 1 278 1 316 1 91 1 
3 1 340 1 55 1 278 1 11 1 316 2 91 1 
358 1 55 2 278 2 316 1 318 1 83 1 3 2 340 1 91 2 80 1 
285 1 83 1 192 1 3 1 340 1 55 2 278 2 270 1 124 1 166 1 91 1 213 1 
0 1 55 2 130 2 278 2 316 1 305 1 63 1 83 1 3 1 340 1 20 1 66 1 11 1 270 1 91 1 
285 1 83 1 192 1 3 1 340 1 55 2 278 2 270 1 226 1 194 1 91 1 213 1 
83 1 3 1 340 1 55 1 278 1 11 1 316 1 91 1 
285 1 83 1 192 1 3 1 55 2 278 2 270 1 91 1 213 2 
275 1 55 2 278 2 72 1 360 1 316 1 83 1 3 1 340 1 270 1 11 1 91 1 
175 1 55 3 278 3 316 1 320 2 120 2 83 1 3 1 340 1 11 1 218 1 91 1 
83 2 309 2 4 1 17 1 
3 1 340 1 55 1 278 1 30 1 91 1 
83 1 3 1 340 1 55 2 278 2 11 1 270 1 316 1 124 1 91 1 
325 1 
83 1 3 1 340 1 55 1 278 1 11 1 316 1 91 1 
55 3 278 3 316 1 120 1 3 1 83 1 340 1 270 1 11 1 124 1 91 1 
285 1 83 1 192 1 55 1 278 1 270 1 
83 1 316 1 

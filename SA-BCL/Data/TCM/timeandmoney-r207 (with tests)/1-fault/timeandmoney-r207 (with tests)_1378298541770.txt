#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 2 106 5 341 1 340 2 22 2 181 1 180 1 344 4 42 1 112 1 8 1 316 3 321 1 370 2 348 9 267 2 51 9 33 1 53 2 292 1 216 1 295 1 100 1 243 1 196 2 152 1 82 1 153 6 
174 2 106 5 341 1 340 2 22 2 181 1 180 1 344 4 42 1 112 1 8 1 316 3 321 1 370 2 348 9 267 2 51 9 33 1 53 2 292 1 216 1 295 1 100 1 243 1 196 2 152 1 82 1 153 6 
174 2 106 6 341 1 340 2 22 2 181 1 180 1 344 5 42 1 112 1 8 1 316 4 321 1 370 2 348 10 267 2 51 10 33 1 53 2 292 1 216 1 295 1 100 1 243 1 196 2 152 1 82 1 153 7 
174 2 106 4 341 1 340 2 22 2 181 1 180 1 344 3 42 1 8 1 316 2 321 1 370 2 348 7 267 2 51 7 33 1 53 1 292 1 216 1 295 1 100 1 243 1 196 2 152 1 82 1 153 4 
316 1 174 1 321 1 106 3 370 1 348 4 340 1 22 1 51 4 33 1 53 2 292 1 180 1 344 2 112 1 196 1 152 1 153 3 
174 1 131 1 106 1 321 1 348 2 176 1 340 1 267 1 51 2 22 1 33 1 180 1 136 1 295 1 196 1 8 1 
174 2 316 1 321 1 106 2 348 3 267 1 51 3 33 1 180 1 216 1 344 1 196 2 153 1 
174 2 106 5 340 1 22 1 180 1 363 1 344 4 42 1 112 1 316 3 321 1 370 1 348 9 267 1 51 9 33 1 53 2 292 1 216 1 243 1 196 2 152 1 153 7 130 1 
174 2 106 5 340 1 22 1 180 1 363 1 344 4 42 1 112 1 316 3 321 1 370 1 348 9 267 1 51 9 33 1 53 2 292 1 216 1 243 1 196 2 152 1 153 7 130 1 
164 1 323 1 105 1 
156 1 43 2 323 1 
366 1 278 2 381 2 62 2 74 2 63 1 288 2 315 2 
173 1 248 1 225 1 107 2 205 1 342 1 206 1 278 2 24 1 62 3 63 1 359 2 208 1 281 2 256 1 257 2 66 1 232 1 366 1 45 1 27 1 288 3 347 1 289 1 315 2 118 1 165 1 74 2 270 1 170 1 17 2 300 1 78 1 79 1 197 1 381 2 199 1 
366 1 331 1 324 1 278 1 346 1 381 1 62 1 74 1 288 1 315 1 
320 1 235 1 164 1 21 1 323 1 62 1 293 1 158 1 89 1 137 1 346 1 313 1 288 1 315 1 
235 1 164 1 21 2 323 1 278 1 74 1 62 1 293 1 89 1 137 1 381 1 346 1 313 2 288 1 315 1 
357 1 21 1 23 1 210 1 313 1 
164 1 21 2 323 1 23 1 210 1 313 2 326 1 64 1 
21 1 23 1 313 1 
21 1 324 1 278 1 74 1 62 1 280 1 366 1 331 1 346 1 210 1 381 1 313 1 288 1 315 1 
323 1 
164 1 121 1 21 2 323 1 23 1 210 1 313 2 326 1 
155 2 164 1 21 5 204 2 323 1 228 1 23 2 377 1 144 1 326 1 361 1 77 1 56 1 380 2 210 2 84 1 313 5 9 1 369 1 
63 1 105 1 
278 1 142 1 62 2 74 1 63 2 330 1 381 1 288 2 315 2 
322 1 325 1 57 1 
118 1 225 1 205 1 62 1 63 1 359 1 257 1 16 1 17 1 300 1 78 1 27 1 79 1 288 1 199 1 347 1 
49 1 118 1 97 1 225 1 205 1 278 1 74 1 62 2 325 1 359 1 257 1 300 1 17 1 27 1 78 1 79 1 347 1 288 2 199 1 315 1 
49 1 97 2 278 4 142 1 74 4 62 5 63 1 158 1 364 1 351 1 381 1 198 1 288 5 315 5 
298 1 324 1 278 2 346 1 62 2 74 2 288 2 315 2 
97 1 278 3 381 1 62 3 74 3 63 1 288 3 315 3 
324 1 278 1 346 1 62 1 74 1 288 1 315 1 
330 1 278 1 346 1 381 1 142 1 62 1 74 1 288 1 315 1 
173 1 20 1 225 1 107 1 205 1 21 1 342 1 206 1 278 3 24 1 62 4 63 1 359 1 208 1 281 2 257 1 89 1 137 1 366 1 27 1 346 1 313 1 347 1 288 4 289 1 315 3 49 1 118 1 97 1 31 1 235 1 165 1 142 1 74 3 293 1 270 1 170 1 300 1 17 1 78 1 79 1 197 1 381 2 199 1 
97 1 278 1 62 2 74 1 63 1 288 2 158 1 364 1 315 2 
49 1 97 2 20 1 235 1 21 1 323 1 278 3 142 1 74 3 62 3 293 1 89 1 137 1 381 1 346 1 313 1 288 3 70 1 315 3 
97 1 322 1 278 2 142 1 74 2 62 2 325 1 381 1 288 2 315 2 
118 1 225 1 205 1 62 1 63 1 359 1 257 1 17 1 300 1 78 1 27 1 79 1 288 1 199 1 347 1 
118 1 205 1 62 1 63 1 359 1 294 1 257 1 365 1 17 1 300 1 78 1 27 1 79 1 288 1 199 1 
107 4 24 1 281 2 208 2 258 1 66 2 48 1 234 1 289 1 72 1 52 1 165 1 322 2 376 1 325 2 217 1 270 1 169 1 55 1 170 1 18 1 197 1 57 2 355 1 
298 1 278 1 346 1 62 1 74 1 293 1 288 1 315 1 
161 1 101 1 
161 1 101 1 
150 1 146 1 
150 1 146 1 
150 1 146 1 
161 1 101 1 81 1 
161 1 101 1 81 1 
161 1 242 1 101 1 
269 1 161 2 150 1 101 2 309 1 146 1 
161 1 101 1 81 1 
161 1 101 1 129 1 
161 1 101 1 129 1 
161 1 101 1 129 1 
338 1 226 1 21 1 278 2 62 2 63 1 88 1 360 1 231 1 65 1 68 1 312 1 7 1 313 1 116 1 288 2 315 2 161 1 74 2 296 1 242 1 101 1 76 1 352 1 
337 1 161 2 247 1 318 1 21 2 323 1 134 1 350 1 269 1 101 2 231 2 76 1 65 2 312 2 352 2 7 3 151 1 313 2 304 2 
370 1 340 1 22 1 
340 1 22 1 136 1 
370 2 127 1 340 3 12 1 29 1 136 1 
370 1 127 1 340 2 3 1 29 1 136 1 
370 1 127 1 340 2 29 2 136 1 
86 1 155 1 156 1 204 1 21 5 229 2 178 1 23 1 179 2 279 2 254 1 109 1 361 3 258 1 4 1 43 3 68 1 189 1 159 1 210 4 313 5 116 1 48 1 234 1 9 2 164 1 52 1 323 2 326 1 296 1 56 1 380 1 
86 3 356 1 155 2 203 1 156 3 357 5 132 1 21 9 204 2 229 6 23 6 179 6 254 2 361 8 258 3 111 1 4 1 43 9 159 2 210 7 116 4 313 9 48 3 234 3 9 6 50 1 164 1 371 5 52 3 323 5 326 1 77 1 56 1 380 2 275 1 
86 1 155 1 156 2 204 1 21 3 229 2 178 1 179 2 254 1 279 1 109 1 361 3 258 1 43 4 159 1 210 2 313 3 116 1 48 1 234 1 9 2 164 1 323 3 52 1 77 1 380 1 
86 2 356 1 155 1 156 3 204 1 21 4 229 4 178 1 179 4 254 1 279 2 109 1 361 5 258 2 43 7 159 1 210 3 313 4 116 2 48 2 234 2 9 4 50 1 164 1 323 4 52 2 77 1 380 1 275 1 
205 1 0 1 105 1 
205 1 172 1 
115 1 
118 1 205 1 27 1 
205 1 26 1 
118 1 205 1 
118 1 265 1 0 2 205 3 27 1 207 1 
30 1 61 1 32 1 250 2 107 7 52 1 372 1 268 1 374 1 25 1 208 3 217 2 297 1 328 1 258 1 66 4 355 3 
30 1 61 1 32 1 250 2 107 7 52 1 372 1 268 1 374 1 25 1 208 3 217 2 297 1 328 1 258 1 66 4 355 3 
30 1 61 1 32 1 358 1 250 2 107 7 52 1 268 1 372 1 374 1 25 1 208 3 217 2 297 1 328 1 258 1 66 4 355 3 
86 3 61 2 107 31 250 3 306 1 25 1 24 1 281 2 208 15 185 1 258 4 66 16 234 3 48 3 289 1 263 4 30 2 32 2 215 1 268 1 372 1 165 1 52 4 374 5 99 1 166 1 13 3 217 5 297 1 194 1 328 2 218 1 197 1 355 10 
61 1 107 9 250 2 24 2 25 1 281 4 208 4 258 1 66 5 289 2 96 1 30 1 32 1 73 1 52 1 165 2 268 1 374 1 166 1 217 3 328 1 297 1 197 2 355 4 
174 1 106 1 340 2 22 1 359 1 180 1 136 1 257 1 138 1 113 1 261 1 367 1 317 1 321 1 370 1 348 2 267 1 51 2 33 1 12 1 35 1 149 1 17 1 196 1 300 1 79 1 153 1 276 1 246 1 201 1 
174 1 59 1 106 1 340 2 22 1 359 1 136 1 257 1 41 1 138 1 113 1 261 1 367 1 317 1 321 1 370 1 348 3 267 1 51 3 33 1 12 1 149 1 17 1 196 1 300 1 79 1 153 2 246 1 336 1 201 1 
106 1 340 2 22 1 359 1 136 1 257 1 41 1 138 1 113 1 261 1 321 1 370 1 348 2 267 1 51 2 33 1 12 1 149 1 17 1 300 1 79 1 153 2 246 1 336 1 201 1 
174 1 59 1 205 1 359 1 257 1 138 2 113 2 46 1 118 1 348 1 267 2 51 1 143 1 349 1 125 1 378 1 149 2 272 1 300 1 17 1 196 1 79 1 199 1 
174 1 340 2 22 1 359 1 180 1 136 1 257 1 41 1 138 1 113 1 261 1 367 1 317 1 370 1 348 1 267 1 51 1 12 1 149 1 17 1 196 1 300 1 79 1 276 1 246 1 201 1 
259 1 
224 1 227 2 1 2 2 2 39 1 89 1 43 2 137 1 233 1 346 1 47 1 288 1 9 2 95 1 235 1 11 1 349 1 293 1 193 2 148 2 56 1 17 2 300 1 244 1 199 2 155 1 60 1 156 2 21 5 204 1 205 1 23 6 62 1 254 1 359 2 362 2 361 2 158 1 257 2 114 2 160 1 313 5 315 1 118 1 320 1 163 1 164 1 120 4 323 2 122 1 125 1 326 3 380 1 79 1 332 1 
224 1 320 1 235 1 60 1 121 1 227 1 120 2 21 3 23 2 11 1 62 1 326 1 293 1 158 1 89 1 137 1 244 1 346 1 313 3 47 1 288 1 315 1 
224 1 60 1 21 3 2 1 23 1 62 1 158 1 89 1 137 1 346 1 47 1 313 3 288 1 315 1 320 1 235 1 164 1 120 3 121 1 323 1 11 1 293 1 326 1 244 1 
224 1 60 1 21 3 227 1 2 1 23 2 62 1 158 1 89 1 137 1 346 1 47 1 313 3 288 1 315 1 320 1 235 1 164 1 121 1 120 3 323 1 11 1 326 1 293 1 193 1 244 1 
224 1 227 4 1 2 2 4 39 1 89 1 137 1 5 1 346 1 47 1 288 1 9 1 235 1 11 1 54 1 293 1 193 4 239 1 148 2 102 1 56 1 244 1 60 1 155 1 156 2 21 5 204 1 23 7 62 1 158 1 361 1 362 2 114 2 160 1 313 5 315 1 320 1 164 5 120 6 121 1 323 5 326 3 380 1 333 1 
224 1 227 2 1 2 2 2 39 1 89 1 137 1 43 2 346 1 47 1 288 1 9 1 235 1 11 1 293 1 193 2 148 2 56 1 244 1 155 1 60 1 156 2 21 4 204 1 23 4 62 1 158 1 361 1 362 2 114 2 160 1 313 4 315 1 320 1 164 1 120 4 323 2 122 1 326 2 380 1 
224 1 155 1 60 1 156 2 227 2 21 4 204 1 1 2 2 2 23 4 39 1 62 1 362 2 361 1 158 1 89 1 137 1 5 1 114 2 160 1 346 1 47 1 313 4 288 1 9 1 315 1 320 1 235 1 164 1 120 4 323 1 11 1 54 1 326 2 293 1 193 2 148 2 56 1 244 1 380 1 333 1 
224 1 155 1 60 1 156 2 227 2 21 4 204 1 1 2 2 2 23 4 39 1 62 1 362 2 361 1 158 1 89 1 137 1 5 1 114 2 160 1 346 1 47 1 313 4 288 1 9 1 315 1 320 1 235 1 164 1 120 4 323 1 11 1 54 1 326 2 293 1 193 2 148 2 56 1 244 1 380 1 333 1 
224 1 155 1 60 1 227 2 21 4 204 1 1 2 2 2 23 4 39 1 62 1 362 2 361 1 158 1 89 1 43 2 137 1 5 1 6 2 346 1 47 1 313 4 192 2 117 1 288 1 9 1 315 1 212 1 320 1 235 1 164 1 120 4 323 1 11 1 375 1 326 2 293 1 193 2 56 1 244 1 380 1 
224 1 155 1 60 1 156 2 204 1 21 4 227 3 1 2 2 3 23 5 39 1 62 1 362 2 361 1 158 1 89 1 137 1 5 1 114 2 160 1 346 1 47 1 313 4 288 1 9 1 315 1 320 1 235 1 164 1 120 5 323 1 11 1 54 1 326 2 293 1 193 3 148 2 102 1 56 1 380 1 244 1 333 1 
224 1 155 1 60 1 156 2 204 1 21 4 227 3 1 2 2 3 23 5 39 1 62 1 362 2 361 1 158 1 89 1 137 1 5 1 114 2 160 1 346 1 47 1 313 4 288 1 9 1 315 1 320 1 235 1 164 1 120 5 323 1 11 1 54 1 326 2 293 1 193 3 148 2 102 1 56 1 380 1 244 1 333 1 
224 1 60 1 155 1 227 2 204 1 21 4 1 2 2 2 23 4 39 1 62 1 362 2 361 1 158 1 89 1 43 2 137 1 6 2 346 1 47 1 313 4 192 2 288 1 117 1 9 1 315 1 320 1 235 1 164 1 120 4 323 1 11 1 122 1 326 2 293 1 193 2 56 1 244 1 380 1 
61 1 107 6 250 1 25 1 24 1 63 2 281 2 208 3 258 1 66 3 289 1 30 1 322 1 268 1 165 1 52 1 325 1 217 2 270 1 297 1 170 1 18 1 197 1 57 1 105 1 355 2 
86 2 107 14 157 1 342 1 133 1 24 2 63 1 208 6 281 4 256 1 283 1 185 1 258 1 66 8 188 1 234 2 48 1 289 2 263 3 165 2 52 2 322 4 374 1 325 11 13 3 217 1 270 2 194 1 170 1 222 1 197 2 57 11 355 2 
154 1 225 1 38 1 205 1 107 2 342 1 278 1 62 2 24 1 63 1 359 1 281 2 208 1 256 1 257 1 66 1 27 1 347 1 288 2 289 1 315 1 49 1 118 1 97 1 322 1 165 1 74 1 36 1 16 1 270 1 170 1 222 1 300 1 17 1 78 1 79 1 197 1 199 1 
86 2 225 2 342 1 278 1 135 1 281 6 41 1 287 2 94 1 288 3 347 2 234 2 48 2 289 3 49 1 97 1 290 1 52 3 297 1 17 3 299 2 300 2 197 3 199 1 57 7 355 8 61 1 250 1 107 20 205 2 206 2 25 1 24 3 62 3 63 2 359 3 208 10 256 1 255 2 257 3 258 3 66 10 27 2 315 1 30 1 118 2 268 1 165 3 322 7 374 4 74 1 325 7 217 4 270 3 170 3 222 1 379 2 78 2 79 2 
205 3 107 2 342 1 278 1 62 1 24 2 359 7 281 4 208 1 256 1 311 1 257 8 41 1 260 1 66 1 232 2 211 1 28 1 288 1 314 1 315 1 289 2 97 1 118 2 291 1 140 1 165 2 74 1 349 1 125 1 35 1 270 2 170 2 300 2 17 8 79 2 18 1 197 2 199 2 
86 1 107 3 278 1 24 1 62 1 281 2 208 2 258 1 186 1 66 1 288 1 234 1 48 1 289 1 315 1 322 1 165 1 52 1 142 1 74 1 325 1 217 1 270 1 170 1 222 1 381 1 197 1 57 1 355 1 
72 1 107 2 322 1 165 1 52 1 374 1 24 1 325 1 281 2 270 1 170 1 66 2 18 1 197 1 57 1 234 1 355 1 289 1 
107 2 322 1 165 1 24 1 325 1 281 2 208 2 217 1 270 1 258 1 170 1 169 1 18 1 197 1 57 1 48 1 355 1 289 1 
86 1 107 4 24 1 281 2 208 2 258 1 66 2 234 1 48 1 289 1 52 1 165 1 322 2 374 1 325 2 217 1 270 1 170 1 18 1 197 1 57 2 355 2 
72 1 107 2 322 1 165 1 52 1 374 1 24 1 325 1 281 2 270 1 170 1 66 2 197 1 28 1 57 1 234 1 355 1 289 1 
107 2 322 1 165 1 24 1 325 1 281 2 208 2 217 1 270 1 258 1 170 1 169 1 197 1 28 1 57 1 48 1 355 1 289 1 
86 1 107 4 24 1 281 2 208 2 258 1 66 2 28 1 234 1 48 1 289 1 52 1 165 1 322 2 374 1 325 2 217 1 270 1 170 1 197 1 57 2 355 2 
86 1 107 4 24 1 281 2 208 2 258 1 66 2 234 1 48 1 289 1 52 1 165 1 322 2 374 1 325 2 217 1 270 1 170 1 197 1 57 2 355 2 
225 1 107 2 205 1 342 1 206 1 62 1 24 1 63 1 359 1 281 2 208 1 256 1 257 1 66 1 27 1 347 1 288 1 289 1 118 1 165 1 270 1 170 1 300 1 17 1 78 1 79 1 197 1 199 1 
107 2 205 1 342 1 62 1 24 1 63 1 359 1 281 2 208 1 256 1 257 1 365 1 66 1 27 1 288 1 289 1 118 1 165 1 294 1 270 1 170 1 300 1 17 1 78 1 273 1 79 1 197 1 199 1 
86 1 107 4 24 1 281 2 208 2 258 1 66 2 234 1 48 1 289 1 52 1 165 1 322 2 374 1 325 2 217 1 270 1 170 1 222 1 197 1 57 2 355 2 
86 1 225 1 107 4 205 1 206 1 62 1 24 1 359 1 208 2 281 2 257 1 258 1 66 2 27 1 48 1 234 1 347 1 288 1 289 1 118 1 322 2 52 1 165 1 374 1 325 2 217 1 35 1 270 1 170 1 300 1 379 1 17 1 78 1 79 1 197 1 57 2 355 2 
86 1 107 3 278 1 24 1 62 1 208 1 281 2 258 1 66 2 48 1 288 1 234 1 289 1 315 1 319 1 165 1 52 1 322 1 374 1 142 1 74 1 325 1 270 1 170 1 222 1 381 1 197 1 57 1 355 1 
86 3 107 19 24 2 281 4 208 10 345 2 185 1 258 3 66 9 368 1 234 3 48 3 289 2 263 2 162 1 96 1 165 2 52 3 374 3 75 1 124 1 13 1 217 3 126 1 147 1 241 1 194 1 302 2 197 2 355 6 
86 3 107 26 108 1 24 3 208 12 281 6 40 1 110 1 345 1 258 2 185 2 66 14 69 1 368 1 234 3 48 2 289 3 263 2 96 1 165 3 52 3 374 2 75 1 166 2 124 1 13 2 217 2 126 2 147 2 221 1 302 4 197 3 274 1 355 4 
86 4 281 6 40 1 185 3 345 1 48 4 234 4 289 3 96 1 52 5 13 3 147 1 240 1 194 1 297 1 241 1 302 4 197 3 355 8 61 1 107 41 250 1 108 1 24 3 25 1 208 21 110 1 258 5 66 20 69 1 368 1 263 4 30 1 165 3 268 1 374 4 75 1 166 1 124 1 217 4 126 2 221 1 274 1 
86 4 61 1 250 1 107 38 108 1 25 1 24 4 281 8 208 18 40 1 110 1 345 1 185 3 258 4 66 20 69 1 368 1 234 4 48 3 289 4 263 4 30 1 96 1 268 1 165 4 52 5 374 3 75 1 166 2 124 1 13 3 217 4 126 2 147 1 240 1 241 1 297 1 194 1 221 1 302 4 197 4 274 1 355 7 
86 7 61 1 250 1 107 52 157 2 108 1 25 1 24 2 281 4 208 25 40 1 110 1 345 1 185 2 258 8 66 27 69 1 368 1 234 7 48 7 289 2 263 4 30 1 96 1 268 1 165 2 52 8 374 7 75 1 166 1 124 1 13 4 217 7 126 1 147 1 297 1 194 2 221 1 302 4 197 2 274 1 355 14 
269 1 337 1 15 1 161 1 318 1 231 1 101 1 65 1 352 1 312 1 
242 1 360 1 
161 1 231 1 101 1 65 1 352 1 312 1 87 1 85 1 104 1 
34 1 81 1 
285 1 129 1 309 1 
337 1 161 1 247 1 318 1 21 1 323 1 134 1 350 1 269 1 76 1 101 1 231 1 65 1 312 1 352 1 7 2 313 1 304 1 
337 1 161 1 247 1 318 1 21 1 323 1 134 1 350 1 269 1 76 1 101 1 231 1 65 1 312 1 352 1 7 2 313 1 304 1 
337 1 161 1 247 1 318 1 21 1 323 1 134 1 350 1 269 1 76 1 101 1 231 1 65 1 312 1 352 1 7 2 313 1 304 1 
34 1 81 1 309 1 
34 1 81 1 309 1 
285 1 129 1 
285 1 129 1 309 1 
226 1 338 1 
247 1 338 1 226 1 21 1 278 2 62 2 63 1 88 1 360 1 231 1 65 1 68 1 312 1 7 1 210 1 313 1 116 1 288 2 315 2 161 1 119 1 74 2 296 1 242 1 101 1 352 1 304 1 
205 1 107 2 342 1 62 2 24 1 359 2 281 2 208 1 256 1 257 2 91 1 260 1 66 1 232 2 288 2 314 1 289 1 315 2 118 1 214 1 98 1 165 1 373 1 270 1 170 1 222 1 300 1 17 2 79 1 197 1 200 1 
370 1 340 2 22 1 12 1 359 2 136 1 35 1 257 2 284 1 41 1 149 1 300 1 17 2 261 1 79 1 367 1 83 1 335 1 201 1 
370 1 340 2 22 1 12 1 359 1 136 1 257 1 41 1 149 1 17 1 300 1 261 1 245 1 367 1 79 1 335 1 201 1 
118 1 205 1 359 1 349 1 125 1 257 1 284 1 149 1 272 1 300 1 17 1 79 1 209 1 199 1 
370 1 340 2 22 1 12 1 359 1 136 1 257 1 284 1 41 1 149 1 300 1 17 1 261 1 367 1 79 1 83 1 335 1 201 1 
343 1 
164 1 323 1 377 1 84 1 361 1 9 1 105 1 
155 1 156 1 204 1 21 1 23 1 361 1 43 1 114 1 160 1 313 1 9 1 164 1 323 2 326 1 148 1 56 1 380 1 
86 2 277 1 0 2 229 6 179 6 282 2 287 2 43 12 234 2 48 2 9 8 235 2 52 2 236 2 145 1 195 2 301 1 300 4 56 4 17 3 199 1 155 4 156 6 249 1 205 10 204 4 21 5 23 5 254 2 359 3 308 2 361 9 257 3 258 2 67 1 26 2 27 3 262 2 313 5 118 3 265 1 164 2 323 8 377 1 326 3 167 2 35 1 168 2 79 3 380 4 332 1 84 1 334 2 172 3 
86 2 155 2 156 3 21 1 204 2 229 5 23 1 108 1 179 5 254 1 40 1 361 8 110 1 282 2 185 1 258 2 43 6 313 1 191 1 234 2 48 2 9 5 263 1 164 2 323 5 52 2 167 1 326 1 13 1 221 1 56 2 380 2 332 1 274 1 223 1 
61 1 155 1 204 1 21 1 278 1 62 1 280 1 361 2 282 2 258 1 366 1 346 1 313 1 288 1 9 2 315 1 30 1 52 2 324 1 74 1 123 1 54 1 167 1 297 1 56 1 380 1 331 1 381 1 
155 1 164 1 204 1 323 1 377 1 361 1 56 1 380 1 84 1 9 1 
86 2 156 5 52 2 323 5 229 5 179 5 167 1 361 5 282 2 258 2 287 1 43 10 234 2 48 2 9 5 
164 1 21 1 323 1 23 1 313 1 326 1 
155 2 339 1 205 1 204 2 249 1 21 3 23 4 359 4 254 2 361 2 257 4 233 1 313 3 95 1 9 2 118 1 145 2 349 1 326 2 125 1 77 1 300 1 56 1 17 4 79 1 380 2 332 2 199 2 354 1 
173 1 225 1 107 1 205 1 342 1 206 1 278 2 24 1 62 3 63 1 359 1 208 1 281 2 257 1 366 1 27 1 288 3 347 1 315 2 289 1 118 1 165 1 74 2 270 1 170 1 17 1 300 1 78 1 79 1 197 1 381 2 199 1 
155 1 156 2 164 2 250 1 204 1 323 4 229 2 179 2 254 1 361 1 43 4 56 1 380 1 332 1 9 2 
175 1 231 1 352 1 
175 1 231 1 352 1 
318 1 226 1 231 1 352 1 58 1 
175 1 231 1 352 1 
231 1 177 1 352 1 
231 1 177 1 352 1 
231 1 177 1 352 1 
231 1 352 1 
161 1 101 1 
30 1 61 1 250 1 107 8 52 1 165 2 268 1 374 1 24 2 25 1 166 1 208 4 281 4 217 2 297 1 258 1 66 4 197 2 355 3 289 2 
30 1 61 1 250 1 107 6 268 1 52 1 25 1 208 3 217 2 297 1 258 1 66 3 105 1 355 2 
86 1 107 4 165 1 52 1 374 1 24 1 208 2 281 2 217 1 238 1 258 1 66 2 197 1 48 1 234 1 355 2 289 1 
263 2 86 1 107 7 52 1 374 1 208 4 13 1 217 1 194 1 258 1 185 1 66 3 48 1 234 1 355 2 
86 2 61 2 250 1 107 23 157 1 25 1 24 2 208 12 281 4 258 3 66 11 188 1 234 2 48 2 289 2 263 2 30 2 268 1 52 3 165 2 374 4 166 2 13 2 217 5 297 1 194 1 197 2 355 9 202 1 
263 1 107 1 208 1 
107 1 66 1 13 1 
86 1 107 6 165 1 52 1 374 1 24 1 281 2 208 3 217 2 238 1 258 1 287 1 66 3 197 1 234 1 48 1 289 1 355 3 
86 2 107 12 108 1 24 1 208 6 281 2 40 1 110 1 185 1 258 2 66 6 234 2 48 2 289 1 263 1 96 1 165 1 52 2 374 1 13 1 217 1 221 1 197 1 274 1 355 2 
30 1 297 1 258 1 61 1 107 6 66 3 52 1 374 1 208 3 217 1 355 2 
30 1 61 1 107 3 268 1 165 1 374 1 24 1 25 1 166 1 208 2 281 2 217 1 66 1 197 1 355 2 202 1 289 1 
96 1 30 2 61 2 107 10 165 1 52 2 374 2 24 1 123 1 281 2 208 5 217 3 297 1 258 2 66 5 197 1 289 1 355 5 
96 1 107 2 165 1 52 1 374 1 24 1 281 2 66 2 197 1 234 1 289 1 355 1 
86 1 96 1 107 4 165 1 52 1 374 1 24 1 208 2 281 2 217 1 258 1 66 2 197 1 48 1 234 1 355 2 289 1 
96 1 30 1 61 1 107 3 165 3 374 1 24 3 166 1 208 2 281 6 217 1 241 1 66 1 197 3 202 1 289 3 355 2 
86 3 61 3 250 1 107 34 306 1 25 1 24 5 208 18 281 10 185 1 258 5 66 16 234 3 48 3 289 5 263 4 30 3 96 1 215 1 268 1 165 5 52 5 374 5 99 1 166 2 13 3 217 7 238 1 297 2 241 1 194 1 197 5 202 1 355 12 
61 1 250 1 107 8 108 1 24 1 25 1 208 4 281 2 258 1 185 1 66 4 289 1 263 1 96 1 30 1 52 1 165 1 268 1 13 1 217 2 297 1 197 1 355 2 
86 1 61 1 250 1 107 11 108 1 25 1 24 2 208 5 281 4 258 1 185 1 66 6 234 1 289 2 263 2 30 1 96 1 268 1 165 2 52 2 374 1 13 1 217 2 238 1 297 1 194 1 197 2 355 3 
86 2 61 1 250 1 107 19 108 1 25 1 24 3 208 10 281 6 40 1 110 1 185 1 258 3 66 9 234 2 48 2 289 3 263 1 30 1 96 1 268 1 165 3 52 3 374 1 166 1 13 1 217 3 238 1 297 1 221 1 197 3 274 1 355 4 
86 2 61 1 250 1 107 17 108 1 25 1 24 3 208 7 281 6 40 1 110 1 185 1 258 2 66 10 234 2 48 1 289 3 263 1 30 1 96 1 268 1 165 3 52 3 374 2 166 1 13 1 217 3 238 1 297 1 221 1 197 3 274 1 355 5 
61 1 250 1 107 8 108 1 24 1 25 1 208 4 281 2 258 1 185 1 66 4 289 1 263 1 96 1 30 1 52 1 165 1 268 1 13 1 217 2 297 1 197 1 355 2 
86 2 107 12 108 1 24 1 208 6 281 2 40 1 110 1 185 1 258 2 66 6 234 2 48 2 289 1 263 1 96 1 165 1 52 2 374 1 13 1 217 1 221 1 197 1 274 1 355 2 
86 2 61 1 250 1 107 18 108 1 25 1 24 4 208 8 281 8 40 1 110 1 185 1 258 2 66 10 234 2 48 1 289 4 263 1 30 1 96 1 268 1 165 4 52 3 374 2 166 2 13 1 217 3 238 1 297 1 221 1 197 4 274 1 355 5 
86 3 107 16 108 1 24 4 208 7 281 8 40 1 110 1 185 1 258 2 66 9 234 3 48 2 289 4 263 1 96 1 165 4 52 3 374 3 166 2 13 1 217 3 241 1 221 1 197 4 274 1 355 6 
30 3 61 3 107 7 268 2 52 1 374 3 25 1 208 4 217 3 297 1 258 1 66 3 355 6 
86 2 61 1 250 1 107 18 108 1 25 1 24 4 208 8 281 8 40 1 110 1 185 1 258 2 66 10 234 2 48 1 289 4 263 1 30 1 96 1 268 1 165 4 52 3 374 1 166 2 13 1 217 3 297 1 241 1 221 1 197 4 274 1 355 4 
62 1 63 1 19 1 288 1 158 1 315 1 364 1 
252 1 62 1 63 1 158 1 364 1 184 1 230 1 44 1 353 1 19 1 288 1 315 1 
257 1 118 1 205 1 300 1 17 1 79 1 349 1 359 1 125 1 199 1 105 1 
118 1 97 1 205 1 278 1 74 1 62 2 63 1 359 1 257 1 300 1 17 1 27 1 78 1 79 1 288 2 199 1 347 1 315 1 
205 3 278 1 62 2 63 1 359 1 257 1 89 1 26 1 27 2 346 1 347 1 288 2 315 2 97 1 118 2 74 2 145 1 293 1 17 1 300 1 78 1 79 1 334 1 
205 3 278 1 62 2 63 1 359 2 257 2 89 1 26 1 187 1 27 2 346 1 288 2 315 2 97 1 118 2 74 2 145 1 293 1 294 1 17 2 300 1 78 1 79 1 334 1 
0 1 205 4 21 2 23 1 359 3 257 3 26 1 187 1 27 1 313 2 118 1 235 1 164 1 323 1 145 1 237 1 219 1 17 3 300 1 79 1 334 1 199 1 172 1 
118 1 235 1 164 1 21 2 205 4 0 1 323 1 23 1 145 1 359 3 257 3 26 1 300 1 17 3 187 1 27 1 262 1 79 1 313 2 199 1 334 1 172 1 
257 1 291 1 300 1 17 1 79 1 359 1 
118 2 265 1 10 1 291 1 140 1 205 3 359 6 35 1 311 1 257 7 41 1 232 1 260 1 17 7 300 3 27 1 93 1 79 2 80 1 211 1 199 2 
225 1 278 1 281 4 347 1 288 2 289 2 97 1 52 1 297 1 299 1 17 1 300 1 197 2 57 1 355 2 61 1 205 1 107 6 250 1 206 1 24 2 62 2 25 1 359 1 63 2 208 3 257 1 258 1 66 3 27 1 315 1 118 1 30 1 322 1 165 2 268 1 373 1 74 1 325 1 35 1 217 2 270 2 170 2 222 1 379 1 78 1 79 1 
155 2 204 2 249 1 21 3 205 2 0 1 23 2 359 1 361 1 308 1 257 1 262 1 210 1 313 3 9 1 235 1 164 1 323 1 236 1 377 1 326 1 168 1 56 2 17 1 380 2 84 1 199 1 172 1 
118 1 265 1 0 1 291 1 205 2 359 2 35 1 257 2 67 1 17 2 300 2 27 1 79 1 
118 1 205 1 359 4 349 1 125 1 35 1 310 1 257 4 300 1 17 4 187 1 79 1 199 1 
118 1 205 1 145 1 359 2 257 2 271 1 220 1 17 2 300 2 27 1 93 1 79 1 80 1 94 1 
257 1 340 1 22 1 300 1 17 1 261 1 79 1 359 1 199 1 136 1 
118 1 205 1 98 1 359 2 35 1 257 2 41 1 260 1 17 2 300 1 79 1 
118 2 205 3 140 1 145 1 349 1 359 4 125 1 35 1 310 1 257 5 260 1 17 5 300 2 79 2 211 1 199 1 
118 2 205 3 140 1 307 1 145 1 349 1 359 4 125 1 35 1 310 1 257 5 260 1 17 5 300 2 79 2 199 1 
118 1 97 1 205 1 278 1 74 1 62 2 63 1 359 1 294 1 257 1 300 1 17 1 27 1 78 1 79 1 288 2 199 1 315 1 
118 1 265 1 10 1 205 1 145 1 359 1 257 1 17 1 300 2 27 1 93 1 79 1 80 1 
305 1 37 1 266 1 63 1 303 1 
305 2 20 1 235 1 164 1 266 2 21 2 323 1 63 1 293 1 89 1 37 1 90 1 92 1 137 1 103 1 346 1 210 1 313 2 303 2 
305 1 214 1 91 1 37 1 266 1 62 1 288 1 200 1 315 1 
90 1 37 1 92 1 
106 1 321 1 33 1 105 1 
174 1 106 1 321 1 348 1 51 1 196 1 33 1 
348 1 267 1 138 1 
174 1 106 1 264 1 321 1 348 3 51 3 33 1 180 1 14 1 196 1 8 2 128 1 
174 1 106 1 321 1 348 2 51 2 196 1 33 1 53 1 153 1 
174 1 106 1 370 1 348 1 340 1 51 1 22 1 180 1 344 1 196 1 152 1 
174 1 106 1 321 1 348 1 51 1 196 1 180 1 
174 1 321 2 348 1 51 1 196 1 33 1 180 1 
174 2 106 1 321 1 348 2 51 2 141 1 180 1 182 1 286 1 196 2 
174 1 316 1 321 1 106 2 348 3 51 3 33 1 180 1 344 1 243 1 42 1 196 1 153 2 
174 1 213 1 106 1 321 1 370 1 348 2 340 2 51 2 22 1 33 1 12 1 180 1 136 1 196 1 153 1 
174 2 316 1 321 1 106 2 348 4 51 4 33 1 53 1 180 1 344 1 112 1 196 2 153 2 
174 1 106 1 321 1 348 1 51 1 196 1 33 1 180 1 
174 1 316 1 264 1 321 2 106 3 348 4 51 4 33 2 14 1 344 1 196 1 8 1 171 1 153 2 
174 1 106 1 321 1 348 2 51 2 33 1 180 1 363 1 329 1 196 1 190 1 153 1 
174 1 71 1 264 1 106 1 321 1 348 3 51 3 33 1 180 1 14 2 196 1 8 2 
183 1 106 2 139 1 327 2 
174 1 348 1 251 1 51 1 196 1 180 1 
174 1 106 1 321 1 348 2 42 1 51 2 196 1 33 1 153 1 180 1 
253 1 
174 1 106 1 321 1 348 1 51 1 196 1 33 1 180 1 
174 1 106 1 321 1 348 3 42 1 51 3 196 1 33 1 8 1 153 1 180 1 
344 1 316 1 106 1 171 1 
106 1 321 1 

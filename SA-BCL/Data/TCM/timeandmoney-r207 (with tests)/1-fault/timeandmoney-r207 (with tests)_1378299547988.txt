#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 192 359 (203,252) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
266 1 152 2 0 3 268 2 25 2 154 9 27 1 110 1 200 1 245 4 158 2 179 1 38 1 304 1 277 9 181 1 162 1 207 2 332 1 208 1 371 5 74 1 289 1 293 2 213 1 265 1 78 6 23 2 
266 1 152 2 0 3 268 2 25 2 154 9 27 1 110 1 200 1 245 4 158 2 179 1 38 1 304 1 277 9 181 1 162 1 207 2 332 1 208 1 371 5 74 1 289 1 293 2 213 1 265 1 78 6 23 2 
266 1 152 2 0 4 268 2 25 2 154 10 27 1 110 1 200 1 245 5 158 2 179 1 38 1 304 1 277 10 181 1 162 1 207 2 332 1 208 1 371 6 74 1 289 1 293 2 213 1 265 1 78 7 23 2 
266 1 207 1 0 2 152 2 268 2 332 1 208 1 371 4 25 2 27 1 154 7 74 1 110 1 289 1 200 1 245 3 158 2 293 2 213 1 38 1 265 1 277 7 304 1 181 1 78 4 23 2 162 1 
207 2 0 1 152 1 268 1 208 1 371 3 25 1 154 4 74 1 200 1 245 2 158 1 179 1 293 1 38 1 277 4 78 3 162 1 
152 1 268 1 120 1 371 1 154 2 74 1 110 1 200 1 158 1 293 1 38 1 265 1 277 2 278 1 49 1 23 1 
152 2 0 1 268 2 371 2 154 3 27 1 74 1 200 1 245 1 38 1 277 3 78 1 23 1 
266 1 207 2 152 2 0 3 268 2 208 1 25 1 371 5 154 9 27 1 74 1 200 1 245 4 158 1 10 1 179 1 293 1 38 1 277 9 348 1 181 1 78 7 23 1 162 1 
266 1 207 2 152 2 0 3 268 2 208 1 25 1 371 5 154 9 27 1 74 1 200 1 245 4 158 1 10 1 179 1 293 1 38 1 277 9 348 1 181 1 78 7 23 1 162 1 
180 1 340 1 358 1 
219 1 347 2 358 1 
104 1 372 2 269 2 112 2 159 2 314 1 136 2 214 2 
104 1 269 3 343 1 3 1 270 1 173 1 85 1 174 2 177 1 112 2 34 1 159 2 275 1 367 1 36 1 249 1 136 2 202 2 182 1 306 2 115 1 139 1 254 1 354 1 116 2 331 1 335 1 44 1 284 1 16 1 372 2 188 2 314 1 214 3 77 1 52 1 80 1 
8 1 18 1 372 1 269 1 112 1 159 1 314 1 136 1 317 1 214 1 
138 1 361 1 255 1 269 1 370 1 140 1 55 1 358 1 18 1 248 1 180 1 136 1 214 1 228 1 
361 2 269 1 370 1 140 2 55 1 358 1 372 1 18 1 112 1 159 1 248 1 180 1 136 1 214 1 228 1 
361 1 95 1 140 1 315 1 137 1 
361 2 95 1 140 2 180 1 315 1 327 1 336 1 358 1 
361 1 140 1 315 1 
361 1 95 1 269 1 140 1 241 1 8 1 18 1 372 1 112 1 159 1 314 1 317 1 136 1 214 1 
358 1 
361 2 95 1 140 2 180 1 315 1 310 1 336 1 358 1 
361 5 95 2 96 1 218 1 140 5 211 1 221 1 243 1 336 1 358 1 186 1 134 1 373 1 290 2 180 1 315 2 148 1 264 2 88 2 
104 1 340 1 
104 2 269 2 42 1 121 1 372 1 112 1 159 1 136 2 214 2 
47 1 169 1 194 1 
104 1 254 1 115 1 116 1 269 1 343 1 331 1 284 1 173 1 75 1 177 1 188 1 249 1 214 1 202 1 80 1 
104 1 372 4 272 2 255 1 112 1 269 5 42 1 159 4 294 1 136 5 37 1 214 5 170 1 22 1 
8 1 18 1 372 2 269 2 159 2 136 2 214 2 122 1 
115 1 254 1 116 1 343 1 269 2 331 1 284 1 173 1 47 1 372 1 272 1 177 1 188 1 159 1 249 1 136 1 37 1 214 2 202 1 80 1 
104 1 372 3 272 1 112 1 269 3 159 3 136 3 214 3 
8 1 18 1 372 1 269 1 159 1 136 1 214 1 
18 1 372 1 269 1 112 1 159 1 42 1 136 1 214 1 121 1 
104 1 361 1 343 1 269 4 3 1 55 1 270 1 173 1 174 2 272 1 177 1 112 2 275 1 159 3 367 1 248 1 36 1 249 1 136 3 37 1 228 1 202 1 182 1 39 1 306 1 115 1 254 1 354 1 116 1 42 1 331 1 370 1 140 1 44 1 284 1 16 1 146 1 372 3 18 1 188 1 314 1 214 4 77 1 80 1 
104 1 372 1 272 1 255 1 269 2 159 1 136 2 214 2 170 1 
361 1 269 3 42 1 140 1 370 1 55 1 358 1 175 1 18 1 372 3 272 2 112 1 159 3 248 1 136 3 37 1 214 3 228 1 39 1 
269 2 42 1 372 2 47 1 272 1 112 1 159 2 136 2 169 1 214 2 
104 1 254 1 115 1 116 1 269 1 343 1 331 1 284 1 173 1 177 1 188 1 249 1 214 1 202 1 80 1 
104 1 115 1 116 1 269 1 331 1 284 1 173 1 124 1 177 1 188 1 249 1 214 1 202 1 252 1 80 1 
199 1 3 2 83 1 270 1 174 2 59 1 225 1 303 1 367 1 306 4 282 1 164 1 354 1 335 2 44 1 259 1 233 1 16 1 47 2 237 1 169 2 379 1 77 1 194 2 
18 1 372 1 269 1 159 1 136 1 228 1 214 1 122 1 
168 1 363 1 
168 1 363 1 
165 1 2 1 
165 1 2 1 
165 1 2 1 
352 1 168 1 363 1 
352 1 168 1 363 1 
168 1 54 1 363 1 
165 1 168 2 2 1 363 2 345 1 90 1 
352 1 168 1 363 1 
168 1 363 1 28 1 
168 1 363 1 28 1 
168 1 363 1 28 1 
104 1 361 1 269 2 297 1 54 1 363 1 56 1 57 1 223 1 159 2 86 1 136 2 368 1 204 1 114 1 231 1 93 1 308 1 140 1 69 1 372 2 168 1 214 2 240 1 
92 1 361 2 308 2 68 1 140 2 69 2 363 2 345 1 358 1 56 1 145 2 111 1 168 2 368 2 349 1 114 3 21 1 240 2 183 1 
158 1 293 1 25 1 
158 1 293 1 278 1 
158 3 236 1 278 1 45 1 25 2 103 1 
13 1 158 2 236 1 278 1 45 1 25 1 
158 2 236 2 278 1 25 1 45 1 
197 1 361 5 199 1 53 2 82 1 219 1 218 3 243 1 223 1 134 2 59 1 302 1 62 1 347 3 326 2 180 1 64 1 88 1 281 2 231 1 93 1 95 4 140 5 258 1 336 1 358 2 290 1 101 1 237 1 315 1 379 1 264 1 
130 1 361 9 296 5 199 3 53 6 219 3 218 8 243 1 365 1 134 6 59 3 302 3 62 2 347 9 180 1 137 5 64 2 251 1 88 2 281 6 231 4 95 7 309 1 140 9 142 1 336 1 358 5 290 2 101 1 237 3 377 1 315 6 148 1 379 3 264 2 
361 3 199 1 82 1 53 2 219 2 218 3 134 2 59 1 302 1 62 1 347 4 180 1 326 1 64 1 88 1 281 2 231 1 95 2 140 3 258 1 358 3 290 1 237 1 264 1 148 1 379 1 
361 4 199 2 53 4 82 1 219 3 218 5 365 1 134 4 59 2 302 2 62 1 347 7 180 1 326 2 64 1 88 1 281 4 231 2 95 3 140 4 258 1 142 1 358 4 290 1 237 2 377 1 264 1 148 1 379 2 
340 1 87 1 173 1 
141 1 173 1 
339 1 
115 1 249 1 173 1 
366 1 173 1 
249 1 173 1 
115 1 249 1 87 2 173 3 79 1 73 1 
163 2 199 1 356 1 3 3 83 3 333 1 335 4 220 1 109 1 100 1 7 1 288 1 225 2 237 1 20 1 306 7 205 1 
163 2 199 1 356 1 3 3 83 3 333 1 335 4 220 1 109 1 100 1 7 1 288 1 225 2 237 1 20 1 306 7 205 1 
163 2 199 1 356 1 3 3 83 3 333 1 335 4 220 1 109 1 100 1 7 1 288 1 374 1 225 2 237 1 20 1 306 7 205 1 
199 4 3 15 299 1 83 10 220 5 109 2 270 1 7 1 174 2 31 1 59 3 302 3 32 1 225 5 65 3 306 31 205 2 163 3 117 1 354 1 356 1 232 4 44 1 335 16 333 2 100 1 16 1 288 2 263 1 20 1 237 4 316 1 379 3 128 1 
199 1 3 4 83 4 220 1 270 2 109 1 7 1 174 4 225 3 306 9 205 1 163 2 354 2 117 1 356 1 44 2 335 5 333 1 72 1 16 2 288 1 237 1 20 1 76 1 
295 1 152 1 268 1 25 1 222 1 322 1 154 2 84 1 346 1 200 1 158 2 38 1 202 1 277 2 278 1 116 1 97 1 357 1 284 1 371 1 337 1 74 1 262 1 188 1 293 1 360 1 78 1 23 1 103 1 80 1 
152 1 268 1 25 1 222 1 322 1 154 3 84 1 30 1 346 1 200 1 274 1 158 2 38 1 202 1 277 3 278 1 94 1 116 1 97 1 284 1 371 1 337 1 262 1 188 1 293 1 360 1 78 2 103 1 23 1 80 1 
25 1 222 1 322 1 154 2 30 1 346 1 200 1 158 2 38 1 202 1 277 2 278 1 94 1 116 1 97 1 284 1 371 1 262 1 188 1 293 1 360 1 78 2 23 1 103 1 80 1 
152 1 268 1 344 1 322 2 154 1 222 2 173 1 6 1 132 1 177 1 274 1 249 1 202 1 277 1 116 1 97 2 284 1 99 1 188 1 212 1 126 1 23 2 80 1 
152 1 268 1 25 1 222 1 322 1 154 1 84 1 30 1 346 1 158 2 202 1 277 1 278 1 116 1 97 1 357 1 284 1 337 1 74 1 262 1 188 1 293 1 360 1 23 1 103 1 80 1 
107 1 
55 1 4 2 243 1 6 1 301 1 157 1 347 2 248 1 249 1 202 2 64 1 116 2 255 1 257 2 70 1 14 2 358 2 123 1 18 1 167 4 315 6 264 1 214 1 80 1 361 5 81 2 269 1 219 2 218 2 173 1 132 1 323 2 134 2 133 1 177 2 180 1 136 1 227 1 228 1 329 1 88 1 138 1 140 5 370 1 284 1 98 1 286 1 336 3 338 1 234 1 290 1 291 2 188 2 191 1 50 2 
361 3 269 1 55 1 133 1 323 1 248 1 136 1 228 1 329 1 138 1 255 1 140 3 370 1 310 1 286 1 336 1 234 1 18 1 167 2 315 2 214 1 191 1 
361 3 269 1 55 1 133 1 248 1 136 1 180 1 228 1 329 1 138 1 255 1 140 3 370 1 310 1 286 1 336 1 234 1 358 1 18 1 167 3 315 1 214 1 191 1 50 1 
361 3 269 1 55 1 133 1 323 1 248 1 136 1 180 1 228 1 329 1 138 1 255 1 257 1 140 3 370 1 310 1 286 1 336 1 234 1 358 1 18 1 167 3 315 2 214 1 191 1 50 1 
55 1 243 1 4 2 157 1 248 1 255 1 256 1 257 4 310 1 14 2 358 5 313 1 18 1 167 6 315 7 214 1 264 1 361 5 81 2 269 1 218 1 219 2 323 4 133 1 134 1 324 1 226 1 136 1 180 5 227 1 228 1 329 1 88 1 89 1 138 1 370 1 140 5 286 1 336 3 234 1 290 1 291 2 191 1 50 4 
55 1 243 1 4 2 157 1 248 1 347 2 255 1 257 2 14 2 70 1 358 2 18 1 167 4 315 4 214 1 264 1 361 4 81 2 269 1 218 1 219 2 133 1 134 1 323 2 227 1 136 1 180 1 228 1 329 1 88 1 138 1 370 1 140 4 286 1 336 2 234 1 290 1 291 2 191 1 50 2 
361 4 81 2 269 1 219 2 218 1 55 1 4 2 243 1 323 2 134 1 133 1 157 1 226 1 248 1 180 1 227 1 136 1 228 1 329 1 88 1 89 1 138 1 255 1 256 1 257 2 140 4 370 1 14 2 286 1 336 2 358 1 234 1 18 1 290 1 291 2 167 4 315 4 264 1 214 1 191 1 50 2 
361 4 81 2 269 1 219 2 218 1 55 1 4 2 243 1 323 2 134 1 133 1 157 1 226 1 248 1 180 1 227 1 136 1 228 1 329 1 88 1 89 1 138 1 255 1 256 1 257 2 140 4 370 1 14 2 286 1 336 2 358 1 234 1 18 1 290 1 291 2 167 4 315 4 264 1 214 1 191 1 50 2 
342 1 361 4 81 2 269 1 218 1 55 1 4 2 243 1 323 2 134 1 133 1 157 1 347 2 325 2 226 1 248 1 180 1 136 1 228 1 329 1 88 1 12 1 138 1 255 1 257 2 140 4 370 1 286 1 336 2 358 1 234 1 18 1 19 1 290 1 167 4 315 4 264 1 214 1 191 1 216 2 50 2 
361 4 81 2 269 1 219 2 218 1 55 1 4 2 243 1 134 1 133 1 323 3 157 1 226 1 248 1 324 1 180 1 227 1 136 1 228 1 329 1 88 1 89 1 138 1 255 1 256 1 257 3 140 4 370 1 14 2 286 1 336 2 358 1 234 1 18 1 290 1 291 2 167 5 315 5 264 1 214 1 191 1 50 3 
361 4 81 2 269 1 219 2 218 1 55 1 4 2 243 1 134 1 133 1 323 3 157 1 226 1 248 1 324 1 180 1 227 1 136 1 228 1 329 1 88 1 89 1 138 1 255 1 256 1 257 3 140 4 370 1 14 2 286 1 336 2 358 1 234 1 18 1 290 1 291 2 167 5 315 5 264 1 214 1 191 1 50 3 
55 1 243 1 4 2 157 1 248 1 347 2 255 1 257 2 70 1 358 1 18 1 19 1 167 4 315 4 214 1 264 1 216 2 361 4 81 2 269 1 218 1 133 1 134 1 323 2 325 2 136 1 180 1 228 1 329 1 88 1 138 1 370 1 140 4 286 1 336 2 234 1 290 1 191 1 50 2 
104 2 199 1 83 2 3 3 270 1 109 1 7 1 174 2 225 2 303 1 367 1 306 6 163 1 354 1 356 1 44 1 335 3 16 1 288 1 47 1 20 1 237 1 169 1 340 1 77 1 194 1 
104 1 199 1 83 2 3 6 242 1 220 1 270 2 174 4 31 1 59 1 302 2 225 1 367 1 63 1 279 1 182 1 65 3 306 14 66 1 354 2 232 3 44 2 335 8 16 2 47 11 263 1 292 1 237 2 379 2 169 4 77 2 194 11 52 1 
104 1 196 1 343 1 269 2 242 1 3 1 270 1 173 1 174 2 177 1 272 1 159 1 367 1 249 1 136 1 37 1 202 1 182 1 306 2 330 1 115 1 254 1 116 1 354 1 331 1 44 1 335 1 284 1 144 1 16 1 75 1 372 1 188 1 169 1 214 2 77 1 80 1 52 1 
104 2 1 1 199 3 343 2 3 10 242 1 109 1 153 2 7 1 59 2 302 2 159 1 249 2 202 3 306 20 163 1 254 2 115 2 116 3 354 3 356 1 16 3 20 1 214 3 169 7 77 3 80 2 131 2 267 1 269 3 83 8 220 4 270 3 173 2 30 1 174 6 224 2 177 1 272 1 225 4 275 2 367 3 136 1 37 1 182 1 331 2 44 3 335 10 284 2 143 1 288 1 372 1 47 7 147 2 188 3 237 3 379 2 194 7 52 1 
295 1 269 1 3 1 270 2 173 3 30 1 85 2 6 1 132 1 174 4 272 1 177 2 61 1 33 1 303 1 159 1 367 2 136 1 249 2 202 8 250 1 11 1 182 1 305 1 306 2 116 8 354 2 44 2 335 1 284 2 16 2 372 1 188 7 102 1 214 1 77 2 381 1 80 2 52 1 
269 1 199 1 83 1 242 1 3 2 270 1 174 2 59 1 302 1 225 1 112 1 159 1 367 1 136 1 306 3 354 1 42 1 44 1 335 1 16 1 47 1 372 1 237 1 169 1 214 1 379 1 77 1 194 1 24 1 
354 1 83 1 44 1 335 2 233 1 220 1 270 1 16 1 174 2 47 1 303 1 367 1 237 1 169 1 379 1 77 1 194 1 306 2 
164 1 354 1 199 1 83 1 44 1 3 2 270 1 16 1 174 2 47 1 59 1 225 1 303 1 367 1 169 1 77 1 194 1 306 2 
354 1 199 1 3 2 83 2 44 1 335 2 220 1 270 1 16 1 174 2 47 2 59 1 302 1 225 1 303 1 367 1 237 1 169 2 379 1 77 1 194 2 306 4 
354 1 83 1 44 1 335 2 233 1 220 1 270 1 16 1 174 2 47 1 367 1 237 1 169 1 379 1 11 1 77 1 194 1 306 2 
164 1 354 1 199 1 83 1 44 1 3 2 270 1 16 1 174 2 47 1 59 1 225 1 367 1 169 1 11 1 77 1 194 1 306 2 
354 1 199 1 3 2 83 2 44 1 335 2 220 1 270 1 16 1 174 2 47 2 59 1 302 1 225 1 367 1 237 1 169 2 379 1 11 1 77 1 194 2 306 4 
354 1 199 1 3 2 83 2 44 1 335 2 220 1 270 1 16 1 174 2 47 2 59 1 302 1 225 1 367 1 237 1 169 2 379 1 77 1 194 2 306 4 
104 1 343 1 269 1 3 1 270 1 173 1 174 2 177 1 275 1 367 1 249 1 202 1 182 1 306 2 115 1 254 1 116 1 354 1 331 1 335 1 44 1 284 1 16 1 188 1 214 1 77 1 52 1 80 1 
104 1 269 1 3 1 270 1 173 1 174 2 177 1 367 1 249 1 202 1 182 1 252 1 306 2 115 1 116 1 354 1 331 1 335 1 44 1 284 1 16 1 124 1 187 1 188 1 214 1 77 1 52 1 80 1 
354 1 199 1 3 2 83 2 242 1 44 1 335 2 220 1 270 1 16 1 174 2 47 2 59 1 302 1 225 1 367 1 237 1 169 2 379 1 77 1 194 2 306 4 
131 1 295 1 199 1 343 1 269 1 3 2 83 2 220 1 270 1 173 1 174 2 59 1 302 1 225 1 275 1 367 1 249 1 202 1 306 4 115 1 254 1 116 1 354 1 331 1 335 2 44 1 284 1 16 1 47 2 188 1 237 1 169 2 379 1 214 1 77 1 194 2 80 1 
199 1 269 1 3 1 83 1 242 1 220 1 270 1 174 2 59 1 302 1 112 1 159 1 367 1 136 1 306 3 67 1 354 1 42 1 44 1 335 2 16 1 372 1 47 1 237 1 214 1 379 1 169 1 77 1 194 1 
362 1 199 5 217 1 3 21 83 8 220 4 109 1 270 3 26 1 7 1 174 6 31 3 59 4 302 4 225 4 253 1 65 3 306 41 283 1 163 1 353 1 117 1 354 3 356 1 232 4 334 1 44 3 335 20 235 1 72 1 15 1 46 1 16 3 288 1 263 1 376 2 20 1 237 5 378 1 127 1 379 4 319 1 341 4 
362 1 199 4 217 1 3 18 83 7 220 3 109 1 270 4 26 1 7 1 174 8 31 3 59 3 302 4 225 4 253 1 65 3 306 38 283 1 163 1 353 1 117 2 354 4 356 1 232 4 334 1 44 4 335 20 235 1 72 1 15 1 46 1 16 4 288 1 263 1 376 2 20 1 237 5 378 1 127 1 379 4 319 1 341 4 
199 8 217 1 3 25 83 14 220 7 109 1 270 2 26 1 7 1 174 4 31 2 59 7 302 7 225 7 279 2 253 1 65 4 306 52 283 1 163 1 353 1 117 1 354 2 356 1 232 4 334 1 44 2 335 27 235 1 72 1 46 1 16 2 288 1 263 2 376 1 20 1 237 8 378 1 127 1 379 7 319 1 341 4 
362 1 199 3 3 10 83 6 220 3 270 2 26 1 174 4 31 1 59 3 302 3 225 3 253 1 65 1 306 19 354 2 232 2 334 1 44 2 335 9 72 1 46 2 16 2 125 1 263 1 376 1 237 3 127 1 379 3 341 2 
199 2 217 1 83 4 3 12 220 2 270 3 26 1 174 6 31 2 59 2 302 3 225 2 253 2 65 2 306 26 283 1 353 1 117 2 354 3 232 2 334 1 44 3 335 14 72 1 235 1 46 1 16 3 376 2 237 3 378 1 127 1 379 3 319 1 341 4 
308 1 168 1 368 1 69 1 363 1 345 1 166 1 21 1 240 1 183 1 
86 1 54 1 
171 1 308 1 168 1 368 1 69 1 285 1 363 1 150 1 240 1 
352 1 210 1 
273 1 28 1 90 1 
92 1 361 1 308 1 68 1 140 1 69 1 363 1 345 1 358 1 56 1 145 1 168 1 368 1 349 1 114 2 21 1 240 1 183 1 
92 1 361 1 308 1 68 1 140 1 69 1 363 1 345 1 358 1 56 1 145 1 168 1 368 1 349 1 114 2 21 1 240 1 183 1 
92 1 361 1 308 1 68 1 140 1 69 1 363 1 345 1 358 1 56 1 145 1 168 1 368 1 349 1 114 2 21 1 240 1 183 1 
352 1 210 1 90 1 
352 1 210 1 90 1 
273 1 28 1 
273 1 28 1 90 1 
297 1 204 1 
104 1 361 1 269 2 297 1 54 1 363 1 5 1 57 1 223 1 86 1 159 2 136 2 368 1 204 1 114 1 231 1 93 1 95 1 68 1 308 1 140 1 69 1 145 1 372 2 168 1 214 2 240 1 
269 2 298 1 242 1 3 1 270 1 173 1 85 2 174 2 33 1 367 1 249 1 136 2 229 1 202 2 250 1 350 1 182 1 306 2 116 2 354 1 44 1 335 1 284 1 16 1 312 1 188 2 215 1 214 2 77 1 80 1 52 1 
116 2 295 1 119 1 284 1 25 1 337 1 222 1 260 1 30 1 346 1 262 1 158 2 188 2 293 1 278 1 202 2 103 1 40 1 80 1 
116 1 284 1 25 1 337 1 222 1 30 1 346 1 262 1 158 2 188 1 293 1 278 1 202 1 149 1 103 1 40 1 80 1 
116 1 119 1 284 1 222 1 173 1 6 1 132 1 177 1 188 1 212 1 249 1 202 1 160 1 80 1 
116 1 119 1 284 1 25 1 337 1 222 1 260 1 30 1 346 1 262 1 158 2 188 1 293 1 278 1 202 1 103 1 40 1 80 1 
209 1 
134 1 373 1 218 1 180 1 340 1 221 1 358 1 
361 1 219 1 218 1 243 1 134 1 347 1 227 1 180 1 88 1 140 1 14 1 336 1 358 2 290 1 291 1 315 1 264 1 
295 1 53 6 199 2 243 4 59 2 302 2 201 2 347 12 249 3 202 3 64 2 351 2 115 3 116 3 355 1 311 1 358 8 315 5 264 4 79 1 320 1 80 4 361 5 218 9 219 6 221 1 173 10 224 2 134 8 366 2 177 1 178 1 35 2 180 2 328 1 280 2 88 4 87 2 281 6 91 2 141 3 370 2 140 5 284 3 336 3 338 1 287 2 373 1 290 4 188 3 237 2 379 2 192 2 239 2 
361 1 53 5 199 2 217 1 218 8 219 3 243 2 134 5 31 1 59 2 302 2 201 1 347 6 180 2 64 1 88 2 281 5 65 1 283 1 41 1 232 1 140 1 336 1 338 1 358 5 185 1 235 1 290 2 237 2 315 1 378 1 264 2 379 2 319 1 239 2 
361 1 269 1 199 1 108 1 218 2 241 1 243 1 109 1 8 1 134 2 201 1 112 1 159 1 136 1 88 1 89 1 140 1 288 1 18 1 372 1 290 1 20 1 237 2 314 1 317 1 214 1 264 1 239 2 
218 1 243 1 221 1 358 1 134 1 373 1 290 1 180 1 264 1 88 1 
53 5 199 2 219 5 218 5 358 5 224 1 134 5 59 2 302 2 201 1 237 2 347 10 379 2 239 2 281 5 
361 1 140 1 180 1 315 1 336 1 358 1 
361 3 218 2 243 1 173 1 301 1 6 1 132 1 134 2 177 2 178 1 249 1 328 2 202 4 230 1 64 2 88 2 116 4 140 3 284 1 98 1 336 2 338 2 290 2 188 4 48 1 315 4 148 1 264 2 80 1 
104 1 269 3 343 1 3 1 270 1 173 1 174 2 177 1 112 2 159 2 275 1 36 1 367 1 136 2 249 1 202 1 182 1 306 1 254 1 115 1 116 1 354 1 331 1 44 1 284 1 16 1 372 2 188 1 314 1 214 3 77 1 80 1 
163 1 53 2 219 2 218 1 243 1 358 4 338 1 134 2 290 1 347 4 180 2 264 1 64 1 88 1 281 2 
368 1 240 1 261 1 
368 1 240 1 261 1 
297 1 368 1 364 1 21 1 240 1 
368 1 240 1 261 1 
151 1 368 1 240 1 
151 1 368 1 240 1 
151 1 368 1 240 1 
368 1 240 1 
168 1 363 1 
199 1 3 4 83 2 270 1 109 1 7 1 174 2 31 1 225 2 65 1 306 8 163 1 354 1 356 1 232 1 44 1 335 4 235 1 72 1 16 1 288 1 237 1 20 1 
199 1 3 5 83 3 220 1 244 1 109 1 270 2 7 1 174 4 31 1 302 1 225 2 65 1 306 11 163 1 354 2 356 1 232 2 44 2 335 6 235 1 72 1 16 2 288 1 263 1 20 1 237 2 379 1 
199 3 217 1 3 10 83 4 220 1 244 1 109 1 270 3 7 1 174 6 31 1 59 2 302 2 225 3 65 1 306 19 283 1 163 1 354 3 117 1 356 1 232 1 44 3 335 9 235 1 72 1 16 3 288 1 20 1 237 3 378 1 379 2 319 1 
199 2 217 1 3 7 83 5 220 2 244 1 109 1 270 3 7 1 174 6 31 1 59 1 302 2 225 3 65 1 306 17 283 1 163 1 117 1 354 3 356 1 232 1 44 3 335 10 235 1 72 1 16 3 288 1 20 1 237 3 378 1 379 2 319 1 
199 1 3 4 83 2 270 1 109 1 7 1 174 2 31 1 225 2 65 1 306 8 163 1 354 1 356 1 232 1 44 1 335 4 235 1 72 1 16 1 288 1 237 1 20 1 
199 2 217 1 3 6 83 2 220 1 270 1 174 2 31 1 59 2 302 2 225 1 65 1 306 12 283 1 354 1 232 1 44 1 335 6 235 1 72 1 16 1 237 2 378 1 379 2 319 1 
199 2 217 1 3 8 83 5 220 2 244 1 109 1 270 4 7 1 174 8 31 1 59 1 302 2 225 3 65 1 306 18 283 1 163 1 354 4 117 2 356 1 232 1 44 4 335 10 235 1 72 1 16 4 288 1 20 1 237 3 378 1 379 2 319 1 
362 1 199 2 217 1 3 7 83 6 220 3 270 4 174 8 31 1 59 2 302 3 225 3 65 1 306 16 283 1 354 4 117 2 232 1 44 4 335 9 235 1 72 1 16 4 237 3 378 1 379 3 319 1 
199 1 356 2 3 4 83 6 335 3 220 3 109 3 7 1 288 3 225 3 20 1 237 1 306 7 
362 1 199 2 217 1 3 8 83 4 220 1 109 1 270 4 7 1 174 8 31 1 59 1 302 2 225 3 65 1 306 18 283 1 163 1 354 4 117 2 356 1 232 1 44 4 335 10 235 1 72 1 16 4 288 1 20 1 237 3 378 1 379 2 319 1 
163 1 354 2 117 1 199 1 356 1 3 4 335 4 83 3 44 2 220 1 270 2 109 1 16 2 7 1 174 4 288 1 225 2 237 1 20 1 306 8 
163 1 356 1 199 1 3 3 83 2 335 3 109 1 7 1 288 1 225 2 20 1 237 1 340 1 306 6 
354 1 199 1 3 2 83 2 44 1 335 2 220 1 244 1 270 1 16 1 174 2 59 1 302 1 225 1 237 1 379 1 306 4 
199 1 232 2 3 4 335 3 83 2 220 1 31 1 59 1 263 1 302 1 225 1 237 1 379 1 65 1 306 7 
199 3 83 9 3 12 220 4 109 2 270 2 7 1 174 4 59 2 302 2 246 1 225 5 279 1 65 2 306 23 163 1 117 2 354 2 356 1 232 2 335 11 44 2 16 2 288 2 263 1 292 1 20 1 237 3 379 2 
232 1 3 1 306 1 
335 1 65 1 306 1 
354 1 199 1 44 1 3 3 335 3 83 3 220 1 244 1 270 1 16 1 174 2 224 1 59 1 302 1 225 2 237 1 379 1 306 6 
199 2 217 1 3 6 83 2 220 1 270 1 174 2 31 1 59 2 302 2 225 1 65 1 306 12 283 1 354 1 232 1 44 1 335 6 235 1 72 1 16 1 237 2 378 1 379 2 319 1 
199 1 335 3 3 3 83 2 220 1 109 1 288 1 225 1 20 1 237 1 306 6 
117 1 354 1 356 1 335 1 83 2 3 2 44 1 220 1 109 1 270 1 16 1 7 1 288 1 174 2 246 1 225 1 306 3 
354 1 199 2 108 1 44 1 83 5 335 5 3 5 220 2 270 1 109 2 72 1 16 1 174 2 288 2 225 3 20 1 237 2 306 10 
354 1 44 1 335 2 83 1 220 1 270 1 72 1 16 1 174 2 237 1 379 1 306 2 
354 1 199 1 3 2 83 2 44 1 335 2 220 1 270 1 72 1 16 1 174 2 59 1 302 1 225 1 237 1 379 1 306 4 
117 1 354 3 362 1 3 2 44 3 83 2 335 1 220 1 270 3 109 1 72 1 16 3 174 6 288 1 246 1 225 1 306 3 
362 1 199 5 3 18 299 1 83 12 220 5 244 1 109 3 270 5 7 1 174 10 31 1 59 3 246 1 32 1 302 3 225 7 65 3 306 34 163 1 117 2 354 5 356 1 232 4 44 5 335 16 72 1 16 5 288 3 263 1 20 2 237 5 379 3 128 1 
104 1 255 1 375 1 269 1 136 1 214 1 170 1 
104 1 206 1 255 1 269 1 155 1 176 1 375 1 136 1 214 1 170 1 161 1 195 1 
116 1 177 1 188 1 249 1 284 1 340 1 202 1 173 1 132 1 6 1 80 1 
104 1 115 1 116 1 269 2 343 1 331 1 284 1 173 1 372 1 272 1 177 1 188 1 159 1 249 1 136 1 214 2 202 1 80 1 
104 1 115 2 116 1 269 2 343 1 331 1 284 1 173 3 366 1 18 1 372 1 272 1 188 1 159 2 248 1 249 2 136 2 228 1 214 2 328 1 202 1 192 1 80 1 
104 1 115 2 116 2 198 1 269 2 331 1 284 1 173 3 366 1 18 1 372 1 272 1 188 2 159 2 248 1 249 2 136 2 228 1 214 2 328 1 202 2 192 1 252 1 80 1 
115 1 361 1 116 1 140 1 141 1 284 1 173 4 359 1 366 1 188 1 249 1 328 1 202 1 203 1 192 1 87 1 80 1 
115 1 361 2 116 3 198 1 370 1 140 2 141 1 284 1 358 1 173 4 366 1 177 1 188 3 180 1 249 1 315 1 328 1 202 3 192 1 280 1 87 1 80 1 
116 1 188 1 284 1 202 1 80 1 381 1 
115 1 295 1 116 7 105 1 284 2 184 1 173 3 85 1 30 1 177 2 61 1 188 6 102 1 249 2 190 1 202 7 250 1 305 1 79 1 381 1 80 3 
104 2 295 1 343 1 199 1 242 1 3 3 109 1 7 1 159 1 249 1 202 1 350 1 306 6 163 1 254 1 115 1 116 1 354 2 356 1 16 2 20 1 169 1 214 2 77 2 80 1 131 1 269 2 83 2 270 2 173 1 174 4 272 1 225 2 275 1 367 2 136 1 331 1 44 2 335 3 284 1 288 1 372 1 47 1 147 1 188 1 237 1 194 1 
361 3 218 1 221 1 243 2 173 2 134 1 177 1 178 1 35 1 180 1 202 1 280 1 88 2 87 1 91 1 116 1 95 1 140 3 141 1 370 1 336 1 358 1 287 1 373 1 290 2 188 1 315 2 264 2 
115 1 295 1 116 2 311 1 284 1 173 2 188 2 249 1 202 2 87 1 79 1 381 1 80 2 
116 4 295 1 198 1 172 1 284 1 173 1 6 1 132 1 177 1 188 4 249 1 202 4 80 1 
115 1 116 2 267 1 105 1 284 1 173 1 60 1 188 2 249 1 328 1 190 1 202 2 51 1 80 2 
262 1 116 1 177 1 158 1 188 1 293 1 284 1 278 1 202 1 80 1 
116 2 295 1 188 2 249 1 298 1 284 1 202 2 250 1 173 1 30 1 80 1 
116 5 295 1 172 1 284 2 173 3 132 1 6 1 177 1 188 4 61 1 249 2 102 1 328 1 202 5 250 1 80 2 
116 5 295 1 172 1 284 2 173 3 132 1 6 1 300 1 177 1 188 4 249 2 102 1 328 1 202 5 250 1 80 2 
104 1 115 1 116 1 269 2 331 1 284 1 173 1 372 1 272 1 177 1 188 1 159 1 249 1 136 1 214 2 202 1 252 1 80 1 
115 1 116 1 105 1 284 1 184 1 173 1 188 1 249 1 190 1 328 1 202 1 79 1 80 2 
104 1 156 1 106 1 129 1 271 1 
104 1 361 2 95 1 106 2 370 1 140 2 55 1 358 1 71 1 271 1 135 1 18 1 156 2 248 1 180 1 228 1 193 1 39 1 129 2 
156 1 106 1 269 1 136 1 214 1 215 1 229 1 312 1 271 1 
135 1 71 1 271 1 
200 1 38 1 340 1 371 1 
200 1 152 1 268 1 38 1 277 1 371 1 154 1 
277 1 322 1 23 1 
152 1 268 1 43 1 371 1 154 3 74 1 200 1 247 1 38 1 277 3 265 2 380 1 
207 1 200 1 152 1 268 1 38 1 277 2 371 1 78 1 154 2 
152 1 268 1 371 1 25 1 154 1 74 1 245 1 158 1 293 1 277 1 162 1 
200 1 152 1 268 1 277 1 371 1 154 1 74 1 
200 2 152 1 268 1 38 1 277 1 154 1 74 1 
152 2 268 2 118 1 371 1 154 2 74 1 200 1 189 1 318 1 277 2 
266 1 152 1 0 1 268 1 371 2 154 3 74 1 200 1 245 1 38 1 277 3 181 1 78 2 
152 1 268 1 371 1 25 1 154 2 74 1 58 1 200 1 158 2 293 1 38 1 278 1 277 2 78 1 103 1 
207 1 152 2 0 1 268 2 371 2 154 4 74 1 200 1 245 1 179 1 38 1 277 4 78 2 
200 1 152 1 268 1 38 1 277 1 371 1 154 1 74 1 
321 1 152 1 0 1 268 1 43 1 371 3 154 4 200 2 245 1 38 2 265 1 277 4 380 1 78 2 
152 1 268 1 371 1 154 2 74 1 200 1 9 1 38 1 277 2 348 1 78 1 307 1 
200 1 152 1 268 1 43 2 38 1 265 2 277 3 371 1 380 1 154 3 29 1 74 1 
369 1 238 1 371 2 17 2 
152 1 268 1 276 1 277 1 154 1 74 1 
266 1 200 1 152 1 268 1 38 1 277 2 371 1 78 1 154 2 74 1 
113 1 
200 1 152 1 268 1 38 1 277 1 371 1 154 1 74 1 
266 1 152 1 268 1 371 1 154 3 74 1 200 1 38 1 277 3 265 1 78 1 
321 1 0 1 245 1 371 1 
200 1 371 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 2 321 2 251 1 324 2 206 1 326 1 303 1 329 2 6 2 331 1 171 2 284 5 100 1 187 1 47 1 48 1 210 3 49 1 132 1 370 4 353 1 174 6 337 1 81 1 294 2 113 9 343 1 59 9 
2 2 321 2 251 1 324 2 206 1 326 1 303 1 329 2 6 2 331 1 171 2 284 5 100 1 187 1 47 1 48 1 210 3 49 1 132 1 370 4 353 1 174 6 337 1 81 1 294 2 113 9 343 1 59 9 
2 2 321 2 251 1 324 2 206 1 326 1 303 1 329 2 6 2 331 1 171 2 284 6 100 1 187 1 47 1 48 1 210 4 49 1 132 1 370 5 353 1 174 7 337 1 81 1 294 2 113 10 343 1 59 10 
2 2 321 2 251 1 324 2 206 1 326 1 303 1 329 1 6 2 331 1 171 2 284 4 100 1 47 1 48 1 210 2 49 1 132 1 370 3 353 1 174 4 337 1 81 1 294 2 113 7 343 1 59 7 
47 1 210 1 321 1 2 1 370 2 174 3 324 1 206 1 303 1 329 2 294 1 331 1 171 1 284 3 113 4 100 1 187 1 59 4 
275 1 47 1 2 1 321 1 132 1 326 1 303 1 6 1 294 1 282 1 171 1 284 1 112 1 113 2 100 1 59 2 
47 1 48 1 2 2 210 1 370 1 174 1 303 1 6 1 294 2 284 2 113 3 100 1 59 3 
2 2 321 1 324 1 206 1 303 1 329 2 6 1 331 1 171 1 284 5 100 1 187 1 48 1 47 1 210 3 49 1 188 1 370 4 353 1 174 7 294 2 113 9 59 9 31 1 
2 2 321 1 324 1 206 1 303 1 329 2 6 1 331 1 171 1 284 5 100 1 187 1 48 1 47 1 210 3 49 1 188 1 370 4 353 1 174 7 294 2 113 9 59 9 31 1 
161 1 241 1 360 1 
19 1 360 1 232 2 
101 1 234 2 281 2 236 1 205 2 16 2 18 2 62 2 
318 1 1 1 249 1 118 1 276 1 205 3 166 1 4 1 281 3 225 2 123 1 305 1 173 1 333 1 16 2 18 2 101 1 20 1 234 2 308 1 236 1 51 1 239 1 133 2 371 2 213 2 268 1 108 1 109 1 339 1 215 1 79 1 293 2 85 1 342 1 86 1 62 2 
234 1 168 1 281 1 236 1 205 1 230 1 16 1 327 1 18 1 62 1 
50 1 130 1 75 1 205 1 241 1 360 1 355 1 362 1 281 1 168 1 82 1 379 1 274 1 18 1 
234 1 50 1 130 1 205 1 241 1 360 1 362 2 281 1 168 1 82 1 379 2 274 1 16 1 62 1 18 1 
362 1 265 1 379 1 58 1 358 1 
362 2 379 2 58 1 217 1 241 1 349 1 360 1 358 1 
362 1 379 1 58 1 
234 1 236 1 205 1 327 1 362 1 168 1 281 1 379 1 243 1 230 1 16 1 358 1 62 1 18 1 
360 1 
362 2 368 1 379 2 58 1 241 1 349 1 360 1 358 1 
219 1 89 2 255 1 254 1 241 1 107 1 301 2 360 1 316 1 362 5 159 1 379 5 149 1 44 1 58 2 349 1 260 2 33 1 358 2 
101 1 161 1 
101 2 234 1 205 2 25 1 281 2 5 1 16 1 18 2 62 1 
292 1 53 1 193 1 
101 1 1 1 249 1 205 1 133 1 213 1 166 1 268 1 108 1 339 1 27 1 281 1 225 1 305 1 342 1 86 1 
234 1 1 1 249 1 205 2 133 1 278 1 213 1 268 1 166 1 193 1 108 1 339 1 281 2 136 1 225 1 305 1 342 1 86 1 62 1 18 1 
101 1 234 4 205 5 278 2 355 1 340 1 281 5 5 1 136 1 271 1 125 1 16 1 62 4 18 5 
234 2 168 1 281 2 153 1 205 2 327 1 18 2 62 2 
101 1 234 3 281 3 205 3 278 1 16 1 18 3 62 3 
234 1 168 1 281 1 205 1 327 1 18 1 62 1 
234 1 168 1 281 1 5 1 205 1 16 1 25 1 18 1 62 1 
318 1 1 1 249 1 118 1 205 4 278 1 166 1 362 1 5 1 281 4 168 1 225 1 123 1 305 1 173 1 333 1 209 1 16 2 18 3 101 1 20 1 234 3 50 1 236 1 130 1 51 1 289 1 133 1 371 1 213 1 268 1 108 1 109 1 339 1 215 1 79 1 293 2 136 1 82 1 379 1 274 1 342 1 86 1 62 3 
101 1 340 1 234 1 281 2 205 2 278 1 355 1 18 2 62 1 
234 3 50 1 130 1 165 1 205 3 278 2 360 1 362 1 5 1 168 1 281 3 136 1 82 1 379 1 274 1 16 1 209 1 62 3 18 3 
234 2 281 2 5 1 205 2 278 1 53 1 193 1 16 1 18 2 62 2 
101 1 1 1 249 1 205 1 133 1 213 1 166 1 268 1 108 1 339 1 281 1 225 1 305 1 342 1 86 1 
101 1 249 1 205 1 133 1 213 1 166 1 268 1 339 1 281 1 225 1 305 1 342 1 87 1 287 1 86 1 
318 1 37 1 118 1 146 1 276 2 298 1 361 1 226 1 150 1 173 1 333 1 20 2 310 1 74 1 51 1 312 1 104 1 371 4 53 2 193 2 79 1 292 2 293 2 196 1 
234 1 168 1 281 1 50 1 153 1 205 1 18 1 62 1 
179 1 134 1 
179 1 134 1 
103 1 365 1 
103 1 365 1 
103 1 365 1 
179 1 97 1 134 1 
179 1 97 1 134 1 
179 1 77 1 134 1 
377 1 179 2 8 1 103 1 365 1 134 2 
179 1 97 1 134 1 
179 1 304 1 134 1 
179 1 304 1 134 1 
179 1 304 1 134 1 
101 1 234 2 263 1 164 1 297 1 205 2 23 1 77 1 134 1 26 1 362 1 179 1 178 1 281 2 68 1 379 1 207 1 285 1 273 1 247 1 350 1 18 2 17 1 62 2 
102 1 325 1 360 1 134 2 375 1 26 2 179 2 362 2 178 3 8 1 207 2 379 2 9 1 83 2 273 2 71 1 247 2 15 1 17 1 
321 1 171 1 324 1 
321 1 171 1 112 1 
347 1 57 1 321 3 112 1 324 2 338 1 
347 1 57 1 321 2 112 1 139 1 324 1 
347 1 57 2 321 2 112 1 324 1 
219 3 89 1 164 1 37 1 298 1 94 1 301 1 360 2 362 5 169 2 257 1 68 1 149 1 349 1 232 3 260 1 19 1 263 1 352 1 131 1 190 1 312 1 104 1 105 2 107 2 354 2 241 1 379 5 58 1 197 1 61 1 358 4 
219 8 35 1 89 2 37 3 38 1 252 5 254 1 298 3 94 1 301 2 360 5 362 9 169 6 257 3 68 4 149 1 349 1 232 9 260 2 261 1 19 3 265 5 131 2 312 3 104 3 105 6 107 6 241 1 28 1 379 9 195 1 58 6 138 1 197 2 358 7 
219 3 89 1 37 1 254 1 298 1 301 1 360 3 362 3 257 1 169 2 68 1 232 4 260 1 19 2 352 1 131 1 190 1 312 1 104 1 241 1 354 1 107 2 105 2 379 3 197 1 358 2 
219 5 89 1 37 2 38 1 254 1 298 2 301 1 360 4 362 4 169 4 257 2 68 2 232 7 260 1 261 1 19 3 352 1 131 1 190 1 312 2 104 2 241 1 105 4 354 2 107 4 379 4 195 1 197 1 358 3 
339 1 121 1 161 1 
339 1 272 1 
346 1 
339 1 249 1 86 1 
339 1 295 1 
339 1 86 1 
339 3 121 2 249 1 227 1 86 1 156 1 
20 3 220 1 345 1 37 1 146 2 276 4 204 1 312 1 192 1 371 7 147 1 184 2 356 1 226 3 216 1 70 1 286 1 
20 3 220 1 345 1 37 1 146 2 276 4 204 1 312 1 192 1 371 7 147 1 184 2 356 1 226 3 216 1 70 1 286 1 
20 3 34 1 220 1 345 1 37 1 146 2 276 4 204 1 312 1 192 1 371 7 147 1 184 2 356 1 226 3 216 1 70 1 286 1 
318 1 220 5 345 2 37 4 118 1 146 5 323 1 276 16 204 1 298 3 43 1 147 1 184 3 224 1 257 3 226 10 70 1 172 1 286 1 333 1 259 1 351 4 20 15 371 31 192 2 104 3 312 4 158 1 79 1 356 2 293 2 160 3 216 2 111 1 
163 1 318 2 220 1 345 1 37 1 118 2 146 3 276 5 147 1 184 2 226 4 70 1 286 1 333 2 259 1 20 4 312 1 371 9 192 1 79 2 293 4 356 1 137 1 216 1 
2 1 321 2 41 1 324 1 279 1 303 1 6 1 225 1 69 1 171 1 284 1 305 1 126 1 100 1 47 1 369 1 174 1 133 1 213 1 155 1 214 1 313 1 338 1 294 1 110 1 112 1 113 2 59 2 342 1 296 1 
0 1 2 1 321 2 41 1 324 1 280 1 303 1 6 1 225 1 69 1 99 1 171 1 284 1 305 1 126 1 100 1 369 1 174 2 133 1 213 1 155 1 313 1 338 1 294 1 110 1 112 1 113 3 59 3 342 1 296 1 
0 1 321 2 41 1 324 1 303 1 6 1 225 1 69 1 99 1 171 1 284 1 305 1 126 1 100 1 174 2 133 1 213 1 155 1 338 1 110 1 112 1 113 2 59 2 342 1 296 1 
63 1 2 1 64 1 222 1 166 1 280 1 6 2 98 1 225 1 69 2 305 1 364 1 191 1 133 1 213 1 155 2 339 1 294 1 113 1 59 1 342 1 86 1 296 2 
0 1 2 1 321 2 41 1 324 1 6 1 225 1 69 1 171 1 305 1 126 1 47 1 369 1 133 1 213 1 155 1 214 1 313 1 338 1 294 1 110 1 112 1 113 1 59 1 342 1 296 1 
115 1 
63 1 201 1 202 2 3 1 64 1 203 1 205 1 166 2 299 4 301 1 348 1 256 2 168 1 305 1 349 3 260 1 18 1 19 2 130 1 75 1 133 2 213 2 267 2 355 1 269 1 135 1 82 1 274 1 86 1 219 2 89 1 143 1 144 2 145 1 360 2 183 1 362 5 281 1 225 2 149 1 232 2 335 1 50 1 241 1 107 2 339 1 157 1 194 2 379 5 58 6 197 1 246 1 60 2 342 1 248 2 
143 1 205 1 299 2 183 1 362 3 281 1 168 1 349 1 18 1 50 1 368 1 130 1 75 1 355 1 269 1 135 1 82 1 379 3 58 2 246 1 274 1 248 1 
143 1 205 1 299 3 360 1 183 1 362 3 281 1 168 1 349 1 18 1 50 1 368 1 130 1 75 1 241 1 355 1 269 1 135 1 194 1 82 1 379 3 58 1 246 1 274 1 
143 1 205 1 299 3 360 1 183 1 362 3 281 1 168 1 256 1 349 1 18 1 50 1 368 1 130 1 75 1 241 1 355 1 269 1 135 1 194 1 82 1 379 3 58 2 246 1 274 1 248 1 
3 1 202 2 203 1 205 1 299 6 301 1 256 4 168 1 258 1 349 3 260 1 18 1 19 2 130 1 75 1 267 2 355 1 269 1 135 1 82 1 274 1 219 1 143 1 89 1 144 2 359 1 360 5 183 1 328 1 362 5 281 1 149 1 233 1 50 1 368 1 189 1 241 5 107 1 194 4 379 5 58 7 246 1 60 2 248 4 
219 1 143 1 89 1 144 2 145 1 202 2 3 1 203 1 205 1 299 4 301 1 360 2 183 1 362 4 256 2 281 1 168 1 149 1 349 2 232 2 260 1 18 1 19 2 50 1 130 1 75 1 267 2 241 1 107 1 355 1 269 1 135 1 194 2 82 1 379 4 58 4 246 1 274 1 60 2 248 2 
219 1 143 1 89 1 144 2 202 2 3 1 203 1 205 1 299 4 301 1 360 1 183 1 328 1 362 4 256 2 281 1 168 1 149 1 258 1 349 2 260 1 18 1 19 2 50 1 130 1 189 1 75 1 267 2 241 1 107 1 355 1 269 1 135 1 194 2 82 1 379 4 58 4 246 1 274 1 60 2 248 2 
219 1 143 1 89 1 144 2 202 2 3 1 203 1 205 1 299 4 301 1 360 1 183 1 328 1 362 4 256 2 281 1 168 1 149 1 258 1 349 2 260 1 18 1 19 2 50 1 130 1 189 1 75 1 267 2 241 1 107 1 355 1 269 1 135 1 194 2 82 1 379 4 58 4 246 1 274 1 60 2 248 2 
219 1 91 2 143 1 89 1 144 2 3 1 205 1 299 4 301 1 360 1 183 1 328 1 362 4 256 2 281 1 168 1 149 1 10 2 349 2 232 2 260 1 18 1 50 1 130 1 75 1 52 1 76 1 241 1 107 1 372 1 355 1 269 1 135 1 194 2 82 1 379 4 58 4 246 1 274 1 60 2 248 2 
219 1 89 1 143 1 144 2 202 2 3 1 203 1 359 1 205 1 299 5 301 1 360 1 183 1 328 1 362 4 281 1 168 1 256 3 149 1 258 1 349 2 260 1 18 1 19 2 50 1 130 1 189 1 75 1 267 2 241 1 107 1 355 1 269 1 135 1 194 3 82 1 379 4 58 5 246 1 274 1 60 2 248 3 
219 1 89 1 143 1 144 2 202 2 3 1 203 1 359 1 205 1 299 5 301 1 360 1 183 1 328 1 362 4 281 1 168 1 256 3 149 1 258 1 349 2 260 1 18 1 19 2 50 1 130 1 189 1 75 1 267 2 241 1 107 1 355 1 269 1 135 1 194 3 82 1 379 4 58 5 246 1 274 1 60 2 248 3 
3 1 205 1 299 4 301 1 168 1 256 2 10 2 349 2 260 1 18 1 130 1 75 1 355 1 269 1 135 1 82 1 274 1 219 1 89 1 143 1 91 2 144 2 145 1 360 1 183 1 362 4 281 1 149 1 232 2 50 1 52 1 107 1 241 1 194 2 379 4 58 4 246 1 60 2 248 2 
318 1 345 1 37 1 118 1 146 2 276 3 147 1 184 1 226 2 70 1 173 1 286 1 333 1 101 2 20 3 74 1 51 1 371 6 312 1 53 1 193 1 79 1 292 1 293 2 356 1 161 1 
318 2 220 1 322 1 37 2 146 1 118 2 276 8 298 2 43 1 224 1 257 2 226 2 124 1 173 2 229 1 333 2 351 3 101 1 20 6 154 1 51 1 239 1 371 14 104 1 312 1 53 4 193 11 215 1 79 2 292 11 293 4 84 1 160 3 
318 1 1 1 249 1 92 1 118 1 276 1 205 2 278 1 166 1 281 2 225 1 11 1 305 1 173 1 333 1 18 1 101 1 234 1 20 1 73 1 51 1 133 1 239 1 213 1 371 2 268 1 53 1 108 1 339 1 27 1 79 1 215 1 293 2 136 1 84 1 342 1 86 1 62 1 
0 1 1 2 249 2 345 1 118 3 205 3 66 2 166 1 298 2 257 2 305 2 70 1 173 3 18 1 20 10 133 3 312 3 213 3 268 2 215 1 79 3 80 1 356 1 136 1 84 1 86 2 318 3 220 4 37 3 146 4 276 10 277 2 278 1 147 1 184 1 281 3 225 3 148 2 226 8 286 1 333 3 101 2 234 1 51 3 239 1 371 20 104 2 53 7 193 7 54 1 108 2 109 2 339 2 292 7 293 6 242 2 342 2 162 1 62 1 
0 1 318 2 63 1 64 1 118 2 65 1 276 1 205 1 278 1 300 1 166 2 279 1 96 1 4 2 281 1 225 7 151 1 305 2 173 2 333 2 18 1 234 1 20 1 235 1 74 1 51 2 133 8 239 1 213 8 371 2 339 3 56 1 79 2 215 1 293 4 342 2 86 2 200 1 62 1 
318 1 37 1 146 1 118 1 276 1 205 1 298 1 5 1 281 1 257 1 226 1 173 1 333 1 16 1 18 1 234 1 20 2 51 1 371 3 104 1 312 1 53 1 193 1 373 1 292 1 79 1 293 2 84 1 62 1 
318 1 220 1 37 1 118 1 74 1 51 1 276 2 371 2 53 1 298 1 193 1 292 1 79 1 293 2 226 1 150 1 173 1 333 1 
318 1 20 2 146 1 118 1 74 1 51 1 371 2 104 1 312 1 53 1 193 1 292 1 79 1 293 2 226 1 196 1 173 1 333 1 
318 1 220 1 37 1 118 1 146 1 276 2 298 1 257 1 226 2 173 1 333 1 20 2 74 1 51 1 371 4 104 1 312 1 53 2 193 2 79 1 292 2 293 2 
318 1 220 1 37 1 118 1 51 1 276 2 371 2 53 1 298 1 193 1 56 1 292 1 79 1 293 2 226 1 150 1 173 1 333 1 
318 1 20 2 146 1 118 1 51 1 371 2 104 1 312 1 53 1 193 1 56 1 292 1 79 1 293 2 226 1 196 1 173 1 333 1 
318 1 220 1 37 1 118 1 146 1 276 2 298 1 257 1 226 2 173 1 333 1 20 2 51 1 371 4 104 1 312 1 53 2 193 2 56 1 79 1 292 2 293 2 
318 1 20 2 220 1 37 1 146 1 118 1 51 1 276 2 312 1 104 1 371 4 53 2 298 1 193 2 292 2 79 1 293 2 257 1 226 2 173 1 333 1 
318 1 1 1 249 1 118 1 276 1 205 1 166 1 281 1 225 1 305 1 173 1 333 1 101 1 20 1 51 1 239 1 133 1 371 2 213 1 268 1 108 1 109 1 339 1 79 1 215 1 293 2 342 1 86 1 
318 1 249 1 118 1 276 1 205 1 166 1 281 1 225 1 305 1 173 1 333 1 287 1 101 1 20 1 51 1 239 1 133 1 371 2 78 1 213 1 268 1 339 1 79 1 215 1 293 2 342 1 86 1 87 1 
318 1 220 1 37 1 118 1 146 1 276 2 298 1 257 1 226 2 173 1 333 1 20 2 51 1 371 4 104 1 312 1 53 2 193 2 79 1 292 2 293 2 84 1 
318 1 1 1 220 1 249 1 37 1 146 1 118 1 276 2 205 1 298 1 279 1 281 1 257 1 148 1 225 1 226 2 305 1 173 1 333 1 20 2 51 1 133 1 312 1 104 1 371 4 213 1 53 2 268 1 193 2 108 1 109 1 339 1 292 2 79 1 293 2 342 1 86 1 
318 1 320 1 220 1 37 1 118 1 276 2 205 1 298 1 5 1 281 1 257 1 226 1 173 1 333 1 16 1 18 1 20 1 234 1 51 1 312 1 104 1 371 3 53 1 193 1 79 1 292 1 293 2 84 1 62 1 
345 1 118 3 298 4 257 4 122 1 70 1 259 1 351 4 20 21 72 1 211 1 212 4 312 5 79 3 356 1 137 1 29 1 318 3 220 4 37 5 146 4 39 1 276 20 43 3 95 1 147 1 184 1 224 1 226 8 286 1 333 3 366 1 231 1 336 1 104 4 371 41 240 1 291 1 293 6 160 3 114 2 199 1 344 1 
318 4 220 3 345 1 37 5 39 1 146 4 118 4 276 20 298 4 95 1 43 3 147 1 184 1 224 1 257 4 122 1 226 7 70 1 286 1 366 1 259 2 333 4 231 1 351 4 20 18 72 1 211 1 336 1 212 4 240 1 371 38 104 3 312 4 291 1 79 4 356 1 293 8 137 1 160 3 114 2 29 1 199 1 344 1 
318 2 220 7 345 1 37 8 39 1 146 7 118 2 276 27 298 7 43 2 147 1 184 1 224 2 257 7 122 1 226 14 70 1 286 1 366 1 259 1 229 2 333 2 231 1 351 4 20 25 72 1 336 1 212 4 240 1 371 52 104 7 312 8 291 1 79 2 356 1 293 4 137 1 160 4 114 1 29 1 199 1 344 1 
318 2 220 3 37 3 39 2 146 3 118 2 276 9 298 3 43 1 224 1 257 3 226 6 366 1 333 2 14 1 351 2 20 10 211 1 212 2 240 1 371 19 104 3 312 3 291 1 79 2 293 4 137 1 160 1 114 1 29 1 
318 3 220 2 37 3 39 1 146 2 118 3 276 14 298 3 43 2 257 3 122 1 226 4 366 1 259 2 333 3 231 1 351 2 20 12 72 1 336 1 212 4 312 2 240 2 371 26 104 2 291 1 79 3 293 6 137 1 160 2 114 2 29 1 199 1 344 1 
179 1 116 1 8 1 207 1 273 1 71 1 247 1 15 1 134 1 26 1 
77 1 350 1 
179 1 170 1 207 1 127 1 273 1 13 1 247 1 134 1 26 1 
97 1 228 1 
377 1 319 1 304 1 
102 1 325 1 360 1 134 1 26 1 362 1 179 1 178 2 8 1 379 1 207 1 9 1 83 1 273 1 71 1 247 1 15 1 17 1 
102 1 325 1 360 1 134 1 26 1 362 1 179 1 178 2 8 1 379 1 207 1 9 1 83 1 273 1 71 1 247 1 15 1 17 1 
102 1 325 1 360 1 134 1 26 1 362 1 179 1 178 2 8 1 379 1 207 1 9 1 83 1 273 1 71 1 247 1 15 1 17 1 
377 1 97 1 228 1 
377 1 97 1 228 1 
319 1 304 1 
377 1 319 1 304 1 
297 1 23 1 
101 1 234 2 102 1 263 1 164 1 297 1 205 2 23 1 77 1 134 1 26 1 178 1 179 1 362 1 281 2 68 1 207 1 379 1 83 1 363 1 285 1 273 1 247 1 350 1 18 2 62 2 358 1 
318 1 250 1 117 1 118 1 276 1 42 1 205 2 96 1 4 2 281 2 330 1 225 2 305 1 173 1 333 1 18 2 367 1 20 1 51 1 133 2 239 1 213 2 371 2 339 1 79 1 215 1 293 2 84 1 342 1 86 1 200 1 
0 1 321 2 369 1 311 1 133 2 41 1 324 1 213 2 155 1 338 1 279 1 225 2 110 1 171 1 112 1 305 1 341 1 342 1 32 1 
0 1 321 2 369 1 133 1 41 1 324 1 213 1 155 1 338 1 225 1 110 1 171 1 112 1 305 1 341 1 342 1 88 1 
63 1 36 1 64 1 311 1 191 1 133 1 213 1 166 1 155 1 339 1 225 1 305 1 342 1 86 1 
0 1 321 2 369 1 311 1 133 1 41 1 324 1 213 1 155 1 338 1 225 1 110 1 171 1 112 1 305 1 341 1 342 1 32 1 
218 1 
219 1 161 1 255 1 241 1 107 1 360 1 33 1 
219 1 89 1 202 1 203 1 301 1 360 2 362 1 149 1 349 1 232 1 260 1 19 1 267 1 107 1 241 1 379 1 58 1 
249 3 201 1 119 2 253 1 255 1 66 2 166 1 298 2 301 4 121 2 169 6 257 2 12 2 305 4 306 1 349 3 260 4 128 2 19 6 129 1 133 3 213 3 312 2 272 3 140 2 274 2 86 3 33 1 141 1 219 9 89 4 90 2 37 2 360 8 279 1 362 5 225 3 149 4 152 2 232 12 334 2 104 2 241 2 105 6 107 8 374 1 156 1 339 10 379 5 58 5 197 2 198 2 342 3 295 2 
219 8 89 2 201 1 37 2 298 2 43 1 301 2 360 5 362 1 169 5 257 2 122 1 149 2 186 1 349 1 232 6 231 1 351 1 260 2 128 2 19 3 336 1 104 2 312 2 105 5 107 5 241 2 379 1 58 1 160 1 357 1 197 1 198 1 199 1 344 1 
219 2 89 1 345 1 37 2 205 1 301 1 327 1 362 1 168 1 281 1 149 1 258 1 286 1 230 1 16 1 260 1 18 1 128 2 234 1 237 1 236 1 312 1 107 2 356 1 379 1 243 1 198 1 62 1 
219 1 89 1 149 1 255 1 241 1 107 1 301 1 360 1 260 1 33 1 
219 5 128 2 19 5 37 2 66 1 104 2 312 2 298 2 107 5 105 5 360 5 257 2 169 5 198 1 232 10 
362 1 379 1 58 1 241 1 349 1 360 1 
219 2 63 1 89 2 201 2 93 1 64 1 254 1 166 2 301 2 348 1 362 3 225 4 149 1 305 1 349 2 260 2 335 1 129 1 133 4 213 4 290 1 107 2 374 2 339 1 379 3 58 4 197 2 342 1 86 1 
318 1 1 1 249 1 118 1 205 3 166 1 281 3 225 1 123 1 305 1 173 1 333 1 16 2 18 2 101 1 20 1 234 2 236 1 51 1 133 1 371 1 213 1 268 1 108 1 109 1 339 1 215 1 79 1 293 2 342 1 86 1 62 2 
219 1 19 2 89 1 201 1 105 2 107 2 301 1 241 2 360 4 184 1 169 2 149 1 197 1 232 4 260 1 
67 1 273 1 26 1 
67 1 273 1 26 1 
315 1 297 1 273 1 71 1 26 1 
67 1 273 1 26 1 
167 1 273 1 26 1 
167 1 273 1 26 1 
167 1 273 1 26 1 
273 1 26 1 
179 1 134 1 
318 1 345 1 37 1 118 1 146 2 276 4 43 1 147 1 184 1 122 1 226 2 70 1 286 1 333 1 351 1 20 4 312 1 371 8 79 1 293 2 356 1 137 1 160 1 
318 2 220 1 345 1 37 2 146 2 118 2 276 6 298 1 43 1 147 1 184 1 224 1 257 1 122 1 226 3 70 1 286 1 333 2 351 2 20 5 312 1 371 11 79 2 356 1 293 4 137 1 160 1 245 1 
318 3 220 1 345 1 37 3 118 3 146 3 276 9 298 2 43 1 147 1 184 1 257 2 122 1 226 4 70 1 286 1 333 3 259 1 231 1 351 1 20 10 336 1 371 19 104 2 312 3 79 3 356 1 293 6 137 1 160 1 245 1 199 1 344 1 
318 3 220 2 345 1 37 3 118 3 146 3 276 10 298 2 43 1 147 1 184 1 257 2 122 1 226 5 70 1 286 1 259 1 333 3 231 1 351 1 20 7 336 1 371 17 104 1 312 2 79 3 356 1 293 6 137 1 160 1 245 1 199 1 344 1 
318 1 345 1 37 1 118 1 146 2 276 4 43 1 147 1 184 1 122 1 226 2 70 1 286 1 333 1 351 1 20 4 312 1 371 8 79 1 293 2 356 1 137 1 160 1 
318 1 220 1 37 2 118 1 146 1 276 6 298 2 43 1 257 2 122 1 226 2 333 1 231 1 351 1 20 6 336 1 371 12 104 2 312 2 79 1 293 2 137 1 160 1 199 1 344 1 
318 4 220 2 345 1 37 3 118 4 146 3 276 10 298 2 43 1 147 1 184 1 257 2 122 1 226 5 70 1 286 1 333 4 259 2 231 1 351 1 20 8 336 1 371 18 104 1 312 2 79 4 356 1 293 8 137 1 160 1 245 1 199 1 344 1 
318 4 220 3 37 3 118 4 146 3 276 9 298 3 43 1 257 3 122 1 226 6 333 4 259 2 231 1 351 1 20 7 336 1 211 1 371 16 104 2 312 2 79 4 293 8 137 1 160 1 199 1 344 1 
20 4 220 3 345 3 37 1 146 3 276 3 312 1 371 7 147 2 356 3 226 6 70 1 286 1 
318 4 220 1 345 1 37 3 118 4 146 3 276 10 298 2 43 1 147 1 184 1 257 2 122 1 226 4 70 1 286 1 333 4 259 2 231 1 351 1 20 8 336 1 211 1 371 18 104 1 312 2 79 4 356 1 293 8 137 1 160 1 199 1 344 1 
318 2 20 4 220 1 345 1 37 1 146 2 118 2 276 4 312 1 371 8 147 1 184 1 79 2 293 4 356 1 226 3 70 1 286 1 333 2 259 1 
20 3 356 1 345 1 37 1 226 2 146 2 161 1 276 3 70 1 312 1 371 6 286 1 147 1 184 1 
318 1 20 2 220 1 37 1 146 1 118 1 276 2 312 1 104 1 371 4 298 1 79 1 293 2 257 1 226 2 245 1 333 1 
20 4 220 1 37 1 146 1 276 3 312 1 104 1 371 7 298 1 43 1 224 1 257 1 160 1 226 2 351 2 
318 2 220 4 345 2 37 3 146 5 118 2 276 11 298 2 147 1 184 1 257 2 224 1 226 9 70 1 286 1 229 1 259 2 333 2 351 2 20 12 154 1 371 23 104 2 312 3 79 2 356 2 293 4 160 2 317 1 
20 1 371 1 351 1 
160 1 276 1 371 1 
318 1 20 3 220 1 37 1 118 1 146 2 276 3 66 1 371 6 104 1 312 1 298 1 79 1 293 2 257 1 226 3 245 1 333 1 
318 1 220 1 37 2 118 1 146 1 276 6 298 2 43 1 257 2 122 1 226 2 333 1 231 1 351 1 20 6 336 1 371 12 104 2 312 2 79 1 293 2 137 1 160 1 199 1 344 1 
20 3 220 1 345 1 37 1 146 1 276 3 371 6 312 1 356 1 226 2 286 1 
318 1 20 2 220 1 345 1 146 1 118 1 276 1 371 3 147 1 79 1 356 1 293 2 226 2 70 1 259 1 333 1 317 1 
318 1 20 5 220 2 345 2 237 1 37 2 118 1 146 3 276 5 371 10 312 2 79 1 293 2 356 2 137 1 226 5 286 1 333 1 
318 1 220 1 37 1 118 1 276 2 371 2 298 1 79 1 293 2 137 1 226 1 333 1 
318 1 20 2 220 1 37 1 146 1 118 1 276 2 312 1 104 1 371 4 298 1 79 1 293 2 257 1 137 1 226 2 333 1 
318 3 20 2 220 1 345 1 118 3 146 1 211 1 276 1 371 3 79 3 293 6 356 1 137 1 226 2 259 1 333 3 317 1 
318 5 220 5 345 3 37 5 118 5 146 7 323 1 276 16 298 3 43 1 147 1 184 1 224 1 257 3 226 12 70 1 172 1 286 2 259 2 333 5 351 4 20 18 211 1 371 34 104 3 312 5 79 5 356 3 293 10 137 1 160 3 111 1 245 1 317 1 
101 1 340 1 281 1 205 1 46 1 355 1 18 1 
101 1 181 1 221 1 205 1 355 1 302 1 120 1 340 1 281 1 46 1 380 1 18 1 
339 1 63 1 225 1 64 1 161 1 305 1 133 1 213 1 166 1 342 1 86 1 
101 1 234 1 249 1 205 2 133 1 278 1 213 1 268 1 166 1 108 1 339 1 281 2 225 1 305 1 342 1 86 1 62 1 18 1 
101 1 234 1 249 2 50 1 205 2 133 1 278 1 213 1 268 1 374 1 108 1 339 3 168 1 281 2 82 1 225 1 305 1 342 1 295 1 152 1 86 2 62 2 18 2 
249 2 205 2 278 1 281 2 168 1 225 2 305 1 287 1 152 1 18 2 101 1 234 1 50 1 133 2 213 2 268 1 374 1 339 3 82 1 244 1 342 1 86 2 295 1 62 2 
249 1 166 1 360 1 362 2 121 1 225 3 305 1 152 1 22 1 133 3 213 3 176 1 241 1 374 1 339 4 379 2 58 1 244 1 272 1 274 1 342 1 86 1 295 1 
249 1 119 1 133 3 213 3 166 1 241 1 360 1 374 1 339 4 362 2 121 1 379 2 225 3 58 1 244 1 305 1 272 1 274 1 342 1 295 1 86 1 152 1 
225 1 305 1 133 1 213 1 300 1 342 1 
0 1 249 1 235 1 21 1 65 1 133 7 213 7 300 1 166 2 156 1 279 1 55 1 339 3 4 1 225 6 151 1 305 3 342 2 86 2 200 1 142 1 
1 1 250 1 249 1 345 1 118 2 205 2 305 1 173 2 70 1 18 1 20 3 133 1 213 1 312 1 268 1 79 2 356 1 84 1 86 1 318 2 37 1 146 2 276 3 278 1 147 1 279 1 184 1 281 2 148 1 225 1 226 2 286 1 333 2 101 2 234 1 51 2 371 6 53 1 193 1 108 1 109 1 339 1 292 1 293 4 242 1 342 1 62 1 
219 1 89 2 119 1 255 1 166 1 301 2 360 1 362 3 121 1 225 1 149 2 12 1 349 1 260 2 334 1 129 1 133 1 213 1 241 1 107 1 339 2 379 3 58 2 272 1 140 1 274 1 33 1 358 1 
249 1 133 2 213 2 300 1 156 1 279 1 339 2 121 1 225 2 305 2 342 1 86 1 141 1 
63 1 64 1 133 4 213 4 166 1 24 1 279 1 339 1 225 4 244 1 305 1 342 1 86 1 
249 1 21 1 238 1 133 2 213 2 374 1 339 1 80 1 225 2 305 2 342 1 86 1 307 1 142 1 
321 1 225 1 110 1 171 1 112 1 305 1 133 1 213 1 166 1 342 1 
339 1 367 1 0 1 225 2 305 1 133 2 213 2 342 1 86 1 279 1 200 1 
63 1 235 1 64 1 65 1 133 5 213 5 166 1 374 1 24 1 279 1 339 3 225 4 305 2 342 2 86 2 200 1 
249 1 21 1 64 1 238 1 133 2 213 2 166 1 279 1 376 1 339 2 225 2 305 3 342 2 86 2 142 1 307 1 200 1 
101 1 234 1 249 1 205 2 133 1 278 1 213 1 268 1 166 1 339 1 281 2 225 1 305 1 342 1 86 1 287 1 62 1 18 1 
249 1 21 1 133 1 213 1 374 1 156 1 55 1 339 1 225 1 305 2 342 1 86 1 142 1 
101 1 185 1 378 1 266 1 381 1 
101 1 50 1 130 1 40 1 266 1 241 1 360 1 314 1 362 2 378 2 185 2 168 1 82 1 379 2 274 1 180 1 209 1 358 1 381 2 
378 1 281 1 330 1 117 1 205 1 42 1 266 1 18 1 381 1 
40 1 266 1 180 1 
303 1 161 1 284 1 100 1 
303 1 2 1 294 1 284 1 113 1 100 1 59 1 
6 1 69 1 113 1 
47 1 2 1 326 2 303 1 294 1 284 1 208 1 113 3 45 1 332 1 59 3 100 1 
303 1 329 1 2 1 294 1 284 1 174 1 113 2 100 1 59 2 
47 1 2 1 321 1 370 1 324 1 206 1 294 1 171 1 284 1 113 1 59 1 
47 1 2 1 294 1 284 1 113 1 100 1 59 1 
303 1 47 1 2 1 294 1 113 1 100 2 59 1 
47 1 2 2 177 1 294 2 7 1 284 1 113 2 100 1 30 1 59 2 
47 1 2 1 210 1 49 1 353 1 370 1 174 2 303 1 294 1 284 2 113 3 100 1 59 3 
47 1 321 2 2 1 309 1 174 1 324 1 338 1 303 1 294 1 171 1 284 1 112 1 113 2 100 1 59 2 
47 1 2 2 210 1 370 1 174 2 303 1 329 1 294 2 284 2 113 4 100 1 59 4 187 1 
303 1 47 1 2 1 294 1 284 1 113 1 100 1 59 1 
264 1 2 1 210 1 370 1 174 2 326 1 303 2 294 1 208 1 284 3 113 4 45 1 100 2 59 4 
47 1 2 1 182 1 188 1 174 1 223 1 303 1 294 1 284 1 113 2 100 1 59 2 
47 1 288 1 2 1 326 2 303 1 294 1 284 1 208 2 113 3 45 1 59 3 100 1 
270 2 283 1 284 2 106 1 
47 1 2 1 294 1 113 1 175 1 59 1 
303 1 47 1 2 1 49 1 294 1 284 1 174 1 113 2 100 1 59 2 
262 1 
303 1 47 1 2 1 294 1 284 1 113 1 100 1 59 1 
47 1 2 1 49 1 174 1 326 1 303 1 294 1 284 1 113 3 59 3 100 1 
264 1 210 1 284 1 370 1 
284 1 100 1 

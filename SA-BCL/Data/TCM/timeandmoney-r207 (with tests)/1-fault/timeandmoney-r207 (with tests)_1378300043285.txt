#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
61 1 205 1 255 1 67 4 284 1 208 1 167 1 210 9 235 3 211 1 147 7 92 2 168 1 148 1 12 1 347 1 99 2 16 9 154 1 296 2 103 5 102 1 179 1 201 1 
61 1 205 1 255 1 67 4 284 1 208 1 167 1 210 9 235 3 211 1 147 7 92 2 168 1 148 1 12 1 347 1 99 2 16 9 154 1 296 2 103 5 102 1 179 1 201 1 
61 1 205 2 66 1 255 2 67 4 284 1 258 1 167 1 210 9 235 3 211 1 147 6 92 2 337 1 319 1 148 2 12 1 172 1 347 1 99 2 16 9 154 2 296 2 226 1 103 5 102 1 179 1 201 1 
61 1 205 2 66 1 255 2 67 4 284 1 258 1 167 1 210 9 235 3 211 1 147 6 92 2 337 1 319 1 148 2 12 1 172 1 347 1 99 2 16 9 154 2 296 2 226 1 103 5 102 1 179 1 201 1 
61 1 205 2 66 1 255 2 67 5 284 1 258 1 167 1 210 10 235 4 211 1 147 7 92 2 337 1 319 1 148 2 12 1 172 1 347 1 99 2 16 10 154 2 296 2 226 1 103 6 102 1 179 1 201 1 
61 1 205 2 66 1 255 2 67 3 284 1 258 1 167 1 210 7 235 2 211 1 147 4 92 1 337 1 319 1 148 2 12 1 172 1 347 1 99 2 16 7 154 2 296 2 226 1 103 4 102 1 201 1 
148 1 12 1 61 1 205 1 255 1 67 2 99 1 167 1 16 4 210 4 235 1 296 1 211 1 103 3 147 3 179 1 92 2 201 1 
148 1 263 1 12 1 61 1 55 1 255 1 172 1 258 1 99 1 167 1 16 2 210 2 154 1 296 1 103 1 261 1 
12 1 61 1 67 1 347 1 99 2 167 1 16 3 210 3 154 1 296 2 235 1 103 2 147 1 
101 1 286 1 128 1 
115 2 101 1 222 1 
372 2 83 2 234 1 156 1 247 2 108 2 187 2 241 2 
202 2 83 3 136 2 309 1 282 1 45 1 108 2 110 1 89 1 4 1 183 1 330 2 68 1 26 1 234 1 187 2 28 1 336 1 31 1 11 1 14 1 75 2 367 1 369 1 371 1 241 2 243 1 219 1 372 3 373 1 79 1 156 1 247 2 227 1 21 2 300 1 302 1 
372 1 340 1 83 1 234 1 39 1 247 1 108 1 187 1 241 1 277 1 
95 1 83 1 108 1 126 1 128 1 372 1 140 1 139 1 101 1 39 1 316 1 299 1 8 1 275 1 
95 1 83 1 108 1 241 1 126 1 128 1 372 1 139 1 101 1 39 1 316 2 247 1 8 2 187 1 275 1 
316 1 8 1 189 1 181 1 73 1 
270 1 101 1 316 2 7 1 8 2 189 1 128 1 73 1 
316 1 8 1 73 1 
340 1 83 1 108 1 241 1 372 1 234 1 39 1 316 1 334 1 247 1 8 1 187 1 189 1 277 1 
101 1 
101 1 91 1 316 2 7 1 8 2 189 1 128 1 73 1 
306 1 359 2 239 1 121 1 2 1 171 1 267 1 128 1 116 2 52 2 101 1 316 5 352 1 353 1 7 1 8 5 189 2 178 1 73 2 
286 1 156 1 
83 2 108 2 214 1 241 1 372 2 314 1 247 1 156 2 187 1 
122 1 195 1 46 1 
31 1 83 1 309 1 75 1 367 1 371 1 4 1 183 1 242 1 330 1 372 1 68 1 156 1 21 1 227 1 336 1 
0 1 83 5 108 5 241 1 163 1 372 5 165 1 314 1 247 4 156 1 325 2 299 1 187 4 58 1 
372 2 340 1 83 2 39 1 247 2 108 2 187 2 288 1 
31 1 83 2 309 1 367 1 75 1 195 1 108 1 371 1 4 1 183 1 330 1 372 2 68 1 247 1 325 1 187 1 227 1 21 1 58 1 336 1 
372 3 83 3 156 1 247 3 325 1 108 3 187 3 241 1 
372 1 340 1 83 1 39 1 247 1 108 1 187 1 
372 1 83 1 314 1 39 1 247 1 108 1 187 1 214 1 241 1 
202 2 83 4 136 1 309 1 282 1 45 1 108 3 4 1 183 1 330 1 68 1 139 1 26 1 314 1 234 1 316 1 187 3 8 1 336 1 31 1 11 1 95 1 367 1 75 1 369 1 371 1 241 2 126 1 243 1 219 1 372 4 373 1 79 1 39 1 156 1 247 3 325 1 227 1 275 1 354 1 21 1 326 1 58 1 302 1 
372 2 165 1 83 2 156 1 247 1 108 2 325 1 299 1 187 1 
95 1 83 3 108 3 241 1 126 1 90 1 372 3 139 1 314 1 101 1 316 1 39 1 247 3 325 2 8 1 187 3 354 1 275 1 58 1 
83 2 195 1 46 1 108 2 241 1 372 2 314 1 247 2 325 1 187 2 
31 1 83 1 309 1 75 1 367 1 371 1 4 1 183 1 330 1 372 1 68 1 156 1 21 1 227 1 336 1 
31 1 83 1 309 1 75 1 367 1 4 1 330 1 372 1 68 1 19 1 156 1 21 1 227 1 336 1 249 1 
202 2 203 1 60 1 136 4 282 1 45 1 46 2 114 1 25 1 257 1 26 1 28 2 93 1 11 2 122 2 195 2 215 1 220 1 323 1 373 1 79 1 134 1 22 1 302 1 
372 1 95 1 83 1 39 1 247 1 108 1 187 1 288 1 
53 1 104 1 
53 1 104 1 
322 1 132 1 
322 1 132 1 
322 1 132 1 
283 1 53 1 104 1 
283 1 53 1 104 1 
152 1 53 1 104 1 
98 1 322 1 132 1 53 2 33 1 104 2 
283 1 53 1 104 1 
251 1 53 1 104 1 
251 1 53 1 104 1 
251 1 53 1 104 1 
83 2 137 1 64 1 108 2 331 1 332 1 316 1 71 1 53 1 6 1 187 2 8 1 341 1 13 1 370 1 15 1 372 2 152 1 199 1 156 1 247 2 104 1 303 1 41 1 
304 2 106 1 305 1 341 2 329 1 310 1 343 1 64 2 33 1 370 2 331 3 153 1 101 1 316 2 199 1 53 2 71 2 8 2 104 2 
148 1 205 1 255 1 
148 1 255 1 261 1 
197 1 148 3 131 1 213 1 205 2 261 1 
148 2 131 1 213 1 205 1 261 1 119 1 
148 2 131 2 213 1 205 1 261 1 
203 1 306 1 359 1 137 1 62 1 111 1 115 3 207 2 116 1 52 1 332 1 333 2 316 5 7 1 8 5 189 4 338 1 73 1 239 2 169 1 215 1 97 1 218 1 128 1 15 1 323 1 222 1 37 1 101 2 298 2 22 1 178 3 
158 1 203 3 306 1 360 1 308 5 359 2 62 1 2 1 254 1 63 1 181 5 115 9 207 6 116 2 52 2 316 9 8 9 212 1 7 1 189 7 73 6 239 6 169 2 215 3 97 2 15 4 128 1 323 3 222 3 37 3 101 5 297 1 298 6 22 3 178 8 
203 1 359 1 2 1 116 1 207 2 115 4 52 1 333 1 316 3 8 3 189 2 338 1 169 1 239 2 215 1 97 1 128 1 218 1 15 1 323 1 101 3 222 2 37 1 298 2 178 3 22 1 
158 1 203 2 360 1 359 1 2 1 115 7 207 4 116 1 52 1 333 2 316 4 8 4 189 3 338 1 169 1 239 4 215 2 97 1 128 1 218 1 15 2 323 2 101 4 222 3 37 2 297 1 298 4 178 5 22 2 
31 1 286 1 321 1 
31 1 34 1 
185 1 
31 1 309 1 227 1 
31 1 69 1 
31 1 227 1 
31 3 309 1 374 1 321 2 227 1 173 1 
262 1 228 2 11 3 203 1 136 7 194 1 65 1 151 1 206 1 240 1 113 1 114 2 25 3 323 1 17 1 9 1 28 4 
262 1 228 2 11 3 203 1 136 7 194 1 65 1 151 1 206 1 240 1 113 1 114 2 25 3 323 1 17 1 9 1 28 4 
262 1 228 2 11 3 203 1 136 7 194 1 65 1 151 1 206 1 240 1 113 1 114 2 25 3 323 1 17 1 177 1 9 1 28 4 
202 2 228 3 203 4 136 31 282 1 85 1 65 2 109 1 206 2 113 1 114 5 25 10 26 1 9 2 146 1 28 16 262 5 11 15 194 1 265 1 151 2 240 1 215 3 174 1 350 4 323 4 17 1 294 1 37 3 244 1 79 1 248 3 22 3 302 1 
202 4 228 2 203 1 136 9 282 2 85 1 47 1 65 1 206 1 114 3 113 1 25 4 26 2 9 1 28 5 262 1 11 4 194 1 151 1 240 1 323 1 79 2 377 1 302 2 
281 1 61 1 205 1 255 1 4 1 330 1 24 1 164 1 51 1 167 1 210 2 261 1 147 1 336 1 148 2 12 1 75 1 342 1 197 1 99 1 16 2 154 1 296 1 245 1 324 1 40 1 103 1 21 1 200 1 356 1 
281 1 61 1 205 1 255 1 4 1 330 1 24 1 164 1 167 1 210 3 315 1 261 1 147 2 336 1 148 2 75 1 342 1 96 1 197 1 271 1 99 1 16 3 154 1 296 1 324 1 40 1 103 1 21 1 200 1 356 1 
281 1 61 1 205 1 255 1 4 1 330 1 164 1 167 1 210 2 261 1 147 2 336 1 148 2 75 1 342 1 96 1 197 1 271 1 16 2 154 1 324 1 40 1 103 1 21 1 200 1 
42 1 307 1 162 1 4 1 330 1 164 2 68 1 210 1 315 1 336 1 118 1 31 1 75 1 342 2 76 1 99 1 16 1 293 1 154 2 296 1 21 1 227 1 200 2 
148 2 281 1 12 1 75 1 342 1 96 1 205 1 255 1 4 1 24 1 330 1 197 1 164 1 99 1 16 1 154 1 210 1 245 1 296 1 324 1 40 1 261 1 21 1 336 1 356 1 200 1 
143 1 
83 1 135 1 88 1 49 2 139 1 140 1 52 1 236 1 8 4 7 2 54 3 95 1 239 1 100 1 101 1 299 1 306 1 359 1 361 5 108 1 312 3 112 1 116 1 166 2 259 1 365 3 316 4 73 5 264 1 74 1 32 1 126 1 217 1 128 1 372 1 129 2 222 2 223 2 39 1 375 1 275 1 178 1 
306 1 359 1 83 1 135 1 361 5 108 1 88 1 312 3 49 2 112 1 116 1 140 1 139 1 166 2 52 1 259 1 365 3 236 1 316 4 7 2 8 4 73 5 54 3 74 1 264 1 95 1 239 1 32 1 126 1 128 1 217 1 129 2 372 1 100 1 101 1 222 2 223 2 39 1 375 1 299 1 275 1 178 1 
83 1 49 2 139 1 140 1 285 2 52 1 236 1 8 4 7 2 190 1 54 2 95 1 239 1 100 1 101 1 299 1 306 1 359 1 361 4 108 1 312 2 116 1 115 2 166 2 365 2 316 4 366 2 73 4 264 1 74 1 123 1 32 1 126 1 128 1 372 1 39 1 375 1 275 1 178 1 
83 1 135 1 49 2 4 1 330 2 140 1 139 1 52 1 142 1 236 1 7 3 8 5 336 1 54 2 238 1 95 1 239 2 97 1 56 1 100 1 101 2 299 1 21 2 306 1 359 1 361 4 108 1 312 2 162 1 115 2 116 1 68 2 166 2 365 2 316 5 73 6 31 1 264 1 74 1 123 1 75 2 32 1 126 1 128 1 129 2 372 1 76 1 222 2 223 2 39 1 375 1 227 1 275 1 178 2 276 1 
54 1 95 1 264 1 74 1 83 1 361 2 32 1 108 1 126 1 372 1 139 1 140 1 100 1 91 1 39 1 316 3 236 1 7 1 8 3 299 1 275 1 73 2 
95 1 264 1 74 1 83 1 361 3 32 1 108 1 126 1 128 1 372 1 139 1 140 1 100 1 101 1 91 1 365 1 39 1 316 3 236 1 7 1 8 3 299 1 275 1 73 1 
83 1 361 3 108 1 312 1 140 1 139 1 91 1 365 1 236 1 316 3 7 1 8 3 73 2 54 1 74 1 264 1 95 1 32 1 126 1 128 1 372 1 100 1 101 1 39 1 299 1 275 1 
83 1 135 1 88 1 49 2 139 1 140 1 52 1 91 1 236 1 237 1 8 5 7 3 54 4 95 1 239 1 100 1 101 5 299 1 306 1 359 1 361 6 108 1 312 4 112 1 116 1 166 2 259 1 365 4 316 5 73 7 264 1 74 1 32 1 126 1 128 5 217 1 372 1 129 2 222 2 223 2 39 1 375 1 275 1 178 1 
83 1 135 1 49 2 139 1 140 1 52 1 236 1 8 4 7 2 54 2 95 1 239 1 100 1 101 2 299 1 306 1 359 1 361 4 108 1 312 2 116 1 115 2 166 2 365 2 316 4 73 4 264 1 74 1 123 1 32 1 126 1 128 1 372 1 129 2 222 2 223 2 39 1 375 1 275 1 178 1 
306 1 359 1 83 1 135 1 361 4 108 1 312 2 49 2 112 1 116 1 140 1 139 1 166 2 52 1 259 1 365 2 236 1 316 4 7 2 8 4 73 4 54 2 74 1 264 1 95 1 239 1 32 1 126 1 128 1 217 1 129 2 372 1 100 1 101 1 222 2 223 2 39 1 375 1 299 1 275 1 178 1 
306 1 359 1 83 1 135 1 361 4 108 1 312 2 49 2 112 1 116 1 140 1 139 1 166 2 52 1 259 1 365 2 236 1 316 4 7 2 8 4 73 4 54 2 74 1 264 1 95 1 239 1 32 1 126 1 128 1 217 1 129 2 372 1 100 1 101 1 222 2 223 2 39 1 375 1 299 1 275 1 178 1 
306 1 359 1 83 1 361 4 108 1 311 1 312 2 49 2 115 2 116 1 140 1 139 1 285 2 166 2 52 1 365 2 236 1 316 4 7 2 8 4 190 1 366 2 73 4 54 2 74 1 264 1 95 1 239 1 32 1 126 1 346 1 128 1 217 1 372 1 100 1 101 1 39 1 375 1 299 1 275 1 178 1 
202 2 228 1 203 1 136 6 282 1 45 1 46 1 206 1 114 2 113 1 25 2 257 1 26 1 286 1 28 3 11 3 194 1 122 1 195 1 151 1 240 1 373 1 323 1 79 1 156 2 302 1 
202 4 105 1 203 1 84 1 136 14 282 2 45 1 46 4 110 1 313 1 114 1 25 2 26 2 146 1 28 8 262 1 11 6 122 11 195 11 215 1 243 1 350 3 373 2 323 2 176 1 294 1 37 2 225 1 79 2 156 1 248 3 22 2 302 2 
202 2 84 1 83 2 309 1 136 2 252 1 282 1 45 1 46 1 108 1 87 1 110 1 4 1 183 1 330 1 68 1 26 1 187 1 28 1 336 1 31 1 11 1 367 1 75 1 371 1 242 1 243 1 372 2 373 1 38 1 79 1 156 1 247 1 325 1 227 1 21 1 58 1 302 1 
228 1 278 2 83 3 84 1 136 20 282 3 45 3 46 7 4 2 183 2 330 3 187 1 335 2 336 2 11 10 149 2 194 1 195 7 96 1 151 1 240 1 243 1 156 2 247 1 21 3 58 1 22 2 302 3 202 6 203 3 309 2 108 1 206 1 110 1 113 1 114 4 68 1 25 8 26 3 260 2 28 10 262 4 31 2 75 3 367 2 122 7 215 2 371 2 219 2 372 3 175 1 373 3 323 3 37 2 79 3 325 1 227 2 379 1 380 1 
279 1 83 1 180 1 136 2 282 2 45 2 4 3 330 7 186 1 187 1 336 4 11 1 10 1 193 1 14 2 96 1 243 1 198 1 247 1 21 7 302 2 202 4 357 1 358 1 309 1 108 1 110 1 162 1 68 2 257 1 26 2 364 1 318 1 28 1 31 4 75 6 372 1 76 1 373 2 79 2 325 1 273 1 227 3 
202 2 203 1 84 1 83 1 136 3 282 1 45 1 46 1 108 1 114 1 25 1 26 1 314 1 187 1 28 1 11 2 122 1 195 1 215 1 241 1 372 1 35 1 373 1 323 1 37 1 79 1 247 1 22 1 302 1 
262 1 202 2 136 2 122 1 282 1 195 1 45 1 46 1 25 1 257 1 220 1 373 1 26 1 323 1 79 1 22 1 28 2 302 1 
202 2 203 1 11 2 136 2 122 1 282 1 195 1 45 1 46 1 215 1 114 1 25 1 257 1 373 1 26 1 79 1 134 1 302 1 
202 2 203 1 136 4 282 1 45 1 46 2 114 1 25 2 257 1 26 1 28 2 262 1 11 2 122 2 195 2 215 1 323 1 373 1 37 1 79 1 22 1 302 1 
262 1 202 2 136 2 122 1 282 1 195 1 45 1 46 1 25 1 220 1 373 1 26 1 323 1 364 1 79 1 22 1 28 2 302 1 
202 2 203 1 11 2 136 2 122 1 282 1 195 1 45 1 46 1 215 1 114 1 25 1 373 1 26 1 364 1 79 1 134 1 302 1 
202 2 203 1 136 4 282 1 45 1 46 2 114 1 25 2 26 1 364 1 28 2 262 1 11 2 122 2 195 2 215 1 323 1 373 1 37 1 79 1 22 1 302 1 
202 2 203 1 136 4 282 1 45 1 46 2 114 1 25 2 26 1 28 2 262 1 11 2 122 2 195 2 215 1 323 1 373 1 37 1 79 1 22 1 302 1 
202 2 83 1 136 2 309 1 282 1 45 1 110 1 4 1 183 1 330 1 68 1 26 1 28 1 336 1 31 1 11 1 367 1 75 1 371 1 219 1 243 1 372 1 373 1 79 1 156 1 227 1 21 1 302 1 
202 2 83 1 136 2 309 1 282 1 45 1 110 1 4 1 330 1 68 1 26 1 28 1 336 1 31 1 11 1 367 1 75 1 243 1 372 1 373 1 295 1 19 1 79 1 156 1 227 1 21 1 302 1 249 1 
202 2 203 1 84 1 136 4 282 1 45 1 46 2 114 1 25 2 26 1 28 2 262 1 11 2 122 2 195 2 215 1 323 1 373 1 37 1 79 1 22 1 302 1 
202 2 203 1 278 1 83 1 136 4 309 1 282 1 45 1 46 2 4 1 183 1 114 1 330 1 25 2 51 1 26 1 28 2 336 1 262 1 31 1 11 2 122 2 367 1 75 1 195 2 215 1 371 1 219 1 372 1 323 1 373 1 37 1 79 1 21 1 227 1 22 1 302 1 
202 2 203 1 84 1 83 1 136 3 282 1 253 1 45 1 108 1 46 1 25 1 26 1 314 1 187 1 28 2 262 1 11 1 122 1 195 1 215 1 241 1 372 1 373 1 323 1 37 1 79 1 247 1 22 1 302 1 
202 6 81 1 228 1 203 5 136 41 1 1 282 3 85 1 160 1 206 1 113 1 114 4 232 1 25 8 26 3 27 1 146 1 72 1 28 20 191 1 262 4 11 21 120 1 194 1 344 4 151 1 345 2 240 1 215 4 127 1 196 1 351 1 350 4 323 5 155 1 294 3 37 4 78 1 79 3 248 3 377 1 22 4 302 3 
202 8 81 1 228 1 203 4 136 38 1 1 282 4 85 2 160 1 206 1 113 1 114 4 232 1 25 7 26 4 27 1 146 1 72 1 28 20 191 1 262 3 11 18 120 1 194 1 344 4 151 1 345 2 240 1 215 3 127 1 196 1 351 1 350 4 323 5 155 1 294 3 37 4 78 1 79 4 248 3 377 1 22 4 302 4 
202 4 81 1 228 1 203 8 136 52 1 1 282 2 85 1 160 1 206 1 313 2 113 1 114 7 232 1 25 14 26 2 27 1 146 2 28 27 191 1 262 7 11 25 120 1 194 1 344 4 151 1 345 1 240 1 215 7 196 1 351 1 350 4 323 8 155 1 294 2 37 7 78 1 79 2 248 4 377 1 22 7 302 2 
202 4 81 2 203 3 136 19 1 1 282 2 114 3 25 6 26 2 27 1 146 1 28 9 30 1 262 3 11 10 344 2 345 1 215 3 127 1 196 1 350 2 323 3 294 1 37 3 78 1 79 2 248 1 377 1 22 3 302 2 
202 6 81 1 203 2 136 26 1 1 282 3 85 2 160 1 114 2 25 4 232 1 26 3 27 2 28 14 191 1 262 2 11 12 120 1 344 4 345 2 215 2 196 1 351 1 350 2 323 3 155 1 294 2 37 3 78 1 79 3 248 2 377 1 22 3 302 3 
106 1 305 1 341 1 71 1 53 1 64 1 33 1 370 1 230 1 104 1 
152 1 303 1 
341 1 150 1 144 1 71 1 53 1 64 1 370 1 161 1 104 1 
283 1 362 1 
98 1 251 1 355 1 
304 1 106 1 305 1 341 1 310 1 343 1 64 1 33 1 370 1 331 2 153 1 101 1 199 1 316 1 53 1 71 1 8 1 104 1 
304 1 106 1 305 1 341 1 310 1 343 1 64 1 33 1 370 1 331 2 153 1 101 1 199 1 316 1 53 1 71 1 8 1 104 1 
304 1 106 1 305 1 341 1 310 1 343 1 64 1 33 1 370 1 331 2 153 1 101 1 199 1 316 1 53 1 71 1 8 1 104 1 
98 1 283 1 362 1 
98 1 283 1 362 1 
251 1 355 1 
98 1 251 1 355 1 
6 1 41 1 
304 1 83 2 137 1 64 1 108 2 331 1 332 1 316 1 71 1 53 1 6 1 8 1 187 2 189 1 341 1 13 1 343 1 370 1 268 1 15 1 372 2 152 1 156 1 247 2 104 1 303 1 41 1 
202 2 59 1 82 1 358 1 107 1 180 1 84 1 83 2 136 2 282 1 45 1 108 2 110 1 4 1 330 2 26 1 28 1 336 1 192 1 31 1 11 1 14 2 75 2 348 1 243 1 372 2 373 1 79 1 227 1 21 2 302 1 
148 2 75 2 96 1 204 1 205 1 255 1 50 1 4 1 330 2 197 1 51 1 324 1 133 1 40 1 261 1 21 2 336 1 200 1 356 1 
148 2 75 1 96 1 204 1 205 1 255 1 4 1 330 1 197 1 324 1 246 1 40 1 261 1 21 1 200 1 356 1 336 1 
31 1 280 1 75 1 162 1 4 1 330 1 68 1 76 1 293 1 133 1 227 1 21 1 336 1 200 1 
148 2 75 1 96 1 204 1 205 1 255 1 50 1 4 1 330 1 197 1 324 1 133 1 40 1 261 1 21 1 336 1 200 1 356 1 
141 1 
202 2 83 3 136 1 309 1 282 1 45 1 108 2 4 1 183 1 330 1 68 1 26 1 234 1 187 2 336 1 31 1 11 1 75 1 367 1 369 1 371 1 241 2 243 1 219 1 372 3 373 1 79 1 156 1 247 2 21 1 227 1 302 1 
238 1 228 1 306 1 359 1 239 2 97 1 128 2 115 4 207 2 116 1 52 1 222 2 101 4 298 2 178 1 
101 1 239 1 286 1 171 1 353 1 178 1 128 1 
306 1 359 1 135 1 116 1 115 1 52 1 316 1 7 1 8 1 73 1 239 1 128 1 129 1 222 1 101 2 223 1 178 1 
229 1 4 3 182 2 330 3 139 2 51 1 52 4 8 5 7 3 336 4 238 1 149 2 239 8 97 2 101 8 298 6 353 1 20 2 21 3 22 2 306 4 203 2 359 4 309 3 23 2 116 4 68 1 256 1 207 6 115 12 70 1 69 2 117 2 316 5 317 2 73 5 31 10 170 2 75 3 171 1 266 1 321 2 215 2 128 2 34 3 173 1 323 2 221 2 222 6 37 2 227 3 378 2 178 9 80 1 
306 2 203 2 159 1 359 2 23 1 160 1 115 6 207 5 232 1 116 2 52 2 316 1 8 1 7 1 191 1 73 1 238 1 120 1 239 5 215 2 97 1 128 2 351 1 350 1 323 2 221 2 294 1 222 3 101 5 37 2 298 5 248 1 327 1 178 8 22 2 
306 1 203 1 359 1 83 1 23 1 44 1 108 1 206 1 113 1 116 1 52 1 259 1 234 1 316 1 334 1 8 1 187 1 340 1 239 2 151 1 241 1 372 1 323 2 221 2 39 1 247 1 178 2 277 1 
306 1 359 1 239 1 171 1 128 1 116 1 52 1 101 1 353 1 178 1 
203 2 149 1 23 1 239 5 215 2 207 5 115 10 323 2 221 2 37 2 222 5 101 5 298 5 22 2 178 5 
101 1 316 1 8 1 7 1 128 1 73 1 
306 1 359 2 2 1 229 2 162 1 4 1 330 4 116 2 68 2 70 1 52 2 142 1 316 3 145 1 7 2 8 3 336 1 73 4 238 2 31 1 239 2 75 4 97 2 56 1 76 1 224 1 227 1 21 4 178 2 
341 1 71 1 231 1 
341 1 71 1 231 1 
106 1 341 1 209 1 6 1 71 1 
341 1 71 1 231 1 
341 1 57 1 71 1 
341 1 57 1 71 1 
341 1 57 1 71 1 
341 1 71 1 
53 1 104 1 
262 1 202 4 228 1 203 1 11 4 136 8 282 2 194 1 85 1 151 1 240 1 206 1 113 1 114 2 25 3 323 1 26 2 79 2 28 4 302 2 
228 1 11 3 203 1 136 6 194 1 151 1 240 1 206 1 114 2 113 1 25 2 323 1 286 1 28 3 
202 2 262 1 11 2 203 1 136 4 282 1 215 1 114 1 25 2 26 1 323 1 37 1 79 1 287 1 22 1 28 2 302 1 
262 1 203 1 11 4 136 7 215 1 114 1 25 2 350 2 323 1 294 1 37 1 248 1 146 1 28 3 22 1 
202 4 228 1 203 3 136 23 282 2 85 2 206 2 313 1 113 1 114 5 25 9 26 2 146 1 28 11 262 4 11 12 194 1 124 1 151 2 240 1 215 2 323 3 350 2 176 1 37 2 79 2 248 2 22 2 302 2 
11 1 350 1 136 1 
136 1 248 1 28 1 
202 2 262 1 11 3 203 1 149 1 136 6 282 1 215 1 114 2 25 3 26 1 323 1 37 1 79 1 287 1 22 1 28 3 302 1 
202 2 203 2 136 12 282 1 160 1 114 1 232 1 25 2 26 1 28 6 191 1 262 1 11 6 120 1 215 2 350 1 323 2 351 1 294 1 37 2 79 1 248 1 377 1 22 2 302 1 
262 1 203 1 11 3 136 6 151 1 206 1 113 1 114 1 25 2 323 1 28 3 
262 1 202 2 11 2 136 3 282 1 194 1 85 1 124 1 151 1 206 1 240 1 114 1 25 2 26 1 79 1 28 1 302 1 
202 2 228 1 203 1 136 8 282 1 206 1 114 2 113 1 232 1 25 2 26 1 28 4 11 4 194 1 151 1 240 1 323 1 350 1 294 1 79 1 248 1 377 1 302 1 
202 4 228 1 203 1 136 11 282 2 206 1 113 1 114 2 232 1 25 3 26 2 146 1 287 1 28 6 262 1 11 5 194 1 151 1 240 1 350 2 323 2 294 1 37 1 79 2 248 1 377 1 22 1 302 2 
202 6 228 1 203 3 136 19 282 3 85 1 160 1 206 1 113 1 114 3 232 1 25 4 26 3 287 1 28 9 191 1 262 1 11 10 120 1 194 1 151 1 240 1 215 2 351 1 350 1 323 3 294 1 37 2 79 3 248 1 377 1 22 2 302 3 
202 6 228 1 203 2 136 17 282 3 85 1 160 1 206 1 113 1 114 3 232 1 25 5 26 3 287 1 28 10 191 1 262 2 11 7 120 1 194 1 151 1 240 1 215 1 350 1 323 3 351 1 294 1 37 2 79 3 248 1 377 1 22 2 302 3 
202 2 228 1 203 1 136 8 282 1 206 1 114 2 113 1 232 1 25 2 26 1 28 4 11 4 194 1 151 1 240 1 323 1 350 1 294 1 79 1 248 1 377 1 302 1 
202 2 203 2 136 12 282 1 160 1 114 1 232 1 25 2 26 1 28 6 191 1 262 1 11 6 120 1 215 2 350 1 323 2 351 1 294 1 37 2 79 1 248 1 377 1 22 2 302 1 
202 8 228 1 203 2 136 18 282 4 85 2 160 1 206 1 113 1 114 3 232 1 25 5 26 4 287 1 28 10 191 1 262 2 11 8 120 1 194 1 151 1 240 1 215 1 351 1 350 1 323 3 294 1 37 2 79 4 248 1 377 1 22 2 302 4 
202 8 203 2 136 16 282 4 85 2 160 1 114 3 232 1 25 6 26 4 28 9 191 1 262 3 11 7 120 1 215 2 127 1 351 1 350 1 323 3 294 1 37 3 79 4 248 1 377 1 22 3 302 4 
262 3 11 4 203 1 136 7 194 1 151 3 240 2 206 3 114 3 113 1 25 6 323 1 28 3 
202 8 228 1 203 2 136 18 282 4 85 2 160 1 206 1 113 1 114 3 232 1 25 4 26 4 28 10 191 1 262 1 11 8 120 1 194 1 151 1 240 1 215 1 127 1 351 1 350 1 323 3 294 1 37 2 79 4 248 1 377 1 22 2 302 4 
202 2 262 2 11 5 203 2 44 1 136 10 282 1 151 2 206 2 114 3 113 1 25 5 26 1 323 2 79 1 377 1 28 5 302 1 
202 2 262 1 136 2 282 1 25 1 26 1 323 1 79 1 377 1 22 1 28 2 302 1 
202 2 262 1 11 2 203 1 136 4 282 1 215 1 114 1 25 2 26 1 323 1 37 1 79 1 377 1 22 1 28 2 302 1 
202 6 262 1 11 2 136 3 282 3 85 1 124 1 151 1 206 1 127 1 114 1 25 2 26 3 79 3 377 1 28 1 302 3 
202 10 228 1 203 5 136 34 282 5 85 2 109 1 206 3 113 2 114 7 25 12 26 5 146 1 287 1 28 16 262 5 11 18 194 1 265 1 124 1 151 3 240 1 215 3 127 1 174 1 350 4 323 5 294 1 37 3 79 5 248 3 377 1 22 3 302 5 
372 1 349 1 165 1 83 1 156 1 108 1 299 1 
320 1 83 1 43 1 328 1 3 1 108 1 184 1 372 1 349 1 165 1 156 1 299 1 
68 1 31 1 76 1 286 1 75 1 227 1 21 1 162 1 4 1 336 1 330 1 
31 1 83 2 309 1 367 1 75 1 108 1 4 1 183 1 330 1 372 2 68 1 156 1 247 1 325 1 187 1 227 1 21 1 336 1 
83 2 309 2 108 2 229 1 4 1 183 1 330 1 69 1 187 2 336 1 31 3 95 1 75 1 367 1 126 1 372 2 39 1 156 1 247 1 325 1 20 1 21 1 227 2 
83 2 309 2 108 2 229 1 4 1 330 2 69 1 187 2 29 1 336 1 31 3 95 1 75 2 367 1 126 1 372 2 39 1 156 1 247 1 325 1 20 1 21 2 227 2 249 1 
309 1 229 1 4 1 330 3 68 1 69 1 139 1 233 1 316 2 8 2 29 1 336 1 73 1 31 4 75 3 125 1 321 1 34 1 128 1 101 1 20 1 21 3 227 1 
31 4 309 1 75 3 321 1 229 1 4 1 128 1 34 1 330 3 68 1 139 1 69 1 101 1 316 2 20 1 8 2 317 1 227 1 21 3 29 1 336 1 73 1 
198 1 75 1 21 1 4 1 336 1 330 1 
357 1 180 1 309 1 4 2 330 6 68 2 186 1 318 1 336 3 31 3 193 1 14 1 75 5 96 1 173 1 198 1 273 1 227 2 21 6 301 1 
228 1 278 1 83 2 84 1 136 6 282 2 45 2 46 1 4 1 183 1 330 1 51 1 187 1 336 1 11 3 194 1 195 1 151 1 240 1 247 1 156 2 21 1 302 2 202 4 59 1 203 1 309 1 108 1 206 1 114 2 113 1 25 2 26 2 260 1 28 3 31 1 75 1 367 1 122 1 371 1 219 1 372 2 373 2 323 1 79 2 325 1 227 1 
306 2 359 2 182 1 330 1 68 1 116 2 70 1 139 1 52 2 316 3 8 3 317 1 7 1 189 1 73 2 31 2 239 1 75 1 170 1 171 1 321 1 128 1 34 1 101 1 353 1 21 1 378 1 178 1 
31 2 309 1 75 2 321 1 4 1 330 2 173 1 256 1 51 1 198 1 21 2 227 1 336 2 
31 1 75 4 162 1 4 1 330 4 68 1 269 1 76 1 51 1 21 4 227 1 29 1 336 1 
31 1 279 1 10 1 309 1 193 1 75 2 229 1 4 1 330 2 21 2 227 1 318 1 379 1 336 2 
68 1 148 1 75 1 40 1 255 1 261 1 21 1 4 1 336 1 330 1 
31 1 51 1 180 1 75 2 96 1 227 1 21 2 4 1 336 1 348 1 330 2 
31 3 180 1 75 4 229 1 162 1 4 2 330 5 68 1 269 1 76 1 51 1 186 1 273 1 21 5 227 2 336 2 
31 3 180 1 75 4 229 1 162 1 4 2 330 5 68 1 269 1 76 1 51 1 36 1 186 1 21 5 227 2 336 2 
31 1 83 2 309 1 367 1 75 1 108 1 4 1 330 1 372 2 68 1 156 1 247 1 325 1 187 1 227 1 21 1 336 1 249 1 
31 1 309 1 193 1 75 1 229 1 4 1 330 1 173 1 21 1 227 1 318 1 301 1 336 2 
5 1 290 1 156 1 376 1 381 1 
95 1 290 2 48 1 126 1 128 1 139 1 272 1 5 2 101 1 77 1 39 1 316 2 156 1 376 1 8 2 189 1 354 1 275 1 381 2 
372 1 82 1 107 1 290 1 83 1 108 1 376 1 192 1 381 1 
272 1 376 1 48 1 
12 1 61 1 172 1 284 1 99 1 16 3 167 1 210 3 296 1 103 1 147 1 
235 1 274 1 103 1 67 1 
61 1 103 1 
167 1 286 1 61 1 103 1 
99 1 167 1 16 1 210 1 296 1 61 1 103 1 
164 1 16 1 154 1 
250 1 12 1 61 1 172 2 99 1 16 3 167 1 18 1 210 3 296 1 157 1 103 1 
99 1 167 1 16 2 210 2 296 1 61 1 103 1 147 1 92 1 
148 1 12 1 205 1 255 1 67 1 99 1 16 1 210 1 296 1 103 1 201 1 
99 1 16 1 210 1 12 1 296 1 61 1 103 1 
99 1 167 1 16 1 210 1 12 1 296 1 61 2 
99 2 16 2 210 2 12 1 296 2 61 1 368 1 103 1 289 1 216 1 
12 1 61 1 67 1 284 1 99 1 167 1 16 3 210 3 296 1 235 1 102 1 103 2 147 2 
148 2 12 1 61 1 138 1 205 1 255 1 197 1 99 1 167 1 16 2 210 2 296 1 103 1 261 1 147 1 
12 1 61 1 67 1 99 2 167 1 16 4 210 4 296 2 235 1 103 2 147 2 179 1 92 1 
99 1 167 1 16 1 210 1 12 1 296 1 61 1 103 1 
250 1 61 2 172 1 67 1 99 1 167 2 16 4 210 4 296 1 235 1 157 1 274 1 103 3 147 2 
292 1 94 1 99 1 167 1 16 2 210 2 12 1 296 1 61 1 103 1 147 1 168 1 
250 2 12 1 61 1 363 1 172 2 99 1 16 3 167 1 210 3 296 1 157 1 103 1 
188 1 103 2 291 2 339 1 
99 1 130 1 16 1 210 1 12 1 296 1 
284 1 99 1 167 1 16 2 210 2 12 1 296 1 61 1 103 1 147 1 
86 1 
99 1 167 1 16 1 210 1 12 1 296 1 61 1 103 1 

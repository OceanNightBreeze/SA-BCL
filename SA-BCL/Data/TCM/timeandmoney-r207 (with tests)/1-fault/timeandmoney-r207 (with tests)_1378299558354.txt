#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 313 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
273 1 20 2 159 2 179 1 124 2 232 1 72 4 343 1 6 3 284 1 54 6 256 1 257 9 346 1 163 9 329 2 133 1 331 1 332 1 316 1 227 5 63 2 203 1 66 1 270 2 246 1 151 2 94 1 
273 1 20 2 159 2 179 1 124 2 232 1 72 4 343 1 6 3 284 1 54 6 256 1 257 9 346 1 163 9 329 2 133 1 331 1 332 1 316 1 227 5 63 2 203 1 66 1 270 2 246 1 151 2 94 1 
273 1 20 2 159 2 179 1 124 2 232 1 72 5 343 1 6 4 284 1 54 7 256 1 257 10 346 1 163 10 329 2 133 1 331 1 332 1 316 1 227 6 63 2 203 1 66 1 270 2 246 1 151 2 94 1 
273 1 20 2 159 2 179 1 124 2 232 1 72 3 343 1 6 2 284 1 54 4 256 1 257 7 346 1 163 7 329 2 133 1 331 1 332 1 316 1 227 4 63 1 203 1 66 1 270 2 151 2 94 1 
346 1 20 1 163 4 329 1 124 1 232 1 331 1 72 2 343 1 227 3 6 1 63 2 54 3 66 1 270 1 246 1 151 1 257 4 
346 1 273 1 296 1 20 1 163 2 159 1 124 1 331 1 316 1 227 1 66 1 270 1 326 1 151 1 257 2 286 1 
346 1 20 2 163 3 159 1 331 1 72 1 227 2 6 1 203 1 54 1 66 1 270 2 257 3 
122 1 20 2 159 1 124 1 232 1 72 4 343 1 6 3 284 1 54 7 257 9 81 1 346 1 163 9 329 1 133 1 331 1 227 5 63 2 203 1 66 1 270 2 246 1 151 1 
122 1 20 2 159 1 124 1 232 1 72 4 343 1 6 3 284 1 54 7 257 9 81 1 346 1 163 9 329 1 133 1 331 1 227 5 63 2 203 1 66 1 270 2 246 1 151 1 
287 1 242 1 2 1 
287 1 79 1 206 2 
137 2 312 1 269 1 293 2 87 2 55 2 230 2 308 2 
321 1 275 1 322 1 340 1 178 1 210 1 3 2 215 1 187 1 235 2 131 1 55 2 308 2 310 1 328 1 259 1 312 1 243 1 87 3 166 1 39 1 88 1 137 2 200 1 114 2 352 1 353 1 269 1 293 2 202 1 90 1 147 1 230 3 174 1 19 1 207 2 248 2 
137 1 162 1 195 1 312 1 293 1 87 1 55 1 113 1 230 1 308 1 
287 1 242 1 222 1 197 1 99 1 87 1 23 1 234 1 253 1 113 1 28 1 55 1 230 1 190 1 
287 1 242 1 197 2 222 1 99 1 87 1 234 2 253 1 113 1 137 1 28 1 293 1 55 1 230 1 308 1 
197 1 71 1 8 1 80 1 234 1 
287 1 242 1 197 2 263 1 8 1 80 1 234 2 26 1 
197 1 80 1 234 1 
195 1 312 1 1 1 197 1 87 1 234 1 113 1 137 1 162 1 293 1 8 1 55 1 230 1 308 1 
287 1 
267 1 287 1 242 1 197 2 8 1 80 1 234 2 26 1 
287 1 242 1 36 2 197 5 244 1 38 1 234 5 26 1 106 1 266 1 245 1 125 1 127 2 43 1 356 1 236 2 8 2 80 2 68 1 
269 1 2 1 
87 2 60 1 280 1 137 1 293 1 269 2 55 2 230 2 308 1 
373 1 170 1 271 1 
259 1 328 1 321 1 178 1 87 1 88 1 282 1 215 1 200 1 269 1 202 1 235 1 90 1 230 1 207 1 248 1 
137 1 269 1 293 3 87 3 55 3 224 1 230 3 308 3 
195 1 293 1 87 1 55 1 113 1 230 1 308 1 
137 1 293 1 87 1 55 1 60 1 113 1 230 1 280 1 308 1 
321 1 275 1 322 1 178 1 99 1 3 1 234 1 253 1 53 1 28 1 215 1 304 1 187 1 235 1 55 3 308 3 310 1 328 1 259 1 192 1 312 1 222 1 197 1 243 1 87 4 166 1 224 1 39 1 60 1 113 1 88 1 137 2 200 1 114 2 353 1 269 1 202 1 293 3 90 1 147 1 230 4 174 1 207 1 248 1 
269 1 293 1 87 2 55 2 224 1 23 1 230 2 264 1 308 1 
192 1 287 1 197 1 222 1 99 1 87 3 224 2 60 1 234 1 113 1 253 1 137 1 28 1 304 1 293 3 55 3 230 3 319 1 308 3 
87 2 224 1 60 1 137 1 293 2 170 1 55 2 271 1 230 2 308 2 
259 1 328 1 321 1 178 1 87 1 88 1 215 1 200 1 269 1 202 1 235 1 90 1 230 1 207 1 248 1 
259 1 328 1 321 1 178 1 87 1 88 1 377 1 200 1 269 1 235 1 90 1 230 1 307 1 207 1 248 1 
322 1 70 1 3 4 360 1 5 1 254 1 217 1 130 1 218 1 187 2 310 1 132 1 373 2 166 1 223 1 39 1 16 1 114 2 353 1 147 1 170 2 271 2 175 1 19 2 
28 1 293 1 87 1 55 1 113 1 230 1 213 1 308 1 
328 1 259 1 321 1 192 1 178 1 87 2 224 1 88 1 200 1 215 1 293 1 202 1 235 1 90 1 55 1 271 1 230 2 308 1 207 1 248 1 
192 1 87 5 134 1 224 2 23 1 60 1 264 1 137 1 293 4 269 1 55 5 357 1 230 5 308 4 
195 1 293 2 87 2 55 2 213 1 113 1 230 2 308 2 
249 1 370 1 
249 1 370 1 
279 1 105 1 
279 1 105 1 
279 1 105 1 
249 1 370 1 182 1 
249 1 370 1 182 1 
249 1 370 1 67 1 
249 2 370 2 64 1 372 1 279 1 105 1 
249 1 370 1 182 1 
249 1 370 1 157 1 
249 1 370 1 157 1 
249 1 370 1 157 1 
69 1 309 1 287 1 370 2 249 2 177 2 197 2 372 1 198 1 211 1 234 2 73 1 281 2 126 1 62 2 41 2 354 1 239 2 46 3 
249 1 177 1 209 1 4 1 234 1 324 1 303 1 281 1 108 1 239 1 55 2 33 1 308 2 309 1 370 1 197 1 87 2 41 1 269 1 293 2 150 1 67 1 230 2 46 1 
329 1 124 1 151 1 
124 1 151 1 326 1 
329 2 366 1 124 3 301 1 326 1 381 1 
329 1 366 1 124 2 301 1 326 1 52 1 
329 1 366 2 124 2 301 1 326 1 
0 2 209 1 276 1 4 1 22 1 234 5 26 1 324 1 106 2 5 1 127 1 79 1 236 1 8 4 80 1 83 1 287 2 36 1 242 1 197 5 349 1 223 1 38 1 265 2 16 1 138 2 140 1 43 3 44 1 175 1 205 1 206 3 
152 1 0 6 276 2 71 5 212 1 234 9 324 4 26 1 106 6 5 3 216 1 127 2 78 1 79 3 236 2 8 7 80 6 193 5 287 5 194 1 242 1 36 2 197 9 313 1 244 1 223 3 38 1 265 6 16 3 140 2 43 8 44 1 175 3 205 3 206 9 
0 2 1 1 276 1 234 3 324 1 106 2 5 1 162 1 127 1 79 2 236 1 55 1 8 2 308 1 83 1 287 3 195 1 312 1 242 1 36 1 197 3 87 1 349 1 244 1 223 1 113 1 265 2 137 1 16 1 138 1 140 1 293 1 43 3 230 1 175 1 205 1 206 4 
0 2 276 1 234 2 324 1 106 2 5 1 127 1 79 2 236 1 8 1 83 1 287 2 36 1 197 2 313 1 244 1 349 1 223 1 265 2 16 1 138 1 140 1 43 3 175 1 205 1 206 4 
17 1 2 1 88 1 
204 1 88 1 
142 1 
200 1 88 1 
17 2 328 1 200 1 325 1 299 1 88 3 
328 1 200 1 88 1 
88 1 15 1 
123 2 371 1 156 1 48 1 3 7 223 1 100 1 379 1 218 3 130 2 144 1 336 1 187 3 168 1 345 1 175 1 19 4 
123 2 371 1 156 1 48 1 3 7 223 1 100 1 379 1 218 3 130 2 144 1 336 1 187 3 168 1 345 1 175 1 19 4 
371 1 123 2 156 1 48 1 3 7 223 1 100 1 379 1 218 3 130 2 144 1 336 1 187 3 168 1 345 1 175 1 110 1 19 4 
123 3 322 1 156 1 155 1 48 5 3 31 100 2 277 1 362 1 5 3 31 1 218 10 130 5 187 15 345 2 220 4 240 3 310 1 371 1 223 4 39 1 16 3 139 1 114 2 379 1 353 1 144 2 336 2 168 1 45 1 337 1 175 4 205 3 19 16 
123 2 322 2 155 1 48 1 3 9 100 1 185 1 130 3 218 4 187 4 345 1 310 2 371 1 223 1 39 2 114 4 353 2 379 1 336 1 144 1 116 1 168 1 175 1 19 5 
20 1 321 1 250 1 159 1 124 2 54 1 235 1 326 1 367 1 257 2 346 1 259 1 163 2 329 1 85 1 331 1 13 1 14 1 315 1 136 1 40 1 227 1 292 1 66 1 270 1 151 1 95 1 381 1 248 1 207 1 
121 1 20 1 321 1 250 1 159 1 124 2 25 1 54 2 235 1 326 1 367 1 257 3 346 1 259 1 163 3 329 1 85 1 331 1 13 1 14 1 40 1 227 1 292 1 18 1 270 1 151 1 95 1 381 1 248 1 207 1 
321 1 250 1 159 1 124 2 25 1 54 2 235 1 326 1 257 2 346 1 259 1 163 2 85 1 329 1 331 1 14 1 40 1 227 1 292 1 18 1 151 1 95 1 381 1 248 1 207 1 
121 1 20 1 321 1 231 1 250 2 159 2 235 1 56 1 257 1 259 1 163 1 14 2 88 1 200 1 351 1 292 2 65 1 90 1 270 1 146 1 248 1 207 1 339 1 
20 1 321 1 250 1 159 1 124 2 235 1 326 1 367 1 257 1 259 1 163 1 329 1 85 1 13 1 14 1 136 1 40 1 292 1 18 1 66 1 270 1 151 1 95 1 381 1 248 1 207 1 
320 1 
99 1 302 1 253 1 103 2 104 1 106 2 7 1 55 1 259 1 348 1 58 2 222 1 59 2 225 4 113 1 351 1 355 2 229 1 230 1 120 2 321 1 231 1 180 1 234 5 23 1 26 3 28 1 29 1 127 1 235 2 79 2 236 1 238 1 80 6 190 1 287 2 84 1 242 1 36 1 86 1 197 5 87 1 38 1 88 1 375 1 291 2 200 1 140 1 43 2 90 2 92 2 294 1 206 2 207 2 248 2 
222 1 197 3 99 1 87 1 180 1 225 2 234 3 23 1 26 1 113 1 302 1 253 1 375 1 28 1 267 1 29 1 355 1 55 1 80 2 229 1 230 1 190 1 
99 1 180 1 23 1 234 3 253 1 302 1 26 1 28 1 29 1 55 1 80 1 190 1 287 1 242 1 197 3 222 1 87 1 225 3 113 1 375 1 267 1 229 1 230 1 120 1 
99 1 180 1 23 1 234 3 26 1 253 1 302 1 28 1 29 1 55 1 80 2 190 1 287 1 242 1 197 3 222 1 87 1 225 3 113 1 375 1 291 1 267 1 355 1 229 1 230 1 120 1 
208 1 99 1 300 1 253 1 302 1 103 2 106 1 7 1 55 1 311 1 222 1 58 2 59 2 225 6 113 1 267 1 355 4 229 1 230 1 120 4 180 1 234 5 23 1 26 3 184 1 28 1 29 1 127 1 236 1 79 2 80 7 190 1 287 5 242 5 36 1 197 5 87 1 38 1 375 1 291 4 89 1 43 1 92 2 294 1 
99 1 180 1 234 4 23 1 26 2 302 1 253 1 103 2 106 1 28 1 29 1 127 1 7 1 79 2 236 1 55 1 80 4 190 1 287 2 84 1 242 1 36 1 58 2 197 4 222 1 59 2 87 1 38 1 225 4 113 1 375 1 291 2 43 1 355 2 92 2 294 1 229 1 230 1 120 2 206 2 
99 1 180 1 23 1 234 4 26 2 253 1 302 1 103 2 184 1 106 1 28 1 29 1 7 1 127 1 79 2 236 1 55 1 80 4 190 1 311 1 287 1 242 1 36 1 58 2 197 4 222 1 59 2 87 1 225 4 38 1 113 1 375 1 291 2 89 1 43 1 355 2 92 2 294 1 229 1 230 1 120 2 
99 1 180 1 23 1 234 4 26 2 253 1 302 1 103 2 184 1 106 1 28 1 29 1 7 1 127 1 79 2 236 1 55 1 80 4 190 1 311 1 287 1 242 1 36 1 58 2 197 4 222 1 59 2 87 1 225 4 38 1 113 1 375 1 291 2 89 1 43 1 355 2 92 2 294 1 229 1 230 1 120 2 
176 1 99 1 180 1 23 1 234 4 181 1 26 2 101 1 253 1 302 1 103 2 106 1 28 1 29 1 127 1 364 2 107 2 236 1 55 1 80 4 190 1 311 1 287 1 242 1 36 1 197 4 222 1 59 2 87 1 225 4 38 1 113 1 375 1 291 2 43 1 355 2 294 1 229 1 230 1 120 2 206 2 
99 1 180 1 300 1 23 1 234 4 26 2 253 1 302 1 103 2 184 1 106 1 28 1 29 1 7 1 127 1 79 2 236 1 55 1 80 5 190 1 311 1 287 1 242 1 36 1 58 2 197 4 222 1 59 2 87 1 38 1 225 5 113 1 375 1 89 1 291 3 43 1 355 3 92 2 294 1 229 1 230 1 120 3 
99 1 180 1 300 1 23 1 234 4 26 2 253 1 302 1 103 2 184 1 106 1 28 1 29 1 7 1 127 1 79 2 236 1 55 1 80 5 190 1 311 1 287 1 242 1 36 1 58 2 197 4 222 1 59 2 87 1 38 1 225 5 113 1 375 1 89 1 291 3 43 1 355 3 92 2 294 1 229 1 230 1 120 3 
99 1 180 1 234 4 23 1 26 2 302 1 253 1 101 1 103 2 106 1 28 1 29 1 127 1 364 2 107 2 236 1 55 1 80 4 190 1 287 1 84 1 242 1 36 1 197 4 222 1 59 2 87 1 38 1 225 4 113 1 375 1 291 2 43 1 355 2 294 1 229 1 230 1 120 2 206 2 
123 1 322 1 2 1 3 6 217 1 130 2 218 2 187 3 345 1 310 1 371 1 373 1 166 1 223 1 39 1 114 2 379 1 353 1 269 2 144 1 168 1 170 1 147 1 271 1 175 1 19 3 
275 1 322 2 48 1 3 14 5 1 128 1 218 2 130 1 187 6 220 3 240 3 310 2 373 11 166 2 223 1 39 2 314 1 16 2 114 4 352 1 353 2 269 1 228 1 147 1 170 4 271 11 45 1 272 1 337 1 175 2 205 2 338 1 19 8 
321 1 275 1 322 1 178 1 3 2 361 1 282 1 215 1 235 1 187 1 55 1 308 1 328 1 259 1 310 1 192 1 87 2 166 1 224 1 39 1 88 1 200 1 317 1 114 2 353 1 352 1 269 1 202 1 293 1 90 1 170 1 147 1 272 1 118 1 230 2 248 1 207 1 19 1 
48 4 3 20 5 2 215 2 218 8 255 2 345 1 55 1 308 1 310 3 259 2 166 3 223 3 224 1 12 1 350 1 16 2 114 6 352 1 353 3 18 1 269 2 168 1 170 7 271 7 272 1 318 2 230 3 175 3 19 10 321 2 123 1 275 1 322 3 178 2 130 4 187 10 235 3 328 2 192 1 371 1 243 2 87 3 373 7 39 3 88 2 333 1 378 2 200 2 379 1 293 1 202 2 144 1 90 1 147 3 380 2 205 2 248 3 207 3 
321 2 275 1 231 1 322 2 210 2 3 2 24 1 217 1 235 8 187 1 55 1 369 1 308 1 259 2 310 2 261 1 87 1 374 1 166 2 224 1 39 2 290 1 315 1 88 3 200 2 114 4 353 2 352 1 351 1 18 1 293 1 115 1 117 1 90 2 147 2 230 1 248 8 207 7 19 1 
322 1 3 3 51 1 5 1 218 1 130 1 187 2 55 1 308 1 310 1 373 1 87 1 166 1 223 1 60 1 39 1 137 1 16 1 114 2 353 1 293 1 170 1 147 1 271 1 272 1 230 1 175 1 205 1 19 1 
310 1 132 1 322 1 48 1 373 1 3 2 166 1 39 1 16 1 114 2 217 1 353 1 218 1 170 1 147 1 271 1 175 1 19 2 
310 1 322 1 373 1 3 2 166 1 360 1 223 1 39 1 5 1 114 2 217 1 353 1 218 1 130 1 187 2 170 1 147 1 271 1 
322 1 48 1 3 4 5 1 217 1 218 2 130 1 187 2 310 1 373 2 166 1 223 1 39 1 16 1 114 2 353 1 147 1 170 2 271 2 175 1 205 1 19 2 
310 1 132 1 322 1 48 1 373 1 3 2 166 1 39 1 16 1 114 2 353 1 218 1 117 1 170 1 147 1 271 1 175 1 19 2 
310 1 322 1 373 1 3 2 166 1 360 1 223 1 39 1 5 1 114 2 353 1 218 1 130 1 117 1 187 2 170 1 147 1 271 1 
322 1 48 1 3 4 5 1 218 2 130 1 187 2 310 1 373 2 166 1 223 1 39 1 16 1 114 2 353 1 117 1 147 1 170 2 271 2 175 1 205 1 19 2 
310 1 322 1 48 1 373 2 166 1 3 4 223 1 39 1 5 1 16 1 114 2 353 1 130 1 218 2 187 2 170 2 147 1 271 2 175 1 205 1 19 2 
321 1 275 1 322 1 178 1 3 2 215 1 235 1 187 1 328 1 259 1 310 1 243 1 87 1 166 1 39 1 88 1 200 1 114 2 352 1 353 1 269 1 202 1 90 1 147 1 230 1 19 1 248 1 207 1 
321 1 97 1 275 1 322 1 178 1 3 2 235 1 187 1 307 1 328 1 259 1 310 1 87 1 166 1 39 1 88 1 377 1 200 1 114 2 352 1 353 1 269 1 90 1 147 1 230 1 19 1 248 1 207 1 
322 1 48 1 3 4 5 1 218 2 130 1 187 2 310 1 373 2 166 1 223 1 39 1 16 1 114 2 353 1 147 1 170 2 271 2 272 1 175 1 205 1 19 2 
321 1 322 1 178 1 48 1 3 4 5 1 215 1 130 1 218 2 187 2 235 1 328 1 259 1 310 1 243 1 373 2 87 1 166 1 223 1 39 1 315 1 88 1 16 1 378 1 200 1 114 2 353 1 202 1 170 2 147 1 271 2 230 1 175 1 205 1 19 2 248 1 207 1 
322 1 48 1 3 3 5 1 218 1 187 1 55 1 308 1 310 1 87 1 373 1 166 1 223 1 11 1 60 1 39 1 137 1 16 1 114 2 353 1 293 1 147 1 170 1 271 1 272 1 230 1 175 1 205 1 19 2 
322 2 47 1 358 1 48 3 3 19 102 1 185 1 5 3 283 2 130 3 218 6 187 10 220 2 240 1 34 2 310 2 288 1 330 1 223 3 39 2 167 1 16 3 114 4 353 2 148 1 45 1 337 1 175 3 205 3 19 9 
322 3 153 1 47 2 155 2 48 2 3 26 102 1 185 1 5 2 283 1 218 4 130 2 187 12 32 1 220 2 240 2 34 4 191 1 310 3 288 2 37 1 330 1 262 1 223 2 39 3 167 1 16 3 114 6 353 3 247 1 337 2 175 3 205 3 19 14 
153 1 47 2 155 1 48 4 3 41 102 1 5 4 218 8 345 1 220 4 310 3 262 1 223 5 167 1 16 4 114 6 353 3 168 1 175 5 19 20 123 1 322 3 358 1 185 1 76 1 283 1 130 4 187 21 32 1 240 3 34 4 191 1 371 1 288 1 37 1 330 1 39 3 379 1 144 1 45 1 247 1 337 3 205 4 
123 1 153 1 322 4 47 2 358 1 155 2 48 3 3 38 102 1 185 1 76 1 5 3 283 1 130 4 218 7 187 18 345 1 32 1 220 4 240 3 34 4 191 1 310 4 371 1 288 1 37 1 330 1 262 1 223 4 39 4 167 1 16 4 114 8 379 1 353 4 144 1 168 1 45 1 247 1 337 3 175 5 205 4 19 20 
123 1 153 1 322 2 47 1 155 1 48 7 3 52 102 1 185 1 5 7 283 1 130 7 218 14 187 25 345 1 32 1 220 4 240 4 34 4 191 1 310 2 371 1 288 1 37 1 330 1 262 1 223 8 39 2 167 1 16 7 114 4 379 1 353 2 144 1 168 1 228 2 45 2 247 1 337 2 175 8 205 7 19 27 
69 1 126 1 249 1 370 1 41 1 177 1 372 1 239 1 171 1 281 1 
108 1 67 1 
82 1 249 1 370 1 41 1 177 1 158 1 239 1 251 1 281 1 
69 1 309 1 287 1 370 1 249 1 177 1 197 1 372 1 198 1 234 1 73 1 281 1 126 1 62 1 41 1 354 1 239 1 46 2 
69 1 309 1 287 1 370 1 249 1 177 1 197 1 372 1 198 1 234 1 73 1 281 1 126 1 62 1 41 1 354 1 239 1 46 2 
69 1 309 1 287 1 370 1 249 1 177 1 197 1 372 1 198 1 234 1 73 1 281 1 126 1 62 1 41 1 354 1 239 1 46 2 
64 1 182 1 119 1 
64 1 182 1 119 1 
157 1 186 1 
64 1 157 1 186 1 
150 1 303 1 
249 1 177 1 209 1 4 1 234 1 324 1 303 1 281 1 108 1 8 1 239 1 55 2 33 1 308 2 241 1 370 1 197 1 87 2 62 1 41 1 269 1 293 2 354 1 150 1 67 1 230 2 46 1 
182 1 119 1 
64 1 157 1 186 1 
321 1 275 1 322 1 210 2 3 2 24 1 344 1 305 1 235 2 187 1 55 2 259 1 310 1 260 1 87 2 374 1 166 1 39 1 88 1 61 1 200 1 114 2 353 1 352 1 42 1 147 1 272 1 230 2 248 2 19 1 207 2 
259 1 321 1 347 1 329 1 85 1 250 1 124 2 315 1 199 1 18 1 235 2 151 1 326 1 173 1 95 1 381 1 367 1 207 2 248 2 
259 1 347 1 321 1 329 1 85 1 250 1 124 2 18 1 235 1 151 1 326 1 109 1 95 1 381 1 367 1 207 1 248 1 
259 1 321 1 231 1 250 1 88 1 200 1 199 1 351 1 235 1 90 1 146 1 207 1 248 1 327 1 
259 1 347 1 321 1 329 1 85 1 250 1 124 2 199 1 18 1 235 1 151 1 326 1 173 1 95 1 381 1 367 1 207 1 248 1 
295 1 
245 1 287 1 242 1 2 1 43 1 356 1 106 1 
234 1 26 1 106 1 7 1 127 1 79 1 236 1 80 1 287 2 36 1 242 1 58 1 197 1 38 1 43 1 92 1 206 1 
0 6 154 2 252 1 104 1 106 8 5 2 221 1 259 4 222 2 111 2 164 2 112 2 223 2 315 1 15 2 265 6 17 2 16 2 356 1 175 2 274 2 321 3 323 1 234 5 26 3 74 2 127 4 30 2 325 1 129 2 235 3 236 4 79 6 80 5 328 3 35 1 287 8 242 2 36 4 197 5 38 4 376 1 88 10 245 1 200 3 140 2 43 9 90 1 380 2 204 3 205 2 207 3 248 3 206 12 
274 2 0 5 153 1 160 1 234 1 26 1 104 1 106 5 5 2 127 2 236 2 79 3 306 1 220 1 80 1 240 1 191 1 287 5 36 2 242 2 37 1 197 1 112 1 262 1 223 2 38 2 265 5 16 2 140 1 43 8 247 1 337 1 175 2 205 2 206 6 
274 2 1 1 359 1 234 1 106 2 162 1 127 1 345 1 236 1 55 1 308 1 195 1 312 1 36 1 197 1 87 1 112 1 223 1 38 1 113 1 89 1 137 1 293 1 144 1 43 2 168 1 230 1 175 2 
287 1 36 1 242 1 38 1 106 1 245 1 127 1 43 1 356 1 236 1 
274 2 0 5 287 5 112 1 223 2 265 5 106 5 16 2 5 2 43 5 79 5 380 1 175 2 205 2 206 10 
287 1 242 1 197 1 234 1 80 1 26 1 
321 1 231 1 234 3 26 2 104 2 106 2 77 1 127 2 235 4 236 2 221 2 9 1 80 4 259 1 348 1 36 2 86 1 197 3 244 1 38 1 88 1 376 1 200 1 140 2 351 1 43 2 90 2 248 4 207 4 
321 1 275 1 322 1 178 1 3 1 215 1 187 1 235 1 55 2 308 2 310 1 259 1 328 1 312 1 243 1 87 3 166 1 39 1 88 1 137 2 200 1 114 2 353 1 269 1 293 2 202 1 90 1 147 1 230 3 174 1 248 1 207 1 
123 1 0 2 287 4 36 1 242 2 38 1 265 2 104 1 106 2 140 1 127 1 43 1 79 2 236 1 206 4 
41 1 177 1 161 1 
41 1 177 1 161 1 
69 1 41 1 177 1 341 1 303 1 
41 1 177 1 161 1 
41 1 177 1 91 1 
41 1 177 1 91 1 
41 1 177 1 91 1 
41 1 177 1 
249 1 370 1 
310 2 123 1 371 1 322 2 155 1 48 1 3 8 223 1 39 2 114 4 353 2 379 1 218 3 130 2 144 1 168 1 187 4 345 1 175 1 19 4 
123 1 371 1 2 1 3 6 223 1 379 1 144 1 130 2 218 2 187 3 168 1 345 1 175 1 19 3 
310 1 322 1 196 1 48 1 3 4 223 1 39 1 5 1 16 1 114 2 353 1 130 1 218 2 187 2 175 1 205 1 19 2 
48 1 3 7 223 1 5 1 16 1 130 1 218 2 187 4 220 2 45 1 240 1 337 1 175 1 205 1 19 3 
123 1 322 2 155 2 48 4 3 23 5 2 218 9 130 5 187 12 345 2 220 2 240 2 310 2 371 1 165 1 223 3 39 2 314 1 16 2 114 4 379 1 353 2 144 2 168 1 228 1 45 1 175 3 205 2 19 11 
187 1 3 1 220 1 
3 1 240 1 19 1 
310 1 322 1 196 1 48 1 3 6 223 1 39 1 16 1 5 1 114 2 353 1 218 3 130 2 187 3 380 1 175 1 205 1 19 3 
322 1 153 1 48 1 3 12 185 1 5 2 130 1 218 2 187 6 220 1 240 1 191 1 310 1 37 1 262 1 223 2 39 1 16 2 114 2 353 1 247 1 337 1 175 2 205 2 19 6 
48 1 3 6 223 1 144 1 130 1 218 2 168 1 187 3 345 1 175 1 19 3 
310 1 371 1 322 1 155 1 48 1 165 1 3 3 39 1 114 2 353 1 379 1 218 2 130 1 144 1 187 2 345 1 19 1 
310 1 322 1 48 2 3 10 359 1 223 2 39 1 185 1 114 2 353 1 144 2 130 3 218 5 187 5 168 1 345 2 175 2 19 5 
310 1 322 1 48 1 3 2 39 1 185 1 16 1 114 2 353 1 218 1 175 1 19 2 
310 1 322 1 48 1 3 4 223 1 39 1 185 1 5 1 16 1 114 2 353 1 130 1 218 2 187 2 175 1 205 1 19 2 
310 3 322 3 155 1 358 1 48 1 165 1 3 3 39 3 185 1 114 6 353 3 144 1 130 1 218 2 187 2 345 1 19 1 
123 1 322 5 155 2 358 1 48 5 3 34 277 1 185 1 362 1 5 3 218 12 130 7 187 18 345 3 220 4 240 3 310 5 371 1 196 1 165 1 223 5 39 5 16 3 139 1 114 10 379 1 353 5 144 3 168 2 45 1 337 1 175 5 205 3 19 16 
123 1 322 1 3 8 185 1 130 2 218 2 187 4 345 1 220 1 240 1 310 1 371 1 262 1 223 1 39 1 114 2 353 1 379 1 144 1 168 1 175 1 337 1 19 4 
123 1 322 2 48 1 3 11 185 1 130 2 218 3 187 5 345 1 220 2 240 1 310 2 371 1 196 1 262 1 223 1 39 2 16 1 114 4 379 1 353 2 144 1 168 1 45 1 337 1 175 2 205 1 19 6 
123 1 322 3 153 1 155 1 48 1 3 19 185 1 5 2 130 3 218 4 187 10 345 1 220 1 240 1 191 1 310 3 371 1 196 1 37 1 262 1 223 3 39 3 16 2 114 6 379 1 353 3 144 1 168 1 247 1 337 1 175 3 205 2 19 9 
123 1 322 3 153 1 155 1 48 2 3 17 185 1 5 1 130 3 218 5 187 7 345 1 220 1 240 1 191 1 310 3 371 1 196 1 37 1 262 1 223 2 39 3 16 2 114 6 379 1 353 3 144 1 168 1 247 1 337 1 175 3 205 2 19 10 
123 1 322 1 3 8 185 1 130 2 218 2 187 4 345 1 220 1 240 1 310 1 371 1 262 1 223 1 39 1 114 2 353 1 379 1 144 1 168 1 175 1 337 1 19 4 
322 1 153 1 48 1 3 12 185 1 5 2 130 1 218 2 187 6 220 1 240 1 191 1 310 1 37 1 262 1 223 2 39 1 16 2 114 2 353 1 247 1 337 1 175 2 205 2 19 6 
123 1 322 4 153 1 155 2 48 2 3 18 185 1 5 1 130 3 218 5 187 8 345 1 220 1 240 1 191 1 310 4 371 1 196 1 37 1 262 1 223 2 39 4 16 2 114 8 379 1 353 4 144 1 168 1 247 1 337 1 175 3 205 2 19 10 
322 4 153 1 358 1 155 2 48 3 3 16 185 1 5 2 130 3 218 6 187 7 220 1 240 1 191 1 310 4 37 1 262 1 223 2 39 4 16 3 114 8 353 4 247 1 337 1 175 3 205 3 19 9 
371 2 48 3 3 7 223 1 379 1 144 3 130 3 218 6 187 4 168 1 345 3 175 1 19 3 
123 1 322 4 153 1 358 1 155 2 48 1 3 18 185 1 5 1 130 3 218 4 187 8 345 1 220 1 240 1 191 1 310 4 371 1 37 1 262 1 223 2 39 4 16 2 114 8 379 1 353 4 144 1 168 1 247 1 337 1 175 3 205 2 19 10 
57 1 269 1 87 1 55 1 23 1 230 1 264 1 
57 1 98 1 87 1 23 1 289 1 214 1 264 1 363 1 269 1 365 1 55 1 230 1 
259 1 321 1 200 1 231 1 351 1 2 1 235 1 90 1 88 1 248 1 207 1 
328 1 259 1 321 1 178 1 87 2 224 1 88 1 200 1 215 1 269 1 293 1 235 1 90 1 55 1 230 2 308 1 207 1 248 1 
321 1 178 1 99 1 28 1 215 1 129 1 235 1 55 2 221 1 308 1 259 1 328 2 87 2 224 1 113 1 88 3 15 1 200 2 269 1 293 2 230 2 248 1 207 1 
321 1 178 1 99 1 342 1 28 1 129 1 235 2 55 2 221 1 308 1 259 1 328 2 87 2 224 1 113 1 88 3 15 1 377 1 200 2 269 1 293 2 230 2 248 2 207 2 
328 1 259 1 321 1 287 1 242 1 222 1 197 2 342 1 234 2 15 1 88 4 17 1 200 1 201 1 129 1 235 3 90 1 221 1 80 1 10 1 204 1 207 3 248 3 
328 1 259 1 321 1 287 1 242 1 222 1 197 2 111 1 342 1 234 2 15 1 88 4 17 1 200 1 129 1 235 3 90 1 221 1 80 1 204 1 207 3 248 3 
259 1 321 1 235 1 290 1 248 1 207 1 
328 1 259 3 321 2 261 1 210 1 374 1 290 1 315 1 88 3 200 2 141 1 18 1 325 1 115 1 235 7 90 2 93 1 369 1 258 1 207 6 248 7 
3 6 215 1 218 2 345 1 55 1 308 1 310 2 259 1 166 2 223 1 224 1 315 1 61 1 114 4 353 2 269 2 168 1 170 1 271 1 318 1 272 1 230 2 175 1 19 3 321 1 123 1 322 2 178 1 130 2 235 1 187 3 328 1 371 1 243 1 87 2 373 1 39 2 88 1 378 1 200 1 379 1 202 1 293 1 144 1 147 2 248 1 207 1 
154 1 234 3 26 1 74 1 106 1 127 2 30 1 235 1 236 2 8 1 80 2 287 1 242 1 36 2 197 3 222 1 111 1 38 2 376 1 88 2 17 1 245 1 43 1 356 1 90 1 204 1 248 1 207 1 
328 1 259 2 321 1 35 1 315 1 290 1 88 2 17 1 200 1 325 1 235 2 207 2 248 2 
259 1 321 1 200 1 231 1 351 1 235 4 90 1 342 1 149 1 88 1 315 1 248 4 207 4 
328 1 259 2 321 1 278 1 12 1 88 1 200 1 141 1 235 2 169 1 221 1 93 1 207 2 248 2 
259 1 321 1 235 1 124 1 90 1 151 1 326 1 95 1 248 1 207 1 
259 1 321 1 200 1 260 1 18 1 235 2 374 1 88 1 315 1 248 2 207 2 
259 2 321 2 231 1 261 1 374 1 315 1 88 3 200 2 351 1 235 5 115 1 90 1 149 1 221 1 207 4 248 5 
259 2 321 2 231 1 261 1 374 1 315 1 88 3 200 2 351 1 235 5 90 1 149 1 221 1 285 1 207 4 248 5 
328 1 259 1 321 1 178 1 87 2 224 1 88 1 377 1 200 1 269 1 293 1 235 1 90 1 55 1 230 2 308 1 207 1 248 1 
328 1 259 2 321 1 88 1 200 1 141 1 325 1 235 1 221 1 93 1 258 1 207 1 248 1 
334 1 305 1 42 1 87 1 219 1 55 1 230 1 50 1 344 1 
334 1 172 1 189 1 
334 1 269 1 219 1 368 1 50 1 
287 1 242 1 222 1 197 2 99 1 234 2 113 1 183 1 253 1 50 2 28 1 334 1 304 1 269 1 219 2 8 1 172 1 189 1 368 2 
346 1 227 1 2 1 331 1 
346 1 20 1 163 1 227 1 270 1 331 1 257 1 
163 1 159 1 14 1 
346 1 273 2 20 1 268 1 163 3 227 1 298 1 66 1 270 1 331 1 257 3 226 1 
346 1 20 1 163 2 227 1 63 1 54 1 270 1 331 1 257 2 
20 1 163 1 329 1 124 1 72 1 343 1 227 1 66 1 270 1 151 1 257 1 
346 1 20 1 163 1 227 1 66 1 270 1 257 1 
346 2 20 1 163 1 66 1 270 1 331 1 257 1 
346 1 20 2 163 2 135 1 27 1 227 1 143 1 66 1 270 2 257 2 
346 1 20 1 163 3 133 1 331 1 72 1 227 2 284 1 6 1 54 2 66 1 270 1 257 3 
346 1 20 1 163 2 329 1 124 2 331 1 227 1 335 1 54 1 66 1 270 1 326 1 151 1 381 1 257 2 
346 1 20 2 163 4 331 1 72 1 227 2 63 1 6 1 54 2 66 1 270 2 246 1 257 4 
346 1 20 1 163 1 227 1 66 1 270 1 331 1 257 1 
273 1 346 2 20 1 21 1 163 4 298 1 331 2 72 1 268 1 227 3 6 1 54 2 270 1 257 4 
346 1 122 1 20 1 163 2 297 1 49 1 331 1 227 1 54 1 66 1 270 1 257 2 
346 1 273 2 20 1 268 2 163 3 227 1 298 1 66 1 270 1 331 1 257 3 75 1 
227 2 145 1 188 1 96 2 
20 1 163 1 66 1 270 1 233 1 257 1 
346 1 20 1 163 2 227 1 284 1 54 1 66 1 270 1 331 1 257 2 
237 1 
346 1 20 1 163 1 227 1 66 1 270 1 331 1 257 1 
346 1 273 1 20 1 163 3 227 1 284 1 54 1 66 1 270 1 331 1 257 3 
21 1 227 1 6 1 72 1 
346 1 227 1 

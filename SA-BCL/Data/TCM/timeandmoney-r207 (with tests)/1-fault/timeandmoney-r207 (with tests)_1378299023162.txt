#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
10 3 283 2 336 1 319 1 339 1 371 1 78 2 311 1 81 1 313 2 207 1 162 3 9 1 
283 5 209 2 336 1 154 1 101 1 339 1 270 1 78 2 311 1 134 1 81 1 177 1 62 1 313 2 162 9 9 4 10 9 110 1 275 2 319 3 39 2 41 1 371 2 186 1 45 1 146 2 172 1 207 6 
283 5 209 2 336 1 154 1 101 1 339 1 270 1 78 2 311 1 134 1 81 1 177 1 62 1 313 2 162 9 9 4 10 9 110 1 275 2 319 3 39 2 41 1 371 2 186 1 45 1 146 2 172 1 207 6 
283 6 209 2 336 1 154 1 101 1 339 1 270 1 78 2 311 1 134 1 81 1 177 1 62 1 313 2 162 10 9 5 10 10 110 1 275 2 319 4 39 2 41 1 371 2 186 1 45 1 146 2 172 1 207 7 
283 4 209 1 336 1 154 1 101 1 339 1 270 1 78 2 311 1 134 1 81 1 177 1 62 1 313 2 162 7 9 3 10 7 110 1 275 2 319 2 39 2 41 1 371 2 45 1 146 2 172 1 207 4 
10 4 209 2 283 3 319 1 275 1 154 1 39 1 339 1 186 1 270 1 146 1 78 1 311 1 81 1 313 1 207 3 162 4 9 2 
10 2 283 1 88 1 275 1 338 1 101 1 339 1 371 1 45 1 146 1 46 1 78 1 311 1 81 1 313 1 162 2 
10 9 209 2 283 5 336 1 275 1 319 3 39 1 154 1 41 1 339 1 371 1 186 1 270 1 146 1 221 1 172 1 78 2 311 1 81 1 189 1 313 2 207 7 162 9 9 4 
10 9 209 2 283 5 336 1 275 1 319 3 39 1 154 1 41 1 339 1 371 1 186 1 270 1 146 1 221 1 172 1 78 2 311 1 81 1 189 1 313 2 207 7 162 9 9 4 
182 1 54 1 236 1 318 1 37 1 99 1 184 1 368 1 157 1 353 1 341 1 158 1 281 1 274 1 
244 1 
341 1 29 1 54 2 182 2 317 1 74 1 292 1 244 1 
182 5 54 5 228 1 191 1 317 1 165 1 246 1 239 1 248 2 4 1 341 2 29 1 342 2 116 1 343 1 74 2 79 2 244 1 53 1 
317 1 321 1 244 1 
254 2 244 1 301 1 
236 2 281 2 184 2 99 2 346 1 353 2 157 2 274 1 
264 1 0 1 236 2 335 1 71 1 238 1 125 1 337 1 25 1 215 1 126 1 99 2 5 1 157 2 220 1 60 2 175 1 76 1 159 2 241 1 34 2 346 1 108 1 274 1 11 1 184 3 293 1 42 1 325 1 353 3 16 2 279 1 95 1 281 2 21 1 47 1 259 2 
236 1 318 1 37 1 281 1 184 1 99 1 368 1 353 1 157 1 274 1 
182 1 54 1 317 1 1 1 193 1 203 1 357 1 99 1 184 1 368 1 353 1 106 1 244 1 149 1 
54 2 236 1 182 2 317 1 193 1 357 1 99 1 184 1 368 1 157 1 353 1 281 1 106 1 244 1 149 1 
341 1 54 1 182 1 74 1 2 1 
341 1 29 1 54 2 182 2 317 1 74 1 244 1 285 1 
54 1 182 1 74 1 
236 1 356 1 99 2 184 2 324 1 353 2 157 1 281 1 346 2 
265 1 113 1 249 1 
264 1 0 1 11 1 125 1 238 1 126 1 184 1 353 1 60 1 76 1 159 1 361 1 21 1 47 1 34 1 346 1 
321 1 346 1 
264 1 0 1 265 1 11 1 236 1 238 1 125 1 126 1 99 1 184 2 353 2 60 1 115 1 147 1 76 1 159 1 21 1 281 1 47 1 34 1 
115 1 236 3 281 3 184 3 99 3 346 1 157 1 353 3 
236 1 318 1 281 1 184 1 99 1 368 1 353 1 
236 1 356 1 281 1 184 1 99 1 368 1 324 1 353 1 157 1 
264 1 0 1 236 3 54 1 71 1 238 1 125 1 337 1 193 1 25 1 215 1 357 1 126 1 99 3 5 1 157 2 220 1 60 1 76 1 159 1 241 1 106 1 34 1 346 1 108 1 274 1 11 1 182 1 89 1 184 4 293 1 325 1 324 1 368 1 353 4 115 1 16 2 147 1 21 1 281 3 47 1 259 1 149 1 208 1 
314 1 236 1 115 1 1 1 281 1 184 2 99 2 346 1 353 2 
54 1 182 1 236 3 89 1 193 1 357 1 99 3 184 3 324 1 368 1 157 1 353 3 115 2 147 1 329 1 281 3 106 1 244 1 149 1 
236 2 265 1 99 2 184 2 249 1 324 1 157 1 353 2 115 1 281 2 
0 1 264 1 11 1 125 1 238 1 126 1 184 1 353 1 60 1 76 1 159 1 21 1 47 1 34 1 346 1 
264 1 11 1 230 1 238 1 141 1 126 1 184 1 353 1 60 1 76 1 159 1 21 1 47 1 34 1 346 1 
265 2 71 1 266 1 306 1 337 1 153 1 5 1 220 1 61 1 288 1 241 1 108 2 315 1 113 2 142 1 367 1 325 1 249 2 328 1 16 2 95 2 233 1 259 4 190 1 
236 1 193 1 281 1 184 1 99 1 3 1 368 1 353 1 
314 1 236 4 115 2 147 1 1 1 281 4 48 1 184 5 99 5 324 1 346 1 168 1 157 1 353 5 
236 2 318 1 281 2 184 2 99 2 3 1 368 1 353 2 
298 1 57 1 180 1 
304 1 355 1 298 2 359 1 22 1 180 2 
298 1 180 1 
298 1 180 1 
304 1 355 1 
304 1 355 1 
304 1 355 1 
298 1 227 1 180 1 
298 1 227 1 180 1 
298 1 227 1 180 1 
72 1 298 1 180 1 
72 1 298 1 180 1 
72 1 298 1 180 1 
365 2 182 2 54 2 64 2 65 2 40 3 320 1 155 1 359 1 219 1 148 1 298 2 331 2 133 1 105 1 176 1 244 1 260 2 180 2 
236 2 54 1 57 1 358 1 99 2 219 1 225 1 180 1 346 1 365 1 182 1 65 1 40 1 276 1 184 2 350 1 353 2 297 1 298 1 281 2 331 1 260 1 150 1 262 1 
205 2 289 1 46 1 275 2 39 1 
146 1 275 1 39 1 
146 1 46 1 275 1 
205 1 289 1 46 1 20 1 275 3 39 2 
205 1 289 1 46 1 275 2 39 1 232 1 
54 5 306 1 358 1 307 1 4 2 341 4 29 1 127 1 342 1 74 1 288 1 79 1 198 2 199 2 225 1 244 2 345 1 182 5 87 1 317 1 246 1 111 1 248 1 369 1 328 1 254 3 257 2 233 1 50 1 53 3 262 1 301 1 
54 9 239 1 306 3 2 5 307 3 100 1 4 6 341 7 29 1 127 2 342 2 272 1 197 1 74 6 288 3 79 2 199 6 225 4 244 5 345 2 182 9 317 1 139 1 246 1 248 2 323 1 326 1 328 3 254 9 257 6 233 3 96 5 50 1 53 8 301 3 
54 3 239 1 306 1 307 1 4 2 341 2 127 1 342 1 79 1 198 1 288 1 199 2 225 1 244 3 345 1 87 1 182 3 317 1 111 1 248 1 328 1 254 4 257 2 233 1 53 3 301 2 
54 4 239 1 306 2 307 2 4 4 341 3 127 1 342 1 272 1 197 1 79 1 198 2 288 2 199 4 225 2 244 4 345 1 182 4 87 1 317 1 111 1 248 1 323 1 328 2 254 7 257 4 233 2 53 5 301 3 
109 1 
264 1 321 1 204 1 
264 1 84 1 
264 1 47 1 
264 3 238 1 194 1 204 2 47 1 93 1 
264 1 238 1 47 1 
264 1 206 1 
315 2 266 3 140 1 38 2 291 1 26 1 308 1 6 1 77 1 255 1 288 1 95 4 344 1 233 1 259 7 174 1 108 3 302 1 
121 1 266 10 337 1 306 3 26 1 307 3 308 2 340 1 220 1 6 5 241 1 288 4 80 1 344 2 108 15 63 1 315 5 140 1 38 3 348 3 291 2 322 1 325 1 15 1 328 3 278 4 16 2 255 1 95 16 233 4 259 31 52 1 174 1 302 2 
266 4 267 1 337 2 308 1 220 2 6 1 288 1 241 2 80 1 344 1 108 4 315 3 140 1 38 2 291 1 325 2 16 4 255 1 299 1 95 5 233 1 259 9 174 1 302 1 
315 2 266 3 140 1 38 2 291 1 26 1 308 1 6 1 255 1 288 1 95 4 344 1 233 1 259 7 174 1 108 3 302 1 
315 2 266 3 140 1 38 2 291 1 26 1 308 1 6 1 255 1 288 1 95 4 344 1 233 1 259 7 174 1 108 3 302 1 
10 1 264 1 11 1 333 2 202 1 56 1 126 1 144 1 217 1 371 2 60 1 196 2 117 1 31 1 76 1 78 1 159 1 47 1 376 2 34 1 312 1 313 1 162 1 
10 1 11 1 333 1 124 1 275 2 39 1 126 1 295 1 371 1 60 1 196 1 146 1 46 1 30 1 296 1 78 1 159 1 20 1 311 1 300 1 34 1 376 1 313 1 162 1 282 1 69 1 
283 1 333 1 124 1 126 1 339 1 196 1 60 1 30 1 159 1 78 1 311 1 81 1 34 1 313 1 162 2 10 2 11 1 275 2 39 1 277 1 371 1 295 1 146 1 46 1 296 1 20 1 300 1 376 1 207 1 282 1 
283 1 333 1 124 1 56 1 126 1 339 1 196 1 60 1 30 1 159 1 78 1 81 1 34 1 313 1 162 3 10 3 11 1 275 2 39 1 371 1 295 1 146 1 46 1 296 1 20 1 300 1 376 1 234 1 207 2 69 1 
283 1 333 1 124 1 126 1 339 1 196 1 60 1 30 1 159 1 81 1 34 1 162 2 10 2 11 1 275 2 39 1 371 1 146 1 46 1 20 1 300 1 376 1 207 2 234 1 69 1 
374 1 
54 5 192 1 1 1 193 1 99 1 4 2 102 1 60 2 342 1 104 4 159 2 160 1 106 1 244 2 345 1 245 2 347 1 164 1 11 1 202 1 246 1 203 1 248 1 353 1 254 2 117 1 18 2 301 2 264 1 357 1 126 1 29 3 271 1 129 1 32 2 223 2 74 6 76 2 79 1 130 1 224 1 34 2 136 1 182 5 317 1 91 2 184 1 143 2 368 1 373 1 188 1 375 2 47 1 149 1 53 2 
164 1 182 3 54 3 1 1 193 1 203 1 357 1 292 1 99 1 184 1 368 1 353 1 29 1 129 1 32 1 104 2 74 2 373 1 106 1 224 1 136 1 149 1 
54 3 1 1 193 1 357 1 99 1 29 1 129 1 104 3 74 1 224 1 106 1 136 1 244 1 164 1 182 3 317 1 203 1 292 1 184 1 368 1 353 1 373 1 18 1 149 1 
54 3 1 1 193 1 357 1 99 1 29 1 129 1 104 3 32 1 223 1 74 2 224 1 106 1 136 1 244 1 164 1 182 3 317 1 203 1 292 1 184 1 368 1 353 1 373 1 18 1 149 1 
334 1 54 5 1 1 193 1 99 1 98 1 4 1 342 1 104 6 160 1 106 1 244 5 245 2 164 1 246 1 203 1 292 1 248 1 166 1 353 1 18 4 301 2 70 1 357 1 29 3 129 1 32 4 223 4 74 7 79 1 224 1 136 1 364 1 182 5 317 5 91 2 184 1 143 2 368 1 373 1 188 1 375 2 149 1 53 1 
54 4 1 1 193 1 99 1 4 1 102 1 342 1 104 4 160 1 106 1 244 2 245 2 164 1 246 1 203 1 248 1 353 1 254 2 18 2 301 2 357 1 29 2 129 1 32 2 74 4 223 2 79 1 224 1 136 1 182 4 317 1 91 2 184 1 143 2 368 1 188 1 373 1 375 2 149 1 53 1 
70 1 54 4 1 1 193 1 357 1 99 1 98 1 4 1 29 2 129 1 342 1 32 2 104 4 223 2 74 4 79 1 160 1 224 1 106 1 244 1 136 1 245 2 164 1 182 4 317 1 246 1 203 1 91 2 248 1 184 1 143 2 368 1 166 1 353 1 188 1 373 1 18 2 375 2 149 1 53 1 301 2 
70 1 54 4 1 1 193 1 357 1 99 1 98 1 4 1 29 2 129 1 342 1 32 2 104 4 223 2 74 4 79 1 160 1 224 1 106 1 244 1 136 1 245 2 164 1 182 4 317 1 246 1 203 1 91 2 248 1 184 1 143 2 368 1 166 1 353 1 188 1 373 1 18 2 375 2 149 1 53 1 301 2 
70 1 54 4 1 1 193 1 357 1 195 2 99 1 4 1 29 2 129 1 342 1 32 2 104 4 223 2 74 4 79 1 160 1 224 1 106 1 244 1 136 1 245 2 164 1 182 4 317 1 246 1 203 1 248 1 184 1 368 1 353 1 252 1 254 2 373 1 18 2 280 1 375 2 49 1 149 1 53 1 24 2 
70 1 54 4 1 1 193 1 357 1 99 1 98 1 4 1 29 2 342 1 129 1 104 5 32 3 223 3 74 5 79 1 160 1 224 1 106 1 244 1 136 1 364 1 245 2 164 1 182 4 317 1 246 1 203 1 91 2 248 1 184 1 143 2 368 1 166 1 353 1 188 1 373 1 18 3 375 2 149 1 53 1 301 2 
70 1 54 4 1 1 193 1 357 1 99 1 98 1 4 1 29 2 342 1 129 1 104 5 32 3 223 3 74 5 79 1 160 1 224 1 106 1 244 1 136 1 364 1 245 2 164 1 182 4 317 1 246 1 203 1 91 2 248 1 184 1 143 2 368 1 166 1 353 1 188 1 373 1 18 3 375 2 149 1 53 1 301 2 
54 4 1 1 193 1 357 1 195 2 99 1 4 1 102 1 29 2 129 1 342 1 32 2 104 4 223 2 74 4 79 1 160 1 224 1 106 1 244 1 136 1 245 2 164 1 182 4 317 1 246 1 203 1 248 1 184 1 368 1 353 1 254 2 373 1 18 2 375 2 49 1 149 1 53 1 24 2 
263 1 264 3 236 1 237 1 71 2 335 1 337 2 269 1 215 1 126 2 99 1 5 2 220 2 73 1 60 7 175 2 76 2 159 8 241 2 200 1 34 8 83 1 108 1 11 2 202 1 184 1 325 2 277 1 353 1 115 1 16 4 117 1 330 1 281 1 95 1 47 2 259 2 190 1 69 1 
354 1 265 1 236 1 266 1 71 1 337 1 306 1 99 1 307 1 5 1 157 1 220 1 241 1 288 1 108 2 315 1 113 1 184 1 249 1 324 1 325 1 353 1 328 1 16 2 281 1 95 1 258 1 233 1 259 3 
265 1 71 1 266 2 337 1 5 1 220 1 241 1 288 1 344 1 346 2 108 3 315 2 140 1 38 1 113 1 321 1 249 1 325 1 16 2 255 1 95 3 233 1 259 6 190 1 174 1 302 1 
354 1 265 11 335 1 266 2 71 1 337 2 306 1 58 1 215 1 307 2 27 1 5 2 220 2 6 1 241 2 288 2 226 1 346 1 108 6 315 1 63 1 113 11 348 3 325 2 249 4 15 1 328 2 278 3 16 4 95 8 233 1 259 14 151 1 
264 1 0 1 354 1 236 1 152 1 238 1 125 1 71 1 335 1 337 1 215 1 126 1 99 1 5 1 220 1 60 1 76 1 159 1 361 1 241 1 135 1 34 1 346 1 163 1 108 1 11 1 184 2 249 1 325 1 353 2 115 1 147 1 16 2 21 1 281 1 95 1 47 1 259 2 
0 2 236 1 335 1 238 2 337 3 99 1 5 3 60 3 6 4 159 3 241 3 288 3 242 2 344 1 346 2 108 10 11 2 349 1 113 7 249 7 353 3 115 1 16 6 255 1 19 2 21 2 259 20 174 1 69 1 302 1 354 1 264 2 122 1 265 7 71 3 125 2 266 8 213 2 306 2 25 2 215 1 126 2 307 2 216 1 220 3 76 1 34 3 315 4 140 1 38 1 184 3 325 3 328 2 187 2 147 1 281 1 95 10 233 3 47 2 
265 1 266 1 71 1 337 1 153 1 113 1 249 1 325 1 5 1 220 1 328 1 6 1 16 2 241 1 288 1 95 2 259 2 190 1 
315 1 265 1 266 1 71 1 337 1 306 1 113 1 367 1 249 1 325 1 5 1 220 1 16 2 241 1 233 1 259 2 190 1 108 2 
265 2 71 1 266 2 337 1 306 1 307 1 5 1 220 1 6 1 288 1 241 1 108 2 315 1 113 2 325 1 249 2 328 1 16 2 95 2 233 1 259 4 190 1 
265 1 266 1 71 1 337 1 153 1 113 1 249 1 325 1 5 1 220 1 328 1 6 1 16 2 330 1 241 1 288 1 95 2 259 2 
315 1 265 1 266 1 71 1 337 1 306 1 113 1 367 1 249 1 325 1 5 1 220 1 16 2 330 1 241 1 233 1 259 2 108 2 
265 2 71 1 266 2 337 1 306 1 307 1 5 1 220 1 6 1 288 1 241 1 108 2 315 1 113 2 325 1 249 2 328 1 16 2 330 1 95 2 233 1 259 4 
265 2 71 1 266 2 337 1 306 1 307 1 5 1 220 1 6 1 288 1 241 1 108 2 315 1 113 2 325 1 249 2 328 1 16 2 95 2 233 1 259 4 
0 1 264 1 335 1 238 1 125 1 71 1 337 1 25 1 215 1 126 1 5 1 220 1 60 1 76 1 159 1 241 1 34 1 346 1 108 1 11 1 184 1 325 1 353 1 16 2 95 1 21 1 47 1 259 2 
120 1 264 1 335 1 238 1 71 1 337 1 215 1 126 1 5 1 220 1 60 1 76 1 159 1 241 1 34 1 346 1 108 1 11 1 230 1 141 1 184 1 325 1 353 1 16 2 95 1 21 1 47 1 259 2 
354 1 265 2 71 1 266 2 337 1 306 1 307 1 5 1 220 1 6 1 288 1 241 1 108 2 315 1 113 2 325 1 249 2 328 1 16 2 95 2 233 1 259 4 
0 1 264 1 265 2 266 2 238 1 125 1 71 1 306 1 213 1 337 1 25 1 126 1 307 1 5 1 220 1 60 1 6 1 159 1 288 1 241 1 34 1 108 2 315 1 11 1 113 2 184 1 249 2 325 1 277 1 353 1 328 1 16 2 95 2 21 1 233 1 47 1 259 4 
354 1 236 1 265 1 266 1 71 1 306 1 337 1 99 1 307 1 286 1 5 1 157 1 220 1 6 1 241 1 288 1 108 1 113 1 184 1 324 1 325 1 249 1 353 1 328 1 16 2 281 1 95 2 233 1 259 3 
303 2 266 6 267 1 337 2 306 3 97 1 307 3 220 2 128 1 6 3 241 2 288 3 273 1 137 1 108 10 315 3 63 1 138 1 348 1 325 2 251 1 15 1 328 3 278 2 16 4 256 2 173 1 95 9 233 3 259 19 
303 4 266 4 305 1 267 1 337 3 306 2 307 3 220 3 103 1 6 2 241 3 288 3 273 1 80 2 363 1 137 1 108 12 315 2 138 1 112 1 348 2 43 1 325 3 251 2 15 2 328 3 278 2 16 6 256 1 173 2 95 14 233 2 118 1 259 26 
303 4 305 1 266 8 267 1 337 3 306 4 307 4 218 1 220 3 103 1 128 1 6 4 241 3 288 5 273 1 80 1 344 1 363 1 137 1 108 21 315 4 63 1 138 1 140 1 38 1 112 1 348 3 43 1 325 3 251 1 15 3 328 4 278 4 16 6 255 1 256 1 173 2 95 20 118 1 233 5 259 41 174 1 302 1 
303 4 305 1 266 7 267 1 337 4 306 3 307 4 218 1 220 4 103 1 128 1 6 3 241 4 288 5 273 1 80 2 344 1 363 1 137 1 108 18 315 4 63 1 138 1 140 1 38 1 112 1 348 3 43 1 325 4 251 1 15 3 328 4 278 4 16 8 255 1 256 1 173 2 95 20 118 1 233 4 259 38 174 1 302 1 
303 4 305 1 266 14 267 1 337 2 306 7 307 7 27 2 220 2 103 1 6 7 241 2 288 8 273 1 80 1 344 1 363 1 137 1 108 25 315 7 63 2 138 1 140 1 38 1 112 1 348 4 43 1 325 2 251 1 15 2 328 7 278 4 16 4 255 1 256 1 173 1 95 27 118 1 233 8 259 52 174 1 302 1 
365 1 211 1 65 1 298 1 331 1 133 1 105 1 359 1 260 1 180 1 
57 1 276 1 
86 1 365 1 36 1 65 1 298 1 331 1 243 1 260 1 180 1 
365 1 182 1 54 1 64 1 65 1 40 2 320 1 155 1 359 1 219 1 298 1 331 1 133 1 105 1 176 1 244 1 260 1 180 1 
365 1 182 1 54 1 64 1 65 1 40 2 320 1 155 1 359 1 219 1 298 1 331 1 133 1 105 1 176 1 244 1 260 1 180 1 
365 1 182 1 54 1 64 1 65 1 40 2 320 1 155 1 359 1 219 1 298 1 331 1 133 1 105 1 176 1 244 1 260 1 180 1 
132 1 22 1 227 1 
132 1 22 1 227 1 
72 1 119 1 
72 1 22 1 119 1 
297 1 350 1 
54 1 236 2 57 1 155 1 358 1 99 2 341 1 225 1 180 1 346 1 365 1 182 1 64 1 65 1 40 1 276 1 184 2 351 1 350 1 353 2 297 1 298 1 331 1 281 2 260 1 150 1 262 1 
132 1 227 1 
72 1 22 1 119 1 
264 1 354 1 237 1 71 1 335 1 337 1 269 1 215 1 126 1 99 2 5 1 220 1 60 2 175 2 159 2 241 1 34 2 161 1 108 1 11 1 90 1 184 2 250 1 325 1 372 1 353 2 169 1 16 2 95 1 47 1 259 2 
264 1 11 1 202 1 126 1 231 1 60 1 253 1 31 1 117 1 76 1 159 1 47 1 34 1 376 1 
11 1 275 2 39 1 126 1 231 1 60 1 146 1 46 1 66 1 30 1 296 1 159 1 20 1 300 1 8 1 34 1 376 1 69 1 
11 1 275 2 39 1 126 1 231 1 277 1 60 2 146 1 46 1 66 1 30 1 296 1 159 2 20 1 300 1 8 1 34 2 376 1 69 1 
11 1 275 2 39 1 126 1 60 1 146 1 46 1 30 1 296 1 159 1 20 1 300 1 8 1 34 1 51 1 376 1 69 1 
181 1 
317 1 246 1 248 1 4 1 342 1 343 1 116 1 79 1 244 1 53 1 
306 2 307 2 4 5 28 1 328 2 360 2 254 10 19 1 288 2 257 5 199 5 233 2 244 5 53 5 301 5 
29 1 54 1 182 1 317 1 74 1 244 1 
264 1 54 3 192 1 239 1 126 1 4 2 60 4 29 2 342 2 271 2 7 1 76 2 74 4 159 4 79 2 34 4 345 2 347 1 290 1 11 1 182 3 202 1 246 1 248 2 117 1 47 1 377 1 261 2 53 2 
317 1 116 1 343 1 321 1 244 1 53 1 4 1 
54 1 4 1 29 1 342 1 74 1 79 1 244 2 182 1 317 1 246 1 248 1 91 1 143 1 254 1 188 1 53 1 301 1 
264 2 238 1 126 2 59 1 60 1 342 1 76 1 75 1 159 1 79 1 34 1 84 1 345 1 11 1 246 1 248 1 185 1 93 1 19 1 47 1 53 2 332 1 
54 1 305 1 306 2 307 2 4 5 28 1 29 1 360 2 103 1 271 1 342 2 74 1 79 2 288 2 199 5 244 5 107 1 363 1 345 1 182 1 317 2 246 2 112 1 348 1 248 2 15 1 328 2 278 1 254 6 257 5 118 1 233 2 53 8 378 1 301 3 
54 1 236 1 99 1 4 2 157 1 28 1 158 1 360 2 342 1 79 1 288 2 344 1 274 1 182 1 246 1 318 1 37 1 248 1 184 1 368 1 166 1 353 1 281 1 233 1 23 1 53 2 174 1 302 1 
0 1 264 1 236 2 125 1 238 1 71 1 337 1 25 1 215 1 126 1 99 2 5 1 157 2 220 1 60 1 76 1 159 1 241 1 34 1 346 1 108 1 274 1 11 1 184 3 293 1 325 1 353 3 16 2 281 2 21 1 47 1 259 1 
317 2 246 1 38 1 248 1 4 2 342 1 271 1 254 4 79 1 257 2 199 2 244 4 53 1 301 2 345 1 
365 1 212 1 65 1 133 1 350 1 
365 1 310 1 65 1 
365 1 310 1 65 1 
365 1 310 1 65 1 
365 1 65 1 362 1 
365 1 65 1 362 1 
365 1 65 1 362 1 
365 1 65 1 
298 1 180 1 
315 3 266 5 267 1 337 1 325 1 220 1 6 2 16 2 241 1 288 2 95 5 344 2 233 2 259 10 23 1 174 1 302 2 108 5 
266 1 267 1 337 1 325 1 220 1 328 1 6 1 16 2 241 1 288 1 95 2 259 2 
315 1 266 2 267 1 306 1 337 1 307 1 325 1 220 1 328 1 6 1 16 2 241 1 288 1 95 2 233 1 259 4 108 2 
315 1 266 2 247 1 267 1 337 3 325 3 220 3 128 1 6 1 16 6 241 3 80 1 95 1 344 1 259 3 108 2 302 1 
121 1 266 12 267 1 337 5 306 3 307 3 340 1 220 5 128 1 6 5 241 5 288 5 80 2 344 3 108 18 63 1 315 7 140 1 247 1 38 1 366 1 348 3 325 5 15 1 328 3 278 4 16 10 255 1 95 16 233 5 259 34 52 1 174 2 302 3 
315 2 266 3 140 1 38 1 337 2 325 2 220 2 6 1 16 4 255 1 288 1 241 2 95 4 80 1 344 1 233 1 259 8 174 1 108 4 302 1 
315 2 140 1 266 2 38 1 321 1 255 1 288 1 95 3 344 1 233 1 259 6 174 1 108 3 302 1 
315 1 266 2 306 1 366 1 337 1 307 1 325 1 220 1 328 1 6 1 16 2 241 1 288 1 95 2 233 1 259 4 108 2 
315 1 63 1 266 2 306 1 348 1 307 1 15 1 328 1 278 2 6 1 288 1 95 3 233 1 259 7 108 4 
266 9 306 2 337 2 58 1 307 2 27 1 220 2 6 4 288 3 241 2 80 2 344 2 108 12 63 1 315 5 140 1 247 1 38 1 348 2 325 2 328 2 278 2 16 4 255 1 95 11 233 3 259 23 174 1 302 2 
278 1 259 1 108 1 
95 1 348 1 259 1 
315 2 266 3 337 1 366 1 306 1 307 1 325 1 220 1 328 1 6 1 16 2 19 1 241 1 288 1 95 3 233 1 259 6 108 3 
305 1 266 2 267 1 337 1 306 2 307 2 220 1 103 1 6 1 241 1 288 2 363 1 108 6 315 1 112 1 348 1 325 1 15 1 328 2 278 1 16 2 95 6 118 1 233 2 259 12 
315 1 266 2 6 1 288 1 95 3 344 1 233 1 259 6 174 1 108 3 302 1 
315 1 266 2 140 1 247 1 337 1 325 1 220 1 6 1 16 2 255 1 241 1 95 1 80 1 344 1 259 3 302 1 108 2 
266 2 267 1 337 1 220 1 103 1 288 1 241 1 344 1 108 4 315 2 140 1 38 1 348 1 325 1 15 1 278 1 16 2 255 1 95 4 233 1 259 8 174 1 302 1 
266 3 267 1 337 2 307 1 220 2 103 1 6 1 241 2 288 2 344 1 108 5 315 2 63 1 140 1 38 1 366 1 348 1 325 2 15 1 328 1 278 2 16 4 255 1 95 6 233 1 259 11 174 1 302 1 
305 1 266 4 267 1 337 3 306 2 307 2 220 3 103 1 6 1 241 3 288 3 80 1 344 1 363 1 108 10 315 3 140 1 38 1 366 1 112 1 348 1 325 3 15 1 328 2 278 1 16 6 255 1 95 9 118 1 233 3 259 19 174 1 302 1 
305 1 266 5 267 1 337 3 306 1 307 2 220 3 103 1 6 2 241 3 288 3 80 1 344 1 363 1 108 7 315 3 140 1 38 1 366 1 112 1 348 1 325 3 15 1 328 2 278 1 16 6 255 1 95 10 118 1 233 2 259 17 174 1 302 1 
266 2 267 1 337 1 220 1 103 1 288 1 241 1 344 1 108 4 315 2 140 1 38 1 348 1 325 1 15 1 278 1 16 2 255 1 95 4 233 1 259 8 174 1 302 1 
305 1 266 2 267 1 337 1 306 2 307 2 220 1 103 1 6 1 241 1 288 2 363 1 108 6 315 1 112 1 348 1 325 1 15 1 328 2 278 1 16 2 95 6 118 1 233 2 259 12 
305 1 266 5 267 1 337 4 306 1 307 2 220 4 103 1 6 2 241 4 288 3 80 2 344 1 363 1 108 8 315 3 140 1 38 1 112 1 366 1 348 1 325 4 15 1 328 2 278 1 16 8 255 1 95 10 118 1 233 2 259 18 174 1 302 1 
305 1 266 6 267 1 337 4 306 2 307 3 220 4 103 1 6 3 128 1 241 4 288 3 80 2 363 1 108 7 315 3 112 1 348 1 325 4 15 1 328 3 278 1 16 8 95 9 118 1 233 2 259 16 
315 3 140 1 266 6 6 3 255 2 288 1 95 3 344 3 233 1 259 7 174 1 108 4 302 3 
305 1 266 4 267 1 337 4 306 1 307 2 220 4 103 1 6 1 128 1 241 4 288 3 80 2 344 1 363 1 108 8 315 3 140 1 38 1 112 1 348 1 325 4 15 1 328 2 278 1 16 8 255 1 95 10 118 1 233 2 259 18 174 1 302 1 
314 1 85 1 1 1 184 1 99 1 346 1 353 1 
316 1 85 1 314 1 1 1 240 1 14 1 99 1 184 1 156 1 353 1 68 1 346 1 
264 1 11 1 202 1 126 1 277 1 114 1 170 1 60 4 117 1 76 1 159 4 47 1 34 4 
264 1 122 1 11 1 210 1 229 1 238 1 214 1 126 2 60 2 159 2 47 1 34 2 261 1 179 1 
60 1 146 1 11 1 46 1 76 1 159 1 275 1 300 1 126 1 34 1 
264 1 60 2 11 1 159 2 269 1 126 1 47 1 34 2 372 1 69 1 277 1 
264 3 263 1 11 2 202 1 269 1 126 2 277 1 114 1 60 4 117 1 76 1 159 5 47 2 34 5 261 1 83 1 
264 3 263 1 123 1 11 2 202 1 269 1 126 2 277 1 114 1 60 4 117 1 76 1 159 5 47 2 34 5 261 1 
264 1 60 1 11 1 202 1 117 1 76 1 159 1 321 1 126 1 47 1 34 1 
264 1 236 1 11 1 238 1 125 1 126 1 99 1 184 2 353 2 60 1 115 1 76 1 159 1 21 1 281 1 47 1 34 1 346 1 
264 3 236 2 11 1 238 2 125 1 193 1 126 1 99 2 184 2 368 1 309 1 353 2 60 1 115 1 159 1 21 1 281 1 47 2 206 1 34 1 149 1 261 1 346 1 
264 3 236 2 238 2 193 1 126 1 99 2 309 1 60 2 159 2 34 2 346 1 11 1 141 1 184 2 368 1 353 2 170 1 115 1 281 1 21 1 47 2 206 1 261 1 149 1 
264 4 54 2 238 1 268 1 126 1 309 1 60 3 74 1 76 1 159 3 106 1 34 3 244 1 84 1 11 1 182 2 317 1 12 1 204 1 170 1 47 1 206 1 261 1 
264 4 182 2 54 2 11 1 317 1 238 1 126 1 204 1 309 1 170 1 60 3 76 1 17 1 74 1 159 3 106 1 47 1 206 1 244 1 34 3 261 1 84 1 
60 1 11 1 159 1 200 1 126 1 34 1 
263 1 264 3 11 2 210 1 229 1 238 1 269 1 126 3 93 1 277 1 73 1 60 6 175 1 76 2 159 7 200 1 47 2 34 7 178 1 83 1 69 1 
0 1 236 1 238 1 337 2 99 1 5 2 60 1 159 1 241 2 288 1 242 1 344 1 346 2 108 3 11 1 113 1 249 1 353 2 169 1 115 1 16 4 255 1 21 1 259 6 174 1 302 1 354 1 264 1 265 1 125 1 71 2 266 2 213 1 25 1 126 1 220 2 34 1 315 2 140 1 38 1 184 2 325 2 277 1 281 1 95 3 47 1 233 1 
236 1 54 1 99 1 4 4 157 1 28 1 158 1 341 1 60 1 360 2 342 1 343 1 76 1 159 1 288 2 79 1 344 1 244 1 34 1 274 1 182 1 317 1 246 1 318 1 37 1 248 1 184 1 368 1 353 1 116 1 281 1 233 2 377 1 53 4 23 1 174 1 332 1 302 1 
264 2 11 1 238 1 204 1 126 2 185 1 93 1 277 1 60 2 159 2 200 1 47 1 34 2 
264 1 236 1 11 1 238 1 126 1 141 1 99 1 184 2 353 2 60 1 115 1 76 1 159 1 21 1 281 1 47 1 34 1 346 1 
264 1 11 1 210 1 229 1 238 1 126 2 93 1 60 1 159 1 47 1 34 1 178 1 261 1 
55 1 67 1 294 1 346 1 167 1 
201 1 182 2 54 2 317 1 55 2 89 1 193 1 357 1 368 1 294 1 167 2 341 1 131 1 106 1 67 2 244 1 149 1 82 1 346 1 
55 1 90 1 99 1 184 1 294 1 250 1 167 1 353 1 161 1 
131 1 82 1 294 1 
10 1 283 1 78 1 311 1 81 1 339 1 313 1 162 1 
10 4 283 3 183 1 13 1 319 1 101 1 339 2 33 1 78 1 81 2 207 2 313 1 162 4 9 1 
10 2 283 1 339 1 44 1 78 1 311 1 81 1 189 1 313 1 207 1 162 2 235 1 
10 3 283 1 183 1 101 2 339 1 33 2 78 1 94 1 311 1 81 1 313 1 162 3 
283 2 284 1 352 1 145 2 
10 1 78 1 311 1 313 1 327 1 162 1 
10 2 283 1 78 1 311 1 41 1 81 1 339 1 207 1 313 1 162 2 
35 1 
10 1 283 1 78 1 311 1 81 1 339 1 313 1 162 1 
283 1 321 1 81 1 339 1 
10 1 283 1 78 1 81 1 339 1 313 1 162 1 
196 1 162 1 371 1 
10 3 283 1 33 1 183 1 78 1 311 1 81 1 101 2 339 1 313 1 162 3 287 1 
10 2 283 1 209 1 78 1 81 1 339 1 207 1 313 1 162 2 
10 1 283 1 275 1 154 1 39 1 146 1 78 1 311 1 313 1 162 1 9 1 
10 1 283 1 78 1 311 1 339 1 313 1 162 1 
10 1 78 1 311 1 81 1 339 2 313 1 162 1 
10 2 283 1 92 1 339 1 370 1 222 1 78 2 311 1 313 2 162 2 
10 3 283 2 319 1 41 1 339 1 78 1 172 1 311 1 81 1 313 1 207 2 162 3 9 1 
10 2 283 1 275 2 39 1 339 1 171 1 146 1 46 1 78 1 311 1 20 1 81 1 313 1 207 1 162 2 
10 4 209 1 283 2 319 1 339 1 186 1 78 2 311 1 81 1 313 2 207 2 162 4 9 1 
10 3 283 1 41 1 101 1 339 1 78 1 311 1 81 1 207 1 313 1 162 3 
283 1 13 1 319 1 9 1 
283 1 339 1 

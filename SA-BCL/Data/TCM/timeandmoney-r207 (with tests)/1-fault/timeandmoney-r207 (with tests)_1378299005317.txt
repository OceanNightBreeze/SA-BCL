#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 297 97 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 297 96 323 179 359 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 297 96 323 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 297 96 323 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 297 96 323 179 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 297 96 323 179 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 1 196 9 249 3 150 1 225 2 100 1 22 1 107 2 160 1 231 2 292 2 293 2 344 1 108 4 296 1 209 1 295 6 71 2 162 1 265 1 324 2 303 1 191 1 328 9 192 1 126 5 308 1 275 1 
38 1 196 9 249 3 150 1 225 2 100 1 22 1 107 2 160 1 231 2 292 2 293 2 344 1 108 4 296 1 209 1 295 6 71 2 162 1 265 1 324 2 303 1 191 1 328 9 192 1 126 5 308 1 275 1 
38 1 196 10 249 4 150 1 225 2 100 1 22 1 107 2 160 1 231 2 292 2 293 2 344 1 108 5 296 1 209 1 295 7 71 2 162 1 265 1 324 2 303 1 191 1 328 10 192 1 126 6 308 1 275 1 
196 7 249 2 150 1 225 2 100 1 22 1 107 2 160 1 231 2 292 2 293 2 344 1 108 3 296 1 209 1 295 4 71 2 162 1 265 1 324 1 303 1 191 1 328 7 192 1 126 4 308 1 275 1 
249 1 38 1 196 4 150 1 265 1 225 1 324 2 328 4 231 1 292 1 293 1 108 2 126 3 296 1 295 3 275 1 162 1 71 1 
196 2 150 1 303 1 201 1 22 1 227 1 328 2 231 1 107 1 292 1 293 1 126 1 296 1 17 1 162 1 71 1 
196 3 249 1 150 1 328 3 231 2 107 1 344 1 108 1 126 2 296 1 295 1 162 1 71 2 
249 3 196 9 38 1 150 1 225 1 44 1 107 1 231 2 292 1 108 4 344 1 293 1 296 1 295 7 345 1 71 2 162 1 265 1 324 2 328 9 192 1 126 5 308 1 275 1 
249 3 196 9 38 1 150 1 225 1 44 1 107 1 231 2 292 1 108 4 344 1 293 1 296 1 295 7 345 1 71 2 162 1 265 1 324 2 328 9 192 1 126 5 308 1 275 1 
309 1 40 1 274 1 
40 1 301 2 372 1 
203 2 190 2 279 2 184 1 86 2 366 2 36 1 140 2 
250 1 174 1 363 1 277 2 335 2 279 2 336 1 129 1 366 2 3 1 83 1 203 2 178 1 69 1 370 1 318 1 86 3 208 1 111 2 133 1 211 1 164 1 184 1 88 1 139 1 354 1 12 1 140 3 188 2 272 1 190 2 145 1 377 1 379 1 193 1 18 2 36 1 
203 1 60 1 190 1 279 1 57 1 86 1 365 1 366 1 36 1 140 1 
53 1 309 1 60 1 40 1 39 1 101 1 200 1 140 1 131 1 186 1 65 1 190 1 86 1 332 1 
53 1 309 1 60 1 40 1 279 1 200 1 366 1 140 1 131 2 186 1 65 2 203 1 190 1 86 1 332 1 
104 1 65 1 98 1 333 1 131 1 
104 1 65 2 309 1 40 1 122 1 98 1 302 1 131 2 
104 1 65 1 131 1 
60 1 98 1 279 1 365 1 366 1 131 1 140 1 65 1 31 1 203 1 190 1 57 1 86 1 36 1 
40 1 
104 1 65 2 309 1 40 1 16 1 122 1 98 1 131 2 
334 1 309 1 40 1 251 1 98 2 240 1 21 1 154 1 131 5 65 5 104 2 306 1 56 2 50 1 166 1 122 1 205 1 33 2 147 2 
184 1 274 1 
279 1 351 1 184 2 366 1 140 2 30 1 203 1 190 2 86 2 
1 1 42 1 155 1 
81 1 277 1 164 1 335 1 184 1 88 1 129 1 139 1 140 1 12 1 188 1 272 1 145 1 318 1 86 1 193 1 
279 4 61 2 101 1 351 1 184 1 280 1 366 4 140 5 156 1 203 1 219 1 190 5 158 1 86 5 
60 1 190 2 279 2 86 2 365 1 366 2 316 1 140 2 
203 1 190 3 279 3 61 1 184 1 86 3 366 3 140 3 
60 1 190 1 279 1 86 1 365 1 366 1 140 1 
30 1 203 1 60 1 190 1 279 1 351 1 86 1 366 1 140 1 
250 1 60 1 277 1 335 1 224 1 279 3 61 1 336 1 200 1 129 1 366 3 3 1 131 1 83 1 156 1 84 1 65 1 203 2 69 1 370 1 318 1 86 4 208 1 111 1 53 1 211 1 164 1 184 1 351 1 88 1 139 1 354 1 12 1 140 4 186 1 188 1 272 1 190 3 145 1 379 1 193 1 332 1 18 2 36 1 
219 1 190 2 279 1 61 1 184 1 101 1 86 2 366 1 140 2 
53 1 60 1 40 1 94 1 279 3 61 2 351 1 200 1 366 3 131 1 140 3 186 1 156 1 65 1 84 1 203 1 190 3 86 3 332 1 
279 2 61 1 1 1 351 1 366 2 155 1 140 2 203 1 190 2 86 2 
277 1 164 1 335 1 184 1 88 1 129 1 139 1 140 1 12 1 188 1 272 1 145 1 318 1 86 1 193 1 
277 1 335 1 184 1 153 1 88 1 129 1 139 1 140 1 12 1 188 1 218 1 272 1 145 1 86 1 193 1 
250 1 42 2 1 2 313 1 336 1 281 1 155 2 4 1 66 1 178 2 69 1 208 2 111 4 373 1 238 1 211 1 137 1 354 1 142 1 167 1 58 1 379 1 194 1 18 2 
60 1 190 1 279 1 86 1 332 1 366 1 316 1 140 1 
277 1 164 1 335 1 279 1 1 1 61 1 88 1 139 1 129 1 366 1 12 1 140 2 156 1 188 1 272 1 190 1 145 1 318 1 86 2 193 1 
202 1 278 1 
202 1 278 1 
276 1 368 1 
276 1 368 1 
276 1 368 1 
202 1 355 1 278 1 
202 1 355 1 278 1 
202 1 278 1 119 1 
202 2 276 1 368 1 278 2 6 1 228 1 
202 1 355 1 278 1 
202 1 278 1 319 1 
202 1 278 1 319 1 
202 1 278 1 319 1 
348 1 19 1 278 1 279 2 184 1 117 1 119 1 366 2 140 2 131 1 157 1 202 1 317 1 217 1 65 1 327 1 105 1 190 2 232 1 330 1 342 1 86 2 247 1 59 1 
348 3 19 2 40 1 278 2 239 1 214 1 364 1 353 2 228 1 131 2 202 2 65 2 217 1 221 1 232 2 330 2 247 2 195 1 237 1 
225 1 292 1 293 1 
292 1 293 1 17 1 
128 1 225 2 87 1 292 3 17 1 243 1 
225 1 87 1 292 2 283 1 17 1 243 1 
225 1 87 2 292 2 17 1 243 1 
309 1 40 2 98 4 21 2 253 2 282 1 154 1 131 5 4 1 177 1 157 1 66 1 104 1 65 5 204 1 206 1 294 1 372 1 301 3 27 1 137 1 216 2 244 1 270 2 327 1 56 1 122 1 166 3 33 1 59 1 194 1 147 1 
309 1 40 5 98 7 21 6 253 6 282 2 131 9 154 1 4 3 157 4 66 3 104 6 65 9 204 3 106 1 206 1 233 1 372 3 262 1 301 9 27 2 240 1 137 3 11 1 216 6 14 5 56 2 222 1 122 1 166 8 144 1 33 2 194 3 147 2 333 5 
309 1 40 3 98 2 21 2 253 2 282 1 131 3 177 1 157 1 4 1 66 1 65 3 204 1 372 2 301 4 27 1 240 1 137 1 216 2 244 1 270 1 56 1 166 3 33 1 147 1 194 1 
309 1 40 4 98 3 21 4 253 4 282 1 131 4 177 1 157 2 4 2 66 2 65 4 204 2 233 1 372 3 301 7 27 1 240 1 137 2 11 1 216 4 244 1 270 2 56 1 222 1 166 5 33 1 147 1 194 2 
145 1 274 1 165 1 
145 1 136 1 
182 1 
145 1 193 1 12 1 
67 1 145 1 
145 1 193 1 
264 1 145 3 193 1 165 2 12 1 360 1 
8 1 311 1 313 2 102 1 337 1 66 1 285 1 24 1 178 4 167 3 371 1 51 1 208 3 261 1 92 2 111 7 194 1 
8 1 311 1 313 2 102 1 337 1 66 1 285 1 24 1 178 4 167 3 371 1 51 1 208 3 261 1 92 2 111 7 194 1 
8 1 311 1 313 2 102 1 337 1 66 1 285 1 24 1 178 4 167 3 371 1 51 1 78 1 208 3 261 1 92 2 111 7 194 1 
250 1 311 1 95 1 313 5 102 2 337 1 4 3 285 2 66 4 46 1 48 1 24 1 178 16 204 3 69 1 371 2 51 1 161 1 208 15 261 2 111 31 346 4 211 1 8 5 322 1 26 1 137 3 354 1 269 3 167 10 168 1 92 3 194 4 18 2 
250 2 311 1 252 1 313 3 102 1 337 1 66 1 285 1 178 5 69 2 371 1 51 1 161 1 261 1 208 4 180 1 111 9 211 2 8 1 354 2 167 4 92 2 194 1 18 4 
196 2 150 1 277 1 128 1 335 1 225 1 199 1 63 1 231 1 107 1 292 2 293 1 343 1 52 1 296 1 295 1 347 1 71 1 162 1 299 1 54 1 185 1 139 1 73 1 188 1 272 1 328 2 126 1 35 1 17 1 
196 3 150 1 277 1 128 1 198 1 335 1 225 1 199 1 63 1 231 1 107 1 292 2 293 1 343 1 52 1 296 1 295 2 71 1 299 1 54 1 185 1 139 1 188 1 272 1 328 3 143 1 126 1 378 1 35 1 17 1 
196 2 150 1 277 1 128 1 335 1 225 1 199 1 63 1 107 1 292 2 343 1 293 1 52 1 296 1 295 2 299 1 139 1 188 1 272 1 328 2 143 1 126 1 378 1 35 1 17 1 
196 1 277 1 198 1 335 1 63 2 199 2 129 1 45 1 231 1 107 2 260 1 71 1 210 1 299 2 114 1 139 1 188 1 272 1 328 1 329 1 145 1 125 1 193 1 
196 1 277 1 128 1 335 1 225 1 199 1 63 1 231 1 107 1 292 2 293 1 343 1 52 1 347 1 71 1 162 1 299 1 54 1 185 1 139 1 188 1 272 1 328 1 378 1 35 1 17 1 
124 1 
82 1 277 2 39 1 335 2 129 2 131 3 86 1 297 1 53 1 183 1 350 1 139 1 140 1 188 2 186 1 190 1 356 2 56 1 145 1 193 1 147 1 148 1 60 1 97 1 21 2 101 1 200 1 154 1 367 1 104 2 65 3 260 1 25 1 114 1 374 1 27 1 28 1 325 1 272 1 122 1 166 2 331 1 33 1 332 1 34 1 
53 1 25 1 60 1 39 1 350 1 28 1 101 1 200 1 325 1 131 3 140 1 186 1 104 2 65 3 356 2 190 1 16 1 122 1 291 1 86 1 332 1 148 1 
60 1 309 1 39 1 40 1 101 1 200 1 131 3 104 1 65 3 86 1 53 1 25 1 28 1 350 1 325 1 140 1 186 1 120 1 190 1 356 3 16 1 122 1 332 1 148 1 
53 1 25 1 309 1 60 1 40 1 39 1 350 1 28 1 101 1 200 1 325 1 131 3 140 1 186 1 120 1 104 2 65 3 356 3 190 1 16 1 122 1 291 1 245 1 86 1 332 1 148 1 
82 1 60 1 39 1 96 1 21 1 101 1 200 1 154 1 131 3 367 1 104 3 65 3 179 1 291 2 86 1 297 1 53 1 25 1 28 1 350 1 323 1 325 1 140 1 186 1 190 1 356 2 56 1 16 1 166 1 122 1 76 1 245 2 33 1 34 1 332 1 147 1 359 1 148 1 
82 1 60 1 39 1 21 1 101 1 200 1 154 1 131 2 367 1 65 2 86 1 297 1 53 1 25 1 28 1 350 1 325 1 140 1 186 1 190 1 356 2 56 1 166 1 33 1 332 1 34 1 147 1 148 1 
82 1 60 1 39 1 96 1 21 1 101 1 200 1 131 2 154 1 367 1 65 2 86 1 297 1 53 1 25 1 28 1 350 1 323 1 325 1 140 1 186 1 190 1 356 2 56 1 166 1 76 1 33 1 34 1 332 1 147 1 148 1 
82 1 60 1 39 1 96 1 21 1 101 1 200 1 131 2 154 1 367 1 65 2 86 1 297 1 53 1 25 1 28 1 350 1 323 1 325 1 140 1 186 1 190 1 356 2 56 1 166 1 76 1 33 1 34 1 332 1 147 1 148 1 
82 2 309 1 0 2 60 1 40 1 39 1 96 1 21 1 101 1 43 1 200 1 131 4 154 1 367 2 104 4 65 4 259 2 291 2 86 1 297 1 53 1 25 1 301 2 28 1 350 1 325 1 140 1 186 1 120 2 190 1 356 4 56 1 122 2 166 1 245 2 32 1 33 1 332 1 147 1 148 1 361 1 
82 1 60 1 39 1 96 1 21 1 101 1 200 1 154 1 131 2 367 1 65 2 104 1 179 1 291 1 86 1 297 1 53 1 25 1 28 1 350 1 323 1 325 1 140 1 186 1 120 1 190 1 356 3 56 1 166 1 76 1 245 1 33 1 34 1 332 1 147 1 148 1 
82 1 60 1 39 1 96 1 21 1 101 1 200 1 154 1 131 2 367 1 65 2 104 1 179 1 291 1 86 1 297 1 53 1 25 1 28 1 350 1 323 1 325 1 140 1 186 1 120 1 190 1 356 3 56 1 166 1 76 1 245 1 33 1 34 1 332 1 147 1 148 1 
82 2 309 1 0 2 60 1 40 1 39 1 21 1 101 1 43 1 200 1 154 1 131 4 367 2 104 4 65 4 259 2 291 2 86 1 110 1 297 1 53 1 25 1 301 2 28 1 350 1 325 1 140 1 186 1 120 2 190 1 356 4 56 1 122 2 166 1 245 2 33 1 332 1 147 1 148 1 
250 1 311 1 1 1 313 2 42 1 336 1 337 1 281 1 155 1 285 1 66 1 178 3 69 1 371 1 51 1 208 3 111 6 211 1 184 2 354 1 167 2 92 1 274 1 379 1 194 1 18 2 
250 2 174 1 313 1 42 11 1 11 336 1 3 1 155 4 4 2 66 1 46 1 178 8 69 2 204 2 208 6 111 14 346 3 112 1 8 1 211 2 322 1 349 1 184 1 137 1 354 2 269 3 187 1 326 1 167 2 79 1 379 2 194 2 18 4 
81 1 250 1 277 1 174 1 335 1 279 1 61 1 336 1 2 1 129 1 366 1 3 1 155 1 156 1 178 1 69 1 318 1 86 2 208 1 111 2 211 1 164 1 184 1 135 1 88 1 139 1 354 1 12 1 140 2 188 1 326 1 272 1 190 1 75 1 145 1 193 1 379 1 18 2 
174 1 277 3 335 3 279 1 42 7 1 7 336 3 337 1 129 1 3 1 83 2 4 2 285 1 178 10 51 1 86 3 298 1 8 4 134 2 184 2 88 2 137 2 139 2 354 3 140 3 12 2 188 3 190 1 145 2 307 1 92 1 193 2 194 3 18 6 250 3 311 1 313 4 61 1 366 1 314 2 155 7 156 1 23 1 66 3 159 2 69 3 204 2 371 1 318 2 208 10 111 20 211 3 164 2 267 2 326 1 272 2 167 8 378 1 379 3 
250 2 277 8 174 1 335 8 279 1 61 1 336 2 129 2 281 1 366 1 3 1 255 1 49 1 230 1 178 1 69 2 86 1 260 1 208 1 111 2 133 2 211 2 114 1 241 1 116 1 139 2 73 1 215 1 354 2 140 1 188 7 55 1 272 2 190 1 145 3 378 1 379 2 193 2 18 4 
250 1 279 1 313 1 1 1 42 1 336 1 366 1 155 1 4 1 66 1 203 1 178 1 69 1 204 1 86 1 208 2 111 3 211 1 351 1 352 1 137 1 354 1 140 1 326 1 190 1 167 1 379 1 194 1 18 2 
238 1 8 1 211 1 250 1 1 1 42 1 336 1 281 1 354 1 155 1 4 1 178 2 167 1 69 1 111 2 379 1 194 1 18 2 
211 1 250 1 313 1 1 1 42 1 336 1 137 1 281 1 354 1 155 1 66 1 142 1 167 1 69 1 208 2 111 2 379 1 18 2 
250 1 42 2 1 2 313 1 336 1 281 1 155 2 4 1 66 1 178 2 204 1 69 1 208 2 111 4 211 1 8 1 137 1 354 1 167 2 379 1 194 1 18 2 
238 1 8 1 211 1 250 1 1 1 42 1 336 1 354 1 155 1 4 1 49 1 178 2 167 1 69 1 111 2 379 1 194 1 18 2 
211 1 250 1 313 1 1 1 42 1 336 1 137 1 354 1 155 1 66 1 142 1 49 1 167 1 69 1 208 2 111 2 379 1 18 2 
250 1 42 2 1 2 313 1 336 1 155 2 4 1 66 1 49 1 178 2 204 1 69 1 208 2 111 4 211 1 8 1 137 1 354 1 167 2 379 1 194 1 18 2 
250 1 42 2 1 2 313 1 336 1 155 2 4 1 66 1 178 2 204 1 69 1 208 2 111 4 211 1 8 1 137 1 354 1 167 2 379 1 194 1 18 2 
250 1 174 1 277 1 335 1 336 1 129 1 3 1 83 1 178 1 69 1 318 1 86 1 208 1 111 2 211 1 164 1 184 1 88 1 139 1 354 1 12 1 140 1 188 1 272 1 145 1 193 1 379 1 18 2 
250 1 174 1 277 1 335 1 336 1 153 1 176 1 129 1 3 1 178 1 69 1 86 1 208 1 111 2 211 1 184 1 88 1 139 1 354 1 12 1 140 1 188 1 218 1 272 1 145 1 193 1 379 1 18 2 
250 1 42 2 1 2 313 1 336 1 155 2 4 1 66 1 178 2 204 1 69 1 208 2 111 4 211 1 8 1 137 1 354 1 326 1 167 2 379 1 194 1 18 2 
250 1 277 1 335 1 313 1 1 2 42 2 336 1 155 2 4 1 83 1 66 1 159 1 178 2 69 1 204 1 318 1 86 1 208 2 111 4 8 1 211 1 164 1 137 1 88 1 139 1 73 1 354 1 12 1 140 1 188 1 272 1 167 2 145 1 193 1 379 1 194 1 18 2 
250 1 279 1 42 1 1 1 336 1 366 1 155 1 4 1 66 1 203 1 178 2 69 1 204 1 86 1 208 1 111 3 8 1 211 1 351 1 137 1 268 1 354 1 140 1 326 1 190 1 167 1 379 1 194 1 18 2 
250 3 310 1 311 1 252 1 313 4 20 1 337 1 64 1 130 1 284 1 4 4 285 1 66 5 46 3 340 1 289 1 178 20 69 3 204 4 371 1 51 1 161 1 207 2 208 21 320 1 111 41 113 1 346 4 211 3 8 4 322 1 137 4 354 3 269 3 121 1 15 1 167 8 376 1 92 1 146 1 80 4 194 5 18 6 
250 4 310 1 311 1 252 1 313 4 20 1 337 1 64 1 130 1 284 1 4 4 285 1 66 4 46 3 340 1 289 1 178 20 69 4 204 4 371 1 51 1 161 2 207 2 208 18 320 1 111 38 113 1 346 4 211 4 8 3 322 1 137 3 354 4 269 3 121 1 15 1 167 7 376 1 92 1 146 1 80 4 194 5 18 8 
250 2 311 1 252 1 313 7 20 1 337 1 64 1 130 1 284 1 4 7 285 1 66 8 46 2 340 1 289 1 178 27 69 2 204 7 371 1 51 1 161 1 207 1 208 25 320 1 111 52 113 1 346 4 211 2 8 7 322 2 137 7 354 2 269 4 121 1 15 1 167 14 376 1 79 2 92 1 80 4 194 8 18 4 
250 2 310 1 151 1 252 1 313 3 20 2 64 1 284 1 4 3 66 3 46 1 178 9 69 2 204 3 207 1 208 10 320 1 111 19 346 2 211 2 8 3 322 1 137 3 354 2 269 1 15 1 167 6 80 2 194 3 18 4 
250 3 252 1 313 2 20 1 64 1 130 1 284 1 4 3 66 2 46 2 340 1 289 1 178 14 69 3 204 3 161 2 208 12 207 2 320 2 111 26 113 1 346 2 8 2 211 3 137 2 354 3 269 2 121 1 15 1 167 4 376 1 80 4 194 3 18 6 
202 1 19 1 278 1 99 1 232 1 330 1 214 1 247 1 237 1 228 1 
317 1 119 1 
202 1 19 1 278 1 90 1 226 1 232 1 330 1 247 1 235 1 
355 1 70 1 
6 1 319 1 109 1 
348 2 19 1 40 1 278 1 239 1 214 1 353 1 228 1 131 1 202 1 217 1 65 1 221 1 232 1 330 1 247 1 195 1 237 1 
348 2 19 1 40 1 278 1 239 1 214 1 353 1 228 1 131 1 202 1 217 1 65 1 221 1 232 1 330 1 247 1 195 1 237 1 
348 2 19 1 40 1 278 1 239 1 214 1 353 1 228 1 131 1 202 1 217 1 65 1 221 1 232 1 330 1 247 1 195 1 237 1 
355 1 6 1 70 1 
355 1 6 1 70 1 
319 1 109 1 
6 1 319 1 109 1 
105 1 117 1 
19 1 278 1 98 1 279 2 366 2 131 1 202 1 157 1 65 1 317 1 105 1 47 1 232 1 86 2 342 1 348 1 184 1 117 1 119 1 353 1 140 2 327 1 190 2 330 1 247 1 195 1 59 1 
250 1 277 2 174 1 335 2 336 1 3 1 257 1 286 1 288 1 230 1 178 1 69 1 86 2 208 1 111 2 133 2 211 1 242 1 139 1 215 1 354 1 140 2 188 2 326 1 272 1 190 2 145 1 357 1 193 1 379 1 18 2 
277 2 149 1 128 1 335 2 225 1 62 1 199 1 139 1 185 1 73 1 188 2 272 1 290 1 292 2 293 1 343 1 378 1 17 1 35 1 
277 1 128 1 335 1 225 1 199 1 185 1 139 1 305 1 188 1 272 1 290 1 292 2 293 1 343 1 378 1 17 1 35 1 
114 1 277 1 149 1 335 1 199 1 139 1 129 1 188 1 272 1 220 1 145 1 260 1 193 1 210 1 
277 1 149 1 128 1 335 1 225 1 62 1 199 1 185 1 139 1 188 1 272 1 290 1 292 2 293 1 343 1 378 1 17 1 35 1 
234 1 
309 1 40 1 166 1 251 1 205 1 21 1 274 1 
56 1 166 1 21 1 33 1 34 1 147 1 154 1 
277 3 40 8 335 3 41 2 129 1 131 5 339 1 4 2 7 2 301 12 134 2 136 3 137 2 139 3 138 2 12 3 188 3 186 2 56 4 145 10 246 2 193 3 147 4 194 2 309 2 251 1 21 8 253 6 154 4 256 1 104 5 65 5 66 2 67 2 204 2 205 1 372 6 264 1 27 2 115 2 118 1 73 1 165 2 216 6 29 2 272 4 74 1 166 9 122 3 169 1 331 1 33 4 127 2 171 2 
309 2 40 5 21 5 253 5 130 1 131 1 154 2 4 2 65 1 104 1 66 2 46 1 85 1 340 1 289 1 204 2 372 3 346 1 7 1 301 6 27 1 115 2 137 2 304 1 216 5 269 1 121 1 56 2 122 1 166 8 376 1 331 1 33 2 147 2 194 2 
60 1 279 1 21 2 365 1 366 1 103 1 154 1 131 1 285 1 65 1 66 1 203 1 371 1 51 1 86 1 7 1 115 2 140 1 31 1 190 1 56 1 166 2 76 1 57 1 33 1 147 1 194 2 36 1 
309 1 40 1 251 1 21 1 154 1 56 1 166 1 205 1 33 1 147 1 
7 1 40 5 301 10 115 2 134 1 21 5 253 5 137 2 216 5 4 2 66 2 166 5 204 2 372 5 194 2 
65 1 104 1 309 1 40 1 122 1 131 1 
277 4 335 4 21 2 129 2 315 1 154 1 131 3 256 1 104 4 65 3 260 1 236 1 183 1 114 1 374 1 27 2 240 1 118 2 139 1 188 4 272 1 56 2 166 2 122 2 145 1 33 2 331 2 193 1 147 2 
250 1 277 1 335 1 279 2 336 1 129 1 366 2 3 1 83 1 203 2 370 1 69 1 318 1 86 3 208 1 111 1 211 1 164 1 184 1 88 1 139 1 354 1 140 3 12 1 188 1 272 1 190 2 145 1 193 1 379 1 18 2 36 1 
309 2 40 4 301 4 27 1 21 2 253 2 216 2 154 1 56 1 166 1 92 1 372 2 33 1 331 1 147 1 
72 1 232 1 247 1 
72 1 232 1 247 1 
77 1 232 1 117 1 247 1 237 1 
72 1 232 1 247 1 
232 1 247 1 223 1 
232 1 247 1 223 1 
232 1 247 1 223 1 
232 1 247 1 
202 1 278 1 
250 1 311 1 252 1 313 2 337 1 66 1 285 1 46 1 340 1 178 4 69 1 371 1 51 1 208 4 111 8 346 1 211 1 269 1 354 1 167 2 92 1 194 1 18 2 
250 2 311 1 252 1 313 2 337 1 4 1 66 1 285 1 46 1 340 1 341 1 178 6 69 2 204 1 371 1 51 1 208 5 111 11 346 2 211 2 8 1 322 1 354 2 269 1 167 3 92 1 194 2 18 4 
250 3 311 1 252 1 313 3 337 1 130 1 4 2 285 1 66 3 46 1 340 1 341 1 289 1 178 9 69 3 204 2 371 1 51 1 161 1 208 10 111 19 346 1 8 1 211 3 137 2 269 1 354 3 121 1 167 4 376 1 92 1 194 3 18 6 
250 3 311 1 252 1 313 3 337 1 130 1 4 2 285 1 66 2 46 1 340 1 341 1 289 1 178 10 69 3 204 2 371 1 51 1 161 1 208 7 111 17 346 1 8 2 211 3 137 1 269 1 354 3 121 1 167 5 376 1 92 1 194 3 18 6 
250 1 311 1 252 1 313 2 337 1 66 1 285 1 46 1 340 1 178 4 69 1 371 1 51 1 208 4 111 8 346 1 211 1 269 1 354 1 167 2 92 1 194 1 18 2 
250 1 252 1 313 1 130 1 4 2 66 2 46 1 340 1 289 1 178 6 69 1 204 2 208 6 111 12 346 1 8 1 211 1 137 2 269 1 354 1 121 1 167 2 376 1 194 2 18 2 
250 4 311 1 252 1 313 3 337 1 130 1 4 2 285 1 66 2 46 1 340 1 341 1 289 1 178 10 69 4 204 2 371 1 51 1 161 2 208 8 111 18 346 1 8 2 211 4 137 1 354 4 269 1 121 1 167 5 376 1 92 1 194 3 18 8 
250 4 310 1 252 1 313 3 130 1 4 3 66 2 46 1 340 1 289 1 178 9 69 4 204 3 161 2 208 7 111 16 346 1 8 3 211 4 137 2 354 4 269 1 121 1 167 6 376 1 194 3 18 8 
8 3 311 1 313 3 337 2 66 1 285 3 178 3 167 6 371 3 51 1 208 4 111 7 194 1 
250 4 310 1 311 1 252 1 313 3 337 1 130 1 4 2 285 1 66 2 46 1 340 1 289 1 178 10 69 4 204 2 371 1 51 1 161 2 208 8 111 18 346 1 8 1 211 4 137 1 354 4 269 1 121 1 167 4 376 1 92 1 194 3 18 8 
8 1 211 2 250 2 311 1 313 2 337 1 354 2 66 1 285 1 178 4 167 3 69 2 371 1 51 1 161 1 92 1 208 4 111 8 194 1 18 4 
311 1 313 2 337 1 285 1 66 1 178 3 167 2 371 1 51 1 92 1 208 3 274 1 111 6 194 1 
211 1 8 1 250 1 313 1 137 1 354 1 4 1 66 1 341 1 178 2 167 2 69 1 204 1 208 2 111 4 194 1 18 2 
8 1 322 1 313 1 137 1 269 1 4 1 66 1 46 1 178 3 204 1 167 2 208 4 111 7 346 2 194 1 
250 2 311 1 313 5 175 1 337 1 4 2 285 2 66 3 178 11 204 2 69 2 371 2 51 1 161 2 208 12 111 23 346 2 112 1 8 4 211 2 322 1 137 2 269 2 354 2 167 9 79 1 92 1 194 3 18 4 
208 1 111 1 346 1 
178 1 111 1 269 1 
211 1 8 1 250 1 134 1 313 2 137 1 354 1 4 1 66 1 341 1 178 3 69 1 204 1 167 3 208 3 111 6 194 1 18 2 
250 1 252 1 313 1 130 1 4 2 66 2 46 1 340 1 289 1 178 6 69 1 204 2 208 6 111 12 346 1 8 1 211 1 137 2 269 1 354 1 121 1 167 2 376 1 194 2 18 2 
8 1 313 1 66 1 285 1 178 3 167 2 371 1 51 1 208 3 111 6 194 1 
8 1 211 1 250 1 311 1 313 1 175 1 337 1 354 1 285 1 178 1 167 2 69 1 371 1 161 1 208 2 111 3 18 2 
211 1 8 2 250 1 252 1 313 3 354 1 103 1 285 2 66 2 178 5 69 1 167 5 371 2 51 1 208 5 111 10 194 2 18 2 
211 1 8 1 250 1 252 1 354 1 4 1 178 2 69 1 167 1 111 2 194 1 18 2 
211 1 8 1 250 1 252 1 313 1 137 1 354 1 4 1 66 1 178 2 167 2 69 1 204 1 208 2 111 4 194 1 18 2 
211 3 8 1 250 3 310 1 252 1 175 1 313 1 354 3 285 1 178 1 69 3 167 2 371 1 161 1 208 2 111 3 18 6 
250 5 310 1 311 1 95 1 252 1 175 1 313 7 337 1 4 3 285 3 66 5 46 1 48 1 341 1 178 16 69 5 204 3 371 3 51 2 161 2 208 18 111 34 346 4 211 5 8 5 26 1 322 1 137 3 354 5 269 3 167 12 92 1 194 5 18 10 
190 1 219 1 184 1 101 1 10 1 86 1 140 1 
300 1 184 1 10 1 101 1 140 1 258 1 287 1 219 1 190 1 369 1 375 1 86 1 
188 1 272 1 114 1 277 1 335 1 145 1 260 1 139 1 129 1 193 1 274 1 
277 1 335 1 279 1 61 1 184 1 88 1 129 1 139 1 366 1 12 1 140 2 188 1 272 1 190 1 145 1 318 1 86 2 193 1 
60 1 277 1 335 1 279 1 61 1 184 1 88 1 200 1 118 1 139 1 366 2 29 1 12 2 140 2 188 1 67 1 272 1 190 2 145 3 318 1 86 2 332 1 193 2 
60 1 277 2 335 2 279 1 61 1 184 1 88 1 200 1 118 1 139 1 366 2 29 1 12 2 140 2 188 2 218 1 67 1 272 1 190 2 5 1 145 3 86 2 332 1 193 2 
309 1 277 3 40 1 335 3 136 1 129 1 118 1 139 1 254 1 165 1 12 1 29 1 131 2 186 1 188 3 65 2 104 1 67 1 141 1 272 1 5 1 145 4 193 1 
309 1 277 3 40 1 335 3 136 1 129 1 118 1 139 1 165 1 12 1 29 1 131 2 186 1 188 3 65 2 104 1 67 1 272 1 5 1 145 4 193 1 171 1 
188 1 272 1 277 1 335 1 139 1 255 1 
264 1 277 7 335 7 241 1 116 1 129 2 139 2 73 1 255 1 338 1 12 1 188 6 55 1 189 1 272 3 230 1 145 3 378 1 193 2 181 1 133 1 
250 2 277 1 311 1 335 1 279 1 1 1 42 1 313 2 61 1 336 2 337 1 366 1 155 1 83 1 66 1 285 1 159 1 178 3 69 2 371 1 51 1 318 1 86 2 208 3 111 6 211 2 164 1 267 1 184 2 88 1 139 1 73 1 354 2 12 1 140 2 188 1 326 1 272 1 190 1 167 2 145 1 92 1 357 1 193 1 379 2 194 1 18 4 
309 1 277 1 40 1 251 1 335 1 98 1 41 1 21 1 129 1 154 2 131 3 256 1 65 3 104 2 205 1 136 1 165 1 188 1 186 1 56 2 166 1 122 1 145 2 246 1 33 2 147 2 127 1 171 1 
264 1 277 2 335 2 139 1 73 1 165 1 255 1 12 1 188 2 272 2 145 2 169 1 193 1 
114 1 277 4 335 4 129 1 139 1 73 1 188 4 272 1 5 1 273 1 145 1 260 1 193 1 
277 2 266 1 335 2 118 1 139 1 338 1 12 1 188 2 23 1 272 2 145 1 193 1 181 1 263 1 
188 1 272 1 277 1 335 1 292 1 293 1 343 1 139 1 129 1 17 1 
277 2 335 2 139 1 73 1 188 2 286 1 272 1 230 1 145 1 378 1 193 1 
114 1 277 5 335 5 241 1 118 1 129 1 139 2 73 1 188 4 272 2 55 1 273 1 230 1 145 3 260 1 193 2 
114 1 277 5 152 1 335 5 118 1 129 1 139 2 73 1 188 4 272 2 55 1 273 1 230 1 145 3 260 1 193 2 
277 1 335 1 279 1 61 1 184 1 88 1 129 1 139 1 366 1 12 1 140 2 188 1 218 1 272 1 190 1 145 1 86 2 193 1 
264 1 277 1 335 1 118 1 139 1 338 1 12 1 188 1 189 1 272 2 145 1 193 1 181 1 
89 1 257 1 271 1 190 1 288 1 242 1 212 1 86 1 140 1 
173 1 89 1 312 1 
271 1 89 1 197 1 212 1 184 1 
173 1 53 1 309 1 60 1 197 2 40 1 98 1 312 1 212 2 184 1 200 1 131 2 186 1 89 1 271 2 65 2 84 1 332 1 321 1 
150 1 126 1 296 1 274 1 
196 1 150 1 328 1 231 1 126 1 296 1 71 1 
196 1 107 1 63 1 
196 3 150 1 9 1 22 2 328 3 231 1 126 1 296 1 248 1 37 1 162 1 71 1 
196 2 150 1 328 2 231 1 324 1 126 1 296 1 295 1 71 1 
196 1 265 1 328 1 225 1 231 1 292 1 293 1 108 1 126 1 71 1 162 1 
196 1 328 1 231 1 126 1 296 1 71 1 162 1 
196 1 150 1 328 1 231 1 296 2 71 1 162 1 
196 2 163 1 328 2 231 2 126 1 296 1 358 1 172 1 162 1 71 2 
196 3 249 1 150 1 328 3 192 1 231 1 108 1 308 1 126 2 296 1 295 2 162 1 71 1 
196 2 150 1 128 1 225 1 328 2 231 1 91 1 292 2 293 1 126 1 296 1 295 1 17 1 162 1 71 1 
196 4 38 1 249 1 150 1 324 1 328 4 231 2 108 1 126 2 296 1 295 2 162 1 71 2 
196 1 150 1 328 1 231 1 126 1 296 1 71 1 162 1 
196 4 249 1 150 2 9 1 22 1 229 1 328 4 231 1 108 1 126 3 296 2 295 2 248 1 71 1 
196 2 93 1 150 1 68 1 328 2 231 1 126 1 296 1 345 1 295 1 162 1 71 1 
196 3 150 1 9 1 328 3 123 1 231 1 126 1 296 1 248 2 22 2 71 1 162 1 
13 1 213 1 126 2 132 2 
196 1 328 1 231 1 170 1 71 1 162 1 
196 2 150 1 328 2 231 1 126 1 308 1 296 1 295 1 71 1 162 1 
362 1 
196 1 150 1 328 1 231 1 126 1 296 1 71 1 162 1 
196 3 150 1 22 1 328 3 231 1 126 1 308 1 295 1 296 1 162 1 71 1 
249 1 229 1 108 1 126 1 
126 1 296 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (248,277,342) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (248,277,342) 28 263 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (248,277,342) 28 260 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (248,277,342) (248,277,342) 144 119 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (248,277,342) 28 268 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
212 1 110 2 324 1 327 2 154 3 34 1 306 1 318 1 162 1 43 1 181 1 283 2 198 3 
212 1 242 1 219 1 154 9 42 1 318 1 162 1 23 1 43 3 272 2 198 9 110 2 324 1 29 1 327 5 34 1 113 1 306 4 332 1 133 1 181 7 103 1 283 2 149 1 
212 1 242 1 219 1 154 9 42 1 318 1 162 1 23 1 43 3 272 2 198 9 110 2 324 1 29 1 327 5 34 1 113 1 306 4 332 1 133 1 181 7 103 1 283 2 149 1 
212 1 242 1 219 1 154 9 42 1 318 1 59 1 162 1 23 2 43 3 63 1 272 2 198 9 110 2 324 2 29 2 49 1 327 5 278 1 34 1 113 1 306 4 332 2 309 1 147 1 181 6 103 1 283 2 
212 1 242 1 219 1 154 9 42 1 318 1 59 1 162 1 23 2 43 3 63 1 272 2 198 9 110 2 324 2 29 2 49 1 327 5 278 1 34 1 113 1 306 4 332 2 309 1 147 1 181 6 103 1 283 2 
212 1 242 1 219 1 154 10 42 1 318 1 59 1 162 1 23 2 43 4 63 1 272 2 198 10 110 2 324 2 29 2 49 1 327 6 278 1 34 1 113 1 306 5 332 2 309 1 147 1 181 7 103 1 283 2 
212 1 242 1 154 7 42 1 318 1 59 1 162 1 23 2 43 2 63 1 272 1 198 7 110 2 324 2 29 2 49 1 327 4 278 1 34 1 113 1 306 3 332 2 309 1 147 1 181 4 103 1 283 2 
212 1 110 1 29 1 327 3 219 1 154 4 42 1 306 2 318 1 332 1 23 1 162 1 43 1 272 2 181 3 103 1 283 1 198 4 
212 1 110 1 324 1 265 1 49 1 327 1 154 2 318 1 332 1 162 1 23 1 309 1 36 1 337 1 283 1 198 2 
284 1 106 1 342 1 128 1 56 1 96 1 13 1 142 1 222 1 258 1 25 1 115 1 209 1 167 1 
202 1 
96 2 105 1 13 1 342 2 202 1 45 1 297 1 313 1 
105 1 342 5 202 1 302 1 288 2 304 1 156 1 21 1 291 1 96 5 246 1 13 2 334 2 62 1 16 1 297 1 273 1 18 2 313 2 
202 1 297 1 211 1 
142 1 106 1 222 1 258 1 25 1 128 1 209 1 115 1 56 1 167 1 
142 1 222 1 248 1 277 1 25 1 146 1 
142 1 222 1 248 1 258 1 25 1 209 1 167 1 
96 1 13 1 342 1 32 1 313 1 
96 2 105 1 13 1 342 2 202 1 328 1 297 1 313 1 
96 1 342 1 313 1 
163 2 202 1 325 1 
135 1 142 2 222 2 258 2 25 2 209 2 56 1 167 2 
135 1 150 1 213 1 2 1 216 1 153 1 55 2 187 1 56 1 316 2 84 1 87 1 164 1 222 3 25 2 64 1 225 1 167 2 125 1 89 1 199 1 300 1 94 2 353 2 206 2 75 1 142 3 132 1 77 1 52 1 258 2 209 2 182 1 19 1 117 1 54 1 38 1 
135 2 158 1 142 2 222 2 258 1 25 2 209 1 167 1 250 1 
40 1 329 1 315 1 
135 1 2 1 300 1 153 1 55 1 316 1 84 1 206 1 142 1 222 1 132 1 164 1 194 1 64 1 182 1 38 1 
135 1 211 1 
300 1 2 1 153 1 329 1 55 1 316 1 84 1 51 1 206 1 24 1 142 2 164 1 132 1 222 2 258 1 25 1 64 1 209 1 182 1 38 1 
135 1 7 1 267 1 158 1 51 1 24 2 142 5 15 1 222 5 258 4 146 1 25 5 209 4 167 1 
142 2 106 1 222 2 258 2 25 2 128 1 209 2 10 1 
135 1 24 1 142 3 222 3 258 3 25 3 209 3 167 1 
142 1 106 1 222 1 258 1 25 1 128 1 209 1 
142 1 106 1 222 1 258 1 25 1 209 1 167 1 158 1 250 1 
263 1 28 1 24 1 142 2 222 2 248 1 258 2 25 2 209 2 167 1 158 1 51 1 
135 1 24 1 142 2 15 1 222 2 258 1 146 1 25 2 209 1 
28 1 24 1 142 1 222 1 248 1 258 1 25 1 209 1 260 1 51 1 
40 1 329 1 158 1 24 1 142 2 222 2 258 2 25 2 209 2 167 1 
135 1 2 1 300 1 153 1 55 1 316 1 84 1 206 1 142 1 222 1 132 1 164 1 64 1 182 1 38 1 
135 1 2 1 300 1 55 1 316 1 84 1 206 1 142 1 222 1 132 1 164 1 249 1 64 1 320 1 182 1 
150 1 40 2 241 1 184 1 216 1 187 2 155 1 315 2 87 1 225 2 125 1 200 1 199 1 201 1 275 1 301 1 69 1 329 2 353 2 94 4 95 1 77 1 134 1 179 1 
176 1 142 1 106 1 222 1 258 1 25 1 209 1 10 1 
252 1 362 1 157 1 
285 1 252 2 360 1 231 1 157 2 174 1 
252 1 157 1 
252 1 157 1 
285 1 360 1 
285 1 360 1 
285 1 360 1 
252 1 293 1 157 1 
252 1 293 1 157 1 
252 1 293 1 157 1 
252 1 8 1 157 1 
252 1 8 1 157 1 
252 1 8 1 157 1 
135 1 252 1 342 1 350 1 330 1 157 1 233 1 205 1 130 1 96 1 319 1 142 2 222 2 236 1 237 1 271 1 258 2 335 1 25 2 358 1 349 1 209 2 362 1 261 1 
252 2 342 2 202 1 171 2 243 1 231 1 188 1 330 2 157 2 233 2 352 1 289 1 96 2 178 1 319 3 143 1 271 1 358 2 261 2 
23 2 333 2 29 1 337 1 226 1 
332 1 23 1 29 1 
332 1 23 1 337 1 
80 1 23 3 333 1 29 2 337 1 226 1 
23 2 333 1 35 1 29 1 337 1 226 1 
105 1 241 1 342 5 185 1 266 1 288 1 155 1 269 1 156 2 159 2 190 1 246 1 163 3 195 2 297 1 273 3 200 1 275 1 325 1 68 2 202 2 73 1 96 5 130 1 334 1 13 4 237 1 335 1 145 1 18 1 262 1 313 1 
105 1 241 3 342 9 266 2 186 5 288 2 155 3 269 3 156 6 190 1 139 1 246 1 163 9 223 1 195 6 297 1 273 8 200 3 275 3 325 3 68 6 202 5 32 5 33 1 73 2 12 1 130 4 96 9 13 7 334 2 99 1 100 1 16 1 18 2 313 6 
241 1 342 3 266 1 288 1 155 1 269 1 156 2 159 1 163 4 195 2 297 1 273 3 200 1 275 1 202 3 325 2 68 2 73 1 96 3 130 1 13 2 334 1 145 1 16 1 18 1 262 1 
241 2 342 4 266 1 288 1 155 2 269 2 156 4 159 2 163 7 195 4 297 1 273 5 200 2 275 2 202 4 325 3 68 4 33 1 73 1 96 4 130 2 334 1 13 3 99 1 100 1 16 1 145 1 18 1 262 1 
180 1 
182 1 343 1 211 1 
164 1 300 1 182 1 
61 1 182 1 
300 1 182 1 
1 1 164 1 300 1 182 3 343 2 39 1 
182 1 27 1 
65 1 104 1 200 1 241 1 201 3 229 1 301 2 187 3 173 1 22 1 94 7 11 2 191 1 138 1 321 1 124 1 225 4 338 1 
104 1 150 1 241 4 216 1 218 1 187 15 269 3 155 3 22 2 191 1 138 1 58 1 225 16 124 5 125 1 26 3 65 2 200 4 199 1 201 10 229 1 275 3 301 5 173 2 175 1 353 2 94 31 11 3 307 1 76 1 114 1 17 4 312 1 338 2 
104 1 150 2 241 1 214 1 216 2 187 4 22 1 191 1 225 5 124 1 125 2 65 1 200 1 199 2 299 1 201 4 229 1 301 3 173 1 353 4 94 9 11 2 307 1 338 1 
65 1 104 1 200 1 241 1 201 3 229 1 301 2 187 3 173 1 22 1 94 7 11 2 191 1 138 1 124 1 225 4 338 1 
65 1 104 1 200 1 241 1 201 3 229 1 301 2 187 3 173 1 22 1 94 7 11 2 191 1 138 1 124 1 225 4 338 1 
110 1 324 2 168 1 300 1 264 1 170 1 230 1 55 1 154 1 316 1 84 1 160 1 206 1 256 2 308 2 132 1 101 2 166 1 64 1 182 1 283 1 198 1 251 1 
80 1 151 1 55 1 154 1 316 1 221 1 162 1 23 2 64 1 198 1 110 1 324 1 29 1 203 1 9 1 354 1 206 1 332 1 256 1 308 1 132 1 310 1 101 1 337 1 283 1 339 1 
0 1 212 1 80 1 55 1 154 2 316 1 318 1 221 1 162 1 23 2 64 1 198 2 110 1 324 1 29 1 327 1 203 1 9 1 354 1 206 1 332 1 256 1 308 1 132 1 310 1 101 1 181 1 337 1 283 1 339 1 
212 1 80 1 151 1 55 1 154 3 316 1 318 1 221 1 23 2 64 1 198 3 110 1 324 1 29 1 327 1 303 1 203 1 230 1 9 1 206 1 332 1 256 1 308 1 132 1 310 1 101 1 181 2 337 1 283 1 339 1 
212 1 80 1 151 1 55 1 154 2 316 1 318 1 23 2 64 1 198 2 324 1 29 1 327 1 303 1 203 1 9 1 206 1 256 1 332 1 308 1 132 1 101 1 181 2 337 1 339 1 
323 1 
342 1 341 1 277 1 119 1 96 1 142 1 222 1 248 1 144 1 146 1 25 1 109 1 
96 1 142 1 222 1 248 1 341 1 342 1 277 1 144 1 25 1 146 1 119 1 109 1 
342 1 341 1 277 1 119 1 288 1 96 1 142 1 246 1 334 1 222 1 248 1 144 1 25 1 146 1 18 1 109 1 
105 1 341 1 342 2 215 1 119 1 55 2 288 1 316 2 156 1 84 2 246 1 222 1 247 1 248 1 25 1 166 1 64 1 273 1 109 1 300 1 277 1 170 1 73 1 206 2 96 2 257 1 142 1 334 1 132 1 144 1 146 1 182 1 18 1 313 2 
96 1 142 1 222 1 248 1 341 1 342 1 277 1 144 1 25 1 146 1 119 1 109 1 
96 1 142 1 222 1 248 1 341 1 342 1 277 1 144 1 25 1 146 1 119 1 109 1 
96 1 142 1 222 1 248 1 341 1 342 1 277 1 144 1 25 1 146 1 119 1 109 1 
105 1 342 2 341 1 277 1 119 1 96 2 142 1 222 1 248 1 144 1 45 1 146 1 25 1 313 1 109 1 
342 1 341 1 277 1 119 1 288 1 96 1 142 1 246 1 334 1 222 1 248 1 144 1 25 1 146 1 18 1 109 1 
96 1 142 1 222 1 248 1 341 1 342 1 277 1 144 1 25 1 146 1 119 1 109 1 
96 1 142 1 222 1 248 1 341 1 342 1 277 1 144 1 25 1 146 1 119 1 109 1 
96 1 142 1 222 1 248 1 341 1 342 1 277 1 144 1 25 1 146 1 119 1 109 1 
0 1 136 1 150 2 216 2 151 1 55 8 187 1 316 8 84 2 161 1 24 1 87 2 222 1 165 1 25 1 166 1 64 2 225 1 125 2 199 2 300 2 170 1 353 4 94 2 206 7 142 1 279 1 132 2 98 1 77 2 52 2 134 1 357 1 258 1 209 1 282 1 182 3 117 1 54 1 
40 1 150 1 241 1 216 1 82 1 187 2 269 1 155 1 315 1 158 1 87 1 222 1 25 1 167 1 225 1 125 1 199 1 200 1 201 1 275 1 301 1 329 1 129 1 353 2 94 3 142 1 77 1 258 1 209 1 
104 1 135 2 40 1 150 1 241 1 216 1 187 3 315 1 22 1 191 1 87 1 225 3 125 1 199 1 200 1 201 2 229 1 301 2 329 1 353 2 94 6 11 1 77 1 134 1 211 1 338 1 
135 1 150 2 40 4 241 2 216 2 82 1 187 6 269 2 155 1 315 11 57 1 87 1 193 1 295 1 124 1 225 8 125 2 26 3 199 2 200 1 92 1 201 2 275 2 301 1 329 11 175 1 353 4 94 14 77 2 17 3 312 1 117 1 54 1 
135 1 40 1 150 1 2 1 216 1 82 1 153 1 55 1 187 1 316 1 84 1 87 1 24 1 164 1 222 2 194 1 25 1 64 1 225 1 125 1 199 1 300 1 172 1 51 1 353 2 94 2 331 1 206 1 142 2 132 1 77 1 238 1 258 1 209 1 182 1 54 1 117 1 38 1 
150 3 40 7 2 2 216 3 3 2 151 1 82 1 153 2 269 2 155 2 316 3 315 7 84 1 87 3 222 3 164 2 5 1 225 10 124 4 125 3 229 1 275 2 329 7 51 1 94 20 11 1 97 1 132 2 182 2 54 1 338 1 104 1 183 2 135 2 241 3 55 3 187 10 22 1 191 1 24 1 25 1 64 2 200 3 199 3 201 8 300 2 301 4 353 6 206 3 75 2 355 1 142 3 356 2 77 3 258 1 209 1 116 2 117 1 38 2 
199 1 40 1 150 1 201 1 241 1 275 1 216 1 69 1 329 1 315 1 94 2 353 2 87 1 77 1 134 1 124 1 225 2 125 1 
199 1 200 1 40 1 150 1 201 1 301 1 216 1 329 1 187 2 155 1 315 1 94 2 353 2 95 1 87 1 77 1 134 1 125 1 
150 1 40 2 241 1 216 1 187 2 269 1 155 1 315 2 87 1 225 2 124 1 125 1 199 1 200 1 201 2 275 1 301 1 329 2 353 2 94 4 77 1 134 1 
199 1 40 1 150 1 201 1 241 1 275 1 216 1 69 1 329 1 315 1 94 2 353 2 87 1 98 1 77 1 124 1 225 2 125 1 
199 1 200 1 40 1 150 1 201 1 301 1 216 1 329 1 187 2 155 1 315 1 94 2 353 2 95 1 87 1 98 1 77 1 125 1 
150 1 40 2 241 1 216 1 187 2 269 1 155 1 315 2 87 1 225 2 124 1 125 1 199 1 200 1 201 2 275 1 301 1 329 2 353 2 94 4 98 1 77 1 
200 1 199 1 40 2 150 1 201 2 241 1 275 1 301 1 216 1 329 2 187 2 155 1 269 1 315 2 353 2 94 4 87 1 77 1 124 1 225 2 125 1 
135 1 150 1 2 1 216 1 153 1 55 1 187 1 316 1 84 1 87 1 164 1 222 1 64 1 225 1 125 1 199 1 300 1 94 2 353 2 75 1 206 1 142 1 132 1 77 1 182 1 117 1 54 1 38 1 
135 1 150 1 2 1 216 1 55 1 187 1 316 1 84 1 87 1 164 1 222 1 64 1 249 1 320 1 225 1 125 1 46 1 199 1 300 1 94 2 353 2 206 1 142 1 132 1 77 1 182 1 117 1 54 1 
150 1 40 2 241 1 216 1 82 1 187 2 269 1 155 1 315 2 87 1 225 2 124 1 125 1 199 1 200 1 201 2 275 1 301 1 329 2 353 2 94 4 77 1 
0 1 40 2 150 1 241 1 2 1 216 1 153 1 55 1 187 2 155 1 269 1 315 2 316 1 87 1 164 1 222 1 64 1 124 1 225 2 125 1 200 1 199 1 201 2 275 1 300 1 301 1 329 2 94 4 353 2 75 1 206 1 356 1 142 1 132 1 77 1 182 1 38 1 
150 1 40 1 241 1 216 1 82 1 187 1 155 1 269 1 315 1 158 1 87 1 222 1 25 1 124 1 167 1 225 2 125 1 200 1 199 1 201 1 275 1 329 1 353 2 94 3 142 1 77 1 258 1 209 1 210 1 
150 2 241 3 107 1 216 2 187 10 269 3 155 3 344 1 192 1 140 1 225 9 124 3 125 2 26 1 91 2 199 2 299 1 200 3 126 1 201 6 275 3 301 3 351 2 305 1 204 1 175 1 353 4 94 19 17 2 312 1 
150 3 241 3 216 3 187 12 269 3 155 2 344 1 192 2 140 2 348 1 124 2 225 14 88 1 125 3 26 2 91 1 200 2 199 3 299 1 67 1 126 1 201 4 275 3 301 2 70 1 351 4 204 1 232 1 353 6 94 26 307 2 311 1 17 2 312 2 
104 1 150 3 241 5 107 1 216 3 187 21 269 4 155 4 22 1 344 1 191 1 192 2 140 1 348 1 225 20 124 4 88 1 125 3 26 3 91 1 67 1 199 3 299 1 200 5 126 1 201 8 229 1 275 4 301 4 70 1 72 1 351 4 232 1 204 1 175 1 353 6 94 41 11 1 307 1 311 1 17 4 312 3 338 1 
104 1 150 4 241 5 107 1 216 4 187 18 269 4 155 3 22 1 344 1 191 1 192 2 140 1 348 1 225 20 124 3 88 1 125 4 26 3 91 1 67 1 199 4 299 1 200 4 126 1 201 7 229 1 275 4 301 4 70 1 72 1 351 4 232 1 204 1 175 1 353 8 94 38 11 1 307 2 311 1 17 4 312 3 338 1 
104 1 150 2 241 8 216 2 187 25 269 7 155 7 22 1 344 1 191 1 192 1 140 1 348 1 193 2 225 27 124 7 88 1 125 2 26 4 91 1 67 1 199 2 299 1 200 8 126 1 201 14 229 1 275 7 301 7 70 1 351 4 232 1 204 1 175 2 353 4 94 52 11 1 307 1 311 1 17 4 312 2 338 1 
252 1 253 1 358 1 231 1 188 1 157 1 330 1 233 1 261 1 289 1 
362 1 205 1 
252 1 314 1 358 1 239 1 37 1 157 1 330 1 233 1 261 1 
293 1 137 1 
8 1 174 1 50 1 
252 1 342 1 202 1 171 1 243 1 231 1 188 1 330 1 157 1 233 1 352 1 289 1 96 1 178 1 319 2 271 1 358 1 261 1 
252 1 342 1 202 1 171 1 243 1 231 1 188 1 330 1 157 1 233 1 352 1 289 1 96 1 178 1 319 2 271 1 358 1 261 1 
252 1 342 1 202 1 171 1 243 1 231 1 188 1 330 1 157 1 233 1 352 1 289 1 96 1 178 1 319 2 271 1 358 1 261 1 
293 1 174 1 137 1 
293 1 174 1 137 1 
8 1 50 1 
8 1 174 1 50 1 
236 1 350 1 
135 1 342 1 243 1 157 1 319 1 222 2 25 2 123 1 349 1 252 1 171 1 350 1 330 1 233 1 205 1 96 1 130 1 142 2 13 1 236 1 237 1 258 2 358 1 335 1 209 2 362 1 261 1 
150 1 216 1 82 1 55 2 187 1 316 2 345 1 87 1 222 2 294 1 224 1 25 2 64 1 225 1 125 1 199 1 300 1 31 1 353 2 94 2 254 1 206 2 142 2 279 1 132 1 77 1 52 2 357 1 182 1 117 1 54 1 
300 1 276 1 112 1 170 1 55 1 316 1 84 1 160 1 206 1 132 1 101 1 166 1 64 1 182 1 
80 1 29 1 276 1 151 1 326 1 203 1 55 1 316 1 234 1 206 1 332 1 221 1 23 2 132 1 101 1 64 1 337 1 339 1 
0 1 80 1 29 1 276 1 151 1 326 1 203 1 55 2 316 2 234 1 206 2 332 1 221 1 23 2 132 1 101 1 64 1 337 1 339 1 
80 1 29 1 151 1 203 1 55 1 316 1 234 1 206 1 332 1 221 1 23 2 132 1 101 1 64 1 337 1 118 1 339 1 
74 1 
202 1 288 1 304 1 156 1 246 1 334 1 62 1 297 1 18 1 273 1 
183 1 200 2 241 2 275 2 68 5 325 5 202 5 269 2 155 2 156 5 20 2 245 1 163 10 195 5 273 5 
96 1 105 1 342 1 202 1 297 1 313 1 
105 2 215 1 342 3 288 2 55 4 316 4 156 2 84 2 246 1 247 1 166 1 196 1 64 1 273 2 228 2 300 1 93 1 170 1 73 2 206 4 96 3 177 1 257 2 334 2 132 1 16 1 182 1 18 2 313 4 
202 1 62 1 297 1 304 1 273 1 156 1 211 1 
105 1 342 1 288 1 156 1 246 1 163 1 141 1 297 1 273 1 325 1 202 2 71 1 96 1 334 1 336 1 18 1 313 1 
0 1 1 1 269 2 155 2 316 3 156 8 84 1 164 3 163 12 273 9 274 2 90 2 227 2 228 1 93 1 48 1 275 2 325 6 235 1 96 5 334 4 132 4 280 1 182 10 18 4 183 2 105 3 241 2 342 5 288 4 55 3 20 2 189 2 343 2 245 2 246 4 61 2 62 1 197 2 64 3 195 6 297 2 27 3 66 2 200 2 300 3 111 2 68 6 202 8 304 1 73 2 206 3 257 1 313 5 
105 1 241 2 342 1 288 2 269 2 155 2 156 5 20 2 245 1 246 2 163 6 348 1 195 5 297 2 273 8 26 1 298 1 67 1 200 2 275 2 68 5 325 3 202 5 70 1 232 1 73 1 96 1 257 1 131 1 334 2 311 1 17 1 312 1 18 2 313 1 
284 1 106 1 241 2 342 1 288 1 56 1 156 2 20 2 22 1 191 1 245 1 246 1 222 1 25 1 273 2 167 1 200 1 47 1 128 1 96 1 142 1 334 1 14 1 258 1 115 1 209 1 18 1 338 1 
135 1 150 1 2 1 216 1 153 1 55 1 187 1 56 1 316 1 84 1 87 1 222 3 164 1 25 2 64 1 167 2 125 1 89 1 199 1 300 1 94 1 353 2 206 1 75 1 142 3 132 1 77 1 258 2 209 2 182 1 54 1 38 1 
325 2 68 2 202 4 288 1 156 2 73 1 11 1 257 1 246 1 334 1 163 4 195 2 297 2 18 1 273 1 
236 1 217 1 233 1 261 1 289 1 
322 1 233 1 261 1 
322 1 233 1 261 1 
322 1 233 1 261 1 
85 1 233 1 261 1 
85 1 233 1 261 1 
85 1 233 1 261 1 
233 1 261 1 
252 1 157 1 
199 1 299 1 200 2 150 1 47 1 201 5 241 2 216 1 301 3 187 5 22 2 353 2 94 10 191 1 124 2 225 5 125 1 338 2 
299 1 199 1 150 1 241 1 201 1 275 1 216 1 353 2 94 2 225 2 124 1 125 1 
200 1 299 1 199 1 150 1 201 2 241 1 275 1 301 1 216 1 187 2 155 1 269 1 353 2 94 4 225 2 124 1 125 1 
299 1 199 3 150 3 201 2 107 1 216 3 301 1 187 2 22 1 94 3 353 6 307 1 44 1 124 1 225 1 125 3 338 1 
104 1 150 5 241 5 107 1 216 5 218 1 187 18 269 3 155 3 22 3 191 2 58 1 44 1 225 16 124 5 125 5 26 3 199 5 299 1 200 5 201 12 229 1 275 3 301 7 175 1 353 10 94 34 11 1 307 2 76 1 207 1 17 4 312 1 338 3 
104 1 150 1 241 1 216 1 187 4 22 1 191 1 225 4 26 1 125 1 200 1 67 1 199 1 299 1 201 2 229 1 301 2 94 8 353 2 11 1 17 1 312 1 338 1 
104 1 150 2 241 2 216 2 187 5 269 1 22 1 191 1 225 6 124 1 125 2 26 1 200 1 67 1 299 1 199 2 201 3 229 1 275 1 301 2 175 1 94 11 353 4 11 1 207 1 17 2 312 1 338 1 
104 1 150 3 241 3 216 3 187 10 269 2 155 2 22 1 191 1 348 1 124 1 225 9 26 1 125 3 67 1 199 3 299 1 200 3 201 4 229 1 275 2 301 3 70 1 232 1 94 19 353 6 11 1 307 1 207 1 311 1 17 1 312 1 338 1 
104 1 150 3 241 3 216 3 187 7 269 2 155 1 22 1 191 1 348 1 124 2 225 10 26 1 125 3 67 1 199 3 299 1 200 2 201 5 229 1 275 2 301 3 70 1 232 1 94 17 353 6 11 1 307 1 207 1 311 1 17 1 312 1 338 1 
104 1 150 1 241 1 216 1 187 4 22 1 191 1 225 4 26 1 125 1 200 1 67 1 199 1 299 1 201 2 229 1 301 2 94 8 353 2 11 1 17 1 312 1 338 1 
150 1 241 2 216 1 187 6 269 2 155 2 348 1 124 1 225 6 26 1 125 1 67 1 199 1 299 1 200 2 201 2 275 2 301 1 70 1 232 1 94 12 353 2 311 1 17 1 312 1 
104 1 150 4 241 3 216 4 187 8 269 2 155 1 22 1 191 1 348 1 124 2 225 10 125 4 26 1 67 1 199 4 299 1 200 2 201 5 229 1 275 2 301 3 70 1 232 1 94 18 353 8 11 1 307 2 207 1 311 1 17 1 312 1 338 1 
150 4 241 3 107 1 216 4 187 7 269 3 155 2 348 1 124 3 225 9 125 4 26 1 67 1 299 1 199 4 200 2 201 6 275 3 301 3 70 1 232 1 94 16 353 8 307 2 311 1 17 1 312 1 
104 1 200 1 201 6 241 1 229 2 301 3 187 4 22 3 94 7 191 1 124 3 225 3 338 3 
104 1 150 4 241 3 107 1 216 4 187 8 269 2 155 1 22 1 191 1 348 1 124 1 225 10 125 4 26 1 67 1 299 1 199 4 200 2 201 4 229 1 275 2 301 3 70 1 232 1 94 18 353 8 11 1 307 2 311 1 17 1 312 1 338 1 
104 1 200 1 199 2 150 2 241 1 201 3 229 1 301 2 216 2 187 4 22 1 94 8 353 4 11 1 191 1 307 1 225 4 124 1 125 2 338 1 
191 1 104 1 200 1 241 1 201 2 229 1 301 2 187 3 225 3 22 1 94 6 338 1 211 1 11 1 
200 1 199 1 150 1 201 2 241 1 275 1 301 1 216 1 187 2 155 1 269 1 353 2 94 4 207 1 225 2 124 1 125 1 
200 1 241 1 201 2 275 1 301 1 187 4 155 1 269 1 175 1 94 7 17 2 312 1 225 3 124 1 26 1 
104 1 150 2 241 3 216 2 187 12 269 2 155 2 22 2 191 1 44 1 193 1 295 1 124 4 225 11 26 2 125 2 200 3 199 2 201 9 229 1 275 2 301 5 175 1 94 23 353 4 11 1 307 2 17 2 338 2 
17 1 187 1 94 1 
225 1 26 1 94 1 
183 1 199 1 200 1 150 1 241 1 201 3 275 1 216 1 301 2 187 3 269 1 155 1 353 2 94 6 207 1 225 3 124 1 125 1 
150 1 241 2 216 1 187 6 269 2 155 2 348 1 124 1 225 6 26 1 125 1 67 1 199 1 299 1 200 2 201 2 275 2 301 1 70 1 232 1 94 12 353 2 311 1 17 1 312 1 
200 1 241 1 201 2 301 1 187 3 22 1 94 6 191 1 225 3 124 1 338 1 
104 1 199 1 150 1 201 2 229 1 301 1 216 1 187 2 22 1 94 3 353 2 307 1 44 1 225 1 124 1 125 1 338 1 
135 1 169 1 152 1 83 1 255 1 346 1 142 1 15 1 222 1 359 1 146 1 25 1 
135 1 142 1 222 1 15 1 169 1 25 1 146 1 
0 1 300 1 170 1 55 4 316 4 84 1 244 1 206 4 132 1 166 1 64 1 361 1 182 1 
228 1 300 1 55 2 316 2 206 2 347 1 164 1 132 2 122 1 78 1 5 1 64 1 148 1 182 1 
206 1 332 1 23 1 132 1 203 1 64 1 55 1 337 1 316 1 84 1 
206 2 0 1 132 1 300 1 357 1 224 1 151 1 64 1 55 2 182 1 316 2 
0 1 228 1 300 2 170 1 55 5 316 5 84 1 244 1 206 4 161 1 132 2 165 1 357 1 166 1 64 2 182 3 
0 1 6 1 228 1 300 2 170 1 55 5 316 5 84 1 244 1 206 4 161 1 132 2 357 1 166 1 64 2 182 3 
206 1 132 1 300 1 170 1 166 1 64 1 55 1 182 1 316 1 84 1 211 1 
135 1 300 1 2 1 153 1 55 1 316 1 84 1 206 1 24 1 142 2 164 1 132 1 222 2 258 1 25 1 209 1 64 1 182 1 
135 1 106 1 111 1 300 2 2 1 228 1 153 1 55 1 41 1 316 1 176 1 206 1 24 1 142 2 61 1 164 2 132 1 222 2 258 2 25 2 209 1 64 1 182 3 
135 1 106 1 111 1 300 2 2 1 228 1 55 2 41 1 316 2 176 1 206 2 24 1 142 2 61 1 164 2 132 1 222 2 258 2 25 2 209 1 249 1 64 1 361 1 182 3 
81 1 342 2 55 3 4 1 316 3 343 1 84 1 164 1 61 1 64 1 297 1 27 1 227 1 228 1 111 1 300 1 202 1 206 3 96 2 132 1 361 1 182 4 313 1 
227 1 300 1 111 1 342 2 228 1 202 1 55 3 316 3 84 1 343 1 206 3 96 2 61 1 164 1 132 1 64 1 361 1 297 1 182 4 274 1 27 1 313 1 
206 1 132 1 64 1 55 1 282 1 316 1 
0 1 1 1 136 1 300 2 151 1 127 1 55 7 316 7 84 2 206 6 161 1 347 1 164 1 132 3 52 1 165 1 357 1 78 1 64 2 282 1 182 3 
0 1 40 1 150 2 2 1 216 2 82 1 153 1 316 1 315 1 87 2 222 2 164 1 225 3 125 2 229 1 329 1 94 6 11 1 132 1 182 1 338 1 104 1 135 2 241 1 55 1 187 3 22 1 191 1 24 1 25 1 64 1 199 2 200 1 201 2 300 1 301 2 31 1 353 4 75 1 206 1 356 1 142 2 77 2 258 1 209 1 116 1 38 1 
105 1 342 3 288 2 55 1 156 1 316 1 84 1 189 1 343 1 246 2 62 1 197 1 297 1 273 1 274 1 27 1 227 1 66 1 93 1 202 1 304 1 206 1 96 3 334 2 13 1 18 2 182 2 313 2 
0 1 1 1 300 1 55 2 316 2 343 1 206 2 235 1 164 1 132 2 64 1 282 1 182 2 
135 1 300 1 2 1 55 1 316 1 84 1 206 1 24 1 142 2 164 1 132 1 222 2 258 1 25 1 209 1 249 1 64 1 182 1 
1 1 228 1 300 1 127 1 55 1 316 1 206 1 347 1 164 1 132 2 78 1 64 1 182 1 
345 1 270 1 142 1 222 1 286 1 294 1 25 1 120 1 254 1 
270 1 102 1 268 1 
270 1 135 1 286 1 120 1 340 1 
270 1 96 1 28 1 13 1 286 1 248 1 342 1 102 1 268 1 259 1 120 1 340 1 
318 1 212 1 162 1 110 1 327 1 154 1 198 1 283 1 
212 2 110 1 327 3 287 1 154 4 306 1 86 1 318 2 292 1 309 1 43 1 181 2 198 4 283 1 
212 1 110 1 327 1 154 2 317 1 318 1 162 1 108 1 181 1 283 1 198 2 149 1 
212 1 110 1 327 1 287 1 154 3 220 1 86 2 318 1 162 1 309 2 283 1 198 3 
240 1 327 2 208 2 281 1 
162 1 110 1 30 1 154 1 198 1 283 1 
318 1 212 1 162 1 110 1 242 1 327 1 181 1 154 2 198 2 283 1 
290 1 
318 1 212 1 162 1 110 1 327 1 154 1 198 1 283 1 
318 1 212 1 110 1 327 1 154 1 198 1 283 1 
308 1 324 1 154 1 
212 1 110 1 327 1 287 1 154 3 121 1 86 1 318 1 162 1 309 2 283 1 198 3 
318 1 212 1 110 1 327 1 272 1 181 1 154 2 198 2 283 1 
110 1 29 1 327 1 154 1 306 1 332 1 162 1 23 1 103 1 283 1 198 1 
318 1 162 1 110 1 327 1 154 1 198 1 283 1 
318 2 212 1 162 1 110 1 154 1 198 1 283 1 
110 2 327 1 154 2 318 1 162 1 60 1 53 1 79 1 283 2 198 2 
212 1 110 1 242 1 327 2 154 3 113 1 306 1 318 1 162 1 43 1 181 2 283 1 198 3 
212 1 80 1 110 1 29 1 327 1 154 2 318 1 332 1 23 2 162 1 296 1 181 1 337 1 283 1 198 2 
212 1 110 2 327 2 219 1 154 4 306 1 318 1 162 1 43 1 272 1 181 2 283 2 198 4 
318 1 212 1 327 1 211 1 
318 1 212 1 162 1 110 1 309 1 242 1 327 1 181 1 154 3 198 3 283 1 
306 1 292 1 43 1 327 1 
318 1 327 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 1 355 9 157 1 156 2 74 9 309 2 217 2 54 5 311 1 78 2 289 4 33 1 205 2 184 6 293 1 372 1 141 1 142 1 345 3 19 1 373 1 120 1 44 1 377 2 50 1 100 2 352 1 303 1 
128 1 355 9 157 1 156 2 74 9 309 2 217 2 54 5 311 1 78 2 289 4 33 1 205 2 184 6 293 1 372 1 141 1 142 1 345 3 19 1 373 1 120 1 44 1 377 2 50 1 352 1 100 2 303 1 
128 1 355 10 157 1 156 2 74 10 309 2 217 2 54 6 311 1 78 2 289 5 33 1 205 2 184 7 293 1 372 1 141 1 142 1 345 4 19 1 373 1 120 1 44 1 377 2 50 1 352 1 100 2 303 1 
128 1 355 7 157 1 156 2 74 7 309 2 217 2 54 4 311 1 78 2 289 3 33 1 205 2 184 4 293 1 372 1 141 1 142 1 345 2 19 1 120 1 44 1 377 2 50 1 352 1 100 1 303 1 
355 4 156 1 74 4 217 1 309 1 141 1 54 3 345 1 311 1 373 1 78 1 120 1 289 2 377 1 352 1 100 2 303 1 184 3 
355 2 156 1 74 2 159 1 309 1 217 1 54 1 141 1 311 1 44 1 149 1 377 1 50 1 352 1 277 1 205 1 
355 3 156 2 74 3 141 1 54 2 345 1 311 1 289 1 33 1 377 2 352 1 205 1 184 1 
355 9 156 2 74 9 309 1 217 1 54 5 311 1 77 1 78 1 289 4 33 1 11 1 205 1 184 7 293 1 141 1 142 1 345 3 373 1 120 1 377 2 352 1 100 2 303 1 
355 9 156 2 74 9 309 1 217 1 54 5 311 1 77 1 78 1 289 4 33 1 11 1 205 1 184 7 293 1 141 1 142 1 345 3 373 1 120 1 377 2 352 1 100 2 303 1 
220 1 110 1 130 1 
319 1 
31 2 256 2 98 2 178 1 307 1 324 2 333 2 379 2 
104 1 307 1 56 2 333 2 162 2 133 2 291 1 31 3 164 1 178 1 60 1 166 1 270 1 63 1 223 2 224 1 249 1 85 1 225 1 226 1 186 1 256 2 187 1 144 1 70 1 121 1 260 1 98 2 322 1 324 3 150 1 194 1 73 1 101 2 125 1 379 2 305 1 
31 1 256 1 98 1 34 1 307 1 52 1 324 1 333 1 379 1 251 1 
256 1 342 1 356 1 24 1 53 1 130 1 93 1 31 1 220 1 34 1 324 1 367 1 197 1 381 1 
256 1 342 1 356 1 24 2 53 2 130 1 333 1 93 1 31 1 220 1 98 1 34 1 324 1 197 1 379 1 
246 1 24 1 193 1 53 1 332 1 
220 1 246 1 24 2 349 1 53 2 130 1 332 1 94 1 
24 1 53 1 332 1 
256 1 52 1 307 1 24 1 53 1 333 1 31 1 98 1 34 1 246 1 324 1 152 1 379 1 251 1 
220 1 
59 1 220 1 246 1 24 2 349 1 53 2 130 1 332 1 
185 1 24 5 53 5 66 2 130 1 332 2 143 1 79 1 220 1 246 2 136 2 349 1 173 2 7 1 37 1 169 1 182 1 23 1 240 1 
178 1 110 1 
256 2 285 1 333 1 31 2 98 1 178 2 324 2 5 1 379 1 
371 1 337 1 119 1 
186 1 187 1 56 1 108 1 162 1 31 1 121 1 260 1 178 1 270 1 166 1 324 1 223 1 305 1 85 1 225 1 
186 1 187 1 256 1 56 1 131 1 333 1 162 1 31 2 260 1 121 1 166 1 270 1 261 1 324 2 223 1 337 1 379 1 305 1 85 1 225 1 
256 5 341 1 131 1 333 4 31 5 98 1 292 1 261 2 178 1 324 5 5 1 367 1 379 4 176 1 
31 2 256 2 34 1 324 2 151 1 333 2 379 2 251 1 
31 3 256 3 98 1 178 1 261 1 324 3 333 3 379 3 
31 1 256 1 34 1 324 1 333 1 379 1 251 1 
31 1 256 1 98 1 34 1 324 1 5 1 285 1 333 1 379 1 
356 1 307 1 24 1 53 1 56 1 131 1 333 3 162 1 133 1 291 1 31 4 164 1 178 1 60 1 166 1 270 1 34 1 5 1 63 1 223 1 224 1 249 1 85 1 225 1 227 1 186 1 187 1 256 3 342 1 93 1 70 1 260 1 121 1 322 1 98 2 261 1 324 4 150 1 194 1 101 2 197 1 305 1 329 1 379 3 
31 2 256 2 292 1 178 1 261 1 324 2 367 1 333 1 379 1 
227 1 256 3 342 1 356 1 24 1 53 1 131 1 333 3 93 1 31 3 98 1 220 1 34 1 261 2 324 3 5 1 197 1 126 1 379 3 
31 2 256 2 98 1 371 1 261 1 324 2 5 1 337 1 333 2 379 2 
186 1 187 1 56 1 162 1 31 1 121 1 260 1 178 1 270 1 166 1 324 1 223 1 305 1 85 1 225 1 
186 1 187 1 56 1 279 1 162 1 31 1 260 1 178 1 262 1 270 1 166 1 324 1 223 1 85 1 225 1 
288 1 312 1 290 1 291 1 133 4 244 1 164 1 167 1 60 1 180 1 272 1 63 2 224 1 337 2 249 1 40 1 226 2 371 2 278 1 257 1 119 2 195 1 194 1 101 2 
31 1 256 1 342 1 34 1 324 1 151 1 333 1 379 1 
339 1 351 1 
339 1 351 1 
302 1 38 1 
302 1 38 1 
302 1 38 1 
339 1 351 1 208 1 
339 1 351 1 208 1 
206 1 339 1 351 1 
163 1 339 2 302 1 351 2 174 1 38 1 
339 1 351 1 208 1 
339 1 36 1 351 1 
339 1 36 1 351 1 
339 1 36 1 351 1 
154 1 24 1 53 1 267 1 333 2 31 2 219 1 178 1 271 1 222 1 339 1 256 2 206 1 228 1 18 1 259 1 209 1 375 1 324 2 47 1 351 1 237 1 379 2 380 1 
339 2 154 3 228 1 24 2 53 2 27 1 267 2 118 1 259 2 281 1 163 1 220 1 271 2 61 1 222 2 263 1 351 2 283 2 22 1 
217 1 309 1 78 1 
149 1 217 1 309 1 
216 1 192 1 149 1 124 1 309 3 78 2 
216 1 192 1 149 1 189 1 309 2 78 1 
216 1 192 2 149 1 309 2 78 1 
24 5 53 5 332 1 310 1 130 1 288 1 290 1 220 2 246 4 136 1 272 1 7 1 84 1 169 3 40 1 41 1 42 2 319 3 66 1 143 2 209 1 122 1 173 1 349 1 326 2 72 1 237 1 102 1 284 1 328 1 380 1 265 2 
51 1 24 9 53 9 107 1 332 6 130 1 310 1 288 3 290 3 220 5 246 7 136 2 272 3 365 1 7 1 336 1 169 8 254 5 40 3 185 1 41 3 319 9 66 2 143 6 147 1 122 3 193 5 349 1 173 2 326 6 72 2 327 1 328 2 380 4 265 6 
24 3 53 3 130 1 288 1 290 1 220 3 246 2 136 1 272 1 84 1 169 3 40 1 185 1 41 1 42 1 66 1 319 4 143 2 122 2 173 1 72 1 326 2 284 1 328 1 380 1 265 2 
24 4 53 4 107 1 130 1 288 2 290 2 220 4 246 3 136 1 272 2 336 1 84 1 169 5 40 2 185 1 41 2 42 2 319 7 66 1 143 4 122 3 173 1 326 4 72 1 327 1 284 1 328 1 380 2 265 4 
14 1 110 1 85 1 
200 1 85 1 
357 1 
166 1 85 1 225 1 
353 1 85 1 
166 1 85 1 
14 2 166 1 123 1 85 3 29 1 225 1 
226 4 65 1 232 1 346 2 320 1 161 1 69 1 312 3 177 1 347 1 244 2 133 7 272 1 63 3 316 1 238 1 40 1 
226 4 65 1 232 1 346 2 320 1 161 1 69 1 312 3 177 1 347 1 244 2 133 7 272 1 63 3 316 1 238 1 40 1 
226 4 65 1 320 1 232 1 346 2 161 1 69 1 312 3 177 1 347 1 244 2 133 7 272 1 63 3 316 1 238 1 10 1 40 1 
106 1 28 1 161 1 312 10 288 3 177 2 290 3 291 1 133 31 244 5 164 1 269 1 272 4 316 2 63 15 368 4 224 1 369 1 40 4 226 16 41 3 140 1 65 2 295 1 320 1 346 3 232 2 69 5 347 1 148 1 194 1 238 1 101 2 304 3 
226 5 65 1 28 1 320 1 232 1 346 2 161 1 69 1 312 4 177 1 244 3 133 9 291 2 164 2 221 1 363 1 272 1 316 1 63 4 194 2 238 1 101 4 224 2 40 1 
355 2 156 1 74 2 217 1 309 2 54 1 56 1 358 1 311 1 78 1 162 1 58 1 165 1 270 1 223 1 12 1 250 1 184 1 205 1 88 1 187 1 64 1 170 1 141 1 348 1 149 1 236 1 377 1 124 1 352 1 
355 3 156 1 74 3 217 1 309 2 54 1 56 1 358 1 201 1 311 1 78 1 162 1 58 1 165 1 270 1 223 1 12 1 250 1 205 1 184 2 88 1 187 1 170 1 114 1 141 1 348 1 149 1 124 1 377 1 239 1 
355 2 74 2 309 2 217 1 54 1 56 1 358 1 311 1 162 1 78 1 58 1 165 1 270 1 223 1 250 1 205 1 184 2 187 1 170 1 114 1 141 1 348 1 149 1 124 1 239 1 
355 1 156 1 74 1 56 1 358 2 201 1 162 1 58 2 270 1 165 2 166 1 62 1 223 1 205 2 85 1 370 1 186 1 340 1 187 1 67 1 117 1 210 1 377 1 
355 1 156 1 74 1 217 1 309 2 56 1 358 1 78 1 162 1 58 1 165 1 270 1 223 1 12 1 250 1 205 1 88 1 187 1 64 1 170 1 114 1 348 1 149 1 377 1 124 1 352 1 
160 1 
0 2 155 1 53 5 332 6 56 2 162 2 109 1 166 1 168 1 7 1 169 2 255 1 340 1 256 1 342 1 294 2 343 2 66 1 210 1 122 2 349 3 173 1 72 1 306 1 356 1 24 5 308 2 130 1 32 1 31 1 220 2 313 2 270 1 34 1 136 1 367 1 273 1 223 2 274 1 183 2 85 1 186 2 187 1 319 2 143 2 93 1 234 2 374 1 45 1 324 1 325 1 282 1 378 4 197 1 381 1 
155 1 356 1 24 3 53 3 332 2 31 1 32 1 109 1 59 1 34 1 367 1 274 1 256 1 342 1 93 1 234 1 324 1 325 1 349 1 378 2 197 1 381 1 
155 1 356 1 24 3 53 3 332 1 130 1 31 1 32 1 109 1 59 1 220 1 34 1 313 1 367 1 274 1 256 1 342 1 93 1 324 1 325 1 349 1 378 3 197 1 381 1 
155 1 356 1 24 3 53 3 332 2 130 1 59 1 31 1 32 1 109 1 220 1 34 1 313 1 367 1 274 1 256 1 342 1 294 1 93 1 234 1 324 1 349 1 325 1 378 3 197 1 381 1 
0 2 155 1 53 5 332 7 109 1 59 1 7 1 169 1 112 1 255 1 256 1 342 1 294 4 343 2 66 1 122 2 349 3 173 1 264 1 356 1 24 5 308 2 130 5 31 1 32 1 220 5 34 1 313 4 362 1 136 1 315 1 138 1 367 1 274 1 183 2 143 1 93 1 234 4 324 1 325 1 282 1 378 6 197 1 381 1 
0 2 155 1 53 4 332 4 109 1 7 1 169 1 255 1 256 1 342 1 294 2 343 2 66 1 122 2 173 1 349 2 356 1 24 4 308 2 130 1 31 1 32 1 220 2 34 1 313 2 136 1 367 1 274 1 183 2 319 2 143 1 93 1 234 2 45 1 324 1 325 1 282 1 378 4 197 1 381 1 
0 2 155 1 356 1 24 4 53 4 308 2 130 1 332 4 31 1 32 1 109 1 220 1 313 2 34 1 362 1 136 1 315 1 138 1 7 1 367 1 274 1 169 1 183 2 255 1 256 1 342 1 294 2 343 2 66 1 143 1 93 1 234 2 122 2 324 1 349 2 173 1 325 1 282 1 378 4 197 1 381 1 
0 2 155 1 356 1 24 4 53 4 308 2 130 1 332 4 31 1 32 1 109 1 220 1 313 2 34 1 362 1 136 1 315 1 138 1 7 1 367 1 274 1 169 1 183 2 255 1 256 1 342 1 294 2 343 2 66 1 143 1 93 1 234 2 122 2 324 1 349 2 173 1 325 1 282 1 378 4 197 1 381 1 
155 1 356 1 24 4 53 4 308 2 130 1 332 4 31 1 32 1 109 1 220 1 313 2 34 1 136 1 315 1 137 1 7 1 367 1 8 1 274 1 169 1 255 1 256 1 342 1 294 2 230 2 343 2 319 2 66 1 143 1 93 1 234 2 71 2 324 1 349 2 173 1 325 1 49 1 378 4 197 1 381 1 
0 2 155 1 356 1 24 4 53 4 308 2 130 1 332 5 31 1 32 1 109 1 220 1 362 1 34 1 313 3 136 1 315 1 7 1 138 1 367 1 274 1 169 1 183 2 255 1 256 1 342 1 294 3 343 2 66 1 143 1 93 1 234 3 122 2 324 1 349 2 173 1 325 1 282 1 378 5 197 1 264 1 381 1 
0 2 155 1 356 1 24 4 53 4 308 2 130 1 332 5 31 1 32 1 109 1 220 1 362 1 34 1 313 3 136 1 315 1 7 1 138 1 367 1 274 1 169 1 183 2 255 1 256 1 342 1 294 3 343 2 66 1 143 1 93 1 234 3 122 2 324 1 349 2 173 1 325 1 282 1 378 5 197 1 264 1 381 1 
155 1 53 4 332 4 109 1 7 1 169 1 255 1 256 1 342 1 294 2 343 2 66 1 71 2 173 1 349 2 356 1 24 4 308 2 130 1 31 1 32 1 220 1 34 1 313 2 136 1 137 1 367 1 274 1 230 2 319 2 143 1 93 1 234 2 45 1 324 1 325 1 378 4 197 1 381 1 
161 1 312 2 177 1 291 1 244 2 133 6 164 1 60 1 178 2 272 1 316 1 110 1 63 3 337 1 224 1 249 1 40 1 226 3 371 1 278 1 320 1 346 1 119 1 194 1 238 1 101 2 
266 1 106 1 4 1 312 2 288 1 290 2 244 1 291 2 133 14 164 2 178 1 60 1 82 1 272 1 63 6 368 3 224 2 139 1 337 11 249 2 40 2 226 8 41 2 371 4 140 1 144 1 69 1 119 11 150 1 48 1 194 2 101 4 304 3 
56 1 131 1 333 1 162 1 108 1 31 2 291 1 133 2 164 1 178 1 166 1 270 1 60 1 63 1 223 1 139 1 224 1 249 1 85 1 225 1 186 1 226 1 187 1 256 1 90 1 371 1 231 1 144 1 260 1 121 1 261 1 324 2 150 1 194 1 101 2 305 1 379 1 330 1 
3 2 56 3 333 1 287 1 161 1 162 3 57 2 288 2 290 2 244 4 291 3 164 3 60 3 166 2 63 10 337 7 249 3 256 1 114 1 346 1 69 4 119 7 121 2 260 2 21 2 261 1 305 2 131 1 312 8 177 1 31 3 133 20 135 1 178 2 270 2 272 3 316 1 223 3 224 3 139 1 85 2 225 2 40 3 186 1 41 2 226 10 187 2 371 7 320 1 144 1 322 2 324 3 46 2 150 1 194 3 238 1 101 6 379 1 241 1 
104 2 56 7 333 1 162 8 202 1 31 1 291 2 133 2 164 2 270 2 60 2 166 2 247 1 63 1 223 8 224 2 249 2 85 3 186 2 226 1 256 1 187 2 340 1 16 1 278 1 114 1 17 1 296 1 321 1 144 1 146 1 210 1 261 1 324 1 236 1 150 1 194 2 101 4 379 1 
333 1 312 1 288 1 290 1 244 1 291 1 31 1 133 3 164 1 60 1 5 1 83 1 272 1 63 2 337 1 224 1 139 1 249 1 40 1 41 1 226 1 256 1 371 1 119 1 98 1 324 1 194 1 101 2 379 1 
226 2 371 1 278 1 69 1 257 1 312 1 119 1 290 1 133 2 291 1 164 1 60 1 194 1 337 1 101 2 224 1 249 1 40 1 
371 1 278 1 312 1 119 1 288 1 244 1 133 2 291 1 164 1 60 1 167 1 272 1 194 1 63 2 337 1 101 2 224 1 249 1 
312 2 288 1 290 1 291 1 133 4 244 1 164 1 60 1 272 1 63 2 224 1 337 2 249 1 40 1 226 2 41 1 371 2 278 1 69 1 119 2 194 1 101 2 
226 2 371 1 17 1 69 1 257 1 312 1 119 1 290 1 133 2 291 1 164 1 60 1 194 1 337 1 101 2 224 1 249 1 40 1 
371 1 17 1 312 1 119 1 288 1 244 1 133 2 291 1 164 1 60 1 167 1 272 1 194 1 63 2 337 1 101 2 224 1 249 1 
41 1 226 2 371 2 17 1 69 1 288 1 312 2 119 2 290 1 244 1 133 4 291 1 164 1 60 1 272 1 63 2 194 1 337 2 101 2 224 1 249 1 40 1 
41 1 226 2 371 2 69 1 288 1 312 2 119 2 290 1 244 1 291 1 133 4 164 1 60 1 272 1 63 2 194 1 337 2 101 2 224 1 249 1 40 1 
56 1 162 1 133 2 31 1 291 1 164 1 178 1 166 1 270 1 60 1 63 1 223 1 224 1 249 1 85 1 225 1 226 1 186 1 187 1 144 1 260 1 121 1 322 1 324 1 150 1 194 1 101 2 305 1 
56 1 162 1 133 2 30 1 31 1 291 1 164 1 178 1 166 1 270 1 60 1 63 1 223 1 224 1 249 1 85 1 225 1 226 1 186 1 187 1 279 1 144 1 260 1 262 1 324 1 150 1 194 1 101 2 
41 1 226 2 371 2 69 1 288 1 312 2 119 2 290 1 244 1 133 4 291 1 164 1 60 1 272 1 63 2 194 1 337 2 139 1 101 2 224 1 249 1 40 1 
3 1 56 1 162 1 288 1 312 2 290 1 244 1 133 4 31 1 291 1 164 1 270 1 166 1 60 1 272 1 63 2 223 1 337 2 224 1 249 1 85 1 40 1 225 1 226 2 41 1 187 1 371 2 69 1 119 2 260 1 121 1 322 1 324 1 236 1 194 1 101 2 305 1 
333 1 288 1 312 1 290 1 291 1 31 1 133 3 164 1 60 1 5 1 272 1 63 1 224 1 139 1 337 1 249 1 40 1 41 1 226 2 256 1 371 1 69 1 119 1 233 1 98 1 324 1 194 1 101 2 379 1 
354 1 106 1 312 6 288 3 290 3 244 3 334 1 291 2 133 19 164 2 359 1 221 1 272 3 204 1 63 10 368 2 224 2 318 1 40 3 226 9 41 3 140 1 20 2 69 3 171 1 172 1 194 2 101 4 304 1 214 2 
242 1 106 2 2 1 28 2 75 1 312 4 288 2 290 3 244 2 334 2 291 3 133 26 164 3 359 1 221 1 272 2 204 1 63 12 368 2 224 3 318 2 39 1 40 3 226 14 41 3 229 1 20 1 69 2 43 1 172 1 194 3 101 6 304 2 214 4 
354 1 242 1 2 1 106 3 28 1 75 1 161 1 312 8 288 4 177 1 290 4 244 4 334 1 291 3 133 41 164 3 134 1 359 1 221 1 272 5 204 1 316 1 63 21 368 4 224 3 318 2 39 1 40 5 226 20 41 4 229 1 140 1 346 1 320 1 20 1 43 1 69 4 172 1 194 3 238 1 101 6 304 3 214 4 
354 1 242 1 2 1 106 3 28 2 75 1 161 1 312 7 288 3 177 1 290 4 244 4 334 1 291 4 133 38 164 4 134 1 359 1 221 1 272 4 204 1 316 1 63 18 368 4 224 4 318 2 39 1 40 5 226 20 41 4 229 1 140 1 346 1 320 1 20 1 43 1 69 3 172 1 194 4 238 1 101 8 304 3 214 4 
242 1 2 1 106 2 28 1 75 1 161 1 312 14 288 7 177 1 290 7 244 7 334 1 291 2 133 52 164 2 359 1 82 2 221 1 272 8 204 1 316 1 63 25 368 4 224 2 318 1 39 1 40 8 226 27 41 7 229 1 140 2 346 1 320 1 20 1 43 1 69 7 172 1 194 2 238 1 101 4 304 4 214 4 
163 1 339 1 271 1 222 1 267 1 351 1 198 1 22 1 259 1 281 1 
206 1 375 1 
339 1 211 1 271 1 222 1 243 1 115 1 267 1 351 1 259 1 
208 1 248 1 
92 1 36 1 174 1 
339 1 154 2 228 1 24 1 53 1 267 1 118 1 259 1 281 1 163 1 220 1 271 1 61 1 222 1 263 1 351 1 283 1 22 1 
339 1 154 2 228 1 24 1 53 1 267 1 118 1 259 1 281 1 163 1 220 1 271 1 61 1 222 1 263 1 351 1 283 1 22 1 
339 1 154 2 228 1 24 1 53 1 267 1 118 1 259 1 281 1 163 1 220 1 271 1 61 1 222 1 263 1 351 1 283 1 22 1 
208 1 248 1 174 1 
208 1 248 1 174 1 
92 1 36 1 
92 1 36 1 174 1 
219 1 18 1 
154 1 24 1 53 1 267 1 333 2 31 2 245 1 219 1 178 1 246 1 271 1 61 1 222 1 339 1 206 1 256 2 18 1 259 1 209 1 375 1 324 2 47 1 351 1 283 1 237 1 380 1 379 2 
104 2 56 2 162 2 31 2 291 1 133 2 164 1 335 1 270 1 166 1 60 1 247 1 63 1 223 2 139 1 224 1 249 1 85 1 226 1 187 1 256 2 207 1 190 1 321 1 144 1 298 1 235 1 324 2 150 1 194 1 101 2 
187 1 15 1 170 1 114 1 217 1 309 2 56 2 78 1 162 2 203 1 270 1 191 1 165 1 149 1 124 1 236 1 223 2 250 1 88 1 
187 1 170 1 114 1 217 1 309 2 56 1 78 1 162 1 258 1 203 1 165 1 270 1 149 1 124 1 223 1 250 1 88 1 
186 1 187 1 340 1 188 1 56 1 162 1 210 1 270 1 166 1 191 1 165 1 62 1 223 1 85 1 
15 1 187 1 170 1 114 1 217 1 309 2 56 1 78 1 162 1 203 1 270 1 191 1 165 1 149 1 124 1 223 1 250 1 88 1 
299 1 
220 1 110 1 37 1 130 1 143 1 169 1 23 1 
0 1 24 1 53 1 332 1 130 1 220 2 136 1 7 1 169 1 183 1 66 1 319 1 143 1 122 1 173 1 349 1 282 1 
53 5 200 3 56 3 332 5 162 3 57 2 288 2 290 2 166 2 168 1 7 4 169 9 252 1 14 2 66 4 68 2 300 2 122 6 173 4 349 3 72 2 353 1 127 1 23 1 265 6 24 5 25 2 130 2 218 2 29 1 220 8 270 3 179 2 136 4 272 2 37 1 223 3 275 1 87 2 85 8 225 2 40 2 186 1 41 2 187 2 319 12 143 8 95 2 97 1 99 1 236 1 326 6 196 1 197 2 
242 1 24 1 53 1 106 1 2 1 332 1 130 2 75 1 218 2 288 2 290 2 220 5 179 1 136 2 168 1 7 2 272 2 9 1 368 1 169 8 89 1 40 2 41 2 229 1 319 6 66 2 143 5 43 1 122 3 349 1 173 2 72 1 326 5 304 1 265 5 
52 1 307 1 24 1 53 1 218 2 333 1 161 1 177 1 31 1 179 1 34 1 362 1 136 1 7 1 272 1 316 1 169 2 251 1 40 2 256 1 66 1 143 2 323 1 98 1 324 1 173 1 152 1 379 1 
66 1 130 1 143 1 220 1 136 1 173 1 7 1 37 1 169 1 23 1 
41 2 319 10 218 2 143 5 57 1 288 2 290 2 220 5 179 1 122 5 272 2 326 5 169 5 40 2 265 5 
220 1 24 1 53 1 349 1 130 1 332 1 
24 3 53 3 56 4 332 4 162 4 270 1 166 1 136 2 168 2 6 1 7 1 223 4 317 1 169 2 85 1 185 1 186 2 187 1 340 1 66 2 143 2 374 1 99 2 210 1 173 2 349 2 72 2 127 1 306 1 
307 1 56 1 333 2 162 1 133 1 291 1 31 3 164 1 178 1 270 1 166 1 60 1 63 1 223 1 224 1 249 1 85 1 225 1 186 1 256 2 187 1 70 1 121 1 260 1 98 2 322 1 324 3 150 1 194 1 101 2 379 2 305 1 
319 4 66 1 130 2 143 2 346 1 220 4 122 2 136 1 173 1 168 1 7 1 326 2 72 1 169 1 265 2 
297 1 222 1 267 1 
297 1 222 1 267 1 
219 1 215 1 222 1 267 1 22 1 
297 1 222 1 267 1 
222 1 105 1 267 1 
222 1 105 1 267 1 
222 1 105 1 267 1 
222 1 267 1 
339 1 351 1 
226 4 28 1 346 1 320 1 161 1 69 1 312 3 177 1 133 8 244 2 291 2 164 2 272 1 63 4 194 2 316 1 101 4 224 2 238 1 40 1 
226 3 346 1 320 1 161 1 312 2 177 1 244 2 133 6 272 1 63 3 110 1 316 1 238 1 40 1 
41 1 226 2 69 1 288 1 312 2 280 1 290 1 244 1 291 1 133 4 164 1 272 1 63 2 194 1 101 2 224 1 40 1 
226 3 41 1 140 1 106 1 69 1 288 1 312 2 290 1 244 1 133 7 272 1 63 4 368 2 304 1 40 1 
28 2 4 1 161 1 312 9 288 2 177 2 290 2 133 23 244 5 291 2 164 2 82 1 272 3 316 2 63 12 368 2 224 2 40 3 41 2 226 11 140 1 344 1 346 1 320 1 69 4 194 2 238 1 101 4 304 2 
133 1 63 1 368 1 
133 1 226 1 304 1 
41 1 226 3 69 1 280 1 57 1 312 3 288 1 290 1 291 1 133 6 244 2 164 1 272 1 194 1 63 3 224 1 101 2 40 1 
242 1 106 1 2 1 75 1 288 2 312 2 290 2 133 12 291 1 244 1 164 1 221 1 272 2 63 6 368 1 224 1 40 2 226 6 41 2 229 1 69 1 43 1 194 1 101 2 304 1 
226 3 161 1 69 1 312 2 177 1 133 6 244 1 272 1 63 3 316 1 40 1 
226 1 28 1 344 1 320 1 69 1 312 2 177 1 244 1 133 3 291 1 164 1 316 1 63 2 194 1 101 2 224 1 238 1 
226 5 69 2 161 1 312 5 177 2 291 1 244 3 133 10 164 1 323 1 221 1 272 2 194 1 316 2 63 5 224 1 101 2 40 2 
226 2 69 1 312 1 290 1 291 1 133 2 164 1 221 1 194 1 101 2 224 1 40 1 
41 1 226 2 69 1 288 1 312 2 290 1 244 1 291 1 133 4 164 1 221 1 272 1 63 2 194 1 101 2 224 1 40 1 
226 1 354 1 28 1 344 1 69 1 312 2 177 1 133 3 291 3 244 1 164 3 221 1 63 2 194 3 316 1 101 6 224 3 
354 1 106 1 28 2 161 2 312 12 288 3 177 3 290 3 291 5 133 34 244 7 164 5 269 1 221 1 272 5 316 3 63 18 368 4 224 5 40 5 226 16 41 3 140 1 295 1 344 1 346 1 320 1 69 5 280 1 148 1 194 5 238 1 101 10 304 3 
106 1 161 1 312 2 177 1 133 8 291 1 244 2 164 1 221 1 272 1 63 4 316 1 368 1 224 1 40 1 226 4 229 1 346 1 320 1 194 1 101 2 238 1 304 1 
106 1 161 1 312 3 177 1 290 1 244 2 133 11 291 2 164 2 221 1 272 1 316 1 63 5 368 2 224 2 40 2 226 6 41 1 229 1 140 1 346 1 320 1 69 1 280 1 194 2 238 1 101 4 304 1 
242 1 106 1 2 1 28 1 75 1 161 1 288 2 312 4 177 1 290 2 133 19 291 3 244 3 164 3 221 1 272 3 316 1 63 10 368 1 224 3 40 3 226 9 41 2 229 1 346 1 320 1 69 1 43 1 280 1 194 3 238 1 101 6 304 1 
242 1 106 1 2 1 28 1 75 1 161 1 288 1 312 5 177 1 290 2 133 17 291 3 244 3 164 3 221 1 272 2 316 1 63 7 368 1 224 3 40 3 226 10 41 2 229 1 346 1 320 1 69 2 43 1 280 1 194 3 238 1 101 6 304 1 
106 1 161 1 312 2 177 1 133 8 291 1 244 2 164 1 221 1 272 1 63 4 316 1 368 1 224 1 40 1 226 4 229 1 346 1 320 1 194 1 101 2 238 1 304 1 
242 1 106 1 2 1 75 1 288 2 312 2 290 2 133 12 291 1 244 1 164 1 221 1 272 2 63 6 368 1 224 1 40 2 226 6 41 2 229 1 69 1 43 1 194 1 101 2 304 1 
242 1 106 1 2 1 28 2 75 1 161 1 288 1 312 5 177 1 290 2 133 18 291 4 244 3 164 4 221 1 272 2 316 1 63 8 368 1 224 4 40 3 226 10 41 2 229 1 346 1 320 1 69 2 43 1 280 1 194 4 238 1 101 8 304 1 
354 1 242 1 106 1 2 1 28 2 75 1 288 2 312 6 290 3 133 16 291 4 244 3 164 4 221 1 272 2 63 7 368 1 224 4 40 3 226 9 41 3 229 1 69 3 43 1 194 4 101 8 304 1 
226 3 320 2 69 3 161 1 312 6 177 3 133 7 244 3 272 1 63 4 316 3 238 1 40 1 
354 1 242 1 106 1 2 1 28 2 75 1 161 1 288 1 312 4 177 1 290 2 133 18 291 4 244 3 164 4 221 1 272 2 316 1 63 8 368 1 224 4 40 3 226 10 41 2 229 1 346 1 320 1 69 1 43 1 194 4 238 1 101 8 304 1 
31 1 256 1 292 1 178 1 324 1 367 1 175 1 
256 1 1 1 31 1 360 1 361 1 292 1 178 1 81 1 324 1 367 1 111 1 175 1 
186 1 187 1 340 1 210 1 270 1 166 1 110 1 223 1 56 1 162 1 85 1 
186 1 256 1 187 1 56 1 333 1 162 1 31 2 260 1 121 1 178 1 166 1 270 1 261 1 324 2 223 1 379 1 85 1 225 1 
356 1 56 1 333 1 162 1 31 2 178 1 270 1 166 2 34 1 223 1 85 3 252 1 225 2 187 1 256 2 342 1 121 1 260 1 99 1 261 1 324 2 353 1 379 2 
356 1 55 1 56 2 333 1 162 2 31 2 178 1 270 1 166 2 34 1 223 2 85 3 252 1 225 2 187 1 256 2 342 1 279 1 260 1 99 1 261 1 324 2 353 1 379 2 
24 2 53 2 200 1 55 1 332 1 56 3 130 1 162 3 220 1 270 1 166 1 223 3 85 4 252 1 225 1 186 1 187 1 14 1 113 1 99 1 213 1 197 1 353 1 
186 1 14 1 187 1 24 2 53 2 25 1 200 1 55 1 130 1 56 3 332 1 162 3 220 1 99 1 166 1 270 1 223 3 197 1 353 1 252 1 85 4 225 1 
187 1 16 1 270 1 223 1 56 1 162 1 
186 2 187 2 16 1 104 1 114 1 26 1 296 1 56 6 116 1 162 7 29 1 146 1 202 1 166 2 270 3 236 1 376 1 247 1 223 7 85 3 225 1 
3 1 56 1 333 1 161 1 162 1 312 2 177 1 133 6 244 2 31 2 291 2 164 2 335 1 178 2 166 1 270 1 60 2 272 1 63 3 316 1 223 1 337 1 139 1 224 2 249 2 85 1 40 1 225 1 226 3 187 1 256 1 371 1 346 1 320 1 119 1 260 1 121 1 21 1 322 1 261 1 324 2 236 1 194 2 238 1 101 4 379 1 305 1 
24 3 53 3 25 1 200 1 130 1 56 1 332 2 162 1 220 1 246 1 136 2 7 2 37 1 223 1 169 1 87 1 85 2 186 1 14 1 66 2 143 1 68 1 95 1 173 2 349 1 197 1 23 1 127 1 
14 1 187 1 16 1 56 2 162 2 29 1 97 1 166 1 270 2 236 1 223 2 85 2 225 1 
103 1 186 1 340 1 187 1 55 1 56 4 162 4 210 1 270 1 166 1 236 1 223 4 85 1 
187 1 56 2 116 1 287 1 162 2 268 1 99 1 166 1 270 2 314 1 376 1 223 2 85 1 225 1 
186 1 187 1 270 1 149 1 217 1 309 1 223 1 56 1 250 1 162 1 
187 1 270 1 166 1 235 1 114 1 236 1 247 1 223 2 56 2 162 2 85 1 
103 1 186 1 340 1 187 2 56 4 162 5 146 1 202 1 99 1 210 1 166 2 270 2 236 1 247 1 223 5 85 3 
103 1 186 1 340 1 187 2 56 4 162 5 202 1 99 1 210 1 166 2 270 2 364 1 236 1 247 1 223 5 85 3 
186 1 256 1 187 1 56 1 333 1 279 1 162 1 31 2 260 1 178 1 166 1 270 1 261 1 324 2 223 1 379 1 85 1 225 1 
187 1 26 1 56 1 116 1 162 1 29 1 99 1 166 1 270 2 376 1 223 1 85 1 225 1 
178 1 35 1 158 1 338 1 153 1 
227 1 342 1 356 1 24 2 158 2 53 2 199 1 130 1 93 1 220 1 80 1 178 1 34 1 246 1 35 2 366 1 197 1 338 2 153 1 
31 1 256 1 298 1 324 1 35 1 158 1 207 1 190 1 153 1 
366 1 199 1 153 1 
110 1 54 1 141 1 311 1 
355 1 156 1 74 1 377 1 54 1 141 1 311 1 
74 1 205 1 58 1 
355 3 156 1 74 3 286 1 54 1 141 1 311 1 44 2 377 1 350 1 352 1 86 1 
355 2 156 1 74 2 377 1 54 1 141 1 100 1 311 1 184 1 
355 1 156 1 74 1 309 1 217 1 54 1 78 1 120 1 289 1 377 1 352 1 
355 1 156 1 74 1 377 1 54 1 141 1 352 1 
355 1 156 1 74 1 377 1 141 2 352 1 311 1 
331 1 355 2 156 2 74 2 54 1 141 1 145 1 212 1 377 2 352 1 
355 3 293 1 156 1 74 3 141 1 142 1 54 2 345 1 311 1 289 1 377 1 352 1 184 2 
355 2 156 1 91 1 74 2 309 2 217 1 54 1 141 1 311 1 78 1 149 1 377 1 124 1 352 1 184 1 
355 4 156 2 74 4 141 1 54 2 345 1 311 1 373 1 289 1 377 2 352 1 100 1 184 2 
355 1 156 1 74 1 377 1 54 1 141 1 352 1 311 1 
355 4 156 1 74 4 141 2 54 3 345 1 76 1 311 2 289 1 44 1 377 1 350 1 86 1 184 2 
355 2 156 1 129 1 74 2 54 1 141 1 77 1 311 1 377 1 181 1 352 1 184 1 
355 3 156 1 74 3 54 1 141 1 311 1 44 2 377 1 350 1 352 1 86 2 13 1 
301 1 54 2 276 1 132 2 
355 1 156 1 74 1 377 1 352 1 253 1 
355 2 156 1 74 2 377 1 54 1 141 1 142 1 352 1 311 1 184 1 
96 1 
355 1 156 1 74 1 377 1 54 1 141 1 352 1 311 1 
355 3 156 1 74 3 377 1 142 1 54 1 141 1 352 1 311 1 184 1 44 1 
54 1 345 1 76 1 289 1 
54 1 141 1 

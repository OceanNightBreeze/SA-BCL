#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 2 226 1 309 1 83 1 222 1 3 3 56 1 359 2 37 1 140 2 345 1 267 1 297 3 
60 1 205 5 226 1 83 1 357 1 324 1 3 9 232 1 359 2 6 1 140 2 142 1 236 1 144 2 267 2 115 2 309 4 371 2 222 1 224 1 158 1 247 1 124 1 56 3 37 6 105 2 345 1 297 9 
60 1 205 5 226 1 83 1 357 1 324 1 3 9 232 1 359 2 6 1 140 2 142 1 236 1 144 2 267 2 115 2 309 4 371 2 222 1 224 1 158 1 247 1 124 1 56 3 37 6 105 2 345 1 297 9 
60 1 205 6 226 1 83 1 357 1 324 1 3 10 232 1 359 2 6 1 140 2 142 1 236 1 144 2 267 2 115 2 309 5 371 2 222 1 224 1 158 1 247 1 124 1 56 4 37 7 105 2 345 1 297 10 
205 4 226 1 83 1 357 1 324 1 3 7 232 1 359 2 6 1 140 2 142 1 236 1 144 1 267 2 115 2 309 3 371 2 222 1 224 1 158 1 247 1 124 1 56 2 37 4 105 2 345 1 297 7 
60 1 205 3 226 1 309 2 371 1 83 1 222 1 3 4 158 1 56 1 359 1 37 3 140 1 105 1 142 1 144 2 115 1 297 4 
205 1 270 1 226 1 32 1 371 1 83 1 222 1 3 2 224 1 45 1 232 1 359 1 140 1 105 1 267 1 297 2 
205 5 60 1 226 1 83 1 3 9 359 2 140 2 214 1 236 1 142 1 144 2 267 1 115 1 309 4 371 1 222 1 158 1 247 1 56 3 196 1 37 7 345 1 105 1 297 9 
205 5 60 1 226 1 83 1 3 9 359 2 140 2 214 1 236 1 142 1 144 2 267 1 115 1 309 4 371 1 222 1 158 1 247 1 56 3 196 1 37 7 345 1 105 1 297 9 
80 1 43 1 242 1 192 1 354 1 109 1 284 1 54 1 223 1 295 1 68 1 231 1 204 1 27 1 
139 1 
68 2 43 1 361 1 242 2 139 1 1 1 265 1 53 1 
217 1 43 2 0 2 242 5 227 1 53 1 9 1 135 2 76 1 136 2 46 1 68 5 287 1 184 1 304 1 361 2 139 1 265 1 291 1 
139 1 265 1 75 1 
338 1 139 1 261 2 
80 2 231 2 235 1 192 2 109 2 204 1 223 2 295 2 
349 1 80 2 81 1 206 1 63 1 164 1 351 1 84 1 131 1 300 1 109 3 358 1 231 3 302 2 329 1 235 1 71 1 23 1 114 1 28 1 51 1 190 1 335 1 192 2 370 1 311 1 97 2 223 2 77 2 295 2 374 1 128 1 204 1 129 1 58 1 253 2 347 2 
80 1 231 1 192 1 354 1 109 1 204 1 54 1 223 1 27 1 295 1 
242 1 109 1 119 1 85 1 223 1 19 1 54 1 231 1 68 1 234 1 139 1 88 1 265 1 333 1 
80 1 242 2 192 1 109 1 119 1 85 1 223 1 19 1 54 1 295 1 68 2 231 1 139 1 88 1 265 1 
218 1 68 1 43 1 361 1 242 1 
68 2 43 1 361 1 360 1 242 2 139 1 265 1 53 1 
68 1 361 1 242 1 
80 1 192 1 96 1 109 2 223 2 295 1 231 2 235 2 331 1 
319 1 16 1 353 1 
81 1 206 1 335 1 164 1 131 1 97 1 109 1 231 1 302 1 374 1 235 1 376 1 128 1 129 1 58 1 347 1 
235 1 75 1 
80 3 231 3 235 1 192 3 180 1 109 3 223 3 295 1 
80 1 231 1 192 1 109 1 54 1 223 1 27 1 
80 1 231 1 192 1 331 1 96 1 109 1 54 1 223 1 295 1 
80 3 81 1 206 1 164 1 351 1 84 1 131 1 109 4 85 1 19 1 358 1 231 4 68 1 302 1 329 1 235 1 71 1 331 1 88 1 23 1 306 1 28 1 51 1 189 1 190 1 335 1 242 1 192 3 370 1 97 1 119 1 223 3 54 1 77 2 295 2 374 1 126 1 180 1 128 1 204 1 129 1 58 1 253 1 347 1 
80 1 231 2 102 1 234 1 235 1 192 1 180 1 109 2 223 2 
80 3 242 1 192 3 109 3 119 1 85 1 54 1 223 3 19 1 295 1 68 1 231 3 126 1 139 1 331 1 180 2 88 1 201 1 306 1 
319 1 80 2 192 2 353 1 109 2 223 2 295 1 231 2 180 1 331 1 
81 1 335 1 206 1 164 1 131 1 97 1 109 1 231 1 302 1 374 1 235 1 128 1 129 1 58 1 347 1 
81 1 206 1 182 1 131 1 97 1 109 1 231 1 302 1 374 1 235 1 363 1 128 1 129 1 58 1 347 1 
349 2 319 2 16 2 351 2 84 1 353 2 329 1 71 1 23 1 290 1 292 1 216 1 172 1 51 1 190 1 312 1 275 1 313 1 101 1 77 2 316 1 279 1 346 1 253 4 
80 1 231 1 192 1 119 1 109 1 54 1 223 1 147 1 
80 1 81 1 206 1 335 1 164 1 192 1 353 1 131 1 97 1 109 2 223 1 231 2 302 1 374 1 180 1 128 1 306 1 129 1 58 1 347 1 
80 4 231 5 102 1 234 1 235 1 192 4 331 1 180 2 35 1 306 1 109 5 93 1 223 5 295 1 
80 2 231 2 192 2 109 2 54 1 223 2 147 1 27 1 
179 1 315 1 255 1 
137 1 210 1 286 1 229 1 315 2 255 2 
315 1 255 1 
315 1 255 1 
210 1 229 1 
210 1 229 1 
210 1 229 1 
282 1 315 1 255 1 
282 1 315 1 255 1 
282 1 315 1 255 1 
257 1 315 1 255 1 
257 1 315 1 255 1 
257 1 315 1 255 1 
239 1 256 1 208 2 242 2 165 1 95 3 108 2 118 1 315 2 137 1 68 2 178 1 70 2 139 1 91 2 237 1 40 2 296 1 255 2 
80 2 61 1 82 1 208 1 109 2 68 1 231 2 70 1 235 1 91 1 30 1 242 1 153 1 192 2 95 1 272 1 118 1 223 2 315 1 342 1 179 1 39 1 40 1 255 1 
270 1 105 2 341 2 115 1 171 1 
371 1 105 1 115 1 
270 1 371 1 105 1 
270 1 105 3 281 1 341 1 115 2 171 1 
270 1 105 2 341 1 115 1 171 1 166 1 
82 1 43 4 0 1 130 1 261 3 135 1 136 1 46 2 68 5 5 1 361 1 138 1 139 2 89 1 265 1 290 1 291 3 145 2 292 1 30 1 338 1 242 5 220 1 339 1 53 1 275 1 9 1 276 2 342 1 248 1 159 2 346 1 
68 1 43 1 242 1 294 1 
43 2 0 1 227 1 130 1 261 4 135 1 136 1 68 3 46 2 5 1 138 1 139 3 265 1 290 1 291 3 145 2 292 1 30 1 338 2 242 3 220 1 275 1 276 2 248 1 159 1 346 1 
43 3 0 1 227 1 130 1 132 1 261 7 66 1 135 1 136 1 68 4 46 4 5 2 138 1 139 4 265 1 290 2 291 5 145 4 292 2 30 2 338 3 242 4 220 1 275 2 276 4 248 1 159 2 199 1 346 2 
111 1 
293 1 206 1 75 1 
206 1 221 1 
206 1 58 1 
293 2 81 1 206 3 107 1 58 1 116 1 
81 1 206 1 58 1 
206 1 325 1 
349 4 366 1 150 1 308 1 152 1 351 3 18 1 312 3 275 1 177 1 316 2 317 1 292 1 163 1 73 1 59 2 188 1 253 7 
42 1 349 16 351 15 84 1 355 1 18 5 87 1 5 3 329 1 23 1 332 1 290 3 292 4 188 2 366 1 29 1 150 1 51 1 308 1 152 2 312 10 274 4 275 4 77 2 177 2 123 1 316 5 346 3 317 2 161 3 163 1 59 3 253 31 41 1 
349 5 150 1 51 2 308 1 152 1 7 1 351 4 84 2 355 1 18 1 312 4 275 1 77 4 177 1 21 1 316 3 329 2 23 2 317 1 292 1 163 1 59 2 188 1 253 9 
349 4 366 1 150 1 308 1 152 1 351 3 18 1 312 3 275 1 177 1 316 2 317 1 292 1 59 2 163 1 188 1 253 7 
349 4 366 1 150 1 308 1 152 1 351 3 18 1 312 3 275 1 177 1 316 2 317 1 292 1 59 2 163 1 188 1 253 7 
148 1 206 1 337 1 181 1 131 1 174 2 356 1 97 1 3 1 195 1 86 1 302 1 359 1 262 2 127 1 140 1 128 1 129 1 58 1 267 2 347 1 26 2 297 1 
131 1 281 1 322 1 134 1 3 1 302 1 22 1 359 1 262 1 264 1 140 1 267 1 115 1 26 1 270 1 371 1 174 1 97 1 222 1 175 1 105 2 78 1 128 1 38 1 347 1 297 1 
205 1 226 1 83 1 131 1 281 1 322 1 3 2 302 1 22 1 359 1 262 1 264 1 140 1 267 1 115 1 26 1 365 1 270 1 371 1 174 1 97 1 222 1 175 1 37 1 105 2 78 1 128 1 38 1 347 1 297 2 
205 1 226 1 83 1 281 1 131 1 356 1 322 1 134 1 228 1 3 3 302 1 22 1 359 1 262 1 264 1 140 1 267 1 115 1 26 1 270 1 371 1 174 1 97 1 175 1 37 2 105 2 128 1 38 1 347 1 297 3 
205 1 226 1 83 1 131 1 281 1 322 1 134 1 228 1 3 2 302 1 22 1 262 1 264 1 267 1 26 1 115 1 270 1 371 1 174 1 97 1 37 2 105 2 128 1 347 1 297 2 
240 1 
0 1 321 1 131 1 135 1 85 1 136 1 86 1 46 2 231 1 47 2 234 1 139 2 88 1 291 2 333 1 94 1 149 1 336 1 337 1 338 2 242 5 340 1 155 1 53 3 97 2 156 1 9 1 54 1 344 1 249 1 106 2 202 2 203 1 58 1 254 2 347 2 62 1 206 1 261 2 109 1 212 2 19 1 68 5 302 2 361 6 265 1 305 2 307 4 220 1 34 1 119 1 223 1 122 2 128 1 129 2 
307 2 242 3 1 1 321 1 340 1 53 1 119 1 156 1 109 1 85 1 54 1 223 1 19 1 122 1 68 3 231 1 361 2 234 1 88 1 249 1 203 1 333 1 
321 1 1 1 109 1 85 1 19 1 231 1 68 3 361 1 234 1 139 1 88 1 265 1 333 1 307 3 242 3 340 1 53 1 156 1 119 1 223 1 54 1 249 1 106 1 203 1 
1 1 321 1 109 1 85 1 19 1 231 1 68 3 234 1 361 2 139 1 88 1 265 1 305 1 333 1 307 3 242 3 340 1 53 1 156 1 119 1 223 1 54 1 122 1 249 1 106 1 203 1 
0 1 1 1 321 1 85 1 135 1 136 1 231 1 46 1 4 1 47 2 234 1 139 5 88 1 291 1 333 1 242 5 338 2 340 1 53 3 155 1 156 1 9 1 194 1 54 1 249 1 106 4 202 2 203 1 14 1 254 2 62 1 109 1 110 1 19 1 212 2 68 5 361 7 265 5 305 4 307 6 173 1 119 1 223 1 122 4 
62 1 0 1 321 1 261 2 109 1 135 1 85 1 212 2 136 1 19 1 46 1 68 4 231 1 47 2 361 4 234 1 139 2 88 1 265 1 291 1 305 2 333 1 307 4 336 1 338 2 242 4 340 1 53 2 155 1 156 1 119 1 9 1 223 1 54 1 122 2 249 1 106 2 202 2 203 1 254 2 
62 1 0 1 321 1 109 1 110 1 85 1 135 1 212 2 19 1 136 1 46 1 231 1 68 4 47 2 4 1 361 4 234 1 139 1 88 1 265 1 291 1 305 2 333 1 307 4 338 2 242 4 340 1 53 2 155 1 156 1 119 1 9 1 223 1 54 1 122 2 249 1 106 2 202 2 203 1 14 1 254 2 
62 1 0 1 321 1 109 1 110 1 85 1 135 1 212 2 19 1 136 1 46 1 231 1 68 4 47 2 4 1 361 4 234 1 139 1 88 1 265 1 291 1 305 2 333 1 307 4 338 2 242 4 340 1 53 2 155 1 156 1 119 1 9 1 223 1 54 1 122 2 249 1 106 2 202 2 203 1 14 1 254 2 
0 1 321 1 261 2 109 1 110 1 85 1 135 1 19 1 136 1 46 1 231 1 68 4 328 1 288 1 233 2 361 4 234 1 139 1 88 1 265 1 291 1 305 2 333 1 307 4 242 4 340 1 53 2 155 1 156 1 119 1 9 1 223 1 54 1 122 2 343 1 103 2 249 1 106 2 202 2 203 1 254 2 
62 1 0 1 321 1 109 1 110 1 135 1 85 1 212 2 136 1 19 1 46 1 231 1 68 4 47 2 4 1 234 1 361 5 139 1 88 1 265 1 291 1 305 3 333 1 307 5 338 2 242 4 173 1 340 1 53 2 155 1 156 1 119 1 9 1 223 1 54 1 122 3 249 1 106 3 202 2 14 1 203 1 254 2 
62 1 0 1 321 1 109 1 110 1 135 1 85 1 212 2 136 1 19 1 46 1 231 1 68 4 47 2 4 1 234 1 361 5 139 1 88 1 265 1 291 1 305 3 333 1 307 5 338 2 242 4 173 1 340 1 53 2 155 1 156 1 119 1 9 1 223 1 54 1 122 3 249 1 106 3 202 2 14 1 203 1 254 2 
0 1 321 1 261 2 109 1 135 1 85 1 136 1 19 1 46 1 68 4 231 1 328 1 233 2 361 4 234 1 139 1 88 1 265 1 291 1 305 2 333 1 307 4 336 1 242 4 340 1 53 2 155 1 156 1 119 1 9 1 223 1 54 1 122 2 103 2 249 1 106 2 202 2 203 1 254 2 
80 1 349 1 206 3 351 1 131 2 84 2 260 1 300 1 134 1 109 1 283 1 86 1 231 1 302 8 329 2 71 2 49 1 90 1 23 2 114 2 365 1 28 1 51 2 190 2 337 1 192 1 245 1 97 7 273 1 101 1 223 1 77 4 198 1 180 1 128 2 129 2 58 2 347 8 253 2 
319 1 80 1 349 1 16 1 351 2 353 1 84 1 109 1 301 1 231 1 5 1 329 1 71 1 331 1 23 1 290 1 292 1 51 1 190 1 192 1 312 1 275 1 100 1 223 1 295 1 77 2 316 1 346 1 253 3 
319 1 349 3 16 1 351 3 353 1 84 1 329 1 71 1 235 2 23 1 292 1 51 1 150 1 308 1 190 1 75 1 312 2 275 1 101 1 77 2 177 1 316 2 317 1 163 1 59 1 253 6 
349 8 42 1 319 4 16 11 351 6 84 2 353 11 300 1 18 1 301 1 112 1 5 2 329 2 235 1 71 2 23 2 290 1 292 2 29 1 28 1 269 1 51 2 190 1 98 1 312 2 274 3 275 1 193 1 77 4 316 1 346 2 161 3 253 14 
319 1 80 1 349 1 81 1 206 1 164 1 351 1 131 1 84 1 300 1 109 2 67 1 301 1 231 2 302 1 329 1 235 1 71 1 23 1 306 1 28 1 51 1 335 1 190 1 368 1 192 1 97 1 223 1 77 2 374 1 57 1 376 1 180 1 128 1 129 1 58 1 347 1 253 2 
80 1 319 7 81 2 84 3 131 2 134 1 231 3 5 2 329 3 235 2 290 2 292 3 150 1 51 3 190 3 335 2 192 1 97 3 8 2 160 1 346 2 59 1 163 1 58 2 347 3 253 20 349 10 206 2 164 2 16 7 351 10 353 7 300 1 18 4 109 3 358 2 301 1 302 3 71 3 23 3 215 2 306 1 25 2 28 1 308 1 312 8 275 3 223 1 77 6 177 1 176 1 277 1 316 4 374 2 278 2 180 1 128 2 317 1 129 1 
319 1 349 2 51 1 190 1 16 1 353 1 84 1 312 1 18 1 101 1 77 2 329 1 71 1 23 1 346 1 216 1 292 1 253 2 
319 1 51 1 190 1 16 1 351 2 353 1 84 1 312 1 313 1 275 1 101 1 77 2 316 1 329 1 71 1 23 1 290 1 253 2 
319 2 349 2 51 1 190 1 16 2 351 2 353 2 84 1 312 2 18 1 275 1 101 1 77 2 316 1 5 1 329 1 71 1 23 1 346 1 290 1 292 1 253 4 
319 1 349 2 51 1 190 1 16 1 353 1 84 1 312 1 18 1 273 1 77 2 329 1 71 1 23 1 346 1 216 1 292 1 253 2 
319 1 51 1 190 1 16 1 351 2 353 1 84 1 312 1 273 1 313 1 275 1 77 2 316 1 329 1 71 1 23 1 290 1 253 2 
319 2 349 2 51 1 190 1 16 2 351 2 353 2 84 1 312 2 18 1 273 1 275 1 77 2 316 1 5 1 329 1 71 1 23 1 346 1 290 1 292 1 253 4 
319 2 349 2 51 1 190 1 16 2 351 2 353 2 84 1 312 2 18 1 275 1 77 2 316 1 5 1 329 1 71 1 23 1 346 1 290 1 292 1 253 4 
349 1 81 1 206 1 164 1 351 1 131 1 84 1 300 1 109 1 358 1 231 1 302 1 329 1 235 1 71 1 23 1 28 1 51 1 335 1 190 1 97 1 77 2 374 1 128 1 129 1 58 1 253 2 347 1 
349 1 81 1 206 1 182 1 351 1 131 1 84 1 300 1 109 1 231 1 302 1 329 1 235 1 71 1 23 1 186 1 363 1 28 1 51 1 190 1 97 1 77 2 374 1 128 1 129 1 58 1 253 2 347 1 
319 2 349 2 51 1 190 1 16 2 351 2 353 2 84 1 312 2 18 1 275 1 77 2 301 1 316 1 5 1 329 1 71 1 23 1 346 1 290 1 292 1 253 4 
319 2 349 2 81 1 206 1 164 1 16 2 351 2 353 2 131 1 84 1 18 1 109 1 358 1 231 1 302 1 5 1 329 1 71 1 23 1 290 1 292 1 365 1 51 1 335 1 190 1 312 2 8 1 97 1 275 1 77 2 316 1 374 1 346 1 128 1 58 1 253 4 347 1 
80 1 349 2 319 1 16 1 351 1 84 1 353 1 18 1 109 1 301 1 231 1 5 1 329 1 71 1 331 1 23 1 290 1 292 1 117 1 51 1 190 1 192 1 312 1 275 1 223 1 295 1 77 2 346 1 253 3 
349 9 42 1 351 10 84 2 18 3 183 1 5 3 329 2 92 1 23 2 290 3 292 3 29 1 51 2 271 1 7 1 243 1 312 6 246 2 274 2 275 3 157 1 77 4 11 2 316 3 12 1 346 3 161 1 253 19 298 1 
349 14 225 1 351 12 84 3 355 2 18 2 133 1 183 1 5 3 329 3 330 1 92 1 141 1 23 3 290 2 292 3 72 1 29 2 51 3 7 1 243 2 312 4 275 2 246 4 274 2 157 1 77 6 11 1 316 2 377 1 346 3 161 2 253 26 298 2 
349 20 42 1 225 1 350 1 351 21 84 3 355 1 18 4 133 1 183 1 5 4 329 3 330 1 92 1 141 1 23 3 290 4 292 5 72 1 29 3 150 1 51 3 308 1 7 1 243 1 312 8 246 4 274 4 275 5 157 1 77 6 177 1 11 1 316 4 12 1 377 1 346 4 317 1 161 3 59 1 163 1 253 41 298 2 
349 20 42 1 225 1 350 1 351 18 84 4 355 2 18 3 133 1 183 1 5 4 329 4 330 1 92 1 141 1 23 4 290 3 292 5 72 1 29 3 150 1 51 4 308 1 7 1 243 1 312 7 246 4 274 4 275 4 157 1 77 8 177 1 11 1 316 4 12 1 377 1 346 4 317 1 161 3 59 1 163 1 253 38 298 2 
349 27 42 2 225 1 351 25 84 2 355 1 18 7 133 1 183 1 112 2 5 7 329 2 330 1 92 1 141 1 23 2 290 7 292 8 72 1 29 2 150 1 51 2 308 1 7 1 243 1 312 14 246 4 274 4 275 8 157 1 77 4 177 1 11 1 316 7 377 1 346 7 317 1 161 4 59 1 163 1 253 52 298 1 
137 1 70 1 208 1 165 1 91 1 364 1 237 1 40 1 315 1 255 1 
179 1 272 1 
36 1 70 1 208 1 154 1 167 1 91 1 40 1 315 1 255 1 
256 1 242 1 208 1 165 1 95 2 108 1 118 1 315 1 137 1 68 1 178 1 70 1 139 1 91 1 237 1 40 1 296 1 255 1 
256 1 242 1 208 1 165 1 95 2 108 1 118 1 315 1 137 1 68 1 178 1 70 1 139 1 91 1 237 1 40 1 296 1 255 1 
256 1 242 1 208 1 165 1 95 2 108 1 118 1 315 1 137 1 68 1 178 1 70 1 139 1 91 1 237 1 40 1 296 1 255 1 
378 1 282 1 286 1 
378 1 282 1 286 1 
241 1 257 1 
241 1 257 1 286 1 
153 1 39 1 
320 1 80 2 43 1 61 1 82 1 208 1 108 1 109 2 231 2 68 1 70 1 235 1 91 1 30 1 242 1 153 1 95 1 192 2 272 1 223 2 315 1 342 1 179 1 39 1 40 1 296 1 255 1 
378 1 282 1 
241 1 257 1 286 1 
349 1 206 1 351 1 131 1 259 1 84 1 260 1 300 1 109 2 283 1 301 1 231 2 302 2 329 1 71 1 23 1 114 2 28 1 51 1 190 1 97 2 120 1 314 1 223 2 77 2 197 1 128 1 250 1 58 1 347 2 253 2 
206 1 337 1 31 1 352 1 131 1 97 1 195 1 86 1 302 1 262 1 128 1 129 1 58 1 347 1 
270 1 31 1 371 1 281 1 131 1 372 1 97 1 322 1 134 1 55 1 302 1 22 1 262 1 105 2 128 1 38 1 115 1 347 1 
270 1 365 1 31 1 371 1 281 1 131 1 372 1 97 2 322 1 134 1 55 1 302 2 22 1 262 1 105 2 128 1 38 1 115 1 347 2 
270 1 371 1 219 1 281 1 131 1 97 1 322 1 134 1 55 1 302 1 22 1 262 1 105 2 128 1 38 1 115 1 347 1 
258 1 
217 1 0 1 9 1 135 1 136 1 46 1 304 1 139 1 265 1 291 1 
338 5 261 10 275 2 276 5 69 1 46 5 5 2 139 5 13 2 346 2 215 1 290 2 291 5 145 5 292 2 
68 1 242 1 361 1 139 1 265 1 53 1 
206 1 0 2 227 1 131 1 135 2 136 2 230 2 86 1 46 2 68 3 302 4 361 4 291 2 170 1 94 2 151 1 337 1 242 3 220 2 34 1 53 2 97 4 9 1 344 1 200 1 128 1 129 2 58 1 347 4 
217 1 46 1 304 1 139 1 265 1 291 1 75 1 
62 1 0 1 261 1 135 1 136 1 212 1 46 1 68 1 47 1 361 1 139 2 265 1 291 1 338 1 242 1 53 1 9 1 
81 3 0 4 131 3 135 4 85 2 136 4 325 2 230 1 46 8 5 2 48 2 139 8 291 9 290 2 187 2 145 6 146 1 292 2 94 1 293 2 151 1 242 5 338 6 53 3 97 3 9 4 104 1 13 2 346 2 58 3 347 3 206 10 107 1 209 2 261 12 68 5 69 2 302 3 304 1 213 2 303 2 361 5 265 2 362 2 215 2 365 1 217 1 220 2 221 3 275 2 276 6 128 4 129 1 318 1 
225 1 0 2 261 6 133 1 135 2 136 2 327 1 69 1 68 1 46 5 5 2 361 1 139 5 330 1 141 1 265 2 291 8 290 2 145 5 292 2 72 1 94 1 29 1 242 1 338 3 220 1 244 1 53 1 274 1 275 2 9 2 276 5 13 2 346 2 161 1 
80 1 0 1 354 1 109 1 135 1 284 1 136 1 69 1 231 1 68 1 46 2 291 2 292 2 27 1 268 1 150 1 242 1 192 1 275 1 9 1 54 1 223 1 295 1 177 1 13 2 317 1 14 1 204 1 
80 2 81 1 206 1 164 1 351 1 84 1 131 1 109 3 358 1 231 3 302 1 329 1 235 1 71 1 23 1 28 1 51 1 335 1 190 1 192 2 370 1 97 1 223 2 77 2 295 2 374 1 128 1 204 1 129 1 58 1 253 1 347 1 
94 1 0 1 338 2 220 1 261 4 9 1 276 2 135 1 136 1 46 2 139 4 265 2 291 1 145 2 59 1 
70 1 165 1 168 1 91 1 39 1 
70 1 33 1 91 1 
70 1 33 1 91 1 
70 1 33 1 91 1 
70 1 91 1 24 1 
70 1 91 1 24 1 
70 1 91 1 24 1 
70 1 91 1 
315 1 255 1 
349 5 51 1 150 1 7 1 351 5 84 1 312 5 18 2 275 2 77 2 177 2 316 3 329 1 23 1 317 2 292 2 253 10 268 1 
349 2 51 1 7 1 84 1 18 1 312 1 77 2 329 1 23 1 346 1 292 1 253 2 
349 2 51 1 7 1 351 2 84 1 312 2 18 1 275 1 77 2 316 1 5 1 329 1 23 1 346 1 290 1 292 1 253 4 
349 1 51 3 7 1 351 2 84 3 355 1 312 2 18 1 77 6 177 1 373 1 316 1 329 3 12 1 23 3 317 1 253 3 
349 16 42 1 351 18 84 5 355 2 18 5 5 3 329 5 23 5 332 1 290 3 292 5 29 1 150 2 51 5 308 1 7 1 312 12 274 4 275 5 77 10 177 3 123 1 373 1 316 7 12 1 346 3 317 3 161 3 59 1 163 1 162 1 253 34 41 1 
349 4 150 1 51 2 308 1 351 4 84 2 355 1 18 1 312 3 275 1 77 4 177 1 316 2 329 2 23 2 317 1 292 1 59 1 163 1 253 8 
349 3 150 1 308 1 351 3 75 1 312 2 275 1 177 1 316 2 317 1 292 1 59 1 163 1 253 6 
349 2 51 1 351 2 84 1 312 2 18 1 275 1 77 2 316 1 5 1 329 1 23 1 346 1 290 1 292 1 162 1 253 4 
29 1 349 3 42 1 351 4 18 1 312 2 275 1 274 2 316 1 5 1 346 1 290 1 161 1 292 1 253 7 
42 1 349 11 351 12 84 2 355 2 18 4 112 1 5 2 329 2 23 2 290 2 292 3 269 1 150 1 51 2 308 1 312 9 274 2 275 3 77 4 177 2 373 1 316 5 346 2 317 2 161 2 59 1 163 1 253 23 
351 1 274 1 253 1 
349 1 161 1 253 1 
349 3 51 1 351 3 84 1 18 1 312 3 275 1 77 2 316 2 5 1 329 1 23 1 346 1 215 1 290 1 292 1 162 1 253 6 
349 6 225 1 351 6 84 1 18 1 133 1 5 2 329 1 330 1 23 1 141 1 290 2 292 2 72 1 29 1 51 1 7 1 312 2 274 1 275 2 77 2 316 1 346 2 161 1 253 12 
349 3 150 1 351 3 312 2 18 1 275 1 177 1 316 1 317 1 292 1 253 6 
349 1 51 1 308 1 351 2 84 1 355 1 18 1 312 2 77 2 177 1 373 1 316 1 329 1 23 1 317 1 163 1 253 3 
349 4 351 4 84 1 329 1 23 1 292 1 72 1 29 1 51 1 150 1 308 1 7 1 312 2 275 1 274 1 77 2 177 1 316 2 161 1 317 1 59 1 163 1 253 8 
349 6 42 1 351 5 84 2 18 1 5 1 329 2 23 2 292 2 72 1 29 1 150 1 51 2 308 1 7 1 312 3 275 1 274 2 77 4 177 1 316 2 346 1 317 1 161 1 59 1 163 1 162 1 253 11 
349 9 225 1 351 10 84 3 355 1 18 1 133 1 5 2 329 3 330 1 23 3 141 1 290 2 292 3 72 1 29 1 150 1 51 3 308 1 7 1 312 4 274 1 275 3 77 6 177 1 316 3 346 2 317 1 161 1 59 1 163 1 162 1 253 19 
349 10 225 1 351 7 84 3 355 1 18 2 133 1 5 2 329 3 330 1 23 3 141 1 290 1 292 3 72 1 29 1 150 1 51 3 308 1 7 1 312 5 274 1 275 2 77 6 177 1 316 3 346 2 317 1 161 1 59 1 163 1 162 1 253 17 
349 4 351 4 84 1 329 1 23 1 292 1 72 1 29 1 51 1 150 1 308 1 7 1 312 2 275 1 274 1 77 2 177 1 316 2 161 1 317 1 59 1 163 1 253 8 
349 6 225 1 351 6 84 1 18 1 133 1 5 2 329 1 330 1 23 1 141 1 290 2 292 2 72 1 29 1 51 1 7 1 312 2 274 1 275 2 77 2 316 1 346 2 161 1 253 12 
349 10 225 1 351 8 84 4 355 2 18 2 133 1 5 2 329 4 330 1 141 1 23 4 290 1 292 3 72 1 29 1 150 1 51 4 308 1 7 1 312 5 274 1 275 2 77 8 177 1 316 3 346 2 317 1 161 1 59 1 163 1 162 1 253 18 
349 9 225 1 351 7 84 4 355 2 18 3 133 1 5 3 329 4 330 1 141 1 23 4 290 2 292 3 72 1 29 1 51 4 7 1 312 6 274 1 275 2 77 8 316 3 12 1 346 3 161 1 253 16 
349 3 150 1 308 1 351 4 312 6 18 3 275 1 177 3 316 3 317 3 292 1 163 2 253 7 
349 10 225 1 351 8 84 4 355 2 18 1 133 1 5 2 329 4 330 1 141 1 23 4 290 1 292 3 72 1 29 1 150 1 51 4 308 1 7 1 312 4 274 1 275 2 77 8 177 1 316 3 12 1 346 2 317 1 161 1 59 1 163 1 253 18 
231 1 102 1 234 1 235 1 109 1 223 1 50 1 
299 1 207 1 191 1 109 1 223 1 231 1 102 1 113 1 234 1 235 1 238 1 50 1 
348 1 365 1 337 1 206 1 131 1 97 4 86 1 302 4 289 1 128 1 129 1 58 1 347 4 
81 1 206 1 369 1 131 1 74 1 97 2 230 1 277 1 302 2 375 1 266 1 128 2 58 1 347 2 
270 1 302 1 371 1 105 1 131 1 128 1 322 1 97 1 129 1 347 1 
365 1 206 1 131 1 97 2 260 1 134 1 302 2 197 1 128 1 58 1 347 2 
365 1 337 1 206 3 131 2 97 4 260 1 230 1 86 1 302 5 289 1 49 1 90 1 128 2 129 1 58 2 347 5 
365 1 337 1 206 3 131 2 97 4 260 1 230 1 86 1 302 5 125 1 289 1 49 1 128 2 129 1 58 2 347 5 
86 1 302 1 206 1 337 1 131 1 128 1 75 1 97 1 129 1 58 1 347 1 
80 1 81 1 206 1 335 1 192 1 131 1 97 1 109 2 223 1 231 2 302 1 374 1 235 1 180 1 128 1 129 1 58 1 347 1 
80 1 81 2 206 3 335 1 192 2 131 1 97 1 119 1 109 2 325 1 54 1 223 2 230 1 231 2 302 1 303 1 374 1 235 1 88 1 180 1 128 1 58 2 347 1 
348 1 80 1 81 2 206 3 131 1 109 2 325 1 230 1 231 2 302 2 303 1 235 1 88 1 363 1 192 2 97 2 119 1 223 2 54 1 374 1 180 1 128 1 58 2 347 2 
348 1 81 1 206 4 131 1 64 1 85 1 325 1 230 1 68 2 302 3 303 1 361 1 139 1 265 1 293 1 242 2 221 1 52 1 97 3 128 1 129 1 58 1 347 3 
348 1 293 1 81 1 206 4 242 2 221 1 131 1 97 3 85 1 325 1 230 1 68 2 302 3 303 1 361 1 139 1 265 1 128 1 362 1 129 1 58 1 347 3 
302 1 198 1 131 1 128 1 97 1 347 1 
365 1 81 1 206 3 107 1 369 1 245 1 131 2 74 1 260 1 97 6 134 1 326 1 302 7 198 1 49 1 90 1 128 3 114 1 129 2 58 2 347 7 
319 1 80 1 81 1 84 2 131 1 231 2 329 2 235 2 292 1 51 2 150 1 335 1 190 2 192 1 8 1 97 1 250 1 58 1 163 1 59 1 347 1 253 6 349 3 206 1 164 1 16 1 351 3 353 1 109 2 358 1 301 1 302 1 71 2 23 2 25 1 365 1 308 1 312 2 275 1 223 1 77 4 177 1 316 2 374 1 180 1 128 1 317 1 
43 1 206 2 0 2 209 1 135 2 85 1 136 2 46 1 68 3 302 1 304 1 213 1 361 2 139 1 48 1 265 1 291 1 362 1 217 1 293 1 151 1 242 3 221 1 53 1 97 1 9 2 129 1 347 1 
365 1 293 1 81 1 206 2 107 1 131 1 97 2 302 2 104 1 198 1 128 2 58 1 347 2 
80 1 81 1 206 1 192 1 131 1 97 1 109 2 223 1 231 2 302 1 374 1 235 1 180 1 128 1 363 1 129 1 58 1 347 1 
81 1 206 1 107 1 369 1 131 1 74 1 97 1 326 1 230 1 302 1 128 2 58 1 347 1 
259 1 109 1 211 1 120 1 314 1 223 1 20 1 231 1 334 1 
323 1 44 1 334 1 
20 1 235 1 99 1 211 1 334 1 
43 1 242 2 119 1 323 1 211 2 99 2 85 1 44 1 54 1 19 1 20 2 68 2 126 1 235 1 139 1 88 1 265 1 169 1 334 1 
205 1 359 1 226 1 140 1 83 1 222 1 3 1 297 1 
205 3 367 1 226 2 309 1 83 2 285 1 3 4 232 1 56 1 359 1 37 2 140 1 252 1 297 4 
205 1 196 1 359 1 37 1 226 1 140 1 83 1 143 1 222 1 15 1 3 2 297 2 
205 1 367 2 226 1 83 1 222 1 285 1 3 3 232 2 359 1 140 1 251 1 297 3 
205 2 10 2 2 1 121 1 
359 1 140 1 65 1 222 1 3 1 297 1 
205 1 359 1 37 1 226 1 140 1 83 1 236 1 222 1 3 2 297 2 
280 1 
205 1 359 1 226 1 140 1 83 1 222 1 3 1 297 1 
205 1 226 1 83 1 75 1 
205 1 359 1 226 1 140 1 83 1 3 1 297 1 
174 1 267 1 3 1 
205 1 367 1 226 1 17 1 83 1 222 1 285 1 3 3 232 2 359 1 140 1 297 3 
205 1 359 1 37 1 226 1 140 1 83 1 144 1 3 2 297 2 
205 1 309 1 371 1 222 1 3 1 359 1 140 1 105 1 142 1 115 1 297 1 
205 1 359 1 140 1 83 1 222 1 3 1 297 1 
359 1 226 1 140 1 83 2 222 1 3 1 297 1 
205 1 359 2 263 1 185 1 140 2 83 1 222 1 79 1 3 2 297 2 
205 2 226 1 309 1 83 1 222 1 3 3 247 1 56 1 359 1 37 2 140 1 236 1 297 3 
205 1 270 1 226 1 371 1 83 1 310 1 281 1 222 1 3 2 359 1 37 1 140 1 105 2 115 1 297 2 
60 1 205 2 226 1 309 1 83 1 222 1 3 4 56 1 359 2 37 2 140 2 144 1 297 4 
205 1 232 1 359 1 37 1 226 1 140 1 83 1 236 1 222 1 3 3 297 3 
205 1 56 1 309 1 252 1 
205 1 83 1 

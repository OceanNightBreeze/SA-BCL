#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (65,109,198) 29 316 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (65,109,198) 29 316 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (65,109,198) 29 (12,31,264) 257 182 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (65,109,198) 29 316 115 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (65,109,198) 29 316 115 193 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
243 1 99 9 55 1 127 1 248 2 352 1 87 3 231 1 90 2 91 5 176 1 133 2 312 1 234 1 41 9 71 2 252 2 135 1 236 2 272 4 184 1 78 1 345 6 240 2 259 1 187 1 241 1 346 1 
243 1 99 9 55 1 127 1 248 2 352 1 87 3 231 1 90 2 91 5 176 1 133 2 312 1 234 1 41 9 252 2 71 2 135 1 236 2 272 4 184 1 78 1 345 6 240 2 259 1 187 1 241 1 346 1 
243 1 99 10 55 1 127 1 248 2 352 1 87 4 231 1 90 2 91 6 176 1 133 2 312 1 234 1 41 10 252 2 71 2 135 1 236 2 272 5 184 1 78 1 345 7 240 2 259 1 187 1 241 1 346 1 
243 1 99 7 55 1 127 1 248 2 352 1 87 2 231 1 90 2 91 4 176 1 133 2 234 1 41 7 252 2 71 1 135 1 236 2 272 3 184 1 78 1 345 4 240 2 259 1 187 1 241 1 346 1 
90 1 91 3 99 4 133 1 312 1 55 1 41 4 71 2 236 1 127 1 248 1 272 2 184 1 87 1 231 1 345 3 240 1 241 1 
90 1 91 1 99 2 299 1 41 2 252 1 302 1 236 1 127 1 248 1 184 1 10 1 231 1 240 1 187 1 346 1 
90 2 91 2 99 3 41 3 252 1 236 2 127 1 272 1 184 1 78 1 87 1 231 1 345 1 
215 1 99 9 55 1 127 1 248 1 87 3 231 1 34 1 90 2 91 5 176 1 133 1 312 1 234 1 41 9 252 1 71 2 236 2 272 4 184 1 78 1 345 7 240 1 241 1 
215 1 99 9 55 1 127 1 248 1 87 3 231 1 34 1 90 2 91 5 176 1 133 1 312 1 234 1 41 9 252 1 71 2 236 2 272 4 184 1 78 1 345 7 240 1 241 1 
290 1 339 1 322 1 
290 1 297 2 174 1 
198 2 61 1 69 1 171 2 65 2 109 2 22 2 315 2 
167 2 143 1 169 2 123 1 171 2 101 1 194 1 220 1 3 1 172 1 22 2 300 1 196 1 328 1 225 1 198 2 61 1 351 1 330 1 65 2 109 3 289 2 205 1 267 2 69 1 269 1 179 1 315 3 253 1 293 1 77 1 162 1 17 1 273 1 45 1 47 1 296 2 
198 1 61 1 171 1 32 1 274 1 72 1 65 1 109 1 22 1 315 1 
198 1 29 1 264 1 
290 1 146 2 171 1 339 1 72 1 22 1 315 1 235 1 60 1 198 1 31 2 142 1 65 1 109 1 12 1 
149 1 244 1 146 1 31 1 227 1 
290 1 244 1 146 2 31 2 227 1 339 1 357 1 301 1 
244 1 146 1 31 1 
146 1 171 1 72 1 22 1 315 1 116 1 61 1 198 1 227 1 31 1 32 1 274 1 65 1 109 1 
290 1 
290 1 244 1 128 1 146 2 31 2 227 1 339 1 301 1 
275 1 276 2 290 1 81 1 244 2 146 5 53 1 57 1 2 1 339 1 106 1 301 1 161 2 254 1 64 1 227 2 31 5 118 2 250 1 
69 1 322 1 
348 1 69 2 171 1 22 1 315 2 198 2 9 1 65 1 109 2 
30 1 124 1 185 1 
267 1 169 1 69 1 269 1 101 1 221 1 220 1 172 1 315 1 300 1 328 1 293 1 351 1 47 1 109 1 289 1 
112 1 267 1 169 1 278 1 269 1 124 1 101 1 220 1 172 1 22 1 300 1 315 2 328 1 293 1 198 1 351 1 47 1 65 1 109 2 289 1 
112 1 92 1 278 2 348 1 69 1 171 1 22 4 315 4 316 1 198 5 29 1 65 4 109 4 80 1 
198 2 38 1 274 1 72 1 65 2 109 2 22 2 315 2 
198 3 69 1 278 1 171 1 65 3 109 3 22 3 315 3 
198 1 274 1 72 1 65 1 109 1 22 1 315 1 
198 1 348 1 9 1 171 1 72 1 65 1 109 1 22 1 315 1 
167 1 143 1 19 1 169 1 348 1 278 1 123 1 146 1 171 2 101 1 194 1 220 1 3 1 172 1 284 1 22 3 300 1 196 1 328 1 60 1 198 3 61 1 351 1 330 1 31 1 65 3 12 1 109 4 289 1 205 1 112 1 267 1 69 1 269 1 72 1 315 4 253 1 235 1 293 1 17 1 273 1 142 1 47 1 296 2 
316 1 198 2 29 1 278 1 65 1 109 1 22 1 315 1 
112 1 290 1 19 1 348 1 278 2 146 1 171 1 72 1 22 3 315 3 235 1 60 1 198 3 31 1 142 1 65 3 109 3 12 1 334 1 
278 1 348 1 171 1 124 1 22 2 315 2 198 2 30 1 65 2 109 2 
267 1 169 1 69 1 269 1 101 1 220 1 172 1 315 1 300 1 328 1 293 1 351 1 47 1 109 1 289 1 
267 1 169 1 93 1 69 1 101 1 220 1 172 1 315 1 300 1 328 1 293 1 129 1 47 1 109 1 289 1 
143 1 167 4 123 1 124 2 56 1 194 1 23 1 3 2 196 1 225 2 30 2 152 1 287 1 11 1 13 1 94 1 40 1 183 1 253 1 17 1 255 1 185 2 163 1 296 2 
198 1 38 1 72 1 65 1 109 1 22 1 315 1 235 1 
223 1 26 1 
223 1 26 1 
6 1 114 1 
6 1 114 1 
6 1 114 1 
223 1 26 1 332 1 
223 1 26 1 332 1 
223 1 26 1 139 1 
223 2 26 2 317 1 6 1 114 1 120 1 
223 1 26 1 332 1 
223 1 26 1 318 1 
223 1 26 1 318 1 
223 1 26 1 318 1 
50 1 146 1 22 2 148 1 223 1 59 1 26 1 198 2 31 1 230 1 173 1 65 2 109 2 69 1 270 1 291 1 338 1 39 1 73 1 315 2 139 1 186 1 321 1 213 1 
290 1 356 1 349 1 324 1 146 2 338 2 148 2 59 2 223 2 26 2 211 1 7 1 31 2 331 1 86 2 173 1 321 3 120 1 213 2 
248 1 133 1 240 1 
302 1 248 1 240 1 
341 1 302 1 137 1 248 3 360 1 133 2 
341 1 302 1 248 2 360 1 133 1 228 1 
341 1 302 1 248 2 133 1 360 2 
276 1 297 3 242 2 122 1 244 1 146 5 21 1 219 1 195 1 106 2 301 1 303 1 152 1 64 1 31 5 227 4 250 3 11 1 174 1 309 2 290 2 337 1 37 2 94 1 39 1 40 1 339 1 73 1 161 1 118 1 258 1 186 1 
276 2 297 9 20 1 244 6 146 9 21 2 2 1 219 2 195 1 106 6 301 1 149 5 152 3 31 9 227 7 64 1 250 8 155 1 11 3 174 3 309 6 175 1 353 5 290 5 37 6 94 3 40 3 339 1 271 1 76 1 161 2 118 2 258 3 186 4 189 1 
276 1 242 1 297 4 122 1 146 3 21 1 2 1 219 1 106 2 303 1 152 1 227 2 31 3 250 3 11 1 174 2 309 2 290 3 37 2 94 1 339 1 40 1 161 1 118 1 186 1 258 1 
276 1 297 7 242 2 20 1 122 1 146 4 21 1 2 1 219 1 106 4 303 1 152 2 31 4 227 3 250 5 11 2 174 3 309 4 175 1 290 4 37 4 94 2 339 1 40 2 271 1 161 1 118 1 186 2 258 2 
151 1 47 1 322 1 
178 1 47 1 
313 1 
220 1 47 1 172 1 
88 1 47 1 
47 1 172 1 
335 1 151 2 220 1 18 1 47 3 172 1 
167 7 336 1 268 1 40 1 181 1 3 3 105 1 104 2 43 1 225 4 97 1 343 1 306 1 163 3 11 1 13 2 354 1 
167 7 336 1 268 1 40 1 181 1 3 3 105 1 104 2 43 1 225 4 97 1 343 1 306 1 163 3 11 1 13 2 354 1 
336 1 167 7 268 1 40 1 181 1 3 3 105 1 104 2 43 1 225 4 97 1 343 1 306 1 163 3 307 1 11 1 13 2 354 1 
143 1 167 31 277 1 123 1 261 4 170 1 3 15 104 3 105 2 196 1 225 16 304 1 152 3 286 1 306 2 11 4 202 3 354 1 13 5 336 1 268 5 208 1 94 3 40 4 181 1 43 2 253 1 343 1 97 2 361 1 163 10 79 1 258 3 296 2 
336 1 167 9 143 2 268 1 208 1 123 2 40 1 181 1 3 4 105 1 104 2 42 1 43 1 253 2 196 2 225 5 97 1 343 1 306 1 163 4 201 1 11 1 296 4 13 3 
169 1 121 1 99 2 24 1 300 1 4 1 328 1 302 1 127 1 63 1 248 2 156 1 231 1 130 1 289 1 333 1 90 1 91 1 267 1 133 1 41 2 252 1 236 1 137 1 184 1 46 1 345 1 238 1 240 1 323 1 
169 1 121 1 99 3 218 1 24 1 300 1 4 1 328 1 302 1 127 1 248 2 156 1 231 1 289 1 333 1 90 1 91 1 267 1 133 1 233 1 41 3 252 1 314 1 137 1 236 1 46 1 345 2 238 1 240 1 323 1 
169 1 99 2 218 1 24 1 300 1 4 1 328 1 302 1 127 1 248 2 156 1 231 1 289 1 333 1 91 1 267 1 133 1 41 2 252 1 314 1 137 1 345 2 238 1 240 1 323 1 
90 1 267 1 169 1 99 1 180 1 233 1 41 1 252 2 172 1 300 1 4 2 327 1 328 1 236 1 293 1 249 1 47 1 288 1 289 1 111 1 35 1 333 2 323 2 
169 1 121 1 99 1 24 1 300 1 4 1 328 1 302 1 63 1 248 2 156 1 289 1 333 1 90 1 267 1 133 1 41 1 252 1 314 1 236 1 137 1 184 1 46 1 238 1 240 1 323 1 
136 1 
276 1 169 2 192 1 262 1 244 2 146 2 219 1 264 1 172 1 300 1 106 1 301 1 327 1 328 1 198 1 29 1 64 1 31 2 250 1 289 2 288 1 267 2 292 1 182 1 358 1 293 2 161 1 117 1 118 1 257 1 47 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 244 1 128 1 146 2 31 2 257 1 264 1 182 1 301 1 
276 1 358 1 161 1 198 1 29 1 262 1 118 1 64 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
358 1 198 1 29 1 262 1 146 1 31 1 257 1 264 1 182 1 
276 1 358 1 161 1 198 1 29 1 262 1 118 1 64 1 146 1 31 1 257 1 264 1 182 1 
167 6 143 1 336 1 69 2 123 1 124 1 40 1 194 1 181 1 3 3 104 1 253 1 196 1 43 1 225 3 30 1 97 1 255 1 17 1 343 1 185 1 163 2 11 1 296 2 322 1 13 2 
143 2 167 14 261 3 123 2 124 11 194 2 3 6 196 2 225 8 285 1 152 2 30 4 11 1 66 1 202 3 13 1 205 1 268 1 69 1 94 1 209 1 40 2 160 1 253 2 359 1 162 1 17 1 361 1 163 2 185 11 79 1 258 2 296 4 
143 1 167 2 144 1 169 1 278 1 123 1 101 1 263 1 220 1 221 1 194 1 172 1 22 1 3 1 300 1 196 1 328 1 225 1 198 1 351 1 30 1 65 1 109 2 289 1 204 1 205 1 112 1 267 1 69 1 269 1 160 1 315 2 253 1 293 1 162 1 17 1 47 1 296 2 
143 3 278 1 100 2 101 2 194 3 3 10 104 1 196 3 5 1 328 2 198 1 152 2 11 3 65 1 109 3 251 2 13 4 289 3 205 1 336 1 112 1 69 2 160 1 253 3 293 1 162 1 343 1 17 3 256 2 163 8 258 2 296 6 167 20 169 3 123 3 124 7 125 1 220 2 22 1 172 2 300 2 225 10 351 2 350 2 30 7 267 3 268 4 269 2 94 2 40 3 181 1 314 1 315 3 43 1 97 1 319 1 273 2 185 7 47 2 
143 2 167 2 169 7 280 1 278 1 123 2 194 2 83 1 58 1 22 1 3 1 172 2 300 2 85 1 196 2 327 1 25 1 328 2 225 1 198 1 130 1 65 1 109 1 289 8 288 1 205 1 267 8 159 1 314 1 315 1 253 2 210 1 293 2 77 2 162 1 255 1 17 2 47 3 296 4 
143 1 167 3 348 1 123 1 124 1 171 1 194 1 22 1 3 2 196 1 225 1 198 1 30 1 152 1 65 1 11 1 109 1 13 1 67 1 94 1 40 1 160 1 315 1 253 1 17 1 163 1 185 1 258 1 296 2 
167 2 143 1 268 1 123 1 124 1 40 1 194 1 253 1 196 1 225 2 30 1 152 1 255 1 17 1 287 1 163 1 185 1 296 2 
167 2 143 1 123 1 124 1 94 1 194 1 23 1 3 2 253 1 196 1 30 1 255 1 17 1 163 1 185 1 11 1 296 2 13 1 
143 1 167 4 123 1 124 2 194 1 3 2 196 1 225 2 152 1 30 2 11 1 13 1 268 1 94 1 40 1 253 1 17 1 255 1 185 2 163 2 258 1 296 2 
167 2 143 1 268 1 123 1 124 1 40 1 83 1 194 1 253 1 196 1 225 2 30 1 152 1 17 1 287 1 163 1 185 1 296 2 
167 2 143 1 123 1 124 1 94 1 83 1 194 1 23 1 3 2 253 1 196 1 30 1 17 1 163 1 185 1 11 1 296 2 13 1 
143 1 167 4 123 1 124 2 194 1 83 1 3 2 196 1 225 2 152 1 30 2 11 1 13 1 268 1 94 1 40 1 253 1 17 1 185 2 163 2 258 1 296 2 
167 4 143 1 123 1 124 2 194 1 3 2 196 1 225 2 152 1 30 2 11 1 13 1 268 1 94 1 40 1 253 1 17 1 185 2 163 2 258 1 296 2 
167 2 143 1 169 1 123 1 101 1 220 1 194 1 172 1 3 1 300 1 196 1 328 1 225 1 351 1 109 1 289 1 205 1 267 1 69 1 269 1 315 1 253 1 293 1 162 1 17 1 273 1 47 1 296 2 
167 2 143 1 169 1 123 1 52 1 101 1 220 1 194 1 172 1 3 1 300 1 196 1 328 1 225 1 129 1 109 1 289 1 205 1 267 1 93 1 69 1 315 1 253 1 293 1 162 1 17 1 47 1 296 2 
143 1 167 4 123 1 124 2 194 1 3 2 196 1 225 2 152 1 30 2 11 1 13 1 268 1 94 1 40 1 160 1 253 1 17 1 185 2 163 2 258 1 296 2 
167 4 143 1 169 1 123 1 124 2 101 1 220 1 194 1 3 2 172 1 300 1 196 1 328 1 225 2 351 1 30 2 152 1 130 1 11 1 109 1 13 1 289 1 267 1 268 1 269 1 94 1 40 1 315 1 253 1 17 1 273 1 256 1 163 2 185 2 47 1 258 1 296 2 
143 1 167 3 348 1 123 1 171 1 124 1 194 1 3 1 22 1 196 1 225 2 198 1 152 1 30 1 11 1 65 1 109 1 268 1 311 1 94 1 40 1 160 1 315 1 253 1 17 1 163 1 185 1 258 1 296 2 
143 3 0 1 281 1 103 1 3 21 104 1 196 3 199 1 152 4 108 1 154 2 201 1 11 5 202 3 13 4 336 1 14 1 208 1 253 3 342 4 343 1 344 1 163 8 258 4 79 3 296 6 214 1 167 41 82 1 123 3 261 4 126 1 222 1 84 1 225 20 268 4 94 4 40 5 181 1 96 1 43 1 361 1 97 1 
143 4 167 38 82 1 261 4 123 4 0 1 281 1 126 1 103 1 222 1 3 18 104 1 84 1 196 4 225 20 199 1 108 1 152 4 154 2 201 1 11 4 202 3 13 4 336 1 14 1 268 3 208 2 94 3 40 5 181 1 43 1 96 1 253 4 342 4 97 1 343 1 361 1 344 1 163 7 79 3 258 4 296 8 214 1 
143 2 167 52 82 1 261 4 123 2 0 1 281 1 126 1 103 1 222 1 3 25 104 1 84 1 196 2 225 27 285 2 108 1 152 7 154 1 201 1 11 8 202 4 13 7 336 1 14 1 268 7 208 1 94 7 40 8 181 1 43 1 96 1 253 2 342 4 97 1 343 1 361 2 344 1 163 14 79 2 258 7 296 4 
143 2 167 19 261 2 123 2 126 1 222 2 3 10 196 2 225 9 108 1 305 1 152 3 154 1 201 1 11 3 202 1 13 3 14 1 268 3 94 3 40 3 253 2 342 2 361 1 344 1 163 6 79 1 258 3 296 4 214 1 
143 3 167 26 82 1 123 3 261 2 0 1 281 1 126 1 103 1 222 1 3 12 196 3 84 1 225 14 108 1 152 3 154 2 201 1 11 2 202 2 13 2 14 1 268 2 208 2 94 2 40 3 96 1 253 3 342 4 344 2 163 4 79 2 258 3 296 6 
223 1 59 1 355 1 26 1 356 1 324 1 338 1 120 1 148 1 213 1 
139 1 291 1 
223 1 59 1 224 1 26 1 28 1 338 1 283 1 148 1 213 1 
332 1 260 1 
317 1 51 1 318 1 
290 1 356 1 324 1 146 1 338 1 148 1 59 1 223 1 26 1 211 1 7 1 31 1 331 1 86 1 173 1 321 2 120 1 213 1 
290 1 356 1 324 1 146 1 338 1 148 1 59 1 223 1 26 1 211 1 7 1 31 1 331 1 86 1 173 1 321 2 120 1 213 1 
290 1 356 1 324 1 146 1 338 1 148 1 59 1 223 1 26 1 211 1 7 1 31 1 331 1 86 1 173 1 321 2 120 1 213 1 
317 1 332 1 260 1 
317 1 332 1 260 1 
51 1 318 1 
317 1 51 1 318 1 
270 1 230 1 
50 1 146 1 22 2 148 1 223 1 59 1 26 1 198 2 331 1 31 1 227 1 86 1 230 1 33 1 65 2 109 2 69 1 270 1 291 1 338 1 39 1 73 1 315 2 139 1 186 1 321 1 213 1 
168 1 143 1 167 2 169 2 123 1 194 1 58 1 172 1 265 1 3 1 300 1 196 1 328 1 25 1 225 1 198 2 308 1 109 2 289 2 205 1 267 2 160 1 315 2 253 1 77 2 162 1 17 1 320 1 47 1 119 1 296 2 
267 2 169 2 133 1 113 1 282 1 314 1 300 1 302 1 328 1 137 1 197 1 248 2 46 1 156 1 130 1 238 1 240 1 289 2 333 1 
267 1 169 1 133 1 314 1 300 1 302 1 328 1 137 1 197 1 248 2 140 1 46 1 156 1 238 1 240 1 289 1 333 1 
48 1 267 1 169 1 282 1 172 1 300 1 327 1 328 1 293 1 47 1 289 1 288 1 333 1 111 1 
267 1 169 1 133 1 113 1 282 1 314 1 300 1 302 1 328 1 137 1 197 1 248 2 46 1 156 1 238 1 240 1 289 1 333 1 
226 1 
275 1 290 1 81 1 250 1 339 1 322 1 106 1 
276 1 297 1 244 1 146 1 106 1 301 1 150 1 107 1 64 1 31 1 250 1 174 1 290 2 68 1 339 1 161 1 118 1 
275 1 276 4 49 2 244 5 146 5 106 8 329 2 328 4 60 2 151 2 152 2 64 4 250 9 11 2 289 3 158 2 290 8 15 2 292 1 339 2 161 4 293 1 118 4 295 1 18 1 258 2 81 1 297 12 169 3 217 1 219 2 220 3 172 3 300 3 301 3 27 2 350 2 31 5 229 1 88 2 130 1 309 6 174 6 267 3 132 1 177 2 178 3 37 6 94 2 95 1 40 2 362 2 47 10 188 2 
276 2 297 6 82 1 244 1 261 1 146 1 0 1 219 1 281 1 301 1 106 5 84 1 152 2 31 1 64 2 250 8 309 5 174 3 11 2 202 1 290 5 177 1 70 1 37 5 94 2 292 1 40 2 339 2 96 1 161 2 237 1 118 2 79 1 258 2 188 2 
276 1 146 1 171 1 22 1 106 2 61 1 198 1 64 1 31 1 32 1 250 2 11 1 65 1 109 1 206 1 177 1 40 2 72 1 181 1 315 1 43 1 116 1 161 1 97 1 118 1 294 1 274 1 188 2 
275 1 276 1 290 1 81 1 339 1 106 1 161 1 64 1 118 1 250 1 
290 5 297 10 177 1 37 5 94 2 40 2 106 5 350 1 152 2 250 5 258 2 309 5 174 5 11 2 188 2 
290 1 244 1 146 1 31 1 339 1 301 1 
276 2 98 1 169 4 192 1 244 4 146 3 2 1 219 2 172 1 300 1 106 2 301 2 327 1 328 1 62 1 64 1 31 3 229 2 250 2 289 4 288 1 267 4 292 2 117 1 161 2 293 2 118 2 295 1 47 1 
167 1 143 1 169 1 123 1 171 2 101 1 220 1 194 1 3 1 22 2 172 1 300 1 196 1 328 1 198 2 61 1 351 1 330 1 65 2 109 3 289 1 205 1 267 1 69 1 269 1 315 3 253 1 293 1 17 1 273 1 47 1 296 2 
276 1 290 4 297 4 37 2 292 1 219 1 339 2 104 1 106 2 161 1 64 1 118 1 250 1 174 2 309 2 
203 1 148 1 213 1 
203 1 148 1 213 1 
324 1 230 1 110 1 148 1 213 1 
203 1 148 1 213 1 
16 1 148 1 213 1 
16 1 148 1 213 1 
16 1 148 1 213 1 
148 1 213 1 
223 1 26 1 
167 8 143 1 261 1 123 1 0 1 3 4 104 1 196 1 225 4 201 1 11 1 202 1 13 2 336 1 40 1 181 1 253 1 43 1 343 1 97 1 163 2 79 1 296 2 
167 11 143 2 261 2 123 2 0 1 3 5 104 1 196 2 225 6 152 1 201 1 11 1 131 1 202 1 13 2 336 1 268 1 40 2 181 1 43 1 253 2 97 1 343 1 361 1 163 3 79 1 258 1 296 4 
167 19 143 3 82 1 261 1 123 3 0 1 281 1 3 10 104 1 196 3 84 1 225 9 152 2 201 1 131 1 11 3 202 1 13 3 336 1 268 1 208 1 94 2 40 3 181 1 43 1 253 3 96 1 97 1 343 1 163 4 79 1 258 2 296 6 
167 17 143 3 82 1 261 1 123 3 0 1 281 1 3 7 104 1 196 3 84 1 225 10 152 2 201 1 131 1 11 2 202 1 13 3 336 1 268 2 208 1 94 1 40 3 181 1 43 1 253 3 96 1 97 1 343 1 163 5 79 1 258 2 296 6 
167 8 143 1 261 1 123 1 0 1 3 4 104 1 196 1 225 4 201 1 11 1 202 1 13 2 336 1 40 1 181 1 253 1 43 1 343 1 97 1 163 2 79 1 296 2 
143 1 167 12 268 1 82 1 123 1 261 1 0 1 94 2 281 1 40 2 3 6 96 1 84 1 253 1 196 1 225 6 152 2 163 2 201 1 11 2 258 2 79 1 296 2 202 1 13 1 
167 18 143 4 82 1 261 1 123 4 0 1 281 1 3 8 104 1 196 4 84 1 225 10 152 2 201 1 131 1 11 2 202 1 13 3 336 1 268 2 208 2 94 1 40 3 181 1 43 1 96 1 253 4 97 1 343 1 163 5 79 1 258 2 296 8 
167 16 143 4 82 1 261 1 123 4 0 1 281 1 3 7 196 4 84 1 225 9 152 3 201 1 11 2 202 1 13 3 268 3 208 2 94 2 40 3 96 1 253 4 163 6 79 1 258 3 296 8 214 1 
167 7 336 2 268 3 40 1 181 1 3 4 43 3 225 3 343 1 97 3 163 6 11 1 13 3 
167 18 143 4 82 1 261 1 123 4 0 1 281 1 3 8 104 1 196 4 84 1 225 10 152 2 201 1 11 2 202 1 13 3 336 1 268 1 208 2 94 1 40 3 181 1 43 1 96 1 253 4 97 1 343 1 163 4 79 1 258 2 296 8 214 1 
167 8 143 2 336 1 268 1 123 2 208 1 40 1 181 1 3 4 104 1 253 2 196 2 43 1 225 4 343 1 97 1 163 3 11 1 296 4 13 2 
336 1 167 6 40 1 181 1 3 3 104 1 43 1 225 3 343 1 97 1 163 2 11 1 322 1 13 2 
143 1 167 4 268 1 123 1 94 1 40 1 3 2 253 1 196 1 225 2 152 1 163 2 11 1 131 1 258 1 296 2 13 1 
167 7 268 1 261 2 94 1 40 1 3 4 225 3 152 1 361 1 163 2 11 1 79 1 258 1 202 1 13 1 
167 23 143 2 216 1 261 2 123 2 3 12 104 1 196 2 225 11 285 1 152 2 11 3 202 2 13 5 336 1 268 4 208 2 94 2 209 1 40 3 181 1 43 2 253 2 97 2 343 1 361 1 163 9 258 2 296 4 
167 1 261 1 3 1 
167 1 225 1 202 1 
143 1 167 6 268 1 123 1 94 1 40 1 3 3 196 1 253 1 225 3 350 1 152 1 163 3 131 1 258 1 11 1 296 2 13 2 
143 1 167 12 268 1 82 1 123 1 261 1 0 1 94 2 281 1 40 2 3 6 96 1 84 1 253 1 196 1 225 6 152 2 163 2 201 1 11 2 258 2 79 1 296 2 202 1 13 1 
167 6 268 1 40 1 181 1 3 3 43 1 225 3 97 1 163 2 11 1 13 1 
336 1 167 3 143 1 216 1 268 1 208 1 123 1 3 2 43 1 253 1 196 1 225 1 97 1 343 1 163 2 296 2 13 1 
143 1 167 10 268 2 123 1 40 2 181 1 3 5 196 1 253 1 43 2 225 5 97 2 294 1 201 1 163 5 11 2 296 2 13 3 
143 1 167 2 268 1 123 1 40 1 253 1 196 1 225 2 152 1 201 1 163 1 296 2 
143 1 167 4 268 1 123 1 94 1 40 1 3 2 253 1 196 1 225 2 152 1 163 2 201 1 11 1 258 1 296 2 13 1 
167 3 143 3 216 1 268 1 208 1 123 3 3 2 253 3 196 3 43 1 225 1 97 1 201 1 163 2 296 6 13 1 214 1 
143 5 167 34 216 1 277 1 261 4 123 5 170 1 3 18 104 1 196 5 225 16 286 1 152 3 201 1 131 1 11 5 202 3 13 7 336 1 268 5 208 2 94 3 40 5 181 2 43 3 253 5 97 3 343 1 361 1 163 12 79 1 258 3 296 10 214 1 
316 1 198 1 29 1 115 1 
316 1 198 1 298 1 29 1 246 1 193 1 212 1 89 1 115 1 
327 1 328 1 267 1 293 1 169 1 47 1 172 1 322 1 300 1 288 1 289 1 
267 1 169 1 69 1 278 1 101 1 220 1 172 1 22 1 315 2 300 1 328 1 293 1 198 1 351 1 47 1 65 1 109 2 289 1 
169 1 278 1 101 1 220 2 22 1 172 2 300 1 328 1 198 2 351 1 229 1 88 1 65 2 109 2 289 1 267 1 15 1 69 1 72 1 315 2 235 1 142 1 47 3 
169 2 278 1 101 1 220 2 22 1 172 2 300 1 328 1 198 2 8 1 229 1 88 1 65 2 109 2 289 2 267 2 93 1 15 1 69 1 72 1 315 2 235 1 142 1 47 3 
145 1 169 3 244 1 146 2 220 1 172 1 300 1 328 1 60 1 151 1 8 1 31 2 229 1 88 1 289 3 267 3 290 1 15 1 178 1 339 1 74 1 293 1 47 4 
290 1 267 3 15 1 169 3 178 1 244 1 146 2 339 1 220 1 172 1 300 1 328 1 293 1 60 1 27 1 151 1 8 1 31 2 229 1 88 1 47 4 289 3 
328 1 267 1 169 1 300 1 289 1 85 1 
267 7 169 6 280 1 159 1 54 1 220 1 314 1 172 2 300 2 85 1 210 1 25 1 328 3 293 2 77 1 130 1 18 1 47 3 289 7 157 1 232 1 
167 6 168 1 143 2 169 1 278 1 123 2 124 1 101 1 220 1 194 2 3 3 172 1 22 1 104 1 300 1 196 2 328 1 225 3 198 1 351 1 30 1 130 1 11 1 65 1 109 2 251 1 13 2 289 1 336 1 267 1 69 2 269 1 40 1 181 1 160 1 315 2 43 1 253 2 97 1 343 1 17 2 256 1 273 1 185 1 163 2 47 1 296 4 
275 1 276 2 81 1 169 1 244 2 146 3 106 1 301 1 329 1 60 1 27 1 151 1 64 2 31 3 227 1 250 1 289 1 290 1 267 1 158 1 178 1 339 1 293 1 161 2 118 2 362 1 295 1 47 2 
267 2 169 2 217 1 220 1 172 1 300 1 85 1 328 2 151 1 130 1 18 1 47 2 289 2 
267 4 169 4 1 1 172 1 300 1 327 1 328 1 293 1 8 1 130 1 47 1 289 4 288 1 
267 2 169 2 54 1 325 1 220 1 172 1 300 1 5 1 328 2 229 1 47 1 289 2 166 1 232 1 
302 1 328 1 267 1 293 1 169 1 248 1 238 1 240 1 300 1 289 1 
267 2 169 2 314 1 172 1 300 1 25 1 328 1 130 1 119 1 47 1 289 2 
267 5 169 4 159 1 1 1 172 2 300 2 327 1 25 1 328 2 210 1 293 1 229 1 130 1 47 3 288 1 289 5 
267 5 169 4 1 1 172 2 300 2 327 1 25 1 328 2 210 1 293 1 229 1 200 1 130 1 47 3 288 1 289 5 
267 1 169 1 93 1 69 1 278 1 101 1 220 1 172 1 22 1 315 2 300 1 328 1 293 1 198 1 47 1 65 1 109 2 289 1 
267 1 169 1 54 1 220 1 172 1 300 1 328 2 229 1 18 1 47 1 289 1 157 1 232 1 
69 1 141 1 147 1 340 1 165 1 
290 1 19 1 69 1 146 2 245 1 147 1 339 1 72 1 102 1 340 2 235 1 60 1 227 1 31 2 141 2 142 1 44 1 12 1 165 2 
198 1 320 1 141 1 147 1 308 1 109 1 265 1 315 1 165 1 
245 1 147 1 44 1 
91 1 127 1 231 1 322 1 
90 1 91 1 236 1 127 1 99 1 41 1 231 1 
99 1 252 1 323 1 
90 1 91 1 279 1 99 3 41 3 236 1 138 1 127 1 184 1 239 1 231 1 346 2 
90 1 91 1 236 1 127 1 99 2 41 2 231 1 345 1 71 1 
90 1 91 1 236 1 248 1 133 1 272 1 99 1 184 1 41 1 240 1 241 1 
90 1 91 1 236 1 127 1 99 1 184 1 41 1 
90 1 236 1 127 2 99 1 184 1 41 1 231 1 
90 2 91 1 36 1 347 1 99 2 41 2 134 1 236 2 127 1 184 1 
90 1 176 1 91 2 99 3 234 1 41 3 236 1 127 1 272 1 184 1 87 1 231 1 345 2 
90 1 91 1 310 1 99 2 133 1 41 2 302 1 236 1 137 1 127 1 248 2 184 1 231 1 345 1 240 1 
90 2 91 2 99 4 312 1 41 4 71 1 236 2 127 1 272 1 184 1 87 1 231 1 345 2 
90 1 91 1 236 1 127 1 99 1 184 1 41 1 231 1 
90 1 91 3 279 1 99 4 41 4 236 1 127 2 272 1 153 1 87 1 239 1 231 2 345 2 346 1 
90 1 91 1 215 1 99 2 41 2 236 1 127 1 184 1 266 1 164 1 345 1 231 1 
90 1 91 1 279 2 99 3 41 3 326 1 236 1 127 1 184 1 239 1 231 1 346 2 
91 2 207 1 247 1 75 2 
90 1 236 1 99 1 184 1 41 1 190 1 
90 1 91 1 176 1 236 1 127 1 99 2 184 1 41 2 231 1 345 1 
191 1 
90 1 91 1 236 1 127 1 99 1 184 1 41 1 231 1 
90 1 91 1 176 1 99 3 41 3 236 1 127 1 184 1 345 1 231 1 346 1 
91 1 272 1 153 1 87 1 
91 1 127 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 1 356 2 154 2 239 2 321 1 240 4 25 1 134 1 156 1 306 1 55 1 258 2 185 1 30 6 246 9 288 1 265 1 290 2 367 1 36 2 40 1 41 2 271 5 200 1 201 1 297 9 379 3 233 1 
318 1 356 2 239 2 154 2 321 1 240 4 25 1 134 1 156 1 306 1 55 1 185 1 258 2 30 6 246 9 288 1 265 1 290 2 367 1 36 2 40 1 41 2 271 5 200 1 201 1 297 9 379 3 233 1 
318 1 356 2 239 2 154 2 321 1 240 5 25 1 134 1 156 1 306 1 55 1 185 1 258 2 30 7 246 10 288 1 265 1 290 2 367 1 36 2 40 1 41 2 271 6 200 1 201 1 297 10 379 4 233 1 
318 1 356 2 239 2 154 2 321 1 240 3 25 1 156 1 306 1 55 1 185 1 258 1 30 4 246 7 288 1 265 1 290 2 367 1 36 2 40 1 41 2 271 4 200 1 201 1 297 7 379 2 233 1 
288 1 318 1 356 1 290 1 154 1 239 1 240 2 25 1 134 1 41 1 271 3 55 1 185 1 258 2 297 4 30 3 379 1 246 4 
103 1 318 1 356 1 367 1 290 1 36 1 154 1 25 1 145 1 271 1 41 1 40 1 55 1 184 1 297 2 246 2 
271 2 41 2 55 1 318 1 36 1 30 1 297 3 321 1 154 2 240 1 379 1 246 3 25 1 
318 1 356 1 321 1 154 2 239 1 240 4 25 1 134 1 305 1 306 1 55 1 360 1 185 1 258 2 30 7 246 9 288 1 290 1 36 1 41 2 271 5 200 1 297 9 379 3 
318 1 356 1 321 1 154 2 239 1 240 4 25 1 134 1 305 1 306 1 55 1 360 1 185 1 258 2 30 7 246 9 288 1 290 1 36 1 41 2 271 5 200 1 297 9 379 3 
348 1 168 1 231 1 
348 1 191 1 148 2 
312 2 257 2 19 1 228 1 328 2 74 2 352 2 362 2 
19 1 129 1 48 1 0 1 132 2 133 1 357 1 322 1 257 2 109 1 29 1 285 1 362 2 218 1 364 1 220 2 328 2 326 1 142 2 165 1 251 1 16 1 97 2 169 1 372 1 269 1 312 3 228 1 70 1 18 1 146 1 273 1 375 1 74 3 333 2 352 2 43 1 
197 1 312 1 257 1 228 1 328 1 374 1 74 1 352 1 311 1 362 1 
328 1 310 1 344 1 320 1 168 1 348 1 312 1 197 1 83 1 270 1 57 1 122 1 74 1 284 1 
328 1 310 1 320 1 168 1 348 1 257 1 312 1 197 1 83 1 270 2 122 1 74 1 284 2 352 1 362 1 
270 1 158 1 54 1 284 1 11 1 
348 1 270 2 158 1 54 1 42 1 284 2 168 1 280 1 
270 1 54 1 284 1 
149 1 328 1 311 1 197 1 257 1 312 1 228 1 158 1 270 1 374 1 74 1 284 1 352 1 362 1 
348 1 
348 1 248 1 270 2 158 1 54 1 42 1 284 2 168 1 
190 1 300 1 221 1 237 1 168 1 155 1 348 1 107 1 158 2 270 5 136 2 54 2 71 1 7 2 112 1 42 1 284 5 113 2 77 1 
19 1 231 1 
173 1 19 2 328 2 312 2 257 1 74 2 125 1 352 1 362 1 
61 1 157 1 140 1 
19 1 326 1 48 1 142 1 165 1 0 1 132 1 133 1 372 1 312 1 213 1 18 1 146 1 29 1 74 1 333 1 
326 1 328 1 48 1 142 1 165 1 0 1 132 1 133 1 372 1 257 1 312 2 27 1 18 1 146 1 29 1 74 2 333 1 232 1 362 1 140 1 
173 1 19 1 328 5 344 1 119 1 257 4 312 5 212 1 27 2 337 1 74 5 352 1 362 4 232 1 
197 1 312 2 257 2 229 1 328 2 74 2 311 1 362 2 
312 3 257 3 19 1 27 1 328 3 74 3 352 1 362 3 
197 1 312 1 257 1 328 1 74 1 311 1 362 1 
197 1 312 1 257 1 173 1 328 1 74 1 125 1 352 1 362 1 
19 1 173 1 129 1 48 1 0 1 320 1 132 1 133 1 357 1 257 3 27 1 83 1 109 1 29 1 284 1 285 1 362 3 364 1 220 1 326 1 328 3 310 1 142 1 165 1 97 2 169 1 372 1 312 4 197 1 228 1 270 1 70 1 18 1 146 1 199 1 273 1 375 1 122 1 74 4 333 1 43 1 352 2 353 1 232 1 
312 2 257 1 19 1 212 1 27 1 328 2 344 1 74 2 362 1 
173 1 328 3 310 1 320 1 348 1 197 1 257 3 312 3 270 1 27 2 83 1 292 1 122 1 74 3 284 1 352 1 232 1 362 3 353 1 
61 1 173 1 328 2 257 2 312 2 27 1 74 2 352 1 362 2 140 1 
19 1 326 1 48 1 142 1 165 1 0 1 132 1 133 1 372 1 312 1 18 1 146 1 29 1 74 1 333 1 
19 1 326 1 142 1 207 1 165 1 0 1 132 1 372 1 312 1 18 1 146 1 29 1 74 1 333 1 298 1 
129 1 256 1 357 1 157 2 324 1 28 1 109 1 215 1 140 2 364 1 220 4 61 2 193 1 97 2 169 2 269 2 170 1 313 1 314 1 273 1 375 1 272 1 377 1 76 1 
197 1 312 1 257 1 229 1 328 1 310 1 74 1 362 1 
214 1 254 1 
214 1 254 1 
63 1 278 1 
63 1 278 1 
63 1 278 1 
214 1 176 1 254 1 
214 1 176 1 254 1 
214 1 60 1 254 1 
63 1 214 2 338 1 278 1 254 2 120 1 
214 1 176 1 254 1 
214 1 254 1 339 1 
214 1 254 1 339 1 
214 1 254 1 339 1 
19 1 255 1 204 1 302 1 257 2 214 1 138 1 137 1 284 1 60 1 362 2 262 1 264 1 328 2 34 1 35 1 99 1 69 1 226 1 312 2 270 1 74 2 274 1 254 1 
264 2 175 2 204 2 34 2 302 3 345 1 37 1 282 1 120 1 99 2 348 1 323 1 270 2 214 2 307 1 187 1 284 2 274 1 254 2 
356 1 290 1 239 1 
103 1 356 1 290 1 
103 1 67 1 86 1 290 3 238 1 239 2 
103 1 67 1 86 1 290 2 88 1 239 1 
103 1 86 1 67 2 290 2 239 1 
149 1 45 1 300 1 2 1 155 1 257 1 107 2 158 4 136 1 28 1 54 1 108 1 9 1 7 1 215 1 186 2 89 1 113 1 284 5 309 1 362 1 162 1 328 1 168 1 311 1 69 1 197 1 312 1 348 1 228 1 270 5 374 1 296 1 74 1 42 1 352 1 148 1 
149 1 300 1 2 1 155 1 257 1 107 2 158 4 136 1 28 1 108 1 54 3 9 1 7 1 215 1 89 1 113 1 284 5 362 1 11 2 162 1 328 1 168 1 311 1 371 1 69 1 197 1 312 1 348 1 228 1 270 5 374 1 296 1 295 1 74 1 42 1 352 1 148 1 126 2 
149 1 45 1 300 3 2 1 257 1 158 2 107 2 136 1 28 1 7 1 9 2 186 1 215 1 309 1 113 1 284 3 89 2 362 1 162 1 328 1 191 1 168 1 311 1 69 1 197 1 312 1 348 2 170 1 228 1 270 3 374 1 71 1 314 1 296 1 74 1 352 1 148 3 
45 1 300 5 2 1 158 3 107 4 136 1 28 2 7 1 9 4 186 2 215 2 113 1 284 4 309 1 89 4 162 1 117 1 94 1 191 2 168 1 144 1 69 2 170 2 348 3 270 4 71 1 314 2 296 2 148 6 
0 1 231 1 195 1 
0 1 267 1 
283 1 
18 1 29 1 0 1 
38 1 0 1 
18 1 0 1 
92 1 18 1 47 1 29 1 0 3 195 2 
220 7 44 1 235 1 151 1 169 3 369 1 269 4 170 1 358 1 101 1 28 1 313 3 272 2 124 2 376 1 245 1 286 1 
220 7 44 1 235 1 151 1 169 3 369 1 269 4 170 1 358 1 101 1 28 1 313 3 272 2 124 2 376 1 245 1 286 1 
220 7 44 1 235 1 151 1 169 3 369 1 269 4 170 1 358 1 101 1 121 1 28 1 313 3 272 2 124 2 376 1 245 1 286 1 
44 2 235 2 277 3 151 1 4 4 358 1 357 1 52 1 28 4 109 1 215 3 245 2 286 1 141 1 62 1 220 31 341 1 366 1 194 1 97 2 225 1 369 1 169 15 269 16 170 4 101 5 313 10 314 3 273 1 375 1 296 3 272 5 124 3 376 2 
174 1 44 1 235 1 357 2 358 1 28 1 109 2 245 1 286 1 220 9 97 4 225 1 169 4 369 1 269 5 170 1 101 1 313 4 72 1 273 2 375 2 272 3 124 2 376 1 
103 1 301 1 318 1 49 1 356 1 50 1 238 1 239 1 132 1 154 1 25 1 135 1 55 1 56 1 260 1 259 1 30 1 246 2 247 1 326 1 142 1 192 1 165 1 290 2 36 1 347 1 271 1 41 1 333 1 297 2 
103 1 318 1 49 1 356 1 50 1 238 1 239 1 132 1 154 1 25 1 81 1 56 1 260 1 259 1 30 2 246 3 247 1 219 1 326 1 342 1 142 1 192 1 165 1 290 2 36 1 347 1 271 1 41 1 333 1 297 3 
103 1 318 1 49 1 356 1 238 1 132 1 239 1 25 1 56 1 260 1 259 1 30 2 246 2 247 1 219 1 326 1 342 1 142 1 165 1 290 2 36 1 347 1 271 1 333 1 297 2 
0 1 132 1 154 1 81 1 53 1 260 2 259 2 246 1 249 1 326 1 142 1 165 1 250 1 224 1 36 2 347 2 18 1 146 1 41 1 333 1 297 1 147 1 202 1 
103 1 49 1 356 1 50 1 238 1 239 1 132 1 154 1 135 1 55 1 56 1 260 1 259 1 246 1 247 1 326 1 342 1 142 1 192 1 165 1 290 2 36 1 347 1 41 1 333 1 297 1 
268 1 
300 2 150 2 0 1 2 1 155 1 53 1 107 2 54 6 7 1 57 1 58 1 10 1 160 1 113 1 114 2 161 2 12 2 116 1 65 2 64 1 310 1 164 2 165 1 344 1 168 1 348 2 312 1 270 5 18 1 230 1 122 1 351 1 74 1 317 4 130 1 320 1 24 2 132 2 83 1 136 1 243 1 183 1 284 5 249 1 329 1 326 1 328 1 142 2 191 2 197 1 146 2 198 1 42 3 333 2 148 2 
248 1 317 2 116 1 328 1 310 1 130 1 344 1 150 1 320 1 197 1 312 1 83 1 270 3 230 1 54 2 183 1 57 1 122 1 160 1 74 1 42 1 284 3 
248 1 317 3 116 1 65 1 328 1 310 1 130 1 344 1 320 1 168 1 348 1 197 1 312 1 83 1 270 3 230 1 54 1 183 1 57 1 122 1 160 1 74 1 42 1 284 3 
317 3 130 1 150 1 320 1 83 1 54 2 183 1 57 1 160 1 284 3 248 1 116 1 328 1 65 1 310 1 164 1 344 1 168 1 312 1 197 1 348 1 270 3 230 1 122 1 74 1 42 1 
300 1 150 4 152 1 155 1 107 1 54 7 7 1 57 1 10 1 160 1 113 1 114 2 161 2 12 2 116 1 65 4 310 1 164 4 343 1 344 1 13 1 168 5 312 1 348 5 270 5 230 1 122 1 74 1 317 6 130 1 320 1 24 2 179 1 83 1 136 1 84 1 243 1 183 1 284 5 248 1 328 1 191 2 197 1 42 3 
317 4 300 1 130 1 150 2 320 1 24 2 155 1 107 1 83 1 136 1 54 4 243 1 7 1 183 1 57 1 10 1 160 1 113 1 284 4 114 2 161 2 12 2 116 1 65 2 328 1 310 1 164 2 191 2 344 1 168 1 348 2 312 1 197 1 270 4 230 1 198 1 122 1 74 1 42 2 148 2 
317 4 300 1 130 1 150 2 320 1 24 2 155 1 179 1 107 1 83 1 136 1 54 4 84 1 243 1 7 1 183 1 10 1 57 1 160 1 284 4 113 1 114 2 161 2 12 2 116 1 65 2 328 1 310 1 164 2 191 2 13 1 344 1 168 1 348 1 312 1 197 1 270 4 230 1 122 1 74 1 42 2 
317 4 300 1 130 1 150 2 320 1 24 2 155 1 179 1 107 1 83 1 136 1 54 4 84 1 243 1 7 1 183 1 10 1 57 1 160 1 284 4 113 1 114 2 161 2 12 2 116 1 65 2 328 1 310 1 164 2 191 2 13 1 344 1 168 1 348 1 312 1 197 1 270 4 230 1 122 1 74 1 42 2 
234 2 317 4 128 1 300 1 130 1 150 2 320 1 24 2 155 1 107 1 83 1 136 1 54 4 243 1 7 1 183 1 57 1 160 1 284 4 113 1 161 2 116 1 93 1 65 2 327 2 328 1 310 1 164 2 13 1 344 1 14 1 168 1 348 1 312 1 197 1 270 4 230 1 122 1 74 1 42 2 148 2 
317 5 300 1 130 1 150 3 320 1 24 2 155 1 179 1 107 1 83 1 136 1 54 5 84 1 243 1 7 1 183 1 10 1 57 1 160 1 113 1 284 4 114 2 161 2 12 2 116 1 328 1 65 3 310 1 343 1 164 3 191 2 13 1 344 1 168 1 348 1 312 1 197 1 270 4 230 1 122 1 74 1 42 2 
317 5 300 1 130 1 150 3 320 1 24 2 155 1 179 1 107 1 83 1 136 1 54 5 84 1 243 1 7 1 183 1 10 1 57 1 160 1 113 1 284 4 114 2 161 2 12 2 116 1 328 1 65 3 310 1 343 1 164 3 191 2 13 1 344 1 168 1 348 1 312 1 197 1 270 4 230 1 122 1 74 1 42 2 
234 2 317 4 300 1 130 1 150 2 320 1 24 2 155 1 107 1 83 1 136 1 54 4 243 1 7 1 183 1 57 1 160 1 113 1 284 4 161 2 116 1 65 2 327 2 328 1 310 1 164 2 344 1 14 1 168 1 348 1 312 1 197 1 270 4 230 1 198 1 122 1 74 1 42 2 148 2 
19 2 129 1 256 1 235 1 358 1 357 1 157 1 109 1 28 1 140 1 286 1 364 1 61 1 220 6 97 2 369 1 169 3 269 3 170 1 313 2 273 1 375 1 272 2 124 1 376 1 231 1 
19 1 129 1 23 1 277 3 4 3 357 2 157 11 109 2 28 2 215 2 285 1 140 11 141 1 287 1 364 2 220 14 62 1 61 4 189 1 95 1 16 1 97 4 169 6 269 8 170 1 17 1 101 1 313 2 314 1 272 1 273 2 375 2 296 2 
19 1 129 1 48 1 0 1 132 1 133 1 257 1 357 1 213 1 27 1 109 1 29 1 308 1 285 1 362 1 364 1 61 1 220 2 326 1 328 1 142 1 165 1 16 1 97 2 372 1 169 1 373 1 269 1 312 2 17 1 100 1 18 1 146 1 375 1 273 1 74 2 333 1 232 1 
48 2 0 2 257 1 157 7 109 3 215 2 220 20 61 7 342 1 165 2 16 1 169 10 269 10 170 3 312 3 17 1 18 2 313 8 314 2 272 4 273 3 124 1 74 3 316 1 232 1 19 2 129 3 235 1 132 3 133 2 358 1 357 3 27 1 26 2 28 3 29 2 285 1 362 1 286 1 31 1 140 7 364 3 91 2 328 1 326 2 142 3 97 6 98 2 369 1 372 2 101 4 146 1 293 2 294 1 375 3 296 2 376 1 333 3 43 2 
129 2 301 1 256 1 208 1 0 3 132 8 257 1 357 2 322 2 180 1 27 1 53 1 325 1 109 2 261 1 217 1 285 1 362 1 364 2 365 1 220 2 249 1 328 1 326 2 342 1 142 8 266 1 165 2 16 1 97 4 169 1 269 1 312 1 18 2 146 2 273 2 375 2 74 1 333 7 
173 1 129 1 257 1 357 1 157 1 109 1 28 1 215 1 362 1 140 1 364 1 61 1 220 3 328 1 223 1 97 2 169 2 269 1 312 1 170 1 17 1 313 1 314 1 272 1 273 1 375 1 296 1 74 1 352 1 
61 1 220 2 129 1 256 1 97 2 269 2 357 1 157 1 101 1 109 1 28 1 313 1 375 1 273 1 215 1 377 1 140 1 364 1 
61 1 220 2 129 1 256 1 97 2 169 2 357 1 170 1 157 1 324 1 109 1 313 1 314 1 272 1 375 1 273 1 140 1 364 1 
129 1 256 1 357 1 157 2 28 1 109 1 215 1 140 2 364 1 220 4 61 2 97 2 169 2 269 2 170 1 101 1 313 2 314 1 296 1 273 1 375 1 272 1 
61 1 220 2 129 1 97 2 269 2 357 1 157 1 101 1 109 1 28 1 313 1 375 1 273 1 215 1 377 1 261 1 140 1 364 1 
61 1 220 2 129 1 97 2 169 2 357 1 170 1 157 1 324 1 109 1 313 1 314 1 272 1 375 1 273 1 261 1 140 1 364 1 
129 1 357 1 157 2 28 1 109 1 215 1 261 1 140 2 364 1 220 4 61 2 97 2 169 2 269 2 170 1 101 1 313 2 314 1 296 1 273 1 375 1 272 1 
129 1 357 1 157 2 28 1 109 1 215 1 140 2 364 1 220 4 61 2 97 2 169 2 269 2 170 1 101 1 313 2 314 1 296 1 273 1 375 1 272 1 
19 1 129 1 48 1 0 1 132 1 133 1 357 1 109 1 29 1 285 1 364 1 220 2 326 1 142 1 165 1 16 1 97 2 372 1 169 1 269 1 312 1 18 1 146 1 375 1 273 1 74 1 333 1 43 1 
127 1 19 1 129 1 207 1 0 1 132 1 357 1 109 1 29 1 285 1 364 1 220 2 326 1 142 1 165 1 16 1 97 2 372 1 169 1 269 1 312 1 18 1 146 1 375 1 273 1 74 1 333 1 298 1 
129 1 357 1 157 2 28 1 109 1 215 1 140 2 364 1 220 4 61 2 97 2 169 2 269 2 170 1 17 1 101 1 313 2 314 1 296 1 273 1 375 1 272 1 
129 1 48 1 301 1 0 1 132 1 133 1 357 1 157 2 26 1 28 1 109 1 29 1 215 1 140 2 364 1 61 2 220 4 326 1 142 1 165 1 97 2 169 2 372 1 269 2 170 1 312 1 101 1 18 1 313 2 314 1 272 1 375 1 273 1 296 1 74 1 333 1 43 1 
173 1 129 1 257 1 357 1 157 1 109 1 28 1 215 1 362 1 140 1 364 1 220 3 61 1 328 1 97 2 169 1 269 2 170 1 312 1 17 1 101 1 313 1 314 1 171 1 273 1 375 1 296 1 74 1 352 1 
205 1 1 1 105 1 51 4 4 4 5 1 109 3 111 1 215 4 59 1 62 1 220 41 118 1 167 1 225 1 169 21 269 20 170 5 313 8 314 4 273 3 272 4 124 1 174 1 172 1 235 1 80 1 277 3 357 3 358 1 28 5 182 1 286 1 141 3 363 1 32 2 97 6 196 1 369 1 101 4 296 4 375 3 376 1 
172 1 174 1 205 1 80 1 235 1 277 3 1 1 105 1 51 4 5 1 4 4 358 1 357 4 182 1 109 4 28 5 111 1 215 4 59 1 286 1 141 3 363 1 32 2 220 38 62 1 118 1 167 1 225 2 97 8 196 1 369 1 169 18 269 20 170 4 101 3 313 7 314 3 272 4 273 4 375 4 296 4 124 1 376 1 
172 1 174 1 80 1 235 1 277 4 1 1 105 1 51 4 5 1 4 4 358 1 357 2 182 1 109 2 28 8 111 1 215 7 59 1 286 1 141 2 363 1 32 1 220 52 62 2 189 2 118 1 167 1 225 1 97 4 369 1 169 25 269 27 170 8 101 7 313 14 314 7 272 7 273 2 375 2 296 7 124 1 376 1 
172 1 174 1 80 2 277 1 1 1 51 2 4 2 357 2 182 1 109 2 28 3 215 3 141 1 32 1 220 19 62 1 167 1 97 4 196 1 370 1 169 10 269 9 170 3 101 3 313 6 314 3 272 3 273 2 375 2 296 3 
172 2 174 1 80 1 277 2 1 1 105 1 51 4 5 1 4 2 357 3 182 1 109 3 28 3 111 1 215 3 59 1 141 2 363 1 32 2 220 26 118 1 167 1 225 2 97 6 169 12 269 14 170 2 101 2 313 4 314 2 272 2 273 3 375 3 296 3 
264 1 214 1 204 1 34 1 345 1 254 1 37 1 120 1 210 1 99 1 
60 1 226 1 
264 1 214 1 204 1 34 1 68 1 254 1 188 1 211 1 99 1 
176 1 368 1 
78 1 338 1 339 1 
264 1 175 1 204 1 34 1 302 2 345 1 37 1 120 1 99 1 348 1 323 1 270 1 214 1 307 1 187 1 284 1 274 1 254 1 
264 1 175 1 204 1 34 1 302 2 345 1 37 1 120 1 99 1 348 1 323 1 270 1 214 1 307 1 187 1 284 1 274 1 254 1 
264 1 175 1 204 1 34 1 302 2 345 1 37 1 120 1 99 1 348 1 323 1 270 1 214 1 307 1 187 1 284 1 274 1 254 1 
176 1 368 1 338 1 
176 1 368 1 338 1 
78 1 339 1 
78 1 338 1 339 1 
255 1 35 1 
19 1 175 1 255 1 79 1 204 1 302 1 257 2 158 1 214 1 307 1 138 1 137 1 284 1 60 1 362 2 262 1 264 1 328 2 34 1 35 1 99 1 69 1 226 1 312 2 270 1 74 2 254 1 
129 1 236 1 0 1 319 1 132 2 357 1 322 2 325 1 109 1 87 1 285 1 364 1 220 2 326 1 328 2 142 2 266 1 165 1 15 1 16 1 97 2 169 1 269 1 312 2 17 1 18 1 375 1 273 1 74 2 333 2 75 1 
103 1 326 1 342 1 301 1 142 2 356 1 165 1 22 1 290 2 50 1 238 1 239 1 132 2 106 1 347 1 359 1 56 1 333 2 247 1 
103 1 326 1 342 1 142 1 356 1 165 1 290 2 50 1 238 1 239 1 132 1 347 1 359 1 56 1 333 1 216 1 247 1 
249 1 326 1 142 1 165 1 0 1 132 1 106 1 347 1 39 1 53 1 18 1 146 1 333 1 202 1 
103 1 326 1 342 1 142 1 356 1 165 1 22 1 290 2 50 1 238 1 239 1 132 1 106 1 347 1 359 1 56 1 333 1 247 1 
159 1 
348 1 107 1 300 1 112 1 168 1 231 1 77 1 
300 1 191 1 168 1 155 1 348 2 270 1 107 1 136 1 54 1 7 1 10 1 284 1 42 1 113 1 114 1 12 1 148 1 
300 9 301 1 104 1 206 1 0 10 2 2 304 1 155 4 107 8 54 5 7 4 9 6 112 1 215 2 113 4 115 2 263 2 165 4 222 1 267 3 168 2 348 8 227 2 170 2 270 5 18 3 314 2 351 1 77 1 355 2 320 2 279 1 131 2 281 2 132 3 136 4 28 2 29 3 284 5 89 6 92 1 326 3 142 3 289 2 191 6 195 2 38 2 146 1 293 2 296 2 42 3 333 3 334 2 148 12 
275 1 300 8 177 1 277 1 105 1 2 1 155 2 5 1 4 1 107 5 136 2 54 1 28 2 9 5 7 2 111 1 215 2 284 1 89 5 113 2 59 1 141 1 115 2 191 3 118 1 168 2 227 1 348 5 170 2 270 1 314 2 296 2 351 1 42 1 148 6 
149 1 300 2 235 1 209 1 155 1 257 1 179 1 107 2 136 1 28 2 7 1 113 1 284 1 362 1 115 2 328 1 311 1 369 1 227 1 197 1 312 1 170 1 228 1 270 1 374 1 74 1 376 1 352 1 
300 1 168 1 155 1 348 1 107 1 136 1 7 1 112 1 113 1 77 1 
115 2 300 5 191 5 227 1 348 5 170 2 107 5 28 2 293 1 9 5 314 2 296 2 215 2 89 5 148 10 
348 1 270 1 54 1 284 1 42 1 168 1 
300 2 0 1 279 1 2 2 132 4 155 1 107 2 53 1 136 2 54 4 7 2 244 1 113 2 284 3 249 1 326 1 64 1 329 1 142 4 165 1 222 2 270 3 18 1 146 2 71 1 351 2 42 2 333 4 299 1 
19 1 129 1 48 1 0 1 132 1 133 1 357 1 257 2 109 1 29 1 285 1 362 2 364 1 220 1 328 2 326 1 142 1 165 1 97 2 169 1 372 1 312 3 228 1 70 1 18 1 146 1 273 1 375 1 74 3 333 1 352 2 43 1 
300 1 191 2 2 1 168 2 155 1 348 4 107 2 136 1 9 2 7 1 124 1 351 1 89 2 113 1 148 4 
34 1 336 1 99 1 
34 1 336 1 99 1 
34 1 303 1 345 1 35 1 99 1 
34 1 336 1 99 1 
34 1 361 1 99 1 
34 1 361 1 99 1 
34 1 361 1 99 1 
34 1 99 1 
214 1 254 1 
220 8 235 1 97 4 225 1 369 1 169 4 269 4 170 1 357 2 358 1 101 1 28 1 109 2 313 3 272 2 375 2 273 2 124 1 376 1 286 1 
220 6 235 1 169 3 369 1 269 3 358 1 170 1 28 1 313 2 272 2 124 1 376 1 231 1 286 1 
220 4 97 2 169 2 269 2 170 1 357 1 101 1 109 1 28 1 313 2 8 1 314 1 272 1 375 1 273 1 296 1 215 1 
220 7 62 1 277 1 169 4 4 2 269 3 170 1 101 1 28 1 313 2 314 1 272 1 296 1 215 1 141 1 
235 2 277 2 4 2 358 1 357 2 82 1 28 3 109 2 215 2 286 1 287 1 62 1 220 23 189 1 225 2 97 4 369 1 169 12 269 11 170 3 101 4 313 9 314 2 296 2 272 5 375 2 273 2 124 1 376 2 
220 1 169 1 4 1 
220 1 277 1 269 1 
220 6 97 2 169 3 269 3 357 1 170 1 101 1 109 1 28 1 8 1 293 1 313 3 314 1 273 1 375 1 296 1 215 1 272 2 
174 1 277 1 105 1 4 1 5 1 357 1 109 1 28 2 111 1 215 2 59 1 141 1 220 12 118 1 97 2 169 6 269 6 170 2 101 1 313 2 314 2 273 1 375 1 296 2 272 1 
220 6 235 1 369 1 169 3 269 3 170 1 101 1 28 1 313 2 272 1 376 1 
220 3 235 1 225 1 97 2 169 2 269 1 357 1 358 1 82 1 101 1 109 1 313 2 272 1 375 1 273 1 376 1 286 1 
174 1 235 1 277 1 105 1 4 1 357 1 358 1 28 1 109 1 286 1 141 1 220 8 97 2 169 4 369 1 269 4 170 1 313 2 273 1 375 1 272 2 124 1 376 1 
174 1 235 1 277 1 105 1 4 2 358 1 357 2 109 2 28 2 8 1 215 1 286 1 141 1 220 11 62 1 97 4 369 1 169 5 269 6 170 1 101 1 313 3 272 2 273 2 375 2 296 1 124 1 376 1 
174 1 235 1 277 1 105 1 5 1 4 1 358 1 357 3 109 3 28 3 8 1 111 1 215 2 59 1 286 1 141 1 220 19 118 1 97 6 225 1 369 1 169 10 269 9 170 3 101 1 313 4 314 2 273 3 375 3 296 2 272 3 124 1 376 1 
174 1 235 1 277 1 105 1 4 1 5 1 358 1 357 3 109 3 28 3 8 1 111 1 215 2 59 1 286 1 141 1 220 17 118 1 225 1 97 6 369 1 169 7 269 10 170 2 101 2 313 5 314 1 273 3 375 3 296 2 272 3 124 1 376 1 
174 1 235 1 277 1 105 1 4 1 357 1 358 1 28 1 109 1 286 1 141 1 220 8 97 2 169 4 369 1 269 4 170 1 313 2 273 1 375 1 272 2 124 1 376 1 
174 1 277 1 105 1 4 1 5 1 357 1 109 1 28 2 111 1 215 2 59 1 141 1 220 12 118 1 97 2 169 6 269 6 170 2 101 1 313 2 314 2 273 1 375 1 296 2 272 1 
174 1 235 1 277 1 105 1 5 1 4 1 358 1 357 4 109 4 28 3 8 1 111 1 215 2 59 1 286 1 141 1 220 18 118 1 97 8 225 2 369 1 169 8 269 10 170 2 101 2 313 5 314 1 273 4 375 4 296 2 272 3 124 1 376 1 
174 1 277 1 105 1 5 1 4 1 357 4 109 4 28 3 111 1 215 3 59 1 141 1 220 16 118 1 97 8 225 2 196 1 169 7 269 9 170 2 101 3 313 6 314 2 273 4 375 4 296 3 272 3 
220 7 235 3 169 4 369 1 269 3 170 1 358 1 101 3 28 1 313 6 272 3 376 3 286 2 
174 1 235 1 277 1 105 1 5 1 4 1 358 1 357 4 109 4 28 3 111 1 215 2 59 1 286 1 141 1 220 18 118 1 97 8 225 2 196 1 369 1 169 8 269 10 170 2 101 1 313 4 314 1 273 4 375 4 296 2 272 3 124 1 376 1 
174 1 220 10 235 2 209 1 97 2 169 5 369 1 269 5 357 1 170 2 101 2 109 1 28 2 313 5 273 1 375 1 272 3 376 2 
174 1 220 2 97 2 269 2 357 1 101 1 109 1 28 1 313 1 375 1 273 1 215 1 
174 1 220 4 97 2 169 2 269 2 170 1 357 1 101 1 109 1 28 1 313 2 314 1 272 1 375 1 273 1 296 1 215 1 
220 3 174 1 235 1 225 1 97 6 196 1 169 2 269 1 357 3 82 1 101 1 109 3 313 2 375 3 273 3 272 1 376 1 
174 1 235 3 277 3 4 4 358 1 52 1 357 5 82 1 109 5 28 5 8 1 215 3 286 1 141 1 220 34 62 1 341 1 366 1 225 2 97 10 196 1 369 2 169 18 269 16 170 5 101 5 313 12 314 3 273 5 375 5 296 3 272 7 124 1 376 3 
312 1 19 1 212 1 328 1 21 1 344 1 74 1 
19 1 328 1 21 1 344 1 312 1 241 1 212 1 181 1 242 1 110 1 74 1 90 1 
53 1 249 1 18 1 326 1 146 1 142 1 165 1 0 1 333 1 231 1 132 1 
19 1 328 1 326 1 142 1 165 1 0 1 132 1 133 1 372 1 257 1 312 2 27 1 18 1 146 1 29 1 74 2 333 1 362 1 
263 1 19 1 328 2 326 1 310 1 142 1 165 1 0 3 222 1 132 1 133 1 372 1 197 1 257 1 312 2 38 1 83 1 27 1 18 2 29 2 74 2 333 1 362 2 
19 1 207 1 0 3 132 2 257 1 27 1 83 1 85 1 29 2 362 2 263 1 326 1 328 2 310 1 142 2 165 1 222 1 372 1 312 2 197 1 38 1 18 2 74 2 333 2 
0 4 320 1 132 3 54 1 85 1 29 1 284 2 263 1 326 1 142 3 165 1 222 1 267 1 168 1 195 1 348 1 291 1 270 2 38 1 18 1 332 1 146 1 333 3 
263 1 326 1 142 3 165 1 0 4 222 1 320 1 267 1 168 1 131 1 132 3 195 1 348 1 38 1 270 2 18 1 146 1 54 1 85 1 29 1 284 2 333 3 
326 1 142 1 165 1 208 1 333 1 132 1 
365 1 92 1 326 2 342 1 301 1 276 1 142 7 208 1 165 3 0 3 132 7 346 1 322 1 180 1 325 1 18 2 146 2 29 1 333 6 217 1 253 1 
48 1 301 1 0 1 257 1 157 1 109 2 61 1 220 6 165 1 169 3 269 3 312 2 170 1 17 1 18 1 313 2 273 2 272 2 74 2 124 1 19 2 129 2 236 1 235 1 132 1 133 1 357 2 358 1 26 1 27 1 28 1 29 1 362 1 286 1 140 1 364 2 91 1 328 1 326 1 142 1 97 4 372 1 369 1 375 2 376 1 333 1 43 1 
300 1 355 1 0 2 320 1 279 1 131 1 132 1 281 1 155 2 107 1 158 1 136 2 54 2 7 2 112 1 113 2 284 3 142 1 289 1 267 1 168 1 195 1 348 1 270 3 146 1 42 1 333 1 77 1 
92 1 326 1 301 1 142 2 208 1 165 2 0 2 304 1 132 2 195 1 18 1 29 1 333 2 
249 1 326 1 301 1 142 4 165 1 0 1 132 4 53 1 18 1 146 1 85 1 315 1 333 4 
326 1 276 1 142 2 165 2 0 1 222 1 132 2 330 1 18 1 252 1 29 1 333 2 316 1 253 1 
103 1 326 1 146 1 142 1 356 1 165 1 290 1 333 1 132 1 247 1 
326 1 301 1 342 1 142 2 165 1 0 1 132 2 325 1 18 1 333 2 75 1 
249 1 326 2 301 1 142 5 165 2 0 3 222 1 132 5 53 1 180 1 325 1 18 2 146 1 315 1 333 4 217 1 
249 1 326 2 301 1 142 5 165 2 0 3 222 1 132 5 335 1 53 1 180 1 325 1 18 2 146 1 315 1 333 4 
19 1 328 1 326 1 142 1 207 1 165 1 0 1 132 1 372 1 257 1 312 2 27 1 18 1 146 1 29 1 74 2 333 1 362 1 
92 1 326 1 276 1 142 1 165 2 0 1 222 1 132 1 346 1 18 1 29 1 333 1 253 1 
19 1 20 1 331 1 350 1 166 1 
19 1 20 2 310 1 166 2 320 1 168 1 153 1 348 1 197 1 83 1 158 1 270 2 331 1 102 1 350 2 122 1 284 2 353 1 340 1 
312 1 20 1 331 1 328 1 87 1 350 1 74 1 319 1 15 1 
331 1 102 1 340 1 
271 1 318 1 231 1 25 1 
271 1 41 1 318 1 297 1 154 1 246 1 25 1 
260 1 36 1 297 1 
318 1 367 2 154 1 25 1 349 1 271 1 41 1 55 1 123 1 139 1 297 3 246 3 
271 1 41 1 318 1 258 1 30 1 297 2 154 1 246 2 25 1 
271 1 41 1 288 1 55 1 356 1 290 1 297 1 239 1 154 1 240 1 246 1 
271 1 41 1 55 1 318 1 297 1 154 1 246 1 
41 1 55 1 318 2 297 1 154 1 246 1 25 1 
163 1 318 1 178 1 154 2 271 1 41 2 55 1 73 1 297 2 246 2 
271 2 306 1 41 1 55 1 318 1 200 1 30 2 297 3 154 1 240 1 379 1 246 3 25 1 
103 1 318 1 356 1 290 2 96 1 238 1 154 1 239 1 25 1 271 1 41 1 55 1 297 2 30 1 246 2 
318 1 154 2 240 1 25 1 134 1 41 2 271 2 55 1 258 1 297 4 30 2 246 4 379 1 
271 1 41 1 55 1 318 1 297 1 154 1 246 1 25 1 
318 2 33 1 367 1 154 1 240 1 25 2 41 1 271 3 123 1 139 1 30 2 297 4 246 4 379 1 
66 1 318 1 143 1 154 1 25 1 271 1 41 1 55 1 360 1 297 2 30 1 246 2 
318 1 367 2 3 1 154 1 25 1 271 1 41 1 55 1 123 2 139 1 297 3 246 3 
6 1 354 1 46 2 271 2 
41 1 55 1 297 1 154 1 378 1 246 1 
271 1 306 1 41 1 55 1 318 1 30 1 297 2 154 1 246 2 25 1 
203 1 
271 1 41 1 55 1 318 1 297 1 154 1 246 1 25 1 
318 1 367 1 154 1 25 1 41 1 271 1 306 1 55 1 30 1 297 3 246 3 
271 1 33 1 240 1 379 1 
271 1 318 1 

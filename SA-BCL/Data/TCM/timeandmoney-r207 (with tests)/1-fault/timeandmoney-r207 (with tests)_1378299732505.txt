#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 80 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 105 6 242 1 266 1 314 1 224 1 319 1 82 2 295 2 322 2 56 9 35 5 159 4 59 2 306 1 228 3 117 1 210 1 187 1 212 1 147 9 20 1 42 1 195 2 196 1 286 1 381 2 45 1 
0 2 105 6 242 1 266 1 314 1 224 1 319 1 82 2 295 2 322 2 56 9 35 5 159 4 59 2 306 1 228 3 117 1 210 1 187 1 212 1 147 9 20 1 42 1 195 2 196 1 286 1 381 2 45 1 
0 2 105 7 242 1 266 1 314 1 224 1 319 1 82 2 295 2 322 2 56 10 35 6 159 5 59 2 306 1 228 4 117 1 210 1 187 1 212 1 147 10 20 1 42 1 195 2 196 1 286 1 381 2 45 1 
0 2 105 4 242 1 266 1 314 1 319 1 82 2 295 2 322 1 56 7 35 4 159 3 59 2 306 1 228 2 117 1 210 1 187 1 212 1 147 7 20 1 42 1 195 2 196 1 286 1 381 2 45 1 
159 2 59 1 228 1 105 3 242 1 210 1 224 1 82 1 212 1 295 1 147 4 322 2 56 4 42 1 195 1 381 1 45 1 35 3 
59 1 0 1 130 1 242 1 266 1 183 1 319 1 212 1 82 1 295 1 147 2 193 1 56 2 42 1 195 1 35 1 
159 1 59 2 0 1 228 1 105 1 242 1 212 1 295 2 147 3 56 3 42 1 196 1 35 2 
0 1 105 7 242 1 342 1 224 1 82 1 295 2 322 2 56 9 32 1 35 5 159 4 59 2 228 3 210 1 212 1 147 9 20 1 42 1 196 1 195 1 286 1 381 1 45 1 
0 1 105 7 242 1 342 1 224 1 82 1 295 2 322 2 56 9 32 1 35 5 159 4 59 2 228 3 210 1 212 1 147 9 20 1 42 1 196 1 195 1 286 1 381 1 45 1 
26 1 77 1 73 1 
77 1 51 2 186 1 
220 2 87 2 30 2 205 2 259 2 50 1 336 2 74 1 
287 1 220 2 338 1 75 1 25 1 177 1 50 1 317 1 318 1 111 1 6 1 244 2 30 3 205 2 346 2 84 1 327 1 87 2 88 1 229 2 250 1 279 1 13 1 162 1 374 1 190 1 355 1 281 1 166 2 254 1 330 1 120 2 259 3 218 1 336 2 74 1 47 1 
220 1 87 1 18 1 30 1 205 1 259 1 71 1 179 1 336 1 74 1 
220 1 304 1 26 1 76 1 77 1 345 1 225 1 294 1 30 1 259 1 71 1 168 1 367 1 72 1 
87 1 220 1 304 1 26 1 77 1 345 1 294 2 205 1 30 1 259 1 71 1 168 2 367 1 72 1 336 1 
1 1 277 1 313 1 168 1 294 1 
233 1 26 1 1 1 313 1 77 1 11 1 168 2 294 2 
1 1 168 1 294 1 
87 1 220 1 201 1 313 1 179 1 294 1 18 1 205 1 30 1 259 1 71 1 168 1 74 1 336 1 
77 1 
17 1 26 1 1 1 313 1 77 1 11 1 168 2 294 2 
200 2 288 2 23 1 26 1 37 1 351 1 313 2 1 2 77 1 132 1 11 1 352 1 294 5 270 2 271 1 54 1 168 5 115 1 300 1 
50 1 73 1 
220 2 87 1 363 1 50 2 30 2 205 1 194 1 259 2 336 1 
62 1 170 1 231 1 
303 1 287 1 338 1 25 1 229 1 177 1 50 1 317 1 162 1 318 1 6 1 120 1 244 1 30 1 259 1 218 1 
220 3 87 3 30 3 205 3 307 1 259 3 50 1 336 1 
220 1 87 1 30 1 205 1 259 1 71 1 179 1 
220 1 87 1 30 1 205 1 363 1 194 1 259 1 71 1 336 1 
287 1 220 3 338 1 75 1 25 1 363 1 177 1 50 1 317 1 345 1 318 1 111 1 294 1 6 1 244 1 30 4 205 3 346 2 325 1 367 1 327 1 87 3 304 1 305 1 307 1 229 1 250 1 279 1 13 1 162 1 190 1 280 1 355 1 166 1 254 1 330 1 120 1 259 4 71 1 168 1 72 1 218 1 336 2 74 1 
220 2 87 1 30 2 205 1 76 1 259 2 307 1 50 1 247 1 
87 3 220 3 304 1 305 1 363 1 307 2 77 1 345 1 294 1 205 3 30 3 122 1 259 3 168 1 71 1 325 1 72 1 367 1 336 1 
87 2 220 2 62 1 363 1 307 1 231 1 205 2 30 2 259 2 336 1 
287 1 338 1 25 1 229 1 177 1 50 1 162 1 317 1 318 1 6 1 120 1 244 1 30 1 259 1 218 1 
287 1 160 1 338 1 25 1 229 1 177 1 50 1 162 1 317 1 318 1 120 1 244 1 30 1 259 1 127 1 
265 1 175 1 27 1 226 1 269 1 296 1 346 2 327 1 274 1 276 1 62 2 251 1 279 1 13 1 190 2 355 1 281 2 231 2 254 1 166 4 330 1 358 1 170 2 124 1 
220 1 87 1 304 1 30 1 205 1 259 1 71 1 359 1 
287 1 87 1 220 1 338 1 25 1 307 1 229 1 177 1 317 1 162 1 318 1 231 1 6 1 120 1 244 1 205 1 30 2 259 2 325 1 218 1 
87 4 220 5 363 1 76 1 307 2 50 1 204 1 205 4 30 5 19 1 259 5 325 1 247 1 336 1 
220 2 87 2 30 2 205 2 259 2 71 1 359 1 179 1 
109 1 344 1 
109 1 344 1 
70 1 343 1 
70 1 343 1 
70 1 343 1 
341 1 109 1 344 1 
341 1 109 1 344 1 
150 1 109 1 344 1 
70 1 78 1 343 1 109 2 344 2 3 1 
341 1 109 1 344 1 
108 1 109 1 344 1 
108 1 109 1 344 1 
108 1 109 1 344 1 
78 1 77 1 107 2 344 2 109 2 161 1 28 1 293 2 192 2 294 2 364 1 98 1 69 1 206 1 168 2 216 1 369 2 361 3 262 2 
220 2 104 1 239 1 150 1 50 1 107 1 109 1 344 1 28 1 110 1 293 1 294 1 205 2 30 2 156 1 369 1 87 2 192 1 282 1 259 2 168 1 99 1 237 1 361 1 
195 1 381 1 82 1 
195 1 183 1 82 1 
375 1 183 1 185 1 381 2 302 1 82 3 
375 1 155 1 183 1 185 1 381 1 82 2 
375 2 183 1 185 1 381 1 82 2 
104 1 200 1 288 1 239 1 26 1 1 1 313 4 132 1 77 2 202 1 49 2 51 3 226 1 270 1 294 5 271 3 55 1 366 1 275 1 371 1 276 1 11 1 352 2 186 1 146 2 358 1 168 5 41 1 124 1 237 1 311 1 46 2 
200 2 173 1 288 2 23 1 290 1 26 1 1 6 313 7 77 5 132 1 202 3 51 9 226 3 294 9 270 2 272 5 271 8 55 2 366 1 276 3 277 5 11 1 352 6 373 1 186 3 165 1 146 6 167 1 258 1 358 3 168 9 41 2 124 3 237 4 46 6 
200 1 288 1 23 1 26 1 313 2 77 3 49 1 202 1 51 4 226 1 270 1 294 3 271 3 55 1 371 1 276 1 352 2 186 2 146 2 168 3 41 1 358 1 124 1 237 1 311 1 46 2 
200 1 173 1 288 1 23 1 26 1 313 3 77 4 49 2 202 2 51 7 226 2 270 1 294 4 271 5 55 1 371 1 276 2 352 4 186 3 165 1 146 4 258 1 168 4 41 1 358 2 124 2 237 2 311 1 46 4 
317 1 253 1 73 1 
182 1 317 1 
335 1 
25 1 317 1 
287 1 96 1 25 1 235 1 253 2 317 3 
287 1 25 1 317 1 
379 1 317 1 
276 1 131 1 240 2 27 2 211 1 94 1 190 3 281 4 166 7 376 1 296 3 246 1 124 1 326 1 298 1 299 1 9 1 
276 1 131 1 240 2 27 2 211 1 94 1 190 3 281 4 166 7 376 1 296 3 246 1 124 1 326 1 298 1 299 1 9 1 
276 1 131 1 240 2 27 2 211 1 94 1 190 3 281 4 166 7 376 1 296 3 347 1 246 1 124 1 326 1 298 1 299 1 9 1 
337 1 264 1 240 3 131 5 27 5 202 3 226 3 5 1 323 3 296 10 346 2 157 1 114 4 246 1 324 1 298 1 327 1 326 2 299 1 9 2 276 4 93 1 211 2 279 1 13 1 94 2 190 15 281 16 166 31 330 1 376 1 358 3 124 4 310 1 
166 1 330 1 172 1 240 1 346 2 279 1 13 1 327 1 94 1 326 1 80 1 281 1 
0 1 338 1 105 1 242 1 48 1 292 1 268 1 82 2 295 1 320 1 244 1 181 1 56 2 35 1 302 1 209 1 59 1 350 1 64 1 229 1 183 1 162 1 212 1 283 1 147 2 120 1 42 1 195 1 381 1 102 1 
0 1 338 1 105 2 242 1 292 1 268 1 82 2 295 1 320 1 244 1 181 1 56 3 35 1 302 1 209 1 59 1 64 1 229 1 183 1 162 1 283 1 147 3 120 1 257 1 284 1 123 1 42 1 195 1 381 1 102 1 
0 1 338 1 105 2 242 1 292 1 82 2 320 1 244 1 56 2 35 1 302 1 209 1 64 1 229 1 183 1 162 1 283 1 147 2 120 1 257 1 123 1 42 1 195 1 381 1 102 1 
0 2 338 1 25 1 317 1 318 1 295 1 244 1 297 1 56 1 31 1 209 2 59 1 144 1 64 2 229 1 162 1 39 1 283 2 147 1 120 1 121 1 213 1 284 1 
209 1 338 1 0 1 59 1 229 1 64 1 292 1 48 1 183 1 162 1 268 1 82 2 212 1 320 1 295 1 283 1 147 1 257 1 120 1 181 1 244 1 56 1 195 1 381 1 302 1 102 1 
12 1 
103 2 200 1 288 1 338 1 1 6 51 2 345 1 294 5 7 1 244 2 8 1 57 2 304 1 11 3 352 2 162 1 163 1 164 1 356 2 120 2 68 2 357 2 259 1 168 5 169 1 71 1 72 1 360 1 129 1 220 1 25 1 26 1 76 1 77 2 132 1 316 1 317 1 318 2 225 1 270 1 271 2 30 1 137 4 273 1 31 1 85 1 368 2 367 1 89 2 229 2 92 1 186 2 39 1 41 1 285 1 
220 1 304 1 1 2 76 1 11 1 345 1 225 1 294 3 17 1 7 1 30 1 137 2 357 1 259 1 71 1 168 3 169 1 285 1 72 1 367 1 360 1 8 1 
220 1 26 1 1 1 76 1 77 1 345 1 225 1 294 3 7 1 30 1 137 3 367 1 8 1 304 1 11 1 17 1 68 1 259 1 169 1 168 3 71 1 285 1 72 1 360 1 
220 1 26 1 76 1 1 2 77 1 345 1 225 1 294 3 7 1 30 1 137 3 367 1 368 1 8 1 304 1 11 1 17 1 68 1 259 1 357 1 169 1 168 3 71 1 285 1 72 1 360 1 
200 1 103 2 288 1 1 7 203 1 345 1 294 5 7 1 8 1 57 2 304 1 11 3 352 1 17 1 356 2 68 4 357 4 259 1 71 1 168 5 169 1 72 1 360 1 128 1 220 1 26 5 76 1 77 5 132 1 225 1 270 1 29 1 365 1 271 1 30 1 137 6 85 1 141 1 368 4 367 1 89 2 92 1 186 2 285 1 
200 1 103 2 288 1 1 4 51 2 345 1 294 4 7 1 8 1 57 2 304 1 11 2 352 1 164 1 356 2 68 2 259 1 357 2 71 1 168 4 169 1 72 1 360 1 220 1 26 1 76 1 132 1 77 2 225 1 270 1 271 1 30 1 137 4 85 1 367 1 368 2 89 2 92 1 186 2 285 1 
103 2 200 1 220 1 288 1 26 1 1 4 76 1 77 1 132 1 203 1 345 1 225 1 294 4 270 1 29 1 7 1 271 1 30 1 137 4 85 1 368 2 367 1 8 1 57 2 304 1 89 2 11 2 92 1 352 1 186 2 356 2 68 2 357 2 259 1 169 1 168 4 71 1 285 1 72 1 360 1 128 1 
103 2 200 1 220 1 288 1 26 1 1 4 76 1 77 1 132 1 203 1 345 1 225 1 294 4 270 1 29 1 7 1 271 1 30 1 137 4 85 1 368 2 367 1 8 1 57 2 304 1 89 2 11 2 92 1 352 1 186 2 356 2 68 2 357 2 259 1 169 1 168 4 71 1 285 1 72 1 360 1 128 1 
200 1 220 1 288 1 289 2 339 1 26 1 1 4 76 1 77 1 132 1 51 2 345 1 225 1 294 4 270 1 29 1 7 1 271 1 30 1 137 4 368 2 367 1 8 1 304 1 89 2 11 2 278 2 92 1 352 1 354 1 309 1 356 2 68 2 357 2 259 1 169 1 168 4 71 1 285 1 72 1 360 1 
103 2 200 1 220 1 288 1 26 1 76 1 1 5 77 1 132 1 203 1 345 1 225 1 270 1 294 4 29 1 7 1 271 1 30 1 137 5 85 1 141 1 367 1 368 3 8 1 57 2 304 1 89 2 11 2 92 1 352 1 186 2 356 2 68 3 259 1 357 3 169 1 168 4 71 1 285 1 72 1 360 1 128 1 
103 2 200 1 220 1 288 1 26 1 76 1 1 5 77 1 132 1 203 1 345 1 225 1 270 1 294 4 29 1 7 1 271 1 30 1 137 5 85 1 141 1 367 1 368 3 8 1 57 2 304 1 89 2 11 2 92 1 352 1 186 2 356 2 68 3 259 1 357 3 169 1 168 4 71 1 285 1 72 1 360 1 128 1 
200 1 220 1 288 1 289 2 339 1 26 1 1 4 76 1 77 1 132 1 51 2 345 1 225 1 270 1 294 4 7 1 271 1 30 1 137 4 368 2 367 1 8 1 304 1 89 2 11 2 278 2 92 1 352 1 164 1 356 2 68 2 357 2 259 1 169 1 168 4 71 1 285 1 72 1 360 1 
240 1 265 1 27 2 50 2 296 2 346 2 246 1 327 1 299 1 9 1 62 1 276 1 211 1 279 1 13 1 190 3 355 1 231 1 281 3 254 1 166 6 330 1 376 1 170 1 124 1 73 1 
264 1 131 1 27 1 106 1 50 1 202 2 111 1 52 1 226 1 296 2 323 3 83 1 346 4 136 1 157 1 114 3 327 2 61 1 276 2 62 4 279 2 13 2 374 1 190 6 355 1 231 11 281 8 254 2 166 14 330 2 358 2 170 11 124 1 
287 1 220 1 338 1 174 1 25 1 177 1 50 1 317 1 318 1 81 1 111 1 6 1 244 1 30 2 205 1 136 1 346 2 325 1 142 1 327 1 303 1 87 1 62 1 229 1 307 1 279 1 162 1 13 1 190 1 374 1 355 1 281 1 254 1 166 2 330 1 120 1 259 2 218 1 
287 2 338 2 240 1 50 2 202 2 111 1 6 2 244 3 296 8 205 1 346 6 246 1 349 2 299 1 9 1 62 7 307 1 250 2 211 1 13 3 162 2 66 2 355 3 254 3 166 20 257 1 120 3 67 2 259 3 260 2 358 2 170 7 124 3 218 2 220 1 25 2 131 4 27 4 79 1 177 2 317 2 318 1 226 2 30 3 136 1 325 1 327 3 87 1 276 3 229 3 279 3 374 1 190 10 231 7 281 10 330 3 376 1 197 1 100 1 
220 1 338 2 25 2 265 1 317 3 318 2 133 1 111 1 154 1 244 8 30 1 205 1 346 4 84 2 207 1 31 1 327 2 158 1 87 1 350 1 307 1 229 8 279 2 328 1 162 2 13 2 374 1 190 1 355 2 281 1 39 1 254 2 166 2 330 2 257 1 120 7 333 1 259 1 101 1 
220 1 363 1 27 1 202 1 226 1 296 1 205 1 30 1 346 2 136 1 327 1 87 1 62 1 276 1 279 1 13 1 15 1 190 2 355 1 231 1 281 1 254 1 166 3 330 1 259 1 358 1 170 1 124 1 336 1 
131 1 62 1 276 1 265 1 279 1 13 1 355 1 231 1 269 1 281 2 166 2 254 1 330 1 296 1 346 2 358 1 170 1 327 1 
62 1 265 1 27 1 175 1 279 1 13 1 190 2 355 1 231 1 226 1 166 2 254 1 330 1 296 1 346 2 170 1 124 1 327 1 
131 1 265 1 27 1 202 1 226 1 296 2 346 2 327 1 276 1 62 2 279 1 13 1 190 2 355 1 281 2 231 2 254 1 166 4 330 1 358 1 170 2 124 1 
131 1 62 1 276 1 279 1 13 1 355 1 231 1 269 1 281 2 166 2 254 1 330 1 296 1 346 2 207 1 358 1 170 1 327 1 
62 1 27 1 175 1 279 1 13 1 190 2 355 1 231 1 226 1 166 2 254 1 330 1 296 1 346 2 207 1 170 1 124 1 327 1 
131 1 27 1 202 1 226 1 296 2 346 2 207 1 327 1 276 1 62 2 279 1 13 1 190 2 355 1 281 2 231 2 254 1 166 4 330 1 358 1 170 2 124 1 
131 1 27 1 202 1 226 1 296 2 346 2 327 1 276 1 62 2 279 1 13 1 190 2 355 1 281 2 231 2 166 4 254 1 330 1 358 1 170 2 124 1 
287 1 338 1 25 1 177 1 50 1 317 1 318 1 111 1 6 1 244 1 30 1 346 2 327 1 229 1 250 1 279 1 162 1 13 1 374 1 190 1 355 1 281 1 166 2 254 1 330 1 120 1 259 1 218 1 
287 1 338 1 25 1 177 1 50 1 317 1 318 1 111 1 244 1 30 1 346 2 327 1 160 1 229 1 279 1 162 1 13 1 374 1 190 1 355 1 281 1 166 2 254 1 330 1 120 1 259 1 127 1 380 1 
131 1 27 1 202 1 226 1 296 2 346 2 136 1 327 1 276 1 62 2 279 1 13 1 190 2 355 1 281 2 231 2 254 1 166 4 330 1 358 1 170 2 124 1 
287 1 338 1 131 1 25 1 27 1 177 1 202 1 317 1 226 1 6 1 296 2 244 1 30 1 346 2 327 1 62 2 276 1 350 1 229 1 250 1 279 1 162 1 13 1 190 2 355 1 231 2 281 2 166 4 254 1 330 1 120 1 259 1 358 1 260 1 170 2 124 1 218 1 
220 1 131 1 363 1 202 1 226 1 296 1 205 1 30 1 346 2 136 1 327 1 87 1 276 1 62 1 279 1 13 1 190 1 355 1 281 2 231 1 254 1 166 3 330 1 259 1 358 1 170 1 124 1 336 1 219 1 
172 1 264 1 131 3 27 3 340 1 202 3 243 1 178 1 226 3 323 1 296 6 346 4 157 1 114 2 327 2 276 3 65 1 279 2 184 1 13 2 190 10 281 9 166 19 255 2 330 2 40 2 334 1 358 3 124 3 238 1 
172 1 131 2 264 2 27 2 340 2 202 3 243 1 178 1 226 2 296 4 323 2 346 6 113 1 114 2 327 3 60 1 276 3 145 1 65 2 279 3 13 3 190 12 281 14 166 26 255 1 330 3 256 1 40 4 334 1 358 3 171 1 124 2 215 1 310 2 
240 1 340 1 202 4 243 1 296 8 157 1 346 6 113 1 114 4 246 1 299 1 9 1 60 1 65 2 211 1 13 3 166 41 256 1 255 1 358 4 124 5 171 1 125 1 215 1 310 1 172 1 131 4 264 3 27 4 178 1 226 4 323 3 327 3 276 5 145 1 279 3 184 1 190 21 281 20 330 3 376 1 40 4 334 1 
172 1 240 1 264 3 131 3 27 4 340 1 202 4 243 1 178 1 226 3 323 3 296 7 346 8 157 1 113 1 114 4 246 1 327 4 299 1 9 1 60 1 276 5 145 1 65 2 211 1 279 4 184 1 13 4 190 18 281 20 166 38 255 1 256 1 330 4 376 1 40 4 334 1 358 4 125 1 171 1 124 4 215 1 310 2 
172 1 240 1 264 2 131 7 27 7 340 1 202 7 243 1 178 1 226 7 323 4 296 14 83 2 346 4 157 2 113 1 114 4 246 1 327 2 299 1 9 1 60 1 276 8 145 1 65 1 211 1 279 2 13 2 190 25 281 27 166 52 255 1 256 1 330 2 376 1 40 4 334 1 358 7 171 1 124 8 215 1 310 1 
98 1 78 1 107 1 216 1 369 1 109 1 344 1 16 1 293 1 192 1 
150 1 99 1 
138 1 149 1 2 1 107 1 369 1 109 1 344 1 293 1 192 1 
78 1 77 1 107 1 344 1 109 1 28 1 293 1 294 1 192 1 364 1 98 1 69 1 206 1 168 1 216 1 369 1 361 2 262 1 
78 1 77 1 107 1 344 1 109 1 28 1 293 1 294 1 192 1 364 1 98 1 69 1 206 1 168 1 216 1 369 1 361 2 262 1 
78 1 77 1 107 1 344 1 109 1 28 1 293 1 294 1 192 1 364 1 98 1 69 1 206 1 168 1 216 1 369 1 361 2 262 1 
341 1 3 1 208 1 
341 1 3 1 208 1 
221 1 108 1 
221 1 108 1 3 1 
156 1 110 1 
104 1 220 2 239 1 150 1 222 1 313 1 50 1 107 1 109 1 344 1 110 1 293 1 294 1 30 2 206 1 156 1 205 2 369 1 87 2 192 1 282 1 259 2 168 1 99 1 237 1 262 1 361 1 
341 1 208 1 
221 1 108 1 3 1 
220 2 338 1 25 1 317 1 223 1 111 1 244 2 30 2 136 1 346 2 84 2 327 1 229 2 279 1 252 1 328 1 162 1 13 1 353 1 374 1 190 1 355 1 281 1 254 1 166 2 330 1 120 2 232 1 259 2 236 1 101 1 
338 1 350 1 152 1 229 2 183 1 162 1 82 2 283 1 320 1 257 1 120 2 244 2 134 1 181 1 195 1 348 1 381 1 302 1 102 1 
338 1 229 1 183 1 162 1 82 2 283 1 320 1 257 1 120 1 244 1 134 1 181 1 139 1 195 1 381 1 302 1 102 1 
338 1 144 1 25 1 152 1 229 1 91 1 162 1 317 1 318 1 39 1 283 1 120 1 244 1 31 1 
338 1 152 1 229 1 183 1 162 1 82 2 283 1 320 1 257 1 120 1 244 1 134 1 181 1 195 1 348 1 381 1 302 1 102 1 
90 1 
271 1 54 1 26 1 351 1 77 1 352 1 73 1 
103 1 200 1 288 1 26 1 1 1 11 1 77 2 132 1 352 1 51 1 186 1 294 1 270 1 271 1 168 1 85 1 57 1 
287 3 200 4 288 4 338 3 291 2 1 5 241 1 202 2 51 12 4 2 294 5 54 1 244 3 349 2 58 1 248 2 350 1 351 1 63 2 11 3 308 1 352 8 162 4 253 2 120 3 168 5 358 2 124 2 72 2 129 1 263 1 362 2 25 3 26 2 132 4 77 8 317 10 318 1 270 4 226 2 271 9 182 3 276 2 229 3 230 2 188 2 186 6 96 1 146 6 148 1 41 2 379 2 199 2 46 6 
200 2 288 2 264 1 26 2 1 1 132 2 77 5 202 2 51 6 294 1 270 2 226 2 271 8 323 1 113 1 114 1 60 1 248 1 276 2 11 1 145 1 352 5 14 1 230 2 186 3 329 1 146 5 256 1 41 1 168 1 358 2 124 2 215 1 129 1 46 5 
200 1 220 1 288 1 201 1 132 1 203 1 179 1 270 1 294 1 271 2 30 1 205 1 227 1 299 1 9 1 87 1 248 1 276 2 352 2 211 1 230 2 18 1 259 1 71 1 168 1 124 1 74 1 336 1 
200 1 288 1 26 1 351 1 132 1 77 1 352 1 270 1 271 1 54 1 
248 1 276 2 77 5 202 2 352 5 51 10 230 2 186 5 226 2 146 5 271 5 358 2 124 2 349 1 46 5 
26 1 1 1 77 1 168 1 11 1 294 1 
200 2 263 1 288 2 23 1 338 1 25 1 1 4 241 2 132 1 317 1 316 1 318 2 270 2 294 3 271 2 244 4 273 1 31 1 249 1 229 4 11 2 352 2 162 1 39 1 120 4 332 1 41 2 168 3 129 2 
220 2 287 1 338 1 75 1 25 1 177 1 50 1 317 1 318 1 111 1 6 1 244 1 30 3 205 2 346 2 327 1 87 2 229 1 250 1 279 1 13 1 162 1 190 1 355 1 166 1 254 1 330 1 120 1 259 3 218 1 336 2 74 1 
200 1 288 1 240 1 26 2 132 1 77 4 352 2 51 4 186 2 270 1 146 2 271 1 41 1 46 2 129 1 
107 1 369 1 217 1 
107 1 369 1 217 1 
234 1 107 1 216 1 369 1 110 1 
107 1 369 1 217 1 
107 1 369 1 153 1 
107 1 369 1 153 1 
107 1 369 1 153 1 
107 1 369 1 
109 1 344 1 
240 1 276 1 131 1 27 2 279 2 211 1 13 2 190 4 281 4 166 8 330 2 376 1 296 3 346 4 246 1 124 1 327 2 299 1 310 1 9 1 
240 1 276 1 27 2 211 1 190 3 281 3 166 6 376 1 296 2 246 1 124 1 299 1 73 1 9 1 
276 1 131 1 27 1 202 1 279 1 13 1 190 2 189 1 226 1 281 2 166 4 330 1 296 2 346 2 358 1 124 1 327 1 
264 1 276 1 131 1 27 1 202 1 190 4 226 1 281 3 166 7 323 1 296 2 157 1 114 2 358 1 124 1 
240 1 131 4 27 5 202 2 226 2 296 9 323 2 83 1 157 1 346 4 114 2 246 1 327 2 299 1 9 2 61 1 276 3 211 2 279 2 13 2 190 12 281 11 166 23 330 2 376 1 358 2 21 1 124 3 310 2 
166 1 114 1 190 1 
166 1 323 1 281 1 
276 1 131 1 27 2 202 1 279 1 13 1 189 1 190 3 281 3 226 1 166 6 330 1 296 3 346 2 358 1 124 1 349 1 327 1 
172 1 131 1 264 1 27 1 202 2 226 2 323 1 296 2 346 2 113 1 114 1 327 1 60 1 276 2 145 1 279 1 13 1 190 6 281 6 166 12 330 1 256 1 358 2 124 2 215 1 
276 1 131 1 27 1 211 1 190 3 281 3 166 6 296 2 124 1 299 1 9 1 
131 1 27 1 211 1 279 1 13 1 190 2 281 1 166 3 330 1 376 1 296 2 346 2 21 1 246 1 327 1 310 1 9 1 
172 1 131 2 276 2 27 3 279 1 211 2 13 1 190 5 281 5 166 10 330 1 296 5 346 2 227 1 124 2 327 1 299 1 9 2 
172 1 276 1 131 1 279 1 13 1 281 2 166 2 330 1 296 1 346 2 358 1 327 1 
172 1 276 1 131 1 27 1 202 1 279 1 13 1 190 2 226 1 281 2 166 4 330 1 296 2 346 2 358 1 124 1 327 1 
172 1 131 1 27 1 279 3 211 1 184 1 13 3 190 2 281 1 166 3 330 3 296 2 346 6 21 1 327 3 310 1 9 1 
172 1 337 1 240 1 264 1 131 5 27 7 202 3 226 3 5 1 323 3 296 12 346 10 157 1 114 4 246 1 324 1 327 5 299 2 9 3 276 5 211 3 279 5 184 1 13 5 190 18 189 1 281 16 166 34 330 5 376 1 21 1 358 3 124 5 310 2 
172 1 240 1 264 1 27 2 323 1 296 2 346 2 114 1 246 1 327 1 299 1 9 1 60 1 276 1 279 1 211 1 13 1 190 4 281 4 166 8 330 1 376 1 124 1 
172 1 240 1 264 1 131 1 27 2 202 1 323 1 296 3 346 4 157 1 114 2 246 1 327 2 299 1 9 1 60 1 276 2 211 1 279 2 13 2 190 5 189 1 281 6 166 11 330 2 376 1 358 1 124 1 
172 1 240 1 131 1 264 1 27 3 202 2 226 2 323 1 296 4 346 6 113 1 114 1 246 1 327 3 299 1 9 1 60 1 276 3 145 1 211 1 279 3 13 3 189 1 190 10 281 9 166 19 330 3 256 1 376 1 358 2 124 3 215 1 310 1 
172 1 240 1 131 2 264 1 27 3 202 2 226 1 323 1 296 5 346 6 113 1 114 1 246 1 327 3 299 1 9 1 60 1 276 3 145 1 211 1 279 3 13 3 189 1 190 7 281 10 166 17 330 3 256 1 376 1 358 2 124 2 215 1 310 1 
172 1 240 1 264 1 27 2 323 1 296 2 346 2 114 1 246 1 327 1 299 1 9 1 60 1 276 1 279 1 211 1 13 1 190 4 281 4 166 8 330 1 376 1 124 1 
172 1 131 1 264 1 27 1 202 2 226 2 323 1 296 2 346 2 113 1 114 1 327 1 60 1 276 2 145 1 279 1 13 1 190 6 281 6 166 12 330 1 256 1 358 2 124 2 215 1 
172 1 240 1 131 2 264 1 27 3 202 2 226 1 323 1 296 5 346 8 113 1 114 1 246 1 327 4 299 1 9 1 60 1 276 3 145 1 211 1 279 4 13 4 190 8 189 1 281 10 166 18 330 4 256 1 376 1 358 2 124 2 215 1 310 2 
172 1 131 3 264 1 27 3 202 3 226 2 323 1 296 6 346 8 113 1 114 1 327 4 60 1 276 3 145 1 279 4 13 4 184 1 190 7 281 9 166 16 330 4 256 1 358 3 124 2 215 1 310 2 
131 3 276 1 27 3 211 3 190 4 281 3 166 7 376 2 296 6 246 1 124 1 299 1 9 3 
172 1 240 1 131 1 264 1 27 3 202 2 226 1 323 1 296 4 346 8 113 1 114 1 246 1 327 4 299 1 9 1 60 1 276 3 145 1 211 1 279 4 13 4 184 1 190 8 281 10 166 18 330 4 256 1 376 1 358 2 124 2 215 1 310 2 
220 1 30 1 259 1 76 1 86 1 50 1 247 1 
220 1 10 1 372 1 76 1 50 1 30 1 214 1 259 1 86 1 34 1 247 1 370 1 
338 1 120 1 244 1 25 1 229 1 31 1 162 1 317 1 318 1 73 1 39 1 
287 1 87 1 220 1 338 1 25 1 307 1 229 1 177 1 50 1 317 1 162 1 318 1 120 1 244 1 205 1 30 2 259 2 218 1 
287 2 87 1 220 2 304 1 338 1 25 2 63 1 307 1 229 1 241 1 177 1 50 1 317 3 162 1 120 1 244 1 205 2 30 2 259 2 71 1 379 1 367 1 218 1 
220 2 287 2 338 1 151 1 25 2 241 1 177 1 50 1 317 3 244 2 30 2 205 2 367 1 87 1 304 1 229 2 307 1 63 1 162 1 120 2 259 2 71 1 379 1 127 1 
287 1 338 1 151 1 25 1 26 1 1 1 241 1 77 1 317 4 318 1 180 1 294 2 244 3 143 1 182 1 229 3 63 1 253 1 162 1 120 3 168 2 379 1 72 1 
287 1 182 1 338 1 151 1 25 1 26 1 63 1 229 3 1 1 77 1 241 1 162 1 188 1 317 4 253 1 318 1 294 2 120 3 244 3 168 2 379 1 72 1 
338 1 120 1 244 1 229 1 162 1 133 1 
287 1 338 2 350 1 25 2 229 7 317 3 162 3 318 2 133 1 154 1 96 1 257 1 331 1 120 6 244 7 333 1 84 1 43 1 116 1 158 1 101 1 
287 1 338 1 240 1 50 2 6 1 244 1 296 2 205 1 346 4 246 1 299 1 9 1 62 1 350 1 307 1 250 1 211 1 13 2 162 1 355 2 254 2 166 6 120 1 67 1 259 2 260 1 170 1 124 1 218 1 220 1 25 1 27 2 177 1 317 1 30 2 136 1 327 2 87 1 276 1 229 1 279 2 190 3 281 3 231 1 330 2 376 1 232 1 
200 2 263 1 288 2 291 1 26 1 313 1 1 2 77 1 132 2 317 2 318 1 4 1 270 2 294 3 271 1 54 1 244 1 182 1 351 1 229 1 11 1 352 1 188 1 253 1 120 1 168 3 72 1 199 1 
287 1 338 1 350 1 25 1 229 2 253 1 317 2 162 2 133 1 96 1 120 2 244 2 58 1 
24 1 338 1 151 1 350 1 25 1 229 4 162 1 317 1 318 1 39 1 120 4 244 4 31 1 
287 1 338 1 25 1 229 2 241 1 79 1 317 1 162 2 331 1 120 2 244 2 377 1 43 1 22 1 
338 1 120 1 244 1 229 1 195 1 183 1 162 1 318 1 82 1 102 1 
338 1 257 1 120 2 244 2 25 1 350 1 229 2 162 1 317 1 223 1 101 1 
24 1 338 2 350 1 25 2 229 5 241 1 317 3 162 2 318 1 39 1 120 4 244 5 333 1 31 1 158 1 101 1 
24 1 338 2 350 1 25 2 229 5 241 1 317 3 162 2 318 1 39 1 120 4 53 1 244 5 333 1 31 1 101 1 
287 1 87 1 220 1 338 1 25 1 307 1 229 1 177 1 50 1 317 1 162 1 318 1 120 1 244 1 205 1 30 2 259 2 127 1 
287 1 338 1 25 1 229 1 241 1 317 1 162 2 96 1 331 1 120 1 244 1 43 1 116 1 
50 1 44 1 126 1 118 1 33 1 
304 1 305 1 26 1 313 1 77 1 50 1 345 1 118 2 95 1 294 2 71 1 168 2 72 1 367 1 261 1 126 2 44 2 33 1 301 1 
220 1 252 1 353 1 118 1 30 1 259 1 236 1 126 1 33 1 
301 1 33 1 95 1 
242 1 42 1 35 1 73 1 
295 1 147 1 59 1 56 1 242 1 42 1 35 1 
147 1 0 1 64 1 
59 1 36 1 266 2 242 1 267 1 212 1 295 1 147 3 56 3 42 1 35 1 312 1 
295 1 147 2 322 1 59 1 105 1 56 2 242 1 42 1 35 1 
159 1 59 1 210 1 212 1 82 1 295 1 147 1 56 1 195 1 381 1 35 1 
295 1 147 1 59 1 56 1 242 1 35 1 212 1 
295 1 147 1 59 1 56 1 242 2 42 1 212 1 
59 2 242 1 176 1 191 1 212 1 295 2 147 2 135 1 56 2 35 1 
159 1 59 1 105 2 228 1 242 1 212 1 295 1 147 3 56 3 20 1 42 1 286 1 35 2 
59 1 105 1 242 1 183 1 82 2 212 1 295 1 147 2 56 2 378 1 42 1 195 1 381 1 35 1 302 1 
159 1 59 2 105 2 228 1 242 1 224 1 212 1 295 2 147 4 322 1 56 4 42 1 35 2 
295 1 147 1 59 1 56 1 242 1 42 1 35 1 212 1 
159 1 59 1 36 1 105 2 228 1 266 1 242 2 321 1 295 1 147 4 56 4 42 2 312 1 35 3 
59 1 105 1 242 1 315 1 212 1 295 1 119 1 147 2 56 2 32 1 42 1 35 1 
59 1 36 1 266 2 242 1 212 1 295 1 147 3 56 3 245 1 42 1 35 1 312 2 
140 1 38 1 35 2 112 2 
295 1 147 1 59 1 56 1 198 1 212 1 
295 1 147 2 59 1 105 1 56 2 242 1 42 1 286 1 35 1 212 1 
97 1 
295 1 147 1 59 1 56 1 242 1 42 1 35 1 212 1 
295 1 147 3 59 1 105 1 56 3 242 1 266 1 42 1 286 1 35 1 212 1 
321 1 159 1 228 1 35 1 
242 1 35 1 

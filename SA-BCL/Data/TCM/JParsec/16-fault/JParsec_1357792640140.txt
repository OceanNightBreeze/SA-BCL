#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.codehaus.jparsec.DefaultSourceLocatorTest:testLocate_onlyOneLineBreakCharacter()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLocate_emptySource()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_firstElementIsEqual()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_firstElementIsBigger()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_secondElementIsEqual()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_secondElementIsBigger()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_lastElementIsEqual()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_lastElementIsBigger()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_allSmaller()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_oneEqualElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_oneBiggerElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_oneSmallerElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_noElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_noLineBreaksScanned()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_inFirstLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstLineBreak()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstCharInSecondLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_lastCharInSecondLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstCharInThirdLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_lastCharInThirdLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstCharInLastLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_secondCharInLastLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_indexOutOfBounds()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_indexOnEof()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_spansLines()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_lastCharOfLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLocate()V PASSED
org.codehaus.jparsec.EmptyParseErrorTest:testEmptyParseError()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_null()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_nullError()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_failure()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_expected()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.error.ErrorReporterTest:testToString_unexpected()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testReportList()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.error.LocationTest:testToString()V PASSED
org.codehaus.jparsec.error.LocationTest:testEquals()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToInteger()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToLowerCase()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToUpperCase()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToEnum()V PASSED
org.codehaus.jparsec.functors.MapsTest:testIdentity()V PASSED
org.codehaus.jparsec.functors.MapsTest:testConstant()V PASSED
org.codehaus.jparsec.functors.MapsTest:testJmap()V PASSED
org.codehaus.jparsec.functors.MapsTest:testMapToString()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToPair()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToTuple3()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToTuple4()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToTuple5()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testPair()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testTuple2()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testTuple3()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testTuple4()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testTuple5()V PASSED
org.codehaus.jparsec.IndentationTest:testInlineWhitespace()V PASSED
org.codehaus.jparsec.IndentationTest:testLineContinuation()V ERROR java.lang.StringIndexOutOfBoundsException 
org.codehaus.jparsec.IndentationTest:testInlineWhitespaces()V PASSED
org.codehaus.jparsec.IndentationTest:testWhitespaces()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.IndentationTest:testAnalyzeIndentations()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.IndentationTest:testIndent()V PASSED
org.codehaus.jparsec.IndentationTest:testOutdent()V PASSED
org.codehaus.jparsec.IndentationTest:testLexer()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.InternalFunctorsTest:testIsTokenType()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testTokenWithSameValue()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testFirstOfTwo()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testLastOfTwo()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testLastOfThree()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testLastOfFour()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testLastOfFive()V PASSED
org.codehaus.jparsec.KeywordsTest:testLexicon_caseSensitive()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.KeywordsTest:testLexicon_caseInsensitive()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.KeywordsTest:testUnique()V PASSED
org.codehaus.jparsec.LexiconTest:testWord()V PASSED
org.codehaus.jparsec.LexiconTest:testWord_throwsForNullValue()V PASSED
org.codehaus.jparsec.ListFactoriesTest:testArrayListFactory()V PASSED
org.codehaus.jparsec.ListFactoriesTest:testArrayListFactoryWithFirstElement()V PASSED
org.codehaus.jparsec.misc.CurryTest:testName()V PASSED
org.codehaus.jparsec.misc.CurryTest:testToString()V PASSED
org.codehaus.jparsec.misc.CurryTest:testEquals()V FAILED junit.framework.AssertionFailedError 763 
org.codehaus.jparsec.misc.CurryTest:testInfix()V PASSED
org.codehaus.jparsec.misc.CurryTest:testInfix_onlyOneUnskippedOperator()V PASSED
org.codehaus.jparsec.misc.CurryTest:testInfix_multiOp()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.CurryTest:testSequence()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.CurryTest:testUnary()V ERROR java.lang.ArrayIndexOutOfBoundsException 786 178 
org.codehaus.jparsec.misc.CurryTest:testBinary()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPrefix()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPrefix_onlyOneUnskippedOperator()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPrefix_multiOp()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPostfix()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPostfix_onlyOneUnskippedOperator()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPostfix_multiOp()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.CurryTest:testSequence_propagatesError()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.CurryTest:testSequence_propagatesUncheckedException()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.misc.CurryTest:testSequence_propagatesCheckedException()V ERROR java.lang.NullPointerException 
org.codehaus.jparsec.misc.CurryTest:testAbstractClass()V PASSED
org.codehaus.jparsec.misc.CurryTest:testNoPublicConstructor()V PASSED
org.codehaus.jparsec.misc.CurryTest:testAmbiguousConstructor()V PASSED
org.codehaus.jparsec.misc.CurryTest:testVarargConstructor()V PASSED
org.codehaus.jparsec.misc.CurryTest:testTooManyCurryArgs()V PASSED
org.codehaus.jparsec.misc.CurryTest:testCurryArgTypeMismatch()V PASSED
org.codehaus.jparsec.misc.CurryTest:testAmbiguousCurryArg()V PASSED
org.codehaus.jparsec.misc.CurryTest:testWrongArgumentType()V PASSED
org.codehaus.jparsec.misc.CurryTest:testAsUnary_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testAsBinary_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPrefix_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPrefix_multiOp_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPostfix_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testPostfix_multiOp_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testInfix_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testInfix_multiOp_wrongParamNumber()V PASSED
org.codehaus.jparsec.misc.CurryTest:testInvoke_wrongParameterNumber()V PASSED
org.codehaus.jparsec.misc.MapperTest:testName()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInfix_multiOp()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testSequence()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testUnary()V PASSED
org.codehaus.jparsec.misc.MapperTest:testBinary()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPrefix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPrefix_multiOp()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPostfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPostfix_multiOp()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testMap_runtimeExceptionPropagated()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMap_exceptionPropagated()V PASSED
org.codehaus.jparsec.misc.MapperTest:testNonGenericMapper()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testMissingMapperMethod()V PASSED
org.codehaus.jparsec.misc.MapperTest:testAmbiguousMapperMethods()V PASSED
org.codehaus.jparsec.misc.MapperTest:testIncompatibleReturnType()V PASSED
org.codehaus.jparsec.misc.MapperTest:testIncompatibleGenericReturnType()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMapperMethodInSuperclass()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMap_errorPropagated()V PASSED
org.codehaus.jparsec.misc.MapperTest:testCurry_sequence()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testAsMap()V PASSED
org.codehaus.jparsec.misc.MapperTest:testWrongParameters()V PASSED
org.codehaus.jparsec.misc.MapperTest:testWrongParametersForSequencing()V PASSED
org.codehaus.jparsec.misc.MapperTest:testTargetTypeUnknownAtConstructionTime()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForSequence()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForPrefix()V ERROR java.lang.IllegalArgumentException 313 786 178 
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForPostfix()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForInfix()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.misc.MapperTest:testInvalidSkipForPrefix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInvalidSkipForPostfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInvalidSkipForInfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testWrongType()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMapperMethodInSubclass()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testGetClassName()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testIsInstance()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testIsAssignable()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testWrapperClass()V PASSED
org.codehaus.jparsec.OperatorsTest:testSort()V PASSED
org.codehaus.jparsec.OperatorsTest:testLexicon()V FAILED junit.framework.AssertionFailedError (249,472) 
org.codehaus.jparsec.OperatorTableExpressionTest:testBuildExpressionParser()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 471 (72,603) 616 (72,603) 370 
org.codehaus.jparsec.OperatorTableExpressionTest:testEmptyOperatorTable()V PASSED
org.codehaus.jparsec.OperatorTableTest:testAssociativityOrder()V PASSED
org.codehaus.jparsec.OperatorTableTest:testOperatorOrder()V PASSED
org.codehaus.jparsec.OperatorTableTest:testGetOperators()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testEmptyTokenCounts()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ParserErrorHandlingTest:testNotOverridesNever()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testExpectOverridesNot()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testFailureOverridesExpect()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testFailureOverridesExplicitExpect()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testMoreRelevantErrorWins()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testFirstNeverWins()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testFirstNotWins()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testFirstFailureWins()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testExpectMerged()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testExpectedMerged()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesPlus()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesOr()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesLonger()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesShorter()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesRepetition()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 
org.codehaus.jparsec.ParserErrorHandlingTest:testOuterExpectWins()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testTokenLevelError()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ParserReferenceTest:testLazy()V PASSED
org.codehaus.jparsec.ParserReferenceTest:testUninitializedLazy()V PASSED
org.codehaus.jparsec.ParsersTest:testConstant()V PASSED
org.codehaus.jparsec.ParsersTest:testPair()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence()V PASSED
org.codehaus.jparsec.ParsersTest:testAlways()V PASSED
org.codehaus.jparsec.ParsersTest:testNever()V PASSED
org.codehaus.jparsec.ParsersTest:testBetween()V PASSED
org.codehaus.jparsec.ParsersTest:testEof()V PASSED
org.codehaus.jparsec.ParsersTest:testRunnable()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_4Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_5Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withIterable()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testTuple_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testTuple_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testTuple_4Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testTuple_5Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testArray()V ERROR org.codehaus.jparsec.error.ParserException 79 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.ParsersTest:testList()V PASSED
org.codehaus.jparsec.ParsersTest:testFail()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_withIterable()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_4Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_5Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_6Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_7Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_8Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_9Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_10Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testLonger()V PASSED
org.codehaus.jparsec.ParsersTest:testShorter()V PASSED
org.codehaus.jparsec.ParsersTest:testLongest_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testLongest_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testLongest()V PASSED
org.codehaus.jparsec.ParsersTest:testShortest_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testShortest_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testShortest()V PASSED
org.codehaus.jparsec.ParsersTest:testExpect()V PASSED
org.codehaus.jparsec.ParsersTest:testUnexpected()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap2()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap2_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap3()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap3_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap4()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap4_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap5()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap5_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testToken()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.ParsersTest:testToken_fails()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ParsersTest:testTokenType()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.ParsersTest:testAnyToken()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.ParsersTest:testIndex()V PASSED
org.codehaus.jparsec.ParsersTest:testToArray()V PASSED
org.codehaus.jparsec.ParsersTest:testToArrayWithIteration()V PASSED
org.codehaus.jparsec.ParserTest:testLexer()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 136 84 71 84 831 84 342 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.ParserTest:testPrefix()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 471 
org.codehaus.jparsec.ParserTest:testPostfix()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 523 
org.codehaus.jparsec.ParserTest:testBetween()V PASSED
org.codehaus.jparsec.ParserTest:testToken()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.ParserTest:testParse()V PASSED
org.codehaus.jparsec.ParserTest:testSource()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.ParserTest:testNext_withMap()V PASSED
org.codehaus.jparsec.ParserTest:testNext_firstParserFails()V PASSED
org.codehaus.jparsec.ParserTest:testNext_nextParserFails()V PASSED
org.codehaus.jparsec.ParserTest:testNext()V PASSED
org.codehaus.jparsec.ParserTest:testRetn()V PASSED
org.codehaus.jparsec.ParserTest:testFollowedBy()V PASSED
org.codehaus.jparsec.ParserTest:testNotFollowedBy()V PASSED
org.codehaus.jparsec.ParserTest:testSkipTimes()V PASSED
org.codehaus.jparsec.ParserTest:testTimes()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 560 
org.codehaus.jparsec.ParserTest:testTimes_range()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ParserTest:testSkipMany()V PASSED
org.codehaus.jparsec.ParserTest:testSkipMany1()V PASSED
org.codehaus.jparsec.ParserTest:testMany1()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ParserTest:testMany()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 
org.codehaus.jparsec.ParserTest:testOr()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 
org.codehaus.jparsec.ParserTest:testOptional()V PASSED
org.codehaus.jparsec.ParserTest:testOptional_withDefaultValue()V PASSED
org.codehaus.jparsec.ParserTest:testNot()V PASSED
org.codehaus.jparsec.ParserTest:testPeek()V PASSED
org.codehaus.jparsec.ParserTest:testAtomic()V PASSED
org.codehaus.jparsec.ParserTest:testStep()V PASSED
org.codehaus.jparsec.ParserTest:testStep_negativeStep()V PASSED
org.codehaus.jparsec.ParserTest:testSucceeds()V PASSED
org.codehaus.jparsec.ParserTest:testFails()V PASSED
org.codehaus.jparsec.ParserTest:testIfElse()V PASSED
org.codehaus.jparsec.ParserTest:testIfElse_withNext()V PASSED
org.codehaus.jparsec.ParserTest:testLabel()V PASSED
org.codehaus.jparsec.ParserTest:testCast()V PASSED
org.codehaus.jparsec.ParserTest:testMap()V PASSED
org.codehaus.jparsec.ParserTest:testMap_fails()V PASSED
org.codehaus.jparsec.ParserTest:testSepBy1()V PASSED
org.codehaus.jparsec.ParserTest:testSepBy()V PASSED
org.codehaus.jparsec.ParserTest:testEndBy()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 723 
org.codehaus.jparsec.ParserTest:testEndBy1()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 560 
org.codehaus.jparsec.ParserTest:testSepEndBy1()V PASSED
org.codehaus.jparsec.ParserTest:testSepEndBy()V PASSED
org.codehaus.jparsec.ParserTest:testEmptyListParser_toString()V PASSED
org.codehaus.jparsec.ParserTest:testPrefix_noOperator()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 471 
org.codehaus.jparsec.ParserTest:testPostfix_noOperator()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 523 
org.codehaus.jparsec.ParserTest:testInfixn_noOperator()V PASSED
org.codehaus.jparsec.ParserTest:testInfixn()V PASSED
org.codehaus.jparsec.ParserTest:testInfixl_noOperator()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 707 246 
org.codehaus.jparsec.ParserTest:testInfixl()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 707 246 
org.codehaus.jparsec.ParserTest:testInfixl_fails()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 707 246 
org.codehaus.jparsec.ParserTest:testInfixr_noOperator()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 38 487 
org.codehaus.jparsec.ParserTest:testInfixr()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 38 487 
org.codehaus.jparsec.ParserTest:testInfixr_fails()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 38 487 
org.codehaus.jparsec.ParserTest:testFrom()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 
org.codehaus.jparsec.ParserTest:testFrom_throwsOnScanners()V PASSED
org.codehaus.jparsec.ParserTest:testFrom_withDelimiter()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 
org.codehaus.jparsec.ParserTest:testCopy()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testAlways()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNever()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testOr()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNot()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsChar()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNotChar()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testRange()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsDigit()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNotRange()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testAmong()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNotAmong()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsHexDigit()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsUpperCase()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsLowerCase()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsWhitespace()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlpha()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlpha_()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlphaNumeric()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlphaNumeric_()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsLetter()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testAnd()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testWord()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testSequence()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testAlways()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testNever()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testEof()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testLonger()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testShorter()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testLongest()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testShortest()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testMany1()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testMany()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testOr()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testIsChar()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testRange()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testAmong()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testAnd()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testAnyChar()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testHasAtLeast()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testHasExact()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testIsChar_withPredicate()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testEscaped()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testLineComment()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testString()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testStringCaseInsensitive()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testNotString()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testNotStringCaseInsensitive()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testRepeat()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testRepeat_negativeNumberThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testMany_withMin()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testMany_negativeNumberThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_withMin()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_negativeMaxThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_negativeMinThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_minBiggerThanMaxThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testDecimalL()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testDecimalR()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testDecimal()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testInteger()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testOctInteger()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testDecInteger()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testHexInteger()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testScientificNumber()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testRegex()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testRegexpPattern()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testRegexpModifiers()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternTest:testNext()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany1()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testOr()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testOptional()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testNot()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testPeek()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testIfElse()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternTest:testRepeat()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany_withMin()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testSome()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternTest:testSome_withMin()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternTest:testRepeat_throwsForNegativeNumber()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany_throwsForNegativeMin()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testSome_throwsForNegativeMax()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testSome_throwsForNegativeMinMax()V PASSED
org.codehaus.jparsec.ScannersTest:testWhitespaces()V PASSED
org.codehaus.jparsec.ScannersTest:testIsChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNotChar()V PASSED
org.codehaus.jparsec.ScannersTest:testAmong()V PASSED
org.codehaus.jparsec.ScannersTest:testNotAmong()V PASSED
org.codehaus.jparsec.ScannersTest:testAnyChar()V PASSED
org.codehaus.jparsec.ScannersTest:testLineComment()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ScannersTest:testString()V PASSED
org.codehaus.jparsec.ScannersTest:testStringCaseInsensitive()V PASSED
org.codehaus.jparsec.ScannersTest:testDecimal()V ERROR org.codehaus.jparsec.error.ParserException 79 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (116,171) 
org.codehaus.jparsec.ScannersTest:testInteger()V PASSED
org.codehaus.jparsec.ScannersTest:testOctInteger()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (116,171) 
org.codehaus.jparsec.ScannersTest:testDecInteger()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (116,171) 
org.codehaus.jparsec.ScannersTest:testHexInteger()V PASSED
org.codehaus.jparsec.ScannersTest:testIdentifier()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (116,171) 
org.codehaus.jparsec.ScannersTest:testScientificNotation()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (116,171) 
org.codehaus.jparsec.ScannersTest:testMany_withCharPredicate()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.ScannersTest:testMany1_withCharPredicate()V PASSED
org.codehaus.jparsec.ScannersTest:testMany_withPattern()V PASSED
org.codehaus.jparsec.ScannersTest:testMany_withPatternThatConsumesNoInput()V PASSED
org.codehaus.jparsec.ScannersTest:testMany1_withPattern()V PASSED
org.codehaus.jparsec.ScannersTest:testMany1_withPatternThatConsumesNoInput()V PASSED
org.codehaus.jparsec.ScannersTest:testPattern()V PASSED
org.codehaus.jparsec.ScannersTest:testAmong_noChars()V PASSED
org.codehaus.jparsec.ScannersTest:testAmong_oneChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNotAmong_noChars()V PASSED
org.codehaus.jparsec.ScannersTest:testNotAmong_oneChar()V PASSED
org.codehaus.jparsec.ScannersTest:testJavaLineComment()V PASSED
org.codehaus.jparsec.ScannersTest:testSqlLineComment()V PASSED
org.codehaus.jparsec.ScannersTest:testHaskellLineComment()V PASSED
org.codehaus.jparsec.ScannersTest:testDoubleQuoteString()V PASSED
org.codehaus.jparsec.ScannersTest:testSingleQuoteString()V PASSED
org.codehaus.jparsec.ScannersTest:testSingleQuoteChar()V PASSED
org.codehaus.jparsec.ScannersTest:testJavaDelimiter()V PASSED
org.codehaus.jparsec.ScannersTest:testSqlDelimiter()V PASSED
org.codehaus.jparsec.ScannersTest:testHaskellDelimiter()V PASSED
org.codehaus.jparsec.ScannersTest:testJavaBlockComment()V PASSED
org.codehaus.jparsec.ScannersTest:testSqlBlockComment()V PASSED
org.codehaus.jparsec.ScannersTest:testHaskellBlockComment()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.ScannersTest:testBlockComment_emptyQuotes()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedPattern()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.ScannersTest:testBlockComment_withEmptyQuotedPattern()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedPatternThatMismatches()V FAILED junit.framework.AssertionFailedError (33,200,647,824) 
org.codehaus.jparsec.ScannersTest:testBlockComment_withParsers()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedParserThatMatchesEmpty()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedParserThatMismatches()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_withQuotedPattern()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_withQuotedParser()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (62,217) 
org.codehaus.jparsec.ScannersTest:testNestedBlockComment_partialMatch()V ERROR java.lang.IllegalArgumentException 490 806 800 522 626 
org.codehaus.jparsec.ScannersTest:testNestedBlockComment_notLogicalPartialMatch()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_quotedConsumesNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_openQuoteConsumesNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_closeQuoteConsumesNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testQuoted_byChar()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (116,171) 
org.codehaus.jparsec.ScannersTest:testQuoted()V PASSED
org.codehaus.jparsec.ScannersTest:testQuoted_quotedParserConsumeNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNestedScanner()V PASSED
org.codehaus.jparsec.TerminalsTest:testEquals()V PASSED
org.codehaus.jparsec.TerminalsTest:testDoubleQuoteString()V PASSED
org.codehaus.jparsec.TerminalsTest:testSingleQuoteString()V PASSED
org.codehaus.jparsec.TerminalsTest:testSingleQuoteChar()V PASSED
org.codehaus.jparsec.TerminalsTest:testDecimalLiteralTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 79 84 456 84 342 84 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testIntegerLiteralTokenizer()V PASSED
org.codehaus.jparsec.TerminalsTest:testScientificNumberLiteralTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testLongLiteralDecTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testLongLiteralHexTokenizer()V FAILED junit.framework.AssertionFailedError (249,472) 
org.codehaus.jparsec.TerminalsTest:testTokenizeHexAsLong_throwsIfStringIsTooShort()V PASSED
org.codehaus.jparsec.TerminalsTest:testLongLiteralOctTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testLongLiteralTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testIdentifierTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testCharLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testLongLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testStringLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testIdentifierParser()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testIntegerLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testDecimalLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testFromFragment()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.TerminalsTest:testToken_noTokenName()V PASSED
org.codehaus.jparsec.TerminalsTest:testToken_oneTokenNameOnly()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testToken_tokenNamesListed()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testPhrase()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) 
org.codehaus.jparsec.TerminalsTest:testCaseSensitive()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testCaseInsensitive()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testCaseSensitive_withScanner()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testCaseInsensitive_withScanner()V ERROR org.codehaus.jparsec.error.ParserException 49 (101,170,343,385,536) (101,170,343,385,536) (101,170,343,385,536) (249,472) 
org.codehaus.jparsec.TerminalsTest:testCheckDup()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testScientificNotation()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testDoubleQuoteString()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testSingleQuoteString()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testSingleQuoteChar()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testFragment()V FAILED junit.framework.AssertionFailedError 796 
org.codehaus.jparsec.TokenizerMapsTest:testReservedFragment()V FAILED junit.framework.AssertionFailedError 796 
org.codehaus.jparsec.TokenizerMapsTest:testIdentifierFragment()V FAILED junit.framework.AssertionFailedError 796 
org.codehaus.jparsec.TokenizerMapsTest:testIntegerFragment()V FAILED junit.framework.AssertionFailedError 796 
org.codehaus.jparsec.TokenizerMapsTest:testDecimalFragment()V FAILED junit.framework.AssertionFailedError 796 
org.codehaus.jparsec.TokenizerMapsTest:testDecAsLong()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testOctAsLong()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testHexAsLong()V PASSED
org.codehaus.jparsec.TokensTest:testWord()V FAILED junit.framework.AssertionFailedError 519 
org.codehaus.jparsec.TokensTest:testDecimal()V FAILED junit.framework.AssertionFailedError 519 
org.codehaus.jparsec.TokensTest:testInteger()V FAILED junit.framework.AssertionFailedError 519 
org.codehaus.jparsec.TokensTest:testScientificNumber()V PASSED
org.codehaus.jparsec.TokensTest:testFragment()V FAILED junit.framework.AssertionFailedError 519 
org.codehaus.jparsec.TokensTest:testReserved()V FAILED junit.framework.AssertionFailedError 519 
org.codehaus.jparsec.TokenTest:testToString()V PASSED
org.codehaus.jparsec.TokenTest:testEquals()V PASSED
org.codehaus.jparsec.TokenTest:testIndex()V PASSED
org.codehaus.jparsec.TokenTest:testLength()V PASSED
org.codehaus.jparsec.TokenTest:testValue()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckArgument_noThrowIfConditionIsTrue()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckArgument_throwsIfConditionIsFalse()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckState_noThrowIfConditionIsTrue()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckState_throwsIfConditionIsFalse()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckNotNullState_throwsIfObjectIsNull()V PASSED
org.codehaus.jparsec.util.IntListTest:testToArray()V ERROR java.lang.NullPointerException 295 
org.codehaus.jparsec.util.IntListTest:testCalcSize()V PASSED
org.codehaus.jparsec.util.IntListTest:testConstructor()V PASSED
org.codehaus.jparsec.util.IntListTest:testConstructor_withCapacity()V PASSED
org.codehaus.jparsec.util.IntListTest:testGet()V ERROR java.lang.NullPointerException 421 
org.codehaus.jparsec.util.IntListTest:testGet_throwsForNegativeIndex()V PASSED
org.codehaus.jparsec.util.IntListTest:testGet_throwsForIndexOutOfBounds()V PASSED
org.codehaus.jparsec.util.IntListTest:testSet()V ERROR java.lang.NullPointerException 421 
org.codehaus.jparsec.util.IntListTest:testEnsureCapacity()V ERROR java.lang.NullPointerException 421 
org.codehaus.jparsec.util.IntListTest:testSet_throwsForNegativeIndex()V PASSED
org.codehaus.jparsec.util.IntListTest:testSet_throwsForIndexOutOfBounds()V PASSED
org.codehaus.jparsec.util.ObjectsTest:testEquals()V PASSED
org.codehaus.jparsec.util.ObjectsTest:testHashCode()V PASSED
org.codehaus.jparsec.util.ObjectsTest:testIn()V PASSED
org.codehaus.jparsec.util.StringsTest:testJoin()V PASSED
org.codehaus.jparsec.util.StringsTest:testJoin_withStringBuilder()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.codehaus.jparsec.NeverParser:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Reflection:wrapperClass(Ljava.lang.Class;)Ljava.lang.Class;
org.codehaus.jparsec.functors.Maps.12:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserState:peekChar()C
org.codehaus.jparsec.pattern.CharPredicates.3:toString()Ljava.lang.String;
org.codehaus.jparsec.NumberLiteralsTranslator:toOctDigit(C)I
org.codehaus.jparsec.Parsers:longest(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:shortest([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.MapperTest:fooMapper()Lorg.codehaus.jparsec.misc.Mapper;
org.codehaus.jparsec.IntOrders.1:compare(II)Z
org.codehaus.jparsec.misc.Mapper:curry(Ljava.lang.Class;[Ljava.lang.Object;)Lorg.codehaus.jparsec.misc.Mapper;
org.codehaus.jparsec.pattern.CharPredicates.1:isChar(C)Z
org.codehaus.jparsec.pattern.Patterns.22:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.CharPredicates.3:isChar(C)Z
org.codehaus.jparsec.OperatorTable:prefix(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.Scanners:quoted(CC)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.EmptyParseError:getEncountered()Ljava.lang.String;
org.codehaus.jparsec.TokenizerMaps.3:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:or([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns:matchRepeat(ILorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.misc.Mapper:_(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Terminals:fragment([Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:pattern(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates:notRange(CC)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.util.IntList:size()I
org.codehaus.jparsec.Parser.Reference:lazy()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Lexicon:tokenizer()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:fails()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.IntList:ensureCapacity(I)V
org.codehaus.jparsec.Parser:source()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TestParsers:areChars(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.DelimitedListParser:DelimitedListParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ListFactory;)V
org.codehaus.jparsec.Parsers.3:toString()Ljava.lang.String;
org.codehaus.jparsec.Asserts:assertFailure(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;IILjava.lang.String;)V
org.codehaus.jparsec.AtomicParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.InternalFunctors.3:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers:pair(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Operators.Suite:Suite(Ljava.lang.String;)V
org.codehaus.jparsec.Parsers:infixr(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:asBinary()Lorg.codehaus.jparsec.functors.Binary;
org.codehaus.jparsec.util.Objects:in(Ljava.lang.Object;[Ljava.lang.Object;)Z
org.codehaus.jparsec.misc.Mapper.9:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:fail(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps.7:map(Ljava.lang.Object;)Ljava.lang.String;
org.codehaus.jparsec.AnyCharScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:infix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.StepParser:StepParser(Lorg.codehaus.jparsec.Parser;I)V
org.codehaus.jparsec.pattern.Patterns:not(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.AtomicParser:AtomicParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parsers:parse(Ljava.lang.CharSequence;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.SourceLocator;Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.Scanners:notChar(CLjava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps.8:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns.14:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Keywords.CaseSensitive:toKey(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.functors.Maps:toEnum(Ljava.lang.Class;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Terminals.1:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Indentation:newLine(Lorg.codehaus.jparsec.Token;Ljava.util.Stack;ILjava.util.List;)V
org.codehaus.jparsec.BestParser:BestParser([Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.IntOrder;)V
org.codehaus.jparsec.Keywords.CaseSensitive:toMap(Ljava.util.Map;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Indentation.1:toString()Ljava.lang.String;
org.codehaus.jparsec.TokenizerMaps.2:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.Asserts:assertScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.String;)V
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple4;
org.codehaus.jparsec.pattern.CharPredicates.10:toString()Ljava.lang.String;
org.codehaus.jparsec.Keywords:lexicon(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;ZLorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Lexicon;
org.codehaus.jparsec.misc.Reflection:isAssignable(Ljava.lang.Class;Ljava.lang.Object;)Z
org.codehaus.jparsec.NestableBlockCommentScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.PatternScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.MapperTest.9:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.error.Location:hashCode()I
org.codehaus.jparsec.BindNextParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.OperatorTable:build(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.OperatorTable.Associativity;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper.10:map([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.misc.Reflection:getClassName(Ljava.lang.Object;)Ljava.lang.String;
org.codehaus.jparsec.Parser:ifelse(Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NumberLiteralsTranslator:tokenizeOctalAsLong(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.misc.Invokables.2:invoke([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.functors.Maps.10:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:asParserException(Ljava.lang.Throwable;Lorg.codehaus.jparsec.ParseContext;)Lorg.codehaus.jparsec.error.ParserException;
org.codehaus.jparsec.NestedParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.DefaultSourceLocatorTest:intList([I)Lorg.codehaus.jparsec.util.IntList;
org.codehaus.jparsec.TokenizerMaps.1:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.Parser:run(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parsers:nested(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:raise(Lorg.codehaus.jparsec.ParseContext.ErrorType;Ljava.lang.Object;)V
org.codehaus.jparsec.InternalFunctors.6:map(Lorg.codehaus.jparsec.Token;)Ljava.lang.Object;
org.codehaus.jparsec.Terminals:checkDup([Ljava.lang.String;[Ljava.lang.String;Z)V
org.codehaus.jparsec.pattern.CharPredicates:notAmong(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.pattern.CharPredicates:isChar(C)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Parser:token()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:some(ILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns:matchStringCaseInsensitive(Ljava.lang.String;Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.Patterns:many1(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Mapper:prefix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ToTokenParser:ToTokenParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.pattern.CharPredicates.9:isChar(C)Z
org.codehaus.jparsec.Terminals:caseInsensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.pattern.CharPredicates.11:toString()Ljava.lang.String;
org.codehaus.jparsec.PatternScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:parse(Ljava.lang.CharSequence;Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns:some(IILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:always()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper.8:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.21:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.Patterns.18:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Parsers:runnable(Ljava.lang.Runnable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple3:hashCode()I
org.codehaus.jparsec.Keywords:getStringCase(Z)Lorg.codehaus.jparsec.Keywords.StringCase;
org.codehaus.jparsec.error.ParserException:toErrorMessage(Ljava.lang.String;Ljava.lang.String;Lorg.codehaus.jparsec.error.ParseErrorDetails;Lorg.codehaus.jparsec.error.Location;)Ljava.lang.String;
org.codehaus.jparsec.Token:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.ExpectParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:peek()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ScannerState:ScannerState(Ljava.lang.String;Ljava.lang.CharSequence;ILorg.codehaus.jparsec.SourceLocator;)V
org.codehaus.jparsec.Asserts:assertStringScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.String;)V
org.codehaus.jparsec.Parser:between(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ListParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Lexicon:token(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.CurryTest.PrefixExpr2:PrefixExpr2(Ljava.lang.String;ILorg.codehaus.jparsec.misc.CurryTest.Expr;)V
org.codehaus.jparsec.misc.Mapper.1:toString()Ljava.lang.String;
org.codehaus.jparsec.Scanners:quoted(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Sequence3Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserInternals:repeatAtMost(Lorg.codehaus.jparsec.Parser;ILjava.util.Collection;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Pattern:next(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Curry:checkFutureParameters(Ljava.lang.Class;I)V
org.codehaus.jparsec.Parsers:sequence(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:many(ILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns.3:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.ListFactories.2:newList()Ljava.util.List;
org.codehaus.jparsec.Parsers.3:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.util.Checks:checkMax(I)I
org.codehaus.jparsec.pattern.Patterns.20:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.misc.Mapper.3:map(Ljava.util.List;)Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.pattern.Patterns:matchSome(ILorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.CharSequence;III)I | OPERATOR | 21906 | += -> -=
org.codehaus.jparsec.ToTokenParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z | CONDITION | 387 | if (x) -> if (!x)
org.codehaus.jparsec.misc.Mapper:checkFutureParameters(Ljava.lang.Class;I)V
org.codehaus.jparsec.Parsers:runNext(Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.functors.Map;)Z
org.codehaus.jparsec.pattern.Patterns.29:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Keywords.CaseSensitive.1:compare(Ljava.lang.String;Ljava.lang.String;)I
org.codehaus.jparsec.util.Objects:hashCode(Ljava.lang.Object;)I
org.codehaus.jparsec.InternalFunctors.2:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers:shorter(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:plus(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTableTest:assertTotalOrder([Ljava.lang.Comparable;)V
org.codehaus.jparsec.ActionParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.functors.Maps.3:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple3;
org.codehaus.jparsec.pattern.CharPredicates.12:isChar(C)Z
org.codehaus.jparsec.pattern.Patterns:peek(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Token:length()I
org.codehaus.jparsec.FailureParser:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Invokables.1:parameterTypes()[Ljava.lang.Class;
org.codehaus.jparsec.ScannerState:ScannerState(Ljava.lang.String;Ljava.lang.CharSequence;IILorg.codehaus.jparsec.SourceLocator;Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.CharPredicates.15:toString()Ljava.lang.String;
org.codehaus.jparsec.Keywords.CaseInsensitive.2:map(Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.ScannerState:peekChar()C
org.codehaus.jparsec.InternalFunctors.3:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Strings:join(Ljava.lang.StringBuilder;Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.StringBuilder;
org.codehaus.jparsec.Scanners:string(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.error.ParserException:ParserException(Lorg.codehaus.jparsec.error.ParseErrorDetails;Ljava.lang.String;Lorg.codehaus.jparsec.error.Location;)V
org.codehaus.jparsec.ListFactories:arrayListFactoryWithFirstElement(Ljava.lang.Object;)Lorg.codehaus.jparsec.ListFactory;
org.codehaus.jparsec.Parsers:or([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.5:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parser:retn(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.18:isChar(C)Z
org.codehaus.jparsec.ParseContext:unexpected(Ljava.lang.String;)V
org.codehaus.jparsec.misc.Mapper.6.1:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.misc.Curry:equals(Ljava.lang.Object;)Z | STATEMENT | 4429 | stmt -> ;
org.codehaus.jparsec.misc.Mapper:findMapMethod(Ljava.lang.Class;)Ljava.lang.reflect.Method;
org.codehaus.jparsec.Parser:parse(Ljava.lang.CharSequence;Ljava.lang.String;Lorg.codehaus.jparsec.SourceLocator;)Ljava.lang.Object;
org.codehaus.jparsec.Asserts:assertStringScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;)V
org.codehaus.jparsec.Lexicon:token([Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.SkipTimesParser:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Curry:findCurryIndex(Ljava.lang.reflect.Constructor;[Ljava.lang.Class;ILjava.lang.Object;)I
org.codehaus.jparsec.TokenizerMaps:fragment(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.pattern.Pattern:many()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns:notStringCaseInsensitive(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Mapper:apply([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Tokens.Fragment:Fragment(Ljava.lang.String;Ljava.lang.Object;)V
org.codehaus.jparsec.Parsers:toArray(Ljava.util.Collection;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.IfElseParser:toString()Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors.4:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:expect(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ArrayParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z | ASSIGN | 1672 | = null
org.codehaus.jparsec.functors.Maps.4:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple4;
org.codehaus.jparsec.ParseContext:setAt(II)V
org.codehaus.jparsec.Parsers:list(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:expected(Ljava.lang.Object;)V
org.codehaus.jparsec.ParseContext:errors()Ljava.util.List;
org.codehaus.jparsec.Tokens:integerLiteral(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.Token:equalToken(Lorg.codehaus.jparsec.Token;)Z
org.codehaus.jparsec.Operators.Suite:add(Ljava.lang.String;)Z
org.codehaus.jparsec.OrParser:toString()Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors:firstOfTwo()Lorg.codehaus.jparsec.functors.Map2;
org.codehaus.jparsec.Parsers.4:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:followedBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NestedScanner:NestedScanner(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Terminals:Terminals(Lorg.codehaus.jparsec.Lexicon;)V
org.codehaus.jparsec.FailureParser:FailureParser(Ljava.lang.String;)V
org.codehaus.jparsec.Asserts:assertFailure(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;II)V
org.codehaus.jparsec.Parsers:eof(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.25:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.IsTokenParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers.2:map(Ljava.util.Collection;)[Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.ReturnSourceParser:toString()Ljava.lang.String;
org.codehaus.jparsec.error.ErrorReporterTest:reportList([Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.15:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Tokens.Fragment:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:matchString(Ljava.lang.String;Ljava.lang.CharSequence;II)I | OPERATOR | 10300 | != -> >
org.codehaus.jparsec.Parser:getReturn(Lorg.codehaus.jparsec.ParseContext;)Ljava.lang.Object;
org.codehaus.jparsec.misc.Mapper.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers:plus([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:stringCaseInsensitive(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:skipMany1()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:from(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Asserts:assertScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;)V
org.codehaus.jparsec.InternalFunctors:fallback(Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Parser.2:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.IntList:grow(I)V
org.codehaus.jparsec.functors.Tuple3:Tuple3(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.ParseContext.3:getExpected()Ljava.util.List;
org.codehaus.jparsec.ParseContext:getEncountered()Ljava.lang.String;
org.codehaus.jparsec.OperatorTableTest:assertSameOrder(Ljava.lang.Comparable;)V
org.codehaus.jparsec.pattern.Patterns:repeat(ILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Scanners:nestableBlockComment(Ljava.lang.String;Ljava.lang.String;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.error.Location:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.SequenceParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Sequence4Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.ListParser:ListParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTable:infixn(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.Token:Token(IILjava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns:some(IILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.functors.Tuple3:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:regex(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.DefaultSourceLocator:getLineBreakColumnIndex(I)I
org.codehaus.jparsec.misc.MapperTest.10:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.14:toString()Ljava.lang.String;
org.codehaus.jparsec.TokenizerMaps.5:toString()Ljava.lang.String;
org.codehaus.jparsec.Sequence5Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:Parser()V
org.codehaus.jparsec.Parser:copy(Ljava.lang.Readable;Ljava.lang.Appendable;)V
org.codehaus.jparsec.EofParser:EofParser(Ljava.lang.String;)V
org.codehaus.jparsec.util.IntList:IntList(I)V
org.codehaus.jparsec.Parser:infixl(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:trap()V
org.codehaus.jparsec.misc.MapperTest.1:map(Ljava.lang.String;)I
org.codehaus.jparsec.Asserts:assertParser(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.Object;Ljava.lang.String;)V
org.codehaus.jparsec.Scanners:isChar(CLjava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OrParser:OrParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.misc.Curry:expectedParams()I
org.codehaus.jparsec.NumberLiteralsTranslator:tokenizeDecimalAsLong(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.Parsers:token(Lorg.codehaus.jparsec.TokenMap;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Pair:hashCode()I
org.codehaus.jparsec.PeekParser:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:introspectMapperMethod(Ljava.lang.Class;)Lnet.sf.cglib.reflect.FastMethod;
org.codehaus.jparsec.NestedParser:NestedParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parser:cast()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.StepParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Sequence4Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.IfElseParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser.1:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.IndentationTest:tokenList([Ljava.lang.Object;)Ljava.util.List;
org.codehaus.jparsec.ParserInternals:runWithoutRecordingError(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Mapper:mergeSkipped([Lorg.codehaus.jparsec.Parser;)Ljava.util.List; | ASSIGN | 25088 | = null
org.codehaus.jparsec.misc.Mapper:Mapper(Ljava.lang.Object;Lorg.codehaus.jparsec.misc.Invokable;)V
org.codehaus.jparsec.EmptyListParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Terminals:fromFragment([Ljava.lang.Object;)Lorg.codehaus.jparsec.TokenMap;
org.codehaus.jparsec.Tokens:reserved(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.AnyCharScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.error.Location:Location(II)V
org.codehaus.jparsec.Parsers:array([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers.4:toString()Ljava.lang.String;
org.codehaus.jparsec.IsCharScanner:IsCharScanner(Ljava.lang.String;Lorg.codehaus.jparsec.pattern.CharPredicate;)V
org.codehaus.jparsec.IntOrders.1:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns.23:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.Patterns:hasAtLeast(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ParseContext:errorType()Lorg.codehaus.jparsec.ParseContext.ErrorType;
org.codehaus.jparsec.functors.Maps.11:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Tokens:decimalLiteral(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.misc.Mapper:toString()Ljava.lang.String;
org.codehaus.jparsec.Operators:lexicon([Ljava.lang.String;)Lorg.codehaus.jparsec.Lexicon;
org.codehaus.jparsec.InternalFunctors:lastOfFour()Lorg.codehaus.jparsec.functors.Map4;
org.codehaus.jparsec.util.ObjectTester:assertNotEqual(Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns:many(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Indentation:pseudoToken(ILjava.lang.Object;)Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.Parsers:shortest(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates:or([Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Terminals:caseSensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.Scanners:many(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.LazyParser:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Checks:checkMinMax(II)V
org.codehaus.jparsec.util.IntListTest:assertEqualArray([I[I)V
org.codehaus.jparsec.pattern.CharPredicates.4:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:among(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns.17:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.Pattern:many(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.EmptyParseError:EmptyParseError(ILjava.lang.String;)V
org.codehaus.jparsec.DefaultSourceLocator:scanTo(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.functors.Maps:toTuple5()Lorg.codehaus.jparsec.functors.Map5;
org.codehaus.jparsec.OperatorTable:postfix(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.IsCharScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Curry:checkDup([IIILjava.lang.Object;Ljava.lang.reflect.Constructor;)V
org.codehaus.jparsec.Terminals:caseSensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.Scanners:notAmong(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.12:toString()Ljava.lang.String;
org.codehaus.jparsec.PeekParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Curry:Curry(Ljava.lang.Object;Lorg.codehaus.jparsec.misc.Invokable;[Ljava.lang.Object;[I)V
org.codehaus.jparsec.functors.Maps.4:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:repeat(ILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Mapper:checkArgumentType(ILjava.lang.Class;Ljava.lang.Object;)V
org.codehaus.jparsec.misc.MapperTest.5:map(Ljava.lang.String;I)Ljava.lang.String;
org.codehaus.jparsec.Indentation:lexer(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates:not(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Parser:skipAtLeast(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:toArrayWithIteration(Ljava.lang.Iterable;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.IsTokenParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.functors.Maps.3:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper.8:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.1:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns.6:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.Patterns:compareIgnoreCase(CC)Z
org.codehaus.jparsec.pattern.CharPredicates.7:isChar(C)Z
org.codehaus.jparsec.functors.Maps:toTuple4()Lorg.codehaus.jparsec.functors.Map4;
org.codehaus.jparsec.Scanners:many(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.1:toString()Ljava.lang.String;
org.codehaus.jparsec.Tokens:fragment(Ljava.lang.String;Ljava.lang.Object;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.21:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:longer(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple4:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.misc.Mapper:checkFutureParameters(ILjava.lang.Class;I)V
org.codehaus.jparsec.easymock.BaseMockTest:replay()V
org.codehaus.jparsec.error.ErrorReporter:toString(Lorg.codehaus.jparsec.error.ParseErrorDetails;Lorg.codehaus.jparsec.error.Location;)Ljava.lang.String;
org.codehaus.jparsec.Parser:optional()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.1:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.OperatorTable:slice([Lorg.codehaus.jparsec.OperatorTable.Operator;II)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Token:value()Ljava.lang.Object;
org.codehaus.jparsec.pattern.CharPredicates.5:isChar(C)Z
org.codehaus.jparsec.Sequence2Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:parse(Ljava.lang.Readable;)Ljava.lang.Object;
org.codehaus.jparsec.Parser:not(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates:and(Lorg.codehaus.jparsec.pattern.CharPredicate;Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Tokens.Fragment:equalFragment(Lorg.codehaus.jparsec.Tokens.Fragment;)Z
org.codehaus.jparsec.Parsers:alt([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.DefaultSourceLocator:getLineBreakLocation(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map5;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:matchMany(Lorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.pattern.Pattern:ifelse(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Keywords.CaseSensitive:comparator()Ljava.util.Comparator;
org.codehaus.jparsec.functors.Pair:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.ParseContext:setErrorState(IILorg.codehaus.jparsec.ParseContext.ErrorType;Ljava.util.List;)V
org.codehaus.jparsec.StringLiteralsTranslator:tokenizeSingleQuote(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.16:isChar(C)Z
org.codehaus.jparsec.OperatorTable.Operator:Operator(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.OperatorTable.Associativity;)V
org.codehaus.jparsec.functors.Maps.5:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple5;
org.codehaus.jparsec.pattern.CharPredicates.20:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:from(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:setEncountered(Ljava.lang.String;)V
org.codehaus.jparsec.pattern.CharPredicates.20:isChar(C)Z
org.codehaus.jparsec.EmptyListParser:instance()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps:mapToString()Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Parser:sepBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.11:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Scanners:among(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.Checks:checkNotNullState(Ljava.lang.Object;Ljava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.Parsers:plus(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTableExpressionTest:parser()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:sequence([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:never()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper.2.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Tokens:scientificNotation(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.ScientificNotation;
org.codehaus.jparsec.misc.Mapper:invoke([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.functors.Maps.1:map(Ljava.lang.String;)Ljava.lang.Integer;
org.codehaus.jparsec.pattern.Patterns:string(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.functors.Tuple3:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map4;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Keywords.CaseInsensitive:toKey(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.SkipAtLeastParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.IntOrders.2:toString()Ljava.lang.String;
org.codehaus.jparsec.ScannerState:toIndex(I)I
org.codehaus.jparsec.Parser:parse(Ljava.lang.Readable;Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.ParserState:toIndex(I)I
org.codehaus.jparsec.misc.Invokables.1:invoke([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.functors.Maps.10:map(Ljava.lang.String;)Ljava.lang.Enum;
org.codehaus.jparsec.Scanners:nestableBlockComment(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:propagate(Ljava.lang.Throwable;)Ljava.lang.RuntimeException;
org.codehaus.jparsec.RepeatTimesParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Lexicon:Lexicon(Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Indentation.2:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:toArray(Ljava.lang.Iterable;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.CurryTest.PostfixExpr:PostfixExpr(Lorg.codehaus.jparsec.misc.CurryTest.Expr;Ljava.lang.String;)V
org.codehaus.jparsec.util.IntList:add(I)Lorg.codehaus.jparsec.util.IntList;
org.codehaus.jparsec.pattern.CharPredicates.9:toString()Ljava.lang.String;
org.codehaus.jparsec.ActionParser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.17:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:next(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserState:isEof()Z
org.codehaus.jparsec.InternalFunctors.8:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Sequence3Parser:Sequence3Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map3;)V
org.codehaus.jparsec.Operators.1:compare(Ljava.lang.String;Ljava.lang.String;)I
org.codehaus.jparsec.DelimitedParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parsers:or(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:nestedScanner(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Invokables.2:parameterTypes()[Ljava.lang.Class;
org.codehaus.jparsec.ParseContext:errorIndex()I
org.codehaus.jparsec.InternalFunctors.2:toString()Ljava.lang.String;
org.codehaus.jparsec.ParseContext:next()V
org.codehaus.jparsec.functors.Maps.9:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:sepEndBy1(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.5:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper.9:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Scanners:string(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Pattern:peek()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.FailureParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Invokables.1:returnType()Ljava.lang.Class;
org.codehaus.jparsec.functors.Maps.2:toString()Ljava.lang.String;
org.codehaus.jparsec.util.IntList:toArray()[I | ASSIGN | 1558 | = null
org.codehaus.jparsec.Indentation:indent()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:setErrorState(IILorg.codehaus.jparsec.ParseContext.ErrorType;)V
org.codehaus.jparsec.MapParser:MapParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map;)V
org.codehaus.jparsec.RepeatAtLeastParser:RepeatAtLeastParser(Lorg.codehaus.jparsec.Parser;I)V
org.codehaus.jparsec.pattern.Patterns:isChar(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern; | CONDITION | 7627 | if (x) -> if (!x)
org.codehaus.jparsec.InternalFunctors:isTokenType(Ljava.lang.Class;Ljava.lang.String;)Lorg.codehaus.jparsec.TokenMap;
org.codehaus.jparsec.Scanners:isChar(C)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:mapMethod(Ljava.lang.Class;)Lnet.sf.cglib.reflect.FastMethod;
org.codehaus.jparsec.functors.Pair:equals(Lorg.codehaus.jparsec.functors.Pair;)Z
org.codehaus.jparsec.pattern.Patterns.19:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Parser:sepEndBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:prefix([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:toArray(Ljava.util.Collection;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:Mapper()V
org.codehaus.jparsec.easymock.BaseMockTest:mock(Ljava.lang.Class;)Ljava.lang.Object;
org.codehaus.jparsec.ParserErrorHandlingTest:assertError(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Ljava.lang.String;IILjava.lang.String;)V
org.codehaus.jparsec.pattern.CharPredicates.22:isChar(C)Z
org.codehaus.jparsec.Parser:lexer(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ScannerState:characters()Ljava.lang.CharSequence;
org.codehaus.jparsec.Parsers:longest([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NeverParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.ParserInternals:repeat(Lorg.codehaus.jparsec.Parser;ILjava.util.Collection;Lorg.codehaus.jparsec.ParseContext;)Z | CONDITION | 2924 | if (x) -> if (!x)
org.codehaus.jparsec.Parser:label(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:asMap()Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.functors.Tuple3:equals(Lorg.codehaus.jparsec.functors.Tuple3;)Z
org.codehaus.jparsec.util.Objects:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
org.codehaus.jparsec.ParseContext:set(IILjava.lang.Object;)V
org.codehaus.jparsec.Terminals:operators([Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.Tokens:identifier(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.InternalFunctors:lastOfThree()Lorg.codehaus.jparsec.functors.Map3;
org.codehaus.jparsec.misc.Mapper.10:toString()Ljava.lang.String;
org.codehaus.jparsec.Terminals.1:isExpectedTag(Ljava.lang.Object;)Z
org.codehaus.jparsec.Sequence2Parser:Sequence2Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map2;)V
org.codehaus.jparsec.IsCharScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.MapParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Pattern:some(II)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns.26:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.CharPredicates.21:isChar(C)Z
org.codehaus.jparsec.functors.Maps.2:map(Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Pair;
org.codehaus.jparsec.ExpectParser:toString()Ljava.lang.String;
org.codehaus.jparsec.error.ParserException:ParserException(Ljava.lang.Throwable;Lorg.codehaus.jparsec.error.ParseErrorDetails;Ljava.lang.String;Lorg.codehaus.jparsec.error.Location;)V
org.codehaus.jparsec.Indentation:Indentation()V
org.codehaus.jparsec.Tokens.ScientificNotation:ScientificNotation(Ljava.lang.String;Ljava.lang.String;)V
org.codehaus.jparsec.Parser:newReference()Lorg.codehaus.jparsec.Parser.Reference;
org.codehaus.jparsec.Tokens.ScientificNotation:hashCode()I
org.codehaus.jparsec.OperatorTable:operators()[Lorg.codehaus.jparsec.OperatorTable.Operator;
org.codehaus.jparsec.functors.Tuple5:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.8:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.MapperTest.CharSequenceSubMap:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.Parser:prefix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Asserts:assertParser(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.Object;)V
org.codehaus.jparsec.Parsers:sequence([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Keywords.CaseInsensitive:toMap(Ljava.util.Map;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Scanners:blockComment(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps:identity()Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.functors.Pair:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Tuples:pair(Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Pair;
org.codehaus.jparsec.Scanners:many1(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors:tokenWithSameValue(Ljava.lang.Object;)Lorg.codehaus.jparsec.TokenMap;
org.codehaus.jparsec.functors.Maps.8:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns.1:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.IsTokenParser:IsTokenParser(Lorg.codehaus.jparsec.TokenMap;)V
org.codehaus.jparsec.TokenizerMaps.2:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Maps.1:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper.2:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.Parser:infixr(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ListParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.InternalFunctors:lastOfFive()Lorg.codehaus.jparsec.functors.Map5;
org.codehaus.jparsec.util.Checks:checkArgument(ZLjava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.CharPredicates.13:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns.28:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.util.IntList:get(I)I
org.codehaus.jparsec.functors.Maps.5:toString()Ljava.lang.String;
org.codehaus.jparsec.Indentation:analyzeIndentations(Ljava.util.List;Ljava.lang.Object;)Ljava.util.List; | RETURN | 6470 | return null
org.codehaus.jparsec.misc.CurryTest.Foo:Foo(Ljava.lang.String;I)V
org.codehaus.jparsec.OperatorTableExpressionTest:op(Ljava.lang.String;Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:range(CC)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.OrParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Mapper:getRawClass(Ljava.lang.reflect.Type;)Ljava.lang.Class;
org.codehaus.jparsec.OperatorTableTest:assertOrder(Ljava.lang.Comparable;Ljava.lang.Comparable;)V
org.codehaus.jparsec.Operators:sort([Ljava.lang.String;)[Ljava.lang.String;
org.codehaus.jparsec.Terminals:equals(Ljava.lang.String;Ljava.lang.String;Z)Z
org.codehaus.jparsec.functors.Maps.11:toString()Ljava.lang.String;
org.codehaus.jparsec.ExpectParser:ExpectParser(Ljava.lang.String;)V
org.codehaus.jparsec.LazyParser:deref()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Invokables.ValueInvokable:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:ifelse(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.IfElseParser:IfElseParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.ParserInternals:many(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns:optional(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Pattern:many1()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.BestParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.EmptyParseError:getExpected()Ljava.util.List;
org.codehaus.jparsec.pattern.Patterns.7:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.RepeatTimesParser:RepeatTimesParser(Lorg.codehaus.jparsec.Parser;IILorg.codehaus.jparsec.ListFactory;)V
org.codehaus.jparsec.misc.Mapper:isSkipped(Lorg.codehaus.jparsec.Parser;)Z
org.codehaus.jparsec.Parser:optional(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TokensTest:assertFragment(Ljava.lang.Object;Ljava.lang.String;Lorg.codehaus.jparsec.Tokens.Fragment;)V
org.codehaus.jparsec.Parser:skipTimes(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.2:isChar(C)Z
org.codehaus.jparsec.Parser:atLeast(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:postfix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTable:infixl(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.ParserInternals:repeat(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Terminals:caseInsensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.misc.MapperTest.11:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.pattern.Pattern:optional()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ListFactories.1:newList()Ljava.util.List;
org.codehaus.jparsec.Scanners:many1(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple5:hashCode()I
org.codehaus.jparsec.Keywords.CaseInsensitive.1:compare(Ljava.lang.String;Ljava.lang.String;)I
org.codehaus.jparsec.pattern.Patterns:and([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.CharPredicates.16:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:shortest([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:parse(Ljava.lang.CharSequence;)Ljava.lang.Object;
org.codehaus.jparsec.misc.Mapper:postfix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:name()Ljava.lang.String;
org.codehaus.jparsec.Token:index()I
org.codehaus.jparsec.misc.MapperTest.4:map(Ljava.lang.String;II)Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.6:isChar(C)Z
org.codehaus.jparsec.Indentation:outdent()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.6:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map3;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.StringLiteralsTranslator:escapedChar(C)C
org.codehaus.jparsec.pattern.CharPredicates.22:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserInternals:greedyRun(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.functors.Maps:constant(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.NestableBlockCommentScanner:NestableBlockCommentScanner(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.misc.MapperTest.3:map(Ljava.lang.String;I)Ljava.lang.String;
org.codehaus.jparsec.ParseContext:suppressError(Z)Z
org.codehaus.jparsec.ReturnSourceParser:ReturnSourceParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Indentation.2:map(Ljava.util.List;)Ljava.util.List;
org.codehaus.jparsec.misc.Mapper:sequence([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.18:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper.4:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.Parser:many1()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:stringCaseInsensitive(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Lexicon:phrase([Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserTest:assertListParser(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.Scanners:blockComment(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.19:isChar(C)Z
org.codehaus.jparsec.EofParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.functors.Tuple5:equals(Lorg.codehaus.jparsec.functors.Tuple5;)Z
org.codehaus.jparsec.pattern.CharPredicates.2:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:ifelse(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser:atomic()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TokenizerMaps.3:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.Parser:notFollowedBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext.2:getFailureMessage()Ljava.lang.String;
org.codehaus.jparsec.functors.Maps:toPair()Lorg.codehaus.jparsec.functors.Map2;
org.codehaus.jparsec.ParseContext:ParseContext(Ljava.lang.CharSequence;ILjava.lang.String;Lorg.codehaus.jparsec.SourceLocator;)V
org.codehaus.jparsec.misc.Mapper.3.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns:isChar(C)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ActionParser:ActionParser(Ljava.lang.Runnable;)V
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.13:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.ArrayParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:between(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.30:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.util.Lists:capacity(I)I
org.codehaus.jparsec.pattern.Patterns:regex(Ljava.util.regex.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers.1:toString()Ljava.lang.String;
org.codehaus.jparsec.error.ParserException:getLocation()Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.PatternScanner:PatternScanner(Ljava.lang.String;Lorg.codehaus.jparsec.pattern.Pattern;)V
org.codehaus.jparsec.InternalFunctors.5:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:hasExact(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns:shorter(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.TokenizerMaps.4:map(Ljava.lang.String;)Ljava.lang.Character;
org.codehaus.jparsec.pattern.CharPredicates.13:isChar(C)Z
org.codehaus.jparsec.ParserState:getToken()Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.pattern.Patterns.24:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Terminals:caseInsensitive([Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.SkipTimesParser:SkipTimesParser(Lorg.codehaus.jparsec.Parser;II)V
org.codehaus.jparsec.OperatorTable.Operator:compareTo(Lorg.codehaus.jparsec.OperatorTable.Operator;)I
org.codehaus.jparsec.functors.Maps:map(Ljava.util.Map;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple5:Tuple5(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns:matchMany(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.NumberLiteralsTranslator:tokenizeHexAsLong(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.Scanners:notChar(C)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTable:build(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.SkipTimesParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.BestParser:toString()Ljava.lang.String;
org.codehaus.jparsec.DefaultSourceLocator:lookup(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.pattern.CharPredicates.4:isChar(C)Z
org.codehaus.jparsec.Tokens.Fragment:tag()Ljava.lang.Object; | RETURN | 3409 | return null
org.codehaus.jparsec.Sequence4Parser:Sequence4Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map4;)V
org.codehaus.jparsec.TokenizerMaps.7:toString()Ljava.lang.String;
org.codehaus.jparsec.NestedScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserTest:assertList(Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.functors.Tuple4:Tuple4(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.StringLiteralsTranslator:tokenizeDoubleQuote(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.Parser:next(Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTable:buildExpressionParser(Lorg.codehaus.jparsec.Parser;[Lorg.codehaus.jparsec.OperatorTable.Operator;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.12:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Operators.Suites:add(Ljava.lang.String;)V
org.codehaus.jparsec.pattern.CharPredicates:and([Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Scanners:nestableBlockComment(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.7:map(Lorg.codehaus.jparsec.Token;)Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.Tokens.Fragment:text()Ljava.lang.String;
org.codehaus.jparsec.Keywords.CaseInsensitive:comparator()Ljava.util.Comparator;
org.codehaus.jparsec.Sequence2Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.Asserts:assertArrayEquals([Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.Parser:many()Lorg.codehaus.jparsec.Parser; | CONSTANT | 5794 | 0 -> -1
org.codehaus.jparsec.util.IntList:checkIndex(I)V
org.codehaus.jparsec.pattern.CharPredicates:or(Lorg.codehaus.jparsec.pattern.CharPredicate;Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Lexicon:word(Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.Tokens.ScientificNotation:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.MapperTest.7:map(Ljava.lang.String;II)Ljava.lang.String;
org.codehaus.jparsec.misc.MapperTest:assertWrongParameters(Lorg.codehaus.jparsec.misc.Mapper;II)V
org.codehaus.jparsec.Scanners:lineComment(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Lexicon:union(Lorg.codehaus.jparsec.Lexicon;)Lorg.codehaus.jparsec.Lexicon;
org.codehaus.jparsec.BindNextParser:BindNextParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map;)V
org.codehaus.jparsec.NumberLiteralsTranslator:toHexDigit(C)I | OPERATOR | 1639 | <= -> ==
org.codehaus.jparsec.GetIndexParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:times(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.Lists:arrayList(I)Ljava.util.ArrayList;
org.codehaus.jparsec.ParserState:characters()Ljava.lang.CharSequence;
org.codehaus.jparsec.Parser:times(II)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper.6:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Binary;
org.codehaus.jparsec.util.IntList:set(II)I
org.codehaus.jparsec.misc.Mapper:binary()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.IntOrders.2:compare(II)Z
org.codehaus.jparsec.SequenceParser:SequenceParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Asserts:assertFailure(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;IILjava.lang.Class;)V
org.codehaus.jparsec.functors.Maps:toTuple3()Lorg.codehaus.jparsec.functors.Map3;
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple5;
org.codehaus.jparsec.InternalFunctors.4:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Scanners:blockComment(Ljava.lang.String;Ljava.lang.String;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.7:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.6:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Invokables.2:returnType()Ljava.lang.Class;
org.codehaus.jparsec.LazyParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.TokenizerMaps.8:map(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.Tokens.Fragment:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.BindNextParser:toString()Ljava.lang.String;
org.codehaus.jparsec.ParseContext.1:getUnexpected()Ljava.lang.String;
org.codehaus.jparsec.Parser:succeeds()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.8:isChar(C)Z
org.codehaus.jparsec.ArrayParser:ArrayParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.ParserState:ParserState(Ljava.lang.String;Ljava.lang.CharSequence;[Lorg.codehaus.jparsec.Token;ILorg.codehaus.jparsec.SourceLocator;ILjava.lang.Object;)V
org.codehaus.jparsec.EmptyParseError:getFailureMessage()Ljava.lang.String;
org.codehaus.jparsec.Sequence3Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns:many(ILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns.8:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.misc.Mapper.4.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.ScannerState:isEof()Z
org.codehaus.jparsec.util.IntList:IntList()V
org.codehaus.jparsec.misc.Mapper:asUnary()Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.UnexpectedParser:UnexpectedParser(Ljava.lang.String;)V
org.codehaus.jparsec.util.Checks:checkState(ZLjava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TokenizerMaps.7:map(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.functors.Tuple5:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.ParserInternals:copyError(Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.ParseContext;)V
org.codehaus.jparsec.Scanners:isChar(Lorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserErrorHandlingTest.1:map(Ljava.util.List;)Ljava.util.List;
org.codehaus.jparsec.pattern.CharPredicates.17:isChar(C)Z
org.codehaus.jparsec.pattern.Patterns:lineComment(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.EmptyListParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.CharPredicates.15:isChar(C)Z
org.codehaus.jparsec.misc.Mapper:checkArgumentTypes([Ljava.lang.Object;)V
org.codehaus.jparsec.ParserInternals:runForBestFit(Lorg.codehaus.jparsec.IntOrder;[Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ParseContext;Ljava.lang.Object;II)V
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TerminalsTest:assertDup([Ljava.lang.String;[Ljava.lang.String;Z)V
org.codehaus.jparsec.functors.Maps.9:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns.16:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.SequenceParser:toString()Ljava.lang.String;
org.codehaus.jparsec.StepParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.SkipAtLeastParser:SkipAtLeastParser(Lorg.codehaus.jparsec.Parser;I)V
org.codehaus.jparsec.misc.Mapper:infix([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NestableBlockCommentScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.Operators.Suites:toArray()[Ljava.lang.String;
org.codehaus.jparsec.RepeatAtLeastParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.CharPredicates.14:isChar(C)Z
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple3;
org.codehaus.jparsec.misc.Invokables.ValueInvokable:ValueInvokable(Ljava.lang.Object;)V
org.codehaus.jparsec.ParseContext:fail(Ljava.lang.String;)V
org.codehaus.jparsec.misc.MapperTest.2:map(Ljava.lang.String;I)Ljava.lang.String;
org.codehaus.jparsec.NestedScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.error.Location:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:stringCaseInsensitive(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:infixn(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Token:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:infixl(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.SumParser:SumParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.ReturnSourceParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Indentation:Indentation(Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns.27:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Parser:or(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates:notChar(C)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.pattern.Pattern:repeat(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.error.ErrorReporter:reportList(Ljava.lang.StringBuilder;Ljava.util.List;)V | CONSTANT | 2494 | 0 -> -1
org.codehaus.jparsec.TokenizerMaps.6:map(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.ParserState:getInputName(I)Ljava.lang.String;
org.codehaus.jparsec.ListFactories:arrayListFactory()Lorg.codehaus.jparsec.ListFactory;
org.codehaus.jparsec.LazyParser:LazyParser(Ljava.util.concurrent.atomic.AtomicReference;)V
org.codehaus.jparsec.DelimitedListParser:element(Lorg.codehaus.jparsec.ParseContext;Ljava.util.List;)V
org.codehaus.jparsec.SkipAtLeastParser:toString()Ljava.lang.String;
org.codehaus.jparsec.SumParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:endBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:next(I)V
org.codehaus.jparsec.EmptyListParser:EmptyListParser()V
org.codehaus.jparsec.functors.Tuple4:hashCode()I
org.codehaus.jparsec.pattern.CharPredicates.10:isChar(C)Z
org.codehaus.jparsec.Terminals:instance(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;ZLorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Reflection:isInstance(Ljava.lang.Class;Ljava.lang.Object;)Z
org.codehaus.jparsec.ScannerState:getInputName(I)Ljava.lang.String;
org.codehaus.jparsec.Parsers.4.1:map(Lorg.codehaus.jparsec.functors.Map2;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns:longer(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser:not()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple4:equals(Lorg.codehaus.jparsec.functors.Tuple4;)Z
org.codehaus.jparsec.pattern.Pattern:or(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Indentation:token(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.IndentationTest:analyze([Ljava.lang.Object;)Ljava.util.List;
org.codehaus.jparsec.pattern.Patterns:longest([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.CharPredicates.19:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:tokens(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Tokens.ScientificNotation:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.pattern.Patterns:notString(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.NumberLiteralsTranslator:toDecDigit(C)I
org.codehaus.jparsec.DelimitedListParser:begin()Ljava.util.List;
org.codehaus.jparsec.TokenizerMaps.5:map(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.ParserInternals:runNestedParser(Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.Parser;)Z
org.codehaus.jparsec.IsFragment:map(Lorg.codehaus.jparsec.Token;)Ljava.lang.String;
org.codehaus.jparsec.Parsers:unexpected(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:step(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.MapperTest.CharSequenceMap:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors.7:toString()Ljava.lang.String;
org.codehaus.jparsec.TokenizerMaps.6:toString()Ljava.lang.String;
org.codehaus.jparsec.AtomicParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Sequence5Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.GetIndexParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Invokables:constructor(Lnet.sf.cglib.reflect.FastConstructor;)Lorg.codehaus.jparsec.misc.Invokable;
org.codehaus.jparsec.pattern.Patterns.5:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Parser:endBy1(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:infixn(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:matchSome(ILorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.Token:hashCode()I
org.codehaus.jparsec.util.ObjectTester:assertEqual(Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.InternalFunctors:lastOfTwo()Lorg.codehaus.jparsec.functors.Map2;
org.codehaus.jparsec.ParseContext:ParseContext(Ljava.lang.CharSequence;Ljava.lang.Object;ILjava.lang.String;Lorg.codehaus.jparsec.SourceLocator;)V
org.codehaus.jparsec.DefaultSourceLocatorTest:addLineBreaks(Lorg.codehaus.jparsec.DefaultSourceLocator;[I)V
org.codehaus.jparsec.Terminals:caseSensitive([Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.misc.Mapper:checkNotSkipped(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.ParserInternals:many(Lorg.codehaus.jparsec.Parser;Ljava.util.Collection;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.CurryTest.PrefixExpr:PrefixExpr(Ljava.lang.String;Lorg.codehaus.jparsec.misc.CurryTest.Expr;)V
org.codehaus.jparsec.DelimitedParser:DelimitedParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.DefaultSourceLocator:DefaultSourceLocator(Ljava.lang.CharSequence;II)V
org.codehaus.jparsec.UnexpectedParser:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:getTargetType(Ljava.lang.Class;)Ljava.lang.Class;
org.codehaus.jparsec.functors.Maps.6:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Sequence5Parser:Sequence5Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map5;)V
org.codehaus.jparsec.ParserInternals:stillThere(Lorg.codehaus.jparsec.ParseContext;II)Z
org.codehaus.jparsec.OperatorTable:infixr(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.pattern.Patterns.4:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.Patterns:many(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser:map(Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.DefaultSourceLocator:location(II)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.pattern.CharPredicates.11:isChar(C)Z
org.codehaus.jparsec.Scanners:isChar(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.EmptyParseError:getIndex()I
org.codehaus.jparsec.misc.Curry:invoke([Ljava.lang.Object;)Ljava.lang.Object; | CONSTANT | 6065 | 0 -> 1
org.codehaus.jparsec.pattern.CharPredicates:among(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.RepeatTimesParser:RepeatTimesParser(Lorg.codehaus.jparsec.Parser;II)V
org.codehaus.jparsec.PeekParser:PeekParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.pattern.Patterns:some(ILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.RepeatTimesParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Curry:find([II)I
org.codehaus.jparsec.functors.Tuple4:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:expectedParams()I
org.codehaus.jparsec.TokenizerMapsTest:assertFragment(Ljava.lang.Object;Lorg.codehaus.jparsec.functors.Map;)V
org.codehaus.jparsec.pattern.CharPredicates:range(CC)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Scanners.1:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.functors.Maps.7:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Checks:checkMin(I)I
org.codehaus.jparsec.misc.CurryTest.InfixExpr:InfixExpr(Lorg.codehaus.jparsec.misc.CurryTest.Expr;Ljava.lang.String;Lorg.codehaus.jparsec.misc.CurryTest.Expr;)V
org.codehaus.jparsec.Indentation.1:isChar(C)Z
org.codehaus.jparsec.TokenizerMaps.1:map(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.ScientificNotation;
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Pair;
org.codehaus.jparsec.functors.Maps.6:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Checks:checkNonNegative(ILjava.lang.String;)I
org.codehaus.jparsec.Parser:sepBy1(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map2;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ToTokenParser:toString()Ljava.lang.String;
org.codehaus.jparsec.EmptyParseError:getUnexpected()Ljava.lang.String;
org.codehaus.jparsec.MapParser:toString()Ljava.lang.String;
org.codehaus.jparsec.TestParsers:isChar(C)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.IntList:calcSize(II)I
org.codehaus.jparsec.DefaultSourceLocator:DefaultSourceLocator(Ljava.lang.CharSequence;)V
org.codehaus.jparsec.pattern.Patterns:matchRepeat(ILorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.pattern.Patterns.10:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.functors.Maps.12:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.DefaultSourceLocator:DefaultSourceLocator(Ljava.lang.CharSequence;IIC)V
org.codehaus.jparsec.TokenizerMaps.4:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:postfix([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.UnexpectedParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Asserts:assertFailure(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;IILjava.lang.String;Ljava.lang.String;)V
org.codehaus.jparsec.pattern.Pattern:not()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.EofParser:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserInternals:repeatAtMost(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:skipTimes(II)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTableTest:operator(ILorg.codehaus.jparsec.OperatorTable.Associativity;)Lorg.codehaus.jparsec.OperatorTable.Operator;
org.codehaus.jparsec.Parsers:constant(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.SumParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Curry:of(Ljava.lang.Class;[Ljava.lang.Object;)Lorg.codehaus.jparsec.misc.Curry;
org.codehaus.jparsec.ParseContext:renderError()Lorg.codehaus.jparsec.error.ParseErrorDetails;
org.codehaus.jparsec.pattern.Pattern:some(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.util.Strings:join(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
org.codehaus.jparsec.Keywords:unique(Ljava.util.Comparator;[Ljava.lang.String;)[Ljava.lang.String;
org.codehaus.jparsec.DefaultSourceLocator:locate(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.ParseContext:getIndex()I
org.codehaus.jparsec.misc.Mapper:unary()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.9:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Parser:skipMany()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.Lists:arrayList()Ljava.util.ArrayList;
org.codehaus.jparsec.misc.Invokables:method(Ljava.lang.Object;Lnet.sf.cglib.reflect.FastMethod;)Lorg.codehaus.jparsec.misc.Invokable;
org.codehaus.jparsec.DefaultSourceLocator:binarySearch(Lorg.codehaus.jparsec.util.IntList;I)I
org.codehaus.jparsec.Parsers:tokenType(Ljava.lang.Class;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.RepeatAtLeastParser:RepeatAtLeastParser(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ListFactory;)V
org.codehaus.jparsec.pattern.Patterns.2:match(Ljava.lang.CharSequence;II)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
627 2 606 1 837 1 348 1 273 4 237 1 28 1 245 1 24 3 772 1 815 1 396 1 820 1 227 1 301 1 493 2 782 3 844 1 
820 1 227 1 301 1 837 1 273 2 782 1 245 1 24 1 772 1 815 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
396 1 627 1 493 1 670 1 28 1 245 1 24 1 844 1 81 1 
670 1 245 1 24 1 844 1 81 1 
606 1 820 1 227 1 273 2 782 1 245 1 24 1 772 1 
627 1 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 1 782 1 844 1 
627 1 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 1 782 1 844 1 
627 2 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 2 782 1 844 1 
627 2 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 2 782 1 844 1 
627 2 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 2 782 1 844 1 
627 2 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 2 782 1 844 1 
627 2 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 2 782 1 844 1 
627 2 606 1 273 2 28 1 245 1 24 2 766 1 772 1 396 1 820 1 227 1 493 2 782 1 844 1 
820 1 301 1 245 1 772 1 
820 1 227 1 301 1 273 2 782 1 245 1 24 1 772 1 
273 2 28 1 245 1 24 1 772 1 396 1 820 1 301 1 227 1 782 1 
627 1 348 1 273 2 237 1 28 1 245 1 24 1 772 1 396 1 820 1 227 1 301 1 493 1 782 1 
627 2 606 1 837 1 348 1 273 3 237 1 28 1 245 1 24 3 772 1 396 1 820 1 227 1 301 1 493 2 782 2 844 1 
16 1 785 1 811 1 514 1 664 1 300 1 
336 1 
336 1 273 1 
273 1 335 1 336 1 
715 1 273 1 335 1 336 1 
273 1 335 1 336 1 
206 1 715 1 
273 1 703 1 
273 1 70 1 286 1 227 2 763 1 
485 1 377 1 
481 1 51 1 
688 1 412 1 
78 1 54 1 388 1 
805 1 476 1 775 1 
504 1 281 1 548 1 
597 1 818 1 2 1 
43 1 364 1 799 1 
420 1 571 1 353 1 447 1 83 2 460 1 430 1 478 2 
147 1 446 1 320 1 447 2 698 2 83 2 379 1 430 1 648 1 221 2 
613 2 446 1 447 3 311 1 326 1 83 2 185 1 430 1 735 1 333 1 63 2 221 2 
613 2 564 1 446 1 447 4 358 1 83 2 430 1 302 1 735 1 599 2 676 1 649 2 494 1 221 2 
255 1 353 2 141 1 447 2 286 1 83 1 430 2 477 1 478 1 763 1 
255 1 353 2 141 1 447 2 286 1 83 2 430 2 477 1 478 2 763 1 804 1 
255 1 141 2 446 2 447 4 235 1 109 1 698 1 286 1 83 1 379 2 430 2 763 1 221 1 
255 1 446 2 447 6 109 1 286 1 430 2 735 2 63 1 726 1 794 1 613 1 141 3 83 1 333 2 763 1 221 1 
255 1 468 1 564 2 446 2 447 8 531 1 109 1 286 1 430 2 735 2 649 1 726 1 613 1 141 4 83 1 599 1 763 1 676 2 221 1 
806 2 512 1 299 1 94 1 18 1 371 1 60 1 22 1 574 1 666 1 287 1 736 1 128 1 490 2 242 1 800 2 802 1 90 1 586 1 426 1 
323 1 208 1 
107 1 802 2 19 1 350 1 
816 1 323 1 84 2 133 1 107 2 223 1 765 1 245 1 572 1 86 1 350 1 300 1 820 1 301 1 111 1 170 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 68 1 802 3 208 1 454 1 211 1 563 1 16 1 336 1 384 2 19 2 664 1 808 1 724 1 833 1 49 1 188 1 217 1 669 1 342 1 409 1 837 1 52 2 838 1 160 1 242 1 24 1 639 1 815 1 100 1 194 1 101 1 196 1 731 1 842 1 782 1 440 1 600 1 222 1 
539 1 495 1 582 3 265 2 706 1 288 1 463 1 233 3 150 1 738 1 639 3 447 1 710 1 340 1 57 1 
677 1 223 2 572 2 621 2 112 1 111 1 170 2 472 1 582 2 422 1 273 1 233 2 737 1 536 2 423 2 115 2 585 1 424 1 741 1 480 1 539 2 16 1 336 1 384 3 280 1 483 1 747 2 386 2 338 2 340 2 752 1 808 3 188 1 189 1 342 4 592 2 191 1 242 7 80 2 24 1 639 2 815 2 194 3 196 3 131 2 84 12 706 1 765 4 245 2 85 1 86 1 447 1 448 2 710 1 300 1 820 2 301 1 204 2 33 1 354 1 401 4 715 1 772 2 454 3 717 1 211 7 456 2 254 1 563 2 663 2 664 1 258 1 216 1 830 1 833 1 49 2 669 1 265 1 361 1 463 1 409 2 837 1 319 2 838 4 160 1 411 1 101 2 842 4 781 1 782 1 222 1 
677 1 223 2 572 2 621 2 112 1 111 1 170 2 472 1 582 2 273 1 233 2 737 1 536 2 423 2 115 2 585 1 424 1 741 1 480 1 539 2 16 1 336 1 384 3 280 1 483 1 747 2 386 2 542 1 338 2 340 2 752 1 808 3 188 1 189 1 342 4 592 2 191 1 242 7 80 2 24 1 639 2 815 2 194 3 196 3 131 2 84 12 706 1 765 4 245 2 85 1 86 1 447 1 448 2 710 1 300 1 820 2 301 1 204 2 33 1 354 1 401 4 715 1 772 2 454 3 717 1 211 7 456 2 254 1 563 2 663 2 664 1 258 1 216 1 830 1 833 1 49 2 669 1 265 1 361 1 463 1 409 2 837 1 319 2 838 4 160 1 411 1 101 2 842 4 781 1 782 1 222 1 
323 4 107 2 223 1 369 4 572 1 678 1 577 2 111 1 170 1 472 1 582 3 273 1 233 4 536 1 423 1 115 1 424 1 276 1 802 2 539 1 16 1 336 1 745 1 384 6 428 1 337 2 19 2 71 1 340 1 432 1 808 3 635 1 188 7 547 1 342 4 288 1 812 1 242 14 24 1 639 3 815 1 194 1 196 1 439 1 440 4 130 1 816 2 495 1 84 14 131 2 133 2 764 2 765 1 393 1 708 4 245 1 86 7 136 2 447 1 709 2 448 4 710 1 300 1 138 1 820 1 301 1 304 2 553 1 400 2 31 1 715 1 142 1 771 1 772 1 250 1 208 4 90 1 454 3 91 1 211 3 563 1 456 1 148 2 315 1 150 1 405 1 664 1 96 1 830 1 831 5 156 2 833 1 49 1 725 1 669 3 265 1 409 1 463 1 837 1 52 2 219 1 838 5 160 1 161 1 615 1 100 4 101 1 731 1 103 2 164 1 842 2 781 1 57 1 782 1 363 1 222 1 413 1 
427 1 233 1 87 1 340 1 543 1 
480 1 233 1 621 1 340 1 752 1 
338 1 328 1 194 1 
764 1 142 1 410 1 
451 1 157 1 35 1 
285 1 182 1 650 1 
163 1 489 1 587 1 
323 1 59 1 223 1 271 2 572 1 110 1 111 1 170 1 472 1 582 1 65 1 329 2 273 1 536 1 175 1 423 1 115 1 629 1 424 1 179 2 336 1 16 1 384 3 808 1 188 1 342 1 490 1 242 2 24 1 639 1 815 1 194 1 196 1 346 1 597 1 440 1 84 3 392 1 765 1 818 1 245 1 86 1 709 1 300 1 820 1 301 1 352 1 140 1 715 1 772 1 208 1 454 1 657 1 456 1 664 1 833 1 49 1 409 1 53 1 836 1 837 1 838 2 160 1 100 1 101 1 842 1 731 1 781 1 782 1 222 1 
323 1 84 3 223 1 392 1 765 1 271 2 245 1 572 1 86 1 709 1 110 1 532 1 300 1 820 1 301 1 623 1 111 1 170 1 582 1 472 1 65 1 329 2 715 1 273 1 536 1 423 1 115 1 629 1 474 1 772 1 424 1 179 2 208 1 454 1 657 1 381 1 456 1 16 1 336 1 384 3 664 1 155 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 836 1 490 1 838 2 160 1 242 2 24 1 639 1 815 1 100 1 194 1 101 1 196 1 731 1 842 1 346 1 781 1 782 1 440 1 222 1 
836 1 625 1 
254 1 427 1 490 1 483 1 392 1 281 1 242 2 629 1 548 1 424 1 781 1 845 1 
490 1 392 1 281 1 629 1 548 1 
842 1 529 1 718 1 
842 1 161 1 130 1 
419 1 538 1 757 1 268 1 490 1 699 1 310 1 832 1 
283 1 832 1 490 1 757 1 310 1 699 1 268 1 
283 1 168 1 832 1 490 1 757 1 310 1 699 1 268 1 763 1 
1 1 536 1 115 1 424 1 334 1 338 1 126 1 342 1 242 3 757 1 642 1 131 1 765 1 245 1 768 1 32 1 772 1 454 1 252 1 563 1 456 1 152 3 45 1 49 1 669 1 781 1 268 1 167 1 786 1 572 1 793 1 170 1 66 1 795 1 178 1 801 1 387 1 808 1 490 3 815 1 194 1 196 1 699 1 84 3 820 1 310 1 211 3 313 1 830 1 832 1 517 1 730 1 101 1 842 1 
167 1 416 1 1 1 786 1 572 1 228 1 793 1 170 1 378 1 582 1 66 1 473 1 795 1 536 1 115 1 424 2 178 1 180 1 801 1 586 1 334 1 121 1 690 1 387 1 20 1 22 1 338 1 693 1 808 1 434 1 126 1 127 1 342 1 490 3 812 1 242 6 639 1 815 1 757 1 194 1 196 1 699 1 642 1 440 1 84 5 131 1 646 1 765 1 245 1 394 1 768 1 820 1 32 1 772 1 310 1 454 1 252 1 210 1 211 4 563 1 456 2 212 1 313 1 152 3 515 1 830 1 45 1 832 1 724 1 517 2 49 1 669 1 159 1 730 1 100 1 101 1 842 1 267 1 781 2 268 1 
111 1 536 1 115 1 424 1 334 1 336 1 434 1 126 1 342 1 242 4 24 1 639 1 757 1 765 1 245 1 32 1 772 1 454 1 456 1 662 1 152 1 462 1 49 1 267 1 781 1 268 1 782 1 572 1 170 1 582 1 273 1 274 1 384 1 184 1 693 1 808 1 79 3 490 2 815 1 194 1 196 1 699 1 84 3 820 1 301 1 310 1 830 1 832 1 517 1 837 1 838 1 101 1 842 1 
84 3 765 1 445 1 245 1 572 1 820 1 301 1 111 1 170 1 582 1 554 1 32 1 795 1 273 1 274 1 536 1 115 1 772 1 424 1 310 1 454 1 252 1 456 1 336 1 384 1 662 1 184 1 152 1 830 1 832 1 808 1 462 1 49 1 517 1 434 1 342 1 837 1 79 3 490 2 838 1 242 4 24 1 639 1 815 1 194 1 757 1 196 1 101 1 842 1 699 1 267 1 268 1 781 1 782 1 
131 1 84 2 765 1 786 1 1 2 245 1 572 1 820 1 793 1 170 1 305 1 66 1 795 1 174 1 536 1 115 1 772 1 178 1 310 1 454 1 252 1 211 2 563 1 334 1 313 1 152 3 338 1 830 1 832 1 808 1 49 1 669 1 126 1 342 1 490 2 671 1 839 1 242 2 730 2 815 1 194 1 757 1 196 1 101 1 842 1 699 1 104 1 268 1 390 1 
415 1 131 1 84 2 496 1 765 1 1 1 786 1 245 1 572 1 820 1 793 1 170 1 66 1 795 1 536 1 115 1 772 1 178 1 310 1 454 1 252 1 211 2 563 1 334 1 39 1 313 1 387 1 152 3 338 1 830 1 832 1 808 1 49 1 669 1 126 1 342 1 490 2 242 2 730 1 815 1 757 1 194 1 101 1 196 1 842 1 699 1 268 1 644 1 
1 1 536 1 115 1 424 1 334 1 338 1 126 1 342 1 242 3 757 1 131 1 765 1 245 1 768 1 770 1 32 1 772 1 454 1 252 1 563 1 456 1 152 3 49 1 669 1 781 1 268 1 786 1 572 1 374 1 793 1 170 1 66 1 795 1 178 1 486 1 387 1 808 1 490 3 815 1 194 1 196 1 699 1 84 3 820 1 310 1 211 3 313 1 95 1 830 1 832 1 517 1 730 1 101 1 842 1 
416 1 1 1 786 1 572 1 228 1 374 1 793 1 170 1 378 1 582 1 66 1 473 1 795 1 536 1 115 1 424 2 178 1 180 1 586 1 334 1 121 1 690 1 486 1 387 1 20 1 22 1 338 1 808 1 433 1 126 1 127 1 342 1 812 1 490 3 242 6 639 1 815 1 757 1 194 1 196 1 699 1 440 1 84 5 131 1 646 1 765 1 245 1 394 1 768 1 820 1 770 1 32 1 772 1 310 1 454 1 252 1 210 1 211 4 456 2 563 1 212 1 313 1 95 1 152 3 515 1 830 1 832 1 724 1 517 2 49 1 669 1 159 1 730 1 100 1 101 1 842 1 267 1 781 2 268 1 
1 1 230 1 536 1 115 1 424 1 120 1 334 1 338 1 433 1 126 1 342 1 242 4 639 2 757 1 131 1 134 1 765 1 245 1 32 1 772 1 454 1 252 1 563 1 456 1 152 3 49 1 669 1 267 1 781 1 268 1 786 1 572 1 573 1 793 1 170 1 582 2 66 1 795 1 178 1 180 1 387 1 488 1 187 1 808 1 490 2 815 1 194 1 196 1 699 1 84 4 394 1 820 1 310 1 211 4 313 1 830 1 832 1 517 1 730 1 101 1 842 1 
1 1 536 1 115 1 424 1 537 1 334 1 338 1 126 1 342 1 242 3 757 1 131 1 765 1 245 1 768 1 32 1 556 1 772 1 454 1 252 1 563 1 456 1 152 3 49 1 668 1 669 1 781 1 268 1 786 1 572 1 793 1 170 1 66 1 795 1 178 1 387 1 808 1 490 3 815 1 194 1 196 1 699 1 84 3 395 1 820 1 310 1 211 3 313 1 830 1 832 1 517 1 730 1 101 1 842 1 
416 1 1 1 786 1 572 1 228 1 793 1 170 1 378 1 582 1 66 1 473 1 795 1 536 1 115 1 424 2 178 1 180 1 537 1 586 1 334 1 121 1 690 1 387 1 20 1 22 1 338 1 808 1 434 1 126 1 127 1 342 1 812 1 490 3 242 6 639 1 815 1 757 1 194 1 196 1 699 1 440 1 84 5 131 1 646 1 765 1 245 1 394 1 395 1 768 1 820 1 32 1 822 1 556 1 772 1 310 1 454 1 252 1 210 1 211 4 563 1 456 2 212 1 313 1 152 3 515 1 830 1 832 1 724 1 517 2 49 1 668 1 669 1 159 1 730 1 100 1 101 1 842 1 267 1 781 2 268 1 
111 1 536 1 115 1 424 1 334 1 336 1 434 1 126 1 342 1 242 4 24 1 639 1 757 1 765 1 245 1 32 1 772 1 454 1 456 1 662 1 152 1 462 1 49 1 267 1 781 1 268 1 782 1 572 1 170 1 582 1 273 1 274 1 384 1 184 1 808 1 79 3 490 2 815 1 194 1 196 1 699 1 84 3 820 1 301 1 822 1 310 1 830 1 832 1 517 1 837 1 838 1 101 1 842 1 
111 1 536 1 115 1 424 1 336 1 434 1 342 1 242 4 24 1 639 1 757 1 765 1 445 1 245 1 554 1 32 1 772 1 454 1 252 1 456 1 662 1 152 1 462 1 49 1 267 1 781 1 268 1 782 1 572 1 170 1 582 1 795 1 273 1 274 1 384 1 184 1 808 1 79 3 490 2 815 1 194 1 196 1 699 1 84 3 820 1 301 1 310 1 830 1 832 1 517 1 837 1 838 1 101 1 842 1 
111 1 536 1 115 1 424 1 336 1 434 1 342 1 242 4 24 1 639 1 757 1 765 1 445 1 245 1 554 1 32 1 772 1 454 1 252 1 456 1 662 1 152 1 462 1 49 1 267 1 781 1 268 1 782 1 572 1 170 1 582 1 795 1 273 1 274 1 384 1 184 1 808 1 79 3 490 2 815 1 194 1 196 1 699 1 84 3 820 1 301 1 310 1 830 1 832 1 517 1 837 1 838 1 101 1 842 1 
111 1 536 1 115 1 424 1 336 1 434 1 342 1 242 4 24 1 639 1 757 1 765 1 445 1 245 1 554 1 32 1 772 1 454 1 252 1 456 1 662 1 152 1 462 1 49 1 267 1 781 1 268 1 782 1 572 1 170 1 582 1 795 1 273 1 274 1 384 1 184 1 808 1 79 3 490 2 815 1 194 1 196 1 699 1 84 3 820 1 301 1 310 1 830 1 832 1 517 1 837 1 838 1 101 1 842 1 
490 1 832 1 
490 1 832 1 
490 1 832 1 
490 1 832 1 
174 1 490 1 1 1 832 1 730 1 305 1 
174 1 490 1 74 1 1 1 832 1 730 1 
174 1 490 1 1 1 832 1 730 1 305 1 
415 1 786 1 1 1 793 1 66 1 795 1 310 1 178 1 507 1 252 1 334 1 39 1 313 1 152 3 74 1 832 1 126 1 490 2 730 1 757 1 699 1 268 1 390 1 
334 1 152 1 832 1 126 1 490 2 671 1 757 1 310 1 507 1 699 1 268 1 
334 1 39 1 1 1 152 1 832 1 305 1 126 1 174 1 490 2 730 1 757 1 310 1 507 1 699 1 268 1 
334 1 1 1 152 1 95 1 768 1 830 1 832 1 517 1 305 1 126 1 32 1 174 1 490 3 242 1 730 1 757 1 310 1 507 1 699 1 268 1 
334 1 152 1 830 1 832 1 433 1 517 1 582 1 126 1 32 1 490 2 242 1 639 1 757 1 310 1 507 1 699 1 267 1 268 1 
334 1 1 1 152 1 768 1 830 1 832 1 517 1 305 1 126 1 32 1 174 1 490 3 242 1 730 1 757 1 310 1 507 1 699 1 268 1 537 1 
334 1 152 1 830 1 832 1 517 1 434 1 582 1 126 1 32 1 490 2 242 1 822 1 639 1 757 1 310 1 507 1 699 1 267 1 268 1 
334 1 152 1 768 1 45 1 830 1 832 1 517 1 126 1 32 1 490 3 242 1 757 1 310 1 507 1 699 1 268 1 
334 1 152 1 830 1 693 1 832 1 517 1 434 1 582 1 126 1 32 1 490 2 242 1 639 1 757 1 310 1 507 1 699 1 267 1 268 1 
786 1 1 1 152 1 832 1 305 1 795 1 174 1 490 1 730 1 757 1 310 1 507 1 699 1 268 1 252 1 
654 1 538 1 
1 2 536 1 115 1 424 1 334 1 631 1 429 1 338 1 435 1 342 1 242 3 642 1 131 1 765 1 245 1 137 1 768 1 32 1 772 1 774 1 454 1 563 1 456 1 257 1 45 1 49 1 669 1 781 1 673 3 167 1 368 1 572 1 169 1 376 1 170 1 66 1 795 1 684 1 178 1 808 1 77 1 490 2 815 1 194 1 196 1 699 1 84 3 500 1 820 1 211 3 313 1 830 1 517 1 408 2 730 1 101 1 842 1 843 1 
1 1 111 1 536 1 115 1 424 1 334 1 336 1 429 1 434 1 435 1 342 1 242 4 24 1 639 1 765 1 245 1 137 1 32 1 772 1 774 1 454 1 456 1 662 1 257 1 462 1 49 1 267 1 781 1 673 3 782 1 368 1 572 1 169 1 170 1 582 1 795 1 273 1 274 1 384 1 184 1 693 1 808 1 79 3 490 1 815 1 194 1 196 1 699 1 84 3 500 1 820 1 301 1 830 1 517 1 408 1 837 1 838 1 101 1 842 1 843 1 
84 3 765 1 445 1 245 1 572 1 820 1 301 1 111 1 170 1 582 1 554 1 32 1 795 1 273 1 274 1 536 1 115 1 772 1 424 1 454 1 456 1 336 1 384 1 662 1 184 1 830 1 808 1 517 1 49 1 462 1 434 1 408 1 342 1 837 1 490 1 79 3 838 1 242 4 24 1 639 1 815 1 194 1 101 1 196 1 842 1 267 1 781 1 782 1 
1 2 536 1 115 1 538 1 334 1 429 1 338 1 435 1 342 1 242 2 131 1 765 1 245 1 137 1 248 1 32 1 772 1 774 1 654 1 454 1 563 1 257 1 49 1 669 1 671 1 673 3 368 1 572 1 169 1 376 1 170 1 66 1 795 1 684 1 178 1 808 1 77 1 490 1 815 1 194 1 196 1 699 1 84 2 500 1 820 1 211 2 313 1 830 1 408 2 839 1 730 1 101 1 842 1 104 1 843 1 321 1 
415 1 1 2 536 1 115 1 538 1 334 1 429 1 338 1 435 1 342 1 242 2 644 1 131 1 765 1 245 1 137 1 32 1 772 1 774 1 654 1 454 1 563 1 39 1 41 1 257 1 49 1 669 1 673 3 368 1 572 1 169 1 376 1 170 1 66 1 795 1 684 1 178 1 808 1 77 1 490 1 815 1 194 1 196 1 699 1 701 1 84 2 500 1 820 1 211 2 313 1 830 1 408 2 730 1 101 1 842 1 843 1 
1 2 536 1 115 1 424 1 334 1 429 1 338 1 435 1 342 1 242 3 131 1 550 1 765 1 245 1 137 1 768 1 32 1 772 1 774 1 454 1 563 1 456 1 257 1 49 1 669 1 781 1 673 3 368 1 572 1 169 1 374 1 376 1 170 1 66 1 795 1 684 1 178 1 486 1 808 1 77 1 490 2 815 1 194 1 196 1 699 1 84 3 500 1 820 1 211 3 313 1 95 1 830 1 517 1 408 2 730 1 101 1 842 1 843 1 
1 2 230 1 536 1 115 1 424 1 334 1 540 1 429 1 338 1 433 1 435 1 342 1 242 4 639 2 131 1 134 1 765 1 245 1 137 1 32 1 772 1 774 1 454 1 563 1 456 1 257 1 49 1 669 1 267 1 781 1 673 3 368 1 572 1 169 1 573 1 376 1 170 1 582 2 66 1 795 1 684 1 178 1 180 1 488 1 187 1 808 1 77 1 490 1 815 1 194 1 196 1 699 1 84 4 394 1 500 1 820 1 211 4 313 1 830 1 517 1 408 2 730 1 101 1 842 1 843 1 
1 2 536 1 115 1 424 1 537 1 334 1 429 1 338 1 435 1 342 1 242 3 131 1 765 1 245 1 137 1 768 1 32 1 556 1 772 1 774 1 454 1 563 1 456 1 257 1 49 1 668 1 669 1 781 1 673 3 368 1 572 1 169 1 376 1 170 1 66 1 795 1 684 1 178 1 808 1 77 1 490 2 815 1 194 1 196 1 699 1 84 3 500 1 820 1 211 3 314 1 313 1 830 1 517 1 408 2 730 1 101 1 842 1 843 1 
1 1 111 1 536 1 115 1 424 1 334 1 336 1 429 1 434 1 435 1 342 1 242 4 24 1 639 1 765 1 245 1 137 1 32 1 772 1 774 1 454 1 456 1 662 1 257 1 462 1 49 1 267 1 781 1 673 3 782 1 368 1 572 1 169 1 170 1 582 1 795 1 273 1 274 1 384 1 184 1 808 1 79 3 490 1 815 1 194 1 196 1 699 1 84 3 500 1 820 1 301 1 822 1 830 1 517 1 408 1 837 1 838 1 101 1 842 1 843 1 
1 2 238 1 429 1 435 1 445 1 774 1 257 1 673 3 368 1 169 1 376 1 66 1 684 1 178 1 73 1 77 1 699 1 390 2 500 1 313 1 408 1 730 1 843 1 
1 2 429 1 435 1 445 1 774 1 257 1 673 3 368 1 169 1 376 1 66 1 684 1 178 1 73 1 77 1 699 1 390 2 500 1 313 1 408 1 730 1 843 1 527 1 
1 1 111 1 536 1 115 1 424 1 336 1 429 1 434 1 435 1 342 1 242 4 24 1 639 1 765 1 445 1 245 1 554 1 32 1 772 1 774 3 454 1 456 1 662 1 257 1 462 1 49 1 267 1 781 1 673 3 782 1 368 1 572 1 169 1 170 1 582 1 795 1 273 1 274 1 384 1 184 1 808 1 79 3 490 1 815 1 194 1 196 1 699 1 84 3 820 1 301 1 830 1 517 1 408 1 837 1 838 1 101 1 842 1 843 1 
169 3 429 1 435 1 673 1 368 1 257 1 
169 1 429 1 435 1 673 1 257 1 
169 1 429 1 435 1 500 1 673 3 368 1 1 1 774 1 257 1 
169 1 429 1 435 1 500 2 673 3 368 1 1 1 774 1 257 1 
1 1 429 1 751 1 435 1 774 2 257 1 673 3 368 1 169 2 699 1 500 1 843 1 
1 2 429 1 435 1 445 1 774 1 257 1 673 3 368 1 169 1 376 1 66 1 684 1 178 1 69 1 73 1 77 1 699 1 390 2 500 1 313 1 408 1 730 1 843 1 
111 1 536 1 115 1 10 1 424 1 336 1 434 1 342 1 242 4 24 1 639 1 757 1 765 1 445 1 245 1 554 1 32 1 772 1 454 1 252 1 456 1 662 1 152 1 462 1 49 1 267 1 781 1 268 1 782 1 572 1 170 1 582 1 795 1 273 1 274 1 384 1 184 1 808 1 79 3 490 2 815 1 194 1 196 1 699 1 84 3 820 1 301 1 310 1 830 1 832 1 517 1 837 1 838 1 101 1 842 1 
408 1 77 1 313 1 66 1 445 1 1 1 684 1 730 1 751 1 654 1 178 1 73 1 452 1 538 1 376 1 
408 1 445 1 684 1 283 1 178 1 73 1 507 1 390 1 376 1 
1 1 8 1 10 1 632 1 429 1 435 1 434 1 639 1 757 1 554 1 32 1 774 1 252 1 257 1 152 1 267 1 268 1 673 2 368 1 169 1 582 1 795 2 174 1 490 2 699 2 500 1 305 1 310 1 832 1 517 1 408 1 730 1 103 1 843 1 
84 3 765 1 445 1 245 1 572 1 820 1 301 1 111 1 170 1 582 1 8 1 554 1 32 1 795 1 273 1 274 1 536 1 115 1 772 1 424 1 454 1 456 1 336 1 384 1 662 1 184 1 429 1 830 1 808 1 462 1 517 1 49 1 434 1 435 1 408 1 342 1 837 1 490 1 79 3 838 1 242 4 24 1 639 1 815 1 194 1 101 1 196 1 699 1 842 1 267 1 781 1 843 1 782 1 
1 1 111 1 536 1 115 1 10 1 424 2 121 1 336 1 20 1 434 1 342 1 127 1 242 6 24 1 639 1 757 1 646 1 765 1 445 1 245 1 554 1 32 1 772 1 454 1 252 1 456 1 662 1 152 1 462 1 49 1 267 1 781 2 268 1 782 1 572 1 170 1 582 1 473 1 795 1 273 1 174 1 274 1 180 1 384 1 184 1 808 1 79 3 812 1 490 2 815 1 194 1 196 1 699 1 84 3 394 1 820 1 301 1 305 1 310 1 830 1 832 1 517 1 837 1 838 1 730 1 101 1 842 1 
1 2 786 1 572 1 573 1 228 1 230 1 793 1 170 1 582 2 66 1 473 1 795 1 174 1 536 1 115 1 10 1 424 2 178 1 180 2 334 1 121 1 20 1 488 1 338 1 74 1 187 1 808 1 433 1 126 1 127 1 342 1 812 1 490 2 242 6 639 2 815 1 757 1 194 1 196 1 699 1 390 1 84 6 131 3 134 1 646 1 765 1 245 1 394 2 820 1 305 1 32 1 772 1 310 1 507 1 454 1 211 5 252 1 456 2 563 1 212 1 313 1 152 3 830 1 832 1 517 1 49 1 669 1 730 2 101 1 842 1 267 1 781 2 268 1 
84 3 646 1 765 1 245 1 1 1 572 1 394 1 820 1 301 1 111 1 170 1 305 1 582 1 473 1 32 1 273 1 174 1 274 1 536 1 115 1 822 1 772 1 10 1 424 2 310 1 180 1 454 1 456 1 334 1 121 1 336 1 384 1 662 1 184 1 20 1 152 1 830 1 832 1 808 1 462 1 49 1 517 1 434 1 126 1 342 1 127 1 837 1 79 3 490 2 812 1 838 1 242 6 24 1 639 1 815 1 730 1 194 1 757 1 196 1 101 1 842 1 699 1 267 1 268 1 781 2 782 1 
131 1 84 4 765 1 245 1 1 1 572 1 768 1 820 1 301 1 624 1 111 1 170 1 328 1 305 1 582 1 32 1 273 1 174 1 536 1 115 1 772 1 10 1 424 2 310 1 454 2 211 1 456 1 334 1 121 1 336 1 384 1 20 1 152 1 45 1 830 1 693 1 832 1 808 2 462 1 49 1 517 2 434 1 126 1 342 2 837 1 79 3 490 4 812 1 838 1 242 5 24 1 639 1 815 1 730 1 194 2 757 1 101 1 196 2 842 1 699 1 267 1 268 1 781 2 782 1 
768 1 582 1 8 1 10 1 424 1 310 1 121 2 20 1 429 1 95 1 830 1 832 1 433 1 517 2 435 1 490 3 812 2 242 2 639 1 757 1 699 2 267 1 268 1 781 1 843 1 
768 1 582 1 8 1 822 1 10 1 424 1 310 1 537 1 121 2 20 1 429 1 830 1 832 1 517 2 435 1 490 3 812 2 242 2 639 1 757 1 699 2 267 1 268 1 781 1 843 1 
768 1 582 1 8 1 10 1 424 1 310 1 121 2 20 1 429 1 830 1 45 1 693 1 832 1 517 2 435 1 490 3 812 2 242 2 639 1 757 1 699 2 267 1 268 1 781 1 843 1 
408 1 313 1 66 1 445 1 684 1 1 1 283 1 730 1 178 1 73 1 507 1 390 1 74 1 376 1 
1 1 429 1 435 1 774 2 257 1 673 3 368 1 169 1 470 1 699 1 500 1 843 1 
74 1 
1 1 730 1 
66 1 1 1 730 1 
1 1 
695 1 192 1 404 1 618 1 842 3 37 1 625 1 502 1 
131 1 84 4 765 1 764 1 392 1 416 1 708 1 245 1 271 2 818 1 572 1 86 2 448 1 678 1 820 1 577 1 304 1 170 1 502 1 400 1 378 1 472 1 329 2 142 1 536 1 423 1 115 1 629 1 772 1 250 1 179 2 276 1 37 1 90 1 454 2 209 1 657 2 586 1 211 3 210 1 563 1 384 1 148 1 213 1 404 1 428 1 284 1 515 1 22 1 338 1 830 1 156 1 831 1 724 1 808 2 49 1 188 2 669 2 695 1 159 1 342 2 192 1 490 1 838 1 242 6 411 1 100 1 815 1 194 1 196 1 101 1 618 1 164 1 842 4 346 2 597 1 440 1 
416 1 370 1 577 1 626 1 471 1 378 1 232 1 800 1 586 1 14 1 335 1 806 1 72 1 22 1 339 1 808 1 635 1 490 1 242 5 596 1 760 1 705 1 497 1 764 1 603 1 552 1 303 1 29 1 400 1 454 1 357 5 259 2 830 1 778 1 159 1 522 1 615 1 162 1 616 1 842 1 164 1 524 1 467 1 
259 1 842 1 830 1 242 1 467 1 603 1 616 1 
145 1 224 1 501 1 
145 1 829 1 596 2 224 1 501 1 357 1 
232 1 357 5 596 1 842 1 524 1 303 1 778 1 14 1 467 1 
323 1 107 2 223 2 621 2 110 1 111 1 329 2 330 1 233 2 536 1 423 3 115 1 629 1 424 3 741 1 119 1 539 3 16 1 336 1 745 1 747 1 428 1 337 1 19 2 21 1 634 1 541 2 340 2 752 1 544 1 432 1 635 1 342 4 547 1 242 23 24 1 639 1 347 1 439 1 440 3 130 1 26 1 131 1 764 2 765 2 245 1 767 1 136 1 448 5 138 1 31 1 352 1 33 1 354 1 140 1 771 1 142 1 772 1 250 1 251 1 451 1 37 1 454 4 254 3 456 3 148 1 663 1 150 1 664 1 777 1 665 1 259 1 258 1 261 1 156 1 49 1 669 1 361 1 53 1 160 1 161 1 162 1 164 1 56 1 781 3 782 1 363 1 677 1 59 1 270 1 369 3 271 2 572 1 678 1 373 1 679 1 577 2 170 1 582 1 65 1 273 1 179 2 276 1 380 1 480 2 384 5 280 1 483 3 386 2 71 1 284 1 285 1 186 2 808 4 188 6 695 1 189 1 592 2 192 1 490 2 80 1 815 1 194 2 196 2 597 2 198 1 84 19 706 1 392 4 708 4 818 1 85 1 86 6 709 1 499 1 300 1 820 1 301 1 304 1 502 1 400 2 204 1 88 1 503 1 401 3 715 1 208 1 90 1 717 1 209 1 91 1 211 6 402 1 403 1 213 1 404 1 405 1 609 1 216 1 96 1 830 1 831 3 833 1 218 1 409 2 837 1 836 1 219 1 319 2 728 1 838 6 411 2 615 1 100 3 101 1 618 1 103 1 842 7 222 1 413 1 
223 1 572 1 789 1 678 1 372 1 577 1 111 1 170 1 582 1 535 1 330 1 114 1 273 1 536 1 423 4 115 1 585 1 276 1 332 1 336 1 384 5 749 1 281 2 428 1 186 3 75 1 808 2 342 3 242 9 24 1 548 1 639 1 344 1 815 1 194 1 196 1 437 1 347 1 441 1 84 12 442 2 765 1 764 1 245 1 551 2 86 4 448 2 499 1 300 1 820 1 301 1 247 2 304 4 400 1 33 1 143 1 309 2 772 1 823 2 250 1 251 1 90 1 454 2 659 1 508 1 211 4 509 1 455 1 148 4 513 1 514 1 664 1 259 1 262 2 156 4 833 1 49 1 669 4 266 2 409 1 837 1 838 4 160 1 411 4 162 1 101 1 842 1 103 1 731 1 672 1 782 1 58 2 734 1 166 2 
223 1 572 1 789 1 678 2 577 3 111 1 170 1 582 1 535 1 330 1 114 1 273 1 536 1 423 4 115 1 585 1 276 2 332 1 16 1 336 1 384 5 749 1 281 2 428 2 186 3 75 1 808 4 188 2 342 7 813 1 242 14 24 1 548 1 639 1 344 1 815 1 194 1 196 1 437 1 347 1 441 1 84 16 131 4 764 3 765 1 245 1 551 2 86 4 448 2 499 1 300 1 820 1 301 1 304 8 400 3 30 1 33 1 715 1 142 4 143 1 309 2 772 1 823 2 250 2 251 1 90 2 454 4 508 1 211 8 509 1 455 1 148 8 513 1 664 1 259 1 830 2 262 2 156 8 833 1 49 1 669 8 266 2 409 1 837 1 838 4 160 1 411 6 162 1 101 1 164 1 103 1 842 1 731 1 672 1 782 1 58 2 734 1 166 2 222 1 
84 10 131 4 570 1 223 1 764 3 765 1 245 1 572 1 86 4 448 2 678 2 499 1 300 1 199 1 820 1 301 1 577 3 111 1 418 2 304 6 30 1 400 3 170 1 582 1 535 1 330 1 33 1 273 1 142 4 143 1 536 1 423 4 115 1 772 1 585 1 250 2 251 1 276 2 332 1 90 2 454 4 211 6 336 1 384 5 148 6 513 1 428 2 42 1 259 1 830 2 156 6 186 1 808 4 833 1 49 1 188 2 669 6 342 7 409 1 837 1 838 4 160 1 813 1 242 12 24 1 411 4 639 1 162 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 700 2 437 1 782 1 347 1 58 2 441 1 
84 6 570 1 223 1 764 1 765 1 245 1 572 1 86 4 448 2 678 1 499 1 300 1 199 1 820 1 301 1 577 1 111 1 418 2 113 2 304 2 400 1 170 1 582 1 535 1 33 1 330 1 273 1 143 1 536 1 423 4 115 1 505 1 772 1 585 1 250 1 251 1 276 1 332 1 90 1 454 2 211 2 336 1 384 5 148 2 183 1 513 1 428 1 42 1 259 1 156 2 186 1 808 2 833 1 49 1 188 2 669 2 342 3 409 1 837 1 838 4 160 1 242 8 24 1 411 2 639 1 162 1 815 1 194 1 101 1 196 1 731 1 842 1 700 2 437 1 782 1 347 1 58 2 441 1 
84 12 131 4 223 1 764 3 765 1 245 1 572 1 86 4 448 2 678 2 499 1 300 1 820 1 301 1 577 3 111 1 113 2 304 8 30 1 400 3 170 1 582 1 535 1 330 1 33 1 715 1 273 1 142 6 143 1 536 1 423 4 115 1 505 1 772 1 585 1 250 2 251 1 276 2 332 1 90 2 454 4 211 8 16 1 336 1 384 5 148 6 183 1 513 1 428 2 664 1 259 1 830 2 156 6 186 1 808 4 833 1 49 1 188 4 669 8 342 9 409 1 837 1 838 4 160 1 813 1 242 12 24 1 411 6 639 1 162 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 437 1 782 1 347 1 58 2 441 1 222 1 
84 4 442 2 223 1 765 1 245 1 572 1 86 2 448 2 499 1 372 1 300 1 820 1 301 1 247 2 111 1 170 1 582 1 535 1 330 1 33 1 273 1 143 1 536 1 423 2 115 1 772 1 585 1 251 1 332 1 454 1 336 1 384 3 513 1 514 1 664 1 259 1 186 1 808 1 833 1 49 1 342 1 409 1 837 1 811 1 838 2 160 1 242 4 24 1 639 1 162 1 815 1 194 1 196 1 101 1 842 1 731 1 437 1 347 1 782 1 58 2 441 1 
84 6 223 1 765 1 245 1 551 1 572 1 789 1 86 1 448 1 678 1 499 1 300 1 820 1 301 1 111 1 304 1 170 1 582 1 33 1 330 1 273 1 114 1 536 1 423 1 115 1 309 1 772 1 585 1 823 1 250 1 251 1 276 1 90 1 454 1 659 1 211 1 508 1 509 1 336 1 384 2 148 1 281 1 749 1 428 1 514 1 664 1 259 1 262 1 156 1 186 2 75 1 808 1 833 1 49 1 669 1 342 1 266 1 409 1 837 1 838 1 160 1 242 6 24 1 411 1 639 1 548 1 162 1 344 1 815 1 194 1 101 1 196 1 731 1 103 1 842 1 672 1 782 1 347 1 166 1 
84 3 570 1 223 1 765 1 245 1 572 1 86 1 448 1 499 1 199 1 300 1 820 1 301 1 111 1 418 1 170 1 582 1 330 1 33 1 273 1 536 1 423 1 115 1 772 1 585 1 251 1 454 1 336 1 384 2 42 1 259 1 186 1 808 1 833 1 49 1 342 1 409 1 837 1 838 1 160 1 242 3 24 1 639 1 162 1 815 1 194 1 196 1 101 1 842 1 731 1 700 1 347 1 782 1 
84 4 223 1 444 1 765 1 708 1 369 1 245 1 572 1 86 2 448 2 499 1 300 1 820 1 301 1 111 1 113 2 170 1 582 1 330 1 33 1 715 1 273 1 536 1 423 2 115 1 505 2 772 1 585 1 251 1 454 1 16 1 336 1 384 3 183 2 664 1 259 1 831 1 186 1 808 1 833 1 49 1 188 2 342 1 409 1 837 1 838 2 160 1 242 5 24 1 639 1 162 1 815 1 194 1 196 1 101 1 842 1 731 1 782 1 347 1 222 1 
84 3 223 1 765 1 245 1 572 1 86 1 678 1 448 1 499 1 300 1 820 1 301 1 111 1 304 1 170 1 582 1 330 1 33 1 715 1 273 1 536 1 423 1 115 1 772 1 585 1 250 1 251 1 276 1 90 1 454 1 16 1 336 1 384 2 148 1 428 1 664 1 259 1 156 1 186 1 808 1 833 1 49 1 188 1 669 1 342 1 409 1 837 1 838 1 160 1 242 3 24 1 639 1 162 1 815 1 194 1 196 1 101 1 842 1 731 1 782 1 347 1 222 1 
84 22 131 8 223 1 764 3 765 1 708 1 369 1 245 1 572 1 86 6 448 4 678 2 499 1 300 1 820 1 301 1 577 3 111 1 304 14 30 1 400 3 170 1 582 1 535 1 330 1 33 1 715 1 273 1 142 10 143 1 536 1 423 4 115 1 772 1 34 2 585 1 250 2 251 1 276 2 332 1 90 2 454 4 211 14 16 1 336 1 384 5 148 14 513 1 428 2 664 1 259 1 830 2 156 14 831 2 186 3 808 4 833 1 48 1 49 1 188 6 669 14 342 15 409 1 837 1 838 4 160 1 813 1 242 13 24 1 411 8 639 1 162 1 815 1 567 1 194 1 101 1 196 1 731 1 164 1 842 1 437 1 782 1 347 1 58 2 441 1 222 1 
84 20 131 8 223 1 764 3 765 1 245 1 572 1 86 6 448 4 678 2 499 3 300 1 820 1 301 1 577 3 111 1 304 14 30 1 400 3 170 1 582 1 535 1 33 1 330 2 715 1 273 1 142 10 143 1 536 1 423 4 115 1 772 1 585 1 250 2 251 2 276 2 332 1 90 2 454 4 211 14 16 1 336 1 384 5 148 14 513 1 428 2 664 1 259 2 830 2 156 14 186 1 808 4 833 1 49 1 188 6 669 14 342 15 409 1 837 1 838 4 160 1 813 1 242 12 24 1 411 8 639 1 162 2 815 1 194 1 101 1 196 1 731 1 164 1 842 1 437 1 782 1 347 2 58 2 441 1 222 1 
84 20 131 8 223 1 764 3 765 1 245 1 572 1 86 6 448 6 678 2 499 1 300 1 820 1 301 1 577 3 111 1 304 14 30 1 400 3 170 1 582 1 535 1 330 1 33 1 715 1 273 1 142 10 143 1 536 1 423 4 115 1 772 1 585 1 250 2 251 1 685 2 276 2 332 2 90 2 454 4 211 14 16 1 336 1 384 5 148 14 428 2 513 3 664 1 259 1 830 2 156 14 186 1 808 4 833 1 49 1 188 6 669 14 342 15 409 1 837 1 838 4 160 1 813 1 242 12 24 1 411 8 639 1 162 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 437 1 782 1 347 1 58 3 441 2 222 1 
84 20 131 8 223 1 764 3 765 1 245 1 572 1 86 6 448 6 678 2 499 1 300 1 820 1 301 1 577 3 111 1 304 14 30 1 400 3 170 1 582 1 535 2 330 1 33 1 715 1 273 1 142 10 143 2 536 1 423 4 115 1 772 1 585 1 250 2 251 1 685 2 276 2 332 1 90 2 454 4 211 14 16 1 336 1 384 5 148 14 428 2 513 3 664 1 259 1 830 2 156 14 186 1 808 4 833 1 49 1 188 6 669 14 342 15 409 1 837 1 838 4 160 1 813 1 242 12 24 1 411 8 639 1 162 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 437 1 782 1 347 1 58 3 441 1 222 1 
806 1 490 1 764 2 813 1 242 5 428 1 522 1 250 1 678 1 800 1 164 1 276 1 830 2 90 1 454 2 577 2 626 1 808 2 30 1 400 2 
84 3 223 1 444 1 765 1 708 1 369 1 245 1 572 1 86 1 448 1 300 1 820 1 301 1 111 1 113 1 170 1 582 1 33 1 715 1 273 1 536 1 423 1 115 1 505 2 772 1 585 1 454 1 16 1 336 1 384 2 183 2 664 1 831 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 1 160 1 242 4 24 1 639 1 815 1 194 1 196 1 101 1 842 1 731 1 782 1 222 1 
323 1 107 2 223 2 529 1 621 1 110 1 111 1 329 2 233 1 536 1 423 3 115 1 629 1 424 2 741 1 539 2 16 1 745 1 336 1 747 1 428 1 337 1 19 2 634 1 541 2 340 1 752 1 124 1 432 1 635 1 638 1 342 4 547 1 242 19 24 1 639 1 641 1 439 1 440 3 130 1 26 1 131 1 132 1 443 1 764 2 765 2 245 1 767 1 136 1 448 5 138 1 31 1 352 1 33 1 354 1 140 1 771 1 142 1 772 1 250 1 37 1 454 4 254 1 456 2 563 1 148 1 663 1 777 1 664 1 258 1 156 1 360 1 49 1 669 1 361 1 53 1 160 1 161 1 164 1 781 2 782 1 363 1 677 1 59 1 788 1 369 3 271 2 572 1 678 1 577 2 792 1 170 1 172 1 582 1 65 1 273 1 179 2 800 1 276 1 480 1 806 2 384 5 280 1 483 1 386 2 71 1 284 1 186 1 808 4 188 6 695 1 189 1 592 1 192 1 490 5 80 1 815 1 194 2 196 2 597 2 294 1 198 1 84 17 706 1 392 4 708 5 818 1 85 1 86 6 709 1 300 1 820 1 301 1 304 1 502 1 400 2 204 1 88 1 503 1 401 3 715 1 208 1 90 1 717 1 209 1 91 1 718 1 211 5 402 1 213 2 404 1 405 1 216 1 96 1 516 1 830 1 831 4 833 1 218 1 409 2 836 1 837 1 219 1 319 1 728 1 838 6 615 1 100 3 101 1 618 1 103 1 842 7 222 1 413 1 
563 1 131 1 84 2 719 1 765 1 368 1 245 1 572 1 338 1 820 1 830 1 808 1 49 1 170 1 669 1 472 1 342 1 536 1 242 3 115 1 772 1 815 1 506 1 194 1 465 1 101 1 196 1 655 1 842 1 293 1 673 1 454 1 211 2 25 1 
84 2 719 1 336 1 384 1 765 1 368 1 245 1 572 1 820 1 301 1 111 1 808 1 462 1 49 1 170 1 342 1 33 1 837 1 273 1 79 2 838 1 536 1 242 2 24 1 115 1 772 1 815 1 585 1 506 1 194 1 465 1 101 1 196 1 655 1 842 1 673 1 782 1 454 1 25 1 
563 1 131 1 84 3 765 1 416 1 245 1 572 1 515 1 22 1 338 2 820 1 830 1 724 1 808 2 49 1 170 1 669 1 378 1 159 1 472 1 342 2 32 1 536 1 242 4 115 1 772 1 100 1 815 1 194 2 196 2 101 1 842 1 440 1 454 2 586 1 211 3 210 1 
84 8 131 2 223 1 571 1 764 1 765 2 245 2 572 2 86 1 447 1 678 1 300 1 200 1 820 2 301 1 624 1 577 1 111 1 304 2 400 1 170 2 420 1 582 1 472 1 353 1 715 1 273 1 142 2 536 2 423 1 115 2 772 2 585 1 250 1 36 1 276 1 90 1 454 4 478 2 211 6 563 1 16 1 336 1 384 2 148 2 428 1 664 1 338 1 460 1 430 1 830 1 156 2 808 4 833 1 49 2 188 1 669 3 342 6 409 1 837 1 838 1 160 1 813 1 242 6 24 1 411 2 639 1 815 2 194 2 101 2 196 2 731 1 164 1 842 2 83 2 782 1 222 1 
84 6 223 1 765 2 245 2 572 2 86 1 678 1 300 1 373 1 820 2 200 1 301 1 111 1 304 2 170 2 582 1 472 1 715 1 273 1 536 2 423 1 115 2 772 2 35 1 585 1 250 1 451 1 276 1 90 1 454 2 211 4 563 1 16 1 336 1 384 2 403 1 148 2 428 1 664 1 665 2 338 1 123 1 544 1 156 2 157 1 808 2 833 1 49 2 188 1 669 3 342 2 409 1 837 1 838 1 160 1 242 4 24 1 411 2 639 1 815 2 194 2 196 2 101 2 731 1 842 2 782 1 222 1 
563 1 84 2 131 1 765 1 245 1 572 1 338 1 820 1 808 1 49 1 170 1 669 1 472 1 342 1 536 1 242 1 115 1 772 1 815 1 194 1 196 1 101 1 103 1 842 1 454 1 211 2 
0 1 442 1 84 2 223 1 765 1 245 1 572 1 86 1 372 1 300 1 200 1 820 1 301 1 247 1 111 1 170 1 582 1 273 1 536 1 423 1 115 1 772 1 585 1 454 1 336 1 384 2 514 1 664 1 808 1 833 1 49 1 342 1 409 1 837 1 811 1 838 1 160 1 242 1 24 1 639 1 815 1 194 1 101 1 196 1 842 1 731 1 782 1 
84 5 131 2 764 2 765 1 416 1 245 1 572 1 678 1 820 1 577 2 304 2 580 1 400 2 170 1 378 1 472 1 142 3 536 1 115 1 772 1 250 1 117 1 276 1 90 1 454 4 586 1 211 5 210 1 563 1 148 2 428 1 515 1 22 1 338 2 830 1 156 2 724 1 808 4 49 1 669 3 159 1 342 4 813 1 242 7 411 2 815 1 100 1 194 2 196 2 101 1 164 1 842 1 440 1 
84 4 244 1 223 1 765 2 245 2 572 2 86 1 300 1 201 1 820 2 301 1 111 1 170 2 582 1 33 1 273 1 715 1 536 2 423 1 115 2 772 2 585 1 454 2 211 2 826 1 563 2 16 1 336 1 384 2 664 1 338 1 808 2 833 1 49 2 188 1 669 2 342 2 409 1 837 1 838 1 160 1 242 3 24 1 639 1 815 2 194 2 101 2 196 2 842 2 731 1 782 1 222 1 
84 2 765 1 108 1 245 1 572 1 398 1 820 1 576 1 170 1 472 1 536 1 115 1 772 1 146 1 454 1 211 2 563 1 335 1 338 1 808 1 49 1 669 1 342 1 242 2 436 1 815 1 194 1 196 1 101 1 842 1 
84 6 223 1 764 1 765 2 245 2 572 2 86 1 678 1 300 1 820 2 200 1 301 1 577 1 624 1 111 1 304 2 170 2 582 1 472 1 715 1 273 1 142 1 536 2 423 1 115 2 772 2 585 1 250 1 276 1 90 1 454 3 211 4 563 1 16 1 336 1 384 2 148 2 428 1 664 1 338 1 156 2 808 3 833 1 49 2 188 1 669 3 342 4 409 1 837 1 838 1 160 1 242 4 410 1 24 1 411 2 639 1 815 2 194 2 196 2 101 2 731 1 842 2 782 1 222 1 
84 6 223 1 765 2 245 2 572 2 86 1 678 1 300 1 373 1 820 2 200 1 301 1 111 1 304 2 170 2 582 1 472 1 715 1 273 1 536 2 423 1 115 2 772 2 35 1 585 1 250 1 451 1 276 1 90 1 454 2 211 4 563 1 16 1 336 1 384 2 403 1 148 2 428 1 664 1 665 2 338 1 123 1 544 1 156 2 157 1 808 2 833 1 49 2 188 1 669 3 342 2 409 1 837 1 838 1 160 1 242 4 24 1 411 2 639 1 815 2 194 2 196 2 101 2 731 1 842 2 782 1 222 1 
84 6 223 1 765 2 245 2 572 2 86 1 678 1 300 1 820 2 200 1 301 1 111 1 229 1 304 2 170 2 582 1 472 1 650 1 715 1 273 1 536 2 423 1 115 2 772 2 585 1 250 1 276 1 90 1 380 1 454 2 211 4 563 1 16 1 336 1 182 1 384 2 148 2 428 1 664 1 609 1 285 1 261 2 338 1 156 2 808 2 833 1 49 2 188 1 669 3 342 2 409 1 837 1 838 1 160 1 242 4 24 1 411 2 639 1 815 2 194 2 196 2 101 2 731 1 842 2 56 1 782 1 222 1 
84 6 223 1 765 2 245 2 572 2 349 1 86 1 678 1 819 1 300 1 820 2 200 1 301 1 111 1 304 2 170 2 582 1 472 1 715 1 273 1 536 2 423 1 115 2 772 2 585 1 250 1 276 1 90 1 454 2 587 1 211 4 776 1 563 1 16 1 336 1 384 2 148 2 428 1 664 1 489 1 338 1 156 2 808 2 833 1 49 2 188 1 669 3 342 2 755 2 409 1 837 1 838 1 160 1 241 1 242 4 24 1 411 2 639 1 815 2 194 2 163 1 196 2 101 2 731 1 842 2 782 1 222 1 
84 6 223 1 646 1 765 2 245 2 572 2 394 1 86 1 678 1 300 1 820 2 200 1 301 1 228 2 111 1 304 2 170 2 582 1 472 1 473 1 715 1 273 1 536 2 423 1 115 2 772 2 585 1 250 1 180 1 276 1 90 1 454 2 211 2 563 1 16 1 336 1 384 2 148 2 690 1 428 1 664 1 338 1 156 2 808 2 833 1 49 2 188 1 669 3 127 1 342 2 409 1 837 1 838 1 160 1 242 4 24 1 411 2 639 1 815 2 194 2 196 2 101 2 731 1 842 2 782 1 222 1 
563 1 84 2 646 1 765 1 245 1 690 1 572 1 338 1 820 1 228 1 808 1 49 1 170 1 669 1 472 1 342 1 473 1 536 1 242 2 115 1 772 1 815 1 194 1 101 1 196 1 842 1 454 1 211 2 
563 1 84 3 148 1 646 1 765 1 245 1 572 1 690 1 428 1 678 1 338 1 820 1 156 1 228 1 304 1 808 1 49 1 170 1 669 2 472 1 342 1 473 1 536 1 242 3 411 1 115 1 772 1 815 1 194 1 250 1 101 1 196 1 842 1 276 1 90 1 454 1 211 2 
84 8 131 2 223 1 571 1 764 1 765 2 245 2 572 2 86 1 447 1 678 1 300 1 200 1 820 2 301 1 624 1 577 1 111 1 304 2 400 1 170 2 420 1 582 1 472 1 353 1 715 1 273 1 142 2 536 2 423 1 115 2 772 2 585 1 250 1 36 1 276 1 90 1 454 4 478 2 211 6 563 1 16 1 336 1 384 2 148 2 428 1 664 1 338 1 460 1 430 1 830 1 156 2 808 4 833 1 49 2 188 1 669 3 342 6 409 1 837 1 838 1 160 1 813 1 242 6 24 1 411 2 639 1 815 2 194 2 101 2 196 2 731 1 164 1 842 2 83 2 782 1 598 1 222 1 
131 2 84 8 223 1 764 1 765 2 245 2 572 2 86 1 446 1 447 2 678 1 300 1 200 1 820 2 301 1 577 1 111 1 648 1 304 2 400 1 170 2 582 1 472 1 715 1 273 1 142 2 536 2 423 1 115 2 772 2 585 1 250 1 379 1 276 1 686 1 90 1 454 3 211 6 563 1 16 1 336 1 384 2 147 1 403 1 148 2 428 1 664 1 665 2 338 1 123 1 430 1 830 1 544 1 156 2 808 3 833 1 49 2 188 1 669 3 342 4 409 1 837 1 838 1 160 1 813 1 242 6 24 1 411 2 639 1 320 1 815 2 194 2 101 2 196 2 698 2 731 1 164 1 842 2 83 2 782 1 222 1 221 2 
131 2 84 8 223 1 764 1 765 2 245 2 572 2 86 1 446 1 447 3 678 1 300 1 326 1 200 1 820 2 301 1 577 1 111 1 735 1 229 1 304 2 63 2 400 1 170 2 582 1 472 1 715 1 273 1 142 2 536 2 423 1 115 2 772 2 585 1 250 1 311 1 276 1 380 1 90 1 454 3 333 1 211 6 563 1 16 1 336 1 384 2 148 2 428 1 664 1 609 1 338 1 261 2 185 1 430 1 830 1 156 2 264 1 808 3 833 1 49 2 188 1 669 3 342 4 409 1 837 1 613 2 838 1 160 1 813 1 242 6 24 1 411 2 639 1 815 2 194 2 101 2 196 2 731 1 164 1 842 2 83 2 782 1 222 1 221 2 
223 1 572 2 678 1 577 1 735 1 111 1 170 2 472 1 582 1 273 1 536 2 423 1 115 2 585 1 276 1 336 1 16 1 384 2 428 1 338 1 430 1 808 3 188 1 755 2 342 4 813 1 241 1 242 6 24 1 639 1 815 2 194 2 196 2 83 2 599 2 494 1 84 8 131 2 765 2 764 1 245 2 349 1 86 1 446 1 447 4 300 1 820 2 200 1 301 1 302 1 304 2 649 2 400 1 715 1 142 2 772 2 250 1 207 1 90 1 454 3 211 6 776 1 563 1 148 2 564 1 664 1 358 1 830 1 156 2 833 1 49 2 669 3 409 1 613 2 837 1 838 1 160 1 411 2 101 2 842 2 164 1 731 1 782 1 676 1 221 2 222 1 
84 2 764 1 765 1 245 1 572 1 678 1 820 1 301 1 577 1 111 1 579 1 400 1 170 1 273 1 274 1 536 1 115 1 772 1 250 1 276 1 90 1 454 2 336 1 384 1 662 1 184 1 428 1 830 1 808 2 49 1 462 1 342 1 837 1 79 2 838 1 813 1 242 5 24 1 815 1 194 1 101 1 196 1 164 1 842 1 782 1 
84 8 131 2 223 1 764 1 765 2 245 2 572 2 394 1 86 1 678 1 300 1 200 1 820 2 301 1 577 1 111 1 304 2 230 1 400 1 170 2 582 3 715 1 273 1 142 2 536 2 423 1 115 2 772 2 585 1 250 1 118 1 180 1 276 1 90 1 454 3 211 6 563 1 16 1 336 1 384 2 148 2 428 1 664 1 488 2 338 1 830 1 156 2 187 1 808 3 833 1 49 2 188 1 669 3 342 4 409 1 837 1 838 1 160 1 813 1 242 6 24 1 411 2 639 3 815 2 194 2 101 2 196 2 731 1 164 1 842 2 782 1 222 1 
84 2 223 1 570 1 765 1 245 1 572 1 86 1 199 1 300 1 820 1 301 1 111 1 418 1 170 1 582 1 33 1 273 1 536 1 423 1 115 1 772 1 585 1 454 1 336 1 384 2 151 1 42 1 808 1 833 1 49 1 342 1 409 1 837 1 838 1 160 1 242 2 24 1 639 1 815 1 194 1 101 1 196 1 842 1 731 1 700 1 782 1 
372 2 213 1 
259 1 830 1 213 1 242 1 
131 3 84 10 223 1 764 3 765 2 708 1 369 1 245 2 572 2 86 2 448 1 678 2 300 1 200 1 820 2 301 1 577 3 111 1 304 3 30 1 400 3 170 2 582 1 472 1 715 1 273 1 142 3 536 2 423 2 115 2 772 2 585 1 250 2 276 2 90 2 454 5 211 6 563 1 16 1 336 1 384 3 148 3 428 2 664 1 338 1 722 1 830 3 831 2 156 3 808 5 833 1 49 2 188 2 669 4 342 6 409 1 837 1 838 2 160 1 813 2 242 11 24 1 411 2 639 1 815 2 194 2 101 2 196 2 731 1 164 2 842 2 782 1 222 1 
131 3 84 10 223 1 764 3 765 2 708 1 245 2 572 2 86 2 448 1 678 2 300 1 200 1 820 2 301 1 577 3 111 1 304 3 30 1 400 3 170 2 582 1 472 1 715 1 273 1 142 3 536 2 144 1 423 2 115 2 772 2 585 1 250 2 276 2 90 2 454 5 211 6 563 1 16 1 336 1 384 3 148 2 428 2 664 1 338 1 722 1 830 3 831 2 156 2 808 5 833 1 49 2 188 2 669 4 342 6 409 1 837 1 838 2 160 1 813 2 242 11 24 1 411 2 639 1 815 2 194 2 101 2 196 2 731 1 164 2 842 2 782 1 222 1 
372 2 162 1 
259 1 830 1 242 1 162 1 
131 6 84 13 223 1 764 3 765 2 245 2 572 2 394 1 86 3 448 2 678 2 499 2 300 1 200 1 820 2 301 1 577 3 111 1 304 6 30 1 400 3 170 2 582 1 472 1 330 1 715 1 273 1 142 6 536 2 423 3 115 2 772 2 585 1 250 2 251 2 180 1 276 2 90 2 454 5 211 9 563 1 16 1 336 1 384 4 148 5 428 2 664 1 406 1 259 1 338 1 830 3 156 5 186 1 808 5 833 1 49 2 188 3 669 7 342 9 409 1 837 1 838 3 160 1 813 2 242 12 24 1 411 4 639 1 193 1 162 2 815 2 194 2 101 2 196 2 731 1 164 2 842 2 782 1 347 1 222 1 
131 6 84 13 223 1 764 3 765 2 245 2 572 2 86 3 448 2 678 2 499 2 300 1 200 1 820 2 301 1 577 3 111 1 304 6 30 1 400 3 170 2 582 1 472 1 330 1 715 1 273 1 142 6 536 2 423 3 115 2 772 2 585 1 250 2 251 1 276 2 90 2 454 5 211 9 563 1 16 1 336 1 384 4 148 5 428 2 664 1 259 1 338 1 830 3 156 5 186 1 808 5 833 1 49 2 188 3 669 7 342 9 409 1 837 1 838 3 160 1 813 2 242 11 24 1 411 4 639 1 193 1 162 1 815 2 194 2 101 2 196 2 731 1 164 2 842 2 782 1 347 1 222 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 577 3 304 3 30 1 400 3 170 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 259 1 338 1 830 3 156 2 808 4 809 1 49 1 188 2 669 4 342 4 838 2 813 2 242 10 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 347 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 575 1 577 3 304 3 30 1 400 3 170 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 259 1 338 1 830 3 156 2 808 4 49 1 188 2 669 4 342 4 838 2 813 2 242 10 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 347 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 577 3 304 3 30 1 400 3 170 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 259 1 338 1 830 3 156 2 808 4 49 1 188 2 669 4 342 4 838 2 813 2 242 10 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 347 1 105 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 577 3 304 3 30 1 400 3 170 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 259 1 338 1 830 3 156 2 808 4 49 1 188 2 669 4 342 4 838 2 813 2 242 10 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 347 1 674 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 577 3 304 3 30 1 400 3 170 1 231 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 259 1 338 1 830 3 156 2 808 4 49 1 188 2 669 4 342 4 838 2 813 2 242 10 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 347 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 577 3 304 3 30 1 400 3 170 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 259 1 338 1 830 3 156 2 808 4 49 1 188 2 669 4 342 4 838 2 813 2 242 10 729 1 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 347 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 791 1 577 3 304 3 30 1 400 3 170 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 259 1 338 1 830 3 156 2 808 4 49 1 188 2 669 4 342 4 838 2 813 2 242 10 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 347 1 
131 3 84 6 764 3 765 1 245 1 572 1 86 2 448 1 678 2 499 1 820 1 577 3 304 3 30 1 400 3 170 1 472 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 276 2 90 2 454 4 211 5 563 1 384 2 148 2 428 2 338 1 830 3 156 2 808 4 49 1 188 2 669 4 342 4 838 2 813 2 242 10 411 2 193 1 162 1 815 1 194 1 101 1 196 1 164 2 842 1 
84 12 131 8 645 1 764 3 765 1 245 1 572 1 678 2 448 1 820 1 577 3 304 8 30 1 400 3 170 1 605 1 472 1 142 8 536 1 115 1 772 1 250 2 685 1 276 2 332 1 90 2 454 4 211 10 563 1 383 1 148 8 428 2 513 1 338 1 830 3 156 8 808 4 49 1 669 9 342 9 813 2 242 10 411 8 815 1 194 1 101 1 196 1 164 2 842 1 58 1 441 1 
84 13 131 8 764 3 765 1 245 1 572 1 678 3 448 1 820 1 577 3 304 9 30 1 400 3 170 1 605 1 472 1 535 1 9 1 142 8 536 1 143 1 115 1 772 1 250 3 685 1 276 3 90 3 454 5 211 11 563 1 277 1 148 9 428 3 513 1 338 2 830 3 156 9 808 5 49 1 669 10 342 10 813 2 242 12 411 9 815 1 194 2 101 1 196 2 164 2 842 1 58 1 
372 2 441 1 
259 1 830 1 242 1 441 1 
84 12 131 8 645 1 764 3 765 1 245 1 572 1 394 1 86 1 678 2 448 1 820 1 577 3 304 8 6 1 30 1 400 3 170 1 605 1 472 1 142 8 536 1 423 1 115 1 772 1 250 2 180 1 685 1 276 2 90 2 454 4 211 10 563 1 383 1 384 1 148 8 428 2 513 1 338 1 830 3 156 8 808 4 49 1 188 1 669 9 342 9 838 1 813 2 242 11 411 8 815 1 194 1 101 1 196 1 164 2 842 1 58 2 441 2 
535 1 372 2 
259 1 535 1 830 1 242 1 
84 13 131 8 764 3 765 1 245 1 572 1 394 1 678 3 448 1 820 1 577 3 304 9 30 1 400 3 170 1 605 1 472 1 535 2 9 1 142 8 536 1 115 1 772 1 250 3 180 1 685 1 276 3 90 3 454 5 211 11 563 1 277 1 148 9 428 3 513 1 338 2 830 3 156 9 808 5 49 1 669 10 342 10 813 2 242 13 411 9 289 1 815 1 194 2 101 1 196 2 164 2 842 1 58 2 
84 2 223 1 765 1 245 1 572 1 86 1 300 1 820 1 301 1 111 1 113 1 170 1 582 1 33 1 273 1 715 1 536 1 423 1 115 1 505 1 772 1 585 1 454 1 336 1 16 1 384 2 183 1 664 1 461 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 1 160 1 242 2 24 1 639 1 815 1 194 1 101 1 196 1 842 1 731 1 782 1 222 1 
84 2 223 1 765 1 245 1 572 1 86 1 300 1 820 1 301 1 111 1 170 1 582 1 33 1 273 1 536 1 423 1 115 1 773 1 772 1 585 1 823 1 454 1 659 1 336 1 384 2 749 1 514 1 664 1 808 1 833 1 49 1 342 1 409 1 837 1 838 1 160 1 242 2 24 1 639 1 815 1 194 1 101 1 196 1 842 1 731 1 672 1 782 1 166 1 
572 1 678 1 577 1 624 1 170 1 472 1 536 1 115 1 276 1 335 1 428 1 338 1 808 3 342 3 813 1 242 5 815 1 194 1 196 1 84 4 131 1 764 1 765 1 245 1 820 1 304 1 400 1 142 1 772 1 250 1 90 1 454 3 211 4 563 1 148 1 830 1 156 1 49 1 669 2 411 1 101 1 164 1 842 1 
131 1 84 4 223 1 764 1 765 1 245 1 572 1 86 1 678 1 300 1 200 1 820 1 301 1 577 1 111 1 304 1 400 1 170 1 582 1 715 1 273 1 142 1 536 1 423 1 115 1 772 1 585 1 250 1 276 1 90 1 454 3 211 2 335 1 16 1 336 1 384 2 148 1 428 1 664 1 830 1 156 1 808 3 833 1 49 1 188 1 669 1 342 3 409 1 837 1 838 1 160 1 813 1 242 5 24 1 411 1 639 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 782 1 222 1 
572 1 678 1 577 1 170 1 472 1 536 1 115 1 276 1 335 1 428 1 338 1 123 1 544 1 808 2 342 2 813 1 242 5 815 1 194 1 196 1 84 4 131 1 764 1 765 1 245 1 820 1 304 1 400 1 142 1 772 1 250 1 90 1 454 2 211 4 563 1 403 1 148 1 665 1 830 1 156 1 49 1 669 2 411 1 101 1 164 1 842 1 
131 1 84 4 223 1 764 1 765 1 245 1 572 1 86 1 678 1 300 1 200 1 820 1 301 1 577 1 111 1 304 1 400 1 170 1 582 1 715 1 273 1 142 1 536 1 423 1 115 1 772 1 585 1 250 1 276 1 90 1 454 2 211 2 335 1 16 1 336 1 384 2 403 1 148 1 428 1 664 1 665 1 830 1 544 1 156 1 808 2 833 1 49 1 188 1 669 1 342 2 409 1 837 1 838 1 160 1 813 1 242 5 24 1 411 1 639 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 782 1 222 1 
572 1 678 1 577 1 229 1 170 1 472 1 536 1 115 1 276 1 380 1 335 1 428 1 338 1 808 2 342 2 813 1 242 5 815 1 194 1 196 1 84 4 131 1 764 1 765 1 245 1 820 1 304 1 400 1 142 1 772 1 250 1 90 1 454 2 211 4 563 1 148 1 609 1 261 1 830 1 156 1 49 1 669 2 411 1 101 1 164 1 842 1 
131 1 84 4 223 1 764 1 765 1 245 1 572 1 86 1 678 1 300 1 200 1 820 1 301 1 577 1 111 1 304 1 400 1 170 1 582 1 715 1 273 1 142 1 536 1 423 1 115 1 772 1 585 1 250 1 276 1 380 1 90 1 454 2 211 2 335 1 16 1 336 1 384 2 148 1 428 1 664 1 609 1 261 1 830 1 156 1 808 2 833 1 49 1 188 1 669 1 342 2 409 1 837 1 838 1 160 1 813 1 242 5 24 1 411 1 639 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 782 1 222 1 
572 1 678 1 577 1 170 1 472 1 536 1 115 1 276 1 335 1 428 1 338 1 808 2 342 2 755 1 813 1 241 1 242 5 815 1 194 1 196 1 84 4 131 1 764 1 765 1 245 1 349 1 820 1 304 1 400 1 142 1 772 1 250 1 90 1 454 2 211 4 776 1 563 1 148 1 830 1 156 1 49 1 669 2 411 1 101 1 164 1 842 1 
131 1 84 4 223 1 764 1 765 1 245 1 572 1 349 1 86 1 678 1 300 1 200 1 820 1 301 1 577 1 111 1 304 1 400 1 170 1 582 1 715 1 273 1 142 1 536 1 423 1 115 1 772 1 585 1 250 1 276 1 90 1 454 2 211 2 776 1 335 1 16 1 336 1 384 2 148 1 428 1 664 1 830 1 156 1 808 2 833 1 49 1 188 1 669 1 342 2 755 1 409 1 837 1 838 1 160 1 813 1 242 5 24 1 411 1 639 1 815 1 194 1 101 1 196 1 731 1 164 1 842 1 782 1 222 1 
223 1 529 1 788 1 572 1 792 1 111 1 170 1 582 1 472 1 273 1 233 1 536 1 115 1 424 1 800 1 741 1 335 1 806 2 336 1 384 1 483 1 808 2 638 1 342 1 811 1 490 3 242 7 24 1 80 1 639 1 815 1 194 2 196 2 641 1 294 1 131 1 84 5 132 1 443 1 765 1 245 1 85 1 300 1 820 1 301 1 203 1 772 1 454 2 718 1 254 1 456 1 514 1 664 1 258 1 216 1 516 1 830 1 833 1 49 1 409 1 837 1 160 1 101 1 731 1 842 2 781 1 782 1 
223 1 529 1 788 1 572 1 792 1 111 1 170 1 582 1 273 1 233 1 536 1 115 1 585 1 424 1 800 1 741 1 335 1 806 2 336 1 384 1 483 1 808 2 638 1 342 1 811 1 490 3 242 7 24 1 80 1 639 1 815 1 194 2 196 2 641 1 294 1 84 5 131 1 132 1 443 1 765 1 245 1 85 1 300 1 200 1 820 1 301 1 772 1 454 2 718 1 254 1 456 1 514 1 664 1 258 1 216 1 516 1 830 1 833 1 49 1 409 1 837 1 160 1 101 1 731 1 842 2 781 1 782 1 
131 1 84 5 132 1 223 1 443 1 765 1 529 1 788 1 245 1 572 1 85 1 300 1 820 1 301 1 792 1 111 1 203 1 170 1 582 1 472 1 273 1 233 1 536 1 115 1 772 1 424 1 800 1 741 1 454 2 718 1 456 1 254 1 806 2 336 1 384 1 427 1 483 1 514 1 664 1 258 1 216 1 516 1 543 1 830 1 808 2 833 1 49 1 638 1 342 1 409 1 837 1 811 1 490 3 160 1 242 7 24 1 80 1 639 1 815 1 194 2 196 2 101 1 731 1 842 2 641 1 781 1 782 1 294 1 845 1 
131 1 84 5 132 1 223 1 443 1 765 1 529 1 788 1 245 1 572 1 85 1 300 1 820 1 301 1 792 1 111 1 203 1 170 1 582 1 472 1 273 1 233 1 536 1 115 1 584 1 772 1 424 1 800 1 741 1 454 2 718 1 456 1 806 2 336 1 384 1 514 1 664 1 258 1 216 1 516 1 830 1 808 2 833 1 49 1 638 1 342 1 409 1 837 1 811 1 490 3 160 1 242 6 24 1 80 1 639 1 815 1 194 2 196 2 101 1 731 1 842 2 641 1 781 1 782 1 294 1 
84 4 131 1 764 2 765 1 245 1 572 1 678 1 820 1 577 2 304 1 170 1 400 2 472 1 142 2 536 1 115 1 772 1 250 1 276 1 90 1 454 3 211 4 563 1 384 1 148 1 428 1 338 1 830 1 156 1 808 3 49 1 669 2 637 1 342 3 756 1 838 1 813 1 242 5 411 1 815 1 194 1 196 1 101 1 164 1 842 1 
180 1 830 1 242 1 
180 1 318 1 842 1 830 1 242 1 
323 1 131 1 84 6 107 1 764 1 765 1 708 3 369 2 245 1 572 1 86 1 136 1 709 1 448 1 820 1 301 1 577 1 111 1 400 1 170 1 472 1 273 1 536 1 423 1 144 1 115 1 772 1 424 1 208 1 454 2 91 1 211 1 456 1 254 1 336 1 384 4 427 1 483 1 19 1 337 1 71 1 96 1 432 1 831 1 808 2 462 1 635 1 49 1 188 1 342 2 837 1 79 6 838 4 242 9 24 1 615 1 815 1 100 2 194 1 101 1 196 1 103 1 842 1 781 1 782 1 439 1 440 2 363 1 845 1 413 1 
764 2 678 1 577 2 626 1 471 1 400 2 250 1 800 1 276 1 90 1 454 2 335 1 806 1 428 1 830 2 808 2 490 1 813 1 242 5 522 1 164 2 
764 2 678 1 577 2 626 1 400 2 250 1 800 1 276 1 90 1 454 2 335 1 806 1 428 1 830 2 808 2 490 1 813 1 242 5 522 1 523 1 164 2 
84 6 131 2 107 1 764 2 765 1 245 1 572 1 350 1 709 2 678 1 820 1 577 2 304 2 377 1 400 2 170 1 472 1 142 3 536 1 115 1 772 1 250 1 117 1 276 1 90 1 454 4 211 6 563 1 456 1 384 2 148 2 428 1 19 1 338 2 830 1 156 2 724 1 808 4 49 1 669 3 342 4 838 2 813 1 242 6 411 2 697 2 815 1 100 1 194 2 101 1 196 2 164 1 842 1 440 1 
84 2 131 1 223 1 765 1 245 1 572 1 136 1 300 1 820 1 301 1 111 1 170 1 472 1 582 1 32 1 273 1 233 1 536 1 115 1 772 1 454 1 91 1 336 1 384 2 514 1 664 1 96 1 808 1 833 1 49 1 810 1 342 1 409 1 837 1 811 1 838 1 160 1 242 2 24 1 639 1 815 1 194 1 196 1 101 1 842 1 731 1 782 1 
131 3 84 12 107 2 223 3 765 5 245 5 572 5 86 3 350 1 709 4 300 3 820 5 301 3 111 3 377 1 170 5 582 3 33 1 715 3 273 3 536 2 423 3 115 5 772 5 585 3 454 5 824 1 211 7 456 2 563 4 16 3 336 3 384 10 385 2 19 2 664 3 338 2 724 1 808 5 833 3 49 5 188 3 669 4 342 5 409 3 837 3 838 7 160 3 243 2 343 1 242 5 24 3 697 3 639 3 100 2 815 5 194 5 101 5 196 5 842 5 731 3 440 2 782 3 222 3 
107 3 223 1 270 1 416 1 369 3 572 2 577 1 111 1 377 1 170 2 378 1 472 1 582 1 329 1 273 1 536 2 423 1 115 2 424 2 179 1 741 1 586 1 336 1 16 1 427 1 384 8 183 1 483 2 337 1 19 3 71 1 21 1 541 1 22 1 338 3 432 1 808 5 635 1 188 1 342 4 242 18 80 1 24 1 697 4 639 1 815 2 194 4 196 4 439 1 440 4 131 2 84 13 444 1 764 1 765 2 708 3 245 2 85 1 86 1 136 1 350 2 709 5 448 1 300 1 820 2 552 1 301 1 29 1 249 1 304 1 400 1 205 1 715 1 505 1 772 2 656 1 454 5 91 1 211 8 210 1 254 2 456 3 563 2 148 1 664 1 258 1 216 1 515 1 96 1 831 2 156 1 724 3 360 1 833 1 49 2 669 3 159 1 409 1 837 1 838 7 160 1 411 1 615 1 100 4 101 2 103 1 842 2 731 1 781 2 782 1 363 1 845 1 413 1 222 1 
107 1 572 1 377 1 170 1 472 1 536 1 115 1 335 1 384 2 19 1 71 1 338 1 808 1 635 1 342 1 242 2 697 1 815 1 194 1 196 1 440 1 131 1 84 5 765 1 245 1 709 2 350 1 138 1 820 1 772 1 454 1 658 1 211 3 563 1 456 1 724 1 49 1 669 1 838 2 615 1 100 1 101 1 842 1 
84 3 570 1 223 1 765 1 245 1 572 1 86 1 300 1 820 1 301 1 111 1 418 1 170 1 582 1 33 1 273 1 536 1 423 1 115 1 772 1 585 1 454 1 335 1 336 1 384 2 71 1 808 1 833 1 49 1 635 1 342 1 409 1 837 1 838 1 160 1 242 2 24 1 639 1 615 1 815 1 194 1 196 1 101 1 842 1 731 1 700 1 782 1 
107 1 570 1 223 1 572 1 111 1 418 1 377 1 170 1 582 1 273 1 536 1 423 1 115 1 585 1 335 1 336 1 384 4 19 1 71 1 808 1 635 1 342 1 242 2 24 1 639 1 697 2 815 1 194 1 196 1 700 1 440 1 84 5 765 1 245 1 86 1 709 2 350 1 300 1 138 1 820 1 301 1 33 1 772 1 454 1 211 1 456 1 724 1 833 1 49 1 409 1 837 1 838 3 160 1 615 1 100 1 101 1 731 1 842 1 782 1 
84 11 107 2 570 1 223 2 765 3 764 1 245 3 572 3 86 2 709 4 350 2 300 2 200 1 820 3 301 2 577 1 624 1 111 2 418 1 304 2 377 2 170 3 400 1 582 2 472 1 33 1 715 1 273 2 142 1 536 3 423 2 115 3 772 3 585 2 454 4 211 6 563 1 456 2 16 1 336 2 384 8 148 1 19 2 664 1 338 1 156 1 808 4 724 2 833 2 49 3 188 1 669 3 342 6 409 2 837 2 838 6 160 2 242 4 410 1 24 2 411 1 639 2 697 4 815 3 100 2 194 3 196 3 101 3 731 2 842 3 700 1 782 2 440 2 222 1 
84 6 131 1 570 1 223 1 765 2 764 1 245 2 572 2 86 1 300 1 820 2 301 1 577 1 111 1 418 1 304 1 170 2 400 1 582 1 472 1 33 1 273 1 142 1 536 2 423 1 115 2 772 2 585 1 454 3 211 3 563 1 336 1 384 2 148 1 338 1 830 1 156 1 808 3 833 1 49 2 669 2 342 4 409 1 837 1 838 1 160 1 242 4 24 1 411 1 639 1 815 2 194 2 196 2 101 2 842 2 164 1 731 1 700 1 782 1 
84 8 107 2 570 1 223 1 765 2 245 2 572 2 86 2 709 4 350 2 300 2 820 2 301 1 111 1 418 1 304 2 377 2 170 2 582 1 472 1 33 1 715 1 273 1 536 2 423 2 115 2 772 2 585 1 454 3 211 6 456 2 563 1 16 1 336 1 384 7 148 1 19 2 664 1 338 2 156 1 808 3 724 2 833 1 49 2 188 1 669 3 342 4 409 1 837 1 838 6 160 1 242 3 24 1 411 1 639 1 697 4 100 2 815 2 194 3 196 3 101 2 731 1 842 2 700 1 782 1 440 2 222 1 
107 3 570 1 223 1 529 1 788 1 572 2 789 1 792 1 111 1 418 1 377 3 170 2 472 1 582 1 273 1 114 1 536 2 423 2 115 2 585 1 800 1 806 2 336 1 384 9 749 1 281 1 19 3 338 3 186 1 75 1 808 4 188 1 342 5 638 1 490 3 242 8 24 1 697 6 548 1 639 1 344 1 815 2 194 4 196 4 700 1 641 1 440 3 294 1 84 20 131 2 132 1 391 1 443 1 765 2 245 2 551 3 86 3 350 3 709 6 448 2 300 2 820 2 301 1 304 4 32 1 33 1 309 3 772 2 823 1 454 4 659 1 508 1 211 9 718 1 509 1 456 3 455 1 563 1 148 3 514 1 664 1 516 1 262 3 156 3 724 3 833 1 49 2 669 5 266 3 409 1 837 1 838 8 160 1 411 3 100 3 101 2 842 3 103 1 731 1 672 1 782 1 734 1 569 1 166 1 
84 12 131 7 132 1 223 1 764 3 765 2 245 2 572 2 86 2 678 2 300 1 200 1 820 2 301 1 604 2 577 3 111 1 304 6 30 1 400 3 170 2 582 1 472 1 173 1 715 1 273 1 142 6 536 2 423 2 115 2 772 2 585 1 250 2 800 1 276 2 90 2 454 5 211 8 563 1 806 2 16 1 336 1 384 3 148 6 827 1 828 1 428 2 664 1 338 1 830 3 156 6 808 5 833 1 49 2 188 2 669 7 520 1 342 8 409 1 837 1 490 3 838 2 160 1 813 2 242 11 24 1 411 6 639 1 815 2 194 2 101 2 196 2 595 1 731 1 164 2 842 2 525 2 782 1 294 1 222 1 
131 1 84 4 132 1 223 1 443 1 764 1 765 1 529 1 788 1 245 1 572 1 678 1 300 1 820 1 301 1 577 1 792 1 111 1 304 1 400 1 170 1 582 1 273 1 142 1 536 1 115 1 772 1 250 1 800 1 276 1 90 1 454 2 560 1 211 1 718 1 806 2 336 1 384 1 148 1 428 1 514 1 664 1 516 1 830 1 156 1 808 2 833 1 49 1 669 1 638 1 342 2 409 1 837 1 811 1 490 3 160 1 813 1 242 5 24 1 411 1 639 1 815 1 194 1 101 1 196 1 731 1 164 1 842 2 641 1 782 1 294 1 
84 10 132 1 443 2 764 1 765 2 529 2 788 1 245 2 572 2 86 3 678 1 200 1 820 2 577 1 792 2 304 3 400 1 170 2 536 2 423 2 115 2 772 2 250 1 800 1 276 1 90 1 454 3 560 1 211 5 718 1 563 2 806 2 384 2 428 1 777 2 338 2 516 1 830 1 124 2 186 2 808 3 612 1 49 2 188 3 669 5 342 5 547 2 490 3 838 2 813 1 242 6 815 2 194 2 101 2 196 2 164 1 842 4 641 1 294 1 
223 1 416 1 572 3 678 2 577 4 111 1 170 3 378 1 472 1 582 1 273 1 536 3 423 5 115 3 585 1 800 2 276 2 586 1 382 3 806 2 336 1 16 1 384 6 750 1 691 1 428 2 692 2 22 1 338 3 186 2 808 8 188 5 547 3 342 14 490 3 813 2 242 17 24 1 639 1 815 3 194 4 196 4 440 1 131 8 84 23 765 3 764 4 245 3 86 5 300 1 820 3 200 1 301 1 304 8 249 1 400 4 30 1 715 1 142 8 772 3 250 2 90 2 454 8 210 1 211 14 510 3 563 2 148 6 777 3 664 1 317 2 515 1 721 1 830 3 156 6 46 1 724 1 833 1 49 3 669 10 159 1 409 1 837 1 838 5 160 1 411 6 100 1 101 3 841 1 842 3 164 2 731 1 525 3 782 1 222 1 
223 1 416 1 572 3 678 2 577 4 111 1 170 3 378 1 582 1 472 1 273 1 536 3 423 4 115 3 585 1 800 1 276 2 586 1 382 3 806 1 336 1 16 1 384 5 750 1 691 2 428 2 692 1 22 1 338 3 186 2 808 8 188 4 342 18 547 3 490 2 813 2 242 16 24 1 639 1 815 3 194 4 196 4 440 1 131 11 84 29 765 3 764 4 245 3 86 4 300 1 820 3 200 1 301 1 304 11 249 1 400 4 30 1 715 1 142 11 772 3 250 2 90 2 454 8 210 1 211 18 510 3 563 2 148 8 777 3 664 1 215 1 317 1 515 1 721 1 830 3 156 8 46 1 724 1 833 1 49 3 669 13 159 1 409 1 837 1 838 4 160 1 411 8 100 1 101 3 842 3 164 2 731 1 525 3 782 1 222 1 
84 6 443 1 764 1 765 1 529 1 245 1 572 1 86 2 678 1 769 1 200 1 820 1 577 1 304 2 400 1 170 1 536 1 423 1 115 1 557 1 772 1 250 1 800 1 276 1 90 1 454 2 211 3 718 1 425 1 563 1 806 1 384 1 428 1 777 1 338 1 830 1 186 1 808 2 49 1 188 2 669 3 547 1 342 3 696 1 490 1 838 1 813 1 242 5 522 1 815 1 194 1 101 1 196 1 164 1 842 2 846 1 
806 1 490 1 764 1 813 1 242 3 428 1 522 1 250 1 678 1 800 1 164 1 276 1 830 1 90 1 454 1 577 1 626 1 808 1 400 1 
131 4 84 7 107 1 764 3 765 1 245 1 572 1 86 2 709 2 350 1 678 2 448 1 499 1 820 1 577 3 626 1 304 3 712 1 377 1 30 1 400 3 170 1 472 1 330 1 142 3 536 1 423 2 115 1 772 1 250 2 251 1 800 1 276 2 90 2 454 4 211 6 563 1 456 1 806 1 384 4 148 2 428 2 19 1 259 1 338 1 830 4 156 2 808 4 724 1 49 1 188 2 669 4 342 4 490 1 838 4 813 2 242 11 411 2 193 1 697 2 522 1 162 1 815 1 100 1 194 1 196 1 101 1 164 2 842 1 347 1 440 1 
84 10 131 3 107 1 223 1 764 2 765 2 708 1 369 1 245 2 572 2 86 2 709 2 350 1 678 1 448 1 300 1 200 1 820 2 301 1 577 2 111 1 304 2 377 1 400 2 30 1 170 2 582 1 472 1 715 1 273 1 142 2 536 2 423 2 115 2 772 2 585 1 250 1 276 1 90 1 454 4 211 6 456 1 563 1 16 1 336 1 384 5 148 1 428 1 337 1 19 1 664 1 338 1 830 2 156 1 831 2 808 4 724 1 833 1 49 2 188 2 669 3 342 5 409 1 837 1 838 4 160 1 813 1 242 8 24 1 411 1 639 1 697 2 815 2 100 1 194 2 196 2 101 2 731 1 164 1 842 2 103 1 782 1 440 1 222 1 
84 10 131 3 107 1 223 1 764 2 765 2 708 1 369 1 245 2 572 2 86 2 709 2 350 1 678 1 448 1 300 1 200 1 820 2 301 1 577 2 111 1 304 2 377 1 400 2 30 1 170 2 582 1 472 1 715 1 273 1 142 2 536 2 423 2 115 2 772 2 585 1 250 1 276 1 90 1 454 4 211 6 456 1 563 1 16 1 336 1 384 5 148 1 428 1 19 1 664 1 338 1 830 3 156 1 831 2 808 4 724 1 833 1 49 2 188 2 669 3 518 1 342 5 409 1 837 1 838 4 160 1 813 1 242 9 24 1 411 1 639 1 697 2 815 2 100 1 194 2 196 2 101 2 731 1 164 1 842 2 782 1 440 1 222 1 
107 3 223 2 416 1 572 4 789 2 678 1 577 2 624 1 111 2 377 2 170 4 378 1 472 1 582 2 114 2 273 2 536 4 423 2 115 4 585 2 276 1 586 1 336 2 384 10 749 2 281 2 428 1 485 1 19 3 22 1 338 3 186 2 75 2 808 7 188 2 342 8 812 1 813 1 242 17 24 2 548 2 697 4 639 2 344 2 815 4 194 5 196 5 440 4 84 27 131 4 764 2 765 4 551 4 245 4 86 4 709 6 350 2 448 2 300 2 820 4 200 1 301 2 304 2 249 1 400 2 30 1 33 1 142 2 309 4 772 4 823 2 250 1 90 1 454 7 659 2 210 1 508 2 211 12 509 2 456 3 563 2 148 1 514 2 664 2 515 1 262 4 830 2 156 1 724 3 833 2 49 4 669 4 159 1 266 4 409 2 837 2 838 8 160 2 410 1 411 1 100 4 101 4 164 1 842 4 103 2 731 2 672 2 782 2 734 1 166 2 
107 2 223 1 416 1 369 1 572 2 789 1 678 2 577 3 111 1 377 1 170 2 378 1 582 1 114 1 273 1 536 2 423 3 115 2 585 1 276 2 586 1 336 1 16 1 384 8 428 2 19 2 22 1 338 2 186 1 808 6 188 3 342 9 813 2 242 14 24 1 697 3 639 1 815 2 194 3 196 3 440 3 84 17 131 4 764 3 765 2 708 1 245 2 86 3 350 1 709 4 300 1 820 2 200 1 301 1 249 1 304 4 400 3 30 1 715 1 142 4 309 3 772 2 250 2 90 2 454 6 211 10 210 1 456 2 563 1 256 1 148 2 664 1 515 1 830 3 156 2 831 1 724 2 833 1 49 2 669 5 159 1 409 1 837 1 838 7 160 1 411 2 100 3 101 2 164 2 842 2 731 1 782 1 222 1 
84 18 131 7 223 1 764 3 765 2 708 1 369 1 245 2 572 2 86 2 448 1 678 2 300 1 200 1 820 2 301 1 577 3 111 1 304 7 400 3 30 1 170 2 582 1 472 1 715 1 273 1 142 8 536 2 423 2 115 2 772 2 34 3 585 1 250 2 276 2 90 2 454 5 211 12 563 1 16 1 336 1 384 3 148 5 485 1 428 2 664 1 338 1 830 3 831 1 156 5 186 2 808 5 833 1 48 1 49 2 188 2 754 1 669 8 342 12 409 1 837 1 812 1 838 2 160 1 813 2 242 12 24 1 411 5 639 1 815 2 567 1 194 2 101 2 196 2 731 1 164 2 842 2 782 1 222 1 
84 10 131 4 764 4 765 1 708 1 369 1 245 1 572 1 86 1 448 1 678 2 820 1 577 4 304 4 400 4 30 1 170 1 472 1 142 6 536 1 423 1 115 1 772 1 250 2 276 2 90 2 454 5 211 8 563 1 384 1 148 4 750 1 428 2 485 2 691 1 260 1 338 1 830 3 156 4 46 1 831 1 808 5 49 1 188 1 669 5 342 7 812 2 490 1 838 1 813 2 242 12 411 4 815 1 194 1 101 1 196 1 164 2 842 1 
490 1 750 1 
131 4 84 8 764 3 765 1 416 1 245 1 551 1 572 1 86 2 448 1 678 2 820 1 577 3 304 3 249 1 30 1 400 3 170 1 378 1 142 3 536 1 115 1 772 1 250 2 276 2 90 2 454 5 586 1 210 1 211 7 508 1 509 1 563 1 660 1 148 3 281 1 428 2 515 1 22 1 338 2 830 3 262 1 156 3 75 1 724 1 808 5 49 1 188 2 669 4 159 1 342 5 266 1 813 2 242 12 411 2 548 1 100 1 815 1 194 2 196 2 101 1 164 2 842 1 440 1 
131 4 84 8 27 1 764 3 765 1 416 1 245 1 551 1 572 1 86 2 448 1 678 2 820 1 577 3 304 3 249 1 30 1 400 3 170 1 378 1 142 3 536 1 115 1 772 1 250 2 276 2 90 2 454 5 586 1 210 1 211 7 508 1 509 1 563 1 148 3 281 1 428 2 515 1 22 1 338 2 830 3 262 1 156 3 75 1 724 1 808 5 49 1 188 2 669 4 159 1 342 5 266 1 813 2 242 12 411 2 548 1 100 1 815 1 194 2 196 2 101 1 164 2 842 1 440 1 
84 16 131 6 107 1 764 2 765 2 416 1 245 2 551 2 572 2 86 2 350 1 709 2 448 2 678 1 820 2 577 2 249 1 304 4 377 1 30 1 400 2 170 2 378 1 472 1 142 5 536 2 115 2 772 2 250 1 276 1 181 1 90 1 454 5 586 1 210 1 211 13 508 1 509 1 563 2 456 1 384 2 148 3 281 1 428 1 19 1 515 1 22 1 338 3 830 3 262 2 156 3 75 1 724 2 808 5 49 2 188 2 669 6 159 1 342 9 266 2 838 2 813 1 242 11 411 3 697 2 548 1 100 2 815 2 194 3 101 2 196 3 164 1 842 2 440 2 
572 1 678 1 577 2 170 1 472 1 536 1 115 1 276 1 335 1 428 1 338 1 75 1 808 3 342 4 813 1 242 8 815 1 194 1 196 1 84 7 131 3 764 2 765 1 245 1 551 1 820 1 304 2 30 1 400 2 142 3 772 1 250 1 90 1 454 3 211 6 509 1 563 1 148 2 830 3 262 1 156 2 49 1 669 3 266 1 411 2 101 1 164 1 842 1 
84 7 131 1 107 1 223 1 444 1 765 2 708 1 369 1 245 2 572 2 86 2 709 2 448 1 300 1 820 2 301 1 111 1 113 1 170 2 582 1 472 1 33 1 715 1 273 1 536 2 423 1 115 2 505 1 772 2 585 1 454 2 211 2 563 1 456 1 16 1 336 1 384 4 183 1 19 1 664 1 338 1 831 2 808 2 833 1 49 2 188 2 669 1 342 2 409 1 837 1 838 3 160 1 242 4 24 1 639 1 815 2 100 1 194 2 196 2 101 2 731 1 842 2 782 1 440 1 222 1 
563 1 131 1 84 2 765 1 245 1 572 1 259 1 338 1 820 1 830 1 808 1 49 1 170 1 669 1 472 1 342 1 32 1 536 1 242 2 115 1 772 1 815 1 194 1 101 1 196 1 842 1 454 1 211 2 
107 1 572 1 377 1 170 1 472 1 536 1 115 1 424 1 335 1 384 2 19 1 338 1 808 1 342 1 812 1 242 2 697 2 815 1 194 1 196 1 440 1 84 4 765 1 245 1 709 2 350 1 820 1 772 1 454 1 211 4 563 1 456 2 724 1 49 1 669 1 838 2 100 1 101 1 842 1 781 1 
84 4 107 1 223 1 765 1 245 1 572 1 86 1 709 2 300 1 820 1 301 1 111 1 170 1 582 1 33 1 715 1 273 1 536 1 423 1 115 1 772 1 585 1 424 1 454 1 456 2 335 1 16 1 336 1 384 4 19 1 664 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 3 160 1 242 2 24 1 639 1 815 1 100 1 194 1 196 1 101 1 842 1 731 1 781 1 782 1 440 1 222 1 
107 5 223 1 572 2 678 3 577 4 111 1 377 3 170 2 582 1 273 1 536 2 423 5 115 2 585 1 276 3 16 1 336 1 384 16 807 1 750 1 428 3 691 3 19 5 71 3 338 2 186 2 808 7 635 1 188 5 342 16 547 3 696 3 490 1 813 2 242 18 24 1 697 6 639 1 815 2 194 3 196 3 440 5 130 3 84 35 131 8 443 3 765 2 764 4 245 2 86 5 709 10 350 3 138 3 769 3 300 1 820 2 200 1 301 1 304 9 30 1 400 4 715 1 142 10 772 2 250 3 90 3 454 7 560 1 211 20 456 5 563 1 148 8 664 1 777 3 830 3 46 1 156 8 263 3 724 3 612 1 833 1 49 2 669 10 409 1 837 1 838 15 160 1 411 8 161 3 615 1 100 5 101 2 842 5 164 2 731 1 782 1 222 1 846 3 
107 4 223 1 369 1 572 2 678 2 577 4 111 1 377 3 170 2 682 1 582 1 273 1 536 2 423 5 115 2 585 1 276 2 16 1 336 1 384 14 807 1 750 1 428 2 691 3 19 4 71 3 338 2 186 2 808 7 635 1 188 5 342 16 547 3 696 3 490 1 813 2 242 18 24 1 639 1 697 6 815 2 194 3 196 3 440 4 130 3 84 37 131 8 443 3 765 2 764 4 708 1 245 2 86 5 709 8 350 3 448 1 300 1 138 3 769 3 820 2 200 1 301 1 304 8 400 4 30 1 715 1 142 10 772 2 250 2 90 2 560 1 454 7 211 20 456 4 563 1 148 7 664 1 777 3 830 3 831 3 46 1 156 7 263 3 724 3 612 1 833 1 49 2 669 9 409 1 837 1 838 13 160 1 411 7 161 3 615 1 100 4 101 2 731 1 842 5 164 2 782 1 363 1 365 1 222 1 846 3 
806 1 490 1 764 1 813 1 242 4 428 1 522 1 194 1 250 1 678 1 196 1 800 1 164 1 276 1 830 1 90 1 723 1 454 2 577 1 626 1 808 2 400 1 
131 1 84 6 107 1 223 1 443 1 764 1 765 1 529 1 245 1 572 1 350 1 709 2 678 1 300 1 820 1 301 1 577 1 111 1 304 1 377 1 400 1 170 1 582 1 273 1 142 1 536 1 115 1 557 1 772 1 250 1 800 1 276 1 90 1 454 3 560 1 211 3 718 1 425 1 456 1 806 1 336 1 384 3 148 1 428 1 514 1 19 1 664 1 338 1 830 1 156 1 724 1 808 3 833 1 49 1 669 1 342 3 409 1 696 1 837 1 811 1 490 1 838 2 160 1 813 1 242 6 24 1 411 1 639 1 697 2 522 1 100 1 815 1 194 2 196 2 101 1 731 1 759 1 164 1 842 2 782 1 440 1 846 1 
107 11 223 2 416 1 572 3 678 2 577 4 111 2 377 9 170 3 378 1 582 2 273 2 536 3 423 8 115 3 585 2 276 2 586 1 16 2 745 5 336 2 384 32 750 1 428 2 691 2 19 11 71 5 22 1 338 4 186 4 808 8 635 1 188 9 342 16 547 5 490 1 813 2 242 22 24 2 697 17 639 2 815 3 194 4 196 4 440 12 130 5 131 7 84 48 764 4 765 3 245 3 86 9 350 9 709 22 138 5 300 2 820 3 200 1 301 2 304 16 30 1 400 4 31 5 33 1 715 2 771 5 142 6 772 3 34 1 250 2 90 2 560 1 454 8 211 25 210 1 456 11 563 2 148 14 720 1 405 5 777 5 664 2 515 1 830 3 46 1 156 14 724 10 612 1 833 2 48 1 49 3 669 18 159 1 409 2 837 2 219 5 838 30 160 2 411 14 161 5 615 1 100 12 567 1 101 3 103 1 164 2 842 8 731 2 782 2 413 1 222 2 
107 10 223 2 416 1 369 1 572 3 678 2 577 4 111 2 377 9 170 3 378 1 682 2 582 2 273 2 536 3 423 9 115 3 585 2 276 2 586 1 16 2 336 2 745 5 384 31 750 1 691 2 428 2 19 10 71 5 22 1 338 4 432 1 186 4 808 8 635 1 188 10 342 17 547 5 490 1 813 2 242 23 24 2 639 2 697 16 815 3 194 4 196 4 440 11 130 5 84 53 131 8 765 3 764 4 708 1 245 3 86 10 350 9 709 20 448 2 300 2 138 5 200 1 820 3 301 2 304 17 30 1 400 4 31 5 33 1 715 2 771 5 142 7 772 3 34 1 250 2 90 2 560 1 454 8 211 26 210 1 456 10 563 2 148 15 720 1 405 5 664 2 777 5 515 1 830 3 46 1 831 5 156 15 724 10 833 2 612 1 48 1 49 3 669 19 159 1 409 2 837 2 219 5 838 29 160 2 411 15 161 5 615 1 100 11 567 1 101 3 103 1 731 2 842 8 164 2 782 2 363 1 222 2 413 1 
269 1 363 1 
335 1 806 1 764 2 428 1 678 1 830 2 577 2 626 1 808 2 400 2 471 1 490 1 813 1 242 5 522 1 250 1 800 1 164 2 276 1 90 1 454 2 
335 1 806 1 764 2 428 1 678 1 830 2 577 2 626 1 808 2 400 2 490 1 813 1 242 5 522 1 250 1 523 1 800 1 164 2 276 1 90 1 454 2 
131 1 84 9 107 1 705 1 764 2 765 1 708 1 369 1 245 1 572 1 86 1 350 1 709 2 448 1 678 1 138 1 820 1 577 2 304 1 377 1 400 2 170 1 472 1 536 1 423 1 275 1 115 1 772 1 250 1 276 1 90 1 454 4 658 1 211 3 563 1 456 1 335 1 384 3 428 1 19 1 71 1 338 1 830 3 831 1 724 1 808 4 635 1 49 1 188 1 669 2 342 4 838 3 813 1 242 10 697 1 615 1 100 1 815 1 194 1 195 1 101 1 196 1 760 1 164 2 842 1 440 1 
107 2 416 1 369 1 572 1 678 1 577 2 377 2 170 1 378 1 536 1 275 1 115 1 276 1 586 1 335 1 384 4 428 1 19 2 71 1 22 1 338 2 808 5 635 1 342 5 813 1 242 12 697 4 815 1 194 2 195 1 196 2 760 1 440 3 131 2 84 11 705 1 764 2 765 1 708 1 245 1 350 2 709 4 138 1 820 1 304 1 249 1 400 2 142 2 772 1 250 1 90 1 454 5 658 1 210 1 211 8 563 1 456 2 148 1 515 1 830 3 156 1 831 1 724 3 49 1 669 2 159 1 838 4 411 1 615 1 100 3 101 1 164 2 842 1 732 1 
335 1 806 1 764 2 707 1 428 1 246 1 678 1 830 2 577 2 626 1 808 3 400 2 490 1 813 1 242 6 522 1 250 1 800 1 164 2 276 1 90 1 454 3 
764 2 707 1 246 1 678 1 577 2 626 1 400 2 250 1 800 1 276 1 90 1 454 3 335 1 806 1 428 1 830 2 808 3 490 1 813 1 242 6 522 1 164 2 
335 1 806 1 764 2 707 1 428 1 246 1 678 1 830 2 577 2 626 1 808 3 400 2 490 1 813 1 242 6 522 1 250 1 800 1 164 2 276 1 90 1 454 3 
335 1 806 1 764 2 428 1 678 1 487 1 830 2 577 2 626 1 808 3 400 2 490 1 813 1 242 6 522 1 250 1 800 1 164 2 276 1 90 1 454 3 38 1 
764 1 416 1 577 1 626 1 400 1 378 1 800 1 38 1 454 2 586 1 335 1 806 1 487 1 22 1 830 1 808 2 159 1 490 1 242 4 522 1 164 1 
335 1 806 1 764 2 428 1 678 1 487 1 830 2 577 2 626 1 808 3 400 2 490 1 813 1 242 6 522 1 250 1 800 1 164 2 276 1 90 1 454 3 38 1 
677 1 84 13 131 2 223 1 764 1 765 4 245 2 572 2 85 1 86 1 448 2 87 1 300 1 820 2 301 1 577 1 626 1 111 1 400 1 170 2 582 1 472 1 204 2 354 1 33 1 401 4 715 1 273 1 142 1 233 1 536 2 423 2 115 2 772 2 585 1 424 1 800 1 741 1 454 4 211 8 563 2 456 2 806 1 16 1 336 1 384 3 280 1 747 2 663 2 386 2 664 1 258 1 216 1 338 2 340 1 543 1 830 1 808 4 833 1 49 2 188 1 669 1 189 1 342 5 592 1 409 2 837 1 490 1 319 2 838 4 160 1 242 7 24 1 80 2 411 1 639 1 522 1 815 2 194 3 101 2 196 3 731 1 842 4 781 1 782 1 222 1 
84 7 131 1 764 1 765 2 416 1 245 1 572 1 85 1 678 1 3 1 820 1 301 2 577 1 111 2 304 1 400 1 170 1 378 1 204 1 33 1 401 1 273 2 233 1 536 1 115 1 772 1 585 1 250 1 424 1 276 1 90 1 741 1 454 3 586 1 211 2 539 2 456 1 336 2 384 1 747 1 663 1 428 1 386 2 258 1 216 1 22 1 830 2 808 3 462 2 49 1 159 1 342 3 837 2 79 5 838 3 813 1 242 9 24 2 80 1 815 1 100 1 194 2 640 1 101 1 196 2 164 1 842 2 781 1 782 2 
806 1 800 1 490 1 626 1 522 1 
243 1 
565 1 521 1 
11 1 322 1 
546 1 835 1 521 2 628 1 290 1 359 1 565 2 11 2 362 1 438 1 158 1 322 2 
521 1 555 1 316 1 565 1 11 1 165 1 
148 1 308 1 90 1 
591 1 491 1 713 1 
239 1 697 1 797 1 
239 1 697 1 
683 1 154 1 23 1 
356 1 787 1 534 1 
89 1 680 1 399 1 
4 1 13 1 
607 1 296 1 
341 1 414 1 
541 1 653 1 
325 1 652 1 
661 1 469 1 
727 1 64 1 
99 1 783 1 
397 1 97 1 
835 1 521 2 459 1 565 2 740 1 345 1 11 2 331 1 158 1 322 2 619 1 562 1 
323 1 208 1 
482 1 279 1 208 1 371 1 779 1 
847 1 
482 1 
758 1 
458 1 588 1 482 1 279 1 739 1 758 1 733 1 779 1 847 1 
7 1 588 1 482 1 589 1 279 1 758 1 711 1 779 1 847 1 
458 1 588 1 482 1 279 1 739 1 758 1 779 1 847 1 
7 1 588 1 482 1 279 1 758 1 711 1 779 1 847 1 
806 1 107 1 490 1 521 2 94 1 19 1 350 1 11 1 800 1 666 1 
11 1 521 1 431 1 287 1 350 1 
482 1 279 1 52 1 18 1 779 1 
323 1 574 1 90 1 426 1 
323 1 498 1 797 1 426 1 
323 1 297 1 787 1 426 1 
482 1 279 1 533 1 578 1 779 1 
779 1 
279 1 779 1 
758 1 588 1 
323 1 426 1 
129 1 
371 1 350 1 515 1 431 1 681 1 591 1 287 1 713 1 125 1 378 1 208 1 210 1 
378 1 515 1 210 1 
93 1 704 1 667 1 324 1 
743 1 210 1 840 1 
93 1 817 1 324 1 177 1 
312 1 689 1 806 1 490 1 521 1 19 1 11 1 
312 1 806 1 490 1 
806 1 107 1 490 1 521 1 19 1 350 1 11 1 800 1 666 1 
806 1 800 1 666 1 490 1 
132 1 806 1 278 1 490 1 521 1 790 1 11 1 761 1 
132 1 806 2 490 3 521 2 234 1 19 1 11 1 800 1 761 1 294 1 12 1 
132 2 800 1 806 3 490 3 294 1 234 1 790 1 
806 1 800 1 490 1 294 1 234 1 
132 1 806 2 800 1 490 3 294 1 234 1 
581 1 323 1 107 1 19 1 697 2 350 1 208 2 
323 1 208 1 
581 1 323 1 107 1 52 1 19 1 697 2 350 1 208 2 
107 1 697 2 19 1 350 1 
323 1 208 1 
323 1 208 1 
107 1 52 1 19 1 350 1 515 1 208 1 210 1 13 2 
581 1 323 2 107 1 52 1 19 1 697 2 350 1 208 3 
139 1 236 1 583 1 
323 1 208 2 
323 1 106 1 600 1 
482 1 279 1 371 1 208 1 779 1 125 1 847 1 
816 1 133 1 806 1 482 1 279 1 128 1 512 1 490 1 299 1 800 1 779 2 600 1 847 2 
780 1 482 1 279 1 176 1 106 1 779 1 600 1 847 1 
736 1 482 1 279 1 52 1 18 1 779 1 847 1 
581 1 528 1 482 1 279 1 511 1 779 1 847 1 
482 1 366 1 47 1 825 1 847 1 
482 1 279 1 149 1 417 1 617 1 779 1 847 1 
323 1 378 1 107 1 566 1 697 1 19 1 492 1 574 1 351 1 90 1 426 1 
714 1 816 1 806 1 482 1 279 1 298 1 490 1 225 1 779 1 847 1 
816 1 133 1 806 1 482 2 279 1 128 1 490 1 299 1 800 1 779 2 600 1 847 2 
132 1 806 1 482 1 279 1 135 1 490 1 202 1 92 1 834 1 779 1 847 1 
816 1 457 1 132 1 806 2 482 2 279 1 135 1 779 2 490 3 593 1 102 1 800 1 294 1 847 2 
714 1 806 1 490 1 225 1 
806 1 800 1 128 1 490 1 299 1 
132 1 806 1 490 1 92 1 834 1 
102 1 457 1 132 1 806 2 800 1 490 2 294 1 
84 7 107 3 223 1 765 3 416 1 245 3 572 3 86 1 350 2 62 1 300 1 200 1 820 3 301 1 111 1 170 3 378 1 582 1 715 1 273 1 536 3 423 1 115 3 772 3 585 1 68 1 454 4 586 1 210 1 211 5 563 2 16 1 336 1 384 2 19 3 664 1 541 5 22 1 515 1 338 3 808 4 724 2 833 1 49 3 188 1 217 1 669 2 159 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 639 1 100 3 815 3 194 4 101 3 196 4 731 1 842 3 782 1 440 3 222 1 
84 9 223 2 765 4 416 1 245 4 572 4 86 2 678 1 62 1 300 2 200 1 820 4 301 2 111 2 304 4 170 4 378 1 582 2 33 1 715 2 273 2 536 4 423 2 115 4 772 4 585 2 250 1 276 1 90 1 454 5 586 1 210 1 211 5 563 2 16 2 336 2 384 4 148 3 428 1 664 2 22 1 515 1 338 3 156 3 724 1 808 5 833 2 49 4 188 2 217 1 669 6 159 1 342 5 409 2 837 2 838 2 160 2 242 7 24 2 411 2 639 2 815 4 100 1 194 5 196 5 101 4 731 2 842 4 782 2 440 1 222 2 
84 9 602 1 223 2 765 4 416 1 245 4 572 4 86 2 678 1 62 1 300 2 200 1 820 4 301 2 111 2 304 4 713 1 170 4 378 1 582 2 33 1 715 2 273 2 536 4 423 2 115 4 772 4 585 2 276 1 454 5 586 1 210 1 211 5 563 2 16 2 336 2 384 4 664 2 22 1 515 1 338 3 156 3 591 3 724 1 808 5 833 2 49 4 188 2 50 1 217 1 669 6 159 1 342 5 409 2 837 2 838 2 160 2 242 7 24 2 411 2 639 2 815 4 100 1 194 5 196 5 101 4 731 2 842 4 782 2 440 1 222 2 
84 7 223 1 367 1 765 3 416 1 245 3 787 1 572 3 86 1 678 1 62 1 300 1 820 3 301 1 111 1 304 3 534 1 170 3 378 1 582 1 33 1 715 1 273 1 536 3 423 1 115 3 772 3 585 1 276 1 454 4 586 1 210 1 211 5 356 3 563 2 16 1 336 1 384 2 664 1 22 1 515 1 338 3 156 3 724 1 808 4 833 1 49 3 188 1 217 1 669 5 159 1 342 4 409 1 837 1 838 1 160 1 242 6 24 1 411 2 639 1 815 3 100 1 194 4 196 4 101 3 731 1 842 3 782 1 440 1 784 1 222 1 
84 9 223 2 765 4 416 1 245 4 572 4 86 2 678 1 62 1 300 2 200 1 820 4 301 2 680 4 111 2 399 1 304 4 170 4 378 1 582 2 307 1 33 1 715 2 273 2 536 4 423 2 115 4 772 4 585 2 276 1 89 1 454 5 586 1 210 1 211 5 563 2 16 2 336 2 384 4 664 2 22 1 515 1 338 3 156 4 724 1 808 5 833 2 49 4 188 2 217 1 669 6 159 1 342 5 409 2 837 2 838 2 160 2 242 7 24 2 411 2 639 2 815 4 100 1 194 5 196 5 101 4 731 2 842 4 782 2 440 1 784 1 222 2 
84 7 223 1 765 3 416 1 245 3 572 3 86 1 62 1 300 1 272 3 820 3 301 1 111 1 170 3 378 1 582 1 33 1 715 1 273 1 536 3 423 1 115 3 772 3 585 1 454 4 586 1 211 5 210 1 563 2 16 1 336 1 384 2 664 1 22 1 515 1 338 3 44 1 808 4 724 1 833 1 49 3 188 1 669 5 217 1 159 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 411 2 639 1 815 3 100 1 194 4 101 3 196 4 731 1 842 3 782 1 440 1 222 1 
84 7 223 1 348 1 765 3 28 1 416 1 245 3 572 3 86 1 371 1 350 3 396 1 62 1 300 1 200 1 820 3 301 1 681 1 111 1 713 1 170 3 627 1 378 2 582 1 715 1 273 2 536 3 423 1 115 3 772 3 585 1 208 3 454 4 586 2 210 4 211 7 563 3 16 1 336 1 384 2 237 1 633 1 664 1 22 2 515 4 338 4 431 3 591 2 287 1 808 4 724 3 833 1 49 3 188 1 125 1 217 1 669 3 159 1 342 4 409 1 837 1 838 1 160 1 242 6 24 1 639 1 815 3 100 3 194 4 196 4 101 3 731 1 842 3 493 1 782 2 440 3 222 1 
84 9 223 2 765 4 416 2 245 4 572 4 86 2 62 1 300 2 200 1 820 4 301 2 111 2 170 4 378 2 582 2 33 1 715 2 273 2 536 4 423 2 115 4 772 4 585 2 454 5 586 2 210 4 211 5 563 2 16 2 336 2 384 4 664 2 22 2 515 4 338 3 808 5 724 2 833 2 49 4 188 2 217 1 669 2 159 2 342 5 409 2 837 2 838 2 160 2 242 7 24 2 639 2 815 4 100 4 194 5 196 5 101 4 731 2 842 4 782 2 440 4 222 2 
704 1 84 6 223 2 765 3 245 3 572 3 324 1 86 2 300 2 200 1 820 3 301 2 111 2 170 3 582 2 33 1 715 2 273 2 536 3 423 2 115 3 772 3 585 2 558 1 454 3 586 1 211 2 93 3 563 1 16 2 336 2 384 4 214 1 664 2 22 1 338 1 667 3 808 3 724 1 833 2 49 3 188 2 217 1 669 1 342 3 409 2 837 2 838 2 160 2 242 4 24 2 639 2 815 3 100 3 194 3 196 3 101 3 731 2 842 3 782 2 440 3 222 2 
323 1 84 2 107 1 336 1 384 2 765 1 245 1 572 1 19 1 350 1 709 1 820 1 301 1 111 1 808 1 462 1 49 1 170 1 171 1 581 1 342 1 837 1 52 1 273 1 79 2 838 2 536 1 242 1 24 1 115 1 697 2 772 1 815 1 100 1 194 1 196 1 101 1 842 1 208 2 782 1 440 1 454 1 
84 5 107 2 765 2 416 1 245 2 572 2 709 2 350 2 820 2 171 1 170 2 378 1 536 2 115 2 772 2 116 1 454 3 586 1 211 5 210 1 563 2 384 2 19 2 22 1 515 1 338 3 808 3 724 3 49 2 669 2 159 1 342 3 838 2 242 4 697 4 100 3 815 2 194 3 101 2 196 3 842 2 440 3 
323 1 84 2 223 1 765 1 245 1 572 1 86 1 709 1 300 1 820 1 301 1 111 1 171 1 170 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 208 1 454 1 16 1 336 1 384 3 664 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 2 160 1 242 1 24 1 639 1 100 1 815 1 194 1 101 1 196 1 842 1 731 1 440 1 782 1 222 1 
323 1 84 2 223 1 765 1 245 1 572 1 86 1 709 1 300 1 820 1 301 1 111 1 171 1 170 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 208 1 454 1 16 1 336 1 384 3 664 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 2 160 1 242 1 24 1 639 1 100 1 815 1 194 1 101 1 196 1 842 1 731 1 440 1 782 1 222 1 
84 6 107 1 223 2 765 3 245 3 572 3 86 2 709 3 350 1 300 2 200 1 820 3 301 2 111 2 171 1 170 3 582 2 33 1 715 2 273 2 536 3 423 2 115 3 772 3 585 2 208 3 454 3 210 3 13 2 211 2 563 1 16 2 336 2 384 7 19 1 664 2 515 3 338 1 808 3 724 1 833 2 49 3 188 2 669 1 342 3 409 2 837 2 52 3 838 5 160 2 242 3 24 2 639 2 100 3 815 3 194 3 101 3 196 3 731 2 842 3 782 2 440 3 222 2 
323 1 84 2 223 1 765 1 245 1 572 1 86 1 709 1 300 1 820 1 301 1 111 1 171 1 170 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 208 1 454 1 16 1 336 1 384 3 664 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 2 160 1 242 1 24 1 639 1 100 1 815 1 194 1 101 1 196 1 842 1 731 1 440 1 782 1 222 1 
323 2 84 2 107 1 223 1 765 1 245 1 572 1 86 1 709 1 350 1 300 1 820 1 301 1 111 1 171 1 170 1 581 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 208 3 454 1 16 1 336 1 384 3 19 1 664 1 808 1 833 1 49 1 188 1 342 1 409 1 52 1 837 1 838 2 160 1 242 1 24 1 697 2 639 1 100 1 815 1 194 1 101 1 196 1 842 1 731 1 782 1 440 1 222 1 
323 1 84 3 223 1 765 1 416 1 245 1 572 1 86 1 62 1 300 1 820 1 301 1 111 1 170 1 378 1 582 1 715 1 273 1 536 1 423 1 652 1 115 1 772 1 176 1 454 2 586 2 210 1 211 2 426 1 563 1 16 1 336 1 384 2 664 1 22 2 515 1 338 1 808 2 724 1 833 1 49 1 188 1 669 1 780 1 159 1 342 2 409 1 837 1 838 1 160 1 242 4 24 1 639 1 815 1 100 1 194 2 101 1 196 2 292 1 731 1 842 1 782 1 440 1 106 1 600 1 222 1 
84 5 107 2 223 1 765 2 416 1 245 2 572 2 86 1 350 1 325 3 62 1 300 1 820 2 301 1 111 1 170 2 378 1 582 1 33 1 715 1 273 1 536 2 423 1 652 1 115 2 772 2 585 1 800 1 454 3 586 2 210 1 211 3 479 1 563 1 806 1 16 1 336 1 384 2 94 1 19 2 664 1 22 2 515 1 338 2 666 1 808 3 724 1 833 1 49 2 188 1 669 1 159 1 342 3 409 1 837 1 490 1 838 1 160 1 242 5 24 1 639 1 815 2 100 2 194 3 101 2 196 3 731 1 842 2 782 1 440 2 222 1 
563 2 84 5 765 2 416 1 245 2 572 2 62 1 515 3 22 2 338 3 820 2 327 1 724 2 808 3 49 2 170 2 669 2 217 1 378 2 159 1 780 1 342 3 536 2 242 5 115 2 772 2 100 2 176 1 815 2 194 3 101 2 196 3 842 2 440 2 454 3 586 2 211 5 210 3 106 2 600 2 
84 5 765 2 416 1 245 2 572 2 62 1 820 2 327 1 170 2 378 1 536 2 115 2 772 2 176 1 454 3 586 2 211 5 210 1 563 2 22 2 515 1 338 3 808 3 724 2 49 2 217 1 669 2 780 1 159 1 342 3 242 5 815 2 100 2 194 3 196 3 101 2 842 2 440 2 106 2 600 2 847 2 
816 3 84 7 133 3 223 1 765 3 416 1 299 1 245 3 530 1 572 3 86 1 62 1 300 1 820 3 301 1 111 1 170 3 378 2 582 1 33 1 715 1 273 1 536 3 423 1 115 3 772 3 585 1 800 1 454 4 586 2 210 6 211 5 563 2 806 1 16 1 336 1 384 2 512 1 664 1 22 2 515 6 338 3 808 4 724 2 833 1 49 3 188 1 217 1 669 2 159 1 342 4 409 1 128 1 837 1 490 1 838 1 160 1 242 6 24 1 639 1 815 3 100 3 194 4 196 4 101 3 731 1 842 3 782 1 440 3 600 2 222 1 
816 2 84 5 133 2 765 2 416 1 299 1 245 2 530 1 572 2 62 1 820 2 170 2 378 1 536 2 115 2 772 2 800 1 454 3 586 2 210 1 211 5 563 2 806 1 512 1 515 1 22 2 338 3 808 3 724 2 49 2 217 1 669 2 159 1 342 3 128 1 490 1 242 5 815 2 100 2 194 3 196 3 101 2 842 2 440 2 600 2 847 4 
84 9 107 4 223 2 765 4 416 1 245 4 572 4 86 2 350 2 62 1 300 2 200 1 820 4 301 2 111 2 170 4 378 1 582 2 33 1 715 2 273 2 536 4 423 2 115 4 772 4 585 2 454 5 586 2 211 5 210 1 563 2 16 2 336 2 384 4 19 4 664 2 22 2 515 1 338 3 808 5 724 2 833 2 49 4 188 2 217 1 669 2 159 1 342 5 409 2 837 2 838 2 160 2 242 7 24 2 639 2 697 5 100 4 815 4 194 5 101 4 196 5 731 2 842 4 782 2 440 4 222 2 
84 2 223 1 367 1 765 1 245 1 572 1 86 1 678 1 300 1 820 1 301 1 111 1 304 1 170 1 582 1 33 1 715 1 273 1 536 1 423 1 115 1 772 1 585 1 11 1 276 1 454 1 16 1 336 1 384 2 664 1 156 1 808 1 833 1 49 1 188 1 669 1 342 1 409 1 837 1 838 1 160 1 242 2 24 1 639 1 815 1 194 1 196 1 101 1 842 1 731 1 782 1 322 1 784 1 222 1 
84 9 223 2 367 1 765 4 416 1 245 4 572 4 86 2 678 1 62 1 300 2 200 1 820 4 301 2 111 2 304 4 170 4 378 1 582 2 33 1 715 2 273 2 536 4 423 2 115 4 772 4 585 2 250 1 276 1 90 1 454 5 586 1 210 1 211 5 563 2 16 2 336 2 384 4 148 3 428 1 664 2 22 1 515 1 338 3 156 3 724 1 808 5 833 2 49 4 188 2 217 1 669 6 159 1 342 5 409 2 837 2 838 2 160 2 242 7 24 2 411 2 639 2 815 4 100 1 194 5 196 5 101 4 731 2 842 4 782 2 440 1 222 2 
84 7 223 1 765 3 416 1 245 3 572 3 86 1 62 1 300 1 272 3 820 3 301 1 111 1 170 3 378 1 582 1 307 1 33 1 715 1 273 1 536 3 423 1 115 3 772 3 585 1 454 4 586 1 211 5 210 1 563 2 16 1 336 1 384 2 664 1 22 1 515 1 338 3 808 4 724 1 833 1 49 3 188 1 669 5 217 1 159 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 411 2 639 1 815 3 100 1 194 4 101 3 196 4 731 1 842 3 782 1 440 1 222 1 
84 7 602 1 223 1 765 3 416 1 245 3 572 3 86 1 678 1 62 1 300 1 200 1 820 3 301 1 111 1 304 3 713 1 170 3 378 1 582 1 307 1 715 1 273 1 536 3 423 1 115 3 772 3 585 1 276 1 454 4 586 1 210 1 211 5 563 2 16 1 336 1 384 2 664 1 22 1 515 1 338 3 156 3 591 3 724 1 808 4 833 1 49 3 188 1 50 1 217 1 669 5 159 1 342 4 409 1 837 1 838 1 160 1 242 6 24 1 411 2 639 1 815 3 100 1 194 4 196 4 101 3 731 1 842 3 782 1 440 1 222 1 
563 1 84 2 765 1 245 1 572 1 350 1 515 1 338 1 820 1 431 1 591 1 724 1 808 1 49 1 170 1 669 1 217 1 342 1 536 1 242 1 115 1 772 1 815 1 100 1 194 1 196 1 101 1 842 1 208 1 440 1 454 1 211 2 210 1 
563 1 84 2 765 1 245 1 572 1 350 1 515 1 338 1 820 1 431 1 591 1 724 1 808 1 49 1 170 1 669 1 217 1 342 1 536 1 242 1 115 1 772 1 815 1 100 1 194 1 196 1 101 1 842 1 208 1 440 1 454 1 211 2 210 1 
563 1 84 2 765 1 245 1 572 1 350 1 515 1 338 1 820 1 431 1 591 1 724 1 808 1 49 1 170 1 669 1 217 1 342 1 536 1 242 1 115 1 772 1 815 1 100 1 194 1 196 1 101 1 842 1 208 1 440 1 454 1 211 2 210 1 
84 8 223 1 765 2 245 2 572 2 86 2 709 2 300 1 139 2 820 2 200 1 301 1 111 1 304 4 171 1 170 2 582 1 715 1 273 1 142 1 536 2 423 2 115 2 772 2 585 1 454 2 211 6 563 1 16 1 336 1 384 5 148 3 664 1 338 2 156 3 808 2 724 2 833 1 49 2 188 2 669 5 342 6 409 1 837 1 838 4 160 1 242 2 24 1 411 3 639 1 815 2 100 2 194 2 101 2 196 2 842 2 731 1 782 1 440 2 222 1 
563 1 84 4 384 1 148 2 765 1 245 1 572 1 709 1 338 2 139 1 820 1 156 2 724 1 808 1 304 2 49 1 170 1 171 1 669 3 342 3 142 1 838 1 536 1 242 1 411 2 115 1 772 1 100 1 815 1 194 1 196 1 101 1 842 1 440 1 454 1 211 4 
84 8 223 1 765 2 245 2 572 2 86 3 709 2 300 1 139 2 820 2 200 1 301 1 111 1 304 4 171 1 170 2 582 1 715 1 273 1 142 1 536 2 423 3 115 2 772 2 585 1 454 2 211 6 563 1 16 1 336 1 384 6 148 3 664 1 338 2 156 3 808 2 724 2 833 1 49 2 188 3 669 5 342 6 409 1 837 1 838 5 160 1 242 2 24 1 411 3 639 1 815 2 100 2 194 2 101 2 196 2 842 2 731 1 782 1 440 2 222 1 
84 11 107 2 765 2 416 1 245 2 572 2 86 4 350 2 448 2 62 1 820 2 170 2 378 1 536 2 423 2 115 2 35 1 772 2 798 1 208 2 454 3 586 1 211 6 210 5 563 2 510 2 382 2 384 2 19 2 777 2 665 2 22 1 541 3 515 5 338 3 831 2 431 1 591 1 186 2 808 3 724 3 49 2 188 4 669 2 217 1 159 1 547 2 342 3 838 2 242 4 815 2 100 5 194 3 101 2 196 3 842 2 525 2 440 5 106 1 600 1 
84 11 107 2 765 2 416 1 245 2 572 2 86 4 350 2 448 2 62 1 820 2 170 2 378 1 536 2 423 2 115 2 35 1 772 2 798 1 208 2 454 3 586 1 211 6 210 5 563 2 510 2 382 2 384 2 19 2 777 2 665 2 22 1 541 3 515 5 338 3 831 2 431 1 591 1 186 2 808 3 724 3 49 2 188 4 669 2 217 1 159 1 547 2 342 3 838 2 242 4 815 2 100 5 194 3 101 2 196 3 842 2 525 2 440 5 106 1 600 1 
84 11 107 2 765 2 416 1 245 2 572 2 86 4 350 2 448 2 62 1 820 2 170 2 378 1 536 2 423 2 115 2 772 2 208 2 454 3 586 1 211 5 210 5 563 2 510 2 382 2 384 2 19 2 777 2 665 2 22 1 541 3 515 5 338 3 831 2 431 1 591 1 186 2 808 3 724 2 49 2 188 4 669 2 217 1 159 1 547 2 342 3 838 2 242 4 815 2 100 5 194 3 101 2 196 3 842 2 525 2 440 5 
84 10 223 1 765 3 416 1 245 3 572 3 86 1 62 1 300 1 820 3 200 1 301 1 111 1 170 3 378 1 582 1 715 1 273 1 536 3 423 1 115 3 772 3 35 2 798 3 585 1 454 4 586 1 210 4 211 8 563 2 16 1 336 1 384 2 664 1 665 3 515 4 22 1 338 3 808 4 724 4 833 1 49 3 188 1 217 1 669 2 159 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 639 1 100 4 815 3 194 4 101 3 196 4 731 1 842 3 782 1 440 4 106 3 600 3 222 1 
84 10 223 1 765 3 416 1 245 3 572 3 86 1 62 1 300 1 820 3 200 1 301 1 111 1 170 3 378 1 582 1 715 1 273 1 536 3 423 1 115 3 772 3 35 2 798 3 585 1 454 4 586 1 210 4 211 8 563 2 16 1 336 1 384 2 664 1 665 3 515 4 22 1 338 3 808 4 724 4 833 1 49 3 188 1 217 1 669 2 159 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 639 1 100 4 815 3 194 4 101 3 196 4 731 1 842 3 782 1 440 4 106 3 600 3 222 1 
84 10 223 1 765 3 416 1 245 3 572 3 86 1 62 1 300 1 820 3 200 1 301 1 111 1 170 3 378 1 582 1 715 1 273 1 536 3 423 1 115 3 772 3 35 2 798 3 585 1 454 4 586 1 210 4 211 8 563 2 16 1 336 1 384 2 664 1 665 3 515 4 22 1 338 3 808 4 724 4 833 1 49 3 188 1 217 1 669 2 159 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 639 1 100 4 815 3 194 4 101 3 196 4 731 1 842 3 782 1 440 4 106 3 600 3 222 1 
84 3 223 1 764 1 765 1 416 1 245 1 572 1 86 1 371 1 300 1 820 1 301 1 577 1 111 1 400 1 170 1 378 2 582 1 715 1 273 1 142 1 536 1 423 1 115 1 772 1 176 1 208 1 454 2 561 1 586 2 211 2 210 3 563 1 743 1 16 1 336 1 384 2 664 1 22 2 515 2 724 1 808 2 833 1 49 1 188 1 125 1 669 1 217 1 159 1 780 1 342 2 409 1 837 1 838 1 160 1 242 4 24 1 639 1 815 1 100 1 194 1 840 1 101 1 196 1 731 1 842 1 782 1 440 1 106 1 600 1 222 1 
84 7 764 1 765 2 416 2 245 2 572 2 371 1 62 1 820 2 577 1 400 1 170 2 378 3 142 2 536 2 115 2 772 2 176 1 208 2 454 4 561 1 586 3 211 7 210 6 563 2 743 1 22 3 515 5 338 3 724 3 808 4 49 2 125 1 217 1 669 2 159 2 780 1 342 5 242 7 815 2 100 3 194 3 840 2 196 3 101 2 842 2 440 3 106 2 600 2 
84 3 223 1 366 1 764 1 765 1 416 1 245 1 572 1 86 1 371 1 300 1 820 1 301 1 577 1 111 1 400 1 170 1 378 2 582 1 715 1 273 1 142 1 651 1 536 1 423 1 115 1 772 1 176 1 208 2 454 2 586 2 211 2 210 3 825 1 563 1 16 1 336 1 384 2 279 1 664 1 22 2 515 3 47 1 724 1 808 2 833 1 49 1 188 1 125 1 669 1 217 1 159 1 780 1 342 2 409 1 837 1 838 1 160 1 242 4 24 1 639 1 815 1 100 1 194 1 101 1 196 1 731 1 842 1 782 1 440 1 106 1 600 1 222 1 
84 6 223 1 366 2 764 1 765 2 416 1 245 2 572 2 86 1 371 1 300 1 200 1 820 2 301 1 577 1 111 1 400 1 170 2 378 2 582 1 715 1 273 1 142 2 651 1 536 2 423 1 115 2 772 2 176 1 585 1 208 4 454 3 586 2 211 5 210 6 825 1 563 2 16 1 336 1 384 2 664 1 22 2 515 6 338 1 47 1 724 2 808 3 833 1 49 2 188 1 125 1 669 2 217 1 159 1 780 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 639 1 815 2 100 2 194 2 101 2 196 2 731 1 842 2 782 1 440 2 106 2 600 2 222 1 
84 6 223 1 366 2 764 1 765 2 416 1 245 2 572 2 86 1 371 1 300 1 200 1 820 2 301 1 577 1 111 1 400 1 170 2 378 2 582 1 715 1 273 1 142 2 651 1 536 2 423 1 115 2 772 2 176 1 585 1 208 4 454 3 586 2 211 5 210 6 825 1 563 2 16 1 336 1 384 2 664 1 22 2 515 6 338 1 47 1 724 2 808 3 833 1 49 2 188 1 125 1 669 2 217 1 159 1 780 1 342 4 409 1 837 1 838 1 160 1 242 5 24 1 639 1 815 2 100 2 194 2 101 2 196 2 731 1 842 2 782 1 440 2 106 2 600 2 222 1 
223 1 416 1 572 1 789 1 373 1 577 1 111 1 170 1 378 1 582 1 114 1 273 1 536 1 423 2 115 1 475 1 800 1 68 1 586 1 382 1 806 1 16 1 336 1 384 3 749 1 281 1 692 1 22 1 544 1 186 2 75 1 808 2 188 1 342 2 547 1 490 1 242 8 24 1 548 1 639 1 344 1 815 1 194 1 196 1 440 2 84 8 764 1 765 1 245 1 551 1 86 2 300 1 820 1 301 1 400 1 715 1 309 1 772 1 35 1 823 1 451 1 454 2 508 1 210 2 211 3 509 1 510 1 563 1 403 1 664 1 777 1 665 1 317 1 515 2 262 1 724 2 833 1 49 1 217 1 669 1 159 1 266 1 409 1 837 1 838 2 160 1 100 2 101 1 841 1 103 1 842 1 731 1 672 1 525 1 782 1 734 1 222 1 166 1 
223 1 416 1 572 2 789 1 373 1 577 1 111 1 170 2 378 1 582 1 273 1 114 1 536 2 423 2 115 2 585 1 475 1 800 1 68 1 586 2 382 1 806 1 16 1 336 1 384 3 749 1 281 1 692 1 22 2 338 1 544 1 186 2 75 1 808 3 188 1 342 3 547 1 490 1 242 10 24 1 548 1 639 1 344 1 815 2 194 2 196 2 440 3 84 11 764 1 765 2 245 2 551 1 86 2 300 1 820 2 200 1 301 1 400 1 715 1 309 1 772 2 35 1 823 1 451 1 454 3 508 1 210 3 211 4 509 1 510 1 563 1 403 1 664 1 777 1 665 2 317 1 515 3 262 1 724 2 833 1 49 2 217 1 669 1 159 1 266 1 409 1 837 1 838 2 160 1 100 3 101 2 841 1 103 1 842 2 731 1 672 1 525 1 782 1 734 1 222 1 166 1 
223 1 416 1 572 2 789 1 373 1 577 1 111 1 170 2 378 1 582 1 273 1 114 1 536 2 423 2 115 2 585 1 475 1 800 1 68 1 586 2 382 1 806 1 16 1 336 1 384 3 749 1 281 1 692 1 22 2 338 1 544 1 186 2 75 1 808 3 188 1 342 3 547 1 490 1 242 10 24 1 548 1 639 1 344 1 815 2 194 2 196 2 440 3 84 11 764 1 765 2 245 2 551 1 86 2 300 1 820 2 200 1 301 1 400 1 715 1 309 1 772 2 35 1 823 1 451 1 454 3 508 1 210 3 211 4 509 1 510 1 563 1 403 1 664 1 777 1 665 2 317 1 515 3 262 1 724 2 833 1 49 2 217 1 669 1 159 1 266 1 409 1 837 1 838 2 160 1 100 3 101 2 841 1 103 1 842 2 731 1 672 1 525 1 782 1 734 1 222 1 166 1 
323 1 84 3 549 1 223 1 765 1 416 1 245 1 572 1 620 1 86 1 226 1 300 1 820 1 301 1 111 1 170 1 378 1 582 1 67 1 715 1 273 1 536 1 423 1 115 1 772 1 454 1 586 2 210 1 426 1 16 1 336 1 384 2 664 1 777 1 22 2 515 1 186 1 808 1 724 1 833 1 694 1 49 1 188 1 217 1 159 1 342 1 409 1 837 1 838 1 160 1 242 4 24 1 639 1 815 1 100 1 194 1 101 1 196 1 389 1 731 1 842 1 782 1 440 1 222 1 
84 3 549 1 223 1 765 1 416 1 245 1 572 1 86 2 226 1 300 1 820 1 301 1 111 1 170 1 378 1 582 1 67 1 715 1 273 1 536 1 423 2 115 1 772 1 454 1 586 2 210 1 211 1 563 1 16 1 336 1 384 3 664 1 777 1 22 2 515 1 186 1 808 1 724 1 779 1 833 1 49 1 188 2 217 1 669 1 159 1 342 1 409 1 837 1 838 2 160 1 242 4 24 1 639 1 815 1 100 1 194 1 196 1 101 1 389 1 731 1 842 1 782 1 440 1 222 1 
84 3 549 1 223 1 765 1 416 1 245 1 572 1 86 2 678 1 300 1 820 1 301 1 111 1 304 1 170 1 378 1 582 1 67 1 715 1 273 1 536 1 555 1 423 2 115 1 772 1 276 1 454 1 586 1 211 1 210 1 563 1 16 1 336 1 384 3 664 1 777 1 316 1 22 1 515 1 156 1 239 1 186 1 808 1 724 1 833 1 49 1 188 2 669 2 217 1 159 1 342 1 409 1 837 1 838 2 160 1 242 4 24 1 411 1 639 1 697 1 815 1 100 1 194 1 101 1 196 1 389 1 731 1 842 1 782 1 440 1 165 1 784 1 222 1 
806 1 490 1 764 2 813 1 242 6 428 2 522 1 250 2 678 2 800 1 164 1 276 2 830 2 90 2 454 2 577 2 626 1 808 2 30 1 400 2 
84 10 549 1 223 1 367 1 764 1 765 2 787 1 245 2 572 2 86 5 678 2 300 1 200 1 820 2 301 1 577 1 111 1 304 6 534 1 400 1 170 2 582 1 67 2 715 1 273 1 142 2 536 2 423 4 115 2 772 2 585 1 250 1 276 2 90 1 454 3 211 5 563 2 356 2 16 1 336 1 384 5 148 4 750 1 428 1 691 2 664 1 777 2 338 1 46 1 156 6 186 2 808 3 833 1 49 2 188 5 217 1 669 8 342 4 409 1 837 1 490 1 838 4 160 1 242 7 24 1 411 6 639 1 815 2 194 2 101 2 196 2 389 1 731 1 842 2 782 1 784 1 222 1 
84 3 549 1 765 1 416 1 245 1 572 1 86 1 226 1 820 1 301 1 111 1 647 1 170 1 378 1 67 1 273 1 536 1 423 1 115 1 772 1 585 1 454 1 586 2 210 1 336 1 384 2 777 1 22 2 515 1 186 1 808 1 724 1 462 1 49 1 188 1 159 1 342 1 837 1 79 2 838 2 242 4 24 1 815 1 100 1 194 1 196 1 101 1 389 1 842 1 782 1 440 1 847 1 
84 3 131 1 549 1 765 1 416 1 245 1 572 1 86 1 820 1 301 1 111 1 647 1 170 1 378 1 67 1 273 1 536 1 423 1 115 1 772 1 585 1 454 1 586 1 210 1 336 1 384 2 777 1 22 1 515 1 186 1 808 1 462 1 49 1 188 1 159 1 342 1 837 1 79 2 838 2 242 3 24 1 815 1 100 1 194 1 196 1 101 1 389 1 103 1 842 1 440 1 782 1 
84 3 131 1 549 1 765 1 416 1 245 1 572 1 820 1 301 1 647 1 111 1 170 1 378 1 67 1 273 1 536 1 115 1 772 1 585 1 454 1 586 1 210 1 336 1 384 1 22 1 515 1 808 1 724 1 49 1 462 1 159 1 342 1 837 1 79 2 838 1 242 3 24 1 815 1 100 1 194 1 196 1 101 1 389 1 103 1 842 1 440 1 782 1 
323 1 84 3 223 1 764 1 765 1 245 1 572 1 86 1 371 1 709 1 678 1 300 1 574 1 552 1 820 1 301 1 577 1 111 1 29 1 713 1 400 1 171 1 170 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 250 1 276 1 208 1 90 2 454 2 586 1 426 1 15 1 16 1 336 1 384 3 428 1 664 1 22 1 287 1 808 2 833 1 49 1 188 1 125 1 342 2 409 1 837 1 838 2 160 1 242 5 24 1 639 1 815 1 100 1 194 1 101 1 196 1 731 1 842 1 782 1 440 1 222 1 
107 2 223 1 572 2 678 1 373 1 111 1 170 2 171 1 582 1 273 1 536 2 423 3 115 2 585 1 800 1 276 1 586 1 382 2 806 1 336 1 16 1 384 6 122 1 428 1 692 1 19 2 22 1 338 1 544 1 186 2 808 2 188 3 342 2 547 2 490 1 242 7 24 1 697 4 639 1 815 2 194 2 196 2 440 2 84 8 765 2 245 2 86 3 709 2 350 2 300 1 820 2 552 1 200 1 301 1 29 1 304 2 715 1 772 2 35 1 250 1 451 1 90 1 454 2 211 4 510 2 563 1 403 1 148 2 777 2 664 1 665 2 317 1 156 2 724 2 833 1 49 2 669 3 409 1 837 1 838 5 160 1 411 2 100 2 101 2 841 1 842 2 731 1 525 2 782 1 222 1 
131 2 84 8 223 1 765 2 245 2 572 2 86 1 709 2 678 1 300 1 373 1 200 1 552 1 820 2 301 1 111 1 29 1 304 2 171 1 170 2 582 1 715 1 273 1 536 2 423 1 115 2 35 1 772 2 585 1 250 1 451 1 800 1 276 1 90 1 454 2 211 4 563 1 510 2 382 2 806 1 16 1 336 1 403 1 384 4 148 2 122 1 428 1 692 1 664 1 665 2 317 1 338 1 544 1 156 2 808 2 833 1 49 2 188 1 669 3 547 2 342 2 409 1 837 1 490 1 838 3 160 1 242 6 24 1 411 2 639 1 815 2 194 2 101 2 196 2 841 1 731 1 103 1 842 2 525 2 782 1 222 1 
677 1 223 2 416 1 572 3 678 2 325 8 62 1 577 1 111 1 170 3 378 1 582 1 273 1 536 3 423 7 115 3 585 1 800 2 276 2 586 1 382 4 806 3 16 1 336 1 384 8 280 1 747 4 428 1 692 1 22 1 338 3 186 4 808 5 188 6 189 1 342 6 547 4 490 4 242 11 24 1 639 1 815 3 194 4 196 4 595 1 702 4 197 1 440 5 294 1 84 29 132 1 764 1 765 7 245 3 86 6 448 4 300 1 820 3 200 1 301 1 604 4 304 14 400 1 354 1 715 1 142 2 652 1 772 3 250 1 90 1 454 5 210 1 211 7 510 4 563 2 148 6 827 3 828 1 664 1 777 4 215 1 317 1 515 1 153 4 407 1 611 1 156 14 724 1 833 1 49 3 669 17 217 1 159 1 520 1 361 1 409 2 837 1 838 7 160 1 411 14 100 1 101 3 842 7 731 2 525 8 782 1 784 1 222 1 
503 1 
84 5 765 1 245 1 572 1 61 1 709 1 139 1 820 1 304 2 170 1 472 1 142 1 536 1 115 1 772 1 424 1 454 1 211 5 254 1 456 1 563 1 427 1 384 1 148 2 483 1 338 2 156 2 808 1 724 1 49 1 669 3 545 1 342 3 838 1 242 3 411 2 614 1 815 1 100 1 194 1 196 1 101 1 842 1 781 1 440 1 845 1 
563 1 456 1 84 5 384 1 148 2 765 1 245 1 572 1 709 1 338 2 139 1 820 1 156 2 724 1 808 1 304 2 49 1 170 1 669 3 472 1 342 3 142 1 838 1 536 1 242 1 411 2 115 1 772 1 100 1 815 1 194 1 355 1 196 1 101 1 842 1 568 1 440 1 454 1 211 5 
563 1 456 1 84 5 384 1 148 2 765 1 245 1 572 1 709 1 338 2 139 1 820 1 590 1 156 2 724 1 808 1 304 2 49 1 170 1 669 3 472 1 342 3 142 1 838 1 536 1 242 1 411 2 115 1 772 1 100 1 815 1 194 1 196 1 101 1 842 1 440 1 454 1 211 5 
323 1 84 3 107 1 270 1 765 1 245 1 572 1 709 1 350 1 820 1 301 1 111 1 170 1 581 1 472 1 329 1 273 1 536 1 115 1 772 1 424 1 179 1 208 2 454 1 254 1 456 1 336 1 384 2 483 1 282 1 19 1 21 1 808 1 462 1 49 1 342 1 837 1 52 1 79 3 838 2 242 3 24 1 697 1 815 1 100 1 194 1 196 1 101 1 842 1 781 1 782 1 440 1 
84 6 107 2 223 1 765 2 245 2 572 2 86 1 709 2 350 2 300 1 820 2 301 1 111 1 170 2 582 1 472 1 329 3 33 1 715 1 273 1 536 2 423 1 115 2 772 2 585 1 179 3 656 2 454 2 657 1 211 5 456 2 563 2 16 1 336 1 384 4 19 2 664 1 338 1 808 2 724 2 833 1 49 2 188 1 669 2 342 2 409 1 837 1 838 3 160 1 242 2 24 1 639 1 697 4 815 2 100 2 194 2 101 2 196 2 731 1 842 2 346 1 782 1 440 2 222 1 
323 2 84 3 107 1 223 1 765 1 245 1 572 1 86 1 709 1 350 1 300 1 820 1 301 1 111 1 375 1 170 1 581 1 582 1 472 1 715 1 273 1 536 1 423 1 115 1 772 1 424 1 208 3 454 1 254 1 456 1 16 1 336 1 427 1 384 3 483 1 19 1 664 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 52 1 838 2 160 1 242 3 24 1 464 1 639 1 697 2 815 1 100 1 194 1 196 1 101 1 731 1 842 1 781 1 782 1 440 1 845 1 222 1 
323 1 84 3 223 1 765 1 245 1 572 1 86 1 709 1 300 1 820 1 301 1 111 1 170 1 472 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 208 1 454 1 456 1 16 1 336 1 384 3 664 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 2 160 1 242 1 24 1 639 1 100 1 815 1 194 1 101 1 196 1 842 1 731 1 440 1 782 1 222 1 
84 3 601 1 107 1 765 1 245 1 572 1 709 1 350 1 820 1 170 1 472 1 536 1 115 1 772 1 208 1 454 1 210 1 13 1 211 3 456 1 563 1 384 1 19 1 515 1 338 1 808 1 724 1 49 1 669 1 636 1 342 1 52 1 838 1 242 1 100 1 815 1 194 1 101 1 196 1 842 1 440 1 675 1 
601 1 
323 1 84 3 223 1 765 1 245 1 572 1 86 1 709 1 300 1 820 1 301 1 111 1 170 1 472 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 208 1 454 1 456 1 16 1 336 1 384 3 664 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 2 160 1 242 1 24 1 639 1 100 1 815 1 194 1 101 1 196 1 842 1 731 1 440 1 782 1 222 1 
323 1 84 4 223 1 765 1 245 1 572 1 86 1 709 1 448 1 300 1 820 1 301 1 111 1 170 1 472 1 582 1 715 1 273 1 536 1 423 1 115 1 772 1 208 1 454 1 210 1 456 1 16 1 336 1 384 3 664 1 515 1 831 1 808 1 833 1 49 1 188 1 342 1 409 1 52 1 837 1 838 2 160 1 242 1 24 1 639 1 815 1 100 1 194 1 101 1 196 1 842 1 731 1 782 1 440 1 222 1 
323 1 84 3 223 1 270 1 765 1 245 1 572 1 86 1 709 1 300 1 820 1 301 1 111 1 170 1 472 1 582 1 329 1 715 1 273 1 536 1 423 1 115 1 772 1 450 1 424 1 179 1 208 1 454 1 254 1 456 1 16 1 336 1 384 3 483 1 664 1 21 1 808 1 833 1 49 1 188 1 342 1 409 1 837 1 838 2 160 1 242 3 24 1 639 1 815 1 100 1 194 1 196 1 101 1 842 1 731 1 781 1 782 1 440 1 222 1 
131 1 84 10 107 1 223 1 764 1 765 1 708 2 369 2 245 1 572 1 85 1 86 1 136 1 709 1 448 1 300 1 139 1 820 1 301 1 577 1 111 1 304 2 400 1 170 1 582 1 472 1 715 1 273 1 142 1 536 1 423 1 115 1 772 1 424 1 741 1 454 3 91 1 211 4 456 2 16 1 336 1 384 4 148 2 19 1 337 1 664 1 71 1 258 1 216 1 541 1 338 1 96 1 590 1 156 2 432 1 831 1 724 1 808 3 833 1 360 1 635 1 49 1 188 1 669 2 342 4 409 1 837 1 838 3 160 1 242 9 24 1 411 2 80 1 639 1 615 1 815 1 100 2 194 2 196 2 101 1 731 1 103 1 842 1 781 1 782 1 439 1 440 2 363 1 222 1 413 1 
323 1 677 1 107 2 223 2 369 2 572 1 577 1 111 1 170 1 582 1 472 1 273 1 233 1 536 1 423 3 115 1 424 1 741 1 539 2 16 1 336 1 745 1 384 5 280 1 747 1 386 2 337 1 19 2 71 1 541 2 340 1 543 1 432 1 186 1 808 3 635 1 188 4 189 1 342 3 547 1 592 1 242 10 24 1 80 1 639 1 815 1 194 2 196 2 440 3 439 1 130 1 84 12 131 1 706 1 765 2 764 1 708 2 245 1 85 1 86 4 136 1 709 1 448 2 87 1 300 1 138 1 820 1 301 1 400 1 31 1 204 1 354 1 401 2 715 1 771 1 142 1 772 1 208 1 717 1 454 3 91 1 211 3 456 2 663 1 405 1 664 1 777 1 258 1 216 1 96 1 831 1 833 1 360 1 49 1 361 1 409 2 837 1 219 1 319 1 838 6 160 1 161 1 615 1 100 3 101 1 842 3 103 1 781 1 782 1 363 1 222 1 413 1 
107 1 223 1 369 2 572 1 577 1 111 1 170 1 472 1 582 1 273 1 536 1 423 1 115 1 424 1 741 1 336 1 16 1 384 4 337 1 19 1 71 1 541 1 338 1 432 1 808 3 635 1 188 1 342 4 242 9 80 1 24 1 639 1 815 1 194 2 196 2 440 2 439 1 84 10 131 1 765 1 764 1 708 2 245 1 85 1 86 1 136 1 709 1 448 1 139 1 300 1 820 1 301 1 304 2 400 1 715 1 142 1 772 1 355 1 454 3 91 1 211 4 456 2 148 2 664 1 258 1 216 1 96 1 831 1 156 2 724 1 360 1 833 1 49 1 669 2 409 1 837 1 838 3 160 1 411 2 615 1 100 2 101 1 842 1 103 1 731 1 568 1 781 1 782 1 363 1 413 1 222 1 
323 1 677 1 107 2 223 2 369 2 572 1 577 1 111 1 170 1 582 1 472 1 273 1 233 1 536 1 423 3 115 1 424 1 741 1 539 2 16 1 336 1 745 1 384 5 280 1 747 1 748 1 386 2 337 1 19 2 71 1 541 2 340 1 432 1 186 1 808 3 635 1 188 4 189 1 342 3 547 1 592 1 242 10 24 1 80 1 639 1 815 1 194 2 196 2 440 3 439 1 130 1 84 12 131 1 706 1 765 2 764 1 708 2 245 1 85 1 86 4 136 1 709 1 448 2 300 1 138 1 820 1 301 1 400 1 31 1 204 1 354 1 401 2 715 1 771 1 142 1 772 1 208 1 717 1 454 3 91 1 211 3 456 2 663 1 405 1 664 1 777 1 258 1 216 1 96 1 831 1 833 1 360 1 49 1 361 1 409 2 837 1 219 1 319 1 838 6 160 1 161 1 615 1 100 3 101 1 842 3 103 1 55 1 781 1 782 1 363 1 222 1 413 1 
131 1 84 8 107 2 223 1 764 1 765 1 708 2 369 2 245 1 572 1 85 1 86 1 136 1 350 1 709 1 448 1 300 1 820 1 301 1 577 1 111 1 400 1 170 1 582 1 472 1 329 1 715 1 273 1 536 1 423 1 115 1 772 1 424 1 179 1 656 1 741 1 454 3 91 1 211 2 456 2 16 1 336 1 384 4 19 2 337 1 664 1 71 1 258 1 216 1 541 1 96 1 432 1 831 1 724 1 808 3 833 1 360 1 635 1 49 1 188 1 342 2 409 1 837 1 838 3 160 1 242 9 24 1 80 1 639 1 697 2 615 1 815 1 100 2 194 2 196 2 101 1 731 1 103 1 842 1 781 1 782 1 439 1 440 2 363 1 222 1 413 1 
323 1 107 2 223 1 369 2 572 1 577 1 111 1 170 1 581 1 472 1 582 1 329 1 273 1 536 1 423 1 115 1 424 1 179 1 741 1 336 1 16 1 384 4 337 1 19 2 71 1 541 1 432 1 808 3 635 1 188 1 342 2 242 9 80 1 24 1 697 2 639 1 815 1 194 2 196 2 440 2 439 1 84 8 131 1 765 1 764 1 708 2 245 1 85 1 86 1 136 1 709 1 350 1 448 1 300 1 820 1 301 1 400 1 715 1 772 1 208 2 656 1 454 3 91 1 211 2 456 2 664 1 258 1 216 1 96 1 831 1 724 1 360 1 833 1 49 1 409 1 52 1 837 1 838 3 160 1 615 1 100 2 101 1 842 1 103 1 731 1 781 1 782 1 363 1 413 1 222 1 
40 1 835 1 329 1 608 1 270 1 748 1 233 1 179 1 340 1 55 1 453 1 158 1 
107 1 223 1 369 2 271 1 572 1 678 1 372 1 577 2 111 1 170 1 172 1 582 1 329 1 273 1 536 1 423 1 115 1 585 1 424 1 179 1 276 1 741 1 16 1 336 1 384 3 428 1 337 1 19 1 71 1 284 1 541 1 432 1 808 4 635 1 188 2 695 1 342 3 192 1 242 13 24 1 80 1 639 1 815 1 194 2 196 2 597 1 439 1 440 1 26 1 198 1 84 9 131 2 392 2 764 2 765 1 708 3 245 1 85 1 86 2 136 1 448 2 300 1 200 1 820 1 301 1 304 1 400 2 502 1 449 1 715 1 142 1 772 1 250 1 37 1 90 1 454 4 91 1 211 2 456 1 148 1 213 1 404 1 664 1 258 1 216 1 96 1 830 1 831 2 156 1 833 1 360 1 49 1 669 1 409 1 837 1 838 2 160 1 411 1 615 1 100 1 101 1 618 1 731 1 103 1 842 4 164 1 781 1 782 1 363 1 222 1 413 1 
107 1 223 1 271 2 369 2 572 1 678 1 577 2 111 1 170 1 582 1 472 1 329 2 273 1 233 1 536 1 423 1 115 1 629 1 424 1 179 2 276 1 741 1 119 1 480 1 16 1 336 1 384 3 483 1 428 1 337 1 19 1 71 1 284 1 541 1 432 1 808 4 635 1 188 2 695 1 342 3 192 1 490 1 242 14 24 1 80 1 639 1 815 1 194 2 196 2 597 1 439 1 440 1 26 1 198 1 131 2 84 9 392 2 764 2 765 1 708 3 818 1 245 1 85 1 86 2 136 1 448 2 300 1 820 1 301 1 304 1 400 2 502 1 449 1 715 1 142 1 772 1 250 1 37 1 90 1 454 4 91 1 211 2 254 1 456 1 148 1 213 1 404 1 664 1 258 1 216 1 96 1 830 1 156 1 831 2 833 1 360 1 49 1 669 1 409 1 837 1 838 2 160 1 411 1 615 1 100 1 101 1 618 1 731 1 842 4 164 1 103 1 781 1 782 1 363 1 222 1 413 1 
107 1 223 1 271 2 369 2 572 1 678 1 577 2 111 1 170 1 172 1 582 1 472 1 329 2 273 1 233 1 536 1 423 1 115 1 629 1 424 1 179 2 276 1 741 1 480 1 16 1 336 1 384 3 483 1 428 1 337 1 19 1 71 1 284 1 541 1 432 1 808 4 635 1 188 2 695 1 342 3 192 1 490 1 242 15 24 1 80 1 639 1 815 1 194 2 196 2 597 1 439 1 440 1 26 1 198 1 131 2 84 9 392 2 764 2 765 1 708 4 818 1 245 1 85 1 86 2 136 1 448 2 300 1 820 1 301 1 304 1 400 2 502 1 449 1 715 1 142 1 772 1 250 1 37 1 90 1 454 4 91 1 211 2 254 1 456 1 148 1 213 2 404 1 664 1 258 1 216 1 96 1 830 1 156 1 831 2 833 1 360 1 49 1 669 1 409 1 837 1 838 2 160 1 411 1 615 1 100 1 101 1 618 1 731 1 842 4 164 1 103 1 781 1 782 1 363 1 222 1 413 1 
677 1 323 1 59 1 107 2 223 2 369 4 271 1 572 1 621 1 110 1 372 1 228 1 577 1 111 1 113 1 170 1 582 1 65 1 329 1 473 1 273 1 233 1 536 1 423 3 115 1 629 1 424 2 179 1 741 1 119 1 539 2 480 1 16 1 336 1 745 1 384 5 280 1 483 1 183 1 747 1 386 2 19 2 337 1 71 1 284 1 541 2 634 1 340 1 752 1 432 1 186 2 808 3 635 1 188 5 695 1 189 1 592 1 547 1 342 3 490 1 242 17 24 1 80 1 639 1 815 1 194 2 196 2 597 2 440 3 439 1 130 1 198 1 26 1 442 1 131 1 84 16 706 1 646 1 444 1 392 4 764 1 765 2 708 4 818 1 245 1 85 1 86 6 136 1 767 1 709 1 448 4 300 1 138 1 820 1 301 1 247 1 502 1 400 1 31 1 204 1 88 1 352 1 354 1 401 2 140 1 715 1 142 1 771 1 505 1 34 1 772 1 559 1 208 1 717 1 454 3 209 1 91 1 211 3 402 1 254 1 456 2 663 1 213 1 405 1 664 1 777 1 258 1 216 1 96 1 831 3 158 1 833 1 360 1 48 1 49 1 218 1 361 1 835 1 409 2 837 1 836 1 53 1 319 1 219 1 838 6 728 1 160 1 161 1 615 1 100 3 567 1 101 1 842 5 103 1 781 2 782 1 363 1 222 1 413 1 
59 1 107 1 223 1 271 3 369 3 572 1 678 1 110 1 577 2 111 1 170 1 172 1 582 1 472 1 65 1 329 3 273 1 233 1 536 1 423 1 115 1 629 1 424 2 179 3 276 1 741 1 480 1 16 1 336 1 384 3 483 1 428 1 19 1 337 1 71 1 284 1 541 1 634 1 432 1 808 4 635 1 188 2 695 1 342 3 192 1 490 2 242 17 24 1 80 1 639 1 815 1 194 2 196 2 597 2 440 1 439 1 198 1 26 1 131 2 84 10 765 1 392 4 764 2 708 5 818 1 245 1 85 1 86 2 136 1 767 1 448 2 300 1 820 1 301 1 304 1 400 2 502 1 352 1 503 1 88 1 140 1 715 1 142 1 772 1 250 1 37 1 90 1 454 4 91 1 211 2 402 1 456 1 254 1 148 1 213 2 404 1 664 1 258 1 216 1 96 1 830 1 156 1 831 3 833 1 360 1 49 1 669 1 218 1 409 1 837 1 53 1 836 1 838 2 728 1 160 1 411 1 615 1 100 1 101 1 618 1 731 1 164 1 842 4 103 1 781 2 782 1 363 1 222 1 413 1 
107 1 223 1 271 3 369 3 572 1 678 1 110 1 532 1 623 1 577 2 111 1 170 1 172 1 582 1 472 1 65 1 329 3 273 1 233 1 536 1 423 1 115 1 629 1 474 1 424 2 179 3 276 1 741 1 381 1 480 1 16 1 336 1 384 3 483 1 428 1 19 1 337 1 71 1 284 1 541 1 634 1 432 1 808 4 635 1 188 2 695 1 342 3 192 1 490 2 242 17 24 1 80 1 594 1 639 1 815 1 194 2 196 2 597 1 440 1 439 1 198 1 26 1 131 2 84 10 765 1 392 4 764 2 708 5 818 1 245 1 85 1 86 2 136 1 448 2 300 1 820 1 301 1 304 1 400 2 502 1 503 1 88 1 715 1 142 1 772 1 250 1 37 1 90 1 454 4 91 1 211 2 402 1 456 1 254 1 148 1 213 2 404 1 664 1 258 1 216 1 96 1 155 1 830 1 156 1 831 3 833 1 360 1 49 1 669 1 218 1 409 1 837 1 836 1 838 2 728 1 160 1 411 1 615 1 100 1 101 1 618 1 731 1 164 1 842 4 103 1 781 2 782 1 363 1 222 1 413 1 
59 1 107 1 223 1 271 3 369 3 572 1 678 1 110 1 577 2 111 1 170 1 172 1 582 1 472 1 65 1 329 3 273 1 233 1 536 1 423 1 115 1 629 1 424 2 179 3 276 1 741 1 480 1 16 1 336 1 384 3 483 1 428 1 19 1 337 1 71 1 284 1 541 1 634 1 432 1 808 4 635 1 188 2 695 1 342 3 192 1 490 2 242 17 24 1 80 1 639 1 815 1 194 2 291 1 196 2 597 2 440 1 439 1 198 1 26 1 131 2 84 10 765 1 392 4 764 2 708 5 818 1 245 1 85 1 86 2 136 1 448 2 300 1 820 1 301 1 304 1 400 2 502 1 306 1 352 1 503 1 88 1 140 1 715 1 142 1 772 1 250 1 37 1 90 1 454 4 91 1 211 2 402 1 456 1 254 1 148 1 213 2 404 1 664 1 258 1 216 1 96 1 830 1 156 1 831 3 833 1 360 1 49 1 669 1 218 1 409 1 837 1 53 1 836 1 838 2 728 1 160 1 411 1 615 1 100 1 101 1 618 1 731 1 164 1 842 4 103 1 781 2 782 1 363 1 222 1 413 1 
107 1 223 1 271 3 369 3 572 1 678 1 110 1 532 1 623 1 577 2 111 1 170 1 172 1 582 1 472 1 65 1 329 3 273 1 233 1 536 1 423 1 115 1 629 1 474 1 424 2 179 3 276 1 741 1 381 1 480 1 16 1 336 1 384 3 483 1 428 1 19 1 337 1 71 1 284 1 541 1 634 1 432 1 808 4 635 1 188 2 695 1 342 3 192 1 490 2 242 17 24 1 80 1 639 1 815 1 194 2 196 2 597 1 440 1 439 1 198 1 26 1 131 2 84 10 765 1 392 4 764 2 708 5 818 1 245 1 85 1 86 2 136 1 448 2 300 1 820 1 301 1 304 1 400 2 502 1 503 1 88 1 715 1 142 1 772 1 250 1 37 1 90 1 454 4 91 1 211 2 402 1 456 1 254 1 148 1 213 2 404 1 664 1 258 1 216 1 96 1 155 1 830 1 98 1 156 1 831 3 833 1 360 1 49 1 669 1 218 1 409 1 837 1 836 1 838 2 728 1 160 1 411 1 615 1 100 1 101 1 618 1 731 1 164 1 842 4 103 1 781 2 782 1 526 1 363 1 222 1 413 1 
503 2 88 2 490 2 687 1 
82 1 803 1 375 1 464 2 742 1 
545 1 484 1 614 1 61 1 
355 1 568 1 17 1 
821 1 590 1 
329 1 608 1 175 1 796 1 179 1 656 1 
179 1 329 1 608 1 656 1 796 1 
179 1 329 1 608 1 656 1 796 1 
179 1 329 1 608 1 656 1 796 1 
179 1 329 1 608 1 656 1 796 1 
744 1 746 1 240 1 253 1 
716 1 753 1 76 1 5 1 
601 1 610 1 636 1 675 1 
519 1 329 1 608 1 450 1 179 1 622 1 
519 1 329 1 608 1 282 1 179 1 622 1 
519 1 190 1 329 1 608 1 179 1 622 1 
464 1 630 1 466 1 286 1 375 1 763 1 742 2 
519 1 329 1 608 1 179 1 622 1 209 1 
519 1 329 1 608 1 271 1 179 1 622 1 
706 1 233 1 
191 2 141 1 233 1 447 2 286 1 762 1 112 2 763 1 
539 1 233 1 
233 1 150 1 
340 1 233 1 
490 1 
490 1 
673 1 
673 1 
673 1 368 1 
670 1 421 1 245 1 295 1 
814 1 
670 1 245 1 24 1 
245 1 24 1 
396 1 627 1 493 1 670 1 421 1 28 1 245 1 24 1 
627 1 493 1 670 1 245 1 
627 1 493 1 670 1 245 1 
396 1 627 2 493 1 421 1 643 1 28 1 245 1 220 1 814 1 
396 1 421 1 28 2 245 1 24 1 220 2 814 2 
627 1 670 1 643 1 245 1 
627 1 670 1 643 1 245 1 
447 1 
141 1 
40 1 
835 1 158 1 
158 1 

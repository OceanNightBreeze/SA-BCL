#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.codehaus.jparsec.DefaultSourceLocatorTest:testLocate_onlyOneLineBreakCharacter()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLocate_emptySource()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_firstElementIsEqual()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_firstElementIsBigger()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_secondElementIsEqual()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_secondElementIsBigger()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_lastElementIsEqual()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_lastElementIsBigger()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_allSmaller()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_oneEqualElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_oneBiggerElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_oneSmallerElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testBinarySearch_noElement()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_noLineBreaksScanned()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_inFirstLine()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstLineBreak()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstCharInSecondLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_lastCharInSecondLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstCharInThirdLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_lastCharInThirdLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_firstCharInLastLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLookup_secondCharInLastLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_indexOutOfBounds()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_indexOnEof()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_spansLines()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testScanTo_lastCharOfLine()V PASSED
org.codehaus.jparsec.DefaultSourceLocatorTest:testLocate()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.EmptyParseErrorTest:testEmptyParseError()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_null()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_nullError()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_failure()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testToString_expected()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.error.ErrorReporterTest:testToString_unexpected()V PASSED
org.codehaus.jparsec.error.ErrorReporterTest:testReportList()V PASSED
org.codehaus.jparsec.error.LocationTest:testToString()V PASSED
org.codehaus.jparsec.error.LocationTest:testEquals()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToInteger()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToLowerCase()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToUpperCase()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToEnum()V PASSED
org.codehaus.jparsec.functors.MapsTest:testIdentity()V PASSED
org.codehaus.jparsec.functors.MapsTest:testConstant()V PASSED
org.codehaus.jparsec.functors.MapsTest:testJmap()V PASSED
org.codehaus.jparsec.functors.MapsTest:testMapToString()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToPair()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToTuple3()V PASSED
org.codehaus.jparsec.functors.MapsTest:testToTuple4()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.functors.MapsTest:testToTuple5()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testPair()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testTuple2()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testTuple3()V PASSED
org.codehaus.jparsec.functors.TuplesTest:testTuple4()V FAILED junit.framework.AssertionFailedError 724 
org.codehaus.jparsec.functors.TuplesTest:testTuple5()V PASSED
org.codehaus.jparsec.IndentationTest:testInlineWhitespace()V PASSED
org.codehaus.jparsec.IndentationTest:testLineContinuation()V ERROR java.lang.ArithmeticException (78,300) 
org.codehaus.jparsec.IndentationTest:testInlineWhitespaces()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.IndentationTest:testWhitespaces()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.IndentationTest:testAnalyzeIndentations()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.IndentationTest:testIndent()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.IndentationTest:testOutdent()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.IndentationTest:testLexer()V ERROR org.codehaus.jparsec.error.ParserException 218 553 195 601 553 276 179 553 428 553 794 553 271 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.InternalFunctorsTest:testIsTokenType()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testTokenWithSameValue()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testFirstOfTwo()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testLastOfTwo()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testLastOfThree()V PASSED
org.codehaus.jparsec.InternalFunctorsTest:testLastOfFour()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.InternalFunctorsTest:testLastOfFive()V PASSED
org.codehaus.jparsec.KeywordsTest:testLexicon_caseSensitive()V ERROR java.lang.NullPointerException 106 
org.codehaus.jparsec.KeywordsTest:testLexicon_caseInsensitive()V ERROR java.lang.NullPointerException 106 
org.codehaus.jparsec.KeywordsTest:testUnique()V PASSED
org.codehaus.jparsec.LexiconTest:testWord()V PASSED
org.codehaus.jparsec.LexiconTest:testWord_throwsForNullValue()V PASSED
org.codehaus.jparsec.ListFactoriesTest:testArrayListFactory()V PASSED
org.codehaus.jparsec.ListFactoriesTest:testArrayListFactoryWithFirstElement()V PASSED
org.codehaus.jparsec.misc.CurryTest:testName()V PASSED
org.codehaus.jparsec.misc.CurryTest:testToString()V PASSED
org.codehaus.jparsec.misc.CurryTest:testEquals()V PASSED
org.codehaus.jparsec.misc.CurryTest:testInfix()V ERROR java.lang.NullPointerException 807 (625,765) 
org.codehaus.jparsec.misc.CurryTest:testInfix_onlyOneUnskippedOperator()V ERROR java.lang.NullPointerException 807 (625,765) (625,765) 
org.codehaus.jparsec.misc.CurryTest:testInfix_multiOp()V ERROR java.lang.NullPointerException 807 (625,765) 
org.codehaus.jparsec.misc.CurryTest:testSequence()V ERROR java.lang.NullPointerException 703 485 511 
org.codehaus.jparsec.misc.CurryTest:testUnary()V ERROR java.lang.NullPointerException 807 56 738 
org.codehaus.jparsec.misc.CurryTest:testBinary()V ERROR java.lang.NullPointerException 807 489 235 
org.codehaus.jparsec.misc.CurryTest:testPrefix()V ERROR java.lang.NullPointerException 807 (8,768) 
org.codehaus.jparsec.misc.CurryTest:testPrefix_onlyOneUnskippedOperator()V ERROR java.lang.NullPointerException 807 (8,768) (8,768) 
org.codehaus.jparsec.misc.CurryTest:testPrefix_multiOp()V ERROR java.lang.NullPointerException 807 (8,768) 
org.codehaus.jparsec.misc.CurryTest:testPostfix()V ERROR java.lang.NullPointerException 807 (101,747) 
org.codehaus.jparsec.misc.CurryTest:testPostfix_onlyOneUnskippedOperator()V ERROR java.lang.NullPointerException 807 (101,747) (101,747) 
org.codehaus.jparsec.misc.CurryTest:testPostfix_multiOp()V ERROR java.lang.NullPointerException 807 (101,747) 
org.codehaus.jparsec.misc.CurryTest:testSequence_propagatesError()V ERROR java.lang.NullPointerException 703 485 511 
org.codehaus.jparsec.misc.CurryTest:testSequence_propagatesUncheckedException()V ERROR java.lang.NullPointerException 703 485 511 
org.codehaus.jparsec.misc.CurryTest:testSequence_propagatesCheckedException()V ERROR java.lang.NullPointerException 703 485 511 
org.codehaus.jparsec.misc.CurryTest:testAbstractClass()V PASSED
org.codehaus.jparsec.misc.CurryTest:testNoPublicConstructor()V PASSED
org.codehaus.jparsec.misc.CurryTest:testAmbiguousConstructor()V PASSED
org.codehaus.jparsec.misc.CurryTest:testVarargConstructor()V PASSED
org.codehaus.jparsec.misc.CurryTest:testTooManyCurryArgs()V PASSED
org.codehaus.jparsec.misc.CurryTest:testCurryArgTypeMismatch()V PASSED
org.codehaus.jparsec.misc.CurryTest:testAmbiguousCurryArg()V PASSED
org.codehaus.jparsec.misc.CurryTest:testWrongArgumentType()V ERROR java.lang.NullPointerException 807 489 
org.codehaus.jparsec.misc.CurryTest:testAsUnary_wrongParamNumber()V ERROR java.lang.NullPointerException 807 56 
org.codehaus.jparsec.misc.CurryTest:testAsBinary_wrongParamNumber()V ERROR java.lang.NullPointerException 807 489 
org.codehaus.jparsec.misc.CurryTest:testPrefix_wrongParamNumber()V ERROR java.lang.NullPointerException 807 (8,768) 
org.codehaus.jparsec.misc.CurryTest:testPrefix_multiOp_wrongParamNumber()V ERROR java.lang.NullPointerException 807 (8,768) 
org.codehaus.jparsec.misc.CurryTest:testPostfix_wrongParamNumber()V ERROR java.lang.NullPointerException 807 (101,747) 
org.codehaus.jparsec.misc.CurryTest:testPostfix_multiOp_wrongParamNumber()V ERROR java.lang.NullPointerException 807 (101,747) 
org.codehaus.jparsec.misc.CurryTest:testInfix_wrongParamNumber()V ERROR java.lang.NullPointerException 807 (625,765) 
org.codehaus.jparsec.misc.CurryTest:testInfix_multiOp_wrongParamNumber()V ERROR java.lang.NullPointerException 807 (625,765) 
org.codehaus.jparsec.misc.CurryTest:testInvoke_wrongParameterNumber()V ERROR java.lang.NullPointerException 703 485 421 
org.codehaus.jparsec.misc.MapperTest:testName()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInfix_multiOp()V PASSED
org.codehaus.jparsec.misc.MapperTest:testSequence()V PASSED
org.codehaus.jparsec.misc.MapperTest:testUnary()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.misc.MapperTest:testBinary()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPrefix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPrefix_multiOp()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPostfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testPostfix_multiOp()V ERROR java.lang.ArrayIndexOutOfBoundsException 
org.codehaus.jparsec.misc.MapperTest:testMap_runtimeExceptionPropagated()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMap_exceptionPropagated()V PASSED
org.codehaus.jparsec.misc.MapperTest:testNonGenericMapper()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMissingMapperMethod()V PASSED
org.codehaus.jparsec.misc.MapperTest:testAmbiguousMapperMethods()V PASSED
org.codehaus.jparsec.misc.MapperTest:testIncompatibleReturnType()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.misc.MapperTest:testIncompatibleGenericReturnType()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.misc.MapperTest:testMapperMethodInSuperclass()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMap_errorPropagated()V PASSED
org.codehaus.jparsec.misc.MapperTest:testCurry_sequence()V ERROR java.lang.NullPointerException 703 485 511 
org.codehaus.jparsec.misc.MapperTest:testAsMap()V PASSED
org.codehaus.jparsec.misc.MapperTest:testWrongParameters()V PASSED
org.codehaus.jparsec.misc.MapperTest:testWrongParametersForSequencing()V ERROR java.lang.NullPointerException 703 485 511 265 
org.codehaus.jparsec.misc.MapperTest:testTargetTypeUnknownAtConstructionTime()V PASSED
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForSequence()V ERROR java.lang.NullPointerException 703 485 511 
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForPrefix()V ERROR java.lang.NullPointerException 807 (8,768) 
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForPostfix()V ERROR java.lang.NullPointerException 807 (101,747) 
org.codehaus.jparsec.misc.MapperTest:testParametersSkippedForInfix()V ERROR java.lang.NullPointerException 807 (625,765) (625,765) 
org.codehaus.jparsec.misc.MapperTest:testInvalidSkipForPrefix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInvalidSkipForPostfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testInvalidSkipForInfix()V PASSED
org.codehaus.jparsec.misc.MapperTest:testWrongType()V PASSED
org.codehaus.jparsec.misc.MapperTest:testMapperMethodInSubclass()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testGetClassName()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testIsInstance()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testIsAssignable()V PASSED
org.codehaus.jparsec.misc.ReflectionTest:testWrapperClass()V PASSED
org.codehaus.jparsec.OperatorsTest:testSort()V FAILED junit.framework.AssertionFailedError 193 
org.codehaus.jparsec.OperatorsTest:testLexicon()V ERROR java.lang.NullPointerException 409 598 
org.codehaus.jparsec.OperatorTableExpressionTest:testBuildExpressionParser()V ERROR java.lang.NullPointerException (471,537) 
org.codehaus.jparsec.OperatorTableExpressionTest:testEmptyOperatorTable()V PASSED
org.codehaus.jparsec.OperatorTableTest:testAssociativityOrder()V FAILED junit.framework.AssertionFailedError 105 563 
org.codehaus.jparsec.OperatorTableTest:testOperatorOrder()V FAILED junit.framework.AssertionFailedError 105 563 
org.codehaus.jparsec.OperatorTableTest:testGetOperators()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testEmptyTokenCounts()V ERROR java.lang.NullPointerException 106 (470,805) 
org.codehaus.jparsec.ParserErrorHandlingTest:testNotOverridesNever()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testExpectOverridesNot()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testFailureOverridesExpect()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testFailureOverridesExplicitExpect()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testMoreRelevantErrorWins()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testFirstNeverWins()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testFirstNotWins()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserErrorHandlingTest:testFirstFailureWins()V PASSED
org.codehaus.jparsec.ParserErrorHandlingTest:testExpectMerged()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserErrorHandlingTest:testExpectedMerged()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesPlus()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesOr()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesLonger()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesShorter()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testErrorSurvivesRepetition()V FAILED junit.framework.AssertionFailedError (112,217,575) 716 
org.codehaus.jparsec.ParserErrorHandlingTest:testOuterExpectWins()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserErrorHandlingTest:testTokenLevelError()V ERROR java.lang.NullPointerException 106 (470,805) 
org.codehaus.jparsec.ParserReferenceTest:testLazy()V PASSED
org.codehaus.jparsec.ParserReferenceTest:testUninitializedLazy()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParsersTest:testConstant()V PASSED
org.codehaus.jparsec.ParsersTest:testPair()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence()V PASSED
org.codehaus.jparsec.ParsersTest:testAlways()V PASSED
org.codehaus.jparsec.ParsersTest:testNever()V PASSED
org.codehaus.jparsec.ParsersTest:testBetween()V PASSED
org.codehaus.jparsec.ParsersTest:testEof()V PASSED
org.codehaus.jparsec.ParsersTest:testRunnable()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_4Parsers()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.ParsersTest:testSequence_5Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withIterable()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testTuple_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testTuple_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testTuple_4Parsers()V FAILED junit.framework.AssertionFailedError (471,537) 
org.codehaus.jparsec.ParsersTest:testTuple_5Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testArray()V PASSED
org.codehaus.jparsec.ParsersTest:testList()V PASSED
org.codehaus.jparsec.ParsersTest:testFail()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testPlus_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_withIterable()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_2Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_3Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_4Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_5Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_6Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_7Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_8Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_9Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testOr_10Parsers()V PASSED
org.codehaus.jparsec.ParsersTest:testLonger()V PASSED
org.codehaus.jparsec.ParsersTest:testShorter()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParsersTest:testLongest_0Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testLongest_1Parser()V PASSED
org.codehaus.jparsec.ParsersTest:testLongest()V PASSED
org.codehaus.jparsec.ParsersTest:testShortest_0Parser()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.ParsersTest:testShortest_1Parser()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.ParsersTest:testShortest()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParsersTest:testExpect()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParsersTest:testUnexpected()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap2()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap2_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap3()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap3_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap4()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap4_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap5()V PASSED
org.codehaus.jparsec.ParsersTest:testSequence_withMap5_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testToken()V PASSED
org.codehaus.jparsec.ParsersTest:testToken_fails()V PASSED
org.codehaus.jparsec.ParsersTest:testTokenType()V PASSED
org.codehaus.jparsec.ParsersTest:testAnyToken()V PASSED
org.codehaus.jparsec.ParsersTest:testIndex()V FAILED junit.framework.AssertionFailedError (471,537) 
org.codehaus.jparsec.ParsersTest:testToArray()V PASSED
org.codehaus.jparsec.ParsersTest:testToArrayWithIteration()V PASSED
org.codehaus.jparsec.ParserTest:testLexer()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testPrefix()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testPostfix()V PASSED
org.codehaus.jparsec.ParserTest:testBetween()V PASSED
org.codehaus.jparsec.ParserTest:testToken()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testParse()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testSource()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testNext_withMap()V ERROR org.codehaus.jparsec.error.ParserException 218 553 179 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testNext_firstParserFails()V PASSED
org.codehaus.jparsec.ParserTest:testNext_nextParserFails()V FAILED java.lang.AssertionError 276 179 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (112,217,575) 
org.codehaus.jparsec.ParserTest:testNext()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testRetn()V PASSED
org.codehaus.jparsec.ParserTest:testFollowedBy()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testNotFollowedBy()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testSkipTimes()V PASSED
org.codehaus.jparsec.ParserTest:testTimes()V PASSED
org.codehaus.jparsec.ParserTest:testTimes_range()V PASSED
org.codehaus.jparsec.ParserTest:testSkipMany()V PASSED
org.codehaus.jparsec.ParserTest:testSkipMany1()V PASSED
org.codehaus.jparsec.ParserTest:testMany1()V PASSED
org.codehaus.jparsec.ParserTest:testMany()V PASSED
org.codehaus.jparsec.ParserTest:testOr()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testOptional()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testOptional_withDefaultValue()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testNot()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testPeek()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testAtomic()V PASSED
org.codehaus.jparsec.ParserTest:testStep()V PASSED
org.codehaus.jparsec.ParserTest:testStep_negativeStep()V PASSED
org.codehaus.jparsec.ParserTest:testSucceeds()V PASSED
org.codehaus.jparsec.ParserTest:testFails()V PASSED
org.codehaus.jparsec.ParserTest:testIfElse()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testIfElse_withNext()V PASSED
org.codehaus.jparsec.ParserTest:testLabel()V PASSED
org.codehaus.jparsec.ParserTest:testCast()V PASSED
org.codehaus.jparsec.ParserTest:testMap()V FAILED java.lang.AssertionError 271 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testMap_fails()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testSepBy1()V ERROR org.codehaus.jparsec.error.ParserException 218 553 179 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) 284 
org.codehaus.jparsec.ParserTest:testSepBy()V ERROR org.codehaus.jparsec.error.ParserException 218 553 179 553 428 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) 284 
org.codehaus.jparsec.ParserTest:testEndBy()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testEndBy1()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testSepEndBy1()V ERROR org.codehaus.jparsec.error.ParserException 218 553 195 601 553 276 179 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) 284 
org.codehaus.jparsec.ParserTest:testSepEndBy()V ERROR org.codehaus.jparsec.error.ParserException 218 553 195 601 553 276 179 553 428 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) 284 
org.codehaus.jparsec.ParserTest:testEmptyListParser_toString()V PASSED
org.codehaus.jparsec.ParserTest:testPrefix_noOperator()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testPostfix_noOperator()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testInfixn_noOperator()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.ParserTest:testInfixn()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.ParserTest:testInfixl_noOperator()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.ParserTest:testInfixl()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.ParserTest:testInfixl_fails()V PASSED
org.codehaus.jparsec.ParserTest:testInfixr_noOperator()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testInfixr()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 195 (386,615) 549 553 794 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.ParserTest:testInfixr_fails()V PASSED
org.codehaus.jparsec.ParserTest:testFrom()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testFrom_throwsOnScanners()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ParserTest:testFrom_withDelimiter()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) 284 
org.codehaus.jparsec.ParserTest:testCopy()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testAlways()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNever()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testOr()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNot()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsChar()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNotChar()V ERROR java.lang.NullPointerException 
org.codehaus.jparsec.pattern.CharPredicatesTest:testRange()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsDigit()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNotRange()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testAmong()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testNotAmong()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsHexDigit()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsUpperCase()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsLowerCase()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsWhitespace()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlpha()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlpha_()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlphaNumeric()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsAlphaNumeric_()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testIsLetter()V PASSED
org.codehaus.jparsec.pattern.CharPredicatesTest:testAnd()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testWord()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSequence()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testAlways()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testNever()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testEof()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testLonger()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testShorter()V ERROR java.lang.NullPointerException 
org.codehaus.jparsec.pattern.PatternsTest:testLongest()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testShortest()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testMany1()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testMany()V ERROR java.lang.ArithmeticException (78,300) 
org.codehaus.jparsec.pattern.PatternsTest:testOr()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testIsChar()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testRange()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testAmong()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testAnd()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testAnyChar()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testHasAtLeast()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testHasExact()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testIsChar_withPredicate()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testEscaped()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testLineComment()V ERROR java.lang.NullPointerException (78,300) 
org.codehaus.jparsec.pattern.PatternsTest:testString()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testStringCaseInsensitive()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testNotString()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testNotStringCaseInsensitive()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testRepeat()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testRepeat_negativeNumberThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testMany_withMin()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testMany_negativeNumberThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_withMin()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_negativeMaxThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_negativeMinThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testSome_minBiggerThanMaxThrows()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testDecimalL()V ERROR java.lang.ArithmeticException (78,300) 
org.codehaus.jparsec.pattern.PatternsTest:testDecimalR()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testDecimal()V ERROR java.lang.ArithmeticException (78,300) 
org.codehaus.jparsec.pattern.PatternsTest:testInteger()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testOctInteger()V ERROR java.lang.ArithmeticException (78,300) 
org.codehaus.jparsec.pattern.PatternsTest:testDecInteger()V ERROR java.lang.ArithmeticException (78,300) 
org.codehaus.jparsec.pattern.PatternsTest:testHexInteger()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testScientificNumber()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testRegex()V PASSED
org.codehaus.jparsec.pattern.PatternsTest:testRegexpPattern()V FAILED junit.framework.AssertionFailedError 
org.codehaus.jparsec.pattern.PatternsTest:testRegexpModifiers()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testNext()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany1()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testOr()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testOptional()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testNot()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testPeek()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testIfElse()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testRepeat()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany_withMin()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testSome()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testSome_withMin()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testRepeat_throwsForNegativeNumber()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testMany_throwsForNegativeMin()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testSome_throwsForNegativeMax()V PASSED
org.codehaus.jparsec.pattern.PatternTest:testSome_throwsForNegativeMinMax()V PASSED
org.codehaus.jparsec.ScannersTest:testWhitespaces()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testIsChar()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testNotChar()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testAmong()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testNotAmong()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testAnyChar()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testLineComment()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testString()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testStringCaseInsensitive()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testDecimal()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (731,744) 
org.codehaus.jparsec.ScannersTest:testInteger()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (731,744) 
org.codehaus.jparsec.ScannersTest:testOctInteger()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (731,744) 
org.codehaus.jparsec.ScannersTest:testDecInteger()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (731,744) 
org.codehaus.jparsec.ScannersTest:testHexInteger()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (731,744) 
org.codehaus.jparsec.ScannersTest:testIdentifier()V PASSED
org.codehaus.jparsec.ScannersTest:testScientificNotation()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (731,744) 
org.codehaus.jparsec.ScannersTest:testMany_withCharPredicate()V PASSED
org.codehaus.jparsec.ScannersTest:testMany1_withCharPredicate()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testMany_withPattern()V PASSED
org.codehaus.jparsec.ScannersTest:testMany_withPatternThatConsumesNoInput()V PASSED
org.codehaus.jparsec.ScannersTest:testMany1_withPattern()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testMany1_withPatternThatConsumesNoInput()V PASSED
org.codehaus.jparsec.ScannersTest:testPattern()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testAmong_noChars()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testAmong_oneChar()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testNotAmong_noChars()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testNotAmong_oneChar()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testJavaLineComment()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testSqlLineComment()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testHaskellLineComment()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testDoubleQuoteString()V PASSED
org.codehaus.jparsec.ScannersTest:testSingleQuoteString()V PASSED
org.codehaus.jparsec.ScannersTest:testSingleQuoteChar()V PASSED
org.codehaus.jparsec.ScannersTest:testJavaDelimiter()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testSqlDelimiter()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testHaskellDelimiter()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testJavaBlockComment()V PASSED
org.codehaus.jparsec.ScannersTest:testSqlBlockComment()V PASSED
org.codehaus.jparsec.ScannersTest:testHaskellBlockComment()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testBlockComment_emptyQuotes()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedPattern()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment_withEmptyQuotedPattern()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedPatternThatMismatches()V PASSED
org.codehaus.jparsec.ScannersTest:testBlockComment_withParsers()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedParserThatMatchesEmpty()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testBlockComment_withQuotedParserThatMismatches()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testNestableBlockComment()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_withQuotedPattern()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_withQuotedParser()V PASSED
org.codehaus.jparsec.ScannersTest:testNestedBlockComment_partialMatch()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testNestedBlockComment_notLogicalPartialMatch()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (663,791) 
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_quotedConsumesNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_openQuoteConsumesNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNestableBlockComment_closeQuoteConsumesNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testQuoted_byChar()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 232 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (731,744) 
org.codehaus.jparsec.ScannersTest:testQuoted()V FAILED junit.framework.AssertionFailedError (112,217,575) 
org.codehaus.jparsec.ScannersTest:testQuoted_quotedParserConsumeNoChar()V PASSED
org.codehaus.jparsec.ScannersTest:testNestedScanner()V PASSED
org.codehaus.jparsec.TerminalsTest:testEquals()V PASSED
org.codehaus.jparsec.TerminalsTest:testDoubleQuoteString()V PASSED
org.codehaus.jparsec.TerminalsTest:testSingleQuoteString()V FAILED junit.framework.AssertionFailedError (471,537) 
org.codehaus.jparsec.TerminalsTest:testSingleQuoteChar()V PASSED
org.codehaus.jparsec.TerminalsTest:testDecimalLiteralTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testIntegerLiteralTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testScientificNumberLiteralTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testLongLiteralDecTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 218 553 271 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testLongLiteralHexTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 218 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testTokenizeHexAsLong_throwsIfStringIsTooShort()V PASSED
org.codehaus.jparsec.TerminalsTest:testLongLiteralOctTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 218 553 271 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testLongLiteralTokenizer()V ERROR org.codehaus.jparsec.error.ParserException 218 553 271 553 428 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testIdentifierTokenizer()V PASSED
org.codehaus.jparsec.TerminalsTest:testCharLiteralParser()V PASSED
org.codehaus.jparsec.TerminalsTest:testLongLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 218 553 271 552 553 179 553 428 553 794 553 271 553 643 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testStringLiteralParser()V FAILED junit.framework.AssertionFailedError (471,537) 
org.codehaus.jparsec.TerminalsTest:testIdentifierParser()V PASSED
org.codehaus.jparsec.TerminalsTest:testIntegerLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testDecimalLiteralParser()V ERROR org.codehaus.jparsec.error.ParserException 218 553 271 552 553 179 553 428 553 794 553 271 553 643 553 794 553 579 (327,516,656) (327,516,656) (327,516,656) (471,537) 
org.codehaus.jparsec.TerminalsTest:testFromFragment()V PASSED
org.codehaus.jparsec.TerminalsTest:testToken_noTokenName()V PASSED
org.codehaus.jparsec.TerminalsTest:testToken_oneTokenNameOnly()V ERROR java.lang.IllegalArgumentException 456 106 (470,805) 
org.codehaus.jparsec.TerminalsTest:testToken_tokenNamesListed()V ERROR java.lang.IllegalArgumentException 456 106 (470,805) 
org.codehaus.jparsec.TerminalsTest:testPhrase()V ERROR java.lang.ArrayIndexOutOfBoundsException 253 
org.codehaus.jparsec.TerminalsTest:testCaseSensitive()V ERROR java.lang.NullPointerException 106 (470,805) 
org.codehaus.jparsec.TerminalsTest:testCaseInsensitive()V ERROR java.lang.NullPointerException 106 (470,805) 
org.codehaus.jparsec.TerminalsTest:testCaseSensitive_withScanner()V ERROR java.lang.NullPointerException 106 (470,805) 
org.codehaus.jparsec.TerminalsTest:testCaseInsensitive_withScanner()V ERROR java.lang.NullPointerException 106 (470,805) 
org.codehaus.jparsec.TerminalsTest:testCheckDup()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testScientificNotation()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testDoubleQuoteString()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testSingleQuoteString()V FAILED junit.framework.ComparisonFailure 
org.codehaus.jparsec.TokenizerMapsTest:testSingleQuoteChar()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testFragment()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testReservedFragment()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testIdentifierFragment()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testIntegerFragment()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testDecimalFragment()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testDecAsLong()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testOctAsLong()V PASSED
org.codehaus.jparsec.TokenizerMapsTest:testHexAsLong()V PASSED
org.codehaus.jparsec.TokensTest:testWord()V PASSED
org.codehaus.jparsec.TokensTest:testDecimal()V PASSED
org.codehaus.jparsec.TokensTest:testInteger()V PASSED
org.codehaus.jparsec.TokensTest:testScientificNumber()V PASSED
org.codehaus.jparsec.TokensTest:testFragment()V PASSED
org.codehaus.jparsec.TokensTest:testReserved()V PASSED
org.codehaus.jparsec.TokenTest:testToString()V PASSED
org.codehaus.jparsec.TokenTest:testEquals()V PASSED
org.codehaus.jparsec.TokenTest:testIndex()V PASSED
org.codehaus.jparsec.TokenTest:testLength()V PASSED
org.codehaus.jparsec.TokenTest:testValue()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckArgument_noThrowIfConditionIsTrue()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckArgument_throwsIfConditionIsFalse()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckState_noThrowIfConditionIsTrue()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckState_throwsIfConditionIsFalse()V PASSED
org.codehaus.jparsec.util.ChecksTest:testCheckNotNullState_throwsIfObjectIsNull()V PASSED
org.codehaus.jparsec.util.IntListTest:testToArray()V PASSED
org.codehaus.jparsec.util.IntListTest:testCalcSize()V PASSED
org.codehaus.jparsec.util.IntListTest:testConstructor()V PASSED
org.codehaus.jparsec.util.IntListTest:testConstructor_withCapacity()V PASSED
org.codehaus.jparsec.util.IntListTest:testGet()V PASSED
org.codehaus.jparsec.util.IntListTest:testGet_throwsForNegativeIndex()V PASSED
org.codehaus.jparsec.util.IntListTest:testGet_throwsForIndexOutOfBounds()V PASSED
org.codehaus.jparsec.util.IntListTest:testSet()V ERROR java.lang.ArrayIndexOutOfBoundsException 551 
org.codehaus.jparsec.util.IntListTest:testEnsureCapacity()V ERROR java.lang.ArrayIndexOutOfBoundsException 551 
org.codehaus.jparsec.util.IntListTest:testSet_throwsForNegativeIndex()V PASSED
org.codehaus.jparsec.util.IntListTest:testSet_throwsForIndexOutOfBounds()V PASSED
org.codehaus.jparsec.util.ObjectsTest:testEquals()V PASSED
org.codehaus.jparsec.util.ObjectsTest:testHashCode()V PASSED
org.codehaus.jparsec.util.ObjectsTest:testIn()V PASSED
org.codehaus.jparsec.util.StringsTest:testJoin()V PASSED
org.codehaus.jparsec.util.StringsTest:testJoin_withStringBuilder()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.codehaus.jparsec.Parser:getReturn(Lorg.codehaus.jparsec.ParseContext;)Ljava.lang.Object;
org.codehaus.jparsec.OperatorTable:postfix(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.pattern.Pattern:not()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser.2:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.1:isChar(C)Z
org.codehaus.jparsec.pattern.Pattern:or(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.RepeatAtLeastParser:RepeatAtLeastParser(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ListFactory;)V
org.codehaus.jparsec.misc.Mapper:prefix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NumberLiteralsTranslator:tokenizeHexAsLong(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.misc.MapperTest.CharSequenceSubMap:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates:not(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Scanners:blockComment(Ljava.lang.String;Ljava.lang.String;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:between(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.error.ParserException:toErrorMessage(Ljava.lang.String;Ljava.lang.String;Lorg.codehaus.jparsec.error.ParseErrorDetails;Lorg.codehaus.jparsec.error.Location;)Ljava.lang.String; | OPERATOR | 2972 | > -> <=
org.codehaus.jparsec.TokenizerMaps.2:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.functors.Maps:toTuple3()Lorg.codehaus.jparsec.functors.Map3;
org.codehaus.jparsec.misc.Mapper.10:map([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns.21:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.functors.Maps.5:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple5;
org.codehaus.jparsec.misc.Mapper.6:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Binary;
org.codehaus.jparsec.Parser:notFollowedBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps.9:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.ListFactories.2:newList()Ljava.util.List;
org.codehaus.jparsec.pattern.Pattern:optional()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ParseContext.2:getFailureMessage()Ljava.lang.String;
org.codehaus.jparsec.Parsers:tokens(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.27:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.BindNextParser:BindNextParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map;)V
org.codehaus.jparsec.Tokens.Fragment:toString()Ljava.lang.String;
org.codehaus.jparsec.UnexpectedParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Sequence3Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.error.Location:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.pattern.Pattern:repeat(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.CharPredicates:notRange(CC)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.DefaultSourceLocatorTest:addLineBreaks(Lorg.codehaus.jparsec.DefaultSourceLocator;[I)V
org.codehaus.jparsec.Parsers:longer(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.MapperTest.9:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.Scanners:notChar(CLjava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TokenizerMaps.1:toString()Ljava.lang.String;
org.codehaus.jparsec.util.IntList:IntList(I)V
org.codehaus.jparsec.functors.Pair:equals(Lorg.codehaus.jparsec.functors.Pair;)Z
org.codehaus.jparsec.pattern.CharPredicates.6:isChar(C)Z
org.codehaus.jparsec.pattern.Patterns.5:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.ParserInternals:repeatAtMost(Lorg.codehaus.jparsec.Parser;ILjava.util.Collection;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.DelimitedListParser:element(Lorg.codehaus.jparsec.ParseContext;Ljava.util.List;)V
org.codehaus.jparsec.pattern.Patterns.7:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.misc.Curry:of(Ljava.lang.Class;[Ljava.lang.Object;)Lorg.codehaus.jparsec.misc.Curry;
org.codehaus.jparsec.NumberLiteralsTranslator:tokenizeDecimalAsLong(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.functors.Tuple4:equals(Ljava.lang.Object;)Z | CONDITION | 1669 | if (x) -> if (!x)
org.codehaus.jparsec.FailureParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parsers.7:map(Ljava.lang.Object;Ljava.util.List;)Ljava.lang.Object;
org.codehaus.jparsec.misc.MapperTest.11:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.Indentation.1:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:asUnary()Lorg.codehaus.jparsec.functors.Unary; | RETURN | 19239 | return null
org.codehaus.jparsec.Parser:not(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.4:isChar(C)Z
org.codehaus.jparsec.LazyParser:deref()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:skipMany1()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:isChar(C)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:endBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:infixn(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper.4.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.LazyParser:LazyParser(Ljava.util.concurrent.atomic.AtomicReference;)V
org.codehaus.jparsec.EofParser:EofParser(Ljava.lang.String;)V
org.codehaus.jparsec.pattern.Patterns:isChar(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Terminals.1:toString()Ljava.lang.String;
org.codehaus.jparsec.RepeatAtLeastParser:RepeatAtLeastParser(Lorg.codehaus.jparsec.Parser;I)V
org.codehaus.jparsec.pattern.Patterns:shorter(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern; | RETURN | 18272 | return null
org.codehaus.jparsec.ParserState:characters()Ljava.lang.CharSequence;
org.codehaus.jparsec.Parser:many()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserState:toIndex(I)I
org.codehaus.jparsec.misc.MapperTest.10:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.EmptyParseError:getIndex()I
org.codehaus.jparsec.Indentation:lexer(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser; | ASSIGN | 4637 | = null
org.codehaus.jparsec.TokenizerMaps.7:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:matchMany(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.Parsers.6:map(Ljava.util.List;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers:list(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps:toTuple4()Lorg.codehaus.jparsec.functors.Map4;
org.codehaus.jparsec.pattern.Patterns.3:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Lexicon:tokenizer()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.4:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.misc.Invokables.2:parameterTypes()[Ljava.lang.Class;
org.codehaus.jparsec.functors.Tuple4:Tuple4(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.misc.MapperTest.3:map(Ljava.lang.String;I)Ljava.lang.String;
org.codehaus.jparsec.misc.MapperTest:assertFoo(Ljava.lang.String;Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns:some(IILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.DefaultSourceLocator:getLineBreakColumnIndex(I)I
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.12:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:many(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.CharPredicates:range(CC)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.functors.Tuples:pair(Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Pair;
org.codehaus.jparsec.ParseContext:set(IILjava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns.28:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.OperatorTable:infixn(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.OperatorTableTest:assertSameOrder(Ljava.lang.Comparable;)V
org.codehaus.jparsec.DefaultSourceLocator:lookup(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.misc.Mapper:postfix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.BestParser:BestParser([Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.IntOrder;)V
org.codehaus.jparsec.pattern.CharPredicates.5:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.12:isChar(C)Z
org.codehaus.jparsec.OperatorTableTest:assertOrder(Ljava.lang.Comparable;Ljava.lang.Comparable;)V | CONSTANT | 2276 | 0 -> 1
org.codehaus.jparsec.Lexicon:word(Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns:ifelse(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.SkipAtLeastParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Mapper:asMap()Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Parsers:fail(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:longer(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Asserts:assertFailure(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;II)V
org.codehaus.jparsec.Keywords.CaseSensitive.1:compare(Ljava.lang.String;Ljava.lang.String;)I
org.codehaus.jparsec.pattern.CharPredicates.15:isChar(C)Z
org.codehaus.jparsec.pattern.Patterns:hasExact(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:applyPrefixOperators(Ljava.lang.Object;Ljava.util.List;)Ljava.lang.Object; | STATEMENT | 24800 | stmt -> ;
org.codehaus.jparsec.SkipTimesParser:SkipTimesParser(Lorg.codehaus.jparsec.Parser;II)V
org.codehaus.jparsec.Sequence5Parser:Sequence5Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map5;)V
org.codehaus.jparsec.Keywords.CaseInsensitive:comparator()Ljava.util.Comparator;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map5;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Keywords.CaseInsensitive.1:compare(Ljava.lang.String;Ljava.lang.String;)I
org.codehaus.jparsec.InternalFunctors:lastOfTwo()Lorg.codehaus.jparsec.functors.Map2;
org.codehaus.jparsec.functors.Tuple5:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper.3.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.CharPredicates.9:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:toArrayWithIteration(Ljava.lang.Iterable;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:next(I)V
org.codehaus.jparsec.pattern.CharPredicates.2:isChar(C)Z
org.codehaus.jparsec.Terminals:caseInsensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.functors.Maps.1:map(Ljava.lang.String;)Ljava.lang.Integer;
org.codehaus.jparsec.Indentation:outdent()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors:lastOfFour()Lorg.codehaus.jparsec.functors.Map4;
org.codehaus.jparsec.util.IntList:calcSize(II)I
org.codehaus.jparsec.Tokens.ScientificNotation:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.misc.Mapper:findMapMethod(Ljava.lang.Class;)Ljava.lang.reflect.Method;
org.codehaus.jparsec.Parser:atLeast(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:ParseContext(Ljava.lang.CharSequence;Ljava.lang.Object;ILjava.lang.String;Lorg.codehaus.jparsec.SourceLocator;)V
org.codehaus.jparsec.NestedScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Mapper:toArray(Ljava.util.Collection;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple4;
org.codehaus.jparsec.ExpectParser:ExpectParser(Ljava.lang.String;)V
org.codehaus.jparsec.ParserInternals:copyError(Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.ParseContext;)V
org.codehaus.jparsec.Parsers:nested(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.Lists:capacity(I)I
org.codehaus.jparsec.pattern.Patterns:peek(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.IfElseParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.TokenizerMaps.8:map(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.Tokens.Fragment:hashCode()I
org.codehaus.jparsec.functors.Tuple5:Tuple5(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns.22:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.InternalFunctors:tokenWithSameValue(Ljava.lang.Object;)Lorg.codehaus.jparsec.TokenMap;
org.codehaus.jparsec.Token:hashCode()I
org.codehaus.jparsec.misc.Reflection:primitive(Ljava.lang.Class;Ljava.lang.Class;)V
org.codehaus.jparsec.pattern.Patterns:many(ILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ParseContext:getEncountered()Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors.1:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.ParserInternals:repeatAtMost(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.AtomicParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Mapper.2.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.PeekParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z | CONDITION | 1496 | if (x) -> if (!x)
org.codehaus.jparsec.Tokens:integerLiteral(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.InternalFunctors.6:map(Lorg.codehaus.jparsec.Token;)Ljava.lang.Object;
org.codehaus.jparsec.error.ErrorReporter:toString(Lorg.codehaus.jparsec.error.ParseErrorDetails;Lorg.codehaus.jparsec.error.Location;)Ljava.lang.String; | STATEMENT | 1934 | stmt -> ;
org.codehaus.jparsec.functors.Maps:mapToString()Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.ToTokenParser:ToTokenParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Tokens.Fragment:Fragment(Ljava.lang.String;Ljava.lang.Object;)V
org.codehaus.jparsec.functors.Maps.12:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:copy(Ljava.lang.Readable;Ljava.lang.Appendable;)V
org.codehaus.jparsec.DefaultSourceLocator:getLineBreakLocation(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.OrParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.functors.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.AtomicParser:AtomicParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parser:optional()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps:toEnum(Ljava.lang.Class;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.RepeatTimesParser:RepeatTimesParser(Lorg.codehaus.jparsec.Parser;IILorg.codehaus.jparsec.ListFactory;)V
org.codehaus.jparsec.Parsers.9:toString()Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors:fallback(Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.ParseContext:errors()Ljava.util.List;
org.codehaus.jparsec.BindNextParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.ListParser:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Invokables.2:invoke([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.CharPredicates.13:isChar(C)Z
org.codehaus.jparsec.Token:length()I
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NeverParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parsers:tokenType(Ljava.lang.Class;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:quoted(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:cast()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Terminals:caseSensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.NumberLiteralsTranslator:toDecDigit(C)I
org.codehaus.jparsec.SumParser:SumParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.pattern.Patterns:notStringCaseInsensitive(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Asserts:assertArrayEquals([Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.Scanners:quoted(CC)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserInternals:greedyRun(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Keywords:lexicon(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;ZLorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Lexicon; | ASSIGN | 4166 | = null
org.codehaus.jparsec.pattern.Pattern:many()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.CharPredicates.9:isChar(C)Z
org.codehaus.jparsec.functors.Maps.4:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple4;
org.codehaus.jparsec.Parser:lexer(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.9:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.misc.Mapper:mapMethod(Ljava.lang.Class;)Lnet.sf.cglib.reflect.FastMethod;
org.codehaus.jparsec.InternalFunctors.5:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.InternalFunctors:isTokenType(Ljava.lang.Class;Ljava.lang.String;)Lorg.codehaus.jparsec.TokenMap;
org.codehaus.jparsec.pattern.Patterns.30:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.ActionParser:ActionParser(Ljava.lang.Runnable;)V
org.codehaus.jparsec.TokenizerMaps.7:map(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.Parser:optional(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.MapParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:retn(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.EmptyParseError:getFailureMessage()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:matchSome(ILorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.pattern.Patterns:longest([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.CharPredicates.20:isChar(C)Z
org.codehaus.jparsec.DefaultSourceLocator:binarySearch(Lorg.codehaus.jparsec.util.IntList;I)I
org.codehaus.jparsec.Parser:next(Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Asserts:assertFailure(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;IILjava.lang.String;)V
org.codehaus.jparsec.Parser:asParserException(Ljava.lang.Throwable;Lorg.codehaus.jparsec.ParseContext;)Lorg.codehaus.jparsec.error.ParserException;
org.codehaus.jparsec.pattern.Patterns:regex(Ljava.util.regex.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:infixl(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ArrayParser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.13:toString()Ljava.lang.String;
org.codehaus.jparsec.ReturnSourceParser:ReturnSourceParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map3;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:fail(Ljava.lang.String;)V
org.codehaus.jparsec.misc.Mapper:name()Ljava.lang.String;
org.codehaus.jparsec.PeekParser:PeekParser(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parser:from(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Terminals:fragment([Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:or([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ReturnSourceParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns.8:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.util.IntList:set(II)I
org.codehaus.jparsec.misc.Mapper:binary()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.MapperTest:fooMapper()Lorg.codehaus.jparsec.misc.Mapper;
org.codehaus.jparsec.pattern.CharPredicates.19:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Curry:checkDup([IIILjava.lang.Object;Ljava.lang.reflect.Constructor;)V
org.codehaus.jparsec.DelimitedListParser:DelimitedListParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ListFactory;)V
org.codehaus.jparsec.ParseContext:raise(Lorg.codehaus.jparsec.ParseContext.ErrorType;Ljava.lang.Object;)V
org.codehaus.jparsec.IsFragment:map(Lorg.codehaus.jparsec.Token;)Ljava.lang.String;
org.codehaus.jparsec.NeverParser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.18:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:ifelse(Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.14:isChar(C)Z
org.codehaus.jparsec.Parser:source()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.15:toString()Ljava.lang.String;
org.codehaus.jparsec.EmptyParseError:getExpected()Ljava.util.List;
org.codehaus.jparsec.Token:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.pattern.Patterns.12:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.util.IntList:IntList()V
org.codehaus.jparsec.Parsers:token(Lorg.codehaus.jparsec.TokenMap;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Lexicon:phrase([Ljava.lang.String;)Lorg.codehaus.jparsec.Parser; | CONSTANT | 2303 | 0 -> -1
org.codehaus.jparsec.DefaultSourceLocator:DefaultSourceLocator(Ljava.lang.CharSequence;)V
org.codehaus.jparsec.functors.Maps.3:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Maps.10:map(Ljava.lang.String;)Ljava.lang.Enum;
org.codehaus.jparsec.Parser:infixl(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.SumParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Scanners:many1(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.EmptyParseError:EmptyParseError(ILjava.lang.String;)V
org.codehaus.jparsec.error.ErrorReporterTest:reportList([Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.Tokens.Fragment:tag()Ljava.lang.Object;
org.codehaus.jparsec.util.IntList:ensureCapacity(I)V | OPERATOR | 3124 | > -> ==
org.codehaus.jparsec.functors.Pair:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.MapperTest:assertWrongParameters(Lorg.codehaus.jparsec.misc.Mapper;II)V
org.codehaus.jparsec.pattern.Patterns.15:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Parser:skipTimes(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NestedParser:NestedParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.misc.Mapper.9:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.functors.Tuple3:toString()Ljava.lang.String;
org.codehaus.jparsec.MapParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.CharPredicates.8:isChar(C)Z
org.codehaus.jparsec.TokenizerMaps.5:toString()Ljava.lang.String;
org.codehaus.jparsec.easymock.BaseMockTest:mock(Ljava.lang.Class;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers:plus(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:runNext(Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.functors.Map;)Z
org.codehaus.jparsec.Parsers:shorter(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.14:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Keywords.CaseInsensitive:toKey(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.ListFactories:arrayListFactory()Lorg.codehaus.jparsec.ListFactory;
org.codehaus.jparsec.SkipTimesParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parsers:toArray(Ljava.util.Collection;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserTest:assertListParser(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.StringLiteralsTranslator:escapedChar(C)C
org.codehaus.jparsec.pattern.Pattern:next(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.functors.Maps:toTuple5()Lorg.codehaus.jparsec.functors.Map5;
org.codehaus.jparsec.Parsers.10:map(Lorg.codehaus.jparsec.functors.Map2;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.misc.Invokables.ValueInvokable:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.21:isChar(C)Z
org.codehaus.jparsec.Terminals:operators([Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.Tokens:scientificNotation(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.ScientificNotation;
org.codehaus.jparsec.util.IntList:get(I)I
org.codehaus.jparsec.SkipAtLeastParser:SkipAtLeastParser(Lorg.codehaus.jparsec.Parser;I)V
org.codehaus.jparsec.misc.MapperTest.12:map(Ljava.lang.String;I)Lorg.codehaus.jparsec.misc.MapperTest.Foo;
org.codehaus.jparsec.IndentationTest:tokenList([Ljava.lang.Object;)Ljava.util.List;
org.codehaus.jparsec.Parsers.3:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.CharPredicates.10:toString()Ljava.lang.String;
org.codehaus.jparsec.util.IntList:checkIndex(I)V
org.codehaus.jparsec.pattern.Patterns:matchMany(Lorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.CharSequence;III)I | OPERATOR | 22196 | + -> /
org.codehaus.jparsec.misc.Mapper.2:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.DefaultSourceLocator:location(II)Lorg.codehaus.jparsec.error.Location; | CONSTANT | 5235 | 0 -> -1
org.codehaus.jparsec.misc.Mapper.8:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Objects:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
org.codehaus.jparsec.OperatorTable:slice([Lorg.codehaus.jparsec.OperatorTable.Operator;II)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Token:Token(IILjava.lang.Object;)V
org.codehaus.jparsec.Indentation.2:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Strings:join(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:matchRepeat(ILorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.ParserState:getToken()Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.TokenizerMapsTest:assertFragment(Ljava.lang.Object;Lorg.codehaus.jparsec.functors.Map;)V
org.codehaus.jparsec.functors.Pair:hashCode()I
org.codehaus.jparsec.IsTokenParser:IsTokenParser(Lorg.codehaus.jparsec.TokenMap;)V
org.codehaus.jparsec.Indentation:Indentation(Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.misc.Curry:hashCode()I
org.codehaus.jparsec.pattern.Patterns:matchSome(ILorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.misc.Invokables.1:parameterTypes()[Ljava.lang.Class;
org.codehaus.jparsec.RepeatTimesParser:RepeatTimesParser(Lorg.codehaus.jparsec.Parser;II)V
org.codehaus.jparsec.functors.Maps.12:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Tokens.ScientificNotation:ScientificNotation(Ljava.lang.String;Ljava.lang.String;)V
org.codehaus.jparsec.Scanners:nestableBlockComment(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.16:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.ParseContext:unexpected(Ljava.lang.String;)V
org.codehaus.jparsec.Parsers.1:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:or([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Operators.1:compare(Ljava.lang.String;Ljava.lang.String;)I
org.codehaus.jparsec.Parser:parse(Ljava.lang.CharSequence;Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.EofParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Tokens.Fragment:equalFragment(Lorg.codehaus.jparsec.Tokens.Fragment;)Z
org.codehaus.jparsec.OrParser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:among(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Terminals:caseSensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.pattern.Pattern:many1()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser:token()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Reflection:getClassName(Ljava.lang.Object;)Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors.3:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:times(II)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper.1:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Checks:checkMin(I)I
org.codehaus.jparsec.InternalFunctors.8:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.LazyParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Pattern:some(II)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser:atomic()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:expect(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.17:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Maps.11:toString()Ljava.lang.String;
org.codehaus.jparsec.IfElseParser:IfElseParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parser:peek()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.error.ParserException:ParserException(Ljava.lang.Throwable;Lorg.codehaus.jparsec.error.ParseErrorDetails;Ljava.lang.String;Lorg.codehaus.jparsec.error.Location;)V
org.codehaus.jparsec.Scanners:notAmong(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps.7:map(Ljava.lang.Object;)Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors:lastOfThree()Lorg.codehaus.jparsec.functors.Map3;
org.codehaus.jparsec.pattern.CharPredicates.7:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserInternals:runNestedParser(Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.ParseContext;Lorg.codehaus.jparsec.Parser;)Z
org.codehaus.jparsec.misc.Mapper.4:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.ParseContext:trap()V
org.codehaus.jparsec.functors.Maps.2:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates:notChar(C)Lorg.codehaus.jparsec.pattern.CharPredicate; | RETURN | 5947 | return null
org.codehaus.jparsec.IsCharScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.Token:index()I
org.codehaus.jparsec.pattern.Pattern:many(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.TokenizerMaps.5:map(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.pattern.CharPredicates:or(Lorg.codehaus.jparsec.pattern.CharPredicate;Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.EmptyParseError:getEncountered()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:range(CC)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns:many(ILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser:not()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:suppressError(Z)Z
org.codehaus.jparsec.Parser:many1()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.2:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Invokables.ValueInvokable:ValueInvokable(Ljava.lang.Object;)V
org.codehaus.jparsec.functors.Maps.6:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.misc.Curry:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.Token:equalToken(Lorg.codehaus.jparsec.Token;)Z
org.codehaus.jparsec.Parser:postfix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TestParsers:isChar(C)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserInternals:runForBestFit(Lorg.codehaus.jparsec.IntOrder;[Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ParseContext;Ljava.lang.Object;II)V
org.codehaus.jparsec.misc.Mapper.5:map([Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.TokenizerMaps.6:toString()Ljava.lang.String;
org.codehaus.jparsec.Terminals:Terminals(Lorg.codehaus.jparsec.Lexicon;)V
org.codehaus.jparsec.Token:value()Ljava.lang.Object;
org.codehaus.jparsec.pattern.CharPredicates.21:toString()Ljava.lang.String;
org.codehaus.jparsec.SequenceParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Tokens.Fragment:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.ParserInternals:many(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.InternalFunctors.2:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.NumberLiteralsTranslator:toHexDigit(C)I
org.codehaus.jparsec.misc.Mapper:curry(Ljava.lang.Class;[Ljava.lang.Object;)Lorg.codehaus.jparsec.misc.Mapper;
org.codehaus.jparsec.pattern.Patterns.18:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.ListParser:ListParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.UnexpectedParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.TokenizerMaps.4:toString()Ljava.lang.String;
org.codehaus.jparsec.ParseContext:next()V
org.codehaus.jparsec.InternalFunctors.2:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Pattern:ifelse(Lorg.codehaus.jparsec.pattern.Pattern;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Scanners:stringCaseInsensitive(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:matchString(Ljava.lang.String;Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.BestParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.CharPredicates.7:isChar(C)Z
org.codehaus.jparsec.misc.Curry:findCurryIndex(Ljava.lang.reflect.Constructor;[Ljava.lang.Class;ILjava.lang.Object;)I
org.codehaus.jparsec.misc.Mapper.7:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.functors.Maps.4:toString()Ljava.lang.String;
org.codehaus.jparsec.NumberLiteralsTranslator:toOctDigit(C)I
org.codehaus.jparsec.EmptyListParser:toString()Ljava.lang.String;
org.codehaus.jparsec.DelimitedListParser:begin()Ljava.util.List;
org.codehaus.jparsec.Parsers.2:map(Ljava.util.Collection;)[Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.LazyParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Operators:sort([Ljava.lang.String;)[Ljava.lang.String;
org.codehaus.jparsec.InternalFunctors.3:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.SequenceParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.RepeatTimesParser:toString()Ljava.lang.String;
org.codehaus.jparsec.util.IntList:toArray()[I
org.codehaus.jparsec.StepParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:infixr(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.16:isChar(C)Z
org.codehaus.jparsec.OperatorTableTest:operator(ILorg.codehaus.jparsec.OperatorTable.Associativity;)Lorg.codehaus.jparsec.OperatorTable.Operator;
org.codehaus.jparsec.TokensTest:assertFragment(Ljava.lang.Object;Ljava.lang.String;Lorg.codehaus.jparsec.Tokens.Fragment;)V
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple3;
org.codehaus.jparsec.pattern.CharPredicates.10:isChar(C)Z
org.codehaus.jparsec.misc.Curry:invoke([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.misc.Curry:Curry(Ljava.lang.Object;Lorg.codehaus.jparsec.misc.Invokable;[Ljava.lang.Object;[I)V
org.codehaus.jparsec.pattern.Patterns.13:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.IndentationTest:analyze([Ljava.lang.Object;)Ljava.util.List;
org.codehaus.jparsec.Parsers.8:map(Lorg.codehaus.jparsec.functors.Map2;Ljava.lang.Object;)Lorg.codehaus.jparsec.Parsers.Rhs;
org.codehaus.jparsec.ParseContext.3:getExpected()Ljava.util.List;
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Pair;
org.codehaus.jparsec.SumParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Scanners:blockComment(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:always()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:ifelse(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Terminals:caseInsensitive(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.ParseContext:errorType()Lorg.codehaus.jparsec.ParseContext.ErrorType;
org.codehaus.jparsec.pattern.Patterns:repeat(ILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers.7:toString()Ljava.lang.String;
org.codehaus.jparsec.NestableBlockCommentScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Maps.5:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:hasAtLeast(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.error.Location:Location(II)V
org.codehaus.jparsec.InternalFunctors:lastOfFive()Lorg.codehaus.jparsec.functors.Map5;
org.codehaus.jparsec.Keywords:getStringCase(Z)Lorg.codehaus.jparsec.Keywords.StringCase;
org.codehaus.jparsec.Parsers:plus([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.error.Location:toString()Ljava.lang.String;
org.codehaus.jparsec.StringLiteralsTranslator:tokenizeSingleQuote(Ljava.lang.String;)Ljava.lang.String; | OPERATOR | 2037 | - -> /
org.codehaus.jparsec.Parser:times(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Invokables.2:returnType()Ljava.lang.Class;
org.codehaus.jparsec.Parser:followedBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.MapperTest.CharSequenceMap:map(Ljava.lang.String;Ljava.lang.Integer;)Ljava.lang.String;
org.codehaus.jparsec.Parsers:infixr(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.Lists:arrayList(I)Ljava.util.ArrayList;
org.codehaus.jparsec.error.ParserException:getLocation()Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.NestedParser:toString()Ljava.lang.String;
org.codehaus.jparsec.NumberLiteralsTranslator:tokenizeOctalAsLong(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.Parsers:unexpected(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.Checks:checkArgument(ZLjava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.NestedScanner:NestedScanner(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.IntOrders.1:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Objects:hashCode(Ljava.lang.Object;)I
org.codehaus.jparsec.TerminalsTest:assertDup([Ljava.lang.String;[Ljava.lang.String;Z)V
org.codehaus.jparsec.misc.MapperTest.13:map(I)Ljava.lang.String;
org.codehaus.jparsec.DelimitedParser:DelimitedParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.UnexpectedParser:UnexpectedParser(Ljava.lang.String;)V
org.codehaus.jparsec.misc.MapperTest.Foo:Foo(Ljava.lang.String;)V
org.codehaus.jparsec.Scanners:among(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser; | CONDITION | 12066 | if (x) -> if (!x)
org.codehaus.jparsec.EmptyParseError:getUnexpected()Ljava.lang.String;
org.codehaus.jparsec.util.Checks:checkNotNullState(Ljava.lang.Object;Ljava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns:notString(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern; | OPERATOR | 9155 | == -> <
org.codehaus.jparsec.misc.Mapper:apply([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Lexicon:token(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Asserts:assertParser(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.Object;)V
org.codehaus.jparsec.ArrayParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:skipMany()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:setAt(II)V
org.codehaus.jparsec.OperatorTable:build(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:checkFutureParameters(ILjava.lang.Class;I)V
org.codehaus.jparsec.Indentation:token(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTable:buildExpressionParser(Lorg.codehaus.jparsec.Parser;[Lorg.codehaus.jparsec.OperatorTable.Operator;)Lorg.codehaus.jparsec.Parser; | RETURN | 6195 | return null
org.codehaus.jparsec.Scanners:blockComment(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.7:map(Lorg.codehaus.jparsec.Token;)Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.EofParser:toString()Ljava.lang.String;
org.codehaus.jparsec.MapParser:MapParser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map;)V
org.codehaus.jparsec.functors.Tuple5:hashCode()I
org.codehaus.jparsec.misc.MapperTest.5:map(Ljava.lang.String;I)Ljava.lang.String;
org.codehaus.jparsec.misc.Curry:expectedParams()I
org.codehaus.jparsec.misc.Invokables.ValueInvokable:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.Tokens.ScientificNotation:toString()Ljava.lang.String;
org.codehaus.jparsec.util.Checks:checkNonNegative(ILjava.lang.String;)I
org.codehaus.jparsec.misc.Mapper:asBinary()Lorg.codehaus.jparsec.functors.Binary;
org.codehaus.jparsec.misc.Curry:valueList()Ljava.util.List;
org.codehaus.jparsec.pattern.CharPredicates.11:isChar(C)Z
org.codehaus.jparsec.Scanners:nestableBlockComment(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Sequence4Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.ScannerState:peekChar()C
org.codehaus.jparsec.SequenceParser:SequenceParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.DefaultSourceLocatorTest:intList([I)Lorg.codehaus.jparsec.util.IntList;
org.codehaus.jparsec.pattern.CharPredicates:and(Lorg.codehaus.jparsec.pattern.CharPredicate;Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.IntOrders.2:toString()Ljava.lang.String;
org.codehaus.jparsec.Terminals:caseInsensitive([Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.ReturnSourceParser:toString()Ljava.lang.String;
org.codehaus.jparsec.TokenizerMaps.8:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers.Rhs:Rhs(Lorg.codehaus.jparsec.functors.Map2;Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns.20:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Tokens.Fragment:text()Ljava.lang.String;
org.codehaus.jparsec.Lexicon:union(Lorg.codehaus.jparsec.Lexicon;)Lorg.codehaus.jparsec.Lexicon;
org.codehaus.jparsec.misc.Mapper.7:map([Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Binary;
org.codehaus.jparsec.pattern.Patterns:string(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns.17:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.StepParser:StepParser(Lorg.codehaus.jparsec.Parser;I)V
org.codehaus.jparsec.Parser:next(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:sequence([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.IsCharScanner:IsCharScanner(Ljava.lang.String;Lorg.codehaus.jparsec.pattern.CharPredicate;)V
org.codehaus.jparsec.Parsers.3:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:longest([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates:isChar(C)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Parser:parse(Ljava.lang.CharSequence;Ljava.lang.String;Lorg.codehaus.jparsec.SourceLocator;)Ljava.lang.Object;
org.codehaus.jparsec.ParserInternals:runWithoutRecordingError(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns:matchRepeat(ILorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.CharSequence;III)I
org.codehaus.jparsec.Tokens:identifier(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.functors.Maps:identity()Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.Indentation:newLine(Lorg.codehaus.jparsec.Token;Ljava.util.Stack;ILjava.util.List;)V
org.codehaus.jparsec.InternalFunctors.1:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers.5:map(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:lineComment(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple4:equals(Lorg.codehaus.jparsec.functors.Tuple4;)Z
org.codehaus.jparsec.ParseContext:setEncountered(Ljava.lang.String;)V
org.codehaus.jparsec.Tokens:decimalLiteral(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.ExpectParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.DefaultSourceLocator:locate(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.OrParser:OrParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.pattern.Patterns:some(ILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TokenizerMaps.2:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserInternals:repeat(Lorg.codehaus.jparsec.Parser;ILjava.util.Collection;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.ScannerState:toIndex(I)I
org.codehaus.jparsec.pattern.CharPredicates.6:toString()Ljava.lang.String;
org.codehaus.jparsec.Asserts:assertParser(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.Object;Ljava.lang.String;)V
org.codehaus.jparsec.Scanners:nestableBlockComment(Ljava.lang.String;Ljava.lang.String;Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.MapperTest.2:map(Ljava.lang.String;I)Ljava.lang.String;
org.codehaus.jparsec.Parsers:plus(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.6:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.OperatorTable:infixl(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.misc.Mapper.6:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parser:sepBy1(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Indentation:Indentation()V
org.codehaus.jparsec.functors.Tuple5:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.Parser:skipAtLeast(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple3:equals(Lorg.codehaus.jparsec.functors.Tuple3;)Z
org.codehaus.jparsec.RepeatAtLeastParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Invokables:method(Ljava.lang.Object;Lnet.sf.cglib.reflect.FastMethod;)Lorg.codehaus.jparsec.misc.Invokable;
org.codehaus.jparsec.util.IntList:add(I)Lorg.codehaus.jparsec.util.IntList;
org.codehaus.jparsec.ToTokenParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:run(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns.29:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.pattern.Patterns:sequence([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Mapper.5.1:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Parsers.6:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Tuple3:Tuple3(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)V
org.codehaus.jparsec.OperatorTable:prefix(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.TokenizerMaps:fragment(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.functors.Maps:toPair()Lorg.codehaus.jparsec.functors.Map2;
org.codehaus.jparsec.OperatorTable:infixr(Lorg.codehaus.jparsec.Parser;I)Lorg.codehaus.jparsec.OperatorTable;
org.codehaus.jparsec.OperatorTableTest:assertTotalOrder([Ljava.lang.Comparable;)V
org.codehaus.jparsec.IsTokenParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.functors.Maps.6:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:alt([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:_(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:fails()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:or(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.NestableBlockCommentScanner:NestableBlockCommentScanner(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.misc.MapperTest.4:map(Ljava.lang.String;II)Ljava.lang.String;
org.codehaus.jparsec.functors.Tuple3:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.misc.Mapper.7.1:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns.24:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Asserts:assertFailure(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;IILjava.lang.Class;)V
org.codehaus.jparsec.Sequence5Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:compareIgnoreCase(CC)Z
org.codehaus.jparsec.misc.Mapper.10:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:parse(Ljava.lang.CharSequence;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.SourceLocator;Ljava.lang.String;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns.23:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Tokens.ScientificNotation:hashCode()I
org.codehaus.jparsec.TokenizerMaps.4:map(Ljava.lang.String;)Ljava.lang.Character;
org.codehaus.jparsec.util.Checks:checkState(ZLjava.lang.String;[Ljava.lang.Object;)V
org.codehaus.jparsec.misc.Mapper:toString()Ljava.lang.String;
org.codehaus.jparsec.Terminals.1:isExpectedTag(Ljava.lang.Object;)Z
org.codehaus.jparsec.misc.Mapper.9:toString()Ljava.lang.String;
org.codehaus.jparsec.ParseContext:setErrorState(IILorg.codehaus.jparsec.ParseContext.ErrorType;Ljava.util.List;)V
org.codehaus.jparsec.NestableBlockCommentScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Token:toString()Ljava.lang.String;
org.codehaus.jparsec.StepParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:step(I)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:string(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTable:build(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.OperatorTable.Associativity;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:sepBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:isChar(C)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Sequence4Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Operators:lexicon([Ljava.lang.String;)Lorg.codehaus.jparsec.Lexicon;
org.codehaus.jparsec.ParseContext:renderError()Lorg.codehaus.jparsec.error.ParseErrorDetails;
org.codehaus.jparsec.pattern.CharPredicates:and([Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.DelimitedParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns.11:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Sequence2Parser:Sequence2Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map2;)V
org.codehaus.jparsec.NestedScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.GetIndexParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z | STATEMENT | 1415 | stmt -> ;
org.codehaus.jparsec.IfElseParser:toString()Ljava.lang.String;
org.codehaus.jparsec.ScannerState:characters()Ljava.lang.CharSequence;
org.codehaus.jparsec.Parsers:sequence([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.1:toString()Ljava.lang.String;
org.codehaus.jparsec.BestParser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.18:isChar(C)Z
org.codehaus.jparsec.RepeatAtLeastParser:toString()Ljava.lang.String;
org.codehaus.jparsec.functors.Maps.8:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.Parser:from(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserInternals:many(Lorg.codehaus.jparsec.Parser;Ljava.util.Collection;Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Operators.Suite:add(Ljava.lang.String;)Z | ASSIGN | 3940 | = null
org.codehaus.jparsec.Sequence3Parser:Sequence3Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map3;)V
org.codehaus.jparsec.pattern.Patterns:shortest([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Mapper:isSkipped(Lorg.codehaus.jparsec.Parser;)Z
org.codehaus.jparsec.DefaultSourceLocator:DefaultSourceLocator(Ljava.lang.CharSequence;II)V
org.codehaus.jparsec.Parsers:longest(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ArrayParser:ArrayParser([Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Tokens:reserved(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.Parsers:applyPostfixOperators(Ljava.lang.Object;Ljava.lang.Iterable;)Ljava.lang.Object;
org.codehaus.jparsec.misc.Mapper:infix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.util.Strings:join(Ljava.lang.StringBuilder;Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.StringBuilder;
org.codehaus.jparsec.PatternScanner:PatternScanner(Ljava.lang.String;Lorg.codehaus.jparsec.pattern.Pattern;)V
org.codehaus.jparsec.pattern.CharPredicates.4:toString()Ljava.lang.String;
org.codehaus.jparsec.Indentation:indent()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParserTest:assertList(Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.misc.Mapper.3:map(Ljava.util.List;)Lorg.codehaus.jparsec.functors.Unary;
org.codehaus.jparsec.SkipAtLeastParser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.3:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:mergeSkipped([Lorg.codehaus.jparsec.Parser;)Ljava.util.List;
org.codehaus.jparsec.pattern.Patterns:many1(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns.2:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Scanners.1:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.IntOrders.2:compare(II)Z
org.codehaus.jparsec.pattern.Patterns:some(ILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Parser:or(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns.19:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.util.Checks:checkMax(I)I
org.codehaus.jparsec.NestedParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns:regex(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.CharPredicates:among(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.Terminals:checkDup([Ljava.lang.String;[Ljava.lang.String;Z)V
org.codehaus.jparsec.pattern.Patterns.1:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.functors.Maps.3:map(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple3;
org.codehaus.jparsec.pattern.Patterns:lineComment(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.pattern.Patterns:repeat(ILorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ParserState:isEof()Z
org.codehaus.jparsec.PatternScanner:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:invoke([Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.CharPredicates.16:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.20:toString()Ljava.lang.String;
org.codehaus.jparsec.Parser:parse(Ljava.lang.CharSequence;)Ljava.lang.Object;
org.codehaus.jparsec.TokenizerMaps.6:map(Ljava.lang.String;)Ljava.lang.Long;
org.codehaus.jparsec.Scanners:many(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.easymock.BaseMockTest:replay()V
org.codehaus.jparsec.IsTokenParser:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Pattern:peek()Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Mapper.6.1:map(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.Asserts:assertScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;)V
org.codehaus.jparsec.functors.Tuple4:hashCode()I
org.codehaus.jparsec.functors.Maps.2:map(Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Pair;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map2;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.TokenizerMaps.3:map(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.misc.Invokables.1:returnType()Ljava.lang.Class;
org.codehaus.jparsec.misc.Mapper:checkFutureParameters(Ljava.lang.Class;I)V
org.codehaus.jparsec.EmptyListParser:EmptyListParser()V
org.codehaus.jparsec.ListFactories:arrayListFactoryWithFirstElement(Ljava.lang.Object;)Lorg.codehaus.jparsec.ListFactory;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.StringLiteralsTranslator:tokenizeDoubleQuote(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.PatternScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Invokables:constructor(Lnet.sf.cglib.reflect.FastConstructor;)Lorg.codehaus.jparsec.misc.Invokable; | ASSIGN | 391 | = null
org.codehaus.jparsec.ParserState:getInputName(I)Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns:some(IILorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ParserInternals:stillThere(Lorg.codehaus.jparsec.ParseContext;II)Z
org.codehaus.jparsec.functors.Maps.1:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.Patterns.10:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.Terminals:fromFragment([Ljava.lang.Object;)Lorg.codehaus.jparsec.TokenMap;
org.codehaus.jparsec.Keywords.CaseSensitive:comparator()Ljava.util.Comparator;
org.codehaus.jparsec.Scanners:notChar(C)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ParseContext:setErrorState(IILorg.codehaus.jparsec.ParseContext.ErrorType;)V
org.codehaus.jparsec.misc.Mapper:checkArgumentTypes([Ljava.lang.Object;)V
org.codehaus.jparsec.ParseContext:expected(Ljava.lang.Object;)V
org.codehaus.jparsec.Parsers:runnable(Ljava.lang.Runnable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.error.Location:hashCode()I
org.codehaus.jparsec.Operators.Suites:add(Ljava.lang.String;)V
org.codehaus.jparsec.Scanners:isChar(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:endBy1(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:checkArgumentType(ILjava.lang.Class;Ljava.lang.Object;)V
org.codehaus.jparsec.AnyCharScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Sequence2Parser:toString()Ljava.lang.String;
org.codehaus.jparsec.Indentation:pseudoToken(ILjava.lang.Object;)Lorg.codehaus.jparsec.Token;
org.codehaus.jparsec.functors.Pair:equals(Ljava.lang.Object;)Z
org.codehaus.jparsec.misc.Mapper:checkNotSkipped(Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.util.Objects:in(Ljava.lang.Object;[Ljava.lang.Object;)Z
org.codehaus.jparsec.pattern.Patterns.14:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.misc.Invokables.ValueInvokable:hashCode()I
org.codehaus.jparsec.TokenizerMaps.3:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.3:isChar(C)Z
org.codehaus.jparsec.misc.Mapper:expectedParams()I
org.codehaus.jparsec.AtomicParser:toString()Ljava.lang.String;
org.codehaus.jparsec.ParseContext:ParseContext(Ljava.lang.CharSequence;ILjava.lang.String;Lorg.codehaus.jparsec.SourceLocator;)V
org.codehaus.jparsec.pattern.Patterns:not(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.misc.Mapper:propagate(Ljava.lang.Throwable;)Ljava.lang.RuntimeException;
org.codehaus.jparsec.pattern.CharPredicates.17:isChar(C)Z
org.codehaus.jparsec.ListParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Reflection:isAssignable(Ljava.lang.Class;Ljava.lang.Object;)Z
org.codehaus.jparsec.Parsers.1:map(Lorg.codehaus.jparsec.Token;)Ljava.lang.Object;
org.codehaus.jparsec.pattern.Patterns:many(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ParseContext:errorIndex()I
org.codehaus.jparsec.misc.MapperTest.7:map(Ljava.lang.String;II)Ljava.lang.String;
org.codehaus.jparsec.SkipTimesParser:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserErrorHandlingTest:assertError(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Ljava.lang.String;IILjava.lang.String;)V
org.codehaus.jparsec.misc.Reflection:wrapperClass(Ljava.lang.Class;)Ljava.lang.Class;
org.codehaus.jparsec.Sequence4Parser:Sequence4Parser(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map4;)V
org.codehaus.jparsec.pattern.Patterns.26:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.IsCharScanner:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parsers:toArray(Ljava.lang.Iterable;)[Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates:or([Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.pattern.CharPredicate;
org.codehaus.jparsec.functors.Maps.7:toString()Ljava.lang.String;
org.codehaus.jparsec.util.ObjectTester:assertEqual(Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.functors.Maps.9:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps.10:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.8:toString()Ljava.lang.String;
org.codehaus.jparsec.ParserState:ParserState(Ljava.lang.String;Ljava.lang.CharSequence;[Lorg.codehaus.jparsec.Token;ILorg.codehaus.jparsec.SourceLocator;ILjava.lang.Object;)V
org.codehaus.jparsec.InternalFunctors:firstOfTwo()Lorg.codehaus.jparsec.functors.Map2;
org.codehaus.jparsec.Asserts:assertStringScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;)V
org.codehaus.jparsec.misc.Reflection:isInstance(Ljava.lang.Class;Ljava.lang.Object;)Z
org.codehaus.jparsec.TestParsers:areChars(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:newReference()Lorg.codehaus.jparsec.Parser.Reference;
org.codehaus.jparsec.Operators.Suites:toArray()[Ljava.lang.String;
org.codehaus.jparsec.Parsers:pair(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:string(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:unary()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Maps:map(Ljava.util.Map;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.pattern.Pattern:some(I)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.functors.Maps.8:toString()Ljava.lang.String;
org.codehaus.jparsec.Indentation:analyzeIndentations(Ljava.util.List;Ljava.lang.Object;)Ljava.util.List; | OPERATOR | 6155 | - -> %
org.codehaus.jparsec.Parsers:sequence(Ljava.lang.Iterable;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Asserts:assertStringScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.String;)V
org.codehaus.jparsec.TokenizerMaps.1:map(Ljava.lang.String;)Lorg.codehaus.jparsec.Tokens.ScientificNotation;
org.codehaus.jparsec.Parser:map(Lorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:postfix([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser; | CONSTANT | 13348 | 0 -> -1
org.codehaus.jparsec.Parsers:shortest([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser; | OPERATOR | 17640 | == -> >
org.codehaus.jparsec.misc.Mapper:Mapper()V
org.codehaus.jparsec.ScannerState:ScannerState(Ljava.lang.String;Ljava.lang.CharSequence;IILorg.codehaus.jparsec.SourceLocator;Ljava.lang.Object;)V
org.codehaus.jparsec.OperatorTable:operators()[Lorg.codehaus.jparsec.OperatorTable.Operator;
org.codehaus.jparsec.Scanners:many(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.4:toString()Ljava.lang.String; | RETURN | 3201 | return null
org.codehaus.jparsec.Parsers:array([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:stringCaseInsensitive(Ljava.lang.String;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:never()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.InternalFunctors.6:toString()Ljava.lang.String;
org.codehaus.jparsec.Sequence3Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.ScannerState:isEof()Z
org.codehaus.jparsec.error.ErrorReporter:reportList(Ljava.lang.StringBuilder;Ljava.util.List;)V
org.codehaus.jparsec.Terminals:instance(Lorg.codehaus.jparsec.Parser;[Ljava.lang.String;[Ljava.lang.String;ZLorg.codehaus.jparsec.functors.Map;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.Parser:succeeds()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:or(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:prefix(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.Mapper:infix([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:isChar(CLjava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.functors.Tuple3:hashCode()I
org.codehaus.jparsec.misc.Mapper:prefix([Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Scanners:nestedScanner(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.DefaultSourceLocator:DefaultSourceLocator(Ljava.lang.CharSequence;IIC)V
org.codehaus.jparsec.EmptyListParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.misc.Mapper:Mapper(Ljava.lang.Object;Lorg.codehaus.jparsec.misc.Invokable;)V
org.codehaus.jparsec.Parser.Reference:lazy()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:infixn(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parser:Parser()V
org.codehaus.jparsec.Parser:sepEndBy(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.OperatorTableExpressionTest:parser()Lorg.codehaus.jparsec.Parser; | CONSTANT | 2252 | 80 -> -1
org.codehaus.jparsec.Parser:label(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:and([Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.OperatorTable.Operator:Operator(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.OperatorTable.Associativity;)V
org.codehaus.jparsec.ParserInternals:repeat(Lorg.codehaus.jparsec.Parser;ILorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.pattern.Patterns:optional(Lorg.codehaus.jparsec.pattern.Pattern;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.ParseContext:getIndex()I
org.codehaus.jparsec.ListFactories.1:newList()Ljava.util.List;
org.codehaus.jparsec.error.ParserException:ParserException(Lorg.codehaus.jparsec.error.ParseErrorDetails;Ljava.lang.String;Lorg.codehaus.jparsec.error.Location;)V
org.codehaus.jparsec.functors.Tuple5:equals(Lorg.codehaus.jparsec.functors.Tuple5;)Z
org.codehaus.jparsec.OperatorTable.Operator:compareTo(Lorg.codehaus.jparsec.OperatorTable.Operator;)I
org.codehaus.jparsec.functors.Tuple4:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Mapper:introspectMapperMethod(Ljava.lang.Class;)Lnet.sf.cglib.reflect.FastMethod; | ASSIGN | 21300 | = null
org.codehaus.jparsec.Asserts:assertScanner(Lorg.codehaus.jparsec.Parser;Ljava.lang.String;Ljava.lang.String;)V
org.codehaus.jparsec.ActionParser:toString()Ljava.lang.String;
org.codehaus.jparsec.ToTokenParser:toString()Ljava.lang.String;
org.codehaus.jparsec.Sequence2Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.util.IntList:size()I
org.codehaus.jparsec.pattern.CharPredicates.5:isChar(C)Z
org.codehaus.jparsec.pattern.Patterns.25:match(Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.BindNextParser:toString()Ljava.lang.String; | RETURN | 1988 | return null
org.codehaus.jparsec.InternalFunctors.7:toString()Ljava.lang.String;
org.codehaus.jparsec.OperatorTableExpressionTest:op(Ljava.lang.String;Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.Patterns:matchStringCaseInsensitive(Ljava.lang.String;Ljava.lang.CharSequence;II)I
org.codehaus.jparsec.functors.Maps.11:map(Ljava.lang.Object;)Ljava.lang.Object;
org.codehaus.jparsec.functors.Tuples:tuple(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Tuple5;
org.codehaus.jparsec.Scanners:many1(Lorg.codehaus.jparsec.pattern.CharPredicate;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Lexicon:token([Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.FailureParser:toString()Ljava.lang.String;
org.codehaus.jparsec.misc.Curry:checkFutureParameters(Ljava.lang.Class;I)V
org.codehaus.jparsec.Indentation.1:isChar(C)Z
org.codehaus.jparsec.util.Checks:checkMinMax(II)V
org.codehaus.jparsec.Parsers:constant(Ljava.lang.Object;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Terminals:equals(Ljava.lang.String;Ljava.lang.String;Z)Z
org.codehaus.jparsec.pattern.CharPredicates:notAmong(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.CharPredicate; | OPERATOR | 7785 | < -> <=
org.codehaus.jparsec.util.Lists:arrayList()Ljava.util.ArrayList;
org.codehaus.jparsec.Sequence5Parser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.FailureParser:FailureParser(Ljava.lang.String;)V
org.codehaus.jparsec.Terminals:caseSensitive([Ljava.lang.String;[Ljava.lang.String;)Lorg.codehaus.jparsec.Terminals;
org.codehaus.jparsec.Tokens:fragment(Ljava.lang.String;Ljava.lang.Object;)Lorg.codehaus.jparsec.Tokens.Fragment;
org.codehaus.jparsec.Lexicon:Lexicon(Lorg.codehaus.jparsec.functors.Map;Lorg.codehaus.jparsec.Parser;)V
org.codehaus.jparsec.Parser:sepEndBy1(Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.EmptyListParser:instance()Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.misc.MapperTest.8:map(Ljava.lang.String;III)Ljava.lang.String;
org.codehaus.jparsec.util.ObjectTester:assertNotEqual(Ljava.lang.Object;[Ljava.lang.Object;)V
org.codehaus.jparsec.pattern.Patterns:stringCaseInsensitive(Ljava.lang.String;)Lorg.codehaus.jparsec.pattern.Pattern;
org.codehaus.jparsec.Scanners:pattern(Lorg.codehaus.jparsec.pattern.Pattern;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ScannerState:ScannerState(Ljava.lang.String;Ljava.lang.CharSequence;ILorg.codehaus.jparsec.SourceLocator;)V
org.codehaus.jparsec.functors.Maps:constant(Ljava.lang.Object;)Lorg.codehaus.jparsec.functors.Map;
org.codehaus.jparsec.Parsers:eof(Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Parsers:between(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.Keywords:unique(Ljava.util.Comparator;[Ljava.lang.String;)[Ljava.lang.String;
org.codehaus.jparsec.ParseContext.1:getUnexpected()Ljava.lang.String;
org.codehaus.jparsec.Operators.Suite:Suite(Ljava.lang.String;)V | CONSTANT | 3775 | 0 -> 1
org.codehaus.jparsec.RepeatTimesParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.InternalFunctors.5:toString()Ljava.lang.String;
org.codehaus.jparsec.Parsers:tuple(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.pattern.CharPredicates.11:toString()Ljava.lang.String;
org.codehaus.jparsec.pattern.CharPredicates.19:isChar(C)Z
org.codehaus.jparsec.util.IntListTest:assertEqualArray([I[I)V
org.codehaus.jparsec.Keywords.CaseSensitive:toKey(Ljava.lang.String;)Ljava.lang.String;
org.codehaus.jparsec.Scanners:isChar(Lorg.codehaus.jparsec.pattern.CharPredicate;Ljava.lang.String;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.DefaultSourceLocator:scanTo(I)Lorg.codehaus.jparsec.error.Location;
org.codehaus.jparsec.Parsers:sequence(Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.Parser;Lorg.codehaus.jparsec.functors.Map4;)Lorg.codehaus.jparsec.Parser;
org.codehaus.jparsec.ScannerState:getInputName(I)Ljava.lang.String;
org.codehaus.jparsec.ActionParser:apply(Lorg.codehaus.jparsec.ParseContext;)Z
org.codehaus.jparsec.Parser:skipTimes(II)Lorg.codehaus.jparsec.Parser;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
620 1 169 1 551 1 529 1 795 3 90 1 440 4 254 1 33 1 299 2 41 1 263 1 293 2 302 3 100 1 840 1 215 1 771 1 
41 1 302 1 620 1 529 1 795 1 440 2 254 1 33 1 840 1 771 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
263 1 41 1 293 1 551 1 795 1 299 1 215 1 496 1 251 1 
41 1 795 1 215 1 496 1 251 1 
620 1 444 1 795 1 440 2 33 1 41 1 302 1 100 1 771 1 
444 1 620 1 551 1 795 2 440 2 33 1 299 1 36 1 41 1 263 1 293 1 302 1 100 1 215 1 771 1 
444 1 620 1 551 1 795 2 440 2 33 1 299 1 36 1 41 1 263 1 293 1 302 1 100 1 215 1 771 1 
620 1 551 1 795 2 440 2 33 1 299 2 36 1 41 1 263 1 293 2 302 1 100 1 215 1 771 1 
620 1 551 1 795 2 440 2 33 1 299 2 36 1 41 1 263 1 293 2 302 1 100 1 215 1 771 1 
620 1 551 1 795 2 440 2 33 1 299 2 36 1 41 1 263 1 293 2 302 1 100 1 215 1 771 1 
620 1 551 1 795 2 440 2 33 1 299 2 36 1 41 1 263 1 293 2 302 1 100 1 215 1 771 1 
620 1 551 1 795 2 440 2 33 1 299 2 36 1 41 1 263 1 293 2 302 1 100 1 215 1 771 1 
620 1 551 1 795 2 440 2 33 1 299 2 36 1 41 1 263 1 293 2 302 1 100 1 215 1 771 1 
41 1 620 1 840 1 771 1 
620 1 444 1 795 1 440 2 33 1 41 1 302 1 840 1 771 1 
620 1 551 1 795 1 440 2 33 1 41 1 263 1 302 1 840 1 771 1 
620 1 169 1 551 1 795 1 90 1 440 2 33 1 299 1 41 1 263 1 293 1 302 1 840 1 771 1 
444 1 620 1 169 1 551 1 529 1 795 3 90 1 440 3 33 1 299 2 41 1 263 1 293 2 302 2 100 1 840 1 215 1 771 1 
260 1 75 1 466 1 211 1 365 1 248 1 
163 1 
163 1 440 1 
163 1 440 1 659 1 
163 1 440 1 659 1 760 1 
163 1 440 1 659 1 
261 1 760 1 
444 1 440 1 
688 1 440 1 33 2 822 1 724 1 
130 1 679 1 
741 1 613 1 
725 1 23 1 
727 1 174 1 256 1 
373 1 565 1 520 1 
826 1 802 1 346 1 
739 1 319 1 167 1 
164 1 352 1 723 1 
171 2 696 1 665 1 42 1 358 1 304 1 561 1 95 2 
171 2 16 1 255 1 572 1 419 2 558 2 42 1 548 1 304 2 648 1 
199 1 171 2 51 1 789 1 558 2 81 1 86 2 140 2 
171 2 558 2 787 1 525 1 42 1 546 1 437 1 149 2 86 2 19 1 304 4 548 1 287 1 803 2 
171 1 312 1 696 2 822 1 459 1 42 2 304 2 264 1 95 1 724 1 
171 2 312 1 696 2 822 1 459 1 42 2 304 2 264 1 427 1 95 2 724 1 
171 1 767 1 312 1 572 2 419 1 822 1 459 2 558 1 42 2 304 4 548 2 270 1 724 1 
171 1 51 1 789 2 558 1 86 1 140 1 724 1 
312 1 664 1 558 1 546 2 149 1 86 1 548 2 304 8 171 1 483 1 123 1 767 1 822 1 459 4 787 2 525 2 42 2 803 1 724 1 
339 2 515 1 367 1 55 1 635 1 67 1 555 1 596 1 776 1 808 1 627 1 6 1 456 2 333 1 824 1 93 1 325 1 362 1 154 1 488 2 
266 1 541 1 808 1 641 1 300 1 104 1 
309 1 300 1 808 1 390 1 
0 1 127 1 328 1 260 1 686 1 529 1 155 1 448 1 663 1 607 1 300 3 263 1 451 1 302 1 666 1 641 1 730 1 794 1 535 2 795 1 137 1 309 2 240 1 211 1 41 1 266 1 825 1 163 1 365 1 699 2 390 2 771 1 14 1 620 1 516 1 674 1 144 1 518 1 440 1 541 1 776 1 599 1 705 1 652 1 808 5 840 1 104 1 842 1 551 1 426 1 254 1 713 1 784 1 603 1 786 1 656 1 684 1 553 2 78 1 813 1 503 1 327 1 759 1 579 1 760 1 
382 1 742 1 144 3 314 1 451 3 545 1 304 2 521 1 424 1 306 4 249 1 361 2 375 1 589 1 296 2 695 2 183 1 
0 7 260 1 156 2 155 2 448 3 355 2 451 2 407 2 302 1 666 3 304 1 729 2 306 2 361 2 730 3 794 4 795 1 614 1 211 1 564 2 799 1 163 1 365 1 310 2 14 1 620 2 516 2 217 1 746 1 676 1 313 1 268 1 314 1 810 1 73 2 375 1 629 1 426 1 271 2 684 2 27 1 526 1 813 4 471 1 327 2 759 1 579 2 760 1 328 2 382 2 686 1 529 1 178 1 477 1 480 2 433 1 587 1 643 2 482 1 535 3 589 1 137 4 240 1 41 2 825 2 142 1 771 2 143 1 144 2 96 2 440 1 651 4 776 7 705 2 599 1 545 1 394 1 840 1 249 1 252 1 254 2 784 4 713 2 296 1 603 3 151 1 297 2 656 2 786 1 553 12 
0 7 260 1 156 2 155 2 448 3 355 2 451 2 407 2 302 1 666 3 304 1 729 2 306 2 361 2 730 3 794 4 795 1 614 1 211 1 564 2 799 1 163 1 365 1 310 2 14 1 620 2 516 2 217 1 746 1 676 1 313 1 268 1 314 1 810 1 73 2 375 1 426 1 271 2 684 2 27 1 526 1 813 4 471 1 327 2 759 1 579 2 760 1 328 2 382 2 686 1 529 1 178 1 477 1 131 1 480 2 433 1 587 1 643 2 482 1 535 3 589 1 137 4 240 1 41 2 825 2 142 1 771 2 143 1 144 2 96 2 440 1 651 4 776 7 705 2 599 1 545 1 394 1 840 1 249 1 252 1 254 2 784 4 713 2 296 1 603 3 151 1 297 2 656 2 786 1 553 12 
0 2 3 1 299 1 448 1 200 1 406 1 607 4 300 3 263 1 451 1 302 1 666 2 510 1 306 3 307 1 730 1 794 2 209 1 795 1 670 1 671 1 309 3 266 4 163 1 14 1 216 1 620 1 516 1 674 4 218 7 518 2 746 1 165 1 314 1 18 2 122 1 462 1 808 6 169 1 76 1 24 1 271 1 684 2 78 3 173 2 272 2 813 2 471 1 327 1 275 4 579 1 29 1 127 3 428 5 686 2 529 1 276 1 179 1 232 2 430 2 279 1 641 1 482 1 535 7 819 1 90 1 137 1 240 2 239 1 820 1 334 1 41 1 825 1 699 3 390 3 771 1 47 1 491 2 144 1 96 2 440 1 541 6 776 11 293 1 705 1 545 1 777 1 840 1 191 4 104 2 551 1 601 1 552 2 254 1 784 7 296 1 603 2 297 1 349 1 656 1 553 12 195 1 503 2 
382 1 204 1 757 1 162 1 306 1 
382 1 151 1 799 1 480 1 306 1 
730 1 156 1 522 1 
387 1 122 1 395 1 
336 1 410 1 353 1 
753 1 132 1 
203 1 441 1 833 1 
829 1 746 1 776 1 623 2 166 2 817 2 838 1 560 1 442 1 682 1 818 1 482 1 113 1 106 1 196 1 
829 1 818 1 482 1 746 1 776 1 106 1 623 2 196 1 119 1 166 2 817 2 280 1 121 1 442 1 
829 1 193 1 
818 1 482 1 252 1 746 1 456 1 313 1 776 2 106 1 204 1 826 1 186 1 802 1 
106 1 818 1 826 1 456 1 802 1 
281 1 813 1 785 1 
813 1 671 1 24 1 
422 1 227 1 773 1 49 1 668 1 456 1 675 1 372 1 
773 1 675 1 49 1 422 1 584 1 372 1 456 1 
732 1 422 1 315 1 238 1 773 1 49 1 153 1 456 1 675 1 372 1 374 2 486 2 822 1 700 1 490 3 717 1 401 1 724 1 
513 1 619 1 422 1 625 1 317 1 773 1 49 1 776 1 456 2 675 1 807 1 810 1 372 1 697 1 
634 1 384 1 608 1 507 1 451 1 765 1 283 1 482 1 209 1 456 2 513 1 697 1 824 1 592 1 139 1 737 1 338 1 619 2 773 1 675 1 567 1 144 1 743 1 746 1 49 1 495 1 776 4 807 1 422 1 625 1 317 1 627 1 810 1 372 1 721 1 
513 1 619 1 422 1 317 1 634 1 765 1 139 1 773 1 144 1 49 1 776 1 451 1 456 1 675 1 807 1 810 1 372 1 
619 1 634 1 773 1 675 1 144 1 703 1 49 1 776 1 422 1 451 1 317 1 511 1 810 1 372 1 485 1 456 1 513 1 139 1 
773 1 675 1 56 1 49 1 807 1 422 1 317 1 372 1 732 1 456 1 238 1 717 1 401 1 738 1 
489 1 773 1 675 1 49 1 807 1 422 1 317 1 235 1 372 1 456 1 
8 1 513 1 619 1 422 1 317 1 773 1 49 1 776 1 456 2 675 1 807 1 810 1 372 1 697 1 
634 1 384 1 608 1 507 1 451 1 283 1 8 1 482 1 209 1 456 2 513 1 697 1 824 1 592 1 768 1 737 1 338 1 619 2 773 1 675 1 567 1 144 1 743 1 746 1 49 1 495 1 776 4 807 1 422 1 317 1 627 1 810 1 372 1 721 1 
513 1 619 1 422 1 317 1 634 1 768 1 773 1 144 1 49 1 776 1 451 1 456 1 675 1 807 1 810 1 372 1 
513 1 619 1 422 1 317 1 773 1 49 1 776 1 456 2 675 1 807 1 810 1 372 1 697 1 101 1 
634 1 384 1 608 1 507 1 451 1 283 1 482 1 209 1 456 2 513 1 697 1 824 1 592 1 139 1 737 1 338 1 619 2 773 1 675 1 567 1 144 1 743 1 746 1 49 1 747 1 495 1 776 4 807 1 422 1 317 1 101 1 627 1 810 1 372 1 721 1 
513 1 619 1 747 1 422 1 317 1 634 1 139 1 773 1 144 1 49 1 776 1 451 1 456 1 675 1 807 1 810 1 372 1 
511 1 513 1 619 1 422 1 317 1 634 1 139 1 773 1 144 1 49 1 776 1 451 1 456 1 675 1 810 1 372 1 485 1 703 1 
511 1 513 1 619 1 422 1 317 1 634 1 139 1 773 1 144 1 49 1 776 1 451 1 456 1 675 1 810 1 372 1 485 1 703 1 
511 1 513 1 619 1 422 1 317 1 634 1 139 1 773 1 144 1 49 1 776 1 451 1 456 1 675 1 810 1 372 1 485 1 703 1 
49 1 456 1 
49 1 456 1 
49 1 456 1 
49 1 456 1 
401 1 732 1 49 1 456 1 238 1 717 1 
335 1 401 1 732 1 49 1 456 1 717 1 
401 1 732 1 49 1 456 1 238 1 717 1 
489 1 773 1 675 1 49 1 807 1 422 1 317 1 372 1 456 1 
773 1 675 1 56 1 49 1 807 1 422 1 317 1 372 1 456 1 
489 1 773 1 675 1 49 1 807 1 422 1 317 1 372 1 732 1 456 1 238 1 717 1 401 1 
619 1 773 1 675 1 49 1 776 1 807 1 422 1 317 1 810 1 372 1 8 1 732 1 456 2 513 1 238 1 717 1 697 1 401 1 
619 1 634 1 773 1 675 1 144 1 49 1 776 1 807 1 422 1 451 1 317 1 810 1 372 1 456 1 513 1 768 1 
619 1 773 1 675 1 49 1 776 1 807 1 422 1 317 1 101 1 810 1 372 1 732 1 456 2 513 1 238 1 717 1 697 1 401 1 
619 1 634 1 773 1 675 1 144 1 49 1 747 1 776 1 807 1 422 1 451 1 317 1 810 1 372 1 456 1 513 1 139 1 
619 1 773 1 675 1 49 1 776 1 807 1 422 1 625 1 317 1 810 1 372 1 456 2 513 1 697 1 
619 1 634 1 773 1 675 1 144 1 49 1 776 1 807 1 422 1 451 1 317 1 765 1 810 1 372 1 456 1 513 1 139 1 
773 1 675 1 703 1 49 1 421 1 422 1 317 1 372 1 732 1 485 1 456 1 238 1 717 1 401 1 
447 1 227 1 
0 3 202 1 730 1 732 1 513 1 619 1 620 1 516 1 746 1 749 1 625 1 20 1 759 1 327 1 328 1 135 1 137 1 41 1 771 1 776 3 543 1 653 1 550 1 254 1 656 1 553 3 156 1 448 1 662 1 790 1 666 1 794 1 669 1 456 2 810 1 372 1 271 1 467 1 469 1 813 1 579 1 685 1 476 1 583 2 181 1 692 1 85 2 482 1 697 1 825 1 703 1 705 1 710 1 714 1 603 1 297 1 717 1 
0 4 506 1 202 1 730 1 732 1 513 1 619 1 620 1 516 1 746 1 622 1 749 1 754 1 759 1 327 1 328 1 634 1 765 1 135 1 137 1 41 1 139 1 771 1 144 1 776 4 653 1 550 1 254 1 656 1 553 4 156 1 448 1 790 1 451 1 666 1 794 1 669 1 456 1 573 1 810 1 372 1 271 1 467 1 469 1 813 1 472 1 579 1 685 1 476 1 583 2 181 1 692 1 85 2 482 1 821 1 825 1 703 1 705 1 710 1 603 1 297 1 717 1 402 1 
109 1 328 1 634 1 0 4 685 1 156 1 448 1 449 1 451 1 181 1 666 1 85 2 692 1 511 1 730 1 482 1 794 1 732 1 456 1 137 1 513 1 41 1 825 1 139 1 771 1 619 1 620 1 516 1 144 1 746 1 703 1 17 1 622 1 776 4 705 1 710 1 810 1 653 1 754 1 254 1 603 1 271 1 297 1 717 1 656 1 553 4 469 1 813 1 472 1 759 1 327 1 579 1 
202 1 303 1 513 1 738 1 749 1 135 1 776 1 550 1 56 1 790 1 669 1 456 1 810 1 372 1 467 1 476 1 583 2 85 1 703 1 
0 2 202 1 730 1 732 1 513 1 620 1 516 1 749 1 227 1 759 1 327 1 328 1 235 1 135 1 137 1 41 1 771 1 539 1 776 2 653 1 550 1 254 1 656 1 553 2 156 1 447 1 448 1 790 1 666 1 794 1 669 1 456 1 269 1 810 1 372 1 467 1 469 1 813 1 579 1 685 1 476 1 583 2 181 1 692 1 85 2 586 1 825 1 489 1 703 1 705 1 710 1 603 1 297 1 717 1 
0 3 301 1 202 1 730 1 8 1 732 1 513 1 619 1 620 1 516 1 746 1 749 1 759 1 327 1 328 1 135 1 137 1 41 1 771 1 776 3 653 1 550 1 254 1 656 1 553 3 156 1 448 1 790 1 666 1 794 1 159 1 669 1 456 2 810 1 372 1 271 1 467 1 469 1 813 1 579 1 685 1 476 1 583 2 181 1 692 1 85 2 87 1 482 1 697 1 825 1 703 1 705 1 710 1 603 1 297 1 717 1 
0 4 202 1 730 1 732 1 513 1 619 1 620 1 516 1 746 1 749 1 124 1 631 1 759 1 327 1 328 1 634 1 135 1 137 1 41 1 768 1 771 1 144 2 776 4 653 1 550 1 254 1 656 1 553 4 156 1 448 1 790 1 451 2 666 1 794 1 669 1 456 1 571 1 810 1 372 1 271 1 467 1 469 1 80 1 813 1 579 1 685 1 476 1 583 2 181 1 692 1 85 2 283 1 482 1 825 1 391 1 703 1 705 1 709 1 710 1 603 1 297 1 717 1 721 1 
0 3 202 1 730 1 732 1 513 1 619 1 620 1 516 1 746 1 749 1 759 1 327 1 328 1 135 1 137 1 41 1 771 1 776 3 653 1 550 1 254 1 656 1 553 3 156 1 448 1 356 1 790 1 666 1 794 1 669 1 456 2 64 1 810 1 372 1 271 1 467 1 469 1 813 1 579 1 685 1 476 1 583 2 181 1 692 1 85 2 482 1 484 1 697 1 825 1 703 1 705 1 710 1 101 1 603 1 297 1 717 1 
0 4 202 1 730 1 513 1 619 1 620 1 516 1 746 1 747 1 622 1 749 1 754 1 759 1 327 1 328 1 634 1 135 1 137 1 41 1 139 1 771 1 144 1 776 4 550 1 254 1 656 1 553 4 156 1 448 1 556 1 790 1 451 1 666 1 794 1 669 1 456 1 810 1 372 1 271 1 467 1 379 1 813 1 472 1 579 1 476 1 583 2 85 1 482 1 825 1 703 1 705 1 603 1 297 1 
109 1 202 1 732 1 17 1 749 1 135 1 653 1 550 1 790 1 372 1 74 1 467 1 469 1 685 1 583 2 181 1 692 1 85 1 707 2 710 1 717 1 
109 1 202 1 732 1 17 1 749 1 135 1 653 1 550 1 54 1 790 1 372 1 467 1 469 1 685 1 583 2 181 1 692 1 85 1 707 2 710 1 717 1 
109 1 0 4 202 1 511 1 730 1 732 1 513 1 619 1 620 1 516 1 746 1 17 1 622 1 749 1 754 1 759 1 327 1 328 1 634 1 135 1 137 1 41 1 139 1 771 1 144 1 776 4 653 1 550 1 254 1 656 1 553 4 156 1 448 1 790 1 451 1 666 1 794 1 456 1 461 1 810 1 372 1 271 1 467 1 469 1 813 1 472 1 579 1 685 1 583 2 181 1 692 1 85 2 482 1 825 1 703 1 705 1 710 1 603 1 297 1 717 1 
135 3 790 1 749 1 467 1 583 1 202 1 
135 1 790 1 749 1 583 1 202 1 
202 1 749 1 135 1 550 1 790 1 372 1 467 1 583 2 
202 1 749 1 135 1 550 1 790 1 372 1 467 1 583 2 
202 1 749 1 135 2 550 1 449 1 790 1 372 1 467 1 583 2 
109 1 202 1 732 1 17 1 749 1 38 1 135 1 653 1 550 1 790 1 372 1 467 1 469 1 685 1 583 2 181 1 692 1 85 1 707 2 710 1 717 1 
511 1 513 1 619 1 422 1 317 1 634 1 139 1 773 1 144 1 49 1 776 1 451 1 456 1 675 1 810 1 372 1 485 1 389 1 703 1 
109 1 653 1 685 1 227 1 447 1 732 1 17 1 449 1 717 1 469 1 181 1 692 1 578 1 85 1 710 1 
109 1 653 1 685 1 289 1 17 1 584 1 707 1 469 1 85 1 
634 1 773 1 675 1 144 1 703 1 49 1 422 1 451 1 317 1 511 1 372 1 485 1 265 1 456 1 389 1 139 1 
109 1 0 4 202 1 511 1 730 1 732 1 513 1 619 1 620 1 516 1 746 1 17 1 622 1 749 1 754 1 759 1 327 1 328 1 634 1 236 1 135 1 137 1 41 1 139 1 771 1 144 1 776 4 653 1 550 1 254 1 656 1 553 4 156 1 448 1 790 1 451 1 666 1 794 1 456 1 810 1 464 1 372 1 271 1 467 1 469 1 813 1 472 1 579 1 685 1 583 2 181 1 692 1 85 2 88 1 482 1 825 1 703 1 705 1 710 1 295 1 603 1 297 1 717 1 
608 1 511 1 209 1 732 1 513 1 619 1 743 1 746 1 422 1 317 1 634 1 238 1 139 1 338 1 773 1 144 1 49 1 776 3 451 1 456 1 675 1 567 1 810 1 372 1 283 1 482 1 485 1 389 1 703 1 495 1 717 1 401 1 721 1 
634 1 608 1 451 1 283 1 482 1 209 1 732 1 456 1 513 1 238 1 389 1 768 1 338 1 619 1 773 1 675 1 567 1 144 1 743 1 746 1 49 1 495 1 776 3 807 1 422 1 317 1 810 1 372 1 717 1 401 1 721 1 
634 1 608 1 451 1 283 1 482 1 209 1 732 1 456 1 513 1 238 1 389 1 139 1 338 1 619 1 773 1 675 1 567 1 144 1 743 1 746 1 49 1 747 1 495 1 776 3 807 1 422 1 317 1 810 1 372 1 717 1 401 1 721 1 
634 1 448 1 608 1 451 1 666 1 765 1 283 1 730 1 482 1 694 1 209 1 732 1 456 3 513 1 238 1 697 1 389 1 139 1 338 1 619 2 773 1 675 1 567 1 144 1 743 1 746 1 49 1 495 1 776 4 807 1 422 1 625 1 317 1 810 1 522 1 372 1 603 1 717 1 401 1 721 1 
634 1 202 1 451 1 236 1 8 1 482 1 209 2 456 3 697 1 389 1 768 1 338 2 619 2 773 1 675 1 567 1 144 1 746 1 49 1 776 2 422 1 749 1 810 1 372 2 550 1 
634 1 202 1 451 1 236 1 482 1 209 2 456 3 697 1 389 1 338 2 619 2 773 1 675 1 567 1 144 1 746 1 49 1 747 1 776 2 422 1 749 1 101 1 810 1 372 2 550 1 
634 1 202 1 451 1 765 1 236 1 482 1 209 2 456 3 697 1 389 1 338 2 619 2 773 1 675 1 567 1 144 1 746 1 49 1 776 2 422 1 749 1 625 1 810 1 372 2 550 1 
109 1 653 1 685 1 289 1 732 1 17 1 717 1 584 1 707 1 335 1 469 1 85 1 692 1 710 1 
202 1 10 1 749 1 135 1 550 1 790 1 372 1 467 1 583 2 
335 1 
732 1 717 1 
710 1 732 1 717 1 
717 1 
193 1 409 1 831 1 689 1 735 1 813 3 
831 1 409 1 689 1 616 1 813 2 326 1 598 1 
1 1 788 1 507 1 450 1 666 5 559 1 510 1 305 1 7 4 562 1 210 1 456 4 800 1 737 1 63 1 415 1 216 2 220 1 69 4 72 4 122 1 223 1 751 1 627 1 810 1 376 1 813 1 471 1 29 2 475 1 530 1 231 1 279 1 478 1 281 4 764 1 136 4 824 1 592 1 488 4 593 1 339 4 775 1 776 15 98 1 542 1 246 1 188 2 778 1 781 5 257 1 603 5 659 1 
478 1 188 1 475 1 751 1 813 1 810 1 776 1 
105 1 563 1 99 1 
788 2 105 1 781 1 563 1 417 1 99 1 
562 1 1 1 788 1 781 5 98 1 542 1 813 1 559 1 751 1 
381 1 177 1 816 1 505 1 689 1 83 1 761 1 200 1 279 1 430 1 817 1 666 1 510 1 818 4 113 1 482 2 409 1 819 1 646 1 456 1 820 1 334 1 735 1 616 1 739 1 829 1 216 1 340 1 831 1 746 2 313 2 776 10 598 1 165 1 623 1 166 1 777 1 838 1 122 1 681 1 442 1 191 3 682 1 443 1 319 1 252 2 603 1 151 1 756 1 811 1 106 1 196 1 173 1 230 1 813 3 470 1 326 1 275 3 29 1 
0 2 260 1 155 1 57 1 448 1 357 1 451 1 302 1 666 2 510 1 452 1 360 1 730 1 794 2 795 1 455 1 512 1 61 1 211 1 160 1 163 1 802 1 14 1 566 1 515 1 620 1 516 1 217 1 368 1 517 1 122 1 369 1 463 1 170 1 228 1 756 1 684 1 323 1 813 1 327 1 759 2 579 1 474 1 529 1 530 1 231 1 430 1 279 1 431 1 766 1 535 2 137 1 240 2 41 1 825 1 826 1 771 1 392 1 144 1 830 1 96 1 440 1 244 1 494 2 776 7 146 1 705 1 184 1 599 1 185 1 188 1 394 2 839 1 840 1 104 2 248 1 347 1 842 1 348 1 254 1 784 1 713 1 603 2 716 1 656 1 786 1 553 7 720 2 
0 4 260 1 155 1 57 1 448 1 451 1 302 1 666 4 510 3 360 1 730 1 794 4 795 1 455 1 512 2 61 2 210 1 733 1 211 1 160 1 163 1 802 1 14 1 566 1 515 2 620 1 516 1 217 1 368 1 517 1 122 3 369 1 810 2 463 1 170 1 228 1 684 2 377 1 323 1 813 1 327 1 759 4 579 1 686 1 474 1 529 1 530 1 231 1 279 3 430 1 431 1 766 2 535 3 387 2 137 1 240 2 41 1 825 1 826 1 771 1 392 1 144 1 830 1 96 1 440 1 244 1 494 4 776 12 146 1 705 1 184 1 599 1 188 1 394 3 839 2 840 1 104 4 248 1 347 1 842 1 348 1 254 1 784 2 713 1 603 4 716 1 297 2 656 1 786 1 553 9 720 4 
0 6 260 2 155 1 448 1 110 1 357 1 451 1 302 1 666 4 510 3 452 1 730 1 794 7 795 1 512 2 61 2 210 1 733 1 211 1 514 1 163 1 14 1 515 2 566 1 620 1 516 1 217 1 748 1 122 3 810 2 226 2 170 1 466 1 756 1 684 5 26 1 377 1 813 1 759 6 327 1 579 1 815 1 686 2 474 1 529 1 530 1 277 1 231 1 37 1 279 3 766 2 535 6 387 4 137 1 240 5 41 1 825 1 771 1 144 1 96 2 440 1 494 6 776 11 705 1 184 1 599 1 185 1 188 1 394 4 839 2 102 1 840 1 104 6 248 1 842 1 254 1 784 5 713 1 603 4 716 1 399 1 297 4 656 1 786 1 553 10 52 2 720 6 
528 2 0 2 260 2 686 2 529 1 155 1 474 1 530 1 448 1 110 1 277 1 37 1 231 1 357 1 451 1 302 1 279 1 666 2 510 1 452 1 766 1 730 1 794 3 535 6 795 1 512 1 61 1 137 1 240 5 211 1 41 1 825 1 514 1 163 1 141 1 771 1 14 1 566 1 515 1 620 1 217 1 516 1 144 1 96 2 440 1 494 2 748 1 776 7 599 1 184 1 344 1 705 1 185 1 188 1 122 1 394 2 839 1 102 1 840 1 248 1 104 2 842 1 226 2 170 1 466 1 254 1 713 1 784 5 603 2 399 1 716 1 756 1 786 1 656 1 684 5 553 6 52 2 26 1 813 1 327 1 759 2 815 1 579 1 720 2 
528 1 0 4 260 1 686 2 529 1 155 1 474 1 530 1 448 1 231 1 451 1 302 1 279 3 666 4 510 3 766 2 730 1 794 5 535 2 795 1 387 3 512 2 61 2 733 1 210 1 137 1 240 2 211 1 41 1 825 1 163 1 365 1 141 1 771 1 14 1 566 1 515 2 620 1 217 1 516 1 144 1 96 1 440 1 494 3 776 10 599 1 184 1 344 1 705 1 188 1 122 3 394 3 839 2 840 1 810 2 104 3 842 1 170 1 426 1 254 1 713 1 784 1 603 4 716 1 297 2 786 1 656 1 684 1 553 7 377 1 813 1 327 1 759 4 579 1 720 4 760 1 
260 1 474 1 155 1 529 1 530 1 448 1 277 1 37 1 231 1 357 3 451 1 302 1 666 1 452 1 730 1 794 1 535 4 795 1 137 1 240 3 211 1 41 1 825 1 514 1 163 1 771 1 14 1 566 1 620 1 516 1 217 1 144 1 96 2 440 1 748 1 776 3 705 1 184 1 599 1 185 3 188 1 102 1 840 1 248 1 842 1 170 1 466 1 254 1 784 3 713 1 603 1 716 1 399 1 756 2 786 1 656 1 553 4 684 3 813 1 327 1 579 1 
0 1 260 1 529 1 155 1 474 1 57 1 530 1 448 1 231 1 451 1 302 1 430 1 666 1 452 1 431 1 766 1 730 1 794 1 535 2 795 1 455 1 512 1 61 1 137 1 240 1 211 1 41 1 160 1 825 1 826 1 163 1 802 1 771 1 14 1 392 1 566 1 515 1 620 1 217 1 516 1 830 1 144 1 517 1 96 1 440 1 494 1 244 1 776 6 146 1 599 1 184 1 705 1 188 1 394 1 369 1 839 1 840 1 463 1 248 1 104 1 842 1 347 1 348 1 170 1 254 1 713 1 784 1 603 1 228 1 786 1 656 1 684 1 553 6 323 1 813 1 327 1 759 1 579 1 720 1 
260 1 474 1 155 1 529 1 530 1 448 1 110 1 231 1 451 1 302 1 666 1 452 1 730 1 794 1 535 2 795 1 137 1 240 1 41 1 825 1 163 1 771 1 14 1 566 1 620 1 516 1 217 1 144 1 96 1 440 1 776 3 705 1 184 1 599 1 188 1 840 1 842 1 226 1 170 1 254 1 784 1 713 1 603 1 786 1 656 1 553 3 52 1 684 1 26 1 813 1 327 1 579 1 815 1 
528 1 260 1 686 1 474 1 155 1 529 1 530 1 448 1 231 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 141 1 771 1 14 1 566 1 620 1 516 1 217 1 144 1 96 1 440 1 776 3 705 1 344 1 184 1 599 1 188 1 840 1 842 1 170 1 426 1 254 1 784 1 713 1 603 1 786 1 656 1 553 3 684 1 813 1 327 1 579 1 760 1 
260 1 686 1 529 1 474 1 155 1 530 1 448 1 231 1 451 1 302 1 666 1 766 1 730 1 794 1 535 2 795 1 512 1 61 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 771 1 14 1 515 1 566 1 620 1 516 1 217 1 144 1 96 1 440 1 494 1 776 3 184 1 705 1 599 1 188 1 839 1 840 1 104 1 842 1 170 1 426 1 254 1 713 1 784 1 603 1 786 1 656 1 553 3 684 1 813 1 327 1 759 1 579 1 720 1 760 1 
0 7 260 1 428 1 686 3 529 1 155 1 474 2 530 1 448 1 231 1 451 1 302 1 279 3 666 4 510 3 766 2 730 1 794 8 535 2 795 1 387 5 158 1 512 2 61 2 733 1 210 1 137 1 240 3 211 1 41 1 825 1 163 1 365 1 771 1 14 1 566 1 515 2 620 1 217 1 516 1 144 1 96 2 440 1 494 7 343 1 776 11 599 1 184 1 705 1 188 1 394 4 122 3 839 2 840 1 191 1 810 2 104 7 842 1 170 1 172 1 426 1 254 1 713 1 784 1 603 4 716 1 297 4 786 1 656 1 684 1 553 12 377 1 813 1 759 7 275 1 327 1 579 1 720 7 760 1 
0 7 260 1 686 3 529 1 155 1 474 1 530 2 448 1 231 2 451 1 302 1 279 3 666 4 510 3 766 2 730 1 794 8 535 2 795 1 387 5 512 2 61 2 733 1 210 1 137 1 240 3 211 1 41 1 825 1 163 1 365 1 771 1 14 1 566 2 515 2 620 1 217 1 516 1 144 1 96 2 440 1 494 7 776 10 599 1 184 2 705 1 188 2 122 3 394 4 839 2 840 1 810 2 104 7 842 1 170 2 426 1 254 1 713 1 784 1 603 4 716 1 297 4 786 1 656 1 684 1 553 11 377 1 813 1 327 1 759 7 579 1 720 7 760 1 
0 7 260 1 686 3 529 1 155 1 474 1 530 1 448 1 231 1 37 1 451 1 302 1 279 3 666 4 510 3 766 2 730 1 794 8 535 2 795 1 387 5 512 2 61 2 733 1 210 1 137 1 240 3 211 1 41 1 825 1 514 1 163 1 365 1 771 1 14 1 566 1 515 2 620 1 217 1 516 1 144 1 96 3 440 1 494 7 776 10 599 1 184 1 705 1 188 1 394 4 122 3 839 2 102 1 840 1 810 2 104 7 842 1 170 1 426 1 254 1 713 1 784 1 603 4 716 1 399 1 297 4 786 1 656 1 684 1 553 11 377 1 378 1 813 1 327 1 759 7 579 1 720 7 760 1 
0 3 260 1 686 1 529 1 155 1 474 1 530 1 448 1 277 1 231 1 357 1 451 1 302 1 279 3 666 4 510 3 766 2 730 1 794 4 535 3 795 1 387 2 512 2 61 2 733 1 210 1 137 1 240 2 211 1 41 1 825 1 163 1 365 1 771 1 14 1 566 1 515 2 620 1 217 1 516 1 144 1 96 1 440 1 494 2 748 1 776 9 599 1 184 1 705 1 185 1 188 1 394 1 122 3 839 2 840 1 810 2 104 2 842 1 170 1 426 1 254 1 713 1 784 2 603 4 716 1 297 2 756 1 786 1 656 1 684 2 553 6 377 1 813 1 759 2 327 1 720 2 579 1 760 1 
0 7 260 1 686 2 529 1 155 1 474 1 530 1 448 1 231 1 451 1 302 1 279 2 666 3 281 1 510 2 7 1 766 1 534 1 730 1 794 8 535 2 795 1 387 5 136 1 512 1 615 1 61 1 733 1 210 1 456 1 137 1 240 2 211 1 41 1 825 1 163 1 488 1 365 1 771 1 14 1 339 1 515 1 566 1 620 1 217 1 516 1 144 1 96 1 440 1 494 5 776 8 69 1 599 1 184 1 705 1 678 1 188 1 394 3 72 1 122 2 839 1 840 1 810 2 104 5 549 1 842 1 170 1 426 1 254 1 713 1 784 1 603 3 716 1 297 4 785 1 786 1 656 1 684 1 553 11 195 1 377 1 813 2 759 5 327 1 720 5 579 1 760 1 
528 1 428 1 260 1 686 1 155 1 529 1 448 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 141 2 771 1 14 1 620 1 516 1 217 1 144 1 96 1 440 1 776 4 705 1 344 2 599 1 779 1 191 1 840 1 842 1 426 1 254 1 784 1 713 1 603 1 656 1 786 1 553 3 684 1 813 1 275 1 327 1 579 1 760 1 
739 1 829 1 381 1 805 1 177 1 340 1 505 1 816 1 831 1 689 1 83 1 746 1 761 1 776 2 598 1 623 1 166 1 817 1 838 1 191 1 442 1 682 1 818 4 443 1 482 1 113 1 319 1 409 1 646 1 456 1 756 1 811 1 106 1 196 1 735 1 616 1 813 3 326 1 275 1 
0 2 328 1 620 1 516 1 156 1 65 1 341 1 774 1 448 1 583 1 776 3 705 1 666 1 408 1 59 1 810 1 730 1 794 1 254 1 137 1 734 1 603 1 467 1 297 1 656 1 553 2 41 1 825 1 813 1 471 1 759 1 327 1 579 1 771 1 
14 1 620 1 217 1 516 1 529 1 218 2 65 1 440 1 341 1 774 1 448 1 583 1 776 2 705 1 302 1 666 1 59 1 840 1 730 1 794 1 535 1 795 1 254 1 784 1 734 1 603 1 137 1 467 1 349 1 656 1 553 2 41 1 825 1 163 1 813 1 327 1 579 1 771 1 
328 1 0 3 127 1 48 1 620 1 674 1 516 1 156 2 448 2 607 1 776 4 507 1 705 1 666 2 627 1 810 1 398 1 730 2 794 2 254 1 137 1 603 2 513 1 297 1 656 1 553 3 41 1 824 1 825 1 592 1 813 1 471 1 737 1 759 1 327 1 579 1 771 1 
328 1 0 6 260 1 686 1 529 1 155 1 156 1 448 2 451 1 302 1 665 1 279 1 358 1 666 4 304 1 510 1 452 1 561 1 766 1 112 1 730 2 794 6 535 2 694 1 795 1 387 2 512 1 61 1 210 1 137 2 240 1 696 1 211 1 41 2 825 2 42 1 163 1 736 1 365 1 95 2 771 2 14 1 515 1 620 2 516 2 144 1 440 1 494 2 776 6 599 1 705 2 122 1 394 2 839 1 840 1 810 1 104 2 842 1 171 2 426 1 254 2 713 1 784 1 603 4 297 2 786 1 656 2 684 1 553 8 377 1 813 2 471 1 327 2 759 3 579 2 720 2 760 1 
0 4 328 1 260 1 686 1 529 1 155 1 156 1 32 1 448 2 451 1 302 1 666 2 452 1 766 1 112 1 730 2 794 2 535 2 795 1 410 1 512 1 61 1 137 2 240 1 211 1 41 2 825 2 336 1 163 1 617 1 365 1 771 2 14 1 515 1 620 2 516 2 144 1 440 1 494 2 776 4 599 1 705 2 394 2 839 1 840 1 104 2 224 1 225 1 842 1 426 1 254 2 713 1 784 1 603 2 786 1 656 2 684 1 553 6 758 2 813 2 471 1 327 2 353 1 759 3 579 2 720 2 760 1 
328 1 0 2 620 1 516 1 156 1 448 1 776 1 705 1 430 1 666 1 730 1 794 1 254 1 603 1 137 1 297 1 656 1 553 2 41 1 825 1 813 1 471 1 327 1 759 1 579 1 771 1 
260 1 155 1 529 1 448 1 357 1 451 1 302 1 666 1 452 1 112 1 730 1 794 1 535 2 795 1 137 1 240 1 211 1 41 1 242 1 825 1 163 1 771 1 14 1 620 1 516 1 144 1 440 1 776 1 705 1 599 1 185 1 840 1 248 1 842 1 254 1 466 1 784 1 713 1 603 1 756 1 656 1 786 1 553 2 684 1 813 1 327 1 579 1 
328 1 0 5 127 1 156 2 448 2 607 1 507 1 279 2 666 4 510 2 766 1 730 2 794 4 387 3 512 1 61 1 210 1 137 1 41 1 824 1 825 1 592 1 828 1 737 1 13 1 771 1 515 1 48 1 620 1 516 1 674 1 494 2 776 7 705 1 122 2 394 2 839 1 627 1 810 1 104 2 398 1 254 1 603 4 297 2 656 1 553 5 377 1 813 1 471 1 327 1 759 3 579 1 720 2 
0 2 328 2 260 1 686 1 156 1 155 1 529 1 448 2 451 1 302 1 666 2 452 1 481 1 730 2 794 2 535 2 795 1 137 2 240 1 211 1 41 2 825 2 827 1 163 1 365 1 771 2 14 1 620 2 217 1 516 2 66 1 144 1 440 1 776 3 705 2 599 1 840 1 842 1 254 2 426 1 784 1 713 1 603 2 656 2 786 1 553 4 684 1 813 2 759 2 327 2 579 2 760 1 
0 2 328 1 156 1 687 1 448 1 666 1 792 1 206 1 730 1 794 1 137 1 41 1 825 1 771 1 620 1 516 1 776 2 705 1 254 1 603 1 843 1 656 1 553 2 813 1 659 1 471 1 274 1 759 1 327 1 579 1 
0 4 328 1 260 1 686 1 529 1 155 1 156 1 448 2 451 1 302 1 279 1 666 3 452 1 766 1 112 1 730 2 794 4 694 1 535 2 795 1 387 1 512 1 61 1 137 2 240 1 211 1 41 2 825 2 163 1 365 1 771 2 14 1 515 1 620 2 516 2 144 1 440 1 494 2 776 4 599 1 705 2 122 1 394 2 395 1 839 1 840 1 104 2 842 1 426 1 254 2 713 1 784 1 603 3 786 1 656 2 553 6 684 1 813 2 471 1 327 2 759 3 579 2 720 2 760 1 
0 4 328 1 260 1 686 1 529 1 155 1 156 1 32 1 448 2 451 1 302 1 666 2 452 1 766 1 112 1 730 2 794 2 535 2 795 1 410 1 512 1 61 1 137 2 240 1 211 1 41 2 825 2 336 1 163 1 617 1 365 1 771 2 14 1 515 1 620 2 516 2 144 1 440 1 494 2 776 4 599 1 705 2 394 2 839 1 840 1 104 2 224 1 225 1 842 1 426 1 254 2 713 1 784 1 603 2 786 1 656 2 684 1 553 6 758 2 813 2 471 1 327 2 353 1 759 3 579 2 720 2 760 1 
515 1 841 1 753 1 512 1 91 1 61 1 493 1 776 2 718 1 839 1 132 1 766 1 
0 4 328 1 260 1 686 1 529 1 155 1 156 1 448 2 203 1 451 1 302 1 666 2 452 1 766 1 112 1 730 2 794 2 535 2 795 1 512 1 61 1 137 2 240 1 211 1 41 2 672 1 825 2 163 1 365 1 771 2 14 1 515 1 620 2 516 2 144 1 440 1 494 2 776 4 118 1 833 1 599 1 705 2 120 1 394 2 441 1 839 1 840 1 104 2 842 1 426 1 254 2 713 1 784 1 603 2 576 1 786 1 656 2 684 1 553 6 813 2 471 1 327 2 814 2 759 3 579 2 720 2 760 1 
328 1 0 2 260 1 686 1 529 1 155 1 156 1 448 2 384 1 608 1 451 1 302 1 666 2 452 1 766 1 283 1 112 1 730 2 794 2 535 2 795 1 411 2 512 1 61 1 137 2 240 1 211 1 41 2 825 2 163 1 365 1 771 2 14 1 515 1 620 2 516 2 144 1 743 1 440 1 494 2 776 4 495 1 599 1 705 2 394 2 839 1 840 1 104 2 842 1 426 1 254 2 713 1 784 1 603 2 786 1 656 2 684 1 553 6 813 2 471 1 327 2 759 3 721 1 579 2 720 2 760 1 
0 2 328 1 620 1 516 1 156 1 448 1 384 1 776 2 495 1 608 1 705 1 666 1 730 1 794 1 411 1 254 1 603 1 137 1 656 1 553 2 41 1 825 1 813 1 471 1 759 1 327 1 579 1 771 1 
0 2 328 1 515 1 620 1 516 1 156 1 448 1 494 1 384 1 495 1 608 1 776 3 705 1 666 1 394 1 839 1 104 1 766 1 730 1 794 1 411 1 512 1 254 1 61 1 137 1 603 1 656 1 553 3 41 1 825 1 813 1 471 1 759 2 327 1 720 1 579 1 771 1 
328 1 0 6 260 1 686 1 529 1 155 1 156 1 448 2 451 1 302 1 665 1 279 1 358 1 666 4 304 1 510 1 452 1 561 1 766 1 112 1 730 2 794 6 535 2 694 1 795 1 387 2 512 1 61 1 210 1 137 2 240 1 696 1 211 1 41 2 825 2 42 1 163 1 736 1 365 1 95 2 771 2 14 1 515 1 620 2 516 2 144 1 440 1 595 1 494 2 776 6 599 1 705 2 122 1 394 2 839 1 840 1 810 1 104 2 842 1 171 2 426 1 254 2 713 1 784 1 603 4 297 2 786 1 656 2 684 1 553 8 377 1 813 2 471 1 327 2 759 3 579 2 720 2 760 1 
328 1 0 6 260 1 686 1 529 1 155 1 156 1 32 1 448 2 451 1 302 1 558 2 279 1 666 3 304 2 510 1 452 1 766 1 112 1 730 2 794 4 535 2 795 1 387 2 512 1 61 1 210 1 137 2 240 1 211 1 41 2 825 2 42 1 163 1 617 1 648 1 365 1 771 2 14 1 515 1 620 2 516 2 144 1 16 1 440 1 572 1 494 2 419 2 776 6 599 1 705 2 394 2 122 1 548 1 839 1 840 1 810 1 104 2 225 1 842 1 171 2 426 1 255 1 254 2 713 1 784 1 603 3 297 2 786 1 656 2 684 1 553 8 377 1 351 1 758 2 813 2 471 1 327 2 759 3 579 2 720 2 760 1 
328 1 199 1 0 4 156 1 448 1 789 1 558 2 279 1 666 2 86 2 510 1 766 1 730 1 794 2 387 1 512 1 61 1 210 1 137 1 41 1 825 1 140 2 769 1 771 1 515 1 620 1 516 1 493 1 494 1 776 5 597 1 705 1 394 1 122 1 839 1 810 1 104 1 841 1 171 2 51 1 254 1 603 2 297 1 656 1 553 4 718 1 377 1 403 1 81 1 813 1 471 1 327 1 759 2 579 1 720 1 
0 6 260 1 156 1 155 1 448 2 451 1 558 2 302 1 666 3 510 1 304 4 452 1 112 1 730 2 794 4 795 1 512 1 61 1 210 1 211 1 163 1 365 1 803 2 14 1 515 1 620 2 516 2 118 1 120 1 122 1 19 1 810 1 171 2 426 1 576 1 684 1 377 1 525 1 813 2 471 1 759 3 814 2 327 2 579 2 760 1 328 1 686 1 529 1 279 1 86 2 766 1 535 2 387 2 137 2 240 1 41 2 825 2 42 1 437 1 287 1 771 2 144 1 440 1 494 2 776 6 834 1 705 2 599 1 546 1 149 2 394 2 839 1 548 1 840 1 104 2 842 1 254 2 784 1 713 1 603 3 297 2 656 2 786 1 553 8 787 1 720 2 
0 6 328 1 260 1 686 1 529 1 155 1 156 1 448 2 451 1 302 1 279 1 666 3 510 1 452 1 766 1 112 1 730 2 794 4 535 2 795 1 387 2 512 1 61 1 210 1 137 2 240 1 211 1 41 2 825 2 163 1 365 1 771 2 14 1 515 1 620 2 516 2 144 1 440 1 622 1 494 2 221 1 776 6 599 1 705 2 122 1 394 2 839 1 840 1 810 1 104 2 842 1 754 1 426 1 254 2 713 1 784 1 603 3 297 2 786 1 656 2 684 1 553 8 377 1 813 2 472 2 327 2 759 3 579 2 720 2 760 1 
328 1 0 6 260 1 686 1 529 1 155 1 156 1 448 2 180 1 451 3 302 1 279 1 666 3 510 1 452 1 283 1 766 1 112 1 730 2 794 4 535 2 795 1 387 2 512 1 61 1 210 1 137 2 240 1 211 1 41 2 825 2 163 1 365 1 391 1 771 2 14 1 515 1 620 2 516 2 144 3 440 1 494 2 776 6 599 1 705 2 709 2 122 1 394 2 839 1 840 1 810 1 104 2 842 1 426 1 254 2 713 1 784 1 603 3 297 2 786 1 656 2 684 1 553 8 377 1 80 1 813 2 327 2 759 3 721 1 579 2 720 2 760 1 
260 1 155 1 529 1 448 1 110 1 451 1 302 1 666 1 452 1 730 1 794 1 535 2 795 1 137 1 240 1 41 1 825 1 163 1 771 1 14 1 620 1 217 1 516 1 144 1 440 1 806 1 776 2 705 1 599 1 840 1 842 1 226 1 254 1 784 1 713 1 603 1 656 1 786 1 52 1 553 2 684 1 26 1 813 1 327 1 579 1 815 1 
443 1 756 2 
443 1 188 1 810 1 776 1 
328 1 0 6 260 1 428 2 686 2 529 1 155 1 156 1 448 2 451 1 302 1 279 3 666 5 510 3 452 1 766 2 112 1 730 2 794 6 535 3 795 1 387 3 512 2 61 2 733 1 210 2 137 2 240 2 211 1 41 2 825 2 163 1 365 1 771 2 14 1 515 2 620 2 516 2 144 1 96 1 440 1 494 3 776 11 599 1 705 2 122 3 394 2 839 2 840 1 191 1 810 3 104 3 842 1 426 1 254 2 713 1 784 2 603 5 297 3 786 1 656 2 553 10 684 2 377 2 258 1 813 2 471 1 327 2 275 1 759 4 579 2 720 3 760 1 
328 1 0 6 260 1 428 2 686 2 529 1 155 1 156 1 448 2 451 1 302 1 279 3 666 5 510 3 452 1 766 2 112 1 730 2 794 6 535 3 795 1 387 3 512 2 61 2 733 1 210 2 137 2 240 2 211 1 41 2 825 2 163 1 365 1 771 2 14 1 515 2 620 2 540 1 516 2 144 1 96 1 440 1 494 2 776 11 599 1 705 2 122 3 394 2 839 2 840 1 191 1 810 3 104 2 842 1 426 1 254 2 713 1 784 2 603 5 297 3 786 1 656 2 553 10 684 2 377 2 258 1 813 2 471 1 327 2 759 4 579 2 720 3 760 1 
756 2 231 1 
188 1 810 1 776 1 231 1 
328 1 0 9 260 1 686 3 529 1 155 1 474 1 156 1 530 2 448 2 330 1 231 2 451 1 302 1 279 3 666 5 510 3 452 1 283 1 766 2 112 1 730 2 794 9 535 4 795 1 387 6 512 2 61 2 733 1 210 2 137 2 240 3 211 1 41 2 825 2 163 1 365 1 771 2 14 1 566 1 515 2 620 2 516 2 144 1 96 2 440 1 569 1 494 5 776 12 599 1 184 1 705 2 188 1 122 3 394 4 839 2 840 1 810 3 104 5 842 1 170 2 426 1 254 2 713 1 784 3 603 5 297 6 786 1 656 2 684 3 553 13 377 2 813 2 471 1 327 2 759 7 721 1 579 2 720 6 760 1 
328 1 0 9 260 1 686 3 529 1 155 1 474 1 156 1 530 1 448 2 330 1 231 1 451 1 302 1 279 3 666 5 510 3 452 1 766 2 112 1 730 2 794 9 535 4 795 1 387 6 512 2 61 2 733 1 210 2 137 2 240 3 211 1 41 2 825 2 163 1 365 1 771 2 14 1 566 1 515 2 620 2 516 2 144 1 96 2 440 1 494 5 776 11 599 1 184 1 705 2 188 1 122 3 394 4 839 2 840 1 810 3 104 5 842 1 170 2 426 1 254 2 713 1 784 3 603 5 297 6 786 1 656 2 684 3 553 13 377 2 813 2 471 1 327 2 759 7 579 2 720 6 760 1 
328 1 0 5 686 2 156 1 530 1 448 1 330 1 231 1 279 3 666 4 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 771 1 566 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 188 1 122 3 394 2 839 2 810 3 104 2 22 1 170 1 254 1 784 2 603 4 297 3 656 1 684 2 553 6 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 5 686 2 156 1 530 1 448 1 330 1 231 1 279 3 666 4 532 1 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 771 1 566 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 188 1 122 3 394 2 839 2 810 3 104 2 170 1 254 1 784 2 603 4 297 3 656 1 684 2 553 6 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 5 686 2 156 1 4 1 530 1 448 1 330 1 231 1 279 3 666 4 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 771 1 566 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 188 1 122 3 394 2 839 2 810 3 104 2 170 1 254 1 784 2 603 4 297 3 656 1 684 2 553 6 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 5 686 2 156 1 530 1 726 1 448 1 330 1 231 1 279 3 666 4 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 771 1 566 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 188 1 122 3 394 2 839 2 810 3 104 2 170 1 254 1 784 2 603 4 297 3 656 1 684 2 553 6 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 5 686 2 156 1 530 1 448 1 330 1 231 1 763 1 279 3 666 4 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 771 1 566 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 188 1 122 3 394 2 839 2 810 3 104 2 170 1 254 1 784 2 603 4 297 3 656 1 684 2 553 6 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 5 686 2 156 1 530 1 448 1 330 1 231 1 279 3 666 4 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 438 1 771 1 566 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 188 1 122 3 394 2 839 2 810 3 104 2 170 1 254 1 784 2 603 4 297 3 656 1 684 2 553 6 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 5 686 2 156 1 530 1 448 1 330 1 231 1 279 3 666 4 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 771 1 46 1 566 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 188 1 122 3 394 2 839 2 810 3 104 2 170 1 254 1 784 2 603 4 297 3 656 1 684 2 553 6 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 5 686 2 156 1 530 1 448 1 330 1 231 1 279 3 666 4 510 3 766 2 730 1 794 4 535 2 387 3 512 2 61 2 733 1 210 2 137 1 240 2 41 1 825 1 771 1 515 2 620 1 516 1 96 1 494 2 776 10 705 1 122 3 394 2 839 2 810 3 104 2 170 1 254 1 784 2 603 4 297 3 656 1 553 6 684 2 377 2 813 1 471 1 327 1 759 4 579 1 720 3 
328 1 0 10 156 1 448 1 610 1 37 1 279 3 666 4 638 1 510 3 766 2 730 1 794 9 387 8 512 2 61 2 733 1 210 2 137 1 41 1 825 1 514 1 771 1 515 2 620 1 516 1 96 1 494 8 776 10 705 1 122 3 394 8 839 2 102 1 810 3 104 8 254 1 603 4 399 1 498 1 297 8 656 1 553 12 377 2 378 1 813 1 471 1 327 1 759 9 579 1 720 8 
260 1 529 1 155 1 448 2 277 1 357 1 451 1 302 1 279 3 666 5 510 3 766 3 730 2 794 2 535 2 795 1 512 3 61 3 733 1 210 2 137 1 240 1 211 1 41 1 825 1 163 1 771 1 14 1 515 3 620 1 516 1 144 1 440 1 748 1 776 11 705 1 599 1 185 1 122 3 839 3 840 1 810 3 248 1 842 1 466 1 254 1 713 1 784 1 603 5 756 1 786 1 656 1 553 3 684 1 377 2 813 1 471 1 327 1 579 1 
514 1 756 2 
514 1 188 1 810 1 776 1 
328 1 0 10 686 1 156 1 448 1 610 1 279 3 638 1 666 4 510 3 283 1 766 2 730 1 794 9 535 1 387 8 512 2 61 2 733 1 210 2 137 1 240 1 41 1 825 1 514 2 771 1 515 2 620 1 516 1 621 1 96 1 494 8 776 11 705 1 122 3 394 8 839 2 102 2 810 3 104 8 254 1 784 1 603 4 399 1 498 1 297 8 656 1 684 1 553 12 377 2 378 1 813 1 471 1 327 1 759 9 721 1 579 1 720 8 
242 1 102 1 458 1 748 1 756 1 776 1 610 1 
242 1 513 1 810 1 756 1 748 1 776 1 
260 1 529 1 155 1 448 2 357 1 451 1 302 1 279 3 666 5 510 3 766 3 730 2 794 2 535 2 795 1 512 3 61 3 733 1 210 2 137 1 240 1 211 1 41 1 825 1 163 1 771 1 14 1 515 3 620 1 516 1 144 1 440 1 748 1 776 11 705 1 599 1 185 1 122 3 839 3 840 1 810 3 248 1 842 1 466 1 254 1 713 1 784 1 603 5 756 1 786 1 656 1 553 3 684 1 377 2 813 1 471 1 327 1 579 1 
528 1 260 1 686 1 155 1 529 1 448 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 137 1 240 1 211 1 41 1 825 1 163 1 141 1 365 1 771 1 14 1 620 1 217 1 516 1 144 1 440 1 776 2 705 1 344 1 599 1 840 1 842 1 254 1 426 1 784 1 713 1 603 1 656 1 786 1 553 2 684 1 813 1 327 1 579 1 760 1 
31 1 260 1 155 1 529 1 448 1 451 1 302 1 666 1 452 1 730 1 794 1 535 2 795 1 455 1 137 1 240 1 211 1 41 1 825 1 163 1 771 1 14 1 392 1 620 1 217 1 516 1 144 1 830 1 440 1 776 2 705 1 599 1 463 1 840 1 248 1 842 1 254 1 784 1 713 1 603 1 656 1 786 1 553 2 684 1 323 1 813 1 327 1 579 1 
0 4 156 1 448 1 666 3 510 1 730 1 794 3 512 1 61 1 210 1 515 1 620 1 516 1 122 1 810 1 377 1 813 1 471 1 327 1 759 2 579 1 328 1 279 1 766 1 694 1 387 1 137 1 41 1 825 1 771 1 494 1 776 5 705 1 394 1 839 1 104 1 254 1 603 3 297 1 656 1 553 4 659 1 720 1 
0 2 260 1 686 1 529 1 155 1 448 1 451 1 302 1 279 1 666 3 510 1 452 1 766 1 112 1 730 1 794 3 535 2 795 1 387 1 512 1 61 1 210 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 771 1 14 1 515 1 620 1 516 1 144 1 440 1 494 1 776 5 599 1 705 1 394 1 122 1 839 1 840 1 810 1 104 1 842 1 426 1 254 1 713 1 784 1 603 3 297 1 786 1 656 1 553 4 684 1 377 1 659 1 813 1 327 1 759 1 579 1 720 1 760 1 
0 4 156 1 448 1 666 2 510 1 730 1 794 2 512 1 61 1 210 1 617 1 515 1 620 1 516 1 122 1 810 1 225 1 377 1 758 1 813 1 471 1 327 1 759 2 579 1 328 1 32 1 279 1 766 1 387 1 137 1 41 1 825 1 771 1 494 1 776 5 705 1 394 1 839 1 104 1 254 1 603 2 297 1 656 1 553 4 659 1 720 1 
0 2 260 1 686 1 529 1 155 1 448 1 451 1 302 1 279 1 666 2 510 1 452 1 766 1 112 1 730 1 794 2 535 2 795 1 387 1 512 1 61 1 210 1 137 1 240 1 211 1 41 1 825 1 163 1 617 1 365 1 771 1 14 1 515 1 620 1 516 1 144 1 440 1 494 1 776 5 599 1 705 1 394 1 122 1 839 1 840 1 810 1 104 1 225 1 842 1 426 1 254 1 713 1 784 1 603 2 297 1 786 1 656 1 684 1 553 4 377 1 758 1 659 1 813 1 327 1 759 1 579 1 720 1 760 1 
0 4 156 1 448 1 666 2 510 1 730 1 794 2 512 1 61 1 210 1 515 1 620 1 516 1 122 1 810 1 377 1 813 1 471 1 327 1 759 2 579 1 328 1 279 1 766 1 387 1 137 1 41 1 825 1 771 1 493 1 494 1 776 5 597 1 705 1 394 1 839 1 104 1 841 1 254 1 603 2 297 1 656 1 553 4 718 1 659 1 720 1 
0 2 260 1 686 1 529 1 155 1 448 1 451 1 302 1 279 1 666 2 510 1 452 1 766 1 112 1 730 1 794 2 535 2 795 1 387 1 512 1 61 1 210 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 771 1 14 1 515 1 620 1 516 1 144 1 440 1 494 1 776 5 597 1 599 1 705 1 394 1 122 1 839 1 840 1 810 1 104 1 841 1 842 1 426 1 254 1 713 1 784 1 603 2 297 1 786 1 656 1 684 1 553 4 718 1 377 1 659 1 813 1 327 1 759 1 579 1 720 1 760 1 
0 4 156 1 448 1 666 2 510 1 730 1 794 2 512 1 61 1 210 1 515 1 620 1 516 1 118 1 120 1 122 1 810 1 576 1 377 1 813 1 471 1 327 1 814 1 759 2 579 1 328 1 279 1 766 1 387 1 137 1 41 1 825 1 771 1 494 1 776 5 705 1 394 1 839 1 104 1 254 1 603 2 297 1 656 1 553 4 659 1 720 1 
0 2 260 1 686 1 529 1 155 1 448 1 451 1 302 1 279 1 666 2 510 1 452 1 766 1 112 1 730 1 794 2 535 2 795 1 387 1 512 1 61 1 210 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 771 1 14 1 515 1 620 1 516 1 144 1 440 1 494 1 776 5 118 1 599 1 705 1 120 1 394 1 122 1 839 1 840 1 810 1 104 1 842 1 426 1 254 1 713 1 784 1 603 2 297 1 786 1 656 1 684 1 553 4 377 1 659 1 813 1 327 1 814 1 759 1 579 1 720 1 760 1 
0 6 156 2 446 1 448 2 355 1 407 1 666 2 304 1 729 1 306 1 730 2 794 2 614 1 456 3 564 1 310 1 620 1 516 1 746 1 313 1 268 1 809 1 810 1 375 1 318 1 271 1 27 1 813 3 471 1 175 1 759 1 327 1 579 1 328 2 281 1 642 1 643 1 534 1 482 1 535 1 137 2 41 1 825 1 337 1 488 2 45 1 771 1 339 1 143 1 96 1 832 1 651 2 776 7 705 1 394 1 249 1 252 1 254 1 784 1 603 2 297 1 785 1 656 1 553 7 659 1 660 1 
0 3 260 1 155 2 446 1 448 2 355 1 451 1 302 1 407 1 666 2 304 1 452 1 729 1 306 1 112 1 361 2 730 2 794 2 795 1 614 1 456 3 211 1 564 1 163 1 365 1 14 1 310 1 620 1 516 1 746 1 676 1 313 1 268 1 809 1 73 2 810 1 375 1 318 1 426 1 271 1 684 2 526 1 27 1 813 3 175 1 327 1 579 1 760 1 686 1 529 1 178 1 281 1 433 1 587 1 642 1 643 1 534 1 482 1 535 2 589 1 137 2 240 1 41 1 825 1 337 1 488 2 142 1 45 1 771 1 339 1 143 1 144 1 96 1 440 1 832 1 651 2 776 7 599 1 705 1 840 1 249 1 252 1 254 1 713 2 784 3 603 2 785 1 297 1 786 1 656 1 553 7 659 1 
328 2 0 6 382 1 156 2 446 1 448 2 355 1 407 1 204 1 666 2 281 1 729 1 306 1 643 1 642 1 534 1 730 2 482 1 794 2 535 1 614 1 456 3 137 2 41 1 564 1 825 1 162 1 337 1 488 2 45 1 771 1 310 1 339 1 143 1 620 1 516 1 96 1 746 1 832 1 651 2 313 1 776 7 268 1 705 1 186 1 394 1 809 1 810 1 318 1 252 1 254 1 784 1 603 2 271 1 297 1 785 1 656 1 553 7 27 1 757 1 813 3 471 1 175 1 759 1 327 1 660 1 579 1 
0 8 260 1 156 2 155 1 446 1 448 3 355 2 451 1 407 2 302 1 666 3 452 1 729 2 306 1 112 1 730 3 794 4 795 1 614 1 456 3 211 1 564 2 163 1 365 1 310 1 14 1 620 2 516 2 746 1 268 1 809 1 810 1 73 2 318 1 426 1 271 2 684 2 27 1 324 2 813 6 471 1 175 1 327 2 759 1 579 2 760 1 328 2 382 1 686 1 529 1 178 1 281 1 433 1 587 1 643 2 642 1 534 2 482 1 535 3 137 4 240 1 41 2 825 2 337 1 488 2 45 2 142 1 771 2 143 1 339 1 144 1 96 2 440 1 832 2 651 4 776 7 705 2 599 1 394 1 840 1 711 1 842 1 254 2 784 4 713 2 603 3 785 2 297 1 656 2 786 1 553 13 660 1 
0 4 328 1 156 1 448 1 279 2 666 3 510 2 766 1 730 1 794 3 387 2 512 1 61 1 210 1 137 1 41 1 825 1 771 1 515 1 620 1 516 1 494 1 776 5 705 1 122 2 394 1 839 1 810 1 104 1 254 1 603 3 297 1 656 1 553 4 377 1 813 1 471 1 327 1 759 2 579 1 720 1 605 1 
810 1 283 1 776 1 
813 1 810 1 283 1 776 1 126 1 
0 3 260 1 156 1 155 1 448 1 200 1 607 2 300 1 451 1 302 1 204 1 666 2 510 1 730 1 794 2 795 1 309 1 211 1 266 1 163 1 365 1 14 1 216 1 620 1 674 2 516 1 746 1 313 1 165 1 122 1 426 1 271 1 684 2 173 1 813 1 471 1 327 1 275 2 759 1 579 1 29 1 760 1 127 1 328 1 428 1 686 3 529 1 179 1 232 1 430 1 279 1 482 1 535 5 819 1 387 1 137 1 240 3 820 1 334 1 41 1 825 1 43 2 182 1 390 1 771 1 772 1 540 1 144 1 96 1 541 1 440 1 776 9 705 1 599 1 186 1 777 1 191 3 840 1 842 1 252 1 552 1 254 1 784 4 713 1 603 2 297 1 656 1 786 1 553 6 
0 5 448 1 607 1 300 1 557 1 302 1 666 4 510 2 7 1 730 1 794 4 795 1 512 1 615 1 61 1 210 2 456 1 309 1 163 1 14 1 515 1 620 1 674 1 516 1 218 3 69 1 678 1 122 2 72 1 810 2 271 1 684 1 377 1 813 2 471 1 759 1 327 1 579 1 127 1 686 1 529 1 474 1 232 2 279 2 130 1 281 1 764 1 766 1 534 1 535 4 694 1 387 2 136 1 137 1 240 1 41 1 825 1 182 1 488 1 390 1 771 1 339 1 440 1 494 1 776 8 705 1 394 1 839 1 840 1 104 1 549 1 254 1 784 4 603 4 297 2 785 1 349 1 656 1 553 7 195 1 659 1 720 1 
0 7 156 1 448 1 607 1 300 1 666 4 510 2 7 1 730 1 794 4 512 1 615 1 61 1 210 2 456 1 309 1 515 1 620 1 674 1 516 1 69 1 624 1 678 1 122 2 72 1 810 2 271 1 684 1 376 1 377 1 813 2 471 1 759 2 327 1 579 1 328 1 127 1 686 1 474 1 232 2 279 2 130 1 281 1 766 1 534 1 535 3 694 1 387 2 435 1 136 1 137 1 240 1 41 1 825 1 182 2 488 1 390 1 771 1 339 1 494 1 776 8 705 1 394 1 839 1 104 1 549 1 254 1 784 3 603 4 297 2 785 1 656 1 53 1 553 7 195 1 659 1 720 1 
328 1 0 6 127 1 156 2 448 2 607 1 300 1 232 2 279 2 130 1 666 4 510 2 766 1 730 2 794 4 535 2 387 3 512 1 61 1 210 1 137 1 309 1 41 1 825 1 182 2 390 1 13 1 771 1 515 1 620 1 516 1 674 1 494 2 776 6 705 1 122 2 394 2 839 1 810 1 104 2 254 1 784 2 603 4 271 1 297 2 656 1 553 6 377 1 813 1 471 1 327 1 759 3 579 1 720 2 
127 1 0 3 328 1 260 1 686 1 529 1 155 1 156 1 448 1 607 1 300 1 451 1 232 2 302 1 130 1 666 1 304 1 306 2 730 1 793 1 794 1 535 5 795 1 137 1 513 1 309 1 240 1 211 1 334 1 41 1 825 1 163 1 182 2 365 1 390 1 771 1 14 1 620 1 516 1 674 1 144 1 440 1 776 2 165 1 599 1 705 1 840 1 249 1 375 1 842 1 552 1 426 1 254 1 713 1 784 4 603 1 271 1 297 1 786 1 656 1 684 1 553 3 813 1 471 1 327 1 759 1 579 1 760 1 
0 3 328 2 260 1 686 1 156 1 155 1 529 1 448 2 451 1 302 1 666 2 730 2 794 2 535 2 795 1 137 2 240 1 211 1 41 2 825 2 163 1 365 1 771 2 14 1 620 2 516 2 217 1 144 1 440 1 776 2 705 2 599 1 840 1 842 1 426 1 254 2 784 1 713 1 603 2 297 2 656 2 786 1 553 4 684 1 813 2 759 2 327 2 579 2 760 1 
0 11 260 1 3 1 156 4 155 1 200 1 448 4 406 1 355 1 607 5 300 2 507 1 451 1 407 1 302 1 204 1 666 5 510 1 729 1 306 1 730 4 794 5 795 1 614 1 671 1 309 4 211 1 564 1 162 1 163 1 737 1 365 1 310 1 14 1 216 1 620 2 674 5 516 2 746 2 313 2 268 1 165 1 166 1 678 1 122 1 223 1 462 1 681 1 627 1 426 1 24 1 271 3 684 2 173 1 27 1 229 1 230 1 813 4 471 1 275 3 327 2 759 3 29 1 579 2 760 1 127 3 328 3 428 2 382 1 686 3 474 1 529 1 276 1 179 1 232 5 279 1 430 1 817 1 130 1 643 1 482 2 535 10 819 1 387 1 137 3 240 3 239 1 820 1 537 1 334 1 41 2 824 1 825 2 592 1 43 2 182 4 141 1 390 4 771 2 143 1 48 1 144 1 96 2 440 1 494 1 651 2 776 19 344 1 705 2 599 1 246 1 186 1 777 1 147 1 394 2 191 3 779 1 840 1 104 1 398 1 842 1 601 1 252 2 552 1 254 2 784 9 713 1 603 5 297 2 656 2 786 1 553 17 500 1 195 1 720 1 
0 1 127 1 529 1 448 1 607 1 300 1 179 1 232 2 302 1 130 1 666 1 730 1 794 1 535 3 795 1 137 1 309 1 41 1 825 1 163 1 182 1 390 1 771 1 14 1 216 1 620 1 674 1 516 1 218 3 440 1 776 2 705 1 840 1 254 1 784 3 603 1 271 1 349 1 656 1 553 4 813 1 659 1 471 1 327 1 579 1 29 1 
260 1 155 1 529 1 448 1 179 1 451 1 302 1 666 1 452 1 730 1 794 1 535 2 795 1 137 1 240 1 41 1 825 1 163 1 771 1 14 1 216 1 620 1 516 1 217 1 144 1 440 1 776 2 705 1 599 1 840 1 842 1 226 1 254 1 784 1 713 1 603 1 786 1 656 1 553 3 52 1 684 1 26 1 659 1 813 1 327 1 579 1 29 1 
0 1 448 1 607 1 300 1 666 1 730 1 794 1 309 1 216 1 620 1 217 1 516 1 674 1 271 1 813 1 327 1 29 1 579 1 127 1 276 1 179 1 232 2 130 1 535 2 137 1 41 1 825 1 182 2 390 1 771 1 776 2 705 1 254 1 784 2 603 1 656 1 553 4 659 1 
328 1 127 1 0 3 260 1 686 1 529 1 155 1 448 1 607 1 300 1 451 1 232 2 302 1 279 1 130 1 666 2 510 1 730 1 794 2 694 1 535 4 795 1 387 1 137 1 240 1 309 1 211 1 41 1 825 1 163 1 182 2 365 1 390 1 771 1 14 1 620 1 516 1 674 1 144 1 440 1 494 1 776 2 599 1 705 1 122 1 394 1 395 1 840 1 104 1 842 1 426 1 254 1 713 1 784 3 603 2 271 1 786 1 656 1 684 1 553 4 813 1 471 1 327 1 759 2 579 1 720 1 760 1 
0 3 328 1 260 1 529 1 156 1 155 1 448 2 451 1 302 1 279 1 666 3 510 1 452 1 730 2 794 4 535 2 795 1 387 1 210 1 137 2 240 1 41 2 825 2 163 1 771 2 14 1 620 2 516 2 217 1 144 1 440 1 494 1 776 4 705 2 599 1 122 1 394 1 840 1 810 1 104 1 842 1 226 1 254 2 713 1 784 1 603 3 297 1 786 1 656 2 553 6 52 1 684 1 26 1 813 2 471 1 327 2 759 2 579 2 720 1 
127 2 0 6 328 1 260 2 686 1 529 1 155 1 156 2 448 3 607 2 300 2 451 1 232 4 302 1 130 2 666 3 452 1 730 3 794 4 535 7 795 1 137 2 309 2 240 2 211 1 41 2 825 2 163 1 182 4 365 1 390 2 771 2 14 1 620 2 674 2 516 2 217 1 144 1 440 1 494 2 776 3 599 1 705 2 394 1 840 1 104 2 842 1 226 1 426 1 254 2 713 1 784 6 603 3 271 2 786 1 656 2 684 2 553 8 52 1 26 1 813 2 471 1 327 2 759 3 579 2 720 2 760 1 
328 1 127 1 0 3 260 1 686 2 529 1 155 1 156 1 474 1 57 1 448 2 607 1 300 1 451 1 232 2 302 1 430 1 130 1 666 2 431 1 360 1 730 2 794 2 535 4 795 1 455 1 137 1 240 2 309 1 211 1 41 1 160 1 825 1 826 1 163 1 182 2 365 1 390 1 771 1 14 1 620 1 516 1 674 1 144 1 368 1 517 1 96 1 440 1 494 1 244 1 146 1 776 5 599 1 705 1 369 1 840 1 463 1 104 1 842 1 347 1 21 1 348 1 426 1 254 1 713 1 784 3 603 2 228 1 271 1 297 1 786 1 656 1 684 1 553 7 813 1 471 1 759 2 327 1 720 1 579 1 760 1 
328 1 0 8 260 1 686 2 529 1 155 1 156 1 157 1 448 2 451 1 302 1 279 3 666 5 282 2 510 3 452 1 766 2 112 1 642 1 730 2 794 8 535 3 795 1 387 6 512 2 61 2 733 1 210 2 456 3 137 2 240 2 211 1 41 2 825 2 163 1 488 2 365 1 771 2 14 1 339 1 515 2 267 1 620 2 516 2 144 1 440 1 117 1 494 6 776 11 599 1 705 2 122 3 394 6 839 2 809 1 840 1 810 3 104 6 842 1 426 1 254 2 782 2 713 1 784 2 603 5 715 1 297 7 786 1 656 2 684 2 553 12 377 2 813 2 471 1 844 1 327 2 759 7 579 2 720 6 760 1 
328 1 0 10 260 1 686 2 529 1 155 1 156 1 446 1 448 2 451 1 302 1 279 3 666 5 281 1 510 3 452 1 766 2 112 1 642 1 534 2 730 2 794 8 535 3 795 1 387 6 284 1 512 2 61 2 733 1 210 2 456 3 137 2 240 2 412 1 211 1 41 2 825 2 337 1 163 1 488 2 365 1 45 1 771 2 14 1 339 1 515 2 620 2 516 2 144 1 440 1 832 2 494 6 776 11 599 1 705 2 394 6 122 3 839 2 809 1 840 1 810 3 104 6 842 1 318 1 630 1 426 1 254 2 713 1 784 2 603 5 297 7 785 2 786 1 656 2 684 2 553 12 377 2 813 4 175 1 327 2 759 7 579 2 720 6 760 1 
0 19 260 1 156 2 155 1 448 3 451 1 302 1 666 7 509 1 510 4 452 1 112 1 730 3 794 17 795 1 512 2 61 2 210 2 733 1 456 4 211 1 412 1 163 1 365 1 14 1 515 2 620 2 516 2 678 3 122 4 809 1 810 3 318 1 630 1 426 1 684 4 377 2 813 5 175 1 327 2 759 12 579 2 760 1 328 1 686 4 474 2 529 1 279 4 281 1 766 2 642 1 534 3 535 5 284 1 387 10 590 2 591 1 137 2 240 4 41 2 825 2 337 1 488 2 45 3 771 2 339 1 144 1 440 1 832 3 494 7 776 14 705 2 599 1 394 7 839 2 840 1 104 7 842 1 254 2 784 4 713 1 603 7 297 10 785 3 656 2 786 1 553 27 195 3 720 11 
0 14 260 1 156 3 155 1 448 4 607 1 507 1 451 1 302 1 666 8 509 1 510 4 452 1 112 1 730 4 794 14 795 1 512 2 61 2 210 2 733 1 456 3 211 1 163 1 737 1 365 1 14 1 515 2 620 3 674 1 516 3 678 3 122 4 627 1 810 3 426 1 684 5 377 2 813 3 632 1 471 1 759 10 327 3 579 3 760 1 127 1 328 2 686 5 473 1 474 2 529 1 279 4 386 3 766 2 535 6 387 8 590 1 591 1 137 3 240 5 537 1 41 3 824 1 825 3 592 1 488 2 771 3 339 2 48 1 144 1 440 1 494 6 776 17 705 3 599 1 294 2 547 2 394 6 839 2 840 1 104 6 398 1 842 1 782 3 254 3 784 5 713 1 603 8 297 8 656 3 786 1 553 23 195 3 108 3 720 8 
0 18 260 1 155 1 156 3 448 4 607 1 507 1 451 1 302 1 666 8 509 1 510 4 452 1 112 1 730 4 794 18 795 1 60 1 512 2 61 2 210 2 733 1 456 2 211 1 163 1 737 1 365 1 14 1 515 2 620 3 674 1 516 3 678 3 122 4 627 1 810 3 426 1 684 4 377 2 813 3 632 1 471 1 759 13 327 3 579 3 760 1 127 1 328 2 686 4 529 1 474 2 279 4 766 2 386 3 535 5 387 11 590 2 591 1 137 3 240 4 537 1 41 3 824 1 825 3 592 1 488 1 771 3 339 1 48 1 144 1 440 1 494 8 776 16 705 3 599 1 294 1 547 1 394 8 839 2 840 1 104 8 398 1 842 1 782 3 254 3 784 4 713 1 603 8 297 11 656 3 786 1 553 29 195 3 108 3 720 11 
0 21 260 1 155 1 156 2 448 3 451 1 302 1 666 7 509 1 510 4 612 1 452 1 7 1 112 1 730 3 794 18 795 1 512 2 61 2 615 3 210 2 733 1 456 2 211 1 163 1 365 1 14 1 515 2 620 2 516 2 69 1 678 3 122 4 370 1 810 3 630 1 426 1 684 4 377 2 813 5 759 13 327 2 579 2 760 1 328 1 686 4 529 1 474 2 279 4 281 1 766 2 534 3 535 5 387 12 284 1 136 1 590 2 591 1 137 2 240 4 41 2 825 2 488 1 771 2 339 1 144 1 440 1 494 9 776 14 705 2 599 1 394 9 839 2 840 1 104 9 549 3 842 1 254 2 784 4 713 1 603 7 785 3 297 12 656 2 786 1 553 28 195 3 720 12 
0 17 260 1 156 2 155 1 448 3 451 1 302 1 666 7 509 1 510 4 612 1 452 1 7 2 112 1 730 3 794 14 795 1 512 2 615 3 61 2 210 2 733 1 456 3 211 1 163 1 365 1 14 1 515 2 620 2 516 2 69 2 678 3 122 4 72 1 810 3 630 1 426 1 684 5 377 2 813 5 327 2 759 10 579 2 760 1 328 1 686 5 474 2 529 1 279 4 281 2 766 2 534 3 535 6 284 1 387 9 136 2 590 1 591 1 137 2 240 5 41 2 825 2 488 2 771 2 339 2 144 1 440 1 494 7 776 15 705 2 599 1 394 7 839 2 840 1 104 7 549 3 842 1 254 2 784 5 713 1 603 7 297 9 785 3 656 2 786 1 553 22 195 3 720 9 
127 1 0 2 328 1 260 1 686 1 529 1 155 1 530 1 448 1 607 1 300 1 231 1 330 1 451 1 232 2 302 1 130 1 666 1 640 1 730 1 794 1 535 4 795 1 137 1 240 1 309 1 211 1 41 1 825 1 163 1 182 2 365 1 390 1 771 1 14 1 566 1 620 1 516 1 674 1 144 1 440 1 776 3 599 1 184 1 705 1 188 1 840 1 810 1 842 1 170 1 426 1 254 1 713 1 784 3 603 1 271 1 786 1 656 1 684 1 553 4 813 1 471 1 759 1 327 1 579 1 760 1 
127 1 0 2 328 1 260 1 428 1 686 1 529 1 155 1 448 1 607 1 300 1 451 1 232 2 302 1 430 1 130 1 666 1 730 1 794 1 535 4 795 1 137 1 309 1 240 1 211 1 41 1 825 1 163 1 182 2 365 1 390 1 771 1 14 1 620 1 516 1 674 1 144 1 440 1 776 2 705 1 599 1 840 1 191 1 842 1 426 1 254 1 713 1 784 3 603 1 271 1 786 1 656 1 553 4 684 1 173 1 813 1 471 1 275 1 327 1 759 1 579 1 760 1 
127 1 0 2 328 1 260 1 428 1 686 1 529 1 155 1 448 1 607 1 300 1 451 1 232 2 302 1 130 1 666 1 730 1 794 1 208 1 535 4 795 1 137 1 309 1 240 1 211 1 41 1 825 1 163 1 182 2 365 1 390 1 771 1 14 1 620 1 516 1 674 1 144 1 440 1 776 3 705 1 599 1 840 1 810 1 191 1 842 1 426 1 254 1 713 1 784 3 603 1 271 1 786 1 656 1 553 4 684 1 813 1 471 1 275 1 327 1 759 1 579 1 760 1 
127 1 0 4 328 1 260 1 686 1 529 1 155 1 156 1 474 1 57 1 448 2 607 2 300 1 451 1 232 4 302 1 430 1 130 1 666 2 452 1 431 1 112 1 730 2 794 2 209 1 535 6 795 1 455 1 137 2 309 2 240 2 211 1 41 2 160 2 825 2 826 1 163 1 182 2 802 1 390 2 771 2 14 1 392 1 620 2 516 2 674 2 830 1 144 1 368 1 517 2 96 1 440 1 244 1 776 5 146 2 599 1 705 2 679 1 369 2 840 1 463 1 248 1 842 1 347 1 348 1 254 2 713 1 784 5 603 2 228 1 271 2 297 1 786 1 656 2 684 1 553 12 323 1 813 2 471 1 759 1 327 2 579 2 
127 1 0 2 260 1 686 1 529 1 155 1 448 2 607 2 300 1 507 1 451 1 232 2 302 1 130 1 666 2 730 2 794 2 535 4 795 1 137 1 240 1 309 1 537 1 211 1 41 1 160 1 824 1 825 1 592 1 163 1 737 1 182 2 365 1 390 1 771 1 14 1 620 1 48 1 516 1 674 2 144 1 440 1 776 4 599 1 705 1 627 1 840 1 398 1 842 1 348 1 426 1 254 1 713 1 784 3 603 2 228 1 271 1 786 1 656 1 684 1 553 5 813 1 327 1 579 1 760 1 
328 1 0 12 260 1 428 1 686 2 529 1 155 1 156 1 474 2 448 2 451 1 302 1 279 3 666 5 510 3 452 1 766 2 112 1 730 2 794 12 535 3 209 1 795 1 387 8 158 3 512 2 61 2 210 2 733 1 137 2 240 2 211 1 41 2 825 2 163 1 365 1 771 2 14 1 515 2 620 2 516 2 144 1 96 1 440 1 704 1 494 5 343 1 776 12 599 1 705 2 122 3 679 1 394 5 839 2 840 1 191 1 810 3 104 5 842 1 172 1 426 1 254 2 713 1 784 2 603 5 297 7 786 1 656 2 684 2 553 18 377 2 813 2 471 1 275 1 327 2 759 8 579 2 720 7 760 1 
328 1 0 8 428 1 686 1 156 1 448 1 279 4 666 5 509 1 510 4 766 2 730 1 794 7 535 1 209 2 387 6 512 2 590 1 61 2 591 1 210 2 733 1 456 1 137 1 240 1 41 1 825 1 414 1 771 1 515 2 620 1 516 1 96 1 494 4 776 12 705 1 394 4 122 4 679 2 839 2 810 3 191 1 104 4 254 1 784 1 603 5 297 4 656 1 684 1 553 10 377 2 813 1 471 1 275 1 327 1 759 5 579 1 720 4 
591 1 456 1 
328 1 127 1 0 7 686 2 156 2 762 1 448 2 607 1 507 1 279 3 666 5 510 3 431 1 766 2 730 2 794 5 387 3 512 2 61 2 733 1 210 2 137 1 240 2 537 1 41 1 824 1 825 1 592 1 826 1 737 1 802 1 771 1 515 2 48 1 620 1 674 1 516 1 517 1 96 1 494 3 244 1 776 12 146 1 705 1 394 2 122 3 369 1 839 2 627 1 810 3 104 3 398 1 347 1 254 1 603 5 297 4 656 1 553 8 377 2 813 1 759 4 327 1 720 3 579 1 
328 1 127 1 0 7 686 2 156 2 448 2 607 1 507 1 279 3 666 5 510 3 431 1 766 2 730 2 794 5 387 3 512 2 61 2 733 1 210 2 137 1 240 2 537 1 41 1 824 1 825 1 592 1 826 1 737 1 802 1 771 1 515 2 48 1 620 1 674 1 516 1 517 1 96 1 568 1 494 3 244 1 776 12 146 1 705 1 394 2 122 3 369 1 839 2 627 1 810 3 104 3 398 1 347 1 254 1 603 5 297 4 656 1 553 8 377 2 813 1 759 4 327 1 720 3 579 1 
328 1 127 1 0 6 606 1 260 1 686 1 529 1 155 1 448 1 607 1 300 1 451 1 232 2 302 1 279 2 130 1 666 3 510 2 431 1 766 1 730 1 794 4 535 4 795 1 387 3 512 1 61 1 733 1 210 1 137 1 240 1 309 1 211 1 41 1 825 1 826 1 163 1 182 2 365 1 390 1 802 1 771 1 14 1 515 1 620 1 674 1 516 1 144 1 517 1 440 1 244 1 494 2 776 8 146 1 599 1 705 1 394 2 122 2 369 1 839 1 840 1 810 3 104 2 842 1 347 1 426 1 254 1 713 1 784 3 603 3 271 1 297 2 786 1 656 1 684 1 553 8 377 1 813 1 471 1 327 1 759 3 579 1 720 2 760 1 
0 6 156 1 448 1 666 3 510 2 730 1 794 4 512 1 61 1 733 1 210 1 515 1 620 1 516 1 517 1 122 2 369 1 810 3 377 1 813 1 471 1 327 1 759 3 579 1 328 1 279 2 766 1 387 3 137 1 41 1 825 1 771 1 244 1 494 2 776 8 146 1 705 1 394 2 839 1 104 2 347 1 254 1 603 3 297 3 656 1 553 7 659 1 720 2 
528 1 328 1 0 2 260 1 428 2 686 2 529 1 155 1 156 1 448 2 607 1 451 1 232 2 302 1 666 2 452 1 730 2 794 2 535 4 795 1 137 2 309 1 240 2 211 1 41 2 825 2 163 1 365 1 141 1 390 1 771 2 14 1 620 2 516 2 217 1 674 1 144 1 96 1 440 1 776 4 705 2 344 1 599 1 840 1 779 1 191 1 842 1 426 1 254 2 713 1 784 3 603 2 271 1 297 1 786 1 656 2 553 7 684 1 813 2 471 1 275 1 327 2 759 1 579 2 760 1 
0 2 328 1 620 1 516 1 156 1 448 1 776 2 705 1 666 1 188 1 810 1 730 1 794 1 254 1 603 1 137 1 513 1 297 1 656 1 553 2 41 1 825 1 813 1 471 1 759 1 327 1 579 1 771 1 
0 2 448 1 607 1 300 1 666 1 730 1 794 1 309 1 620 1 516 1 674 1 746 1 271 2 813 1 471 1 327 1 579 1 127 1 232 2 130 1 482 1 535 2 137 1 41 1 825 1 182 2 390 1 771 1 776 2 705 1 254 1 784 2 603 1 656 1 553 4 659 1 
260 1 686 1 529 1 155 1 448 1 607 1 232 2 451 1 302 1 666 1 730 1 482 1 794 1 535 4 795 1 137 1 309 1 240 1 211 1 41 1 825 1 163 1 365 1 390 1 771 1 14 1 620 1 516 1 217 1 674 1 144 1 440 1 746 1 776 2 705 1 599 1 840 1 842 1 426 1 254 1 713 1 784 3 603 1 271 2 786 1 656 1 553 4 684 1 659 1 813 1 327 1 579 1 760 1 
0 1 127 1 529 1 448 1 607 1 300 1 179 1 232 2 302 1 279 2 130 1 666 3 509 1 510 2 766 1 730 1 794 1 535 3 795 1 284 1 512 1 591 1 61 1 210 1 456 1 137 1 309 1 41 1 825 1 163 1 182 1 390 1 771 1 14 1 515 1 216 1 620 1 516 1 674 1 218 3 440 1 776 7 705 1 544 1 122 2 839 1 840 1 810 1 254 1 784 3 603 3 271 1 349 1 656 1 553 4 377 1 813 1 327 1 29 1 579 1 
0 1 127 1 428 1 529 1 448 1 607 1 300 1 179 1 232 2 302 1 279 2 130 1 666 3 509 1 510 2 766 1 730 1 794 1 535 3 795 1 284 1 512 1 591 1 61 1 210 1 456 1 137 1 309 1 820 1 41 1 825 1 163 1 182 1 390 1 771 1 14 1 515 1 216 1 594 1 620 1 674 1 516 1 218 4 440 1 776 8 705 1 544 1 122 2 839 1 840 1 810 1 191 1 254 1 784 3 603 3 271 1 349 1 656 1 553 5 377 1 813 1 275 1 327 1 29 1 579 1 
0 9 156 3 448 4 607 3 300 2 302 1 666 5 510 1 452 1 7 1 112 1 730 4 794 8 795 1 512 1 615 3 61 1 210 1 456 1 309 3 62 1 163 1 14 1 515 1 620 2 516 2 674 3 218 4 69 1 678 2 122 1 72 1 810 1 630 1 271 3 684 2 377 1 813 5 327 2 759 3 579 2 127 2 328 1 686 2 474 2 529 1 232 6 279 1 130 2 281 1 766 1 534 3 535 9 284 1 387 2 136 1 137 2 240 2 41 2 825 2 488 1 182 4 390 3 771 2 339 1 440 1 494 2 776 8 705 2 394 2 839 1 840 1 104 2 549 3 254 2 784 9 603 5 785 3 297 2 656 2 349 1 553 16 195 3 720 2 
0 11 260 1 156 3 155 1 448 3 607 3 300 3 451 1 302 2 666 4 510 1 452 1 7 1 112 1 730 3 794 7 795 2 512 1 61 1 615 1 210 1 456 1 309 3 211 1 163 2 365 1 14 2 515 1 620 2 516 2 674 3 218 4 69 1 678 1 122 1 370 1 810 1 630 1 426 1 271 3 684 2 377 1 813 4 327 2 759 3 579 2 760 1 127 3 328 1 686 2 474 1 529 2 691 1 232 6 279 1 130 3 281 1 766 1 534 2 535 10 284 1 387 2 136 1 137 2 240 2 41 2 825 2 488 1 182 5 390 3 771 2 339 1 144 1 440 2 494 2 776 7 705 2 599 1 394 2 839 1 840 2 104 2 549 2 842 1 254 2 713 1 784 9 603 4 785 2 297 2 786 1 656 2 349 1 553 15 195 1 720 2 
127 2 0 2 3 1 529 1 448 1 406 1 276 1 607 2 300 2 179 1 232 4 302 1 130 2 666 1 730 1 794 1 535 5 795 1 819 1 284 1 671 1 137 1 309 2 239 1 41 1 825 1 163 1 182 3 390 2 771 1 14 1 216 1 620 1 516 1 674 2 218 4 440 1 494 1 776 3 705 1 394 1 462 1 840 1 104 1 601 1 254 1 784 5 24 1 603 1 271 2 349 1 656 1 553 7 195 1 813 2 759 1 327 1 720 1 579 1 29 1 
127 2 0 2 428 1 3 1 529 1 448 1 406 1 276 1 607 2 300 2 179 1 232 4 302 1 130 2 666 1 730 1 794 1 535 5 795 1 819 1 284 1 671 1 137 1 239 1 309 2 820 1 41 1 825 1 163 1 182 3 390 2 771 1 14 1 216 1 620 1 516 1 674 2 218 5 440 1 494 1 776 4 705 1 777 1 394 1 462 1 840 1 191 1 104 1 601 1 254 1 784 5 24 1 603 1 271 2 349 1 656 1 553 8 195 1 813 2 759 1 275 1 327 1 720 1 579 1 29 1 
405 1 820 1 
0 3 260 1 155 1 448 1 607 1 300 1 557 1 451 1 302 1 666 4 510 2 7 1 730 1 794 4 795 1 512 1 61 1 615 1 210 2 456 1 309 1 211 1 163 1 365 1 14 1 515 1 620 1 516 1 674 1 116 1 69 1 678 1 122 2 72 1 810 2 426 1 271 1 684 2 377 1 79 1 813 2 471 1 327 1 759 2 579 1 760 1 127 1 328 1 686 2 529 1 474 1 232 2 279 2 130 1 281 1 764 1 766 1 534 1 694 1 535 5 136 1 137 1 240 2 41 1 825 1 488 1 182 2 390 1 771 1 339 1 144 1 440 1 494 1 776 8 705 1 599 1 839 1 840 1 104 1 549 1 842 1 254 1 784 4 713 1 603 4 785 1 786 1 656 1 553 7 195 1 659 1 720 1 
0 3 260 1 155 1 448 1 607 1 300 1 451 1 302 1 666 4 510 2 7 1 730 1 794 4 795 1 512 1 61 1 615 1 210 2 456 1 309 1 211 1 163 1 365 1 14 1 515 1 620 1 516 1 674 1 69 1 624 1 678 1 122 2 72 1 810 2 426 1 271 1 684 1 376 1 377 1 813 2 471 1 327 1 759 2 579 1 760 1 127 1 328 1 686 2 529 1 474 1 232 2 279 2 130 1 281 1 766 1 534 1 694 1 535 4 435 1 136 1 137 1 240 2 41 1 825 1 488 1 182 2 390 1 771 1 339 1 144 1 440 1 494 1 776 8 705 1 599 1 839 1 840 1 104 1 549 1 842 1 254 1 784 3 713 1 603 4 785 1 786 1 656 1 553 7 53 1 195 1 659 1 720 1 
515 1 216 1 775 1 776 6 279 2 666 2 122 2 839 1 510 2 810 2 766 1 512 1 61 1 210 2 603 2 377 1 798 1 659 1 63 1 29 1 
279 2 666 2 510 2 766 1 512 1 61 1 210 2 798 1 63 1 515 1 216 1 775 1 776 6 122 2 839 1 810 2 603 2 377 1 659 1 29 1 
339 1 515 1 216 1 220 1 776 8 69 1 279 2 666 3 281 1 72 1 122 2 839 1 510 2 810 2 7 1 766 1 136 1 512 1 61 1 257 1 210 2 456 1 603 3 377 1 798 1 659 1 488 1 29 1 
279 2 666 3 281 1 510 2 7 1 766 1 136 1 512 1 61 1 210 2 456 1 798 1 488 1 339 1 515 1 216 1 220 1 776 8 69 1 72 1 122 2 839 1 810 2 257 1 603 3 377 1 659 1 29 1 
0 6 260 1 155 1 448 1 607 2 300 2 451 1 302 1 666 4 510 2 452 1 7 1 112 1 730 1 794 4 795 1 512 1 61 1 615 1 210 2 456 1 309 2 211 1 163 1 365 1 14 1 515 1 216 1 620 1 516 1 674 2 746 1 220 1 69 1 678 1 72 1 122 2 810 2 523 1 426 1 271 3 684 1 377 1 813 2 327 1 759 1 579 1 29 1 760 1 127 2 686 1 529 1 276 1 179 1 232 4 279 2 130 2 281 1 766 1 534 1 482 1 535 6 387 2 136 1 137 1 240 1 41 1 825 1 488 1 182 4 390 2 771 1 339 1 288 1 144 1 440 1 494 1 776 10 705 1 599 1 394 1 839 1 840 1 104 1 549 1 842 1 254 1 257 1 713 1 784 5 603 4 785 1 297 2 786 1 656 1 553 11 195 1 659 1 720 1 
0 1 127 1 529 1 448 1 607 1 300 1 232 2 450 1 302 1 279 2 130 1 666 4 281 1 510 2 766 1 7 1 730 1 794 2 535 3 694 1 795 1 512 1 136 1 61 1 210 2 137 1 456 1 309 1 41 1 825 1 163 1 182 1 488 1 390 1 771 1 14 1 339 1 515 1 415 1 620 1 674 1 516 1 218 3 440 1 776 8 69 1 705 1 122 2 72 1 839 1 840 1 810 2 254 1 784 3 603 4 271 1 349 1 656 1 553 4 377 1 813 1 659 1 471 1 176 1 327 1 579 1 
0 6 448 1 607 3 300 2 507 1 450 1 302 1 666 3 510 1 7 1 730 1 794 4 795 1 615 1 210 1 456 1 309 2 163 1 737 1 14 1 415 1 620 1 674 3 516 1 218 5 69 1 122 1 72 1 627 1 810 1 425 1 271 2 813 2 471 1 176 1 327 1 579 1 127 3 529 1 232 4 279 1 130 2 281 1 534 1 535 5 694 1 387 1 136 1 137 1 41 1 824 1 825 1 592 1 182 4 488 1 390 2 771 1 339 1 48 1 440 1 776 6 705 1 840 1 398 1 549 1 254 1 784 5 603 3 297 1 785 1 349 1 656 1 553 8 195 1 502 1 659 1 
0 7 260 1 155 1 448 1 607 2 300 2 450 1 451 1 302 1 666 4 510 2 452 1 7 1 112 1 730 1 794 5 795 1 512 1 61 1 615 1 210 2 456 1 309 2 211 1 163 1 365 1 14 1 515 1 415 1 620 1 516 1 674 2 69 1 678 1 72 1 122 2 810 2 425 1 426 1 271 2 684 1 377 1 813 2 327 1 759 1 579 1 760 1 127 2 686 1 529 1 232 4 279 2 130 2 281 1 766 1 534 1 535 6 387 2 136 1 137 1 240 1 41 1 825 1 488 1 182 4 390 2 771 1 339 1 144 1 440 1 494 1 776 8 705 1 599 1 394 1 839 1 840 1 104 1 549 1 842 1 254 1 784 5 713 1 603 4 785 1 297 2 786 1 656 1 553 9 195 1 502 1 659 1 720 1 
328 2 0 8 260 1 382 1 686 1 529 1 155 1 156 2 178 1 448 3 355 2 451 1 302 1 407 2 279 1 666 4 510 1 433 1 729 2 587 1 306 1 643 2 730 3 482 1 794 5 535 3 795 1 387 1 614 1 137 4 240 1 211 1 41 2 825 2 564 2 162 1 163 1 365 1 142 1 771 2 14 1 143 1 310 1 620 2 217 1 516 2 144 1 96 2 440 1 746 1 651 4 268 1 776 7 599 1 705 2 122 1 394 1 840 1 73 2 810 1 842 1 426 1 254 2 713 2 784 4 603 4 271 2 297 2 786 1 656 2 684 2 553 13 757 1 27 1 813 4 471 1 759 1 327 2 579 2 760 1 
0 2 529 1 448 2 355 1 507 1 302 1 407 1 666 2 729 1 306 1 643 1 361 1 730 2 482 1 794 2 535 1 795 1 614 1 137 2 41 1 824 1 825 1 592 1 163 1 737 1 771 1 14 1 143 1 620 1 217 1 516 1 674 1 218 4 440 1 746 1 268 1 776 6 705 1 71 1 627 1 840 1 73 1 810 1 254 1 784 2 603 2 271 1 297 1 349 1 656 1 553 6 27 1 813 2 327 1 579 1 
504 1 0 9 260 1 3 1 155 1 156 1 448 2 200 1 355 1 406 1 607 4 262 1 300 3 451 1 302 1 407 1 666 3 510 1 729 1 453 1 7 1 306 2 730 2 794 3 795 1 614 1 615 1 671 1 456 1 309 4 211 1 564 1 163 1 365 1 14 1 310 1 216 1 620 1 516 1 674 4 746 1 268 1 69 1 165 1 166 2 678 2 122 1 72 1 462 1 73 1 522 1 426 1 24 1 271 3 684 3 173 1 27 1 229 1 813 4 759 1 327 1 275 2 29 1 579 1 760 1 328 2 127 3 382 1 428 1 686 4 529 1 474 2 276 1 179 1 232 2 430 1 279 1 817 2 585 1 281 1 643 1 534 1 482 1 694 1 535 8 387 1 284 1 819 1 136 1 137 2 240 4 239 1 820 1 334 1 41 1 241 1 825 1 43 3 698 1 488 1 182 4 390 4 771 1 47 1 143 1 339 1 144 1 96 2 440 1 651 2 776 11 599 1 705 1 777 1 147 2 394 1 840 1 191 2 549 1 842 1 601 1 552 2 254 1 713 1 784 8 603 3 785 1 297 1 786 1 656 1 553 14 195 2 
168 1 
128 1 371 1 
5 1 609 1 
128 2 308 1 237 1 290 1 5 2 383 1 609 2 836 1 626 1 364 1 371 2 722 1 
128 1 5 1 11 1 708 1 345 1 371 1 
92 1 515 1 104 1 
359 1 
222 1 182 1 94 1 
222 1 182 1 
278 1 245 1 35 1 
247 1 645 1 114 1 
416 1 812 1 
702 1 633 1 
58 1 628 1 
796 1 103 1 
43 1 536 1 
354 1 400 1 
728 1 272 1 
420 1 298 1 
835 1 491 1 
125 1 198 1 
128 2 308 1 243 1 5 2 655 1 497 1 609 2 611 1 626 1 600 1 214 1 371 2 
266 1 18 1 491 1 272 1 541 2 78 1 
266 1 647 1 439 1 84 1 555 1 
636 1 
647 1 
44 1 
439 1 636 1 647 1 84 1 111 1 213 1 719 1 44 1 115 1 
70 1 
439 1 636 1 647 1 84 1 213 1 719 1 44 1 115 1 
439 1 636 1 647 1 84 1 618 1 28 1 44 1 115 1 
339 1 128 2 635 1 456 1 309 1 300 1 154 1 488 1 390 1 
128 1 93 1 641 1 300 1 
647 1 439 1 84 1 325 1 699 1 
515 1 541 1 67 1 104 1 596 1 
366 1 541 1 67 1 182 1 94 1 
331 1 645 1 541 1 67 1 114 1 
647 1 439 1 84 1 780 1 423 1 
84 1 
439 1 84 1 
44 1 115 1 
128 1 5 1 541 1 67 1 
82 1 
398 1 48 1 649 1 555 1 300 1 507 1 266 1 93 1 286 1 359 1 641 1 
507 1 398 1 48 1 
823 1 577 1 233 1 801 1 
398 1 201 1 468 1 
577 1 801 1 680 1 192 1 
128 1 5 1 322 1 456 1 309 1 488 1 434 1 
456 1 488 1 434 1 
339 1 128 1 456 1 309 1 300 1 154 1 488 1 390 1 
339 1 154 1 456 1 488 1 
128 1 5 1 580 1 456 1 316 1 639 1 488 1 642 1 
339 1 128 2 5 1 150 1 456 3 309 1 677 1 316 1 809 1 488 2 642 1 
339 1 677 1 639 1 809 1 456 3 488 3 642 2 
339 1 677 1 456 1 488 1 809 1 
339 1 677 1 456 3 488 2 809 1 642 1 
541 1 309 1 300 2 266 2 205 1 182 3 390 1 641 1 104 1 
541 1 309 1 300 1 266 1 182 1 390 1 104 1 
266 2 205 1 541 1 182 3 641 1 390 1 699 1 104 1 300 2 309 1 
309 1 300 1 182 1 390 1 
266 1 541 1 641 1 300 1 104 1 
266 1 541 1 182 1 641 1 300 1 
398 1 48 1 702 2 309 1 300 1 266 1 699 1 390 1 
541 3 309 2 300 2 114 2 266 3 205 2 182 3 699 1 390 2 104 1 
644 1 219 1 554 1 
416 1 541 4 78 1 266 3 18 1 699 1 104 2 
18 1 541 1 400 1 78 1 
439 1 555 1 636 1 266 1 647 1 84 1 286 1 
339 1 439 1 367 1 518 1 333 1 456 1 636 2 78 1 647 1 84 2 362 1 503 1 488 1 
712 1 439 1 636 1 78 1 18 1 647 1 197 1 84 1 
439 1 636 1 647 1 84 1 325 1 6 1 699 1 
439 1 783 1 636 1 25 1 647 1 205 1 84 1 
647 1 706 1 2 1 602 1 636 1 
439 1 661 1 145 1 636 1 647 1 84 1 250 1 
515 1 48 1 541 1 67 1 97 1 596 1 300 1 507 1 396 1 104 1 398 1 309 1 107 1 182 2 390 1 
439 1 518 1 34 1 456 1 636 1 650 1 647 1 508 1 84 1 488 1 
339 1 439 1 367 1 518 1 456 1 636 2 78 1 647 2 84 2 362 1 503 1 488 1 
740 1 439 1 456 1 636 1 797 1 647 1 212 1 84 1 531 1 488 1 642 1 
339 1 439 1 89 1 518 1 636 2 342 1 456 3 647 2 212 1 84 2 809 1 488 2 574 1 642 1 
456 1 488 1 34 1 650 1 
339 1 367 1 362 1 456 1 488 1 
740 1 531 1 456 1 488 1 642 1 
339 1 89 1 456 2 488 2 809 1 342 1 642 1 
127 1 328 1 0 1 260 1 686 1 529 1 155 1 299 1 448 1 607 1 663 1 300 1 263 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 90 1 137 1 309 1 240 1 211 1 41 1 825 1 163 1 43 2 365 1 390 1 771 1 14 1 620 1 674 1 516 1 144 1 440 1 776 1 293 1 705 1 599 1 652 1 840 1 169 1 842 1 551 1 426 1 254 1 784 1 713 1 603 1 786 1 656 1 553 2 684 1 813 1 327 1 759 1 579 1 760 1 
127 1 328 2 0 5 260 1 686 1 529 1 155 1 156 3 448 4 663 1 607 1 507 1 451 1 302 1 666 4 791 1 766 1 730 4 794 4 535 2 795 1 512 1 61 1 137 3 240 1 211 1 41 3 824 1 825 3 592 1 163 1 737 1 365 1 771 3 14 1 515 1 620 3 48 1 217 1 516 3 674 1 144 1 440 1 494 3 776 6 599 1 705 3 394 2 839 1 627 1 840 1 104 3 398 1 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 684 1 553 7 813 3 327 3 759 5 579 3 720 3 760 1 
14 1 620 1 516 1 529 1 218 2 440 1 448 1 494 1 663 1 776 2 39 1 705 1 302 1 666 1 839 1 359 1 840 1 730 1 794 1 535 1 795 1 254 1 512 1 683 1 784 1 603 1 137 1 349 1 656 1 553 2 41 1 825 1 163 1 813 1 759 1 327 1 720 1 579 1 771 1 
260 1 686 1 155 1 529 1 5 1 690 1 448 1 663 1 609 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 512 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 771 1 14 1 620 1 516 1 144 1 440 1 494 1 776 2 705 1 599 1 839 1 840 1 465 1 842 1 426 1 254 1 784 1 713 1 603 1 656 1 786 1 553 2 684 1 813 1 327 1 759 1 579 1 720 1 760 1 
127 1 328 3 0 7 156 4 690 1 448 4 663 1 607 1 507 1 666 4 791 1 730 4 794 4 512 1 137 3 41 3 824 1 825 3 592 1 737 1 771 3 416 3 620 3 48 1 217 1 516 3 674 1 494 3 776 6 705 3 394 3 839 1 627 1 398 1 654 1 254 3 603 4 656 3 553 7 350 1 812 1 813 3 327 3 759 6 579 3 720 3 
0 5 328 2 127 1 260 1 686 1 529 1 155 1 156 3 448 4 663 1 607 1 507 1 451 1 302 1 666 4 791 1 730 4 794 4 693 3 535 2 795 1 137 3 240 1 211 1 41 3 824 1 825 3 592 1 163 1 737 1 365 1 771 3 14 1 620 3 48 1 516 3 674 1 217 1 144 1 440 1 776 5 599 1 705 3 394 2 627 1 840 1 398 1 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 553 7 684 1 813 3 759 5 327 3 579 3 760 1 
529 1 448 1 555 1 663 1 607 1 300 1 507 1 302 1 666 1 359 1 641 1 730 1 794 1 535 1 795 1 137 1 41 1 266 1 824 1 93 1 825 1 163 1 286 1 771 1 14 1 620 1 48 1 516 1 674 1 218 2 440 1 649 1 776 2 705 1 627 1 840 1 398 1 254 1 784 1 603 1 524 1 349 1 656 1 553 2 813 1 327 1 579 1 
127 2 328 2 0 5 260 1 686 1 529 1 156 3 155 1 448 4 663 1 607 3 507 2 451 1 302 1 666 4 791 1 730 4 794 4 535 2 795 1 137 3 240 1 211 1 41 3 824 2 825 3 592 2 163 1 737 2 365 1 771 3 14 1 620 3 48 3 516 3 674 3 217 1 144 1 440 1 776 6 705 3 599 1 627 2 840 1 398 3 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 553 7 684 1 813 3 327 3 759 2 579 3 760 1 
127 1 328 1 0 2 260 1 686 1 529 1 156 1 155 1 448 2 663 1 607 2 451 1 302 1 666 2 233 2 730 2 794 2 535 2 795 1 137 2 240 1 211 1 41 2 823 1 824 1 825 2 163 1 801 2 365 1 771 2 14 1 620 2 516 2 674 2 217 1 144 1 440 1 776 3 705 2 599 1 627 1 840 1 397 1 842 1 755 1 426 1 254 2 713 1 784 1 603 2 786 1 656 2 553 4 684 1 577 1 813 2 327 2 759 1 579 2 760 1 
127 1 328 1 0 1 260 1 686 1 529 1 155 1 448 1 607 1 300 1 232 1 451 1 302 1 205 1 666 1 731 1 730 1 794 1 535 3 795 1 137 1 309 1 240 1 211 1 41 1 266 2 825 1 163 1 182 2 365 1 699 1 390 1 771 1 14 1 620 1 674 1 516 1 144 1 440 1 541 1 776 1 705 1 599 1 840 1 104 1 842 1 426 1 254 1 713 1 784 2 603 1 786 1 656 1 553 2 684 1 813 1 327 1 759 1 579 1 760 1 
127 1 328 1 0 1 260 1 686 1 155 1 529 1 448 1 607 1 300 1 232 1 451 1 302 1 666 1 731 1 730 1 794 1 535 3 795 1 137 1 309 1 240 1 211 1 41 1 825 1 163 1 182 2 365 1 390 1 771 1 14 1 620 1 674 1 516 1 144 1 440 1 776 1 705 1 599 1 840 1 842 1 426 1 254 1 784 2 713 1 603 1 786 1 656 1 553 2 684 1 813 1 327 1 759 1 579 1 760 1 
14 1 620 1 516 1 674 1 529 1 218 2 440 1 541 1 448 1 607 1 300 1 776 1 705 1 232 1 302 1 666 1 840 1 641 1 104 1 730 1 731 1 794 1 535 2 795 1 254 1 784 2 603 1 137 1 349 1 656 1 553 2 266 1 41 1 825 1 163 1 813 1 182 1 327 1 579 1 771 1 
14 1 620 1 516 1 674 1 529 1 218 2 440 1 541 1 448 1 607 1 300 1 776 1 705 1 232 1 302 1 666 1 840 1 641 1 730 1 731 1 794 1 535 2 795 1 254 1 784 2 603 1 137 1 349 1 656 1 553 2 266 1 41 1 825 1 163 1 813 1 182 2 327 1 579 1 771 1 
127 1 328 1 0 1 260 1 686 1 529 1 155 1 448 1 607 1 300 1 232 1 451 1 302 1 666 1 731 1 730 1 794 1 535 3 795 1 137 1 309 1 240 1 211 1 41 1 266 1 825 1 163 1 365 1 699 1 390 1 771 1 14 1 620 1 48 1 674 1 516 1 144 1 440 1 702 2 776 1 705 1 599 1 840 1 398 1 842 1 426 1 254 1 713 1 784 2 603 1 786 1 656 1 553 2 684 1 813 1 327 1 759 1 579 1 760 1 
127 3 328 2 0 5 156 3 448 3 607 3 507 1 232 2 666 3 731 1 730 3 794 3 535 2 137 2 41 2 266 2 824 1 825 2 592 1 737 1 771 2 620 2 48 1 674 3 516 2 491 2 744 1 541 4 776 4 705 2 18 2 627 1 398 1 254 2 784 2 603 3 656 2 553 5 78 2 272 2 813 2 327 2 759 2 579 2 
127 1 328 1 0 1 260 1 686 1 529 1 155 1 448 1 607 1 300 2 232 1 451 1 302 1 205 2 666 1 731 1 730 1 794 1 535 3 795 1 137 1 309 2 114 2 240 1 211 1 41 1 266 3 825 1 163 1 182 3 365 1 699 1 390 2 771 1 14 1 620 1 674 1 516 1 144 1 440 1 541 3 776 1 705 1 599 1 840 1 104 1 842 1 426 1 254 1 713 1 784 2 603 1 786 1 656 1 553 2 684 1 813 1 327 1 759 1 579 1 760 1 
127 1 0 3 328 1 354 1 156 2 448 2 607 1 507 1 666 2 791 1 730 2 794 2 137 1 41 1 824 2 825 1 592 1 737 1 771 1 620 1 48 1 516 1 674 1 541 1 67 1 776 4 705 1 18 1 627 2 752 1 712 1 398 1 254 1 603 2 656 1 400 1 553 3 78 1 197 1 813 1 327 1 759 1 579 1 
328 1 127 1 0 3 260 1 354 1 686 1 529 1 155 1 156 2 635 1 448 3 607 2 300 1 507 1 451 1 302 1 666 3 791 1 730 3 794 3 535 2 795 1 456 1 137 2 240 1 309 2 211 1 41 2 824 2 825 2 592 1 163 1 737 1 488 1 365 1 390 2 804 1 771 2 14 1 339 1 620 2 48 1 217 1 516 2 674 2 144 1 440 1 776 5 599 1 705 2 627 2 840 1 398 1 842 1 426 1 254 2 713 1 784 1 603 3 786 1 656 2 400 3 684 1 553 5 813 2 154 1 759 1 327 2 579 2 760 1 
0 5 328 2 127 2 48 3 620 2 674 2 516 2 156 3 448 3 607 2 663 1 776 5 507 2 18 2 705 2 666 3 791 1 627 2 398 3 712 1 730 3 794 3 254 2 137 2 603 3 656 2 78 2 553 5 41 2 824 2 197 1 825 2 592 1 658 1 813 2 737 1 759 2 327 2 579 2 771 2 
127 2 328 2 0 5 156 3 448 3 636 2 663 1 607 2 507 1 666 3 791 1 730 3 794 3 137 2 41 2 824 2 825 2 592 1 737 1 771 2 620 2 48 1 516 2 674 2 776 5 705 2 18 2 627 2 712 1 398 1 254 2 603 3 656 2 553 5 78 2 197 1 658 1 813 2 327 2 759 2 579 2 
259 1 127 2 328 2 0 5 260 1 686 1 529 1 155 1 156 3 448 4 663 1 607 3 507 2 451 1 302 1 666 4 791 1 730 4 794 4 535 2 795 1 333 1 456 1 137 3 240 1 211 1 41 3 824 2 825 3 592 1 163 1 362 1 737 1 488 1 365 1 771 3 14 1 339 1 620 3 367 1 48 6 217 1 516 3 674 3 144 1 518 3 440 1 776 6 599 1 705 3 627 2 840 1 398 6 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 684 1 553 7 78 2 813 3 503 3 327 3 759 2 579 3 760 1 
259 1 127 2 328 2 0 5 156 3 448 3 636 4 663 1 607 2 507 1 666 3 791 1 730 3 794 3 333 1 456 1 137 2 41 2 824 2 825 2 592 1 362 1 488 1 737 1 771 2 339 1 48 1 620 2 367 1 516 2 674 2 518 2 776 5 705 2 627 2 398 1 254 2 603 3 656 2 553 5 78 2 813 2 503 2 327 2 759 2 579 2 
127 1 328 1 0 1 260 1 686 1 155 1 529 1 448 1 607 1 663 1 300 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 137 1 309 1 240 1 211 1 41 1 824 1 825 1 163 1 182 2 365 1 390 1 771 1 14 1 620 1 674 1 516 1 144 1 440 1 776 2 705 1 599 1 627 1 840 1 842 1 426 1 254 1 784 1 713 1 603 1 786 1 656 1 553 2 684 1 813 1 327 1 759 1 579 1 760 1 
260 1 686 1 155 1 529 1 690 1 448 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 645 1 512 1 137 1 114 1 240 1 211 1 41 1 825 1 163 1 365 1 771 1 14 1 620 1 516 1 217 1 144 1 440 1 494 1 776 2 705 1 599 1 247 1 839 1 840 1 465 1 842 1 426 1 254 1 784 1 713 1 603 1 786 1 656 1 553 2 684 1 813 1 327 1 759 1 579 1 720 1 760 1 
260 1 686 1 155 1 529 1 5 1 690 1 448 1 663 1 609 1 451 1 302 1 666 1 730 1 794 1 535 2 795 1 512 1 137 1 240 1 211 1 41 1 825 1 163 1 365 1 771 1 14 1 620 1 516 1 144 1 440 1 494 1 776 2 705 1 599 1 839 1 840 1 465 1 842 1 426 1 254 1 784 1 713 1 603 1 656 1 786 1 553 2 684 1 813 1 327 1 759 1 579 1 720 1 760 1 
328 2 0 5 127 1 260 1 686 1 529 1 155 1 156 3 448 4 663 1 607 1 507 1 451 1 302 1 666 4 791 1 730 4 794 4 693 3 535 2 795 1 137 3 240 1 211 1 41 3 824 1 825 3 592 1 163 1 737 1 365 1 771 3 14 1 620 3 48 1 516 3 674 1 217 1 144 1 440 1 776 5 599 1 705 3 394 2 627 1 840 1 398 1 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 684 1 553 7 350 1 813 3 759 5 327 3 579 3 760 1 
14 1 620 1 516 1 529 1 218 2 440 1 448 1 494 1 663 1 776 2 39 1 705 1 302 1 666 1 839 1 359 1 840 1 730 1 794 1 535 1 795 1 254 1 512 1 683 1 784 1 603 1 137 1 349 1 656 1 553 2 350 1 41 1 825 1 163 1 813 1 759 1 327 1 720 1 579 1 771 1 
14 1 620 1 48 1 516 1 674 1 529 1 218 2 440 1 448 1 663 1 607 1 300 1 776 1 705 1 302 1 666 1 840 1 641 1 398 1 730 1 794 1 535 1 795 1 254 1 784 1 603 1 137 1 349 1 656 1 553 2 41 1 266 1 825 1 163 1 813 1 327 1 579 1 771 1 
14 1 620 1 48 1 516 1 674 1 529 1 218 2 440 1 448 1 663 1 607 1 300 1 776 1 705 1 302 1 666 1 840 1 641 1 398 1 730 1 794 1 535 1 795 1 254 1 784 1 603 1 137 1 349 1 656 1 553 2 41 1 266 1 825 1 163 1 813 1 327 1 579 1 771 1 
14 1 620 1 48 1 516 1 674 1 529 1 218 2 440 1 448 1 663 1 607 1 300 1 776 1 705 1 302 1 666 1 840 1 641 1 398 1 730 1 794 1 535 1 795 1 254 1 784 1 603 1 137 1 349 1 656 1 553 2 41 1 266 1 825 1 163 1 813 1 327 1 579 1 771 1 
127 2 0 6 328 1 260 1 686 2 529 1 156 2 155 1 448 2 607 2 232 2 451 1 302 1 666 2 452 1 112 1 731 1 730 2 794 6 535 5 795 1 387 1 137 2 240 2 211 1 41 2 825 2 163 1 365 1 771 2 14 1 620 2 516 2 674 2 144 1 440 1 494 3 776 2 705 2 599 1 394 3 840 1 104 3 842 1 426 1 254 2 713 1 784 4 603 2 786 1 656 2 553 8 684 2 813 2 554 2 759 5 327 2 720 4 579 2 760 1 
328 1 0 4 127 1 620 1 674 1 516 1 156 2 448 1 607 1 494 2 776 1 705 1 232 1 666 1 394 2 104 2 730 1 731 1 794 3 535 1 387 1 254 1 784 1 603 1 137 1 656 1 553 4 41 1 825 1 813 1 554 1 327 1 759 3 579 1 720 2 771 1 
127 2 0 6 328 1 260 1 686 3 529 1 156 2 155 1 448 2 607 2 232 2 451 1 302 1 666 2 452 1 112 1 731 1 730 2 794 6 535 6 795 1 387 1 137 2 240 3 211 1 41 2 825 2 163 1 365 1 771 2 14 1 620 2 516 2 674 2 144 1 440 1 494 3 776 2 705 2 599 1 394 3 840 1 104 3 842 1 426 1 254 2 713 1 784 5 603 2 786 1 656 2 553 8 684 3 813 2 554 2 759 5 327 2 720 4 579 2 760 1 
0 2 127 1 328 1 260 1 428 1 686 3 529 1 155 1 156 1 474 1 448 1 663 1 607 2 300 1 451 1 302 1 666 1 386 1 730 1 794 1 535 3 795 1 137 1 309 1 240 3 211 1 41 1 266 1 825 1 163 1 43 1 365 1 390 1 771 1 14 1 620 1 48 2 516 1 674 2 144 1 96 1 440 1 776 1 599 1 705 1 678 1 840 1 398 2 842 1 426 1 782 1 254 1 713 1 784 2 603 1 786 1 656 1 553 5 684 2 195 1 758 1 813 1 108 1 327 1 759 1 579 1 760 1 
0 2 127 1 328 1 260 1 428 1 686 3 529 1 155 1 156 1 474 1 448 1 663 1 607 2 300 1 451 1 302 1 666 1 386 1 730 1 794 1 535 3 795 1 137 1 309 1 240 3 211 1 41 1 266 1 825 1 163 1 43 1 365 1 390 1 771 1 14 1 620 1 48 2 516 1 674 2 144 1 96 1 440 1 776 1 599 1 705 1 678 1 840 1 398 2 842 1 426 1 782 1 254 1 713 1 784 2 603 1 786 1 656 1 553 5 684 2 195 1 758 1 813 1 108 1 327 1 759 1 579 1 760 1 
0 2 127 1 328 1 260 1 428 1 686 3 529 1 155 1 156 1 474 1 448 1 663 1 607 2 300 1 451 1 302 1 666 1 386 1 730 1 794 1 535 3 795 1 137 1 309 1 240 3 211 1 41 1 266 1 825 1 163 1 43 1 365 1 390 1 771 1 14 1 620 1 48 2 516 1 674 2 144 1 96 1 440 1 776 1 599 1 705 1 678 1 840 1 398 2 842 1 426 1 782 1 254 1 713 1 784 2 603 1 786 1 656 1 553 5 684 2 195 1 758 1 813 1 108 1 327 1 759 1 579 1 760 1 
127 4 0 8 328 2 260 1 686 1 529 1 155 1 156 3 448 4 607 4 663 1 637 3 507 1 451 1 302 1 666 4 791 1 452 1 112 1 730 4 794 4 535 2 795 1 410 2 137 3 240 1 211 1 41 3 824 1 825 3 592 1 163 1 737 1 365 1 771 3 14 1 48 4 620 3 674 4 516 3 144 1 440 1 776 5 599 1 705 3 18 3 627 1 840 1 398 4 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 684 1 553 10 78 3 758 3 813 3 327 3 759 2 579 3 760 1 
127 4 0 8 328 2 260 1 686 1 529 1 155 1 156 3 448 4 607 4 663 1 637 3 507 1 451 1 302 1 666 4 791 1 452 1 112 1 730 4 794 4 535 2 795 1 410 2 137 3 240 1 211 1 41 3 824 1 825 3 592 1 163 1 737 1 365 1 771 3 14 1 48 4 620 3 674 4 516 3 144 1 440 1 776 5 599 1 705 3 18 3 627 1 840 1 398 4 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 684 1 553 10 78 3 758 3 813 3 327 3 759 2 579 3 760 1 
127 4 0 8 328 2 260 1 686 1 529 1 155 1 156 3 448 4 607 4 663 1 637 3 507 1 451 1 302 1 666 4 791 1 452 1 112 1 730 4 794 4 535 2 795 1 410 2 137 3 240 1 211 1 41 3 824 1 825 3 592 1 163 1 737 1 365 1 771 3 14 1 48 4 620 3 674 4 516 3 144 1 440 1 776 5 599 1 705 3 18 3 627 1 840 1 398 4 842 1 426 1 254 3 713 1 784 1 603 4 786 1 656 3 684 1 553 10 78 3 758 3 813 3 327 3 759 2 579 3 760 1 
0 1 127 1 260 1 686 1 529 1 155 1 429 1 448 1 555 1 663 1 607 1 201 1 507 2 451 1 302 1 279 1 666 2 510 1 730 1 794 2 535 2 795 1 137 1 240 1 211 1 41 1 266 1 824 2 825 1 592 1 163 1 286 1 737 1 365 1 771 1 14 1 620 1 48 2 516 1 674 1 144 1 440 1 776 4 599 1 705 1 18 1 122 1 627 2 840 1 712 1 398 3 842 1 426 1 254 1 713 1 784 1 603 2 786 1 656 1 684 1 553 3 78 1 197 1 468 1 813 1 327 1 579 1 760 1 
328 2 0 7 127 3 156 3 429 1 448 3 555 1 663 1 607 3 201 2 507 3 279 1 666 4 791 1 510 1 730 3 794 5 387 2 137 2 41 2 266 2 824 3 825 2 592 2 286 1 737 2 771 2 620 2 48 5 516 2 674 3 776 7 705 2 18 2 122 1 627 3 712 1 398 6 254 2 603 4 656 2 553 7 78 2 197 1 468 1 813 2 759 2 327 2 579 2 
328 2 0 7 127 3 260 1 686 1 2 1 529 1 155 1 156 3 448 4 555 1 663 1 607 4 507 3 451 1 302 1 279 1 84 2 666 5 791 1 510 1 452 1 112 1 730 4 794 7 535 2 795 1 387 2 12 1 137 3 240 1 211 1 41 3 266 5 824 3 825 3 592 2 163 1 286 1 737 2 365 1 771 3 14 1 439 1 620 3 48 8 516 3 674 4 144 1 440 1 776 8 599 1 705 3 18 2 706 1 122 1 627 3 840 1 712 1 398 8 842 1 426 1 254 3 602 2 713 1 784 1 603 5 786 1 656 3 684 1 78 2 553 10 197 1 813 3 759 2 327 3 579 3 760 1 
328 1 0 4 127 2 260 1 686 1 2 1 529 1 155 1 156 1 448 2 636 1 555 1 663 1 607 2 507 2 451 1 302 1 279 1 666 3 510 1 452 1 112 1 730 2 794 4 535 2 795 1 387 1 12 1 137 2 240 1 211 1 41 2 266 4 824 2 825 2 592 1 163 1 286 1 737 1 365 1 771 2 14 1 620 2 48 6 516 2 674 2 144 1 440 1 776 5 599 1 705 2 18 2 706 1 122 1 627 2 840 1 712 1 398 6 842 1 426 1 254 2 602 2 713 1 784 1 603 3 786 1 656 2 684 1 553 6 78 2 197 1 813 2 759 1 327 2 579 2 760 1 
328 1 0 4 127 2 260 1 686 1 2 1 529 1 155 1 156 1 448 2 555 1 663 1 607 2 507 2 451 1 302 1 279 1 666 3 510 1 452 1 112 1 730 2 794 4 535 2 795 1 387 1 12 1 137 2 240 1 211 1 41 2 266 4 647 1 824 2 825 2 592 1 163 1 286 1 737 1 365 1 771 2 14 1 620 2 48 6 516 2 674 2 144 1 440 1 776 5 599 1 705 2 18 2 706 1 122 1 627 2 840 1 712 1 398 6 842 1 426 1 254 2 602 2 713 1 784 1 603 3 786 1 656 2 684 1 553 6 78 2 197 1 813 2 759 1 327 2 579 2 760 1 
0 3 260 1 155 1 57 1 448 1 663 1 607 2 507 1 451 1 302 1 666 2 510 1 730 1 794 2 795 1 455 1 456 1 211 1 160 1 163 1 617 1 737 1 802 1 14 1 620 1 516 1 674 2 368 1 517 1 678 1 122 1 369 1 627 1 463 1 224 1 225 1 228 1 684 1 323 1 758 1 813 1 327 1 759 1 579 1 127 2 473 1 686 1 474 1 529 1 430 1 279 1 479 1 431 1 386 1 535 2 693 1 387 1 137 1 240 2 41 1 824 1 825 1 592 1 826 1 488 1 771 1 339 1 392 1 48 2 830 1 144 1 96 1 440 1 244 1 776 8 146 1 705 1 599 1 652 1 294 1 547 1 394 1 840 1 248 1 398 2 347 1 842 1 348 1 254 1 782 1 784 1 713 1 603 2 297 1 786 1 656 1 553 8 195 1 108 1 353 1 
0 2 260 1 155 1 57 1 448 1 663 1 607 2 507 1 451 1 302 1 666 2 510 1 730 1 794 2 795 1 455 1 456 1 211 1 160 1 617 1 163 1 737 1 802 1 14 1 620 1 516 1 674 2 368 1 517 1 678 1 122 1 369 1 627 2 463 1 224 1 225 1 228 1 684 1 323 1 758 1 813 1 327 1 579 1 127 2 473 1 529 1 430 1 279 1 479 1 431 1 386 1 535 2 137 1 240 1 41 1 824 2 825 1 592 1 826 1 488 1 771 1 339 1 392 1 48 2 830 1 144 1 440 1 244 1 776 9 146 1 705 1 599 1 652 1 294 1 547 1 840 1 248 1 398 2 347 1 842 1 348 1 254 1 782 1 784 1 713 1 603 2 656 1 786 1 553 8 195 1 108 1 353 1 
0 2 260 1 155 1 57 1 448 1 663 1 607 2 507 1 451 1 302 1 666 2 510 1 730 1 794 2 795 1 455 1 456 1 211 1 160 1 617 1 163 1 737 1 802 1 14 1 620 1 516 1 674 2 368 1 517 1 678 1 122 1 369 1 627 2 463 1 224 1 225 1 228 1 684 1 323 1 758 1 813 1 327 1 579 1 127 2 473 1 529 1 430 1 279 1 479 1 431 1 386 1 535 2 137 1 240 1 41 1 824 2 825 1 592 1 826 1 488 1 771 1 339 1 392 1 48 2 830 1 144 1 440 1 244 1 776 9 146 1 705 1 599 1 652 1 294 1 547 1 840 1 248 1 398 2 347 1 842 1 348 1 254 1 782 1 784 1 713 1 603 2 656 1 786 1 553 8 195 1 108 1 353 1 
0 2 328 1 127 2 260 1 128 2 686 2 529 1 155 1 156 1 474 2 448 2 663 1 607 2 507 1 451 1 302 1 666 2 452 1 112 1 730 2 588 2 794 2 535 3 795 1 137 2 240 2 211 1 41 2 436 1 824 2 825 2 592 1 538 1 163 1 737 1 365 1 771 2 14 1 620 2 48 2 516 2 674 2 144 1 440 1 570 1 541 2 67 1 492 1 776 5 599 1 705 2 678 2 627 2 840 1 398 2 842 1 321 1 426 1 254 2 713 1 784 2 603 2 786 1 656 2 553 6 684 2 813 2 759 1 327 2 579 2 760 1 
127 2 328 1 0 2 260 1 686 2 529 1 155 1 474 2 156 1 448 2 663 1 607 2 507 1 451 1 302 1 84 2 666 2 452 1 112 1 730 2 588 2 794 2 535 3 795 1 137 2 240 2 211 1 41 2 824 2 825 2 592 1 538 1 163 1 737 1 365 1 771 2 14 1 620 2 48 2 516 2 674 2 144 1 440 1 570 1 776 5 599 1 705 2 678 2 627 2 840 1 398 2 842 1 321 1 426 1 254 2 713 1 784 2 603 2 786 1 656 2 553 6 684 2 813 2 327 2 759 1 579 2 760 1 
0 2 328 1 127 2 260 1 686 3 529 1 155 1 156 1 474 2 690 1 448 2 663 1 607 2 507 1 451 1 302 1 666 2 452 1 112 1 730 2 588 2 794 2 535 3 795 1 512 1 11 1 137 2 240 3 211 1 41 2 824 1 825 2 592 1 163 1 182 2 737 1 365 1 771 2 14 1 620 2 48 2 516 2 674 2 144 1 440 1 570 1 494 2 776 5 599 1 705 2 678 2 708 2 222 1 394 2 345 1 839 1 627 1 840 1 398 2 842 1 321 1 426 1 254 2 713 1 784 2 603 2 786 1 656 2 553 6 684 2 813 2 759 3 327 2 579 2 720 2 760 1 
328 1 0 9 260 1 686 3 529 1 155 1 156 1 474 2 448 2 663 1 451 1 302 1 279 2 666 4 281 1 510 2 7 1 766 2 534 1 730 2 588 2 794 8 535 4 795 1 387 6 136 1 512 2 615 1 61 2 733 1 210 1 456 1 137 2 240 3 211 1 41 2 825 2 163 1 488 1 365 1 771 2 14 1 339 1 515 2 620 2 217 1 516 2 144 1 440 1 570 1 494 5 776 10 69 1 599 1 705 2 678 3 394 5 72 1 122 2 839 2 840 1 810 2 104 5 549 1 842 1 321 1 426 1 254 2 713 1 784 3 603 4 785 1 297 4 786 1 656 2 684 3 553 13 195 1 377 1 813 3 327 2 759 6 579 2 720 5 760 1 
0 1 260 1 686 3 529 1 155 1 474 1 5 1 690 1 448 1 663 1 609 1 451 1 302 1 279 1 666 2 509 1 510 1 766 1 730 1 588 1 794 2 535 2 795 1 387 1 512 2 590 1 61 1 591 1 456 1 137 1 240 3 211 1 41 1 825 1 163 1 365 1 771 1 14 1 515 1 620 1 516 1 144 1 440 1 570 1 494 3 776 6 599 1 705 1 678 1 122 1 394 2 839 2 840 1 104 2 465 1 842 1 321 1 426 1 254 1 713 1 784 1 603 2 786 1 656 1 553 5 684 1 813 1 327 1 759 3 579 1 720 3 760 1 
127 1 686 1 474 1 529 1 448 1 636 1 607 1 507 1 302 1 666 1 452 1 730 1 588 1 794 1 535 2 795 1 137 1 240 1 41 1 824 2 825 1 592 1 538 1 163 1 737 1 771 1 14 1 620 1 48 1 516 1 674 1 218 2 440 1 570 1 776 4 705 1 678 1 627 2 840 1 398 1 321 1 575 1 254 1 784 2 603 1 349 1 656 1 553 3 684 1 813 1 327 1 579 1 
686 1 474 1 529 1 448 1 607 1 507 1 302 1 430 1 666 1 452 1 730 1 588 1 794 1 535 2 795 1 137 1 240 1 41 1 824 1 825 1 592 1 163 1 737 1 771 1 14 1 620 1 48 1 516 1 674 1 218 2 440 1 570 1 776 3 705 1 678 1 627 1 840 1 398 1 321 1 575 1 254 1 784 2 603 1 297 1 349 1 656 1 553 3 684 1 813 1 327 1 579 1 
127 1 529 1 448 1 607 1 507 1 302 1 430 1 666 1 452 1 730 1 588 1 794 1 535 1 795 1 137 1 41 1 824 1 825 1 592 1 163 1 737 1 771 1 14 1 620 1 48 1 516 1 674 1 218 2 570 1 440 1 776 3 705 1 627 1 840 1 398 1 321 1 575 1 254 1 784 1 603 1 297 1 656 1 349 1 553 3 813 1 327 1 579 1 
529 1 448 1 555 1 607 1 300 1 232 1 302 1 279 1 666 2 510 1 359 1 641 1 766 1 731 1 730 1 794 2 535 2 795 1 512 1 61 1 137 1 266 1 41 1 824 1 93 1 825 1 163 1 286 1 771 1 14 1 515 2 620 1 516 1 674 1 218 3 440 1 541 1 67 1 596 1 776 5 705 1 246 1 122 1 223 1 839 1 627 1 840 1 104 1 194 1 254 1 784 2 603 2 349 1 656 1 553 3 813 1 327 1 579 1 
0 4 260 1 156 1 155 1 448 2 607 2 300 2 451 1 302 1 666 2 452 1 112 1 730 2 731 1 794 2 410 1 795 1 512 1 61 1 456 1 309 2 211 1 617 1 163 1 365 1 14 1 515 1 620 2 516 2 674 2 678 1 223 1 627 1 224 1 225 1 426 1 684 2 758 2 813 2 759 3 327 2 579 2 760 1 127 2 328 1 473 1 686 2 474 1 529 1 232 2 766 1 386 2 535 5 137 2 240 2 41 2 824 1 825 2 488 1 182 4 390 2 771 2 339 1 144 1 440 1 494 2 776 7 705 2 599 1 246 1 187 1 294 1 547 1 394 2 839 1 840 1 104 2 842 1 254 2 782 2 784 4 713 1 603 2 656 2 786 1 553 8 195 2 108 2 353 1 720 2 
328 1 0 4 260 1 686 1 473 1 529 1 155 1 156 1 448 2 451 1 232 2 302 1 430 1 666 2 452 1 386 2 766 1 112 1 731 1 730 2 794 2 535 4 795 1 410 1 512 1 61 1 456 1 137 2 240 1 211 1 41 2 825 2 163 1 617 1 488 1 365 1 771 2 14 1 339 1 515 1 620 2 516 2 144 1 440 1 494 2 776 6 599 1 705 2 246 1 187 1 294 1 547 1 223 1 394 2 839 1 840 1 104 2 224 1 225 1 842 1 426 1 782 2 254 2 713 1 784 3 603 2 297 2 786 1 656 2 684 1 553 8 195 2 758 2 813 2 108 2 327 2 353 1 759 3 579 2 720 2 760 1 
0 7 354 1 260 1 156 3 155 2 157 3 448 4 355 4 663 1 607 5 507 1 451 1 302 1 666 5 791 1 510 1 452 1 112 1 730 4 794 6 795 1 60 1 512 2 61 1 456 4 457 1 211 1 163 1 737 1 365 1 14 1 515 1 620 3 267 1 674 1 516 3 117 1 678 4 750 4 122 1 627 1 809 1 426 1 684 7 526 1 813 7 759 17 327 3 579 3 760 1 127 1 328 2 686 6 474 4 529 1 690 1 178 1 279 1 282 4 433 1 766 1 386 4 587 1 642 1 535 8 387 2 137 7 240 6 41 3 824 1 825 3 592 1 138 4 488 3 770 1 142 1 771 3 339 2 48 1 144 1 96 4 440 1 494 14 776 11 705 3 599 1 294 1 547 1 394 14 839 2 840 1 104 6 398 1 842 2 782 8 254 3 784 7 713 2 603 5 656 3 400 8 786 1 553 29 195 4 604 1 108 4 844 1 720 14 
811 1 
127 1 0 5 328 1 156 2 448 1 607 1 232 1 204 1 666 1 730 1 482 1 794 3 535 1 387 1 285 1 137 1 41 1 825 1 673 1 771 1 15 1 620 1 516 1 674 1 746 1 313 1 494 2 776 3 705 1 186 1 394 2 104 2 252 1 254 1 784 1 603 1 271 1 656 1 553 5 813 1 471 1 554 1 327 1 759 3 579 1 720 2 
328 1 445 1 0 5 127 1 620 1 674 1 516 1 156 2 448 1 607 1 494 2 776 1 705 1 232 1 666 1 394 2 104 2 730 1 794 3 667 1 535 1 387 1 254 1 784 1 603 1 137 1 271 1 656 1 553 5 41 1 825 1 813 1 471 1 554 1 759 3 327 1 579 1 720 2 771 1 
328 1 0 5 127 1 620 1 674 1 516 1 156 2 448 1 607 1 494 2 582 1 776 1 705 1 232 1 666 1 394 2 104 2 730 1 794 3 535 1 387 1 254 1 784 1 603 1 137 1 271 1 656 1 553 5 41 1 825 1 813 1 471 1 554 1 759 3 327 1 579 1 720 2 771 1 
328 1 0 2 127 1 260 1 686 1 529 1 155 1 448 1 607 1 300 1 451 1 232 1 302 1 817 2 205 1 666 1 730 1 482 1 794 1 535 3 795 1 137 1 240 1 309 1 211 1 41 1 266 2 825 1 163 1 182 1 365 1 699 1 390 1 771 1 14 1 620 1 516 1 674 1 144 1 440 1 746 1 541 1 313 1 776 3 599 1 166 2 705 1 147 1 681 1 840 1 104 1 842 1 252 1 426 1 254 1 713 1 784 2 603 1 271 1 786 1 656 1 684 1 553 3 230 1 813 1 471 1 527 1 759 1 327 1 579 1 760 1 
127 1 0 2 328 1 260 1 686 1 529 1 155 1 448 1 607 1 300 1 232 1 451 1 302 1 817 2 666 1 730 1 794 1 535 3 795 1 137 1 309 1 240 1 211 1 41 1 825 1 163 1 182 1 365 1 390 1 771 1 14 1 620 1 516 1 674 1 144 1 440 1 776 1 705 1 166 2 599 1 147 1 840 1 842 1 426 1 254 1 713 1 784 2 603 1 271 1 786 1 656 1 553 3 684 1 813 1 471 1 327 1 759 1 579 1 760 1 
0 1 127 1 529 1 448 1 607 1 300 2 232 1 302 1 204 1 205 2 666 1 730 1 482 1 794 1 535 2 795 1 137 1 309 2 114 2 41 1 266 3 825 1 163 1 182 3 699 1 390 2 771 1 14 1 620 1 516 1 674 1 218 2 745 1 440 1 746 1 541 3 292 1 313 1 776 3 705 1 186 1 840 1 104 1 252 1 320 1 254 1 784 2 603 1 271 1 349 1 656 1 553 3 813 1 471 1 327 1 579 1 
14 1 620 1 516 1 674 1 529 1 218 3 440 1 541 1 448 1 607 1 300 1 776 1 705 1 232 1 302 1 666 1 840 1 641 1 730 1 794 1 535 2 795 1 254 1 784 2 603 1 137 1 271 1 349 1 656 1 553 3 266 1 41 1 825 1 163 1 813 1 471 1 182 1 327 1 579 1 771 1 
127 1 0 1 529 1 448 1 607 1 300 1 232 1 302 1 666 1 207 1 730 1 794 1 9 1 535 2 795 1 137 1 309 1 41 1 266 1 825 1 163 1 699 1 390 1 771 1 14 1 620 1 48 1 674 1 516 1 218 2 440 1 702 1 776 1 705 1 840 1 398 1 254 1 784 2 603 1 271 1 656 1 349 1 553 3 813 1 471 1 327 1 579 1 
9 1 
14 1 620 1 516 1 674 1 529 1 218 3 440 1 541 1 448 1 607 1 300 1 776 1 705 1 232 1 302 1 666 1 840 1 641 1 104 1 730 1 794 1 535 2 795 1 254 1 784 2 603 1 137 1 271 1 349 1 656 1 553 3 266 1 41 1 825 1 163 1 813 1 471 1 327 1 579 1 771 1 
428 1 686 1 529 1 448 1 607 1 300 1 232 1 302 1 666 1 641 1 730 1 794 1 535 3 795 1 137 1 240 1 41 1 266 1 825 1 163 1 182 1 699 1 771 1 14 1 620 1 48 1 516 1 674 1 218 4 96 1 541 1 440 1 776 1 705 1 840 1 104 1 398 1 254 1 784 3 603 1 271 1 656 1 349 1 553 4 684 1 813 1 471 1 327 1 579 1 
328 1 127 1 0 3 260 1 329 1 686 1 529 1 155 1 156 1 448 2 607 2 451 1 232 2 302 1 817 2 666 2 452 1 385 1 112 1 730 2 482 1 794 2 535 4 795 1 137 2 240 1 211 1 41 2 266 2 825 2 163 1 365 1 771 2 14 1 620 2 516 2 674 2 491 1 144 1 440 1 746 1 541 3 313 1 776 4 599 1 166 2 705 2 18 1 147 1 519 1 681 1 840 1 842 1 252 1 426 1 254 2 713 1 784 3 603 2 271 2 786 1 656 2 684 1 553 6 78 1 230 1 272 2 813 2 471 1 759 1 327 2 579 2 760 1 
0 9 3 1 156 3 448 2 200 1 406 1 355 1 607 3 407 1 666 3 510 1 729 1 306 1 730 2 794 5 614 1 671 1 309 2 564 1 162 1 310 1 216 1 620 1 674 3 516 1 746 1 268 1 165 1 678 1 122 1 462 1 24 1 271 2 684 2 173 1 27 1 229 1 813 3 471 1 327 1 275 2 759 3 579 1 29 1 328 2 127 1 382 1 428 1 686 2 474 1 276 1 179 1 582 1 232 1 430 1 279 1 643 1 482 1 535 5 819 1 387 2 137 2 240 2 239 1 820 1 334 1 41 1 825 1 43 1 390 2 771 1 143 1 96 2 494 2 651 2 776 10 705 1 777 1 394 3 191 2 104 2 601 1 552 1 254 1 784 5 603 3 297 1 656 1 553 14 195 1 554 1 720 2 
0 1 428 1 686 1 529 1 200 1 448 2 607 2 300 1 179 1 232 1 302 1 279 1 430 1 666 3 510 1 641 1 643 1 730 2 482 1 794 2 535 4 795 1 819 1 614 1 137 1 240 1 309 1 820 1 334 1 266 1 41 1 825 1 163 1 43 1 182 1 390 1 771 1 14 1 143 1 216 1 620 1 516 1 674 2 218 8 96 1 440 1 541 1 746 1 776 9 268 1 165 1 705 1 777 1 122 1 840 1 191 2 552 1 254 1 784 4 603 3 271 2 297 1 349 1 656 1 684 1 553 8 173 1 27 1 229 1 813 1 471 1 275 2 327 1 29 1 579 1 
0 9 445 1 3 1 156 3 448 2 200 1 406 1 355 1 607 3 407 1 666 3 510 1 729 1 306 1 730 2 794 5 667 1 614 1 671 1 309 2 564 1 162 1 310 1 216 1 620 1 674 3 516 1 746 1 268 1 165 1 678 1 122 1 462 1 24 1 271 2 684 2 173 1 27 1 229 1 813 3 471 1 327 1 275 2 759 3 579 1 29 1 328 2 127 1 382 1 428 1 686 2 474 1 276 1 179 1 232 1 430 1 279 1 643 1 482 1 535 5 819 1 387 2 137 2 240 2 239 1 820 1 334 1 41 1 825 1 43 1 390 2 771 1 143 1 96 2 494 2 651 2 776 10 705 1 777 1 394 3 191 2 104 2 601 1 552 1 254 1 784 5 603 3 297 1 656 1 553 14 195 1 554 1 720 2 
504 1 0 7 3 1 156 2 448 2 200 1 406 1 355 1 607 3 262 1 407 1 666 3 510 1 729 1 306 1 730 2 794 3 614 1 671 1 309 2 266 1 564 1 310 1 216 1 620 1 674 3 516 1 746 1 268 1 165 1 18 1 166 1 678 1 122 1 462 1 24 1 271 2 684 2 78 1 173 1 27 1 229 1 272 1 813 3 471 1 759 1 327 1 275 2 579 1 29 1 328 2 127 1 382 1 428 1 686 2 474 1 276 1 179 1 232 1 430 1 279 1 817 1 585 1 643 1 482 1 535 5 819 1 387 1 137 2 240 2 239 1 820 1 334 1 41 1 241 1 825 1 43 1 698 1 390 2 771 1 143 1 491 1 96 2 541 2 651 2 776 10 705 1 777 1 147 1 394 1 191 2 601 1 552 1 254 1 784 5 603 3 297 1 656 1 553 12 195 1 
504 1 0 6 260 1 3 1 155 1 156 1 448 2 200 1 406 1 355 1 607 3 262 1 300 1 451 1 302 1 407 1 666 3 510 1 729 1 306 1 730 2 794 3 795 1 614 1 671 1 309 3 211 1 564 1 163 1 365 1 14 1 310 1 216 1 620 1 674 3 516 1 746 1 268 1 165 1 166 1 678 1 122 1 462 1 426 1 24 1 271 2 684 2 173 1 27 1 229 1 813 3 471 1 759 1 327 1 275 2 579 1 29 1 760 1 328 2 127 1 382 1 428 1 686 3 529 1 474 1 276 1 179 1 232 1 430 1 279 1 817 1 585 1 643 1 482 1 535 6 819 1 387 1 137 2 240 3 239 1 820 1 334 1 41 1 241 1 825 1 43 2 698 1 182 2 390 3 771 1 143 1 144 1 96 2 440 1 651 2 776 10 599 1 705 1 777 1 147 1 394 1 840 1 191 2 842 1 601 1 552 1 254 1 713 1 784 5 603 3 297 1 786 1 656 1 553 12 195 1 
0 1 428 1 686 1 529 1 200 1 448 2 607 2 300 2 179 1 232 1 302 1 279 1 430 1 205 1 666 3 510 1 641 1 643 1 730 2 482 1 794 2 535 4 795 1 819 1 614 1 137 1 240 1 309 2 820 1 334 1 266 2 41 1 825 1 163 1 43 1 182 3 699 1 390 2 771 1 14 1 143 1 216 1 620 1 516 1 674 2 218 8 96 1 440 1 541 1 746 1 776 9 268 1 165 1 705 1 777 1 122 1 840 1 191 2 104 1 552 1 254 1 784 4 603 3 271 2 297 1 349 1 656 1 684 1 553 8 173 1 27 1 229 1 813 1 471 1 275 2 327 1 29 1 579 1 
504 1 382 1 308 1 262 1 68 1 166 1 241 1 817 1 585 1 626 1 698 1 681 1 306 1 
0 3 260 1 155 1 448 2 200 1 355 1 607 1 357 2 451 1 302 1 407 1 666 3 510 1 452 1 729 1 112 1 730 2 794 3 409 1 795 1 614 1 309 1 211 1 735 1 163 1 616 1 14 1 739 1 216 1 805 1 620 1 516 1 674 1 746 1 268 1 165 1 122 1 73 2 466 1 271 1 756 2 684 3 173 1 27 1 229 1 813 5 326 1 275 2 327 1 29 1 579 1 381 1 428 1 686 1 529 1 689 1 83 1 178 1 179 1 279 1 430 1 433 1 587 1 643 1 818 2 482 1 535 4 819 1 387 1 137 2 240 3 820 1 334 1 41 1 825 1 43 1 390 1 142 1 771 1 143 1 772 1 144 1 831 1 96 2 440 1 291 1 651 1 776 9 598 1 599 1 705 1 185 2 777 1 840 1 191 2 248 1 443 1 842 1 552 1 254 1 784 5 713 2 603 3 297 1 786 1 656 1 553 9 
739 1 381 1 818 2 443 1 319 1 409 1 831 1 689 1 291 1 456 1 756 1 598 1 106 1 735 1 616 1 813 3 470 1 326 1 
739 1 381 1 818 2 443 1 805 1 319 1 409 1 831 1 689 1 291 1 456 1 756 1 598 1 106 1 735 1 616 1 813 3 326 1 
739 1 829 1 381 1 177 1 505 1 816 1 746 1 761 1 776 2 598 1 623 1 166 1 817 1 838 1 191 1 442 1 682 1 818 4 443 1 482 1 113 1 409 1 253 1 646 1 756 1 196 1 735 1 813 2 275 1 
739 1 829 1 381 1 805 1 177 1 340 1 505 1 816 1 831 1 689 1 746 1 761 1 776 2 598 1 623 1 166 1 817 1 838 1 191 1 442 1 682 1 818 4 443 1 482 1 113 1 319 1 409 1 646 1 456 1 756 1 811 1 106 1 196 1 735 1 616 1 813 3 326 1 275 1 
739 1 829 1 381 1 805 1 177 1 340 1 505 1 831 1 689 1 746 1 761 1 776 2 598 1 623 1 166 1 119 1 280 1 817 1 121 1 191 1 442 1 818 4 443 1 482 1 319 1 409 1 646 1 456 1 499 1 756 1 811 1 106 1 196 1 735 1 616 1 813 3 326 1 275 1 
829 1 739 1 381 1 805 1 177 1 340 1 505 1 831 1 689 1 746 1 761 1 776 2 598 1 623 1 166 1 817 1 838 1 189 1 191 1 442 1 682 1 818 4 443 1 482 1 113 1 319 1 409 1 646 1 332 1 456 1 756 1 811 1 106 1 196 1 735 1 616 1 813 3 326 1 275 1 
829 1 739 1 381 1 805 1 177 1 340 1 505 1 831 1 689 1 746 1 761 1 129 1 776 2 598 1 623 1 166 1 119 1 280 1 817 1 121 1 191 1 442 1 432 1 818 4 443 1 482 1 319 1 409 1 646 1 456 1 756 1 811 1 106 1 196 1 735 1 616 1 813 3 326 1 275 1 
460 1 646 2 456 2 811 2 
320 2 745 1 292 1 134 1 40 1 
15 1 533 1 285 1 673 1 
445 1 667 1 701 1 
582 1 393 1 
504 1 311 1 262 1 166 1 501 1 817 1 147 1 560 1 
504 1 166 1 501 1 817 1 147 1 311 1 262 1 
504 1 166 1 501 1 817 1 147 1 311 1 262 1 
504 1 166 1 501 1 817 1 147 1 311 1 262 1 
504 1 166 1 501 1 817 1 147 1 311 1 262 1 
50 1 273 1 363 1 190 1 
454 1 657 1 380 1 404 1 
9 1 388 1 77 1 207 1 
504 1 166 1 817 1 519 1 418 1 262 1 
504 1 166 1 817 1 527 1 418 1 262 1 
504 1 166 1 161 1 817 1 418 1 262 1 
320 1 581 1 292 1 822 1 487 1 724 1 134 2 
30 1 504 1 329 2 418 1 262 1 822 1 166 1 817 1 148 1 385 2 724 1 
623 1 504 1 166 1 817 1 418 1 262 1 
589 1 306 1 
375 2 152 1 822 1 459 1 304 2 306 1 249 2 724 1 
361 1 306 1 
183 1 306 1 
382 1 306 1 
456 1 
456 1 
583 1 
583 1 
467 1 583 1 
263 1 41 1 551 1 413 1 837 1 251 1 
133 1 
41 1 795 1 251 1 
41 1 795 1 
263 1 41 1 293 1 551 1 413 1 837 1 795 1 299 1 251 1 
41 1 293 1 299 1 251 1 
41 1 293 1 299 1 251 1 
263 1 41 1 551 1 
263 1 41 1 551 1 
41 1 299 1 234 1 251 1 
41 1 299 1 234 1 251 1 
304 1 
459 1 
698 1 
308 1 626 1 
626 1 

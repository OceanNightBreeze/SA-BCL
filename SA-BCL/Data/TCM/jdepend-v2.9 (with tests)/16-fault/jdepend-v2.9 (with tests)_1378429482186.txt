#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
jdepend.framework.ClassFileParserTest:testExampleClassFileFromTimDrury()V ERROR java.io.IOException 0 53 (28,40) 
jdepend.framework.ClassFileParserTest:testAbstractClass()V ERROR java.io.IOException 0 53 (28,40) (28,40) 
jdepend.framework.ClassFileParserTest:testConcreteClass()V ERROR java.io.IOException 0 53 (28,40) (28,40) 
jdepend.framework.ClassFileParserTest:testInterfaceClass()V ERROR java.io.IOException 26 64 80 (28,40) (28,40) 
jdepend.framework.ClassFileParserTest:testInvalidClassFile()V PASSED
jdepend.framework.ClassFileParserTest:testInnerClass()V ERROR java.io.IOException 0 53 (28,40) (28,40) 
jdepend.framework.ClassFileParserTest:testPackageClass()V ERROR java.io.IOException 0 53 (28,40) (28,40) 
jdepend.framework.ClassFileParserTest:testExampleClassFile2()V ERROR java.io.IOException 0 53 (28,40) 
jdepend.framework.JarFileParserTest:testJarFileWithoutInnerClasses()V ERROR java.lang.NullPointerException 36 
jdepend.framework.JarFileParserTest:testZipFileWithoutInnerClasses()V ERROR java.lang.NullPointerException 36 
jdepend.framework.JarFileParserTest:testJarFile()V ERROR java.lang.NullPointerException 36 
jdepend.framework.JarFileParserTest:testZipFile()V ERROR java.lang.NullPointerException 36 
jdepend.framework.JarFileParserTest:testInvalidJarFile()V ERROR java.lang.NullPointerException 36 
jdepend.framework.JarFileParserTest:testInvalidZipFile()V ERROR java.lang.NullPointerException 36 
jdepend.framework.JarFileParserTest:testCountClasses()V ERROR java.lang.NullPointerException 36 
jdepend.framework.CycleTest:testNoCycles()V PASSED
jdepend.framework.CycleTest:test2Node1BranchCycle()V PASSED
jdepend.framework.CycleTest:test3Node1BranchCycle()V PASSED
jdepend.framework.CycleTest:test3Node1BranchSubCycle()V PASSED
jdepend.framework.CycleTest:test3Node2BranchCycle()V PASSED
jdepend.framework.CycleTest:test5Node2BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:testNoCycles()V PASSED
jdepend.framework.CollectAllCyclesTest:test2Node1BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node1BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node1BranchSubCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node2BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test5Node2BranchCycle()V PASSED
jdepend.framework.FileManagerTest:testInvalidClassFile()V PASSED
jdepend.framework.FileManagerTest:testJar()V PASSED
jdepend.framework.FileManagerTest:testZip()V PASSED
jdepend.framework.FileManagerTest:testWar()V PASSED
jdepend.framework.FileManagerTest:testEmptyFileManager()V PASSED
jdepend.framework.FileManagerTest:testBuildDirectory()V FAILED junit.framework.AssertionFailedError 
jdepend.framework.FileManagerTest:testNonExistentDirectory()V PASSED
jdepend.framework.FileManagerTest:testInvalidDirectory()V PASSED
jdepend.framework.FileManagerTest:testClassFile()V PASSED
jdepend.framework.FileManagerTest:testNonExistentClassFile()V PASSED
jdepend.framework.FilterTest:testFile()V PASSED
jdepend.framework.FilterTest:testDefault()V PASSED
jdepend.framework.FilterTest:testCollection()V PASSED
jdepend.framework.FilterTest:testCollectionSubset()V PASSED
jdepend.framework.PropertyConfiguratorTest:testDefaultFilters()V PASSED
jdepend.framework.PropertyConfiguratorTest:testFiltersFromFile()V PASSED
jdepend.framework.PropertyConfiguratorTest:testDefaultPackages()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jdepend.framework.ClassFileParser:parseNextConstant()Ljdepend.framework.ClassFileParser.Constant; | STATEMENT | 8635 | stmt -> ;
jdepend.framework.JavaPackage:addEfferent(Ljdepend.framework.JavaPackage;)V
jdepend.framework.PropertyConfigurator:getDefaultPropertyFile()Ljava.io.File;
jdepend.framework.JavaPackage:collectAllCycles(Ljava.util.List;)Z
jdepend.framework.ClassFileParser.Constant:Constant(Ljdepend.framework.ClassFileParser;BLjava.lang.Object;)V
jdepend.framework.JavaClass:JavaClass(Ljava.lang.String;)V
jdepend.framework.FilterTest:assertFiltersExist(Ljdepend.framework.PackageFilter;)V
jdepend.framework.JavaPackage:dependsUpon(Ljdepend.framework.JavaPackage;)V
jdepend.framework.ClassFileParser:parseMagic()I
jdepend.framework.ClassFileParser:ClassFileParser()V
jdepend.framework.JavaClass:isAbstract(Z)V
jdepend.framework.PropertyConfigurator:PropertyConfigurator()V
jdepend.framework.JDependTestCase:getPackageSubDir()Ljava.lang.String;
jdepend.framework.JDepend:addPackages(Ljava.util.Collection;)V
jdepend.framework.AbstractParser:setFilter(Ljdepend.framework.PackageFilter;)V
jdepend.framework.FileManager:addDirectory(Ljava.lang.String;)V
jdepend.framework.JDependTestCase:getTestDataDir()Ljava.lang.String;
jdepend.framework.ClassFileParser:parseMinorVersion()I
jdepend.framework.ClassFileParser:ClassFileParser(Ljdepend.framework.PackageFilter;)V
jdepend.framework.JDepend:analyzeInnerClasses(Z)V
jdepend.framework.JavaPackage:containsCycle()Z
jdepend.framework.AbstractParser:debug(Ljava.lang.String;)V
jdepend.framework.FileManager:FileManager()V
jdepend.framework.PropertyConfiguratorTest:assertFiltersExist(Ljava.util.Collection;)V
jdepend.framework.PropertyConfigurator:PropertyConfigurator(Ljava.io.File;)V
jdepend.framework.FileManager:isWar(Ljava.io.File;)Z
jdepend.framework.ClassFileParser:getConstantPoolEntry(I)Ljdepend.framework.ClassFileParser.Constant;
jdepend.framework.FileManager:acceptInnerClasses(Z)V
jdepend.framework.ClassFileParser:parse(Ljava.io.File;)Ljdepend.framework.JavaClass;
jdepend.framework.PropertyConfigurator:getAnalyzeInnerClasses()Z
jdepend.framework.JDependTestCase:getTestDir()Ljava.lang.String;
jdepend.framework.ClassFileParser:parseMajorVersion()I
jdepend.framework.JavaClassBuilder:JavaClassBuilder(Ljdepend.framework.FileManager;)V
jdepend.framework.JavaPackage:JavaPackage(Ljava.lang.String;)V
jdepend.framework.JDepend:getPackage(Ljava.lang.String;)Ljdepend.framework.JavaPackage;
jdepend.framework.ClassFileParser:parseAccessFlags()V
jdepend.framework.PropertyConfigurator:loadProperties(Ljava.io.File;)Ljava.util.Properties; | CONDITION | 3823 | if (x) -> if (!x)
jdepend.framework.FileManager:collectFiles(Ljava.io.File;Ljava.util.Collection;)V
jdepend.framework.ClassFileParser.Constant:Constant(Ljdepend.framework.ClassFileParser;BI)V
jdepend.framework.ClassFileParser.Constant:getTag()B
jdepend.framework.ClassFileParser:parse(Ljava.io.InputStream;)Ljdepend.framework.JavaClass;
jdepend.framework.JDependTestCase:getHomeDir()Ljava.lang.String;
jdepend.framework.JavaPackage:equals(Ljava.lang.Object;)Z
jdepend.framework.JavaClassBuilder:JavaClassBuilder(Ljdepend.framework.AbstractParser;Ljdepend.framework.FileManager;)V
jdepend.framework.JavaPackage:getEfferents()Ljava.util.Collection;
jdepend.framework.JDepend:setFilter(Ljdepend.framework.PackageFilter;)V
jdepend.framework.JavaClassBuilder:JavaClassBuilder()V
jdepend.framework.JavaPackage:JavaPackage(Ljava.lang.String;I)V
jdepend.framework.PackageFilter:PackageFilter(Ljava.io.File;)V
jdepend.framework.FileManager:acceptJarFile(Ljava.io.File;)Z
jdepend.framework.JDepend:JDepend()V
jdepend.framework.PackageFilter:addPackages(Ljava.util.Collection;)V
jdepend.framework.PropertyConfigurator:getFilteredPackages()Ljava.util.Collection;
jdepend.framework.ClassFileParser:parseConstantPool()[Ljdepend.framework.ClassFileParser.Constant; | OPERATOR | 4526 | == -> <=
jdepend.framework.JavaPackage:getVolatility()I
jdepend.framework.ClassFileParser.Constant:Constant(Ljdepend.framework.ClassFileParser;BII)V
jdepend.framework.PropertyConfigurator:getConfiguredPackages()Ljava.util.Collection;
jdepend.framework.PackageFilter:getFilters()Ljava.util.Collection;
jdepend.framework.ClassFileParser:reset()V
jdepend.framework.PackageFilter:PackageFilter()V
jdepend.framework.FileManager:isJar(Ljava.io.File;)Z
jdepend.framework.JavaPackage:setVolatility(I)V
jdepend.framework.FileManager:addFile(Ljava.io.File;Ljava.util.Collection;)V
jdepend.framework.JDependTestCase:getBuildDir()Ljava.lang.String;
jdepend.framework.ClassFileParser:getClassConstantName(I)Ljava.lang.String;
jdepend.framework.PackageFilter:addPackage(Ljava.lang.String;)V
jdepend.framework.CycleTest:assertListEquals(Ljava.util.List;[Ljava.lang.String;)V
jdepend.framework.JDepend:JDepend(Ljdepend.framework.PackageFilter;)V
jdepend.framework.PropertyConfigurator:PropertyConfigurator(Ljava.util.Properties;)V
jdepend.framework.JavaPackage:collectCycle(Ljava.util.List;)Z
jdepend.framework.PackageFilter:PackageFilter(Ljava.util.Collection;)V
jdepend.framework.FileManager:acceptClassFile(Ljava.io.File;)Z
jdepend.framework.JDepend:addPackage(Ljdepend.framework.JavaPackage;)V
jdepend.framework.PackageFilter:accept(Ljava.lang.String;)Z
jdepend.framework.FileManager:acceptClassFileName(Ljava.lang.String;)Z | CONDITION | 1575 | if (x) -> if (!x)
jdepend.framework.JavaPackage:getName()Ljava.lang.String;
jdepend.framework.FileManager:isZip(Ljava.io.File;)Z
jdepend.framework.FileManager:extractFiles()Ljava.util.Collection;
jdepend.framework.JavaPackage:addAfferent(Ljdepend.framework.JavaPackage;)V
jdepend.framework.AbstractParser:AbstractParser(Ljdepend.framework.PackageFilter;)V
jdepend.framework.ClassFileParser:parseClassName()Ljava.lang.String;
jdepend.framework.CollectAllCyclesTest:assertListEquals(Ljava.util.List;[Ljava.lang.String;)V
jdepend.framework.FileManager:existsWithExtension(Ljava.io.File;Ljava.lang.String;)Z
jdepend.framework.FileManager:acceptFile(Ljava.io.File;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 1 8 1 40 1 4 1 0 1 5 1 53 1 17 1 55 2 31 1 58 1 
21 1 8 1 0 1 63 1 39 1 12 1 40 1 4 1 5 1 28 1 53 1 17 1 55 2 31 1 58 1 
21 1 8 1 0 1 63 1 39 1 12 1 40 1 4 1 5 1 28 1 53 1 17 1 55 2 31 1 58 1 
21 2 35 1 8 1 0 1 10 1 63 1 38 1 64 1 80 1 39 1 12 1 40 1 4 1 5 1 26 1 28 1 53 1 17 1 55 2 31 1 58 1 
21 1 12 1 8 1 40 1 5 1 28 1 30 1 58 1 
21 1 8 1 0 1 63 1 39 1 12 1 40 1 4 1 5 1 28 1 53 1 17 1 55 2 31 1 58 1 
21 1 8 1 0 1 63 1 39 1 12 1 40 1 4 1 5 1 28 1 53 1 17 1 55 2 31 1 58 1 
38 1 39 1 8 1 40 1 4 1 0 1 5 1 53 1 17 1 55 3 31 1 58 1 
70 1 59 1 22 1 2 1 51 1 24 1 9 1 27 1 11 1 36 1 32 1 
70 1 59 1 22 1 2 1 51 1 24 1 9 1 27 1 11 1 36 1 32 1 
70 1 59 1 2 1 51 1 24 1 46 1 9 1 11 1 36 1 
70 1 59 1 2 1 51 1 24 1 46 1 9 1 11 1 36 1 
70 1 59 1 2 1 51 1 24 1 46 1 9 1 11 1 36 1 
70 1 59 1 2 1 51 1 24 1 46 1 9 1 11 1 36 1 
70 1 59 1 50 1 2 1 51 1 24 1 11 1 36 1 
75 6 7 1 44 4 47 1 61 1 1 1 69 4 78 1 66 1 33 1 20 1 42 4 
75 7 7 1 44 4 47 1 61 1 1 1 69 6 78 1 66 1 33 1 20 1 42 4 
75 9 7 1 44 6 47 1 61 1 1 1 69 8 78 1 66 1 33 1 20 1 42 6 
75 10 7 1 44 6 47 1 61 1 1 1 69 8 78 1 66 1 33 1 42 7 20 1 
75 11 7 1 44 6 47 1 61 1 1 1 69 8 78 1 66 1 33 1 42 8 20 1 
75 15 7 1 44 10 47 1 61 1 1 1 69 12 78 1 66 1 33 1 42 12 20 1 
75 6 7 1 44 4 47 1 61 1 1 1 69 2 78 1 3 2 81 1 33 1 20 1 42 4 
75 7 7 1 44 4 47 1 61 1 1 1 69 3 78 1 3 3 81 1 33 1 20 1 42 4 
75 9 7 1 44 6 47 1 61 1 1 1 69 4 78 1 3 4 81 1 33 1 20 1 42 6 
75 10 7 1 44 6 47 1 61 1 1 1 69 4 78 1 3 4 81 1 33 1 42 7 20 1 
75 11 7 1 44 6 47 1 61 1 1 1 69 4 78 1 3 4 81 1 33 1 42 8 20 1 
75 15 7 1 44 10 47 1 61 1 1 1 69 6 78 1 3 6 81 1 33 1 42 12 20 1 
22 1 71 1 41 1 74 1 
60 1 49 1 15 1 16 1 82 1 
60 1 49 1 76 1 15 1 16 1 82 2 
60 1 49 1 76 1 25 1 15 1 16 1 82 3 
77 1 
60 6 76 6 77 1 62 2 37 7 63 1 49 6 71 6 25 6 15 1 74 5 83 6 82 18 
60 1 49 1 63 1 76 1 25 1 15 1 82 3 
60 1 49 1 76 1 12 1 25 1 15 1 30 1 82 3 
22 1 63 1 71 1 12 1 74 1 
22 1 63 1 71 1 
68 1 48 1 36 1 70 1 51 2 24 1 52 1 65 1 6 1 16 1 73 1 57 3 
59 1 68 1 11 1 36 1 70 1 51 2 2 1 24 1 52 1 65 1 6 1 73 1 57 3 
70 1 51 1 65 1 6 1 73 1 57 3 
70 1 51 1 65 1 57 2 
68 1 11 1 36 1 2 1 23 1 24 1 52 1 29 1 
68 1 36 1 23 1 24 1 52 1 16 1 29 1 
43 1 22 1 45 1 68 2 47 1 70 1 50 1 2 2 51 2 24 2 72 1 27 1 52 1 29 1 54 1 56 1 57 1 58 1 34 1 59 1 75 2 61 1 11 2 36 2 79 1 13 1 14 1 65 1 67 1 19 1 42 1 18 1 

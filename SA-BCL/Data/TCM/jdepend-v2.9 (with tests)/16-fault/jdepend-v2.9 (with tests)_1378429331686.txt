#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
jdepend.framework.JarFileParserTest:testJarFile()V ERROR java.lang.NegativeArraySizeException 50 
jdepend.framework.JarFileParserTest:testZipFile()V ERROR java.lang.NegativeArraySizeException 50 
jdepend.framework.JarFileParserTest:testInvalidJarFile()V ERROR java.lang.NegativeArraySizeException 50 
jdepend.framework.JarFileParserTest:testInvalidZipFile()V ERROR java.lang.NegativeArraySizeException 50 
jdepend.framework.JarFileParserTest:testCountClasses()V ERROR java.lang.NegativeArraySizeException 50 
jdepend.framework.JarFileParserTest:testJarFileWithoutInnerClasses()V ERROR java.lang.NegativeArraySizeException 50 
jdepend.framework.JarFileParserTest:testZipFileWithoutInnerClasses()V ERROR java.lang.NegativeArraySizeException 50 
jdepend.framework.CycleTest:testNoCycles()V PASSED
jdepend.framework.CycleTest:test2Node1BranchCycle()V PASSED
jdepend.framework.CycleTest:test3Node1BranchCycle()V PASSED
jdepend.framework.CycleTest:test3Node1BranchSubCycle()V PASSED
jdepend.framework.CycleTest:test3Node2BranchCycle()V PASSED
jdepend.framework.CycleTest:test5Node2BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:testNoCycles()V PASSED
jdepend.framework.CollectAllCyclesTest:test2Node1BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node1BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node1BranchSubCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node2BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test5Node2BranchCycle()V PASSED
jdepend.framework.FileManagerTest:testInvalidClassFile()V FAILED junit.framework.AssertionFailedError 
jdepend.framework.FileManagerTest:testJar()V ERROR java.lang.NullPointerException 
jdepend.framework.FileManagerTest:testZip()V ERROR java.lang.NullPointerException 
jdepend.framework.FileManagerTest:testWar()V ERROR java.lang.NullPointerException 
jdepend.framework.FileManagerTest:testEmptyFileManager()V PASSED
jdepend.framework.FileManagerTest:testBuildDirectory()V FAILED junit.framework.AssertionFailedError 
jdepend.framework.FileManagerTest:testNonExistentDirectory()V PASSED
jdepend.framework.FileManagerTest:testInvalidDirectory()V PASSED
jdepend.framework.FileManagerTest:testClassFile()V FAILED junit.framework.AssertionFailedError 
jdepend.framework.FileManagerTest:testNonExistentClassFile()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jdepend.framework.JavaClassBuilder:JavaClassBuilder()V
jdepend.framework.JavaPackage:addEfferent(Ljdepend.framework.JavaPackage;)V
jdepend.framework.FileManager:isWar(Ljava.io.File;)Z
jdepend.framework.FileManager:acceptClassFile(Ljava.io.File;)Z
jdepend.framework.PropertyConfigurator:loadProperties(Ljava.io.File;)Ljava.util.Properties;
jdepend.framework.FileManager:isZip(Ljava.io.File;)Z
jdepend.framework.CollectAllCyclesTest:assertListEquals(Ljava.util.List;[Ljava.lang.String;)V
jdepend.framework.FileManager:acceptFile(Ljava.io.File;)Z
jdepend.framework.JDepend:setFilter(Ljdepend.framework.PackageFilter;)V
jdepend.framework.JavaPackage:equals(Ljava.lang.Object;)Z
jdepend.framework.PropertyConfigurator:getFilteredPackages()Ljava.util.Collection;
jdepend.framework.FileManager:acceptJarFile(Ljava.io.File;)Z
jdepend.framework.FileManager:extractFiles()Ljava.util.Collection;
jdepend.framework.JDepend:JDepend()V
jdepend.framework.FileManager:addDirectory(Ljava.lang.String;)V
jdepend.framework.JavaPackage:dependsUpon(Ljdepend.framework.JavaPackage;)V
jdepend.framework.FileManager:addFile(Ljava.io.File;Ljava.util.Collection;)V
jdepend.framework.JDependTestCase:getTestDir()Ljava.lang.String;
jdepend.framework.JavaPackage:JavaPackage(Ljava.lang.String;I)V
jdepend.framework.PackageFilter:addPackages(Ljava.util.Collection;)V
jdepend.framework.JavaPackage:collectCycle(Ljava.util.List;)Z
jdepend.framework.JDependTestCase:getBuildDir()Ljava.lang.String;
jdepend.framework.JavaPackage:containsCycle()Z
jdepend.framework.ClassFileParser:ClassFileParser(Ljdepend.framework.PackageFilter;)V
jdepend.framework.PropertyConfigurator:PropertyConfigurator(Ljava.util.Properties;)V
jdepend.framework.JDependTestCase:getHomeDir()Ljava.lang.String;
jdepend.framework.FileManager:isJar(Ljava.io.File;)Z
jdepend.framework.JDependTestCase:getPackageSubDir()Ljava.lang.String;
jdepend.framework.AbstractParser:setFilter(Ljdepend.framework.PackageFilter;)V
jdepend.framework.JavaPackage:getName()Ljava.lang.String;
jdepend.framework.PropertyConfigurator:PropertyConfigurator()V
jdepend.framework.JavaPackage:JavaPackage(Ljava.lang.String;)V
jdepend.framework.FileManager:acceptInnerClasses(Z)V
jdepend.framework.AbstractParser:AbstractParser(Ljdepend.framework.PackageFilter;)V
jdepend.framework.PropertyConfigurator:PropertyConfigurator(Ljava.io.File;)V
jdepend.framework.PackageFilter:PackageFilter(Ljava.util.Collection;)V
jdepend.framework.JavaClassBuilder:JavaClassBuilder(Ljdepend.framework.FileManager;)V
jdepend.framework.CycleTest:assertListEquals(Ljava.util.List;[Ljava.lang.String;)V
jdepend.framework.FileManager:existsWithExtension(Ljava.io.File;Ljava.lang.String;)Z
jdepend.framework.FileManager:collectFiles(Ljava.io.File;Ljava.util.Collection;)V
jdepend.framework.FileManager:acceptClassFileName(Ljava.lang.String;)Z | CONDITION | 1686 | if (x) -> if (!x)
jdepend.framework.PropertyConfigurator:getDefaultPropertyFile()Ljava.io.File;
jdepend.framework.JavaPackage:collectAllCycles(Ljava.util.List;)Z
jdepend.framework.JavaPackage:setVolatility(I)V
jdepend.framework.JavaPackage:addAfferent(Ljdepend.framework.JavaPackage;)V
jdepend.framework.ClassFileParser:ClassFileParser()V
jdepend.framework.FileManager:FileManager()V
jdepend.framework.JavaPackage:getEfferents()Ljava.util.Collection;
jdepend.framework.PackageFilter:PackageFilter()V
jdepend.framework.JDependTestCase:getTestDataDir()Ljava.lang.String; | RETURN | 1317 | return null
jdepend.framework.ClassFileParser:reset()V | CONSTANT | 1892 | 0 -> -1
jdepend.framework.JDepend:JDepend(Ljdepend.framework.PackageFilter;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 30 1 19 2 45 1 33 1 4 1 34 1 23 1 24 1 48 1 35 1 28 1 10 1 41 1 50 1 
0 1 30 1 19 2 45 1 33 1 4 1 34 1 23 1 24 1 48 1 35 1 28 1 10 1 41 1 50 1 
0 1 30 1 19 2 45 1 33 1 4 1 34 1 23 1 24 1 48 1 35 1 28 1 10 1 41 1 50 1 
0 1 30 1 19 2 45 1 33 1 4 1 34 1 23 1 24 1 48 1 35 1 28 1 10 1 41 1 50 1 
30 1 19 2 46 1 33 1 4 1 23 1 34 1 24 1 48 1 8 1 35 1 28 1 10 1 13 1 41 1 50 1 51 1 
30 1 19 2 32 1 46 1 45 1 33 1 4 1 23 1 34 1 24 1 48 1 35 1 36 1 28 1 10 1 41 1 50 1 
30 1 19 2 32 1 46 1 45 1 33 1 4 1 23 1 34 1 24 1 48 1 35 1 36 1 28 1 10 1 41 1 50 1 
1 1 44 1 31 1 18 1 20 4 22 1 47 4 9 4 37 1 29 6 43 1 15 1 
1 1 44 1 31 1 18 1 20 6 22 1 47 4 9 4 37 1 29 7 43 1 15 1 
1 1 44 1 31 1 18 1 20 8 22 1 47 6 9 6 37 1 29 9 43 1 15 1 
1 1 44 1 31 1 18 1 20 8 22 1 47 6 9 7 37 1 29 10 43 1 15 1 
1 1 44 1 31 1 18 1 20 8 22 1 47 6 9 8 37 1 29 11 43 1 15 1 
1 1 44 1 31 1 18 1 20 12 22 1 47 10 9 12 37 1 29 15 43 1 15 1 
1 1 44 1 31 1 18 1 20 2 22 1 47 4 6 1 9 4 29 6 42 2 43 1 15 1 
1 1 44 1 31 1 18 1 20 3 22 1 47 4 6 1 9 4 29 7 42 3 43 1 15 1 
1 1 44 1 31 1 18 1 20 4 22 1 47 6 6 1 9 6 29 9 42 4 43 1 15 1 
1 1 44 1 31 1 18 1 20 4 22 1 47 6 6 1 9 7 29 10 42 4 43 1 15 1 
1 1 44 1 31 1 18 1 20 4 22 1 47 6 6 1 9 8 29 11 42 4 43 1 15 1 
1 1 44 1 31 1 18 1 20 6 22 1 47 10 6 1 9 12 29 15 42 6 43 1 15 1 
3 1 46 1 40 1 25 1 
49 1 
49 1 
49 1 
12 1 
2 6 3 6 21 1 5 6 7 6 26 6 38 18 39 7 11 6 12 1 40 5 14 1 16 5 
2 1 38 3 11 1 21 1 5 1 26 1 14 1 
17 1 27 1 2 1 38 3 11 1 5 1 26 1 14 1 
3 1 46 1 21 1 27 1 40 1 
3 1 46 1 21 1 

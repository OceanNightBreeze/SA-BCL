#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
jdepend.framework.ClassFileParserTest:testExampleClassFileFromTimDrury()V PASSED
jdepend.framework.ClassFileParserTest:testAbstractClass()V PASSED
jdepend.framework.ClassFileParserTest:testConcreteClass()V PASSED
jdepend.framework.ClassFileParserTest:testInterfaceClass()V PASSED
jdepend.framework.ClassFileParserTest:testInvalidClassFile()V PASSED
jdepend.framework.ClassFileParserTest:testInnerClass()V PASSED
jdepend.framework.ClassFileParserTest:testPackageClass()V PASSED
jdepend.framework.ClassFileParserTest:testExampleClassFile2()V PASSED
jdepend.framework.JarFileParserTest:testJarFileWithoutInnerClasses()V ERROR java.lang.NullPointerException 62 
jdepend.framework.JarFileParserTest:testZipFileWithoutInnerClasses()V ERROR java.lang.NullPointerException 62 
jdepend.framework.JarFileParserTest:testInvalidJarFile()V ERROR java.lang.NullPointerException 62 
jdepend.framework.JarFileParserTest:testInvalidZipFile()V ERROR java.lang.NullPointerException 62 
jdepend.framework.JarFileParserTest:testCountClasses()V ERROR java.lang.NullPointerException 62 
jdepend.framework.JarFileParserTest:testJarFile()V ERROR java.lang.NullPointerException 62 
jdepend.framework.JarFileParserTest:testZipFile()V ERROR java.lang.NullPointerException 62 
jdepend.framework.CycleTest:test2Node1BranchCycle()V PASSED
jdepend.framework.CycleTest:test3Node1BranchCycle()V PASSED
jdepend.framework.CycleTest:test3Node1BranchSubCycle()V PASSED
jdepend.framework.CycleTest:test3Node2BranchCycle()V PASSED
jdepend.framework.CycleTest:test5Node2BranchCycle()V PASSED
jdepend.framework.CycleTest:testNoCycles()V PASSED
jdepend.framework.CollectAllCyclesTest:test2Node1BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node1BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node1BranchSubCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test3Node2BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:test5Node2BranchCycle()V PASSED
jdepend.framework.CollectAllCyclesTest:testNoCycles()V PASSED
jdepend.framework.FileManagerTest:testInvalidClassFile()V PASSED
jdepend.framework.FileManagerTest:testEmptyFileManager()V PASSED
jdepend.framework.FileManagerTest:testBuildDirectory()V PASSED
jdepend.framework.FileManagerTest:testNonExistentDirectory()V PASSED
jdepend.framework.FileManagerTest:testInvalidDirectory()V PASSED
jdepend.framework.FileManagerTest:testClassFile()V PASSED
jdepend.framework.FileManagerTest:testNonExistentClassFile()V PASSED
jdepend.framework.FileManagerTest:testJar()V PASSED
jdepend.framework.FileManagerTest:testZip()V PASSED
jdepend.framework.FileManagerTest:testWar()V PASSED
jdepend.framework.FilterTest:testCollection()V ERROR java.lang.StringIndexOutOfBoundsException 112 71 
jdepend.framework.FilterTest:testCollectionSubset()V PASSED
jdepend.framework.FilterTest:testFile()V FAILED junit.framework.AssertionFailedError 
jdepend.framework.FilterTest:testDefault()V FAILED junit.framework.AssertionFailedError 
jdepend.framework.PropertyConfiguratorTest:testDefaultFilters()V FAILED junit.framework.AssertionFailedError 76 
jdepend.framework.PropertyConfiguratorTest:testFiltersFromFile()V FAILED junit.framework.AssertionFailedError 76 
jdepend.framework.PropertyConfiguratorTest:testDefaultPackages()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jdepend.framework.ClassFileParser.Constant:Constant(Ljdepend.framework.ClassFileParser;BII)V
jdepend.framework.PackageFilter:PackageFilter(Ljava.util.Collection;)V
jdepend.framework.AbstractParser:onParsedJavaClass(Ljdepend.framework.JavaClass;)V
jdepend.framework.JavaPackage:getName()Ljava.lang.String;
jdepend.framework.CycleTest:assertListEquals(Ljava.util.List;[Ljava.lang.String;)V
jdepend.framework.FileManager:acceptFile(Ljava.io.File;)Z
jdepend.framework.PropertyConfigurator:getFilteredPackages()Ljava.util.Collection; | CONDITION | 2003 | while (x) -> while (!x)
jdepend.framework.ClassFileParser.Constant:getTag()B
jdepend.framework.ClassFileParser.Constant:getValue()Ljava.lang.Object;
jdepend.framework.ClassFileParser:getClassConstantName(I)Ljava.lang.String;
jdepend.framework.ClassFileParser:ClassFileParser()V
jdepend.framework.ClassFileParser:getConstantPoolEntry(I)Ljdepend.framework.ClassFileParser.Constant;
jdepend.framework.PropertyConfigurator:getDefaultPropertyFile()Ljava.io.File;
jdepend.framework.JDependTestCase:getBuildDir()Ljava.lang.String;
jdepend.framework.JavaPackage:collectAllCycles(Ljava.util.List;)Z
jdepend.framework.FileManager:isWar(Ljava.io.File;)Z
jdepend.framework.JavaPackage:JavaPackage(Ljava.lang.String;)V
jdepend.framework.JavaPackage:getEfferents()Ljava.util.Collection;
jdepend.framework.JavaPackage:addEfferent(Ljdepend.framework.JavaPackage;)V
jdepend.framework.ClassFileParser.AttributeInfo:setName(Ljava.lang.String;)V
jdepend.framework.FileManager:extractFiles()Ljava.util.Collection;
jdepend.framework.ClassFileParser.FieldOrMethodInfo:FieldOrMethodInfo(Ljdepend.framework.ClassFileParser;III)V
jdepend.framework.JDepend:JDepend(Ljdepend.framework.PackageFilter;)V
jdepend.framework.JavaClass:getName()Ljava.lang.String;
jdepend.framework.ClassFileParser:parseMinorVersion()I
jdepend.framework.AbstractParser:getFilter()Ljdepend.framework.PackageFilter;
jdepend.framework.ClassFileParser:parseInterfaces()[Ljava.lang.String;
jdepend.framework.JDependTestCase:getTestDir()Ljava.lang.String;
jdepend.framework.FileManager:addFile(Ljava.io.File;Ljava.util.Collection;)V
jdepend.framework.JavaClass:getSourceFile()Ljava.lang.String;
jdepend.framework.JDepend:getPackage(Ljava.lang.String;)Ljdepend.framework.JavaPackage;
jdepend.framework.JDependTestCase:getPackageSubDir()Ljava.lang.String;
jdepend.framework.PackageFilter:PackageFilter()V
jdepend.framework.ClassFileParser:reset()V
jdepend.framework.JavaPackage:addAfferent(Ljdepend.framework.JavaPackage;)V
jdepend.framework.JavaClass:addImportedPackage(Ljdepend.framework.JavaPackage;)V
jdepend.framework.JavaPackage:JavaPackage(Ljava.lang.String;I)V
jdepend.framework.ClassFileParser.FieldOrMethodInfo:getDescriptorIndex()I
jdepend.framework.FileManager:acceptClassFileName(Ljava.lang.String;)Z
jdepend.framework.PackageFilter:accept(Ljava.lang.String;)Z
jdepend.framework.PropertyConfigurator:getAnalyzeInnerClasses()Z
jdepend.framework.JavaPackage:equals(Ljava.lang.Object;)Z
jdepend.framework.FileManager:acceptClassFile(Ljava.io.File;)Z
jdepend.framework.ClassFileParser:parseFieldOrMethodInfo()Ljdepend.framework.ClassFileParser.FieldOrMethodInfo;
jdepend.framework.JavaPackage:collectCycle(Ljava.util.List;)Z
jdepend.framework.JavaPackage:containsCycle()Z
jdepend.framework.JavaClass:JavaClass(Ljava.lang.String;)V
jdepend.framework.ClassFileParser.Constant:Constant(Ljdepend.framework.ClassFileParser;BLjava.lang.Object;)V
jdepend.framework.JDependTestCase:getHomeDir()Ljava.lang.String;
jdepend.framework.JavaPackage:setVolatility(I)V
jdepend.framework.ClassFileParser:parseMethods()[Ljdepend.framework.ClassFileParser.FieldOrMethodInfo;
jdepend.framework.PackageFilter:getFilters()Ljava.util.Collection;
jdepend.framework.ClassFileParser.Constant:getNameIndex()I
jdepend.framework.JavaClassBuilder:JavaClassBuilder(Ljdepend.framework.AbstractParser;Ljdepend.framework.FileManager;)V
jdepend.framework.AbstractParser:setFilter(Ljdepend.framework.PackageFilter;)V
jdepend.framework.ClassFileParser.AttributeInfo:setValue([B)V
jdepend.framework.PackageFilter:PackageFilter(Ljava.io.File;)V
jdepend.framework.ClassFileParser:slashesToDots(Ljava.lang.String;)Ljava.lang.String;
jdepend.framework.JDepend:analyzeInnerClasses(Z)V
jdepend.framework.ClassFileParser:addAnnotationReferences(Ljdepend.framework.ClassFileParser.AttributeInfo;)V
jdepend.framework.JavaClass:isAbstract(Z)V
jdepend.framework.PropertyConfigurator:PropertyConfigurator(Ljava.io.File;)V
jdepend.framework.PropertyConfigurator:loadProperties(Ljava.io.File;)Ljava.util.Properties; | CONDITION | 3664 | if (x) -> if (!x)
jdepend.framework.CollectAllCyclesTest:assertListEquals(Ljava.util.List;[Ljava.lang.String;)V
jdepend.framework.JavaClass:setSourceFile(Ljava.lang.String;)V
jdepend.framework.ClassFileParser:toUTF8(I)Ljava.lang.String;
jdepend.framework.ClassFileParser:parseNextConstant()Ljdepend.framework.ClassFileParser.Constant;
jdepend.framework.FileManager:FileManager()V
jdepend.framework.JavaClass:getImportedPackages()Ljava.util.Collection;
jdepend.framework.ClassFileParser:parseMajorVersion()I
jdepend.framework.JDependTestCase:getTestDataDir()Ljava.lang.String;
jdepend.framework.PackageFilter:addPackages(Ljava.util.Collection;)V
jdepend.framework.ClassFileParser:parse(Ljava.io.File;)Ljdepend.framework.JavaClass;
jdepend.framework.JavaClass:setPackageName(Ljava.lang.String;)V
jdepend.framework.JDepend:setFilter(Ljdepend.framework.PackageFilter;)V
jdepend.framework.JavaClass:setName(Ljava.lang.String;)V
jdepend.framework.PropertyConfiguratorTest:assertFiltersExist(Ljava.util.Collection;)V
jdepend.framework.FileManager:collectFiles(Ljava.io.File;Ljava.util.Collection;)V
jdepend.framework.ClassFileParser:parseFields()[Ljdepend.framework.ClassFileParser.FieldOrMethodInfo;
jdepend.framework.ClassFileParser:parseAttributes()V
jdepend.framework.JavaClassBuilder:JavaClassBuilder(Ljdepend.framework.FileManager;)V
jdepend.framework.AbstractParser:AbstractParser(Ljdepend.framework.PackageFilter;)V
jdepend.framework.ClassFileParser:parse(Ljava.io.InputStream;)Ljdepend.framework.JavaClass;
jdepend.framework.ClassFileParser:getPackageName(Ljava.lang.String;)Ljava.lang.String;
jdepend.framework.FileManager:existsWithExtension(Ljava.io.File;Ljava.lang.String;)Z
jdepend.framework.JDepend:addPackages(Ljava.util.Collection;)V
jdepend.framework.ClassFileParser:addClassConstantReferences()V
jdepend.framework.ClassFileParser:descriptorToTypes(Ljava.lang.String;)[Ljava.lang.String;
jdepend.framework.FileManager:acceptInnerClasses(Z)V
jdepend.framework.ClassFileParser:addImport(Ljava.lang.String;)V
jdepend.framework.ClassFileParser:parseConstantPool()[Ljdepend.framework.ClassFileParser.Constant;
jdepend.framework.JDepend:JDepend()V
jdepend.framework.ClassFileParser:parseAccessFlags()V
jdepend.framework.FileManager:addDirectory(Ljava.lang.String;)V
jdepend.framework.JavaPackage:dependsUpon(Ljdepend.framework.JavaPackage;)V
jdepend.framework.JavaClass:getPackageName()Ljava.lang.String;
jdepend.framework.PropertyConfigurator:getConfiguredPackages()Ljava.util.Collection;
jdepend.framework.ClassFileParser.AttributeInfo:getName()Ljava.lang.String;
jdepend.framework.FileManager:acceptJarFile(Ljava.io.File;)Z
jdepend.framework.JavaClassBuilder:JavaClassBuilder()V
jdepend.framework.ClassFileParser.Constant:Constant(Ljdepend.framework.ClassFileParser;BI)V
jdepend.framework.FileManager:isJar(Ljava.io.File;)Z
jdepend.framework.ClassFileParser:addAnnotationsReferences()V
jdepend.framework.JavaClass:isAbstract()Z
jdepend.framework.ClassFileParser:parseSuperClassName()Ljava.lang.String;
jdepend.framework.PropertyConfigurator:PropertyConfigurator(Ljava.util.Properties;)V
jdepend.framework.ClassFileParser:u2([BI)I
jdepend.framework.ClassFileParser:parseAttribute()Ljdepend.framework.ClassFileParser.AttributeInfo;
jdepend.framework.ClassFileParser:parseMagic()I
jdepend.framework.FileManager:isZip(Ljava.io.File;)Z
jdepend.framework.ClassFileParser:addAnnotationReferences([BII)I
jdepend.framework.ClassFileParser:parseClassName()Ljava.lang.String;
jdepend.framework.PackageFilter:addPackage(Ljava.lang.String;)V | CONSTANT | 2722 | 0 -> -1
jdepend.framework.AbstractParser:debug(Ljava.lang.String;)V
jdepend.framework.PropertyConfigurator:PropertyConfigurator()V
jdepend.framework.ClassFileParser.AttributeInfo:getValue()[B
jdepend.framework.ClassFileParser:addAnnotationElementValueReferences([BI)I
jdepend.framework.ClassFileParser:ClassFileParser(Ljdepend.framework.PackageFilter;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 3 2 1 51 6 52 3 3 6 7 13 55 3 8 11 9 2 11 13 57 10 59 1 16 6 60 1 64 1 65 11 66 1 69 1 19 3 21 2 73 1 24 1 25 6 75 1 26 1 78 1 79 1 82 1 83 7 86 1 33 1 87 2 89 6 90 1 35 6 92 1 36 6 95 6 37 2 97 1 39 6 100 1 102 1 104 1 106 3 107 3 108 1 110 1 111 1 43 2 113 6 46 1 47 1 49 6 50 1 116 1 115 1 
0 3 2 1 51 5 52 4 3 6 7 11 55 2 8 9 9 3 11 12 13 1 57 10 16 6 60 1 64 1 65 9 66 1 68 1 69 1 19 2 72 1 21 2 73 1 23 1 24 1 25 5 75 1 26 1 78 1 79 1 29 1 82 1 83 6 31 1 86 1 33 1 87 2 89 5 90 1 35 5 92 1 36 6 95 5 37 2 97 1 39 5 100 1 102 1 41 1 103 1 104 1 107 2 108 1 111 1 43 2 47 1 113 8 46 1 49 6 50 1 115 1 
0 3 2 1 51 9 52 3 3 10 7 15 55 2 8 13 9 2 11 15 13 1 57 13 59 1 16 10 60 1 64 1 65 13 66 1 68 1 69 1 19 2 72 1 21 2 73 1 23 1 24 1 25 9 75 1 26 1 78 1 79 1 29 1 82 1 83 10 31 1 86 1 33 1 87 3 89 9 90 1 35 9 92 1 36 10 95 9 37 2 97 1 39 9 100 1 102 1 41 1 103 1 104 1 106 7 107 2 108 1 110 2 111 1 43 2 47 1 113 7 46 1 49 10 50 1 116 4 115 1 
0 2 2 1 51 3 52 3 3 4 7 9 55 2 8 7 9 2 11 9 13 1 57 7 16 4 60 1 64 1 65 7 66 1 68 1 69 1 19 2 72 1 21 1 73 1 23 1 24 1 25 3 75 1 26 1 78 1 79 1 29 1 82 1 83 4 31 1 86 1 87 1 33 1 89 3 90 1 35 3 92 1 36 4 37 1 95 3 97 1 39 3 100 1 102 1 41 1 103 1 104 1 107 2 108 1 111 1 43 1 47 1 113 6 46 1 49 4 50 1 115 1 
82 1 46 1 113 1 31 1 27 1 33 1 72 1 108 1 
0 3 2 1 51 4 52 3 3 5 7 10 55 2 8 8 9 2 11 10 13 1 57 8 16 5 60 1 64 1 65 8 66 1 68 1 69 1 19 2 72 1 21 2 73 1 23 1 24 1 25 4 75 1 26 1 78 1 79 1 29 1 82 1 83 5 31 1 86 1 33 1 87 2 89 4 90 1 35 4 92 1 36 5 95 4 37 2 97 1 39 4 100 1 102 1 41 1 103 1 104 1 107 2 108 1 111 1 43 2 47 1 113 7 46 1 49 5 50 1 115 1 
0 3 2 1 51 2 52 3 3 3 7 9 55 2 8 7 9 2 11 9 13 1 57 6 16 3 60 1 64 1 65 7 66 1 68 1 69 1 19 2 72 1 21 1 73 1 23 1 24 1 25 2 75 1 26 1 78 1 79 1 29 1 82 1 83 3 31 1 86 1 87 1 33 1 89 2 90 1 35 2 92 1 36 3 37 1 95 2 97 1 39 2 100 1 102 1 41 1 103 1 104 1 107 2 108 1 111 1 43 1 47 1 113 6 46 1 49 3 50 1 115 1 
0 3 2 1 51 6 52 3 3 6 7 13 55 3 8 11 9 2 11 13 57 10 59 1 16 6 60 1 64 1 65 11 66 1 69 1 19 3 21 2 73 1 24 1 25 6 75 1 26 1 78 1 79 1 82 1 83 7 86 1 33 1 87 2 89 6 90 1 35 6 92 1 36 6 95 6 37 2 97 1 39 6 100 1 102 1 104 1 106 3 107 3 108 1 110 1 111 1 43 2 113 6 46 1 47 1 49 6 50 1 116 1 115 1 
62 1 1 1 114 1 67 1 32 1 10 1 12 1 71 1 88 1 80 1 61 1 
62 1 1 1 114 1 67 1 32 1 10 1 12 1 71 1 88 1 80 1 61 1 
62 1 1 1 114 1 32 1 10 1 12 1 71 1 99 1 61 1 
62 1 1 1 114 1 32 1 10 1 12 1 71 1 99 1 61 1 
62 1 1 1 114 1 32 1 12 1 71 1 61 1 91 1 
62 1 1 1 114 1 32 1 10 1 12 1 71 1 99 1 61 1 
62 1 1 1 114 1 32 1 10 1 12 1 71 1 99 1 61 1 
18 1 4 1 3 7 41 4 34 1 44 6 36 1 45 1 49 1 94 1 16 1 17 4 
18 1 4 1 3 9 41 6 34 1 44 8 36 1 45 1 49 1 94 1 16 1 17 6 
18 1 4 1 3 10 41 7 34 1 44 8 36 1 45 1 49 1 94 1 16 1 17 6 
18 1 4 1 3 11 41 8 34 1 44 8 36 1 45 1 49 1 94 1 16 1 17 6 
18 1 4 1 3 15 41 12 34 1 44 12 36 1 45 1 49 1 94 1 16 1 17 10 
18 1 4 1 3 6 41 4 34 1 44 4 36 1 45 1 49 1 94 1 16 1 17 4 
63 1 18 1 3 7 41 4 34 1 44 3 36 1 45 1 49 1 94 1 14 3 16 1 17 4 
63 1 18 1 3 9 41 6 34 1 44 4 36 1 45 1 49 1 94 1 14 4 16 1 17 6 
63 1 18 1 3 10 41 7 34 1 44 4 36 1 45 1 49 1 94 1 14 4 16 1 17 6 
63 1 18 1 3 11 41 8 34 1 44 4 36 1 45 1 49 1 94 1 14 4 16 1 17 6 
63 1 18 1 3 15 41 12 34 1 44 6 36 1 45 1 49 1 94 1 14 6 16 1 17 10 
63 1 18 1 3 6 41 4 34 1 44 2 36 1 45 1 49 1 94 1 14 2 16 1 17 4 
42 1 48 1 67 1 38 1 
20 1 
84 18 101 6 5 6 20 1 109 6 93 1 42 6 38 5 13 1 77 7 28 3 98 6 15 6 
93 1 84 3 101 1 13 1 98 1 15 1 109 1 
93 1 84 3 31 1 101 1 27 1 98 1 15 1 109 1 
42 1 31 1 67 1 38 1 13 1 
42 1 67 1 13 1 
93 1 84 1 101 1 70 1 98 1 
93 1 84 2 101 1 70 1 98 1 109 1 
93 1 84 3 101 1 70 1 98 1 15 1 109 1 
112 1 1 1 71 1 
112 1 51 2 1 1 71 1 
62 1 1 1 51 1 70 1 71 2 105 1 6 1 56 1 61 1 
62 1 1 1 51 1 32 1 71 2 105 1 6 1 114 1 12 1 61 1 
62 1 105 1 6 1 114 1 76 1 12 1 61 1 
62 1 70 1 105 1 6 1 76 1 61 1 
85 1 30 1 1 1 32 1 53 1 54 1 6 1 33 1 88 1 91 1 96 1 12 2 58 1 61 2 40 1 62 2 67 1 71 2 105 2 22 1 74 1 114 2 117 1 81 1 

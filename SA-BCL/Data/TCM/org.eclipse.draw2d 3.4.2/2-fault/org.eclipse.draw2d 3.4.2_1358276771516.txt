#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.eclipse.draw2d.test.XYLayoutTest:testPreferredSize()V PASSED
org.eclipse.draw2d.test.RayTest:test_length()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_happypath()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_bugzilla130042()V PASSED
org.eclipse.draw2d.test.PrecisionPointTest:testEquals()V PASSED
org.eclipse.draw2d.test.ColorConstantTest:test_ColorConstantInit()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testAntialias()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testFillRules()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCapAA()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testPatterns()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContainerLeadingWord()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testBlockLeadingWord()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadPrecedingInline()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadFromNested()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadAtEndOfBlock()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadPastEmptyString()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextChineseCharLookahead()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextHyphenLookahead()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testSingleLetter()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testSingleSpace()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBendpoints()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBlockedPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformed()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformedInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemovePath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testOffsetShrink()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit()V FAILED junit.framework.AssertionFailedError 536 506 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit2()V FAILED junit.framework.AssertionFailedError 536 506 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendMiss()V FAILED junit.framework.AssertionFailedError 536 506 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testShortestPathOutsideOval()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottom()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottomInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTop()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTopInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSubpath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangent()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangentInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationSymmetry()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationValues()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_sameBehavior()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop2()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testHardWrapping()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testSoftWrapping()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testTruncatedWrapping()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testInlineFlow()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testNestedInlineFlows()V PASSED
org.eclipse.draw2d.test.FlowBorderTests:testBorderedTextFlow()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testSimpleClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testTranslatedClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testZoomedClip()V PASSED
org.eclipse.draw2d.test.LayeredPaneTest:testIndexOutOfBounds()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testImageRotation()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testRotatingImagesWithDifferentDepths()V PASSED
org.eclipse.draw2d.test.TextualTests:testLineRootBidiCommit()V PASSED
org.eclipse.draw2d.test.TextualTests:testGetFirstAndLastOffsetForLine()V PASSED
org.eclipse.draw2d.test.PointListTests:testIntersects()V PASSED
org.eclipse.draw2d.test.PrecisionDimensionTest:testEquals()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_Thumbnail()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_EmptyThumbnail()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.eclipse.draw2d.text.NestedLine:NestedLine(Lorg.eclipse.draw2d.text.InlineFlow;)V
org.eclipse.draw2d.test.TextFlowWrapTest:runSoftWrappingTests()V
org.eclipse.draw2d.geometry.Dimension:isEmpty()Z
org.eclipse.draw2d.graph.ShortestPathRouter:solve()Ljava.util.List;
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:LineSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;III)V
org.eclipse.draw2d.SWTGraphics:setForegroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:emit(Ljava.util.List;)V
org.eclipse.draw2d.text.FlowPage:setPageWidth(I)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.TextFragmentBox:getAscent()I
org.eclipse.draw2d.geometry.PrecisionRectangle:setHeight(D)V
org.eclipse.draw2d.text.TextFlow:contributeBidi(Lorg.eclipse.draw2d.text.BidiProcessor;)V
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.text.LineRoot:getBaseline()I
org.eclipse.draw2d.text.InlineFlow:postValidate()V
org.eclipse.draw2d.ImageUtilities:rotateOptimized(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.parts.Thumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.geometry.Point:preciseY()D
org.eclipse.draw2d.graph.Obstacle:shrinkVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.SWTGraphics:checkFill()V
org.eclipse.draw2d.ScaledGraphics:setScale(D)V
org.eclipse.draw2d.SWTGraphics:setForegroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.Rectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.graph.Vertex:shrink()V
org.eclipse.draw2d.Figure:useLocalCoordinates()Z
org.eclipse.draw2d.SWTGraphics:SWTGraphics(Lorg.eclipse.swt.graphics.GC;)V
org.eclipse.draw2d.Shape:Shape()V
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionBottom()V
org.eclipse.draw2d.LayeredPane:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1:paintControl(Lorg.eclipse.swt.events.PaintEvent;)V
org.eclipse.draw2d.ScaledGraphics:zoomFontHeight(I)I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersection()V
org.eclipse.draw2d.graph.Path:isObstacleVisible(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.geometry.Rectangle:preciseY()D
org.eclipse.draw2d.Figure:setLayoutManager(Lorg.eclipse.draw2d.LayoutManager;)V
org.eclipse.draw2d.text.BidiProcessor:add(Lorg.eclipse.draw2d.text.FlowFigure;Ljava.lang.String;)V
org.eclipse.draw2d.text.BlockBox:BlockBox(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.text.LineBox:add(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.ScaledGraphics:setLocalFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.text.FlowPage:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.TextFlow:getAscent()I
org.eclipse.draw2d.parts.Thumbnail:setScales(FF)V
org.eclipse.draw2d.FigureUtilities:findCommonAncestor(Lorg.eclipse.draw2d.IFigure;Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.SWTGraphics:setClip(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:isEmpty()Z
org.eclipse.draw2d.AbstractLayout:getBorderPreferredSize(Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Obstacle:Obstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.graph.ShortestPathRouter;)V
org.eclipse.draw2d.geometry.Dimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.PageFlowLayout:getContextWidth()I
org.eclipse.draw2d.graph.ShortestPathRouter:resetObstacleExclusions()V
org.eclipse.draw2d.graph.Path:invertPriorVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.SWTGraphics:setBackgroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.parts.Thumbnail:getSourceRectangle()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:repaint(IIII)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestOffsetShrink()V
org.eclipse.draw2d.text.BlockBox:toRectangle()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:setPreferredSize(II)V
org.eclipse.draw2d.Figure:firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.Insets:getWidth()I
org.eclipse.draw2d.text.LineBox:isOccupied()Z
org.eclipse.draw2d.graph.Path.SegmentStack:push(Ljava.lang.Object;)V
org.eclipse.draw2d.text.AbstractFlowBorder:getRightMargin()I
org.eclipse.draw2d.graph.ShortestPathRouter:countVertices()V
org.eclipse.draw2d.FigureUtilities:getStringDimension(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.Point;
org.eclipse.draw2d.graph.Path:addConnectingSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;ZZ)V
org.eclipse.draw2d.test.AbstractTextTest.TestBorder:getInsets(Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.geometry.Insets;
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:BidiLevelNode()V
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:push(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Path:linkVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.Figure:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.SWTGraphics:clipRect(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.LookAheadTest:getWidth(Ljava.lang.String;)I
org.eclipse.draw2d.Figure.1:addDirtyRegion(Lorg.eclipse.draw2d.IFigure;IIII)V
org.eclipse.draw2d.text.BidiProcessor:isJoiner(I)Z
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:pop()Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.geometry.Rectangle:right()I
org.eclipse.draw2d.text.TextFlow:getDescent()I
org.eclipse.draw2d.ScaledGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.geometry.Dimension:Dimension(Lorg.eclipse.draw2d.geometry.Dimension;)V
org.eclipse.draw2d.geometry.Rectangle:setSize(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.AbstractLayout:invalidate()V
org.eclipse.draw2d.geometry.Rectangle:hashCode()I
org.eclipse.draw2d.geometry.PrecisionRectangle:updateInts()V
org.eclipse.draw2d.text.TextFragmentBox:getDescent()I
org.eclipse.draw2d.text.TextFlow:TextFlow(Ljava.lang.String;)V
org.eclipse.draw2d.FigureUtilities:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.parts.Thumbnail:setSource(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:AntialiasSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;IILorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.Rectangle:union(IIII)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:repaint()V
org.eclipse.draw2d.geometry.Dimension:Dimension(Lorg.eclipse.swt.graphics.Point;)V
org.eclipse.draw2d.geometry.Rectangle:scale(D)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:checkGC()V
org.eclipse.draw2d.text.ContentBox:requiresBidi()Z
org.eclipse.draw2d.geometry.Point:toString()Ljava.lang.String;
org.eclipse.draw2d.SWTGraphics:pushState()V
org.eclipse.draw2d.geometry.PrecisionRectangle:setY(D)V
org.eclipse.draw2d.text.LineRoot:buildBidiTree(Lorg.eclipse.draw2d.text.FlowBox;Lorg.eclipse.draw2d.text.LineRoot.BidiLevelNode;Ljava.util.List;)V
org.eclipse.draw2d.AbstractHintLayout:invalidate()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:run()V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineChildrenPaths()V
org.eclipse.draw2d.geometry.Rectangle:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.SWTGraphics:setFillRule(I)V
org.eclipse.draw2d.Figure:isMirrored()Z
org.eclipse.draw2d.graph.Path:setBendPoints(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.SWTGraphics:fillText(Ljava.lang.String;II)V
org.eclipse.draw2d.SWTGraphics:setTextAntialias(I)V
org.eclipse.draw2d.Figure:translateToParent(Lorg.eclipse.draw2d.geometry.Translatable;)V
org.eclipse.draw2d.graph.Segment:intersects(IIII)Z
org.eclipse.draw2d.graph.ShortestPathRouter:dirtyPathsOn(Lorg.eclipse.draw2d.graph.Vertex;)Z
org.eclipse.draw2d.SWTGraphics.RectangleClipping:translate(FF)V
org.eclipse.draw2d.test.LookAheadTest:assertLineBreakNotFound(Z)V
org.eclipse.draw2d.text.NestedLine:getOuterAscent()I
org.eclipse.draw2d.EventListenerList:containsListener(Ljava.lang.Class;)Z
org.eclipse.draw2d.test.AdvancedGraphicsTests.6:run()V
org.eclipse.draw2d.geometry.PointList:addAll(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.test.LookAheadTest:assertLookaheadMatchesString([ILjava.lang.String;)V
org.eclipse.draw2d.text.BlockFlow:BlockFlow()V
org.eclipse.draw2d.test.AdvancedGraphicsTests:assertImageEquality(II)V
org.eclipse.draw2d.Figure:setPreferredSize(Lorg.eclipse.draw2d.geometry.Dimension;)V
org.eclipse.draw2d.text.FlowUtilities:getBorderAscentWithMargin(Lorg.eclipse.draw2d.text.InlineFlow;)I
org.eclipse.draw2d.text.BlockFlow:getHorizontalAligment()I
org.eclipse.draw2d.Figure:getBounds()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Point:getPreciseDistance2(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.test.RayTest:testLengthValues(IID)V
org.eclipse.draw2d.geometry.PrecisionRectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.geometry.PrecisionRectangle:performTranslate(II)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexForIntersections(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.geometry.Point:negate()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.InlineFlow:setBorder(Lorg.eclipse.draw2d.Border;)V
org.eclipse.draw2d.text.FlowFigureLayout:invalidate()V
org.eclipse.draw2d.graph.Vertex:bend(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.BlockFlowLayout:getWidthLookahead(Lorg.eclipse.draw2d.text.FlowFigure;[I)V
org.eclipse.draw2d.graph.ShortestPathRouter:bendPaths()V
org.eclipse.draw2d.test.TextFlowWrapTest:runHardWrappingTests()V
org.eclipse.draw2d.text.FlowUtilities:measureString(Lorg.eclipse.draw2d.text.TextFragmentBox;Ljava.lang.String;ILorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.Figure:invalidate()V
org.eclipse.draw2d.graph.ShortestPathRouter:addObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.geometry.Rectangle:getPosition(Lorg.eclipse.draw2d.geometry.Point;)I
org.eclipse.draw2d.graph.Path:createVisibilityGraph(Ljava.util.List;)V
org.eclipse.draw2d.text.TextFlow:setText(Ljava.lang.String;)V
org.eclipse.draw2d.ImageUtilities:createRotatedImage(Lorg.eclipse.swt.graphics.Image;)Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.ScaledGraphics.FontKey:FontKey()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:intersect(IIII)V
org.eclipse.draw2d.SWTGraphics:scale(D)V
org.eclipse.draw2d.geometry.Point:Point()V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.geometry.Rectangle:preciseWidth()D
org.eclipse.draw2d.geometry.PrecisionRectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:setAffineMatrix([F)V
org.eclipse.draw2d.ScaledGraphics.FontKey:setValues(Lorg.eclipse.swt.graphics.Font;I)V
org.eclipse.draw2d.text.BlockFlow:useLocalCoordinates()Z
org.eclipse.draw2d.graph.ShortestPathRouter:getNearestVertex(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Vertex;
org.eclipse.draw2d.geometry.Geometry:productSign(JJ)I
org.eclipse.draw2d.graph.Path:getStartPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.Insets:Insets(IIII)V
org.eclipse.draw2d.text.LineRoot:setLineTop(I)V
org.eclipse.draw2d.text.ParagraphTextLayout.SegmentLookahead:getWidth()I
org.eclipse.draw2d.Figure:isValid()Z
org.eclipse.draw2d.geometry.PointList:PointList()V
org.eclipse.draw2d.text.FlowContainerLayout:forceChildInvalidation(Lorg.eclipse.draw2d.Figure;)Z
org.eclipse.draw2d.Figure:setBorder(Lorg.eclipse.draw2d.Border;)V
org.eclipse.draw2d.SWTGraphics:init()V
org.eclipse.draw2d.geometry.Rectangle:bottom()I
org.eclipse.draw2d.parts.Thumbnail:setDirty(Z)V
org.eclipse.draw2d.graph.Vertex:getSpacing()I
org.eclipse.draw2d.parts.Thumbnail:getScaleX()F
org.eclipse.draw2d.geometry.Rectangle:contains(II)Z
org.eclipse.draw2d.IFigure.NoInsets:NoInsets()V
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;I)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:setOn(Lorg.eclipse.swt.graphics.GC;II)V
org.eclipse.draw2d.graph.Vertex:getDeformedRectangle(I)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.FlowFigure:revalidateBidi(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Path:testAndSet(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.graph.Obstacle:growVertices()V
org.eclipse.draw2d.text.FlowUtilities:getBorderDescentWithMargin(Lorg.eclipse.draw2d.text.InlineFlow;)I
org.eclipse.draw2d.geometry.Rectangle:translate(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Point:preciseX()D
org.eclipse.draw2d.text.TextFlow:getFragmentsWithoutBorder()Ljava.util.List;
org.eclipse.draw2d.test.AdvancedGraphicsTests.3:run()V
org.eclipse.draw2d.test.AdvancedGraphicsTests:performTestcase(Ljava.lang.Runnable;[Ljava.lang.Runnable;)V
org.eclipse.draw2d.Figure:getFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.text.FlowFigureLayout:FlowFigureLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(FFFF)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomLeftIntersection()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.2:run()V
org.eclipse.draw2d.SWTGraphics:checkSharedClipping()V
org.eclipse.draw2d.graph.Obstacle:shrinkVertices()V
org.eclipse.draw2d.SWTGraphics:getFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.graph.Path.SegmentStack:pop()Lorg.eclipse.draw2d.graph.Segment;
org.eclipse.draw2d.text.InlineFlowLayout:InlineFlowLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.SWTGraphics.State:clone()Ljava.lang.Object;
org.eclipse.draw2d.text.ParagraphTextLayout.SegmentLookahead:setIndex(I)V
org.eclipse.draw2d.test.LookAheadTest:getContext(Lorg.eclipse.draw2d.text.FlowFigure;)Lorg.eclipse.draw2d.text.FlowContext;
org.eclipse.draw2d.XYLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.text.BidiProcessor:process()V
org.eclipse.draw2d.ScaledGraphics:createFont(Lorg.eclipse.swt.graphics.FontData;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.SWTGraphics:setGraphicHints(I)V
org.eclipse.draw2d.graph.ShortestPathRouter:regenerateChildPaths(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;II)Ljava.util.List;
org.eclipse.draw2d.test.AdvancedGraphicsTests.5:run()V
org.eclipse.draw2d.test.TextFlowWrapTest:doTest(Ljava.lang.String;Ljava.lang.String;[Ljava.lang.String;)V
org.eclipse.draw2d.text.BlockFlowLayout:preLayout()V
org.eclipse.draw2d.graph.Vertex:updateOffset()V
org.eclipse.draw2d.test.AbstractTextTest.TestBorder:TestBorder(Lorg.eclipse.draw2d.geometry.Insets;)V
org.eclipse.draw2d.text.TextFlow:getBidiInfo()Lorg.eclipse.draw2d.text.BidiInfo;
org.eclipse.draw2d.SWTGraphics:setLineJoin(I)V
org.eclipse.draw2d.text.BlockBox:add(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.SWTGraphics:initTransform(Z)V
org.eclipse.draw2d.Figure:getPreferredSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.BlockFlowLayout:getBlockFlow()Lorg.eclipse.draw2d.text.BlockFlow;
org.eclipse.draw2d.text.BlockFlowLayout:cleanup()V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:resetThumbnailImage()V
org.eclipse.draw2d.text.BlockFlowLayout:setupBlock()V
org.eclipse.draw2d.graph.ShortestPathRouter:growObstacles()V
org.eclipse.draw2d.geometry.Rectangle:preciseX()D
org.eclipse.draw2d.Figure:setParent(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.SWTGraphics:translatePointArray([III)V
org.eclipse.draw2d.text.AbstractFlowBorder:getTopMargin()I
org.eclipse.draw2d.text.LineBox:getFragments()Ljava.util.List;
org.eclipse.draw2d.geometry.Insets:getHeight()I
org.eclipse.draw2d.geometry.Dimension:negate()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Obstacle:reset()V
org.eclipse.draw2d.test.SimpleTextTest:makePageWidth(Ljava.lang.String;I)V
org.eclipse.draw2d.geometry.Dimension:expand(Lorg.eclipse.draw2d.geometry.Dimension;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.BlockFlow:validate()V
org.eclipse.draw2d.text.InlineFlowLayout:isCurrentLineOccupied()Z
org.eclipse.draw2d.ScaledGraphics:dispose()V
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getCopy()Lorg.eclipse.draw2d.SWTGraphics.Clipping;
org.eclipse.draw2d.ImageUtilities:rotatePixelByPixel(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.text.BidiProcessor:assignResults([I)V
org.eclipse.draw2d.SWTGraphics:drawPoint(II)V
org.eclipse.draw2d.geometry.Insets:Insets(I)V
org.eclipse.draw2d.SWTGraphics:setLineStyle(I)V
org.eclipse.draw2d.text.BidiProcessor:BidiProcessor()V
org.eclipse.draw2d.geometry.PointList:getPoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.FlowBox:getX()I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.FlowBox:getWidth()I
org.eclipse.draw2d.Figure:fireCoordinateSystemChanged()V
org.eclipse.draw2d.Figure:getLayoutManager()Lorg.eclipse.draw2d.LayoutManager;
org.eclipse.draw2d.text.BlockFlow:getBlockBox()Lorg.eclipse.draw2d.text.BlockBox;
org.eclipse.draw2d.graph.Obstacle:growVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopRightIntersection()V
org.eclipse.draw2d.geometry.Point:hashCode()I
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.Rectangle:intersect(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:drawPolyline([I)V
org.eclipse.draw2d.text.FlowContainerLayout:layout()V
org.eclipse.draw2d.graph.ShortestPathRouter:internalAddObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.SWTGraphics:drawString(Ljava.lang.String;II)V
org.eclipse.draw2d.ScaledGraphics:scale(D)V
org.eclipse.draw2d.SWTGraphics:getClip(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:revalidate()V
org.eclipse.draw2d.geometry.Rectangle:getCopy()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.TextFlow:getFirstOffsetForLine(I)I
org.eclipse.draw2d.SWTGraphics:checkText()V
org.eclipse.draw2d.Figure:getFlag(I)Z
org.eclipse.draw2d.graph.ShortestPathRouter:labelPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle()V
org.eclipse.draw2d.text.LineBox:getTopMargin()I
org.eclipse.draw2d.text.FlowFigure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Segment:crossProduct(Lorg.eclipse.draw2d.graph.Segment;)J
org.eclipse.draw2d.geometry.PointList:PointList([I)V
org.eclipse.draw2d.text.BlockFlowLayout:createNewLine()V
org.eclipse.draw2d.XYLayout:calculatePreferredSize(Lorg.eclipse.draw2d.IFigure;II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.text.BlockFlow:getLeftMargin()I
org.eclipse.draw2d.geometry.Rectangle:resize(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.Figure:getChildren()Ljava.util.List;
org.eclipse.draw2d.text.AbstractFlowBorder:getLeftMargin()I
org.eclipse.draw2d.graph.Path:refreshExcludedObstacles(Ljava.util.List;)V
org.eclipse.draw2d.graph.Segment:intersects(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.text.FlowBox:setWidth(I)V
org.eclipse.draw2d.text.BidiProcessor:isJoiningCharacter(C)Z
org.eclipse.draw2d.AbstractLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.parts.Thumbnail:getPreferredSize(II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.ContentBox:getLineRoot()Lorg.eclipse.draw2d.text.LineRoot;
org.eclipse.draw2d.text.FlowContainerLayout:getCurrentLine()Lorg.eclipse.draw2d.text.LineBox;
org.eclipse.draw2d.geometry.Rectangle:setLocation(Lorg.eclipse.draw2d.geometry.Point;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathAbove(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.RectangleFigure:RectangleFigure()V
org.eclipse.draw2d.text.FlowFigureLayout:setFlowContext(Lorg.eclipse.draw2d.text.FlowContext;)V
org.eclipse.draw2d.text.NestedLine:setLineRoot(Lorg.eclipse.draw2d.text.LineRoot;)V
org.eclipse.draw2d.text.BlockFlowLayout:flush()V
org.eclipse.draw2d.graph.Path:Path()V
org.eclipse.draw2d.Figure.1:addInvalidFigure(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.text.FlowFigureLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.PointList:addPoint(II)V
org.eclipse.draw2d.ScaledGraphics:getLocalFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.test.GraphicsClipping:gcClipping()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.TextUtilities:getAscent(Lorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.geometry.Dimension:Dimension(II)V
org.eclipse.draw2d.geometry.Ray:Ray(II)V
org.eclipse.draw2d.text.FlowContainerLayout:layoutChildren()V
org.eclipse.draw2d.text.InlineFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.text.FlowContainerLayout:cleanup()V
org.eclipse.draw2d.Figure:getParent()Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.text.FlowUtilities:getTextUtilities()Lorg.eclipse.draw2d.TextUtilities;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Vertex:addPath(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.geometry.Geometry:linesIntersect(IIIIIIII)Z
org.eclipse.draw2d.graph.ShortestPathRouter:internalRemoveObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.geometry.PointList:getPoint(Lorg.eclipse.draw2d.geometry.Point;I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Segment:cosine(Lorg.eclipse.draw2d.graph.Segment;)D
org.eclipse.draw2d.test.TextFlowWrapTest:runTruncatedWrappingTests()V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:testAndDirtyPaths(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertOffsetShrink(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.InlineFlowLayout:setContinueOnSameLine(Z)V
org.eclipse.draw2d.text.NestedLine:getLineRoot()Lorg.eclipse.draw2d.text.LineRoot;
org.eclipse.draw2d.graph.Path:reconnectSubPaths()V
org.eclipse.draw2d.text.InlineFlowLayout:preLayout()V
org.eclipse.draw2d.text.FlowFigure:FlowFigure()V
org.eclipse.draw2d.graph.ShortestPathRouter:cleanup()V
org.eclipse.draw2d.graph.Obstacle:containsProper(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.text.ContentBox:getBaseline()I
org.eclipse.draw2d.geometry.PrecisionPoint:PrecisionPoint(DD)V
org.eclipse.draw2d.geometry.Point:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.LineRoot:commit()V
org.eclipse.draw2d.Figure:setValid(Z)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.LineRoot.Result:Result(Lorg.eclipse.draw2d.text.LineBox;I)V
org.eclipse.draw2d.Figure:setFlag(IZ)V
org.eclipse.draw2d.Figure:setSize(II)V
org.eclipse.draw2d.graph.Path:determineShortestPath()Z
org.eclipse.draw2d.AbstractLayout:getPreferredSize(Lorg.eclipse.draw2d.IFigure;II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.FlowContainerLayout:addToCurrentLine(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getBoundingBox(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersectionCross()V
org.eclipse.draw2d.graph.ShortestPathRouter:getSpacing()I
org.eclipse.draw2d.text.InlineFlow:addLeadingWordRequirements([I)Z
org.eclipse.draw2d.Figure:getForegroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.ScaledGraphics:zoomFont(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:restart()V
org.eclipse.draw2d.text.BlockFlowLayout:blockContentsChanged()V
org.eclipse.draw2d.geometry.PrecisionDimension:PrecisionDimension(DD)V
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:BidiLevelNode(Lorg.eclipse.draw2d.text.LineRoot.BidiLevelNode;I)V
org.eclipse.draw2d.graph.ShortestPathRouter:updateObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Path:getBendPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.geometry.Rectangle:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle()V
org.eclipse.draw2d.geometry.PrecisionRectangle:getPreciseCopy()Lorg.eclipse.draw2d.geometry.PrecisionRectangle;
org.eclipse.draw2d.graph.Obstacle:init(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.ScaledGraphics:getCachedFont(Lorg.eclipse.draw2d.ScaledGraphics.FontKey;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.UpdateManager:addUpdateListener(Lorg.eclipse.draw2d.UpdateListener;)V
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexIntersections()V
org.eclipse.draw2d.text.BlockFlowLayout:endLine()V
org.eclipse.draw2d.Figure:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.SWTGraphics:reconcileHints(II)V
org.eclipse.draw2d.text.FlowUtilities:setupFragment(Lorg.eclipse.draw2d.text.TextFragmentBox;Lorg.eclipse.swt.graphics.Font;Ljava.lang.String;)V
org.eclipse.draw2d.text.FlowPage:postValidate()V
org.eclipse.draw2d.text.FlowPage:getPageWidth()I
org.eclipse.draw2d.geometry.Rectangle:preciseHeight()D
org.eclipse.draw2d.text.PageFlowLayout:PageFlowLayout(Lorg.eclipse.draw2d.text.FlowPage;)V
org.eclipse.draw2d.text.TextLayout:TextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isRunning()Z
org.eclipse.draw2d.Graphics:translate(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:translate(II)V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Path:labelGraph()Z
org.eclipse.draw2d.ScaledGraphics:ScaledGraphics(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.text.LineRoot:layoutNestedLines(Ljava.util.List;)V
org.eclipse.draw2d.text.ContentBox:setLineRoot(Lorg.eclipse.draw2d.text.LineRoot;)V
org.eclipse.draw2d.text.FlowUtilities:getTextLayoutBounds(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;II)Lorg.eclipse.swt.graphics.Rectangle;
org.eclipse.draw2d.graph.Path:setStartPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.TextFlow:getFlowUtilities()Lorg.eclipse.draw2d.text.FlowUtilities;
org.eclipse.draw2d.text.TextFlow:getText()Ljava.lang.String;
org.eclipse.draw2d.geometry.PrecisionDimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.TextFlow:setBidiInfo(Lorg.eclipse.draw2d.text.BidiInfo;)V
org.eclipse.draw2d.text.ContentBox:getBidiLevel()I
org.eclipse.draw2d.graph.Path:getPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.geometry.Ray:length()D
org.eclipse.draw2d.SWTGraphics.RectangleClipping:scale(FF)V
org.eclipse.draw2d.text.TextFlow:addLeadingWordWidth(Ljava.lang.String;[I)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:addSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;Ljava.util.List;)V
org.eclipse.draw2d.geometry.Rectangle:getLocation()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.ShortestPathRouter:testOffsetSegmentForIntersections(Lorg.eclipse.draw2d.graph.Segment;ILorg.eclipse.draw2d.graph.Path;)I
org.eclipse.draw2d.text.InlineFlow:getFragments()Ljava.util.List;
org.eclipse.draw2d.geometry.PrecisionDimension:updateInts()V
org.eclipse.draw2d.geometry.Dimension:Dimension()V
org.eclipse.draw2d.geometry.PrecisionRectangle:performScale(D)V
org.eclipse.draw2d.text.LineRoot:findParent(Lorg.eclipse.draw2d.text.NestedLine;Ljava.util.List;I)Lorg.eclipse.draw2d.text.LineRoot.Result;
org.eclipse.draw2d.test.TextFlowWrapTest:runGenericTests()V
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Vertex:grow()V
org.eclipse.draw2d.text.ParagraphTextLayout:getSegments(Ljava.lang.String;[I)[Ljava.lang.String;
org.eclipse.draw2d.text.BlockFlowLayout:getContinueOnSameLine()Z
org.eclipse.draw2d.graph.Path:addSegmentsTargetBesideSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.test.ThumbnailTest.TestThumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.text.FlowBox:setX(I)V
org.eclipse.draw2d.text.InlineFlowLayout:setupLine(Lorg.eclipse.draw2d.text.LineBox;)V
org.eclipse.draw2d.text.FlowUtilities:initBidi(Lorg.eclipse.draw2d.text.TextFragmentBox;Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNoPathsSolved()V
org.eclipse.draw2d.text.ContentBox:setBidiLevel(I)V
org.eclipse.draw2d.text.TextFragmentBox:getOuterAscent()I
org.eclipse.draw2d.ColorConstants.SystemColorFactory.1:run()V
org.eclipse.draw2d.text.NestedLine:getOuterDescent()I
org.eclipse.draw2d.parts.Thumbnail:isDirty()Z
org.eclipse.draw2d.graph.ShortestPathRouter:removePath(Lorg.eclipse.draw2d.graph.Path;)Z
org.eclipse.draw2d.geometry.PointList:removeAllPoints()V
org.eclipse.draw2d.graph.Vertex:fullReset()V
org.eclipse.draw2d.geometry.Point:Point(II)V
org.eclipse.draw2d.text.CompositeBox:getRecommendedWidth()I
org.eclipse.draw2d.geometry.Dimension:union(Lorg.eclipse.draw2d.geometry.Dimension;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.LineBox:getDescent()I
org.eclipse.draw2d.TextUtilities:getDescent(Lorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.Figure:getPreferredSize(II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Path:generateShortestPath(Ljava.util.List;)Z
org.eclipse.draw2d.text.FlowUtilities:getTextLayout()Lorg.eclipse.swt.graphics.TextLayout;
org.eclipse.draw2d.graph.Path:addObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.PointList:getLastPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.SWTGraphics:setLineCap(I)V
org.eclipse.draw2d.graph.ShortestPathRouter:addPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:stop()V
org.eclipse.draw2d.text.BlockFlowLayout:addCurrentLine()V
org.eclipse.draw2d.SWTGraphics:fillPolygon([I)V
org.eclipse.draw2d.geometry.Point:getCopy()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Path:addPerimiterSegments(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:displayImage()V
org.eclipse.draw2d.text.FlowUtilities:wrapFragmentInContext(Lorg.eclipse.draw2d.text.TextFragmentBox;Ljava.lang.String;Lorg.eclipse.draw2d.text.FlowContext;Lorg.eclipse.draw2d.text.FlowUtilities.LookAhead;Lorg.eclipse.swt.graphics.Font;I)I
org.eclipse.draw2d.geometry.Rectangle:scale(DD)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.InlineFlowLayout:getWidthLookahead(Lorg.eclipse.draw2d.text.FlowFigure;[I)V
org.eclipse.draw2d.text.BlockFlow:createBlockBox()Lorg.eclipse.draw2d.text.BlockBox;
org.eclipse.draw2d.Figure:isVisible()Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomRightIntersection()V
org.eclipse.draw2d.text.FlowPage:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.Figure:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.4:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTangent()V
org.eclipse.draw2d.geometry.Rectangle:performTranslate(II)V
org.eclipse.draw2d.test.TextFlowWrapTest:doTest2(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;[Ljava.lang.String;)V
org.eclipse.draw2d.text.FlowUtilities:getEllipsisWidth(Lorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.text.FlowFigureLayout:layout(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.Figure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.InlineFlowLayout:flush()V
org.eclipse.draw2d.graph.Path.SegmentStack:popObstacle()Lorg.eclipse.draw2d.graph.Obstacle;
org.eclipse.draw2d.text.LineRoot:bidiCommit()V
org.eclipse.draw2d.Ellipse:Ellipse()V
org.eclipse.draw2d.text.TextFlow:addLeadingWordRequirements([I)Z
org.eclipse.draw2d.Figure:repaint(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Dimension:getNegated()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.Figure:getBorder()Lorg.eclipse.draw2d.Border;
org.eclipse.draw2d.graph.Obstacle:getSpacing()I
org.eclipse.draw2d.Figure:getInsets()Lorg.eclipse.draw2d.geometry.Insets;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.BlockFlowLayout:BlockFlowLayout(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.graph.Path:setEndPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:setAlpha(I)V
org.eclipse.draw2d.text.BlockFlowLayout:forceChildInvalidation(Lorg.eclipse.draw2d.Figure;)Z
org.eclipse.draw2d.geometry.Rectangle:getCenter()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.LineRoot:getVisibleBottom()I
org.eclipse.draw2d.Figure:getUpdateManager()Lorg.eclipse.draw2d.UpdateManager;
org.eclipse.draw2d.graph.Path:addSegmentsTargetAboveSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.text.ParagraphTextLayout.SegmentLookahead:SegmentLookahead(Lorg.eclipse.draw2d.text.ParagraphTextLayout;[Ljava.lang.String;I)V
org.eclipse.draw2d.FigureUtilities:getGC()Lorg.eclipse.swt.graphics.GC;
org.eclipse.draw2d.text.InlineFlowLayout:createNewLine()V
org.eclipse.draw2d.SWTGraphics:scale(FF)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setWidth(D)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:run()V
org.eclipse.draw2d.text.LineRoot:add(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.graph.Path:fullReset()V
org.eclipse.draw2d.text.TextFragmentBox:getOuterDescent()I
org.eclipse.draw2d.test.LookAheadTest:getFollow(Lorg.eclipse.draw2d.text.FlowFigure;)I
org.eclipse.draw2d.text.FlowUtilities:canBreakAfter(C)Z
org.eclipse.draw2d.text.BlockFlow:revalidateBidi(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.Figure:validate()V
org.eclipse.draw2d.geometry.Point:getDistance(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.text.LineBox:requiresBidi()Z
org.eclipse.draw2d.SWTGraphics:checkPaint()V
org.eclipse.draw2d.graph.Vertex:Vertex(IILorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.FigureUtilities:getFontMetrics(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.FontMetrics;
org.eclipse.draw2d.geometry.Rectangle:toString()Ljava.lang.String;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.text.FlowFigure:addLeadingWordRequirements([I)Z
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:push()Lorg.eclipse.draw2d.text.LineRoot.BidiLevelNode;
org.eclipse.draw2d.text.BlockFlowLayout:addBelowPreviousLine(Lorg.eclipse.draw2d.text.CompositeBox;)V
org.eclipse.draw2d.geometry.PointList:size()I
org.eclipse.draw2d.text.FlowContainerLayout:isCurrentLineOccupied()Z
org.eclipse.draw2d.geometry.Ray:dotProductL(Lorg.eclipse.draw2d.geometry.Ray;)J
org.eclipse.draw2d.text.FlowFigure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.text.TextFlow:getLastOffsetForLine(I)I
org.eclipse.draw2d.geometry.PrecisionPoint:updateInts()V
org.eclipse.draw2d.Figure:getBackgroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isActive()Z
org.eclipse.draw2d.SWTGraphics:popState()V
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.SWTGraphics:setLineWidth(I)V
org.eclipse.draw2d.Figure:layout()V
org.eclipse.draw2d.text.TextFragmentBox:setTruncated(Z)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNumPoints(Lorg.eclipse.draw2d.geometry.PointList;I)V
org.eclipse.draw2d.text.FlowUtilities:getAverageCharWidth(Lorg.eclipse.draw2d.text.TextFragmentBox;Lorg.eclipse.swt.graphics.Font;)F
org.eclipse.draw2d.graph.Segment:getSlope()D
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestQuadBendMiss(I)V | CONSTANT | 14558 | 3 -> 1
org.eclipse.draw2d.graph.ShortestPathRouter:labelVertex(Lorg.eclipse.draw2d.graph.Segment;JLorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.ShortestPathRouter:solveDirtyPaths()I
org.eclipse.draw2d.graph.Path:getSubPath(Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.text.TextLayout:getFragment(ILjava.util.List;)Lorg.eclipse.draw2d.text.TextFragmentBox;
org.eclipse.draw2d.text.LineBox:getAvailableWidth()I
org.eclipse.draw2d.AbstractLayout:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Segment:Segment(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.text.FlowFigure:setFlowContext(Lorg.eclipse.draw2d.text.FlowContext;)V
org.eclipse.draw2d.Figure:erase()V
org.eclipse.draw2d.geometry.PointList:removePoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Vertex:Vertex(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.text.FlowContainerLayout:FlowContainerLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.ScaledGraphics.FontKey:hashCode()I
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:orderPaths()V
org.eclipse.draw2d.text.ParagraphTextLayout:layout()V
org.eclipse.draw2d.parts.Thumbnail:adjustToAspectRatio(Lorg.eclipse.draw2d.geometry.Dimension;Z)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.FlowContainerLayout:getRemainingLineWidth()I
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.GraphicsClipping:graphicsClip()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:Rectangle(IIII)V
org.eclipse.draw2d.SWTGraphics:setAntialias(I)V
org.eclipse.draw2d.text.InlineFlowLayout:endLine()V
org.eclipse.draw2d.test.FlowBorderTests:getTextFragment(Lorg.eclipse.draw2d.text.TextFlow;I)Lorg.eclipse.draw2d.text.TextFragmentBox;
org.eclipse.draw2d.text.FlowFigureLayout:getFlowFigure()Lorg.eclipse.draw2d.text.FlowFigure;
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.text.FlowFigureLayout:getContext()Lorg.eclipse.draw2d.text.FlowContext;
org.eclipse.draw2d.graph.Path:resetPartial()V
org.eclipse.draw2d.text.LineRoot:LineRoot(Z)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.BlockFlow:getOrientation()I
org.eclipse.draw2d.ScaledGraphics:translate(II)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionTop()V
org.eclipse.draw2d.text.InlineFlowLayout:getContinueOnSameLine()Z
org.eclipse.draw2d.graph.Path:addAllSegmentsBetween(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Path:cleanup()V
org.eclipse.draw2d.text.BlockFlowLayout:endBlock()V
org.eclipse.draw2d.geometry.PrecisionRectangle:setX(D)V
org.eclipse.draw2d.text.TextFragmentBox:TextFragmentBox(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.geometry.Geometry:cross(JJJJ)J
org.eclipse.draw2d.text.TextFlow:getTextUtilities()Lorg.eclipse.draw2d.TextUtilities;
org.eclipse.draw2d.text.FlowUtilities:findFirstDelimeter(Ljava.lang.String;)I
org.eclipse.draw2d.Figure:isValidationRoot()Z
org.eclipse.draw2d.text.BidiProcessor:setOrientation(I)V
org.eclipse.draw2d.text.BlockFlowLayout:setContinueOnSameLine(Z)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:FillRules(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;II)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:SetPattern(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;Lorg.eclipse.swt.graphics.Pattern;Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.test.AbstractTextTest:assertFragmentLocation(Lorg.eclipse.draw2d.text.TextFragmentBox;)V
org.eclipse.draw2d.FigureUtilities:getStringExtents(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.BlockFlow:getRightMargin()I
org.eclipse.draw2d.text.LineBox:getBottomMargin()I
org.eclipse.draw2d.text.FlowPage:invalidate()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:run()V
org.eclipse.draw2d.graph.ShortestPathRouter:labelPaths()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestDeformed()V
org.eclipse.draw2d.graph.ShortestPathRouter:resetVertices()V
org.eclipse.draw2d.text.FlowPage:validate()V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineSubpaths()V
org.eclipse.draw2d.text.FlowFigure:contributeBidi(Lorg.eclipse.draw2d.text.BidiProcessor;)V
org.eclipse.draw2d.text.TextFragmentBox:isTruncated()Z
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:start()V
org.eclipse.draw2d.text.LineRoot:contiguousCommit(Lorg.eclipse.draw2d.text.FlowBox;I)V
org.eclipse.draw2d.SWTGraphics:restoreState(Lorg.eclipse.draw2d.SWTGraphics.State;)V
org.eclipse.draw2d.graph.Path:getEndPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.ShortestPathRouter:growObstaclesPass()V
org.eclipse.draw2d.text.BlockFlow:revalidate()V
org.eclipse.draw2d.graph.ShortestPathRouter:getSubpathForSplit(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.graph.ShortestPathRouter:refreshChildrenEndpoints(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;)V
org.eclipse.draw2d.geometry.PointList:ensureCapacity(I)V
org.eclipse.draw2d.parts.Thumbnail:Thumbnail()V
org.eclipse.draw2d.graph.ShortestPathRouter:removeObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.SWTGraphics:setBackgroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:resetTileValues()V
org.eclipse.draw2d.text.BidiProcessor.BidiEntry:BidiEntry(Lorg.eclipse.draw2d.text.FlowFigure;II)V
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.Figure:isCoordinateSystem()Z
org.eclipse.draw2d.text.CompositeBox:setRecommendedWidth(I)V
org.eclipse.draw2d.LayeredPane:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.geometry.PointList:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Segment:getLength()D
org.eclipse.draw2d.geometry.PrecisionPoint:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.LineBox:getAscent()I
org.eclipse.draw2d.text.TextFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.Figure:fireFigureMoved()V
org.eclipse.draw2d.text.AbstractFlowBorder:getBottomMargin()I
org.eclipse.draw2d.AbstractLayout:invalidate(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.geometry.PointList:addPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.TextUtilities:getStringExtents(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.Rectangle:union(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.ScaledGraphics:getCachedFontData(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.FontData;
org.eclipse.draw2d.text.TextFlow:TextFlow()V
org.eclipse.draw2d.ScaledGraphics.FontKey:FontKey(Lorg.eclipse.swt.graphics.Font;I)V
org.eclipse.draw2d.SWTGraphics:getLineWidth()I
org.eclipse.draw2d.text.LineRoot:getVisibleTop()I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathRight(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
35 2 527 6 294 6 418 4 455 2 306 20 259 8 283 2 260 2 391 2 150 2 26 2 350 2 463 10 263 4 83 8 330 8 213 2 46 2 333 8 49 2 593 2 265 2 172 1 336 2 549 2 199 2 71 2 122 2 159 1 301 7 140 8 55 2 289 2 271 2 451 2 246 2 220 2 58 2 520 2 59 2 125 2 277 2 415 2 60 2 435 2 225 2 75 2 453 4 91 2 92 2 
382 2 302 2 127 2 492 2 
527 2 294 4 549 2 306 18 259 4 140 4 150 2 55 2 272 2 451 2 220 2 463 10 263 4 330 4 43 2 59 2 125 2 435 2 333 4 75 2 92 2 
43 2 527 2 125 2 294 2 59 2 306 12 435 2 333 2 259 2 75 2 140 2 150 2 55 2 451 2 92 2 272 2 220 2 463 6 263 4 330 2 
588 2 495 2 149 2 327 2 
407 1 
5 2 153 2 21 4 459 2 174 2 30 2 480 4 184 2 185 2 486 2 188 2 191 2 190 2 196 4 53 2 498 2 500 4 202 2 359 2 368 2 222 2 528 2 234 2 90 2 253 2 256 2 95 4 262 2 98 4 275 2 109 2 569 2 113 2 578 2 121 2 430 2 
528 2 234 2 5 2 153 2 19 2 21 2 95 2 459 2 98 4 30 2 174 2 470 2 552 2 105 2 185 2 486 2 188 2 190 2 191 2 569 2 113 2 196 4 53 4 121 2 498 2 578 2 500 2 202 2 359 2 427 2 430 2 368 2 222 2 439 2 
4 2 234 2 5 2 239 2 153 2 253 2 21 2 95 2 459 2 98 4 30 2 174 2 102 2 480 2 185 2 486 2 188 2 190 2 191 2 569 2 113 2 196 4 53 2 121 2 498 2 578 2 500 4 202 2 204 2 359 2 210 2 423 2 430 2 368 2 222 2 
528 2 4 2 234 2 5 2 239 2 153 2 253 2 21 2 95 2 459 2 98 4 30 2 174 2 102 2 480 2 185 2 486 2 188 2 190 2 191 2 569 2 113 2 196 4 53 2 121 2 498 2 578 2 202 2 500 4 204 2 359 2 130 2 210 2 423 2 430 2 368 2 222 2 
5 4 153 2 21 2 459 2 30 2 174 2 480 2 185 2 486 4 188 2 190 2 191 2 196 4 53 4 498 2 500 2 202 2 359 2 212 8 368 2 234 2 95 4 262 2 98 4 553 2 559 2 108 2 569 2 113 2 117 2 121 2 578 4 430 2 
306 8 377 2 450 2 88 4 384 2 93 4 547 2 466 6 555 4 277 4 341 4 186 10 119 2 65 4 595 2 74 2 
487 2 
306 10 198 2 186 10 595 2 555 4 450 2 474 2 88 4 246 2 384 2 136 2 277 6 377 2 341 4 547 2 74 2 531 2 65 4 466 4 93 4 
306 6 198 2 186 6 595 2 555 4 450 2 433 4 474 2 88 4 246 2 384 2 136 2 277 6 377 2 547 2 74 2 531 6 65 4 466 4 93 4 533 4 
136 2 277 2 474 2 306 2 198 2 531 2 246 2 
306 6 198 2 186 6 595 2 555 4 450 2 474 2 88 4 246 2 384 2 136 2 277 4 377 2 341 2 547 2 74 2 531 2 65 4 466 4 93 4 
306 18 198 2 450 2 474 2 55 2 451 2 246 2 476 2 463 10 263 2 384 2 136 2 125 2 144 2 277 6 377 2 435 2 341 4 531 2 75 2 92 2 176 6 
306 26 198 2 186 10 595 2 555 4 450 2 474 2 55 2 88 4 451 2 246 2 476 2 463 10 263 2 384 2 136 2 125 2 144 2 277 6 377 2 547 2 435 2 341 4 74 2 531 2 75 2 65 4 466 4 92 2 93 4 176 6 
119 2 306 4 186 2 595 2 555 4 450 2 55 2 88 4 451 2 463 2 263 2 384 2 125 2 144 2 377 2 435 2 547 2 74 2 75 2 114 2 65 4 466 4 92 2 93 4 176 2 
306 4 186 2 595 2 555 4 450 2 55 2 88 4 451 2 463 2 263 2 384 2 125 2 144 2 377 2 435 2 547 2 74 2 75 2 65 4 466 4 92 2 93 4 176 2 
527 4 349 4 564 2 309 2 149 1 310 4 375 2 3 2 111 4 233 2 192 2 84 6 313 2 490 8 47 2 49 2 532 2 447 2 51 2 570 2 571 2 194 2 574 2 575 6 381 4 118 2 241 4 316 2 534 4 157 4 411 4 158 2 412 4 499 4 163 4 413 24 320 2 17 12 353 2 248 2 126 12 18 2 250 2 503 2 62 6 323 2 386 2 203 2 356 2 167 2 388 2 454 4 64 2 324 4 587 2 293 4 505 2 255 2 169 6 507 2 419 2 508 2 23 2 328 8 458 2 260 2 542 2 461 2 421 2 422 2 131 2 171 4 69 2 424 2 296 4 135 2 546 4 264 2 396 2 594 4 265 2 428 2 429 2 268 2 269 2 513 10 70 2 137 2 335 2 103 2 104 2 516 2 517 8 472 4 141 2 218 2 107 2 340 8 221 2 142 2 178 2 369 2 143 2 521 2 182 12 478 12 370 2 560 2 77 2 562 2 481 10 279 2 78 2 227 2 
527 4 349 4 564 2 310 4 3 2 111 4 233 2 192 2 84 4 490 2 47 4 49 4 447 2 532 2 51 2 571 2 194 2 574 2 575 2 381 2 316 4 534 2 157 4 411 2 158 2 12 2 412 4 499 4 163 2 413 18 320 2 17 6 353 4 248 2 126 6 18 2 250 2 503 2 62 12 386 2 323 2 356 2 167 10 454 2 64 2 324 4 541 2 293 2 255 4 169 4 419 2 508 2 328 2 66 2 260 4 542 2 461 4 421 2 171 4 69 2 424 2 296 2 464 2 546 4 264 2 265 4 428 2 594 2 429 2 513 12 399 2 70 2 137 2 335 2 103 2 104 2 517 6 472 2 141 4 218 2 340 2 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 6 478 6 370 2 560 2 77 2 562 2 481 10 279 2 78 10 227 2 
527 4 483 4 308 2 349 4 564 2 309 2 310 2 3 2 189 2 111 2 233 6 192 2 84 4 47 2 313 2 49 2 447 2 532 6 51 2 571 2 194 2 574 2 575 2 381 6 241 2 316 2 534 2 157 2 411 2 158 2 412 4 243 2 499 4 163 6 413 24 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 6 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 6 296 2 331 2 135 2 546 2 264 2 396 2 428 6 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 8 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 10 279 2 78 2 227 2 
527 4 483 4 308 2 349 4 564 2 309 2 310 2 3 2 189 2 111 2 233 6 192 2 84 4 47 2 313 2 49 2 447 2 532 6 51 2 571 2 194 2 574 2 575 2 381 6 241 2 316 2 534 2 157 2 411 2 158 2 412 4 243 2 499 4 163 6 413 24 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 6 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 6 296 2 331 2 135 2 546 2 264 2 396 2 428 6 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 8 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 10 279 2 78 2 227 2 
527 4 483 4 308 2 349 4 564 2 309 2 310 2 3 2 189 2 111 2 233 6 192 2 84 4 47 2 313 2 49 2 447 2 532 6 51 2 571 2 194 2 52 2 574 2 575 2 381 6 241 2 316 2 534 2 157 2 411 2 158 2 412 4 243 2 499 4 163 6 413 24 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 6 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 6 296 2 331 2 135 2 546 2 264 2 396 2 428 6 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 8 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 10 279 2 78 2 227 2 
527 4 483 4 308 2 349 4 564 2 309 2 310 2 3 2 189 2 111 2 233 6 192 2 84 4 47 2 313 2 49 2 447 2 532 6 51 2 571 2 194 2 52 2 574 2 575 2 381 6 241 2 316 2 534 2 157 2 411 2 158 2 412 4 243 2 499 4 163 6 413 24 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 6 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 6 296 2 331 2 135 2 546 2 264 2 396 2 428 6 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 8 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 10 279 2 78 2 227 2 
527 4 483 4 485 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 8 2 51 2 571 2 194 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 4 296 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 436 2 77 2 562 2 481 8 279 2 78 4 227 2 
527 4 483 4 485 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 8 2 51 2 571 2 194 2 52 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 4 296 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 436 2 77 2 562 2 481 8 279 2 78 4 227 2 
527 8 349 4 564 2 309 2 310 4 3 2 111 4 233 4 192 2 84 4 490 4 47 4 313 2 49 4 447 2 532 4 51 2 571 2 194 2 52 2 574 2 575 2 381 4 241 2 316 4 156 2 534 2 157 4 411 2 158 2 12 2 412 4 288 2 499 4 163 4 413 26 320 2 17 12 353 4 248 2 126 12 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 6 388 2 454 4 64 2 324 2 587 2 293 4 505 2 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 4 97 2 69 2 424 4 296 2 135 2 546 4 264 2 396 2 594 2 265 4 428 4 429 2 268 2 175 2 513 12 399 2 70 2 299 2 137 2 335 2 103 2 104 6 177 2 517 8 472 2 141 4 218 2 340 8 221 2 142 2 276 2 178 2 369 2 143 2 521 2 182 12 478 12 370 2 561 2 560 2 77 2 562 2 481 12 279 2 78 4 227 2 
527 8 349 4 564 2 309 2 310 4 3 2 111 4 233 4 192 2 84 4 490 4 47 4 313 2 49 4 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 241 2 316 4 156 2 534 2 157 4 411 2 158 2 12 2 412 4 288 2 499 4 163 4 413 26 320 2 17 12 353 4 248 2 126 12 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 6 388 2 454 4 64 2 324 2 587 2 293 4 505 2 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 4 97 2 69 2 424 4 296 2 135 2 546 4 264 2 396 2 594 2 265 4 428 4 429 2 268 2 175 2 513 12 399 2 70 2 299 2 137 2 335 2 103 2 104 6 177 2 517 8 472 2 141 4 218 2 340 8 221 2 142 2 276 2 178 2 369 2 143 2 521 2 182 12 478 12 370 2 561 2 560 2 77 2 562 2 481 12 279 2 78 4 227 2 
280 2 527 8 349 8 564 4 309 4 310 8 3 4 111 8 233 4 192 4 84 8 312 2 490 2 47 4 313 4 49 4 447 4 532 4 51 4 571 4 194 4 574 4 575 4 381 4 316 4 534 4 157 8 411 4 158 4 12 2 412 8 499 10 163 4 413 28 320 4 17 20 353 4 248 4 126 20 18 4 250 4 62 14 323 4 386 4 356 4 167 10 388 4 454 8 64 4 324 2 587 4 505 2 293 4 255 4 169 12 207 2 507 4 419 4 508 4 23 4 328 8 260 4 542 4 461 4 421 4 131 4 171 10 69 4 424 4 296 4 135 4 546 8 264 4 396 4 428 4 265 4 594 4 429 4 268 4 399 2 513 24 70 4 299 2 137 4 335 4 103 4 104 4 177 4 517 8 472 4 141 4 218 4 340 14 221 4 142 6 276 2 178 4 143 4 369 8 521 4 182 20 478 20 370 4 560 4 77 4 562 4 481 12 279 4 78 6 227 4 
280 2 527 6 349 4 564 2 309 2 310 4 3 2 111 4 233 4 192 2 84 4 312 2 490 2 47 4 313 2 49 4 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 316 4 534 2 157 4 411 2 158 2 412 4 499 6 163 4 413 24 320 2 17 10 353 4 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 6 69 2 424 4 296 2 135 2 546 4 264 2 396 2 428 4 265 4 594 2 429 2 268 2 513 12 70 2 299 2 137 2 335 2 103 2 177 4 517 8 472 2 141 4 218 2 404 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 12 279 2 78 2 227 2 
527 6 349 8 564 4 309 4 310 4 3 4 111 4 233 6 192 4 84 8 47 2 313 4 49 2 447 4 532 6 51 4 571 4 194 4 574 4 575 4 381 6 241 2 316 2 534 6 157 4 411 6 158 4 412 8 499 8 163 6 413 28 536 2 320 4 17 20 353 2 248 4 126 20 18 4 250 4 62 12 323 4 386 4 356 4 167 4 388 4 454 8 64 4 587 4 293 6 255 2 169 12 507 4 419 4 508 4 23 4 328 6 260 2 542 4 461 2 421 4 131 4 171 8 97 2 69 4 424 6 296 4 135 4 546 4 264 4 396 4 428 6 265 2 594 4 429 4 268 4 513 20 70 4 299 2 137 4 335 4 103 4 177 2 517 8 472 4 141 2 218 4 404 2 340 12 221 4 142 4 276 2 178 4 143 4 369 6 521 4 182 20 478 20 370 4 560 4 77 4 562 4 481 10 279 4 78 4 227 4 
527 6 348 2 349 8 564 4 309 2 310 6 311 2 3 4 111 6 233 4 192 4 84 4 47 4 313 2 49 4 112 2 447 4 532 4 51 4 571 4 194 4 574 4 575 4 381 4 316 4 534 4 157 6 411 4 158 4 412 8 499 6 163 4 413 26 320 4 17 18 353 4 248 4 126 18 18 4 250 4 62 8 323 4 386 4 356 4 167 4 388 4 454 6 64 4 324 2 587 2 505 2 293 4 255 4 169 10 22 2 507 2 419 4 508 4 23 2 328 6 260 4 542 4 461 4 421 2 131 2 171 6 69 4 424 4 296 4 135 2 546 6 264 4 396 2 428 4 265 4 594 4 429 2 268 2 513 14 70 4 299 2 137 4 335 4 103 4 177 4 517 8 472 4 141 4 218 4 340 10 221 2 142 2 276 2 178 4 143 4 369 6 521 4 182 18 478 18 370 4 560 4 77 4 562 4 481 12 279 4 78 4 227 4 
280 4 527 6 348 2 349 4 564 2 309 2 310 6 311 2 3 2 111 6 233 4 192 2 84 6 312 4 490 4 47 6 313 2 49 4 112 2 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 316 6 534 2 157 6 411 2 158 2 412 4 499 8 163 4 413 30 320 2 17 10 353 6 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 6 169 6 22 2 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 6 421 2 131 2 171 8 69 2 424 4 296 2 135 2 546 6 264 2 396 2 428 4 265 6 594 2 429 2 268 2 513 14 70 2 299 2 137 2 335 2 103 2 177 6 517 10 472 2 141 6 218 2 404 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 33 2 370 2 560 2 77 2 562 2 481 16 279 2 78 2 227 2 
527 6 349 8 564 4 309 2 310 2 311 2 3 4 111 2 233 4 192 2 84 4 47 2 313 2 49 4 112 2 447 4 532 4 51 4 571 4 194 4 574 4 575 4 381 4 316 2 534 4 577 2 157 2 411 4 158 4 412 6 499 4 163 4 413 20 320 4 17 18 353 2 248 2 126 18 18 2 250 4 62 8 323 4 386 4 356 4 167 2 388 4 454 4 64 4 587 2 293 4 255 2 169 8 22 2 507 2 419 4 508 4 23 2 328 6 260 4 542 4 461 2 421 2 131 2 171 4 69 4 424 4 296 4 135 2 546 2 264 4 396 2 428 4 265 2 594 4 429 2 268 2 513 14 70 4 299 2 137 4 335 4 103 4 177 2 517 6 472 4 141 2 218 4 340 6 221 2 142 2 276 2 178 2 143 4 369 6 521 4 182 18 478 18 370 4 560 4 77 4 562 4 481 8 279 4 78 2 227 2 
280 2 527 6 349 4 564 2 309 2 310 4 311 2 3 2 111 4 233 4 192 2 84 6 312 2 490 2 47 4 313 2 49 4 112 2 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 316 4 534 2 577 2 157 4 411 2 158 2 412 4 499 6 163 4 413 24 320 2 17 10 353 4 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 4 169 6 22 2 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 6 69 2 424 4 296 2 135 2 546 4 264 2 396 2 428 4 265 4 594 2 429 2 268 2 513 12 70 2 299 2 137 2 335 2 103 2 177 4 517 8 472 2 141 4 218 2 404 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 33 2 370 2 560 2 77 2 562 2 481 12 279 2 78 2 227 2 
527 4 349 4 564 2 309 2 310 2 3 2 111 2 233 6 192 2 84 4 47 2 313 2 49 2 447 2 532 6 410 2 51 2 571 2 194 2 574 2 575 2 381 4 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 6 413 20 320 2 17 10 353 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 6 255 2 169 6 507 2 419 2 508 2 23 2 328 2 260 2 542 2 461 2 421 2 131 2 171 4 69 2 424 4 296 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 8 472 2 141 2 218 2 404 2 340 6 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 10 279 2 78 2 227 2 
527 8 308 2 349 4 564 2 309 2 310 4 3 2 111 4 233 8 192 2 84 4 490 2 313 2 47 4 49 4 447 2 532 8 51 2 571 2 194 2 574 2 575 2 381 8 241 2 316 4 156 2 534 2 317 2 157 4 411 2 158 2 12 2 412 4 499 6 163 8 413 34 320 2 56 2 17 12 353 4 248 2 126 12 18 2 250 2 503 2 62 10 323 2 386 2 356 2 167 8 388 2 454 2 64 2 324 2 587 2 293 8 505 2 255 4 169 4 207 2 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 6 97 2 69 2 424 8 296 2 135 2 464 2 546 4 264 2 396 2 594 2 265 4 428 8 429 2 268 2 175 2 513 14 399 2 70 2 299 2 137 2 335 2 103 2 104 6 177 2 517 12 472 2 141 4 218 2 340 6 221 2 142 4 276 2 178 2 369 4 143 2 521 2 181 2 182 12 478 12 370 2 560 2 77 2 562 2 481 16 279 2 78 8 227 2 
527 10 483 8 484 2 308 2 349 4 564 2 309 2 310 4 3 2 111 4 233 8 192 2 84 4 490 4 313 2 47 4 49 4 447 2 532 8 8 2 51 2 571 2 194 2 574 2 575 2 381 8 241 4 316 4 156 2 534 2 157 4 411 2 158 2 12 2 412 4 499 4 163 8 413 36 536 2 320 2 17 12 353 4 248 2 385 2 126 12 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 6 388 2 454 6 64 2 324 2 587 2 506 2 293 8 505 2 255 4 169 8 507 2 419 2 508 2 23 4 328 4 260 4 542 2 461 4 421 2 131 4 171 4 97 12 69 2 424 8 296 2 331 2 135 2 464 2 546 4 264 2 396 4 594 2 265 4 428 8 429 2 268 2 175 2 513 14 70 2 299 2 137 2 335 2 103 2 104 8 177 2 517 12 472 2 141 4 218 2 340 12 221 2 142 2 276 2 178 2 369 4 143 2 521 2 181 2 182 12 478 12 370 2 560 2 77 2 562 2 481 16 279 2 602 2 78 6 227 2 
527 10 483 8 484 2 308 2 349 4 564 2 309 2 310 4 3 2 111 4 233 8 192 2 84 4 490 4 313 2 47 4 49 4 447 2 532 8 8 2 51 2 571 2 194 2 574 2 575 2 381 8 241 4 316 4 156 2 534 2 157 4 411 2 158 2 12 2 412 4 499 6 163 8 413 36 536 2 320 2 17 12 353 4 248 2 385 2 126 12 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 8 388 2 454 6 64 2 324 2 587 2 506 2 293 8 505 2 255 4 169 8 207 4 507 2 419 2 508 2 23 4 328 4 260 4 542 2 461 4 421 2 131 4 171 6 97 12 69 2 424 8 296 2 331 2 135 2 464 2 546 4 264 2 396 4 594 2 265 4 428 8 429 2 268 2 175 2 513 14 70 2 299 2 137 2 335 2 103 2 104 8 177 2 517 12 472 2 141 4 218 2 340 12 221 2 142 4 276 2 178 2 369 4 143 2 521 2 181 2 182 12 478 12 370 2 560 2 77 2 562 2 481 16 279 2 602 2 78 6 227 2 
527 6 483 8 484 2 308 2 349 4 564 2 309 2 310 4 3 2 111 4 233 8 192 2 84 4 490 4 47 4 313 2 49 4 447 2 532 8 8 2 51 2 571 2 194 2 574 2 575 2 381 8 241 4 316 4 534 2 157 4 411 2 158 2 12 2 412 4 499 4 163 8 413 36 536 2 320 2 17 10 353 4 248 2 385 2 126 10 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 6 388 2 454 4 64 2 324 2 587 2 506 2 293 8 505 2 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 4 97 12 69 2 424 8 296 2 331 2 135 2 464 2 546 4 264 2 396 2 594 2 265 4 428 8 429 2 268 2 513 12 70 2 299 2 137 2 335 2 103 2 104 4 177 2 517 12 472 2 141 4 218 2 340 8 221 2 142 2 276 2 178 2 369 4 143 2 521 2 181 2 182 10 478 10 370 2 560 2 77 2 562 2 481 16 279 2 602 2 78 6 227 2 
527 6 349 4 564 2 309 2 310 4 3 2 111 4 233 2 192 2 84 4 490 2 47 4 313 2 49 4 447 2 532 2 51 2 571 2 194 2 574 2 575 2 381 2 316 4 534 2 157 4 411 2 158 2 12 2 412 4 499 4 163 2 413 20 320 2 17 10 353 4 248 2 126 10 18 2 250 2 503 2 62 10 323 2 386 2 356 2 167 6 388 2 454 4 64 2 324 2 587 2 293 2 505 2 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 4 69 2 424 2 296 2 135 2 464 2 546 4 264 2 396 2 594 2 265 4 428 2 429 2 268 2 513 14 399 2 70 2 137 2 335 2 103 2 104 4 517 6 472 2 141 4 218 2 340 8 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 10 279 2 78 6 227 2 
527 4 483 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 4 69 2 424 4 296 2 135 2 546 2 264 2 396 2 28 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 4 483 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 52 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 385 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 4 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 4 69 2 424 4 296 2 135 2 546 2 264 2 396 2 28 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 4 483 2 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 539 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 4 69 2 424 4 296 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 4 483 2 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 52 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 539 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 4 69 2 424 4 296 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 6 308 2 349 4 564 2 309 2 310 4 3 2 111 4 233 8 192 2 84 4 490 4 47 4 313 2 49 4 447 2 532 10 51 2 571 2 194 2 52 2 573 2 574 2 575 4 381 8 241 2 118 2 316 4 534 2 157 4 411 2 158 2 12 2 412 4 499 4 163 10 413 36 536 2 320 4 17 10 353 4 248 2 126 10 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 6 388 2 454 4 64 2 324 2 587 2 293 10 505 2 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 509 2 461 4 421 2 131 2 171 4 97 2 69 4 424 8 296 2 135 2 546 4 264 2 396 2 594 2 265 4 428 8 429 2 268 2 513 12 399 2 70 2 299 2 137 2 335 2 103 2 104 4 516 2 177 2 517 12 472 2 141 4 218 2 340 8 221 2 142 2 276 2 178 2 369 4 143 2 521 2 181 2 182 10 478 10 370 2 560 2 77 2 562 2 481 16 279 2 78 4 227 2 
527 6 483 2 440 2 484 2 308 2 349 4 564 2 309 2 310 4 3 2 111 4 233 6 192 2 84 4 490 4 47 4 313 2 49 4 447 2 532 6 51 2 571 2 194 2 574 2 575 2 381 6 241 4 316 4 534 2 157 4 411 2 158 2 12 2 412 4 288 2 499 4 163 6 413 32 536 2 320 2 17 10 353 4 248 2 126 10 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 6 388 2 454 4 64 2 324 2 587 2 293 6 505 2 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 4 97 6 69 2 424 6 296 2 135 2 546 4 264 2 396 2 594 2 265 4 428 6 429 2 268 2 513 12 399 2 70 2 299 2 137 2 335 2 103 2 104 4 177 2 517 10 472 2 141 4 218 2 340 8 221 2 142 2 276 2 178 2 369 4 143 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 14 279 2 78 4 227 2 
527 6 483 2 440 2 484 2 308 2 349 4 564 2 309 2 310 4 3 2 111 4 233 6 192 2 84 4 490 4 47 4 313 2 49 4 447 2 532 6 51 2 571 2 194 2 52 2 574 2 575 2 381 6 241 4 316 4 534 2 157 4 411 2 158 2 12 2 412 4 288 2 499 4 163 6 413 32 536 2 320 2 17 10 353 4 248 2 126 10 18 2 250 2 503 2 62 8 323 2 386 2 356 2 167 6 388 2 454 4 64 2 324 2 587 2 293 6 505 2 255 4 169 6 507 2 419 2 508 2 23 2 328 4 260 4 542 2 461 4 421 2 131 2 171 4 97 6 69 2 424 6 296 2 135 2 546 4 264 2 396 2 594 2 265 4 428 6 429 2 268 2 513 12 399 2 70 2 299 2 137 2 335 2 103 2 104 4 177 2 517 10 472 2 141 4 218 2 340 8 221 2 142 2 276 2 178 2 369 2 143 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 14 279 2 78 4 227 2 
527 4 483 4 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 536 2 320 2 17 10 353 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 6 69 2 424 4 296 2 331 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 32 2 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 4 483 4 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 6 69 2 424 4 296 2 331 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 339 2 340 6 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 4 483 4 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 52 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 320 2 17 10 353 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 456 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 6 69 2 424 4 296 2 331 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 339 2 340 6 221 2 142 2 276 2 178 2 143 2 369 2 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 4 483 4 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 51 2 571 2 194 2 52 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 536 2 320 2 17 10 353 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 6 69 2 424 4 296 2 331 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 32 2 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 2 227 2 
527 4 483 4 485 2 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 8 2 51 2 571 2 194 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 536 2 320 2 17 10 353 2 249 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 4 296 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 4 227 2 
527 4 483 4 485 2 484 2 349 4 564 2 309 2 310 2 3 2 111 2 233 4 192 2 84 4 47 2 313 2 49 2 447 2 532 4 8 2 51 2 571 2 194 2 52 2 574 2 575 2 381 4 241 2 316 2 534 2 157 2 411 2 158 2 412 4 499 4 163 4 413 20 536 2 320 2 17 10 353 2 249 2 248 2 126 10 18 2 250 2 62 6 323 2 386 2 356 2 167 2 388 2 454 4 64 2 587 2 293 4 255 2 169 6 507 2 419 2 508 2 23 2 328 4 260 2 542 2 461 2 421 2 131 2 171 4 97 8 69 2 424 4 296 2 135 2 546 2 264 2 396 2 428 4 265 2 594 2 429 2 268 2 513 10 70 2 299 2 137 2 335 2 103 2 177 2 517 6 472 2 141 2 218 2 340 6 221 2 142 2 276 2 178 2 143 2 369 4 521 2 182 10 478 10 370 2 560 2 77 2 562 2 481 8 279 2 78 4 227 2 
22 2 251 2 413 2 
22 2 251 2 527 2 413 2 
22 2 251 2 265 2 287 2 413 2 27 2 596 2 
22 2 34 2 527 2 129 2 469 2 60 2 10 2 159 2 363 2 225 2 99 2 265 4 352 2 392 2 351 2 152 2 219 2 85 6 544 2 128 2 151 2 315 2 
22 2 34 2 527 2 129 2 469 2 60 2 10 2 159 2 363 2 225 2 99 2 265 4 352 2 392 2 351 2 152 2 219 2 85 6 544 2 128 2 151 2 315 2 
527 44 305 8 306 260 79 38 441 8 374 2 307 16 442 8 444 16 82 8 150 2 230 8 376 8 236 2 377 24 531 112 6 4 7 8 240 1 379 2 533 24 380 2 9 16 155 16 242 42 11 8 13 36 448 2 160 16 161 8 14 16 86 30 162 32 244 98 450 8 87 2 535 16 245 8 88 98 246 16 451 44 537 24 322 4 247 16 384 8 453 64 167 16 389 32 92 44 326 6 93 28 254 8 22 32 455 24 24 8 259 18 457 2 391 2 460 8 96 40 543 8 329 16 462 16 394 2 463 112 263 62 545 8 330 50 395 16 465 8 547 66 333 50 397 8 398 4 334 8 266 16 267 24 173 2 100 4 466 32 176 8 548 8 550 8 551 24 401 50 471 8 270 16 337 8 106 64 473 8 555 28 403 8 556 8 272 2 476 10 273 8 475 8 557 14 405 8 179 8 180 8 277 56 558 12 477 24 479 16 406 8 563 8 345 12 347 4 482 70 35 6 281 24 36 8 37 2 38 8 186 74 488 2 489 16 40 8 565 8 187 6 41 24 566 16 110 8 568 32 491 8 49 16 50 8 493 2 572 12 285 16 116 24 120 2 197 8 286 16 200 8 55 52 290 2 123 8 57 8 582 4 581 8 414 16 501 16 124 16 583 16 125 76 59 2 584 24 502 8 60 16 61 24 416 30 357 16 205 4 65 28 504 8 292 8 206 8 417 38 294 26 589 16 209 8 361 8 360 8 362 8 295 2 364 2 211 16 420 6 68 2 134 34 136 8 214 56 426 16 590 2 215 8 591 16 510 8 365 4 511 8 514 2 515 16 138 2 217 8 300 24 518 2 139 8 595 20 72 2 431 8 140 34 220 2 144 8 434 2 598 2 303 8 435 60 522 8 224 34 225 8 372 2 75 52 437 2 524 8 373 8 601 16 78 16 
527 34 305 6 306 202 79 30 441 6 374 4 307 12 442 6 1 2 444 12 82 6 150 2 230 6 376 6 236 4 377 18 531 84 6 8 7 6 379 4 533 18 380 4 9 12 155 12 242 34 11 6 13 30 448 4 160 12 161 6 14 12 86 24 162 24 244 74 450 6 87 2 535 12 245 6 88 74 246 14 451 34 537 18 322 4 247 12 384 6 453 48 167 12 389 24 92 34 326 6 93 20 254 6 22 24 455 18 24 6 259 16 457 2 391 2 460 6 96 30 543 6 329 12 462 12 394 2 463 88 263 48 545 6 330 40 395 12 465 6 547 50 333 40 397 6 334 6 266 12 267 18 173 2 100 8 466 20 176 6 548 6 550 6 551 18 401 40 471 6 270 12 337 6 106 48 473 6 555 20 403 6 556 6 272 2 476 8 273 6 475 6 557 12 405 6 179 6 180 6 277 42 558 10 477 18 479 12 406 6 563 6 345 10 347 8 482 54 35 6 281 18 36 6 37 2 38 6 186 56 488 4 489 12 40 6 565 6 187 6 41 18 566 12 110 6 568 24 491 4 49 12 50 6 493 2 572 10 285 12 116 18 120 2 197 6 286 12 200 6 55 40 290 2 123 6 57 6 581 6 582 4 414 12 501 12 124 12 583 12 125 58 59 2 584 18 502 6 60 12 61 16 416 24 357 12 205 4 65 20 504 6 292 6 206 6 417 30 294 22 589 12 209 6 361 6 360 6 362 6 295 2 364 2 211 12 420 12 68 4 134 28 136 6 214 42 426 12 590 2 215 6 591 12 510 6 365 4 511 6 514 2 515 12 217 6 300 18 518 2 139 6 595 14 72 2 431 6 140 28 220 2 144 6 434 2 598 2 303 6 435 46 522 6 224 28 225 6 372 4 75 40 437 2 524 6 373 6 601 12 78 12 
527 34 305 6 306 202 79 30 441 6 374 2 307 20 442 6 443 8 444 12 82 6 150 2 230 6 376 6 236 2 377 18 531 84 6 4 7 6 379 2 533 18 314 2 380 2 9 12 155 12 242 32 11 6 13 30 448 2 160 12 161 6 14 12 86 24 162 24 244 72 450 6 87 2 535 12 245 6 88 82 246 14 451 34 537 18 322 4 247 12 384 6 453 48 167 12 389 24 92 34 326 6 93 28 254 6 22 24 455 18 24 6 259 16 457 2 391 2 460 6 96 30 543 6 329 12 462 12 394 2 463 88 263 48 545 6 330 40 395 12 465 6 547 50 333 40 397 6 334 6 266 12 267 18 173 2 100 4 466 28 176 6 548 6 550 6 551 18 401 38 471 6 270 12 337 6 106 48 473 6 555 28 403 6 556 6 272 2 476 8 273 6 475 6 557 12 405 6 179 6 180 6 277 42 558 10 477 18 479 12 406 6 563 6 345 10 347 4 482 54 35 6 281 18 36 6 37 2 38 6 186 56 488 2 489 12 40 6 565 6 187 6 41 18 566 14 110 6 568 24 491 2 49 12 50 6 493 2 572 10 285 12 116 18 120 2 197 6 286 12 200 6 55 40 290 2 123 6 57 6 581 6 582 4 414 12 501 12 124 12 583 12 125 58 59 2 584 18 502 6 60 12 61 14 416 24 357 12 205 4 65 28 504 6 292 6 206 6 417 30 294 22 589 12 209 6 361 6 360 6 362 6 295 2 364 2 211 12 420 6 68 2 134 28 136 6 214 42 426 12 590 2 215 6 591 12 510 6 365 4 511 6 514 2 515 12 217 6 300 18 518 2 139 6 595 22 72 2 431 6 140 28 220 2 144 6 434 2 598 2 303 6 435 46 522 6 224 26 225 6 372 2 75 40 437 2 524 6 373 6 601 12 78 12 
527 106 305 24 306 568 79 88 441 12 374 4 307 32 442 12 529 10 0 22 1 2 444 36 82 12 150 2 230 12 231 12 376 24 236 4 377 58 446 22 531 270 6 8 7 12 379 4 533 150 380 6 9 42 155 24 242 94 11 24 318 24 13 54 448 4 160 26 161 14 14 48 86 64 162 72 244 282 450 10 319 24 164 12 87 2 535 26 245 12 88 216 246 22 451 100 537 38 321 12 322 6 247 24 384 10 453 176 91 2 167 30 389 118 92 100 326 10 93 48 254 24 22 72 455 36 24 36 259 28 457 2 391 2 460 12 96 92 543 12 329 26 462 48 394 2 463 310 263 150 545 16 330 100 395 36 465 24 547 158 333 100 397 24 398 28 334 12 266 26 267 60 173 2 100 12 466 48 176 26 548 18 467 22 550 12 551 98 401 134 471 34 270 26 337 46 106 102 473 24 555 48 402 22 403 18 556 12 272 2 476 24 273 12 475 18 557 18 405 24 179 46 180 12 277 144 558 18 477 60 479 52 406 24 563 12 345 18 347 8 482 168 35 8 281 64 36 24 37 2 38 46 186 182 488 4 489 26 40 12 565 24 187 8 408 22 41 66 566 48 110 24 568 78 491 18 49 36 50 12 493 2 572 18 285 48 195 2 115 22 116 48 120 2 197 24 286 86 200 12 55 124 290 2 123 46 291 22 57 12 581 24 582 4 414 26 501 36 124 26 583 36 59 2 125 160 584 60 502 24 60 24 61 66 416 88 357 26 205 6 65 48 504 18 292 12 206 12 417 88 294 40 589 52 209 24 361 12 360 24 362 12 295 2 364 2 211 26 420 12 68 4 134 64 136 14 214 88 426 26 590 2 215 12 591 36 510 24 365 4 511 40 514 2 515 36 138 2 217 12 300 66 518 4 139 14 595 36 72 2 431 24 140 64 433 10 220 2 144 12 434 2 598 2 303 24 435 148 522 24 224 128 225 12 372 4 75 124 437 2 524 40 373 34 601 48 304 2 78 36 
527 140 305 36 306 790 79 88 441 12 374 4 307 32 442 12 529 8 0 28 1 2 444 48 82 12 150 2 230 12 231 12 376 24 236 4 377 58 446 32 531 308 6 8 7 12 379 4 533 234 380 6 9 42 155 24 242 116 318 68 11 24 13 54 448 4 160 26 161 14 14 72 86 64 162 96 244 326 450 10 319 48 164 24 87 2 535 26 245 12 88 216 246 26 451 136 537 38 321 24 322 6 247 24 384 10 453 196 540 28 167 32 389 164 92 136 326 10 93 48 254 36 22 96 455 36 24 60 259 34 457 2 391 2 460 12 96 92 543 12 329 26 462 72 394 2 463 504 263 210 545 16 330 130 395 48 465 24 547 158 333 130 397 24 398 38 334 12 266 26 267 84 173 2 100 12 466 48 176 36 548 18 467 28 550 12 549 4 551 118 401 144 471 28 270 26 337 56 106 102 473 24 555 48 402 28 403 18 556 12 272 2 476 28 273 12 475 18 557 18 405 24 179 56 180 12 277 210 558 22 477 84 341 20 479 58 406 24 563 12 345 22 347 8 482 168 35 8 281 62 36 24 37 2 38 56 186 182 488 4 489 26 40 12 565 36 187 8 408 32 41 66 566 48 110 36 568 84 491 18 49 48 50 12 493 2 572 22 285 48 195 2 115 32 116 60 120 2 197 24 286 102 200 12 55 172 290 2 123 56 291 32 57 12 582 4 581 24 414 26 501 48 124 26 583 48 125 208 59 2 584 66 502 24 60 24 61 76 416 84 357 26 205 6 65 48 504 18 292 12 206 12 417 88 294 42 589 58 209 24 361 12 360 24 362 12 295 2 364 2 211 26 420 12 68 4 134 82 136 14 214 88 426 26 590 2 215 12 591 48 510 24 365 4 511 46 514 2 515 48 138 2 217 12 300 66 518 4 139 14 595 36 72 2 431 24 140 82 433 8 220 2 144 12 434 2 598 2 303 36 435 208 522 24 224 138 225 12 372 4 75 172 437 2 524 46 373 28 601 72 304 2 78 36 
228 2 527 16 305 4 306 166 79 24 441 2 307 8 529 2 0 4 444 6 230 2 376 4 530 2 377 12 446 4 531 60 7 2 238 2 533 26 9 10 155 4 242 18 318 4 11 4 159 2 13 14 160 6 161 6 14 8 162 12 86 18 244 62 450 4 319 4 164 2 535 10 245 2 88 64 451 16 246 2 165 2 537 8 321 2 247 4 384 6 453 34 167 6 389 20 92 16 326 2 93 18 254 4 22 12 455 6 24 6 259 4 391 1 460 2 96 20 543 2 329 6 462 8 463 46 263 24 545 4 330 16 395 6 465 4 547 46 333 16 397 4 265 1 398 4 266 6 267 10 466 22 548 4 467 4 551 20 550 2 549 2 401 26 471 8 270 10 554 2 337 10 106 26 473 6 555 18 402 4 403 4 556 2 273 2 475 4 557 6 405 4 179 10 180 2 277 28 558 2 477 10 341 2 278 2 479 10 406 6 563 2 345 2 482 46 281 12 36 4 38 10 186 122 489 6 40 2 565 4 408 4 41 16 566 8 110 4 568 16 49 4 50 2 572 2 285 8 115 4 116 8 197 4 286 20 200 2 55 20 123 10 291 4 57 2 581 4 414 10 501 6 583 6 124 6 584 16 125 24 502 6 60 4 61 10 63 2 416 20 357 6 65 18 504 4 292 2 206 2 417 24 294 4 208 2 589 10 209 4 361 2 360 4 362 2 211 6 67 10 133 2 134 10 136 4 214 22 426 6 215 2 591 6 510 4 592 4 511 10 515 4 217 2 300 16 139 4 595 14 431 4 140 10 433 2 303 4 522 4 435 24 223 4 224 20 225 2 75 20 524 10 373 8 601 8 78 6 
22 2 527 4 147 2 95 2 73 2 274 2 191 2 180 2 44 2 237 2 167 4 480 2 298 2 174 2 525 2 325 2 78 4 
22 2 527 4 147 2 258 2 95 2 73 2 338 2 368 2 191 4 180 2 44 2 237 2 167 4 265 2 480 2 113 2 298 2 174 2 525 2 325 2 78 4 252 2 526 2 
22 2 527 2 359 2 94 2 95 6 258 2 148 2 212 2 191 4 44 2 237 2 265 2 113 2 174 2 468 2 432 2 338 2 368 2 383 2 180 2 167 2 480 2 525 2 78 2 526 2 
515 2 527 4 294 4 306 20 24 2 259 4 140 4 283 2 150 2 55 4 272 2 451 2 220 4 463 10 110 2 83 8 263 10 330 4 59 4 125 4 277 2 585 2 435 6 333 4 75 4 49 2 29 2 438 2 593 2 512 2 92 2 101 8 
15 2 145 2 
235 2 15 2 145 2 
527 28 305 6 79 8 306 214 374 6 307 4 0 6 444 8 82 2 150 2 230 2 231 2 376 4 377 12 236 2 446 4 531 52 6 4 7 2 379 2 533 44 380 4 9 4 155 2 242 18 318 16 11 4 13 2 448 2 160 2 161 4 14 12 86 4 162 16 244 46 450 4 319 8 164 4 87 2 535 2 245 2 88 24 246 14 451 26 537 4 321 4 322 6 247 4 384 8 453 22 540 6 91 2 167 4 389 26 92 26 93 4 254 6 22 16 455 2 24 10 259 18 457 2 391 2 460 2 96 14 543 2 329 2 393 2 462 12 463 100 263 36 545 4 330 34 395 8 465 4 332 2 547 16 333 34 397 4 398 6 334 2 266 2 267 14 100 8 466 6 176 10 548 4 467 4 550 2 549 4 551 18 401 10 471 2 270 2 337 8 473 4 106 10 555 4 402 4 403 4 272 2 475 4 476 10 405 4 179 8 277 38 558 10 477 14 341 2 479 6 406 4 563 2 345 10 347 4 482 20 35 6 281 10 36 4 37 2 38 8 282 2 186 86 488 4 489 2 40 2 565 6 187 6 408 4 41 8 566 8 110 4 49 6 50 2 493 2 572 10 285 8 195 2 115 4 116 10 120 2 197 4 286 16 200 2 55 30 123 8 290 2 291 6 57 2 581 4 582 2 414 2 501 8 124 2 583 8 59 2 125 34 584 6 502 4 60 2 61 6 416 6 357 2 65 4 504 4 292 2 206 2 417 8 294 16 589 6 209 4 361 2 360 4 362 2 295 2 364 2 211 2 420 16 68 2 134 26 136 2 214 10 426 2 590 2 215 2 591 8 510 4 365 2 511 8 514 2 515 6 217 2 300 8 518 4 139 4 595 4 72 2 431 4 140 26 433 6 220 2 144 2 434 2 598 2 303 6 435 34 522 4 224 18 225 2 372 2 75 30 437 2 76 2 524 8 373 4 601 12 304 2 78 6 
527 14 305 2 79 4 306 76 441 2 307 2 444 4 82 2 150 2 230 2 376 2 377 4 531 20 7 2 533 4 9 2 155 4 242 8 11 2 13 8 160 2 14 4 86 2 162 8 244 16 87 2 535 2 245 2 88 12 451 12 246 10 537 4 322 4 247 4 453 14 167 2 389 12 92 12 326 6 93 2 254 2 22 8 455 4 24 2 457 2 259 10 391 2 460 2 261 2 96 6 543 2 329 2 462 4 463 34 263 18 545 2 330 18 395 4 465 2 547 8 333 18 397 2 398 2 334 2 266 2 267 6 466 14 548 2 550 2 551 6 401 6 471 2 270 2 337 2 473 2 106 10 555 2 403 2 272 2 476 2 475 2 405 2 179 2 180 2 277 12 558 6 477 6 479 2 406 2 183 4 563 2 345 6 482 10 35 4 281 6 36 2 37 2 38 2 186 20 489 2 40 2 565 2 187 4 41 4 566 4 110 2 568 4 491 2 49 4 50 2 493 2 572 6 494 2 285 4 116 6 120 2 197 2 286 4 200 2 55 14 123 2 290 2 57 2 582 2 581 2 414 2 501 4 124 2 583 4 59 2 125 20 584 2 502 2 60 2 61 4 416 2 357 2 65 2 504 2 292 2 206 2 417 4 294 12 589 2 209 2 361 2 360 2 362 2 295 2 364 2 211 2 134 14 214 10 426 2 590 2 215 2 591 4 510 2 365 2 511 2 514 2 515 4 217 2 300 4 518 2 595 2 72 2 431 2 140 14 220 2 434 2 303 2 435 16 522 2 224 4 225 2 75 14 437 2 524 2 373 2 601 4 78 4 
495 2 527 2 546 2 327 2 45 2 516 2 157 2 411 2 149 2 594 2 586 2 163 2 413 2 310 2 171 2 296 4 575 4 
391 2 346 2 378 2 390 2 
527 6 306 24 486 2 80 2 186 2 229 4 81 2 284 2 39 2 2 4 42 6 350 6 567 2 445 2 409 2 48 4 193 2 116 2 154 2 576 2 496 2 497 2 54 10 449 2 201 2 55 6 413 2 579 2 580 2 451 6 16 2 452 2 538 2 125 20 166 2 60 4 89 2 354 2 387 2 453 4 355 2 20 2 92 6 168 2 170 2 358 2 294 4 455 4 257 2 25 2 259 4 132 2 26 2 463 12 263 8 213 2 330 6 425 2 591 2 333 6 297 2 265 2 366 2 216 2 515 2 367 2 400 2 31 2 72 2 301 16 140 6 106 2 368 2 519 2 597 2 371 2 523 2 435 8 599 2 225 4 342 2 75 6 343 2 600 2 344 2 146 2 226 2 
527 6 306 28 486 2 80 2 186 2 229 4 81 2 284 2 39 2 2 4 42 6 350 6 567 2 232 2 445 2 409 2 48 4 193 2 116 2 154 2 576 2 496 2 497 2 54 10 449 2 201 2 55 6 413 2 579 2 580 2 451 6 16 2 452 2 538 2 125 20 166 2 60 4 89 2 354 2 387 2 453 4 355 2 20 2 92 6 168 2 170 2 358 2 294 6 455 4 257 2 25 2 259 6 132 2 26 2 463 14 263 8 213 2 330 8 425 2 591 2 333 8 297 2 265 2 366 2 216 2 515 2 367 2 400 2 31 2 72 2 301 18 140 8 106 2 368 2 519 2 597 2 371 2 523 2 435 8 599 2 225 4 342 2 75 6 343 2 600 2 344 2 146 2 226 2 

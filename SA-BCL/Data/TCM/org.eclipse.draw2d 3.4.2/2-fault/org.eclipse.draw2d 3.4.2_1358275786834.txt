#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.eclipse.draw2d.test.XYLayoutTest:testPreferredSize()V ERROR java.lang.NullPointerException 315 291 
org.eclipse.draw2d.test.RayTest:test_length()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_happypath()V ERROR java.lang.NullPointerException 315 (116,199) (116,199) 
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_bugzilla130042()V ERROR java.lang.NullPointerException 315 (116,199) (116,199) 
org.eclipse.draw2d.test.PrecisionPointTest:testEquals()V PASSED
org.eclipse.draw2d.test.ColorConstantTest:test_ColorConstantInit()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testAntialias()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testFillRules()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCapAA()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testPatterns()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBendpoints()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBlockedPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformed()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformedInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemovePath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testOffsetShrink()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit2()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendMiss()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testShortestPathOutsideOval()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottom()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottomInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTop()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTopInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSubpath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangent()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangentInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationSymmetry()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationValues()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_sameBehavior()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop2()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testHardWrapping()V ERROR java.lang.NullPointerException 315 221 291 
org.eclipse.draw2d.test.TextFlowWrapTest:testSoftWrapping()V ERROR java.lang.NullPointerException 315 221 291 
org.eclipse.draw2d.test.TextFlowWrapTest:testTruncatedWrapping()V ERROR java.lang.NullPointerException 315 221 291 
org.eclipse.draw2d.test.TextFlowWrapTest:testInlineFlow()V ERROR java.lang.NullPointerException 315 221 291 
org.eclipse.draw2d.test.TextFlowWrapTest:testNestedInlineFlows()V ERROR java.lang.NullPointerException 315 221 291 
org.eclipse.draw2d.test.GraphicsClipping:testSimpleClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testTranslatedClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testZoomedClip()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testImageRotation()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testRotatingImagesWithDifferentDepths()V PASSED
org.eclipse.draw2d.test.TextualTests:testLineRootBidiCommit()V ERROR java.lang.NullPointerException 315 221 291 
org.eclipse.draw2d.test.TextualTests:testGetFirstAndLastOffsetForLine()V ERROR java.lang.NullPointerException 315 221 291 
org.eclipse.draw2d.test.PointListTests:testIntersects()V PASSED
org.eclipse.draw2d.test.PrecisionDimensionTest:testEquals()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_Thumbnail()V ERROR java.lang.NullPointerException (36,99,132) (36,99,132) (36,99,132) 285 
org.eclipse.draw2d.test.ThumbnailTest:test_EmptyThumbnail()V ERROR java.lang.NullPointerException (36,99,132) (36,99,132) (36,99,132) 285 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.eclipse.draw2d.geometry.PrecisionDimension:PrecisionDimension(DD)V
org.eclipse.draw2d.SWTGraphics:initTransform(Z)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:scale(FF)V
org.eclipse.draw2d.graph.Segment:intersects(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:addObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.text.FlowFigure:FlowFigure()V
org.eclipse.draw2d.graph.Path:addAllSegmentsBetween(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.Figure:setParent(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.SWTGraphics:setGraphicHints(I)V
org.eclipse.draw2d.SWTGraphics:checkPaint()V
org.eclipse.draw2d.Figure:getBorder()Lorg.eclipse.draw2d.Border;
org.eclipse.draw2d.SWTGraphics:setLineStyle(I)V
org.eclipse.draw2d.text.BlockFlowLayout:BlockFlowLayout(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.geometry.PointList:removeAllPoints()V
org.eclipse.draw2d.graph.Path:createVisibilityGraph(Ljava.util.List;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:updateInts()V
org.eclipse.draw2d.graph.ShortestPathRouter:resetVertices()V
org.eclipse.draw2d.geometry.Rectangle:union(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.AdvancedGraphicsTests.4:run()V
org.eclipse.draw2d.SWTGraphics:pushState()V
org.eclipse.draw2d.graph.ShortestPathRouter:dirtyPathsOn(Lorg.eclipse.draw2d.graph.Vertex;)Z
org.eclipse.draw2d.geometry.Insets:getWidth()I
org.eclipse.draw2d.graph.Path:addObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.Figure:paint(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.graph.ShortestPathRouter:labelVertex(Lorg.eclipse.draw2d.graph.Segment;JLorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Path:getBendPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.SWTGraphics:setLineJoin(I)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomRightIntersection()V
org.eclipse.draw2d.test.AdvancedGraphicsTests:displayImage()V
org.eclipse.draw2d.geometry.Point:getCopy()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.PointList:addPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexForIntersections(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.geometry.Ray:length()D
org.eclipse.draw2d.Figure:getClientArea(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Obstacle:reset()V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineChildrenPaths()V
org.eclipse.draw2d.Figure:repaint(IIII)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Obstacle:Obstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.graph.ShortestPathRouter;)V
org.eclipse.draw2d.geometry.PointList:addPoint(II)V
org.eclipse.draw2d.graph.Vertex:getSpacing()I
org.eclipse.draw2d.geometry.Rectangle:preciseWidth()D
org.eclipse.draw2d.DeferredUpdateManager.UpdateRequest:run()V
org.eclipse.draw2d.geometry.Rectangle:getPosition(Lorg.eclipse.draw2d.geometry.Point;)I
org.eclipse.draw2d.graph.Vertex:shrink()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestDeformed()V
org.eclipse.draw2d.SWTGraphics:setAlpha(I)V
org.eclipse.draw2d.geometry.PrecisionPoint:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.geometry.Geometry:productSign(JJ)I
org.eclipse.draw2d.graph.ShortestPathRouter:bendPaths()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:setForegroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.Figure:getFlag(I)Z
org.eclipse.draw2d.Graphics:translate(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.Rectangle:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Obstacle:shrinkVertices()V
org.eclipse.draw2d.graph.Path:fullReset()V
org.eclipse.draw2d.FocusTraverseManager:getNextFocusableFigure(Lorg.eclipse.draw2d.IFigure;Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.graph.Vertex:Vertex(IILorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:refreshChildrenEndpoints(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics.State:clone()Ljava.lang.Object;
org.eclipse.draw2d.Figure:paintClientArea(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.graph.Vertex:Vertex(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Path:invertPriorVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathAbove(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.SWTGraphics:checkSharedClipping()V
org.eclipse.draw2d.geometry.Insets:Insets(IIII)V
org.eclipse.draw2d.graph.ShortestPathRouter:addPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.text.BlockFlow:BlockFlow()V
org.eclipse.draw2d.Figure:getClientArea()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V
org.eclipse.draw2d.SWTGraphics:drawString(Ljava.lang.String;II)V
org.eclipse.draw2d.geometry.Dimension:Dimension()V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle()V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(IIII)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:LineSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;III)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setWidth(D)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathRight(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.geometry.Point:getDistance(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.geometry.PointList:getPoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Path:setStartPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionTop()V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.RectangleFigure:RectangleFigure()V
org.eclipse.draw2d.LightweightSystem.EventHandler:focusGained(Lorg.eclipse.swt.events.FocusEvent;)V
org.eclipse.draw2d.Figure:isValid()Z
org.eclipse.draw2d.geometry.PointList:addAll(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.graph.ShortestPathRouter:testOffsetSegmentForIntersections(Lorg.eclipse.draw2d.graph.Segment;ILorg.eclipse.draw2d.graph.Path;)I
org.eclipse.draw2d.graph.Path:setEndPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.ShortestPathRouter:resetObstacleExclusions()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:AntialiasSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;IILorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.DeferredUpdateManager:performUpdate()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomLeftIntersection()V
org.eclipse.draw2d.StackLayout:layout(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.geometry.Rectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.geometry.PointList:size()I
org.eclipse.draw2d.Figure:repaint(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.parts.Thumbnail:Thumbnail()V
org.eclipse.draw2d.SWTGraphics:translate(II)V
org.eclipse.draw2d.LightweightSystem.EventHandler:focusLost(Lorg.eclipse.swt.events.FocusEvent;)V
org.eclipse.draw2d.Figure:getBounds()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestOffsetShrink()V
org.eclipse.draw2d.Graphics:fillRectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:getPreciseCopy()Lorg.eclipse.draw2d.geometry.PrecisionRectangle;
org.eclipse.draw2d.SWTGraphics:translatePointArray([III)V
org.eclipse.draw2d.Figure:getLayoutManager()Lorg.eclipse.draw2d.LayoutManager;
org.eclipse.draw2d.ColorConstants.SystemColorFactory.1:run()V
org.eclipse.draw2d.geometry.PrecisionDimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.SWTEventDispatcher:dispatchFocusGained(Lorg.eclipse.swt.events.FocusEvent;)V
org.eclipse.draw2d.SWTGraphics:checkFill()V
org.eclipse.draw2d.geometry.Rectangle:isEmpty()Z
org.eclipse.draw2d.SWTGraphics:popState()V
org.eclipse.draw2d.graph.ShortestPathRouter:solve()Ljava.util.List;
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Vertex:grow()V
org.eclipse.draw2d.SWTGraphics:restoreState(Lorg.eclipse.draw2d.SWTGraphics.State;)V
org.eclipse.draw2d.graph.Vertex:addPath(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:performTranslate(II)V
org.eclipse.draw2d.test.GraphicsClipping:graphicsClip()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Segment:intersects(IIII)Z
org.eclipse.draw2d.SWTGraphics:restoreState()V
org.eclipse.draw2d.graph.ShortestPathRouter:countVertices()V
org.eclipse.draw2d.graph.Obstacle:growVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.graph.ShortestPathRouter:growObstacles()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:run()V
org.eclipse.draw2d.graph.ShortestPathRouter:internalAddObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.geometry.PrecisionRectangle:setX(D)V
org.eclipse.draw2d.IFigure.NoInsets:NoInsets()V
org.eclipse.draw2d.geometry.Rectangle:bottom()I
org.eclipse.draw2d.Figure:repaint()V
org.eclipse.draw2d.SWTGraphics:setBackgroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.PointList:getPoint(Lorg.eclipse.draw2d.geometry.Point;I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.PrecisionRectangle:performScale(D)V
org.eclipse.draw2d.graph.ShortestPathRouter:labelPaths()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionBottom()V
org.eclipse.draw2d.graph.Path:resetPartial()V
org.eclipse.draw2d.Shape:Shape()V
org.eclipse.draw2d.geometry.PointList:removePoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.PrecisionDimension:updateInts()V
org.eclipse.draw2d.graph.Path:reconnectSubPaths()V
org.eclipse.draw2d.text.FlowPage:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.graph.ShortestPathRouter:regenerateChildPaths(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;II)Ljava.util.List;
org.eclipse.draw2d.Figure:isVisible()Z
org.eclipse.draw2d.graph.Path:isObstacleVisible(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.SWTGraphics:clipRect(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.Rectangle:getCopy()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.PointList:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.ImageUtilities:createRotatedImage(Lorg.eclipse.swt.graphics.Image;)Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.graph.Obstacle:containsProper(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.graph.Path:addSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;Ljava.util.List;)V
org.eclipse.draw2d.graph.ShortestPathRouter:updateObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Path:generateShortestPath(Ljava.util.List;)Z
org.eclipse.draw2d.geometry.Rectangle:resize(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:removeObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Segment:getSlope()D
org.eclipse.draw2d.graph.Path:refreshExcludedObstacles(Ljava.util.List;)V
org.eclipse.draw2d.geometry.Point:hashCode()I
org.eclipse.draw2d.SWTGraphics:scale(D)V
org.eclipse.draw2d.geometry.Rectangle:setLocation(Lorg.eclipse.draw2d.geometry.Point;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:getLocalBackgroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.graph.Vertex:fullReset()V
org.eclipse.draw2d.graph.Path:labelGraph()Z
org.eclipse.draw2d.graph.Path:Path()V
org.eclipse.draw2d.Figure:useLocalCoordinates()Z
org.eclipse.draw2d.graph.Path:determineShortestPath()Z
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.graph.Path:addPerimiterSegments(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.Geometry:linesIntersect(IIIIIIII)Z
org.eclipse.draw2d.geometry.Rectangle:right()I
org.eclipse.draw2d.graph.Path:addConnectingSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;ZZ)V
org.eclipse.draw2d.graph.ShortestPathRouter:labelPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.Dimension:Dimension(II)V
org.eclipse.draw2d.Figure:invalidate()V
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:push(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.6:run()V
org.eclipse.draw2d.BufferedGraphicsSource:getImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.graph.Obstacle:init(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(FFFF)V
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.BufferedGraphicsSource:getGraphics(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.Graphics;
org.eclipse.draw2d.geometry.Point:Point(II)V
org.eclipse.draw2d.geometry.Rectangle:intersect(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:preciseHeight()D
org.eclipse.draw2d.SWTGraphics:setLineWidth(I)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertOffsetShrink(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:translate(FF)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.PointList:PointList()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersectionCross()V
org.eclipse.draw2d.graph.Path.SegmentStack:pop()Lorg.eclipse.draw2d.graph.Segment;
org.eclipse.draw2d.geometry.Point:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.geometry.Point:negate()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.Figure:getUpdateManager()Lorg.eclipse.draw2d.UpdateManager; | RETURN | 20470 | return null
org.eclipse.draw2d.text.BlockFlowLayout:blockContentsChanged()V
org.eclipse.draw2d.LightweightSystem:getEventDispatcher()Lorg.eclipse.draw2d.EventDispatcher;
org.eclipse.draw2d.geometry.Ray:dotProductL(Lorg.eclipse.draw2d.geometry.Ray;)J
org.eclipse.draw2d.graph.ShortestPathRouter:getSubpathForSplit(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.graph.ShortestPathRouter:growObstaclesPass()V
org.eclipse.draw2d.Figure:fireFigureMoved()V
org.eclipse.draw2d.text.FlowContainerLayout:FlowContainerLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.geometry.Rectangle:getCenter()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.Figure:layout()V
org.eclipse.draw2d.DeferredUpdateManager:getGraphics(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.Graphics;
org.eclipse.draw2d.SWTGraphics:checkText()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:run()V
org.eclipse.draw2d.geometry.Rectangle:preciseY()D
org.eclipse.draw2d.geometry.Rectangle:toString()Ljava.lang.String;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:intersect(IIII)V
org.eclipse.draw2d.graph.Path.SegmentStack:popObstacle()Lorg.eclipse.draw2d.graph.Obstacle;
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:pop()Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.SWTGraphics:setTextAntialias(I)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.Figure:paintFigure(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.text.BlockFlow:revalidate()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.5:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersection()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.graph.Path:getPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.geometry.Rectangle:Rectangle()V
org.eclipse.draw2d.SWTGraphics:setAffineMatrix([F)V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPaths()V
org.eclipse.draw2d.graph.Segment:getLength()D
org.eclipse.draw2d.Figure:getParent()Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.2:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.ShortestPathRouter:removePath(Lorg.eclipse.draw2d.graph.Path;)Z
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTEventDispatcher:getFocusTraverseManager()Lorg.eclipse.draw2d.FocusTraverseManager;
org.eclipse.draw2d.graph.Vertex:updateOffset()V
org.eclipse.draw2d.graph.Path:addSegmentsTargetBesideSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.test.GraphicsClipping:gcClipping()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Ray:Ray(II)V
org.eclipse.draw2d.graph.Path:getSubPath(Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.geometry.PrecisionRectangle:setY(D)V
org.eclipse.draw2d.geometry.Point:Point()V
org.eclipse.draw2d.geometry.Insets:getHeight()I
org.eclipse.draw2d.geometry.Rectangle:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:checkGC()V
org.eclipse.draw2d.geometry.Rectangle:scale(DD)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V
org.eclipse.draw2d.graph.Path:getEndPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.AbstractLayout:invalidate()V
org.eclipse.draw2d.graph.Obstacle:growVertices()V
org.eclipse.draw2d.geometry.Point:toString()Ljava.lang.String;
org.eclipse.draw2d.geometry.PrecisionRectangle:setHeight(D)V
org.eclipse.draw2d.Figure:erase()V
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexIntersections()V
org.eclipse.draw2d.graph.ShortestPathRouter:cleanup()V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:SetPattern(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;Lorg.eclipse.swt.graphics.Pattern;Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.DeferredUpdateManager:releaseGraphics(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.SWTEventDispatcher:dispatchFocusLost(Lorg.eclipse.swt.events.FocusEvent;)V
org.eclipse.draw2d.graph.Vertex:bend(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.Figure:getChildren()Ljava.util.List;
org.eclipse.draw2d.graph.ShortestPathRouter:getNearestVertex(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Vertex;
org.eclipse.draw2d.geometry.Rectangle:contains(II)Z
org.eclipse.draw2d.EventListenerList:containsListener(Ljava.lang.Class;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:translate(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:paintBorder(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.SWTGraphics:setBackgroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.ImageUtilities:rotatePixelByPixel(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.geometry.Geometry:cross(JJJJ)J
org.eclipse.draw2d.SWTGraphics:fillRectangle(IIII)V
org.eclipse.draw2d.SWTGraphics:setLineCap(I)V
org.eclipse.draw2d.graph.Segment:cosine(Lorg.eclipse.draw2d.graph.Segment;)D
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.FocusTraverseManager:getCurrentFocusOwner()Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopRightIntersection()V
org.eclipse.draw2d.SWTGraphics:setAntialias(I)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:run()V
org.eclipse.draw2d.SWTGraphics:scale(FF)V
org.eclipse.draw2d.geometry.Point:preciseY()D
org.eclipse.draw2d.geometry.Rectangle:scale(D)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Ellipse:Ellipse()V
org.eclipse.draw2d.Figure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:FillRules(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;II)V
org.eclipse.draw2d.text.FlowPage:invalidate()V
org.eclipse.draw2d.UpdateManager:isDisposed()Z
org.eclipse.draw2d.geometry.Point:preciseX()D
org.eclipse.draw2d.Figure:setLayoutManager(Lorg.eclipse.draw2d.LayoutManager;)V
org.eclipse.draw2d.graph.Path:cleanup()V
org.eclipse.draw2d.SWTEventDispatcher:setFocus(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.ShortestPathRouter:internalRemoveObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.geometry.Rectangle:preciseX()D
org.eclipse.draw2d.geometry.PointList:getLastPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.SWTGraphics:getClip(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getBoundingBox(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Obstacle:getSpacing()I
org.eclipse.draw2d.DeferredUpdateManager:repairDamage()V
org.eclipse.draw2d.text.FlowFigureLayout:invalidate()V
org.eclipse.draw2d.graph.Segment:Segment(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.SWTGraphics:init()V
org.eclipse.draw2d.NativeGraphicsSource:getGraphics(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.Graphics;
org.eclipse.draw2d.geometry.Rectangle:hashCode()I
org.eclipse.draw2d.geometry.PrecisionRectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:fillPolygon([I)V
org.eclipse.draw2d.geometry.Rectangle:getLocation()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Segment:crossProduct(Lorg.eclipse.draw2d.graph.Segment;)J
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.ImageUtilities:rotateOptimized(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.SWTGraphics:drawPoint(II)V
org.eclipse.draw2d.SWTGraphics:setFillRule(I)V
org.eclipse.draw2d.Figure:getLocalForegroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.Figure:revalidate()V
org.eclipse.draw2d.graph.Path:addSegmentsTargetAboveSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Vertex:getDeformedRectangle(I)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.DeferredUpdateManager:performValidation()V
org.eclipse.draw2d.Figure:validate()V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Path:getStartPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.SWTGraphics:fillText(Ljava.lang.String;II)V
org.eclipse.draw2d.graph.Path:setBendPoints(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.test.RayTest:testLengthValues(IID)V
org.eclipse.draw2d.SWTGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getCopy()Lorg.eclipse.draw2d.SWTGraphics.Clipping;
org.eclipse.draw2d.FigureCanvas.3:notifyPainting(Lorg.eclipse.draw2d.geometry.Rectangle;Ljava.util.Map;)V
org.eclipse.draw2d.geometry.PrecisionPoint:updateInts()V
org.eclipse.draw2d.Figure:setValid(Z)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1:paintControl(Lorg.eclipse.swt.events.PaintEvent;)V
org.eclipse.draw2d.geometry.PointList:PointList([I)V
org.eclipse.draw2d.graph.Path:testAndSet(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.Figure:setFlag(IZ)V
org.eclipse.draw2d.SWTGraphics:SWTGraphics(Lorg.eclipse.swt.graphics.GC;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:assertImageEquality(II)V
org.eclipse.draw2d.Figure:isOpaque()Z
org.eclipse.draw2d.geometry.PointList:ensureCapacity(I)V
org.eclipse.draw2d.geometry.PrecisionPoint:PrecisionPoint(DD)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestQuadBendMiss(I)V
org.eclipse.draw2d.text.PageFlowLayout:PageFlowLayout(Lorg.eclipse.draw2d.text.FlowPage;)V
org.eclipse.draw2d.geometry.Point:getPreciseDistance2(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.graph.ShortestPathRouter:solveDirtyPaths()I
org.eclipse.draw2d.graph.Path.SegmentStack:push(Ljava.lang.Object;)V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineSubpaths()V
org.eclipse.draw2d.UpdateManager:firePainting(Lorg.eclipse.draw2d.geometry.Rectangle;Ljava.util.Map;)V
org.eclipse.draw2d.SWTGraphics:setClip(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.text.FlowFigureLayout:FlowFigureLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.SWTGraphics:reconcileHints(II)V
org.eclipse.draw2d.UpdateManager:fireValidating()V
org.eclipse.draw2d.graph.Path:linkVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:performTestcase(Ljava.lang.Runnable;[Ljava.lang.Runnable;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.3:run()V
org.eclipse.draw2d.SWTGraphics:setForegroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTangent()V
org.eclipse.draw2d.Figure:getInsets()Lorg.eclipse.draw2d.geometry.Insets;
org.eclipse.draw2d.SWTGraphics:dispose()V
org.eclipse.draw2d.graph.ShortestPathRouter:getSpacing()I
org.eclipse.draw2d.BufferedGraphicsSource:flushGraphics(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNoPathsSolved()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:setOn(Lorg.eclipse.swt.graphics.GC;II)V
org.eclipse.draw2d.graph.Obstacle:shrinkVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.SWTGraphics:drawPolyline([I)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNumPoints(Lorg.eclipse.draw2d.geometry.PointList;I)V
org.eclipse.draw2d.graph.ShortestPathRouter:testAndDirtyPaths(Lorg.eclipse.draw2d.graph.Obstacle;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 2 333 2 291 2 77 2 176 2 230 4 250 2 86 2 315 2 329 2 139 2 
240 2 203 2 32 2 324 2 
200 2 333 2 77 2 176 2 230 6 7 2 199 2 248 2 315 2 329 2 116 2 
200 2 333 2 77 2 176 2 230 6 7 2 199 2 248 2 315 2 329 2 116 2 
243 2 49 2 338 2 328 2 
268 1 175 1 270 2 180 1 273 1 85 1 185 1 186 1 8 2 187 2 88 1 10 3 189 2 94 1 96 1 289 1 101 1 198 1 103 3 19 1 105 1 21 1 300 1 109 1 112 1 23 1 113 3 114 1 209 1 210 1 303 1 304 1 118 2 33 1 308 1 314 1 123 1 44 1 220 1 318 1 224 1 130 1 226 1 131 1 133 2 227 2 319 1 230 1 231 1 48 2 53 2 325 2 55 1 327 1 329 1 333 1 334 1 63 1 336 1 244 1 245 1 64 1 246 1 69 1 345 1 346 1 347 1 72 1 351 1 163 1 77 2 355 2 357 1 358 1 167 1 360 1 259 1 172 1 262 1 362 1 
182 2 8 2 187 1 9 4 189 4 192 2 19 4 202 4 28 2 210 1 211 2 212 2 218 2 44 1 227 2 230 1 48 2 232 2 53 2 236 2 59 2 63 4 246 4 68 2 74 2 77 1 260 2 262 2 270 2 85 1 277 2 279 2 87 2 93 2 94 1 289 1 101 2 293 4 102 2 103 1 107 2 300 1 111 2 113 1 114 2 304 1 118 2 318 1 133 2 325 2 326 2 327 1 330 2 335 2 345 1 350 2 353 2 354 2 355 4 362 2 364 2 
270 2 182 2 8 2 277 2 279 2 87 2 280 2 189 2 192 2 287 2 101 2 293 4 102 2 18 2 19 4 202 4 107 2 111 2 112 2 28 2 114 2 118 2 307 2 313 2 133 4 227 2 232 2 48 2 53 2 236 2 325 2 326 2 59 2 330 2 335 2 63 4 246 2 68 2 350 2 353 2 355 2 260 2 262 2 362 2 
270 2 274 2 182 2 8 2 277 2 9 2 87 2 189 4 192 2 11 2 101 2 293 4 102 2 19 4 107 2 202 4 111 2 26 2 28 2 114 2 118 2 222 2 127 2 133 2 227 2 232 2 48 2 53 2 236 2 325 2 326 2 59 2 330 2 335 2 63 4 246 2 68 2 350 2 353 2 355 2 78 2 260 2 262 2 362 2 364 2 
270 2 274 2 182 2 8 2 277 2 9 2 279 2 87 2 189 4 192 2 11 2 101 2 293 4 102 2 19 4 107 2 202 4 111 2 26 2 28 2 114 2 118 2 222 2 127 2 133 2 227 2 232 2 48 2 53 2 236 2 325 2 326 2 59 2 330 2 335 2 63 4 246 2 68 2 73 2 350 2 353 2 355 2 78 2 260 2 262 2 362 2 364 2 
1 8 179 2 182 2 8 2 9 2 189 2 192 2 19 4 202 4 28 2 211 2 227 2 232 2 48 2 53 4 236 2 59 2 63 4 246 4 68 2 258 2 260 2 262 2 270 4 277 2 87 2 101 2 293 4 102 2 111 2 114 2 118 2 133 4 322 2 325 4 326 2 330 2 335 2 350 2 353 2 355 2 362 2 365 2 
40 2 83 2 41 4 42 6 124 2 45 2 126 2 125 2 46 2 177 2 128 2 4 2 272 4 225 4 226 2 131 2 85 2 181 2 320 2 228 2 183 2 229 2 321 2 275 2 186 24 276 2 136 2 50 4 51 2 138 4 323 2 140 2 89 2 142 2 56 2 90 2 58 4 57 2 13 4 91 2 144 2 282 12 60 10 61 2 194 4 331 2 92 2 14 2 243 1 149 2 16 2 337 6 152 4 65 8 196 2 98 8 341 12 197 8 290 12 342 2 343 6 153 2 292 2 155 2 249 2 70 2 296 2 344 2 251 2 158 2 348 4 159 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 25 4 302 10 255 2 256 2 208 2 115 2 29 2 165 2 166 4 169 2 168 2 359 8 170 2 117 2 30 4 305 6 171 4 31 2 172 2 81 12 261 2 34 2 119 2 35 2 82 4 309 2 216 2 122 4 363 2 174 2 366 2 264 4 217 2 367 2 
40 4 316 2 42 4 41 2 124 2 45 2 126 2 125 2 177 2 272 4 128 4 4 4 225 2 131 10 226 4 85 4 181 4 183 2 228 2 320 2 6 2 321 2 186 18 276 2 136 2 50 4 138 2 51 2 142 2 191 2 56 2 58 2 57 2 13 2 238 2 282 6 60 10 61 2 194 2 92 2 14 2 149 4 16 2 337 2 152 4 196 2 65 6 98 2 341 6 197 2 343 12 290 6 342 2 153 2 292 2 155 2 70 2 344 2 251 2 348 4 159 2 299 2 22 2 352 2 160 2 205 2 164 4 77 4 302 12 25 4 255 2 256 2 208 4 29 2 115 2 165 2 166 2 169 2 168 2 359 2 170 2 305 4 30 2 171 4 172 10 81 6 173 2 34 2 35 2 122 4 216 2 363 2 174 2 366 2 264 4 217 2 266 2 367 4 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 6 131 4 226 2 85 2 181 2 183 6 228 2 320 2 184 2 229 2 321 2 186 24 275 2 276 2 136 2 50 2 52 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 10 61 2 194 6 332 2 92 2 62 2 14 2 149 2 16 2 95 2 337 2 196 2 65 8 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 6 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 115 2 29 6 165 2 166 6 169 6 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 216 2 122 2 363 2 174 2 264 4 37 2 38 2 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 6 131 4 226 2 85 2 181 2 183 6 228 2 320 2 184 2 229 2 321 2 186 24 275 2 276 2 136 2 50 2 52 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 10 61 2 194 6 332 2 92 2 62 2 14 2 149 2 16 2 95 2 337 2 196 2 65 8 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 6 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 115 2 29 6 165 2 166 6 169 6 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 216 2 122 2 363 2 174 2 264 4 37 2 38 2 217 2 266 2 39 2 367 2 
40 2 41 2 42 6 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 6 131 4 226 2 85 2 181 2 183 6 228 2 320 2 184 2 229 2 321 2 186 24 275 2 276 2 136 2 50 2 52 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 10 61 2 194 6 332 2 92 2 62 2 14 2 149 2 16 2 95 2 337 2 196 2 65 8 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 6 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 115 2 29 6 165 2 166 6 169 6 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 216 2 122 2 363 2 174 2 264 4 37 2 38 2 217 2 266 2 39 2 367 2 
40 2 41 2 42 6 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 6 131 4 226 2 85 2 181 2 183 6 228 2 320 2 184 2 229 2 321 2 186 24 275 2 276 2 136 2 50 2 52 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 10 61 2 194 6 332 2 92 2 62 2 14 2 149 2 16 2 95 2 337 2 196 2 65 8 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 6 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 115 2 29 6 165 2 166 6 169 6 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 216 2 122 2 363 2 174 2 264 4 37 2 38 2 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 4 226 2 85 2 181 2 183 4 228 2 320 4 184 2 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 233 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 62 2 14 2 286 2 149 2 16 2 337 2 196 2 65 6 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 27 2 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 4 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 4 226 2 85 2 181 2 183 4 228 2 320 4 184 2 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 233 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 62 2 14 2 286 2 149 2 16 2 337 2 196 2 65 6 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 27 2 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 4 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 4 41 2 42 6 124 2 45 2 317 2 126 2 125 2 46 2 177 2 128 4 4 4 272 4 225 4 131 6 226 4 85 4 181 4 320 2 228 2 183 4 229 2 47 2 321 2 186 26 275 2 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 6 90 2 58 2 57 2 13 2 238 2 282 12 60 12 61 2 194 4 332 2 92 2 14 2 149 4 16 2 337 2 152 2 196 2 65 8 98 4 66 2 341 12 197 4 67 2 343 8 290 12 342 2 153 2 292 2 155 2 70 4 344 2 251 2 158 2 348 4 159 2 252 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 8 302 12 25 4 255 2 256 2 208 4 29 4 115 2 165 2 166 4 169 4 168 2 359 8 170 2 117 2 30 2 305 4 171 4 31 2 172 4 81 12 261 2 34 2 119 2 35 2 82 2 309 2 122 4 216 2 263 2 363 2 174 2 366 2 264 4 217 2 266 2 367 4 39 2 
40 4 41 2 42 6 124 2 45 2 317 2 126 2 125 2 46 2 177 2 128 4 4 4 272 4 225 4 131 6 226 4 85 4 181 4 320 2 228 2 183 4 229 2 47 2 321 2 186 26 275 2 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 6 90 2 58 2 57 2 13 2 238 2 282 12 60 12 61 2 194 4 332 2 92 2 14 2 149 4 16 2 337 2 152 2 196 2 65 8 98 4 341 12 197 4 67 2 343 8 290 12 342 2 153 2 292 2 155 2 70 4 344 2 251 2 158 2 348 4 159 2 252 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 8 302 12 25 4 255 2 256 2 208 4 29 4 115 2 165 2 166 4 169 4 168 2 359 8 170 2 117 2 30 2 305 4 171 4 31 2 172 4 81 12 261 2 34 2 119 2 35 2 82 2 309 2 122 4 216 2 263 2 363 2 174 2 366 2 264 4 217 2 266 2 367 4 39 2 
40 4 42 12 41 4 124 4 45 6 126 4 125 4 46 4 177 4 3 2 4 4 128 4 272 8 225 4 131 10 226 4 85 4 181 4 183 4 228 4 320 8 134 2 229 4 321 4 186 28 275 4 276 4 136 4 50 8 138 4 51 4 142 4 191 2 56 4 90 4 58 4 57 4 13 4 237 2 238 2 282 20 60 12 61 4 194 4 332 4 92 4 14 4 149 4 16 4 337 4 152 2 196 4 65 8 98 2 341 20 197 8 343 14 290 20 342 4 153 4 292 4 155 4 70 4 344 4 251 4 158 2 348 10 159 4 299 8 22 4 352 4 160 4 24 4 205 4 164 8 77 8 302 24 25 8 255 4 256 4 208 4 29 4 115 4 165 4 166 4 169 4 168 4 359 14 170 4 117 4 305 8 30 4 171 8 31 4 172 6 81 20 261 4 34 4 119 4 35 4 309 4 122 8 216 4 363 4 174 4 264 10 217 4 266 2 39 2 367 4 
40 4 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 3 2 4 4 128 4 272 4 225 4 131 2 226 4 85 4 181 4 183 4 228 2 320 4 134 2 229 2 321 2 186 24 275 2 276 2 136 2 50 4 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 12 61 2 194 4 332 4 92 2 14 2 149 4 16 2 337 2 196 2 65 8 98 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 6 159 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 6 302 12 25 4 255 2 256 2 208 4 29 4 115 2 165 2 166 4 169 4 168 2 359 6 361 2 170 2 117 2 305 4 30 2 171 4 31 2 172 2 81 10 261 2 34 2 119 2 35 2 309 2 122 4 216 2 363 2 174 2 264 6 217 2 266 2 39 2 367 4 
40 2 42 12 41 4 124 4 219 2 45 4 126 4 125 4 46 4 177 4 4 2 128 2 272 4 225 6 131 4 226 2 85 2 181 2 183 6 228 4 320 6 229 4 321 4 186 28 275 4 276 4 136 4 50 4 138 6 51 4 142 4 90 4 58 4 57 4 13 6 282 20 60 10 61 4 194 6 332 2 92 4 14 4 149 2 16 4 337 4 196 4 65 8 341 20 197 6 343 12 290 20 342 4 153 4 292 4 155 4 70 6 344 4 251 4 348 8 159 4 252 2 299 8 22 4 352 4 160 4 24 4 205 4 164 8 77 6 302 20 25 8 255 4 256 4 208 2 29 6 115 4 165 4 166 6 169 6 168 4 359 12 361 2 170 4 117 4 305 8 30 4 171 4 31 4 172 4 81 20 261 4 34 4 119 4 35 4 82 2 309 4 122 4 216 4 363 4 174 4 264 8 217 4 266 2 39 2 367 2 
40 4 42 10 41 4 124 4 45 2 126 4 125 4 46 2 177 4 4 4 128 4 272 6 225 4 131 4 226 4 85 4 181 4 183 4 228 4 320 6 229 2 321 4 186 26 275 2 276 2 136 4 50 6 138 4 51 4 142 4 90 4 58 4 57 4 13 4 282 18 60 12 61 4 194 4 332 4 92 4 14 4 149 4 16 4 97 2 337 4 152 2 196 4 65 8 341 18 197 6 343 8 290 18 342 4 153 4 292 4 154 2 294 2 155 4 70 4 344 4 251 4 158 2 348 6 20 2 159 4 299 6 22 2 352 4 160 4 24 2 205 4 164 8 77 6 302 14 25 8 255 4 256 4 208 4 29 4 115 4 165 4 166 4 169 4 168 4 359 10 170 2 117 2 305 4 30 4 171 6 31 2 172 4 81 18 261 2 34 4 119 2 35 4 309 2 122 6 216 4 363 4 174 4 264 6 217 4 266 2 39 2 367 4 
40 6 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 3 4 4 6 128 6 272 6 225 4 131 2 226 6 85 4 181 6 183 4 228 2 320 4 134 4 229 2 321 2 186 30 275 2 276 2 136 2 50 6 138 2 51 2 142 2 90 2 58 2 57 2 13 2 146 2 282 10 60 16 61 2 194 4 332 6 92 2 14 2 149 4 16 2 97 2 337 2 196 2 65 10 98 4 341 10 197 4 343 6 290 10 342 2 153 2 292 2 154 2 294 2 155 2 70 4 344 2 251 2 348 8 20 2 159 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 6 302 14 25 4 255 2 256 2 208 6 29 4 115 2 165 2 166 4 169 4 168 2 359 6 361 2 170 2 117 2 305 6 30 2 171 6 31 2 172 2 81 10 261 2 34 2 119 2 35 2 309 2 122 6 216 2 363 2 174 2 264 8 217 2 266 2 39 2 367 6 
40 2 42 8 41 4 124 4 45 2 126 4 125 2 46 2 177 4 4 2 128 2 272 2 225 4 131 2 226 2 85 4 181 2 183 4 228 4 320 6 229 2 321 4 186 20 275 2 276 2 136 4 50 2 138 4 51 4 142 4 90 4 58 4 57 2 13 4 282 18 60 8 61 4 194 4 332 2 92 4 14 4 149 4 16 4 97 2 337 4 196 4 65 6 341 18 197 6 343 8 290 18 342 4 153 4 292 4 294 2 155 4 70 4 344 4 251 2 157 2 348 4 20 2 159 4 299 4 22 2 352 4 160 4 24 2 205 4 164 6 77 6 302 14 25 8 255 4 256 4 208 2 29 4 115 4 165 4 166 4 169 4 168 4 359 6 170 2 117 2 305 4 30 4 171 2 31 2 172 2 81 18 261 2 34 2 119 2 35 4 309 2 122 2 216 4 363 2 174 4 264 4 217 4 266 2 39 2 367 2 
40 4 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 3 2 4 4 128 4 272 4 225 4 131 2 226 4 85 4 181 4 183 4 228 2 320 4 134 2 229 2 321 2 186 24 275 2 276 2 136 2 50 4 138 2 51 2 142 2 90 2 58 2 57 2 13 2 146 2 282 10 60 12 61 2 194 4 332 4 92 2 14 2 149 4 16 2 97 2 337 2 196 2 65 8 98 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 294 2 155 2 70 4 344 2 251 2 157 2 348 6 20 2 159 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 6 302 12 25 4 255 2 256 2 208 4 29 4 115 2 165 2 166 4 169 4 168 2 359 6 361 2 170 2 117 2 305 6 30 2 171 4 31 2 172 2 81 10 261 2 34 2 119 2 35 2 309 2 122 4 216 2 363 2 174 2 264 6 217 2 266 2 39 2 367 4 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 2 226 2 85 2 181 2 183 6 228 2 320 2 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 234 2 142 2 90 2 58 2 57 2 13 2 282 10 60 10 61 2 194 6 332 2 92 2 14 2 149 2 16 2 337 2 196 2 65 8 341 10 197 2 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 6 169 6 168 2 359 6 361 2 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 309 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 4 316 2 41 2 42 4 124 2 45 4 317 2 126 2 125 2 46 2 177 2 128 4 4 4 272 4 225 8 226 4 131 8 85 4 181 4 320 4 228 2 183 8 229 2 321 2 275 2 186 34 276 2 136 2 50 4 51 2 138 2 190 2 142 2 191 2 56 6 193 2 90 2 58 2 57 2 13 2 237 2 238 2 282 12 60 16 61 2 332 2 194 8 92 2 14 2 149 4 16 2 337 2 152 2 196 2 65 12 98 2 341 12 197 4 343 10 290 12 342 2 153 2 292 2 155 2 70 8 344 2 251 2 104 2 158 2 348 6 159 2 252 2 299 2 22 2 352 2 160 2 24 2 205 2 164 4 77 8 302 14 25 4 255 2 256 2 208 4 115 2 29 8 165 2 166 8 169 8 168 2 359 6 170 2 117 2 30 2 305 4 171 4 31 2 172 8 81 12 261 2 34 2 119 2 35 2 82 2 309 2 216 2 122 4 263 2 363 2 174 2 366 2 264 6 37 2 217 2 266 2 367 4 39 2 
40 4 316 2 41 2 42 8 124 2 219 2 45 2 317 2 126 2 125 2 46 4 177 2 128 4 4 4 272 4 225 8 226 4 131 6 85 4 181 4 320 4 228 2 183 8 229 2 321 2 275 2 186 36 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 8 193 2 90 2 58 2 57 2 13 2 282 12 60 16 61 2 332 2 194 8 92 2 62 2 14 2 286 2 149 4 16 2 337 2 152 2 196 2 65 12 98 4 339 2 341 12 197 4 343 8 290 12 342 2 153 2 292 2 155 2 70 8 344 2 251 2 158 2 348 4 159 2 252 12 299 6 22 2 352 2 160 2 24 2 205 2 164 4 77 10 302 14 25 4 255 2 256 2 208 4 115 2 29 8 165 2 166 8 169 8 168 2 359 12 80 2 170 2 117 4 30 2 305 4 171 4 31 4 172 6 81 12 261 2 34 2 119 2 35 2 214 8 82 4 309 2 310 2 216 2 122 4 263 2 363 2 174 2 366 2 264 4 37 2 38 2 217 2 266 2 367 4 39 2 
40 4 316 2 41 2 42 8 124 2 219 2 45 4 317 2 126 2 125 2 46 4 177 2 128 4 4 4 272 4 225 8 226 4 131 8 85 4 181 4 320 4 228 2 183 8 229 2 321 2 275 2 186 36 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 8 193 2 90 2 58 2 57 2 13 2 237 4 282 12 60 16 61 2 332 2 194 8 92 2 62 2 14 2 286 2 149 4 16 2 337 2 152 2 196 2 65 12 98 4 339 2 341 12 197 4 343 8 290 12 342 2 153 2 292 2 155 2 70 8 344 2 251 2 158 2 348 6 159 2 252 12 299 6 22 2 352 2 160 2 24 2 205 2 164 4 77 10 302 14 25 4 255 2 256 2 208 4 115 2 29 8 165 2 166 8 169 8 168 2 359 12 80 2 170 2 117 4 30 2 305 4 171 4 31 4 172 6 81 12 261 2 34 2 119 2 35 2 214 8 82 4 309 2 310 2 216 2 122 4 263 2 363 2 174 2 366 2 264 6 37 2 38 2 217 2 266 2 367 4 39 2 
40 4 316 2 41 2 42 6 124 2 219 2 45 2 126 2 125 2 46 2 177 2 128 4 4 4 272 4 225 8 226 4 131 6 85 4 181 4 320 4 228 2 183 8 229 2 321 2 186 36 275 2 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 4 193 2 90 2 58 2 57 2 13 2 282 10 60 16 61 2 332 2 194 8 92 2 62 2 14 2 286 2 149 4 16 2 337 2 152 2 196 2 65 12 98 4 339 2 341 10 197 4 343 8 290 10 342 2 153 2 292 2 155 2 70 8 344 2 251 2 158 2 348 4 159 2 252 12 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 6 302 12 25 4 255 2 256 2 208 4 115 2 29 8 165 2 166 8 169 8 168 2 359 8 80 2 170 2 117 2 30 2 305 4 171 4 31 2 172 6 81 10 261 2 34 2 119 2 35 2 214 8 82 4 309 2 310 2 216 2 122 4 363 2 174 2 366 2 264 4 37 2 38 2 217 2 266 2 367 4 39 2 
40 4 316 2 41 2 42 6 124 2 45 2 126 2 125 2 46 2 177 2 272 4 128 4 4 4 225 2 131 6 226 4 85 4 181 4 183 2 228 2 320 2 229 2 321 2 186 20 275 2 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 4 90 2 58 2 57 2 13 2 238 2 282 10 60 10 61 2 194 2 92 2 14 2 149 4 16 2 337 2 152 2 196 2 65 6 98 2 341 10 197 4 343 10 290 10 342 2 153 2 292 2 155 2 70 2 344 2 251 2 158 2 348 4 159 2 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 6 302 14 25 4 255 2 256 2 208 4 29 2 115 2 165 2 166 2 169 2 168 2 359 8 170 2 117 2 30 2 305 4 171 4 31 2 172 6 81 10 261 2 34 2 119 2 35 2 309 2 122 4 216 2 363 2 174 2 366 2 264 4 217 2 266 2 367 4 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 4 226 2 85 2 181 2 183 4 228 2 320 4 184 2 229 2 321 2 186 20 275 2 276 2 136 2 137 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 62 2 14 2 149 2 16 2 337 2 196 2 65 6 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 4 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 2 82 2 309 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 4 226 2 85 2 181 2 183 4 228 2 320 4 184 2 229 2 321 2 186 20 275 2 276 2 136 2 137 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 62 2 14 2 149 2 16 2 337 2 196 2 65 6 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 4 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 2 82 2 309 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 84 2 131 2 226 2 85 2 181 2 183 4 228 2 320 4 184 2 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 14 2 149 2 16 2 337 2 196 2 65 6 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 4 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 2 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 84 2 131 2 226 2 85 2 181 2 183 4 228 2 320 4 184 2 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 14 2 149 2 16 2 337 2 196 2 65 6 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 4 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 2 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 4 41 2 42 6 124 2 219 2 45 2 126 2 125 2 46 2 177 4 128 4 4 4 272 4 225 8 226 4 131 6 85 4 181 4 320 4 228 2 183 8 229 2 321 2 186 36 275 2 276 2 136 2 50 4 51 2 138 2 140 2 89 2 142 4 191 2 56 4 193 2 90 2 58 2 57 2 13 2 238 2 282 10 60 16 61 2 332 2 194 10 241 2 92 2 14 2 149 4 16 2 337 4 152 2 196 2 65 12 98 4 66 2 341 10 197 4 343 8 290 10 342 2 153 2 292 2 155 2 70 8 344 2 251 2 158 2 348 4 159 2 252 2 299 4 22 2 352 2 160 2 204 2 24 2 205 2 164 4 77 6 302 12 25 4 255 2 256 2 208 4 115 2 29 8 165 2 166 10 169 10 168 2 359 8 170 2 117 2 30 2 305 4 171 4 31 2 172 4 81 10 261 2 34 2 119 2 35 2 82 2 309 2 216 2 122 4 363 2 174 2 366 2 264 4 37 2 217 2 266 2 367 4 39 2 
40 4 41 2 42 6 124 2 219 2 45 2 126 2 125 2 46 2 177 2 128 4 4 4 272 4 225 6 131 6 226 4 85 4 181 4 320 4 228 2 183 6 229 2 321 2 186 32 275 2 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 4 90 2 58 2 57 2 13 2 238 2 282 10 60 14 61 2 194 6 332 2 92 2 14 2 149 4 16 2 337 2 152 2 196 2 65 10 98 4 341 10 197 4 67 2 343 8 290 10 342 2 153 2 292 2 155 2 70 6 344 2 251 2 158 2 348 4 159 2 252 6 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 6 356 2 302 12 25 4 255 2 256 2 208 4 115 2 29 6 165 2 166 6 169 6 168 2 359 8 170 2 117 2 30 2 305 4 171 4 31 2 172 4 81 10 261 2 34 2 119 2 35 2 214 2 82 4 309 2 310 2 216 2 122 4 363 2 174 2 366 2 264 4 37 2 217 2 266 2 367 4 39 2 
40 4 41 2 42 6 124 2 219 2 45 2 126 2 125 2 46 2 177 2 128 4 4 4 272 4 225 6 131 6 226 4 85 4 181 4 320 2 228 2 183 6 229 2 321 2 186 32 275 2 276 2 136 2 50 4 51 2 138 2 142 2 191 2 56 4 90 2 58 2 57 2 13 2 238 2 282 10 60 14 61 2 194 6 332 2 92 2 14 2 149 4 16 2 337 2 152 2 196 2 65 10 98 4 66 2 341 10 197 4 67 2 343 8 290 10 342 2 153 2 292 2 155 2 70 6 344 2 251 2 158 2 348 4 159 2 252 6 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 6 356 2 302 12 25 4 255 2 256 2 208 4 115 2 29 6 165 2 166 6 169 6 168 2 359 8 170 2 117 2 30 2 305 4 171 4 31 2 172 4 81 10 261 2 34 2 119 2 35 2 214 2 82 4 309 2 310 2 216 2 122 4 363 2 174 2 366 2 264 4 37 2 217 2 266 2 367 4 39 2 
40 2 42 6 41 2 124 2 219 2 45 2 126 2 125 2 46 2 177 2 223 2 4 2 128 2 272 2 225 4 131 2 226 2 85 2 181 2 183 4 228 2 320 4 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 14 2 149 2 16 2 337 2 196 2 65 6 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 6 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 38 2 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 2 226 2 85 2 181 2 183 4 228 2 320 2 184 2 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 195 2 14 2 149 2 16 2 337 2 196 2 65 6 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 6 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 38 2 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 2 226 2 85 2 181 2 183 4 228 2 320 2 184 2 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 195 2 14 2 149 2 16 2 337 2 196 2 65 6 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 6 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 38 2 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 219 2 45 2 126 2 125 2 46 2 177 2 223 2 4 2 128 2 272 2 225 4 131 2 226 2 85 2 181 2 183 4 228 2 320 4 229 2 321 2 186 20 275 2 276 2 136 2 50 2 138 2 51 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 14 2 149 2 16 2 337 2 196 2 65 6 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 6 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 2 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 38 2 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 219 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 2 226 2 85 2 181 2 183 4 228 2 320 4 229 2 321 2 186 20 275 2 276 2 136 2 50 2 278 2 138 2 51 2 233 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 14 2 286 2 149 2 16 2 337 2 196 2 65 6 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 4 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
40 2 42 6 41 2 124 2 219 2 45 2 126 2 125 2 46 2 177 2 4 2 128 2 272 2 225 4 131 2 226 2 85 2 181 2 183 4 228 2 320 4 229 2 321 2 186 20 275 2 276 2 136 2 50 2 278 2 138 2 51 2 233 2 142 2 90 2 58 2 57 2 13 2 282 10 60 8 61 2 194 4 332 2 92 2 14 2 286 2 149 2 16 2 337 2 196 2 65 6 66 2 341 10 197 4 343 6 290 10 342 2 153 2 292 2 155 2 70 4 344 2 251 2 348 4 159 2 252 8 299 4 22 2 352 2 160 2 24 2 205 2 164 4 77 4 302 10 25 4 255 2 256 2 208 2 29 4 115 2 165 2 166 4 169 4 168 2 359 6 170 2 117 2 305 4 30 2 171 2 31 2 172 4 81 10 261 2 34 2 119 2 35 2 214 4 82 2 309 2 310 2 122 2 216 2 363 2 174 2 264 4 217 2 266 2 39 2 367 2 
186 2 257 2 97 2 
186 2 257 2 97 2 77 2 
226 2 186 2 17 2 257 2 97 2 148 2 162 2 
226 4 76 2 77 2 213 2 43 2 306 2 106 2 21 2 135 2 269 2 242 2 69 2 295 2 79 2 15 6 120 2 244 2 97 2 188 2 253 2 235 2 129 2 
226 4 76 2 77 2 213 2 43 2 306 2 106 2 21 2 135 2 269 2 242 2 69 2 295 2 79 2 15 6 120 2 244 2 97 2 188 2 253 2 235 2 129 2 
200 2 340 2 301 2 288 2 333 2 291 2 77 2 176 2 349 2 201 2 230 4 207 2 221 2 108 2 12 2 329 2 315 2 71 2 143 2 5 2 
200 2 340 2 301 2 288 2 333 2 291 2 77 2 176 2 349 2 201 2 230 4 207 2 221 2 108 2 12 2 329 2 315 2 71 2 143 2 5 2 
200 2 340 2 301 2 288 2 333 2 291 2 77 2 176 2 349 2 201 2 230 4 207 2 221 2 108 2 12 2 329 2 315 2 71 2 143 2 5 2 
200 2 340 2 301 2 288 2 333 2 291 2 77 2 176 2 349 2 201 2 230 4 207 2 221 2 108 2 12 2 329 2 315 2 71 2 143 2 5 2 
200 2 340 2 301 2 288 2 333 2 291 2 77 2 176 2 349 2 201 2 230 4 207 2 221 2 108 2 12 2 329 2 315 2 71 2 143 2 5 2 
246 2 267 2 77 4 68 2 156 2 178 2 239 2 346 2 131 4 172 4 147 2 231 2 215 2 362 2 9 2 97 2 312 2 
267 2 246 2 101 2 68 4 77 4 192 2 178 2 297 2 239 2 346 2 226 2 131 4 298 2 147 2 172 4 231 2 187 2 121 2 215 2 362 2 9 2 97 2 312 2 
246 6 267 2 247 2 101 2 1 2 68 4 2 2 297 2 346 2 131 2 226 2 298 2 231 2 350 2 9 2 161 2 77 2 281 2 192 2 283 2 172 2 121 2 362 2 97 2 312 2 
311 2 151 2 
271 2 311 2 151 2 
200 2 340 2 301 2 288 2 333 2 291 2 77 2 176 2 349 2 201 2 230 4 207 2 221 2 108 2 12 2 329 2 315 2 71 2 143 2 5 2 
340 2 301 2 288 2 291 2 77 2 176 2 221 2 207 2 12 2 329 2 143 2 71 2 5 2 200 2 333 2 349 2 201 2 230 4 108 2 315 2 
30 2 140 2 194 2 113 2 171 2 41 4 77 2 186 2 243 2 13 2 50 2 338 2 337 4 150 2 328 2 264 2 272 2 
0 2 141 2 110 2 75 2 
200 2 54 4 132 2 99 2 175 2 284 2 100 2 333 2 206 2 77 6 176 2 285 2 230 4 254 2 36 2 103 2 265 2 329 2 145 4 139 2 
200 2 54 4 132 2 99 2 175 2 284 2 100 2 333 2 206 2 77 6 176 2 285 2 230 4 254 2 36 2 103 2 265 2 329 2 145 4 139 2 

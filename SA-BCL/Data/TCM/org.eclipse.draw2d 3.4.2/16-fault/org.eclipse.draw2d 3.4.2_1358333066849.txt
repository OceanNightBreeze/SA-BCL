#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.eclipse.draw2d.test.XYLayoutTest:testPreferredSize()V ERROR java.lang.UnsupportedOperationException (251,253,285) (251,253,285) 
org.eclipse.draw2d.test.RayTest:test_length()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_happypath()V ERROR java.lang.UnsupportedOperationException (251,253,285) (251,253,285) 
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_bugzilla130042()V ERROR java.lang.UnsupportedOperationException (251,253,285) (251,253,285) 
org.eclipse.draw2d.test.PrecisionPointTest:testEquals()V PASSED
org.eclipse.draw2d.test.ColorConstantTest:test_ColorConstantInit()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testAntialias()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testFillRules()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCapAA()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testPatterns()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBendpoints()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBlockedPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCrossInverted()V FAILED junit.framework.AssertionFailedError 315 25 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformed()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformedInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemovePath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testOffsetShrink()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit2()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendMiss()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testShortestPathOutsideOval()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottom()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottomInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTop()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTopInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSubpath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangent()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangentInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationSymmetry()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationValues()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_sameBehavior()V FAILED junit.framework.AssertionFailedError 
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop2()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testHardWrapping()V ERROR java.lang.UnsupportedOperationException (251,253,285) 185 (251,253,285) 
org.eclipse.draw2d.test.TextFlowWrapTest:testSoftWrapping()V ERROR java.lang.UnsupportedOperationException (251,253,285) 185 (251,253,285) 
org.eclipse.draw2d.test.TextFlowWrapTest:testTruncatedWrapping()V ERROR java.lang.UnsupportedOperationException (251,253,285) 185 (251,253,285) 
org.eclipse.draw2d.test.TextFlowWrapTest:testInlineFlow()V ERROR java.lang.UnsupportedOperationException (251,253,285) 185 (251,253,285) 
org.eclipse.draw2d.test.TextFlowWrapTest:testNestedInlineFlows()V ERROR java.lang.UnsupportedOperationException (251,253,285) 185 (251,253,285) 
org.eclipse.draw2d.test.GraphicsClipping:testSimpleClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testTranslatedClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testZoomedClip()V PASSED
org.eclipse.draw2d.test.LayeredPaneTest:testIndexOutOfBounds()V ERROR java.lang.UnsupportedOperationException (251,253,285) 368 (251,253,285) 
org.eclipse.draw2d.test.ImageUtilitiesTest:testImageRotation()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testRotatingImagesWithDifferentDepths()V PASSED
org.eclipse.draw2d.test.TextualTests:testLineRootBidiCommit()V ERROR java.lang.UnsupportedOperationException (251,253,285) 185 (251,253,285) 
org.eclipse.draw2d.test.TextualTests:testGetFirstAndLastOffsetForLine()V ERROR java.lang.UnsupportedOperationException (251,253,285) 185 (251,253,285) 
org.eclipse.draw2d.test.PointListTests:testIntersects()V PASSED
org.eclipse.draw2d.test.PrecisionDimensionTest:testEquals()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_Thumbnail()V ERROR java.lang.IllegalArgumentException 236 
org.eclipse.draw2d.test.ThumbnailTest:test_EmptyThumbnail()V ERROR java.lang.IllegalArgumentException 236 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.eclipse.draw2d.geometry.PointList:removeAllPoints()V
org.eclipse.draw2d.geometry.Point:Point(II)V
org.eclipse.draw2d.SWTGraphics:restoreState(Lorg.eclipse.draw2d.SWTGraphics.State;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:updateInts()V
org.eclipse.draw2d.Figure:getParent()Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.SWTGraphics:setClip(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:addObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.parts.Thumbnail:setScales(FF)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:run()V
org.eclipse.draw2d.SWTGraphics:setLineWidth(I)V
org.eclipse.draw2d.SWTGraphics:setAlpha(I)V
org.eclipse.draw2d.Figure:getLayoutManager()Lorg.eclipse.draw2d.LayoutManager;
org.eclipse.draw2d.geometry.Rectangle:bottom()I
org.eclipse.draw2d.graph.ShortestPathRouter:testAndDirtyPaths(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.SWTGraphics:setBackgroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle()V
org.eclipse.draw2d.DeferredUpdateManager.UpdateRequest:run()V
org.eclipse.draw2d.geometry.PointList:PointList([I)V
org.eclipse.draw2d.Figure:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.PrecisionRectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.TextFlow:TextFlow(Ljava.lang.String;)V
org.eclipse.draw2d.parts.Thumbnail:isDirty()Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersectionCross()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomLeftIntersection()V
org.eclipse.draw2d.geometry.Rectangle:isEmpty()Z
org.eclipse.draw2d.graph.ShortestPathRouter:solve()Ljava.util.List;
org.eclipse.draw2d.text.FlowFigure:FlowFigure()V
org.eclipse.draw2d.SWTGraphics:pushState()V
org.eclipse.draw2d.geometry.Rectangle:preciseY()D
org.eclipse.draw2d.graph.Path:reconnectSubPaths()V
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.Figure:repaint()V
org.eclipse.draw2d.text.TextFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.graph.Vertex:fullReset()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionBottom()V
org.eclipse.draw2d.text.TextFlow:TextFlow()V
org.eclipse.draw2d.graph.ShortestPathRouter:resetObstacleExclusions()V
org.eclipse.draw2d.graph.Vertex:Vertex(IILorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.PointList:getLastPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Path:invertPriorVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineSubpaths()V
org.eclipse.draw2d.graph.Path:addSegmentsTargetBesideSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.SWTGraphics:setTextAntialias(I)V
org.eclipse.draw2d.graph.ShortestPathRouter:getSpacing()I
org.eclipse.draw2d.geometry.Geometry:productSign(JJ)I
org.eclipse.draw2d.Figure:isValid()Z
org.eclipse.draw2d.SWTGraphics:scale(D)V
org.eclipse.draw2d.DeferredUpdateManager:performValidation()V
org.eclipse.draw2d.Figure:getChildren()Ljava.util.List;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:setOn(Lorg.eclipse.swt.graphics.GC;II)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setX(D)V
org.eclipse.draw2d.graph.Obstacle:growVertices()V
org.eclipse.draw2d.text.InlineFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.Figure:isMirrored()Z
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:resetVertices()V
org.eclipse.draw2d.geometry.Rectangle:getPosition(Lorg.eclipse.draw2d.geometry.Point;)I
org.eclipse.draw2d.text.TextLayout:TextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:countVertices()V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineChildrenPaths()V
org.eclipse.draw2d.geometry.Rectangle:preciseHeight()D
org.eclipse.draw2d.graph.Path:setBendPoints(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.Shape:Shape()V
org.eclipse.draw2d.Figure:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.graph.Obstacle:containsProper(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(FFFF)V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:performTranslate(II)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:run()V
org.eclipse.draw2d.graph.Vertex:addPath(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.graph.Path:setEndPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.Figure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:removePath(Lorg.eclipse.draw2d.graph.Path;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNoPathsSolved()V
org.eclipse.draw2d.SWTGraphics:checkFill()V
org.eclipse.draw2d.graph.Path:setStartPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V
org.eclipse.draw2d.geometry.Point:preciseY()D
org.eclipse.draw2d.graph.Path.SegmentStack:push(Ljava.lang.Object;)V
org.eclipse.draw2d.SWTGraphics:getClip(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexIntersections()V
org.eclipse.draw2d.Figure:revalidate()V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isActive()Z
org.eclipse.draw2d.graph.ShortestPathRouter:getNearestVertex(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Vertex;
org.eclipse.draw2d.parts.Thumbnail:setDirty(Z)V
org.eclipse.draw2d.graph.Segment:intersects(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertOffsetShrink(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestDeformed()V
org.eclipse.draw2d.geometry.PointList:getPoint(Lorg.eclipse.draw2d.geometry.Point;I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.ShortestPathRouter:bendPaths()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNumPoints(Lorg.eclipse.draw2d.geometry.PointList;I)V
org.eclipse.draw2d.text.BlockFlowLayout:blockContentsChanged()V
org.eclipse.draw2d.geometry.Point:getDistance(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.geometry.Dimension:expand(Lorg.eclipse.draw2d.geometry.Dimension;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Path:addPerimiterSegments(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.Figure:setFlag(IZ)V
org.eclipse.draw2d.geometry.Rectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:popState()V
org.eclipse.draw2d.ImageUtilities:createRotatedImage(Lorg.eclipse.swt.graphics.Image;)Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.graph.Path:refreshExcludedObstacles(Ljava.util.List;)V
org.eclipse.draw2d.geometry.PointList:addAll(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.Figure:validate()V
org.eclipse.draw2d.geometry.Rectangle:right()I
org.eclipse.draw2d.StackLayout:layout(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:push(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Obstacle:getSpacing()I
org.eclipse.draw2d.geometry.Dimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestOffsetShrink()V
org.eclipse.draw2d.parts.Thumbnail:setSource(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.SWTGraphics:setAffineMatrix([F)V
org.eclipse.draw2d.UpdateManager:fireValidating()V
org.eclipse.draw2d.geometry.PrecisionPoint:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.ImageUtilities:rotatePixelByPixel(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.SWTGraphics:fillPolygon([I)V
org.eclipse.draw2d.geometry.Ray:length()D
org.eclipse.draw2d.graph.Path:resetPartial()V
org.eclipse.draw2d.geometry.Rectangle:resize(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:repaint(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.6:run()V
org.eclipse.draw2d.graph.Obstacle:shrinkVertex(Lorg.eclipse.draw2d.graph.Vertex;)V | CONSTANT | 2889 | 0 -> 1
org.eclipse.draw2d.graph.Path:getBendPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.graph.Path:addAllSegmentsBetween(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.Figure:repaint(IIII)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.PrecisionDimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.SWTGraphics:drawString(Ljava.lang.String;II)V
org.eclipse.draw2d.geometry.Point:Point()V
org.eclipse.draw2d.SWTGraphics:reconcileHints(II)V
org.eclipse.draw2d.graph.ShortestPathRouter:internalRemoveObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.Figure:isVisible()Z
org.eclipse.draw2d.Figure:setLayoutManager(Lorg.eclipse.draw2d.LayoutManager;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setWidth(D)V
org.eclipse.draw2d.graph.Path.SegmentStack:popObstacle()Lorg.eclipse.draw2d.graph.Obstacle;
org.eclipse.draw2d.geometry.Dimension:Dimension()V
org.eclipse.draw2d.graph.Vertex:grow()V
org.eclipse.draw2d.geometry.PointList:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.text.BlockFlow:createBlockBox()Lorg.eclipse.draw2d.text.BlockBox;
org.eclipse.draw2d.UpdateManager:addUpdateListener(Lorg.eclipse.draw2d.UpdateListener;)V
org.eclipse.draw2d.SWTGraphics:fillText(Ljava.lang.String;II)V
org.eclipse.draw2d.geometry.PointList:ensureCapacity(I)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setHeight(D)V
org.eclipse.draw2d.graph.Obstacle:Obstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.graph.ShortestPathRouter;)V
org.eclipse.draw2d.geometry.Rectangle:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.ShortestPathRouter:getSubpathForSplit(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.text.FlowPage:invalidate()V
org.eclipse.draw2d.graph.Path:cleanup()V
org.eclipse.draw2d.graph.Path:getSubPath(Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.geometry.Rectangle:intersect(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.RayTest:testLengthValues(IID)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:stop()V
org.eclipse.draw2d.geometry.Dimension:getNegated()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Vertex:getSpacing()I
org.eclipse.draw2d.geometry.Point:preciseX()D
org.eclipse.draw2d.geometry.Dimension:negate()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.PageFlowLayout:PageFlowLayout(Lorg.eclipse.draw2d.text.FlowPage;)V
org.eclipse.draw2d.DeferredUpdateManager:repairDamage()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.2:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestQuadBendMiss(I)V
org.eclipse.draw2d.Figure:setValid(Z)V
org.eclipse.draw2d.Figure:getFlag(I)Z
org.eclipse.draw2d.Figure:getPreferredSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.test.AdvancedGraphicsTests.1:paintControl(Lorg.eclipse.swt.events.PaintEvent;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getCopy()Lorg.eclipse.draw2d.SWTGraphics.Clipping;
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.SWTGraphics:drawPoint(II)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:resetTileValues()V
org.eclipse.draw2d.geometry.Rectangle:preciseX()D
org.eclipse.draw2d.Figure:layout()V
org.eclipse.draw2d.test.AdvancedGraphicsTests:assertImageEquality(II)V
org.eclipse.draw2d.parts.Thumbnail:getPreferredSize(II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Obstacle:growVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.geometry.PointList:getPoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Segment:getSlope()D
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:start()V | CONDITION | 6268 | if (x) -> if (!x)
org.eclipse.draw2d.graph.ShortestPathRouter:growObstaclesPass()V
org.eclipse.draw2d.geometry.PrecisionRectangle:setY(D)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.FlowFigure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.text.BlockFlowLayout:BlockFlowLayout(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.Figure:getClientArea()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:getCenter()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Path:isObstacleVisible(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.geometry.Dimension:isEmpty()Z
org.eclipse.draw2d.SWTGraphics:translate(II)V
org.eclipse.draw2d.SWTGraphics.State:clone()Ljava.lang.Object;
org.eclipse.draw2d.geometry.PointList:addPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:addSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;Ljava.util.List;)V
org.eclipse.draw2d.graph.Segment:cosine(Lorg.eclipse.draw2d.graph.Segment;)D
org.eclipse.draw2d.SWTGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.AdvancedGraphicsTests:performTestcase(Ljava.lang.Runnable;[Ljava.lang.Runnable;)V
org.eclipse.draw2d.SWTGraphics:scale(FF)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:restart()V
org.eclipse.draw2d.text.BlockBox:BlockBox(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.graph.Vertex:bend(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTangent()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.4:run()V
org.eclipse.draw2d.Figure:invalidate()V
org.eclipse.draw2d.AbstractLayout:invalidate()V
org.eclipse.draw2d.geometry.Rectangle:setLocation(Lorg.eclipse.draw2d.geometry.Point;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:getClientArea(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopRightIntersection()V
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.geometry.Rectangle:toString()Ljava.lang.String;
org.eclipse.draw2d.geometry.PrecisionDimension:updateInts()V
org.eclipse.draw2d.IFigure.NoInsets:NoInsets()V
org.eclipse.draw2d.graph.Segment:Segment(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexForIntersections(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:run()V
org.eclipse.draw2d.geometry.Rectangle:getCopy()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:AntialiasSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;IILorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:displayImage()V
org.eclipse.draw2d.geometry.Ray:Ray(II)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(IIII)V
org.eclipse.draw2d.graph.Path:generateShortestPath(Ljava.util.List;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:dirtyPathsOn(Lorg.eclipse.draw2d.graph.Vertex;)Z
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:addObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.SWTGraphics:setLineStyle(I)V
org.eclipse.draw2d.SWTGraphics:setLineCap(I)V
org.eclipse.draw2d.geometry.PrecisionRectangle:performScale(D)V
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.DeferredUpdateManager:performUpdate()V
org.eclipse.draw2d.Figure:getUpdateManager()Lorg.eclipse.draw2d.UpdateManager;
org.eclipse.draw2d.SWTGraphics:checkGC()V
org.eclipse.draw2d.geometry.PrecisionPoint:updateInts()V
org.eclipse.draw2d.graph.ShortestPathRouter:removeObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathRight(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.parts.Thumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.parts.Thumbnail:adjustToAspectRatio(Lorg.eclipse.draw2d.geometry.Dimension;Z)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionTop()V
org.eclipse.draw2d.geometry.Rectangle:union(II)Lorg.eclipse.draw2d.geometry.Rectangle; | CONDITION | 21925 | if (x) -> if (!x)
org.eclipse.draw2d.text.FlowPage:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.graph.Path:getEndPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.ShortestPathRouter:labelPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.ColorConstants.SystemColorFactory.1:run()V
org.eclipse.draw2d.geometry.PointList:size()I
org.eclipse.draw2d.geometry.Ray:dotProductL(Lorg.eclipse.draw2d.geometry.Ray;)J
org.eclipse.draw2d.graph.ShortestPathRouter:regenerateChildPaths(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;II)Ljava.util.List;
org.eclipse.draw2d.graph.Path:fullReset()V
org.eclipse.draw2d.geometry.Insets:getWidth()I
org.eclipse.draw2d.graph.ShortestPathRouter:growObstacles()V
org.eclipse.draw2d.graph.Vertex:shrink()V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle()V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V | STATEMENT | 3530 | stmt -> ;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:intersect(IIII)V
org.eclipse.draw2d.parts.Thumbnail:getSourceRectangle()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.AdvancedGraphicsTests.5:run()V
org.eclipse.draw2d.geometry.Insets:getHeight()I
org.eclipse.draw2d.SWTGraphics:setForegroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.parts.Thumbnail:Thumbnail()V
org.eclipse.draw2d.test.ThumbnailTest.TestThumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.text.FlowFigureLayout:FlowFigureLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.geometry.Rectangle:preciseWidth()D
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathAbove(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.geometry.PointList:PointList()V
org.eclipse.draw2d.geometry.Rectangle:translate(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:setGraphicHints(I)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomRightIntersection()V
org.eclipse.draw2d.Figure:useLocalCoordinates()Z
org.eclipse.draw2d.graph.Path:Path()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:FillRules(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;II)V
org.eclipse.draw2d.SWTGraphics:setBackgroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.geometry.Rectangle:scale(D)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:setForegroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.graph.Path:getPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.graph.Path:createVisibilityGraph(Ljava.util.List;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersection()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Obstacle:shrinkVertices()V
org.eclipse.draw2d.graph.Vertex:updateOffset()V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:pop()Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.RectangleFigure:RectangleFigure()V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Path:labelGraph()Z
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getBoundingBox(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.AdvancedGraphicsTests.3:run()V
org.eclipse.draw2d.graph.Path.SegmentStack:pop()Lorg.eclipse.draw2d.graph.Segment;
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:run()V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.PrecisionPoint:PrecisionPoint(DD)V
org.eclipse.draw2d.graph.ShortestPathRouter:refreshChildrenEndpoints(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;)V
org.eclipse.draw2d.graph.Segment:intersects(IIII)Z
org.eclipse.draw2d.geometry.Geometry:cross(JJJJ)J
org.eclipse.draw2d.geometry.Rectangle:contains(II)Z
org.eclipse.draw2d.graph.Segment:getLength()D
org.eclipse.draw2d.graph.Path:linkVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.geometry.Point:getCopy()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.ShortestPathRouter:labelVertex(Lorg.eclipse.draw2d.graph.Segment;JLorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.Rectangle:scale(DD)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:scale(FF)V
org.eclipse.draw2d.graph.Obstacle:reset()V
org.eclipse.draw2d.Figure:erase()V
org.eclipse.draw2d.test.GraphicsClipping:gcClipping()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Path:addSegmentsTargetAboveSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Path:testAndSet(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.geometry.Rectangle:hashCode()I
org.eclipse.draw2d.geometry.PointList:removePoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.Obstacle:init(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:translate(FF)V
org.eclipse.draw2d.graph.ShortestPathRouter:testOffsetSegmentForIntersections(Lorg.eclipse.draw2d.graph.Segment;ILorg.eclipse.draw2d.graph.Path;)I
org.eclipse.draw2d.geometry.Point:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.FlowFigureLayout:invalidate()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:setFillRule(I)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isRunning()Z
org.eclipse.draw2d.geometry.PrecisionDimension:PrecisionDimension(DD)V
org.eclipse.draw2d.geometry.Rectangle:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:internalAddObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.graph.Vertex:Vertex(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Path:determineShortestPath()Z
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:translatePointArray([III)V
org.eclipse.draw2d.graph.Segment:crossProduct(Lorg.eclipse.draw2d.graph.Segment;)J
org.eclipse.draw2d.geometry.Insets:Insets(IIII)V
org.eclipse.draw2d.SWTGraphics:checkText()V
org.eclipse.draw2d.text.InlineFlowLayout:InlineFlowLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.geometry.Point:hashCode()I
org.eclipse.draw2d.geometry.PointList:addPoint(II)V
org.eclipse.draw2d.graph.Vertex:getDeformedRectangle(I)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:orderPaths()V
org.eclipse.draw2d.Figure:fireFigureMoved()V
org.eclipse.draw2d.geometry.Dimension:Dimension(II)V
org.eclipse.draw2d.text.FlowContainerLayout:FlowContainerLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.graph.ShortestPathRouter:updateObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.text.BlockFlow:revalidate()V
org.eclipse.draw2d.geometry.Rectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.SWTGraphics:setAntialias(I)V
org.eclipse.draw2d.ImageUtilities:rotateOptimized(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.test.GraphicsClipping:graphicsClip()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Path:addConnectingSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;ZZ)V
org.eclipse.draw2d.graph.ShortestPathRouter:solveDirtyPaths()I
org.eclipse.draw2d.SWTGraphics:drawPolyline([I)V
org.eclipse.draw2d.Ellipse:Ellipse()V
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.geometry.PrecisionRectangle:getPreciseCopy()Lorg.eclipse.draw2d.geometry.PrecisionRectangle;
org.eclipse.draw2d.Figure.1:addDirtyRegion(Lorg.eclipse.draw2d.IFigure;IIII)V
org.eclipse.draw2d.Figure.1:addInvalidFigure(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.Figure:getBounds()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:clipRect(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.SWTGraphics:setLineJoin(I)V
org.eclipse.draw2d.EventListenerList:containsListener(Ljava.lang.Class;)Z
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:LineSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;III)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:SetPattern(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;Lorg.eclipse.swt.graphics.Pattern;Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.graph.ShortestPathRouter:cleanup()V
org.eclipse.draw2d.UpdateManager:isDisposed()Z
org.eclipse.draw2d.Figure:getBorder()Lorg.eclipse.draw2d.Border;
org.eclipse.draw2d.SWTGraphics:initTransform(Z)V
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;I)V
org.eclipse.draw2d.SWTGraphics:checkSharedClipping()V
org.eclipse.draw2d.SWTGraphics:checkPaint()V
org.eclipse.draw2d.text.BlockFlow:BlockFlow()V
org.eclipse.draw2d.graph.Path:getStartPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.Figure:getInsets()Lorg.eclipse.draw2d.geometry.Insets;
org.eclipse.draw2d.geometry.Point:getPreciseDistance2(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.LayeredPane:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.geometry.Point:toString()Ljava.lang.String;
org.eclipse.draw2d.graph.ShortestPathRouter:labelPaths()V
org.eclipse.draw2d.geometry.Geometry:linesIntersect(IIIIIIII)Z
org.eclipse.draw2d.graph.ShortestPathRouter:addPath(Lorg.eclipse.draw2d.graph.Path;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 2 251 2 166 2 4 6 87 2 284 2 205 2 206 2 66 2 221 4 136 2 231 2 253 2 349 2 
245 2 155 2 120 2 220 2 
221 2 253 2 4 2 285 2 
221 2 253 2 4 2 285 2 
132 2 117 2 292 2 233 2 
101 1 230 1 102 1 162 1 208 1 319 1 350 1 47 1 187 1 49 1 257 1 166 1 50 1 107 1 213 1 358 1 109 1 326 1 359 1 334 1 269 1 366 1 243 1 248 1 175 1 15 1 116 1 16 1 
2 2 187 1 192 4 191 2 9 4 10 2 196 2 198 2 14 2 15 1 16 1 208 1 29 4 218 2 219 2 230 1 232 4 44 2 47 1 49 1 50 1 51 2 248 1 70 2 257 1 258 4 267 2 269 1 272 2 274 2 101 1 102 1 103 2 107 1 288 2 109 1 290 2 115 2 116 1 131 2 311 2 133 2 319 1 324 2 327 2 339 2 344 2 162 1 163 2 350 1 166 1 169 2 358 1 359 1 362 2 363 4 170 2 366 1 175 1 176 2 
103 2 2 2 192 4 191 2 9 2 10 2 196 2 198 2 115 2 14 4 119 2 204 2 29 4 219 2 311 2 133 2 316 2 232 2 324 2 51 2 339 2 70 2 73 2 163 2 258 2 169 2 80 2 267 2 362 2 170 2 271 2 272 2 176 2 274 2 
103 2 2 2 192 4 191 2 9 4 10 2 196 2 198 2 115 2 14 2 29 4 216 2 219 2 311 2 133 2 226 2 227 2 232 2 324 2 51 2 344 2 70 2 163 2 256 2 258 2 353 2 169 2 355 2 267 2 362 2 363 2 170 2 272 2 176 2 274 2 
103 2 2 2 192 4 191 2 9 4 10 2 196 2 198 2 115 2 14 2 29 4 216 2 219 2 311 2 133 2 226 2 227 2 232 2 324 2 51 2 339 2 344 2 70 2 163 2 256 2 258 2 353 2 169 2 355 2 82 2 267 2 362 2 363 2 170 2 272 2 176 2 274 2 
2 2 192 4 191 2 8 2 9 2 10 2 196 4 198 2 14 4 29 4 219 2 232 4 51 2 70 2 258 2 267 2 272 4 274 4 103 2 115 2 124 2 311 2 133 2 144 2 327 2 163 2 169 2 356 2 360 8 362 2 363 2 170 2 176 2 
280 2 0 4 38 2 39 10 40 2 182 2 282 2 229 2 283 2 140 2 1 24 42 2 286 2 320 2 45 8 46 4 105 2 321 8 322 2 188 2 325 2 106 2 108 2 145 6 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 4 332 2 58 2 59 2 241 2 293 2 193 4 294 4 242 2 62 2 147 2 244 8 246 2 63 2 194 2 195 2 295 4 247 4 151 2 296 4 12 2 13 2 249 2 65 2 15 2 158 6 159 12 343 2 17 2 202 2 68 4 297 2 298 2 299 2 74 2 75 2 346 4 300 2 121 4 303 2 352 2 125 2 27 2 357 2 265 4 126 4 214 10 81 2 308 6 215 2 83 12 217 2 365 2 84 6 31 2 86 2 32 2 171 2 309 2 132 1 310 2 221 4 222 2 367 12 312 2 270 4 313 8 275 4 35 4 95 2 225 2 276 2 178 2 370 2 96 2 179 4 138 2 98 12 371 4 100 2 372 2 180 2 
280 2 0 2 38 2 39 10 182 2 282 4 229 2 283 2 1 18 286 2 42 2 43 2 184 2 320 4 45 2 46 4 105 2 321 6 322 2 188 4 108 10 145 2 54 2 110 2 289 2 6 2 291 2 111 2 329 2 330 2 57 2 58 2 332 2 59 2 293 2 193 2 294 4 242 2 62 2 147 4 244 2 63 2 194 2 295 4 247 2 151 2 12 10 296 4 13 4 249 2 15 4 158 4 159 6 342 2 343 2 68 4 298 2 299 2 346 4 121 2 303 2 352 2 125 2 27 2 265 2 357 2 126 4 214 12 306 2 127 2 308 4 83 6 217 4 84 12 365 2 31 2 86 2 32 2 171 2 310 4 221 4 222 2 367 6 270 2 313 2 275 2 35 4 95 2 276 2 225 4 178 2 370 2 96 2 138 2 371 4 98 6 100 2 372 2 
280 2 0 2 38 2 39 10 182 2 229 6 282 2 283 2 140 2 1 24 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 8 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 298 2 299 6 74 2 346 4 300 2 121 2 25 2 303 2 211 4 125 2 27 2 357 2 265 6 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 6 221 4 310 2 222 2 367 10 312 2 270 6 313 4 275 6 369 8 35 4 315 2 95 2 277 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 279 2 371 2 100 2 372 6 
280 2 0 2 38 2 39 10 182 2 229 6 282 2 283 2 140 2 1 24 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 8 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 298 2 299 6 74 2 346 4 300 2 121 2 25 2 303 2 211 4 125 2 27 2 357 2 265 6 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 6 221 4 310 2 222 2 367 10 312 2 270 6 313 4 275 6 369 8 35 4 315 2 95 2 277 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 279 2 371 2 100 2 372 6 
280 2 0 2 38 2 39 10 182 2 41 2 229 6 282 2 283 2 140 2 1 24 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 8 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 298 2 299 6 74 2 346 4 300 2 121 2 25 2 303 2 211 4 125 2 27 2 357 2 265 6 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 6 221 4 310 2 222 2 367 10 312 2 270 6 313 4 275 6 369 6 35 4 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 279 2 371 2 100 2 372 6 
280 2 0 2 38 2 39 10 182 2 41 2 229 6 282 2 283 2 140 2 1 24 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 8 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 298 2 299 6 74 2 346 4 300 2 121 2 25 2 303 2 211 4 125 2 27 2 357 2 265 6 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 6 221 4 310 2 222 2 367 10 312 2 270 6 313 4 275 6 369 8 35 4 315 2 95 2 277 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 279 2 371 2 100 2 372 6 
280 2 0 2 38 2 39 8 182 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 4 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 24 2 164 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 268 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 8 35 4 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 41 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 4 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 24 2 164 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 268 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 8 35 4 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 12 41 2 182 2 282 4 229 4 283 2 140 2 1 26 42 2 286 2 43 2 184 2 320 4 45 8 46 4 105 2 321 8 322 2 188 4 325 2 108 4 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 331 2 57 2 332 2 58 2 59 2 293 2 193 2 294 4 242 2 62 2 147 4 244 4 63 2 194 2 295 4 195 2 247 2 151 2 12 6 296 4 13 4 249 2 250 2 15 4 158 6 159 12 343 2 202 2 68 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 352 6 125 2 264 2 27 2 357 2 265 4 126 4 214 12 307 2 129 2 308 4 215 2 83 12 217 4 84 8 365 2 31 2 86 2 32 2 171 4 89 2 310 4 221 8 222 2 367 12 312 2 270 4 313 4 275 4 369 2 93 2 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 2 138 2 98 12 371 4 100 2 372 4 180 2 
280 2 0 2 38 2 39 12 182 2 282 4 229 4 283 2 140 2 1 26 42 2 286 2 43 2 184 2 320 4 45 8 46 4 105 2 321 8 322 2 188 4 325 2 108 4 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 331 2 57 2 332 2 58 2 59 2 293 2 193 2 294 4 242 2 62 2 147 4 244 4 63 2 194 2 295 4 195 2 247 2 151 2 12 6 296 4 13 4 249 2 250 2 15 4 158 6 159 12 343 2 202 2 68 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 352 6 125 2 264 2 27 2 357 2 265 4 126 4 214 12 307 2 129 2 308 4 215 2 83 12 217 4 84 8 365 2 31 2 86 2 32 2 171 4 89 2 310 4 221 8 222 2 367 12 312 2 270 4 313 4 275 4 369 2 93 2 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 2 138 2 98 12 371 4 100 2 372 4 180 2 
280 4 0 4 38 4 281 2 39 12 182 4 229 4 282 4 283 4 140 4 1 28 42 4 286 4 43 2 184 2 320 4 45 14 46 8 105 4 321 8 322 4 188 4 325 4 108 6 145 4 54 4 110 4 289 4 6 4 291 8 111 8 329 4 330 4 57 2 58 4 332 4 59 6 293 4 193 4 294 8 242 4 62 4 147 4 244 2 63 4 194 4 295 8 195 4 247 4 151 4 12 10 296 10 13 4 249 4 250 4 15 4 158 12 159 20 343 4 202 4 68 2 297 4 298 4 299 4 74 4 346 10 300 4 121 4 303 4 352 4 125 4 27 4 357 4 265 4 126 8 214 24 307 4 129 2 308 8 215 4 83 20 217 4 84 14 365 4 31 4 86 4 32 4 171 4 221 8 310 4 222 4 367 20 312 4 270 4 313 8 91 2 275 4 94 2 35 8 95 4 276 4 225 4 178 4 370 4 138 4 98 20 371 8 100 4 180 2 372 4 
280 2 0 2 38 2 39 12 182 2 229 4 282 4 283 2 140 2 1 24 42 2 286 2 184 2 320 4 45 6 46 4 105 2 321 8 322 2 188 4 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 4 242 2 62 2 147 4 244 2 63 2 194 2 295 4 195 2 247 2 151 2 12 2 296 6 13 4 249 2 250 2 15 4 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 6 300 2 121 2 303 2 79 2 125 2 27 2 357 2 265 4 126 4 214 12 307 4 129 2 308 4 215 2 83 10 217 4 84 6 365 2 31 2 86 2 32 2 171 4 221 6 310 4 222 2 367 10 312 2 270 4 313 4 91 2 275 4 94 2 35 4 95 2 276 2 225 4 178 2 370 2 138 2 98 10 371 4 100 2 372 4 
280 4 0 6 38 4 39 10 182 4 229 6 282 2 283 4 140 4 1 28 42 4 286 4 184 2 320 2 45 12 46 4 105 4 321 8 322 4 188 2 325 4 108 4 52 2 145 4 54 4 110 4 289 4 6 4 291 6 111 8 329 4 330 4 58 4 332 4 59 4 293 4 193 4 294 4 242 4 62 4 147 2 63 4 194 4 295 4 195 4 247 4 151 4 12 4 296 8 13 2 249 4 250 4 15 2 158 12 159 20 343 4 202 4 297 4 298 4 299 6 74 4 346 8 300 4 121 6 303 4 79 2 125 4 27 4 357 4 265 6 126 8 214 20 307 2 129 2 308 8 215 4 83 20 217 2 84 12 365 4 31 4 86 4 32 4 171 6 221 6 310 2 222 4 367 20 312 4 270 6 313 6 275 6 369 2 35 8 95 4 276 4 225 2 178 4 370 4 179 2 138 4 98 20 371 4 100 4 372 6 
280 4 0 4 38 4 39 12 182 4 229 4 282 4 283 4 140 2 1 26 42 4 286 4 184 2 320 4 45 10 46 6 105 4 321 8 322 4 188 4 325 2 108 4 145 4 54 4 110 4 289 4 6 2 291 6 111 6 329 4 330 4 58 4 332 4 59 2 293 4 193 4 294 6 242 4 62 4 147 4 63 4 194 4 336 2 295 6 195 2 247 4 151 4 12 4 296 6 13 4 249 4 250 2 338 2 15 4 158 10 159 18 343 4 202 2 68 2 297 2 298 4 299 4 74 2 346 6 300 2 121 4 303 4 125 4 27 4 357 4 265 4 126 8 214 14 307 4 129 2 308 4 215 2 83 18 217 4 84 8 365 4 31 4 86 4 32 2 171 4 221 6 310 4 222 4 367 18 312 4 270 4 313 6 223 2 134 2 275 4 35 8 95 4 276 4 225 4 178 4 370 4 138 4 98 18 371 6 100 2 180 2 372 4 
280 2 0 2 38 2 39 16 182 2 229 4 282 4 283 2 140 2 1 30 42 2 286 2 184 2 320 6 45 6 46 6 105 2 321 10 322 2 188 6 325 2 108 2 145 2 54 2 110 2 289 2 6 2 189 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 6 242 2 62 2 147 6 244 4 63 2 194 2 336 2 295 6 195 2 247 2 151 2 12 2 296 8 13 6 249 2 250 2 338 2 15 6 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 8 300 2 121 2 303 2 79 2 125 2 27 2 357 2 265 4 126 4 214 14 307 6 129 2 308 6 215 2 83 10 217 4 84 6 365 2 31 2 86 2 32 2 171 4 221 6 310 6 222 2 367 10 312 2 270 4 313 4 223 2 134 2 91 4 275 4 94 4 35 4 95 2 276 2 225 6 178 2 370 2 138 2 98 10 371 6 100 2 372 4 
280 2 0 4 38 4 39 8 182 4 229 4 282 4 283 4 140 2 1 20 42 4 286 4 184 2 320 2 45 6 46 2 234 2 105 4 321 6 322 4 188 2 325 2 108 2 145 4 54 2 110 4 289 4 6 2 291 6 111 4 329 4 330 4 58 4 332 4 59 2 293 4 193 4 294 2 242 4 62 4 147 2 63 4 194 4 295 2 195 2 247 4 151 4 12 2 296 4 13 2 249 4 250 2 338 2 15 2 158 8 159 18 343 4 202 2 297 2 298 4 299 4 74 2 346 4 300 2 121 4 303 2 125 2 27 4 357 4 265 4 126 8 214 14 307 2 129 2 308 4 215 2 83 18 217 4 84 8 365 4 31 4 86 4 32 2 171 4 221 6 310 2 222 4 367 18 312 4 270 4 313 6 223 2 134 2 275 4 35 6 95 4 276 4 225 2 178 2 370 4 138 4 98 18 371 2 100 2 372 4 
280 2 0 2 38 2 39 12 182 2 229 4 282 4 283 2 140 2 1 24 42 2 286 2 184 2 320 4 45 6 46 4 234 2 105 2 321 8 322 2 188 4 325 2 108 2 145 2 54 2 110 2 289 2 6 2 189 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 4 242 2 62 2 147 4 244 2 63 2 194 2 295 4 195 2 247 2 151 2 12 2 296 6 13 4 249 2 250 2 338 2 15 4 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 6 300 2 121 2 303 2 79 2 125 2 27 2 357 2 265 4 126 4 214 12 307 4 129 2 308 6 215 2 83 10 217 4 84 6 365 2 31 2 86 2 32 2 171 4 221 6 310 4 222 2 367 10 312 2 270 4 313 4 223 2 134 2 91 2 275 4 94 2 35 4 95 2 276 2 225 4 178 2 370 2 138 2 98 10 371 4 100 2 372 4 
280 2 0 2 38 2 39 10 182 2 229 6 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 8 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 78 2 79 2 125 2 27 2 357 2 265 6 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 6 221 4 310 2 222 2 367 10 312 2 270 6 313 2 275 4 35 4 95 2 276 2 225 2 178 2 370 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 16 281 2 182 2 282 4 229 8 283 2 140 2 1 34 42 2 286 2 43 2 184 2 320 4 45 6 46 4 105 2 321 12 322 2 188 4 325 2 108 8 145 2 54 2 110 2 289 2 6 2 291 4 111 2 329 2 330 2 331 2 57 2 113 2 332 2 58 2 59 4 293 2 193 2 294 4 242 2 62 2 147 4 244 2 63 2 194 2 195 2 295 4 247 2 151 2 296 6 12 8 13 4 249 2 250 2 15 4 158 4 159 12 343 2 202 2 68 2 297 2 298 2 299 8 74 2 300 2 346 6 121 2 303 2 77 2 352 6 125 2 27 2 357 2 265 8 126 4 214 14 306 2 307 2 129 2 308 4 215 2 83 12 217 4 84 10 365 2 31 2 86 2 32 2 171 8 89 2 310 4 221 8 222 2 367 12 312 2 270 8 313 4 275 8 369 2 92 2 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 2 138 2 98 12 279 2 371 4 100 2 372 8 180 2 
280 2 0 2 38 2 39 16 182 2 282 4 229 8 283 2 140 4 1 36 42 2 286 2 184 2 320 4 45 12 46 4 105 2 321 12 322 2 188 4 325 2 235 2 108 6 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 6 329 2 330 2 331 2 57 2 332 2 58 2 59 2 293 2 193 2 294 4 242 2 61 2 62 2 147 4 244 4 63 2 194 2 195 2 295 4 247 2 151 2 296 4 12 6 13 4 249 2 154 2 250 4 15 4 158 8 159 12 343 2 202 2 68 2 297 2 69 2 298 2 299 8 74 2 346 4 300 2 121 2 24 2 165 2 303 2 77 2 211 8 352 8 125 2 27 2 357 2 265 8 126 4 214 14 306 2 307 2 129 2 308 4 215 4 83 12 217 4 84 8 365 2 31 2 86 2 32 2 171 8 89 2 310 4 221 10 222 2 367 12 312 2 270 8 313 4 275 8 369 12 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 4 138 2 98 12 279 2 371 4 100 2 372 8 180 2 
280 2 0 2 38 2 39 16 281 4 182 2 282 4 229 8 283 2 140 4 1 36 42 2 286 2 184 2 320 4 45 12 46 4 105 2 321 12 322 2 188 4 325 2 235 2 108 6 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 6 329 2 330 2 331 2 57 2 332 2 58 2 59 4 293 2 193 2 294 4 242 2 61 2 62 2 147 4 244 4 63 2 194 2 195 2 295 4 247 2 151 2 296 6 12 8 13 4 249 2 154 2 250 4 15 4 158 8 159 12 343 2 202 2 68 2 297 2 69 2 298 2 299 8 74 2 300 2 346 6 121 2 24 2 165 2 303 2 77 2 211 8 352 8 125 2 27 2 357 2 265 8 126 4 214 14 306 2 307 2 129 2 308 4 215 4 83 12 217 4 84 8 365 2 31 2 86 2 32 2 171 8 89 2 310 4 221 10 222 2 367 12 312 2 270 8 313 4 275 8 369 12 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 4 138 2 98 12 279 2 371 4 100 2 372 8 180 2 
280 2 0 2 38 2 39 16 182 2 282 4 229 8 283 2 140 2 1 36 42 2 286 2 184 2 320 4 45 8 46 4 105 2 321 12 322 2 188 4 325 2 235 2 108 6 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 57 2 332 2 58 2 59 2 293 2 193 2 294 4 242 2 61 2 62 2 147 4 244 4 63 2 194 2 295 4 195 2 247 2 151 2 296 4 12 6 13 4 249 2 154 2 250 2 15 4 158 6 159 10 343 2 202 2 68 2 297 2 69 2 298 2 299 8 74 2 346 4 300 2 121 2 24 2 165 2 303 2 77 2 211 8 352 4 125 2 27 2 357 2 265 8 126 4 214 12 306 2 307 2 129 2 308 4 215 2 83 10 217 4 84 8 365 2 31 2 86 2 32 2 171 8 310 4 221 6 222 2 367 10 312 2 270 8 313 4 275 8 369 12 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 4 138 2 98 10 279 2 371 4 100 2 372 8 180 2 
280 2 0 2 38 2 39 10 182 2 282 4 229 2 283 2 140 2 1 20 42 2 286 2 43 2 184 2 320 4 45 8 46 4 105 2 321 6 322 2 188 4 325 2 108 6 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 57 2 58 2 332 2 59 2 293 2 193 2 294 4 242 2 62 2 147 4 244 2 63 2 194 2 295 4 195 2 247 2 151 2 12 6 296 4 13 4 249 2 15 4 158 6 159 10 343 2 202 2 68 2 297 2 298 2 299 2 74 2 346 4 300 2 121 2 303 2 352 4 125 2 27 2 357 2 265 2 126 4 214 14 306 2 308 4 215 2 83 10 217 4 84 10 365 2 31 2 86 2 32 2 171 2 310 4 221 6 222 2 367 10 312 2 270 2 313 4 275 2 35 4 95 2 276 2 225 4 178 2 370 2 96 2 138 2 371 4 98 10 100 2 372 2 180 2 
280 2 0 2 38 2 39 8 182 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 2 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 4 35 4 36 2 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 41 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 4 296 4 13 2 249 2 154 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 2 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 4 35 4 36 2 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 145 2 54 2 238 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 2 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 4 35 4 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 41 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 145 2 54 2 238 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 2 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 4 35 4 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 16 41 2 182 2 282 4 229 8 283 2 140 2 1 36 42 2 286 2 43 2 184 2 320 4 45 8 46 4 105 2 321 12 322 2 188 4 325 2 106 2 108 4 52 2 145 4 54 2 110 4 289 2 6 2 291 4 111 4 329 2 330 2 57 2 332 2 58 2 59 2 293 2 193 2 294 4 242 2 62 2 147 4 244 4 149 2 63 2 194 2 295 4 195 2 247 2 151 2 152 2 296 4 12 6 13 4 249 2 250 2 15 4 158 6 159 10 343 2 202 2 68 2 297 2 298 2 299 8 74 2 346 4 300 2 121 2 303 2 77 2 352 4 125 2 27 2 357 2 265 10 126 4 214 12 307 2 129 2 308 4 215 2 83 10 217 4 84 8 365 2 31 4 86 2 32 2 171 10 309 2 310 4 221 6 222 2 367 10 312 2 270 10 313 4 275 8 369 2 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 2 138 2 98 10 279 2 371 4 100 2 372 8 180 2 
280 2 0 2 38 2 39 14 182 2 282 4 229 6 283 2 140 2 1 32 42 2 286 2 43 2 184 2 320 4 45 8 46 4 105 2 321 10 322 2 188 4 325 2 108 4 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 57 2 332 2 58 2 59 2 293 2 193 2 294 4 242 2 61 2 62 2 147 4 244 4 63 2 194 2 295 4 195 2 247 2 151 2 12 6 296 4 13 4 249 2 250 2 15 4 158 6 159 10 343 2 202 2 203 2 68 2 297 2 298 2 299 6 74 2 346 4 300 2 121 2 303 2 211 2 352 4 125 2 264 2 27 2 357 2 265 6 126 4 214 12 307 2 129 2 308 4 215 2 83 10 217 4 84 8 365 2 31 2 86 2 32 2 171 6 310 4 221 6 222 2 367 10 312 2 270 6 313 4 275 6 369 6 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 4 138 2 98 10 279 2 371 4 100 2 372 6 180 2 
280 2 0 2 38 2 39 14 41 2 182 2 282 4 229 6 283 2 140 2 1 32 42 2 286 2 43 2 184 2 320 4 45 8 46 4 105 2 321 10 322 2 188 4 325 2 108 4 52 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 57 2 332 2 58 2 59 2 293 2 193 2 294 4 242 2 61 2 62 2 147 4 244 4 63 2 194 2 295 4 195 2 247 2 151 2 12 6 296 4 13 4 249 2 250 2 15 4 158 6 159 10 343 2 202 2 203 2 68 2 297 2 298 2 299 6 74 2 346 4 300 2 121 2 303 2 211 2 352 4 125 2 264 2 27 2 357 2 265 6 126 4 214 12 307 2 129 2 308 4 215 2 83 10 217 4 84 8 365 2 31 2 86 2 32 2 171 6 310 4 221 6 222 2 367 10 312 2 270 6 313 4 275 6 369 6 35 4 95 2 276 2 225 4 178 2 370 2 96 2 179 4 138 2 98 10 279 2 371 4 100 2 372 6 180 2 
280 2 0 2 38 2 39 8 182 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 6 35 4 95 2 276 2 225 2 178 2 370 2 179 2 138 2 278 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 22 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 6 35 4 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 41 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 145 2 54 2 110 2 289 2 6 2 291 2 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 22 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 6 35 4 315 2 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 41 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 2 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 69 2 298 2 299 4 74 2 346 4 300 2 121 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 6 35 4 95 2 276 2 225 2 178 2 370 2 179 2 138 2 278 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 4 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 209 2 121 2 24 2 164 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 8 35 4 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
280 2 0 2 38 2 39 8 182 2 41 2 229 4 282 2 283 2 140 2 1 20 42 2 286 2 184 2 320 2 45 6 46 2 105 2 321 6 322 2 188 2 325 2 108 4 52 2 145 2 54 2 110 2 289 2 6 2 291 4 111 4 329 2 330 2 58 2 332 2 59 2 293 2 193 2 294 2 242 2 61 2 62 2 147 2 63 2 194 2 295 2 195 2 247 2 151 2 12 2 296 4 13 2 249 2 250 2 15 2 158 6 159 10 343 2 202 2 297 2 298 2 299 4 74 2 346 4 300 2 209 2 121 2 24 2 164 2 303 2 211 4 125 2 27 2 357 2 265 4 126 4 214 10 307 2 129 2 308 4 215 2 83 10 217 2 84 6 365 2 31 2 86 2 32 2 171 4 221 4 310 2 222 2 367 10 312 2 270 4 313 4 275 4 369 8 35 4 95 2 276 2 225 2 178 2 370 2 179 2 138 2 98 10 371 2 100 2 372 4 
338 2 1 2 263 2 
221 2 338 2 1 2 263 2 
207 2 323 2 338 2 15 2 239 2 1 2 263 2 
174 2 30 2 19 2 338 2 257 2 15 4 228 2 71 2 262 2 72 2 53 2 252 2 146 2 221 2 183 2 326 2 347 2 137 2 3 6 197 2 248 2 64 2 
174 2 30 2 19 2 338 2 257 2 15 4 228 2 71 2 262 2 72 2 53 2 252 2 146 2 221 2 183 2 326 2 347 2 137 2 3 6 197 2 248 2 64 2 
139 2 101 8 364 2 240 2 20 2 60 4 87 8 335 2 285 2 161 2 11 2 205 8 221 4 231 10 150 2 253 2 348 2 142 2 337 2 349 8 185 2 350 2 186 2 123 2 210 4 33 2 314 8 34 2 166 8 167 2 4 20 261 6 135 2 28 4 136 6 37 2 361 2 201 2 67 2 97 2 128 2 
139 2 101 8 364 2 240 2 20 2 60 4 87 8 335 2 285 2 161 2 11 2 205 8 221 4 231 10 150 2 253 2 348 2 142 2 337 2 349 8 185 2 350 2 186 2 123 2 210 4 33 2 314 8 34 2 166 8 167 2 4 20 261 6 135 2 28 4 136 6 37 2 361 2 201 2 67 2 97 2 128 2 
139 2 101 8 364 2 240 2 20 2 60 4 87 8 335 2 285 2 161 2 11 2 205 8 221 4 231 10 150 2 253 2 348 2 142 2 337 2 349 8 185 2 350 2 186 2 123 2 210 4 33 2 314 8 34 2 166 8 167 2 4 20 261 6 135 2 28 4 136 6 37 2 361 2 201 2 67 2 97 2 128 2 
139 2 101 10 20 2 205 10 161 2 285 2 231 12 253 2 142 2 348 2 349 10 350 2 185 2 186 2 123 2 210 4 166 10 4 24 167 2 261 8 28 6 55 2 328 2 361 2 128 2 364 2 240 2 60 4 87 10 335 4 11 2 221 6 150 2 337 2 314 10 33 2 34 2 135 2 136 8 37 2 201 2 67 2 97 2 
139 2 101 8 364 2 240 2 20 2 60 4 87 8 335 2 285 2 161 2 11 2 205 8 221 4 231 10 150 2 253 2 348 2 142 2 337 2 349 8 185 2 350 2 186 2 123 2 210 4 33 2 314 8 34 2 166 8 167 2 4 20 261 6 135 2 28 4 136 6 37 2 361 2 201 2 67 2 97 2 128 2 
362 2 363 2 23 2 221 4 172 2 232 2 254 2 12 4 122 2 338 2 51 2 108 4 351 2 5 2 305 2 224 2 266 2 
362 4 363 2 85 2 23 2 221 4 172 2 311 2 232 2 254 2 12 4 153 2 287 2 338 2 51 2 15 2 351 2 108 4 5 2 305 2 266 2 224 2 341 2 191 2 
23 2 301 2 302 2 232 6 287 2 48 2 51 2 108 2 5 2 266 2 360 2 191 2 362 4 363 2 85 2 221 2 311 2 172 2 12 2 133 2 338 2 199 2 273 2 15 2 341 2 
221 2 368 2 253 2 4 2 285 2 
104 2 340 2 
104 2 118 2 340 2 
139 2 101 6 364 2 240 2 20 2 60 2 87 6 335 4 285 2 161 2 11 2 205 6 221 6 231 6 150 2 253 2 142 2 337 2 349 6 185 2 186 2 210 2 314 6 34 2 166 6 4 14 261 6 55 2 28 6 136 6 37 2 328 2 201 2 97 2 
139 2 101 8 20 2 285 2 161 2 205 8 231 10 253 2 348 2 142 2 349 8 185 2 350 2 186 2 123 2 210 2 166 8 167 2 4 20 261 4 28 4 128 2 364 2 240 2 60 2 87 8 335 2 11 4 221 4 150 4 337 4 33 2 314 8 34 2 135 2 136 4 201 2 67 2 97 4 
0 2 26 2 292 2 193 2 1 2 145 4 132 2 309 2 265 2 221 2 141 2 295 2 371 2 296 2 46 2 330 4 233 2 
139 2 318 2 130 2 212 2 
18 2 181 2 345 2 101 6 21 2 205 6 231 12 317 2 76 2 348 6 349 4 255 8 350 18 123 6 143 2 166 6 257 4 259 2 4 20 167 8 260 2 304 2 168 2 236 2 237 2 354 2 56 2 7 4 359 4 190 2 128 6 112 4 114 2 333 2 88 2 87 4 334 16 366 4 221 6 148 6 90 2 173 2 248 4 33 6 177 2 156 2 157 2 135 8 200 2 66 2 160 2 67 2 99 4 
18 2 181 2 345 2 101 6 21 2 205 6 231 12 317 2 76 2 348 6 349 4 255 8 350 18 123 6 143 2 166 6 257 4 259 2 4 20 167 8 260 2 304 2 168 2 236 2 237 2 354 2 56 2 7 4 359 4 190 2 128 6 112 4 114 2 333 2 88 2 87 4 334 16 366 4 221 6 148 6 90 2 173 2 248 4 33 6 177 2 156 2 157 2 135 8 200 2 66 2 160 2 67 2 99 4 

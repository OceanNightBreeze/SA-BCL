#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.eclipse.draw2d.test.XYLayoutTest:testPreferredSize()V ERROR java.lang.UnsupportedOperationException (77,106,223) (77,106,223) 
org.eclipse.draw2d.test.RayTest:test_length()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_happypath()V ERROR java.lang.UnsupportedOperationException (77,106,223) (77,106,223) 
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_bugzilla130042()V ERROR java.lang.UnsupportedOperationException (77,106,223) (77,106,223) 
org.eclipse.draw2d.test.PrecisionPointTest:testEquals()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testAntialias()V ERROR java.lang.IllegalStateException 231 
org.eclipse.draw2d.test.AdvancedGraphicsTests:testFillRules()V ERROR java.lang.IllegalStateException 231 
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V ERROR java.lang.IllegalStateException 231 120 
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCapAA()V ERROR java.lang.IllegalStateException 231 120 
org.eclipse.draw2d.test.AdvancedGraphicsTests:testPatterns()V ERROR java.lang.IllegalStateException 231 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBendpoints()V FAILED junit.framework.AssertionFailedError 61 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBlockedPath()V FAILED junit.framework.AssertionFailedError 61 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersection()V FAILED junit.framework.AssertionFailedError 254 249 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCross()V FAILED junit.framework.AssertionFailedError 254 249 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCrossInverted()V FAILED junit.framework.AssertionFailedError 254 249 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionInverted()V FAILED junit.framework.AssertionFailedError 254 249 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersection()V FAILED junit.framework.AssertionFailedError 254 271 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersectionInverted()V FAILED junit.framework.AssertionFailedError 254 271 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformed()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformedInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemovePath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testOffsetShrink()V ERROR java.lang.RuntimeException (100,128) 269 37 198 142 65 112 (126,131,172,220) (126,131,172,220) (126,131,172,220) (126,131,172,220) 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit()V ERROR java.lang.RuntimeException (100,128) 269 37 198 142 65 112 (126,131,172,220) (126,131,172,220) (126,131,172,220) (126,131,172,220) 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit2()V ERROR java.lang.RuntimeException (100,128) 269 37 198 142 65 112 (126,131,172,220) (126,131,172,220) (126,131,172,220) (126,131,172,220) 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendMiss()V ERROR java.lang.RuntimeException (100,128) 269 37 198 142 65 112 (126,131,172,220) (126,131,172,220) (126,131,172,220) (126,131,172,220) 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testShortestPathOutsideOval()V ERROR java.lang.RuntimeException (100,128) 269 37 198 142 65 112 (126,131,172,220) 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottom()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottomInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTop()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTopInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSubpath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangent()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangentInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersection()V ERROR java.lang.RuntimeException (100,128) 269 37 198 142 65 112 (126,131,172,220) (126,131,172,220) 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersectionInverted()V ERROR java.lang.RuntimeException (100,128) 269 37 198 142 65 112 (126,131,172,220) (126,131,172,220) 
org.eclipse.draw2d.test.RectangleTest:test_creationSymmetry()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationValues()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_sameBehavior()V FAILED junit.framework.AssertionFailedError 
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop2()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testHardWrapping()V ERROR java.lang.UnsupportedOperationException (77,106,223) 182 (77,106,223) 
org.eclipse.draw2d.test.TextFlowWrapTest:testSoftWrapping()V ERROR java.lang.UnsupportedOperationException (77,106,223) 182 (77,106,223) 
org.eclipse.draw2d.test.TextFlowWrapTest:testTruncatedWrapping()V ERROR java.lang.UnsupportedOperationException (77,106,223) 182 (77,106,223) 
org.eclipse.draw2d.test.TextFlowWrapTest:testInlineFlow()V ERROR java.lang.UnsupportedOperationException (77,106,223) 182 (77,106,223) 
org.eclipse.draw2d.test.TextFlowWrapTest:testNestedInlineFlows()V ERROR java.lang.UnsupportedOperationException (77,106,223) 182 (77,106,223) 
org.eclipse.draw2d.test.GraphicsClipping:testSimpleClip()V FAILED junit.framework.AssertionFailedError 
org.eclipse.draw2d.test.GraphicsClipping:testTranslatedClip()V FAILED junit.framework.AssertionFailedError 
org.eclipse.draw2d.test.GraphicsClipping:testZoomedClip()V FAILED junit.framework.AssertionFailedError 
org.eclipse.draw2d.test.LayeredPaneTest:testIndexOutOfBounds()V ERROR java.lang.UnsupportedOperationException (77,106,223) 226 (77,106,223) 
org.eclipse.draw2d.test.ImageUtilitiesTest:testImageRotation()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testRotatingImagesWithDifferentDepths()V PASSED
org.eclipse.draw2d.test.TextualTests:testLineRootBidiCommit()V ERROR java.lang.UnsupportedOperationException (77,106,223) 182 (77,106,223) 
org.eclipse.draw2d.test.TextualTests:testGetFirstAndLastOffsetForLine()V ERROR java.lang.UnsupportedOperationException (77,106,223) 182 (77,106,223) 
org.eclipse.draw2d.test.PointListTests:testIntersects()V FAILED junit.framework.AssertionFailedError 
org.eclipse.draw2d.test.PrecisionDimensionTest:testEquals()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_Thumbnail()V ERROR java.lang.IllegalArgumentException 107 67 
org.eclipse.draw2d.test.ThumbnailTest:test_EmptyThumbnail()V ERROR java.lang.IllegalArgumentException 107 67 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.eclipse.draw2d.graph.Vertex:grow()V
org.eclipse.draw2d.geometry.Point:Point(II)V
org.eclipse.draw2d.graph.Path:getPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:push(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.PrecisionPoint:PrecisionPoint(DD)V
org.eclipse.draw2d.Figure:getParent()Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.Figure:revalidate()V
org.eclipse.draw2d.Figure:setLayoutManager(Lorg.eclipse.draw2d.LayoutManager;)V
org.eclipse.draw2d.graph.Path:linkVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.text.FlowPage:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.geometry.Ray:Ray(II)V
org.eclipse.draw2d.geometry.Rectangle:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Obstacle:growVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.graph.Path.SegmentStack:push(Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setX(D)V
org.eclipse.draw2d.graph.Path:cleanup()V
org.eclipse.draw2d.text.TextFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout; | RETURN | 3700 | return null
org.eclipse.draw2d.text.BlockBox:BlockBox(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.graph.Segment:intersects(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.geometry.Point:preciseY()D
org.eclipse.draw2d.SWTGraphics.RectangleClipping:setOn(Lorg.eclipse.swt.graphics.GC;II)V
org.eclipse.draw2d.text.FlowContainerLayout:FlowContainerLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.ShortestPathRouter:addObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Path:setStartPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Vertex:Vertex(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.Figure:repaint()V
org.eclipse.draw2d.graph.Obstacle:init(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:labelPaths()V
org.eclipse.draw2d.geometry.PrecisionRectangle:setWidth(D)V
org.eclipse.draw2d.graph.Vertex:getDeformedRectangle(I)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:refreshChildrenEndpoints(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;)V
org.eclipse.draw2d.geometry.Geometry:linesIntersect(IIIIIIII)Z
org.eclipse.draw2d.geometry.PointList:getLastPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.SWTGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.AbstractLayout:invalidate()V
org.eclipse.draw2d.graph.ShortestPathRouter:getSpacing()I
org.eclipse.draw2d.graph.Path:addSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;Ljava.util.List;)V
org.eclipse.draw2d.geometry.PointList:getPoint(Lorg.eclipse.draw2d.geometry.Point;I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.Rectangle:isEmpty()Z
org.eclipse.draw2d.graph.ShortestPathRouter:removePath(Lorg.eclipse.draw2d.graph.Path;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:internalRemoveObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.geometry.Rectangle:preciseHeight()D
org.eclipse.draw2d.graph.Vertex:bend(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.PointList:addPoint(II)V
org.eclipse.draw2d.graph.Vertex:getSpacing()I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNoPathsSolved()V
org.eclipse.draw2d.SWTGraphics:setClip(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:getNearestVertex(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Vertex;
org.eclipse.draw2d.Figure:getBounds()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.parts.Thumbnail:Thumbnail()V
org.eclipse.draw2d.geometry.Geometry:cross(JJJJ)J
org.eclipse.draw2d.text.FlowPage:invalidate()V
org.eclipse.draw2d.graph.ShortestPathRouter:resetObstacleExclusions()V
org.eclipse.draw2d.geometry.Geometry:productSign(JJ)I
org.eclipse.draw2d.Figure:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.geometry.PointList:PointList([I)V
org.eclipse.draw2d.graph.ShortestPathRouter:testOffsetSegmentForIntersections(Lorg.eclipse.draw2d.graph.Segment;ILorg.eclipse.draw2d.graph.Path;)I
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle()V
org.eclipse.draw2d.graph.Path:getStartPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.graph.ShortestPathRouter:removeObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNumPoints(Lorg.eclipse.draw2d.geometry.PointList;I)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionTop()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestDeformed()V
org.eclipse.draw2d.graph.ShortestPathRouter:solveDirtyPaths()I
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexForIntersections(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.parts.Thumbnail:setSource(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.SWTGraphics:reconcileHints(II)V
org.eclipse.draw2d.text.TextFlow:TextFlow()V
org.eclipse.draw2d.graph.Path:addAllSegmentsBetween(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineSubpaths()V
org.eclipse.draw2d.parts.Thumbnail:setScales(FF)V
org.eclipse.draw2d.graph.Path:addSegmentsTargetBesideSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.SWTGraphics:translate(II)V
org.eclipse.draw2d.geometry.Rectangle:preciseWidth()D
org.eclipse.draw2d.geometry.PrecisionRectangle:performTranslate(II)V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.text.PageFlowLayout:PageFlowLayout(Lorg.eclipse.draw2d.text.FlowPage;)V
org.eclipse.draw2d.geometry.Rectangle:hashCode()I
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.BlockFlow:BlockFlow()V
org.eclipse.draw2d.geometry.PrecisionRectangle:getPreciseCopy()Lorg.eclipse.draw2d.geometry.PrecisionRectangle;
org.eclipse.draw2d.graph.Path:setEndPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.Point:preciseX()D
org.eclipse.draw2d.Figure:getLayoutManager()Lorg.eclipse.draw2d.LayoutManager;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersectionCross()V
org.eclipse.draw2d.SWTGraphics:setAntialias(I)V
org.eclipse.draw2d.geometry.Rectangle:contains(II)Z
org.eclipse.draw2d.graph.Path:testAndSet(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.ImageUtilities:rotateOptimized(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.text.TextLayout:TextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.geometry.Rectangle:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.text.FlowFigure:FlowFigure()V
org.eclipse.draw2d.graph.Path:fullReset()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Point:Point()V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPaths()V
org.eclipse.draw2d.Figure.1:addInvalidFigure(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;I)V
org.eclipse.draw2d.SWTGraphics:getClip(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:getUpdateManager()Lorg.eclipse.draw2d.UpdateManager;
org.eclipse.draw2d.graph.Path.SegmentStack:pop()Lorg.eclipse.draw2d.graph.Segment;
org.eclipse.draw2d.graph.Path:invertPriorVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V | STATEMENT | 3530 | stmt -> ;
org.eclipse.draw2d.UpdateManager:addUpdateListener(Lorg.eclipse.draw2d.UpdateListener;)V | CONDITION | 3187 | if (x) -> if (!x)
org.eclipse.draw2d.graph.Vertex:updateOffset()V
org.eclipse.draw2d.geometry.Rectangle:toString()Ljava.lang.String;
org.eclipse.draw2d.geometry.Rectangle:setLocation(Lorg.eclipse.draw2d.geometry.Point;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.PrecisionDimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:solve()Ljava.util.List;
org.eclipse.draw2d.SWTGraphics:initTransform(Z)V
org.eclipse.draw2d.text.BlockFlowLayout:blockContentsChanged()V
org.eclipse.draw2d.graph.ShortestPathRouter:getSubpathForSplit(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.Shape:Shape()V
org.eclipse.draw2d.graph.ShortestPathRouter:addPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.Figure:getFlag(I)Z
org.eclipse.draw2d.Figure:invalidate()V
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V
org.eclipse.draw2d.text.InlineFlowLayout:InlineFlowLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getBoundingBox(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.RectangleFigure:RectangleFigure()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:translate(FF)V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineChildrenPaths()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:isObstacleVisible(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Obstacle;)V | STATEMENT | 9849 | stmt -> ;
org.eclipse.draw2d.Figure:repaint(IIII)V
org.eclipse.draw2d.text.BlockFlow:createBlockBox()Lorg.eclipse.draw2d.text.BlockBox;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:getEndPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.Figure:erase()V
org.eclipse.draw2d.geometry.PrecisionRectangle:setY(D)V
org.eclipse.draw2d.graph.Vertex:Vertex(IILorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.Rectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.graph.Path:Path()V
org.eclipse.draw2d.graph.Vertex:addPath(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.Figure:repaint(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Segment:cosine(Lorg.eclipse.draw2d.graph.Segment;)D
org.eclipse.draw2d.graph.Path:generateShortestPath(Ljava.util.List;)Z
org.eclipse.draw2d.geometry.Rectangle:scale(D)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.parts.Thumbnail:getSourceRectangle()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Segment:crossProduct(Lorg.eclipse.draw2d.graph.Segment;)J
org.eclipse.draw2d.graph.Segment:getSlope()D
org.eclipse.draw2d.graph.ShortestPathRouter:bendPaths()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTangent()V
org.eclipse.draw2d.graph.ShortestPathRouter:resetVertices()V
org.eclipse.draw2d.graph.Vertex:fullReset()V
org.eclipse.draw2d.graph.Obstacle:containsProper(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionBottom()V
org.eclipse.draw2d.geometry.PrecisionRectangle:performScale(D)V
org.eclipse.draw2d.graph.Vertex:shrink()V
org.eclipse.draw2d.text.TextFlow:TextFlow(Ljava.lang.String;)V
org.eclipse.draw2d.graph.Obstacle:shrinkVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.PointList:size()I
org.eclipse.draw2d.geometry.Rectangle:Rectangle(IIII)V
org.eclipse.draw2d.graph.Path:reconnectSubPaths()V
org.eclipse.draw2d.SWTGraphics:setBackgroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.PointList:getPoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.PrecisionPoint:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:labelGraph()Z
org.eclipse.draw2d.graph.ShortestPathRouter:updateObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Obstacle:getSpacing()I
org.eclipse.draw2d.graph.ShortestPathRouter:growObstacles()V
org.eclipse.draw2d.geometry.Rectangle:union(II)Lorg.eclipse.draw2d.geometry.Rectangle; | CONDITION | 21925 | if (x) -> if (!x)
org.eclipse.draw2d.geometry.Rectangle:scale(DD)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Path:determineShortestPath()Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:labelPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Path:resetPartial()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path.SegmentStack:popObstacle()Lorg.eclipse.draw2d.graph.Obstacle;
org.eclipse.draw2d.geometry.PointList:removePoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.Figure:setValid(Z)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathAbove(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.ImageUtilities:rotatePixelByPixel(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.text.FlowFigure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.graph.ShortestPathRouter:cleanup()V
org.eclipse.draw2d.SWTGraphics:scale(D)V
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:countVertices()V
org.eclipse.draw2d.geometry.Insets:getWidth()I
org.eclipse.draw2d.graph.Segment:getLength()D
org.eclipse.draw2d.geometry.PrecisionDimension:PrecisionDimension(DD)V
org.eclipse.draw2d.graph.Obstacle:reset()V
org.eclipse.draw2d.SWTGraphics:checkPaint()V
org.eclipse.draw2d.graph.ShortestPathRouter:internalAddObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.geometry.PrecisionRectangle:setHeight(D)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersection()V
org.eclipse.draw2d.SWTGraphics:scale(FF)V
org.eclipse.draw2d.geometry.PointList:addAll(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.geometry.Point:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.graph.Path:createVisibilityGraph(Ljava.util.List;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:preciseX()D
org.eclipse.draw2d.geometry.PointList:PointList()V
org.eclipse.draw2d.geometry.Rectangle:getCopy()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:getCenter()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.ImageUtilities:createRotatedImage(Lorg.eclipse.swt.graphics.Image;)Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.EventListenerList:containsListener(Ljava.lang.Class;)Z
org.eclipse.draw2d.geometry.Insets:Insets(IIII)V
org.eclipse.draw2d.SWTGraphics:checkGC()V
org.eclipse.draw2d.text.FlowFigureLayout:FlowFigureLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.geometry.Point:getCopy()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.Point:hashCode()I
org.eclipse.draw2d.graph.Path:getBendPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.graph.ShortestPathRouter:regenerateChildPaths(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;II)Ljava.util.List;
org.eclipse.draw2d.Figure:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.Point:toString()Ljava.lang.String;
org.eclipse.draw2d.geometry.Rectangle:getPosition(Lorg.eclipse.draw2d.geometry.Point;)I
org.eclipse.draw2d.geometry.PointList:removeAllPoints()V
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:pop()Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.geometry.Point:getDistance(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.graph.Path:refreshExcludedObstacles(Ljava.util.List;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Obstacle:Obstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.graph.ShortestPathRouter;)V
org.eclipse.draw2d.graph.ShortestPathRouter:growObstaclesPass()V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.SWTGraphics:checkSharedClipping()V
org.eclipse.draw2d.graph.ShortestPathRouter:testAndDirtyPaths(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.LayeredPane:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.geometry.Rectangle:bottom()I | OPERATOR | 2947 | + -> *
org.eclipse.draw2d.graph.Path:setBendPoints(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:scale(FF)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle()V
org.eclipse.draw2d.SWTGraphics:pushState()V | CONDITION | 19529 | if (x) -> if (!x)
org.eclipse.draw2d.text.BlockFlowLayout:BlockFlowLayout(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.geometry.Rectangle:preciseY()D
org.eclipse.draw2d.graph.Segment:Segment(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.geometry.Insets:getHeight()I
org.eclipse.draw2d.geometry.Dimension:Dimension(II)V
org.eclipse.draw2d.geometry.Point:getPreciseDistance2(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.geometry.PrecisionPoint:updateInts()V
org.eclipse.draw2d.SWTGraphics:drawPoint(II)V
org.eclipse.draw2d.text.FlowFigureLayout:invalidate()V
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.geometry.PointList:addPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.GraphicsClipping:gcClipping()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.PointList:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z | CONSTANT | 6937 | 1 -> 0
org.eclipse.draw2d.geometry.PrecisionDimension:updateInts()V
org.eclipse.draw2d.Ellipse:Ellipse()V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomLeftIntersection()V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:updateInts()V
org.eclipse.draw2d.graph.Path:addPerimiterSegments(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.Dimension:Dimension()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:dirtyPathsOn(Lorg.eclipse.draw2d.graph.Vertex;)Z
org.eclipse.draw2d.text.InlineFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.Figure:setFlag(IZ)V
org.eclipse.draw2d.graph.ShortestPathRouter:labelVertex(Lorg.eclipse.draw2d.graph.Segment;JLorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Obstacle:growVertices()V
org.eclipse.draw2d.Figure.1:addDirtyRegion(Lorg.eclipse.draw2d.IFigure;IIII)V
org.eclipse.draw2d.geometry.Rectangle:right()I
org.eclipse.draw2d.graph.Segment:intersects(IIII)Z
org.eclipse.draw2d.Figure:fireFigureMoved()V
org.eclipse.draw2d.test.GraphicsClipping:graphicsClip()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.RayTest:testLengthValues(IID)V
org.eclipse.draw2d.Figure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:addConnectingSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;ZZ)V
org.eclipse.draw2d.geometry.Ray:length()D
org.eclipse.draw2d.graph.Path:addObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Path:getSubPath(Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomRightIntersection()V
org.eclipse.draw2d.graph.Obstacle:shrinkVertices()V
org.eclipse.draw2d.geometry.Rectangle:translate(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.BlockFlow:revalidate()V
org.eclipse.draw2d.geometry.Ray:dotProductL(Lorg.eclipse.draw2d.geometry.Ray;)J
org.eclipse.draw2d.geometry.PointList:ensureCapacity(I)V
org.eclipse.draw2d.SWTGraphics:setLineWidth(I)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexIntersections()V
org.eclipse.draw2d.Figure:isVisible()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 2 103 2 119 2 178 2 99 2 116 2 35 2 106 2 257 2 5 6 6 2 123 2 159 4 7 2 
265 2 275 2 268 2 10 2 
77 2 5 2 106 2 159 2 
77 2 5 2 106 2 159 2 
238 2 97 2 4 2 163 2 
277 2 231 2 
161 2 231 2 
277 2 231 2 
120 2 277 2 87 2 231 2 
161 2 34 2 231 2 
145 2 215 2 79 6 0 2 216 4 147 2 218 12 1 24 146 2 217 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 83 2 84 12 151 4 8 2 88 4 225 2 227 6 12 2 13 8 154 2 15 2 156 2 92 2 228 2 93 4 230 2 158 8 159 4 95 4 160 2 162 4 97 1 98 2 234 12 19 12 237 12 100 2 164 2 165 2 22 2 23 2 24 2 25 8 243 4 27 2 167 4 104 2 28 2 168 2 171 2 31 2 32 4 112 2 33 2 173 2 174 4 252 2 177 2 176 2 36 8 183 2 117 2 37 2 258 2 185 4 186 2 259 2 43 2 44 4 45 6 261 4 188 2 51 4 262 4 53 2 190 2 192 2 54 4 125 2 56 2 196 2 57 2 197 8 198 2 128 2 59 2 61 2 132 2 269 2 133 2 201 4 203 2 202 2 272 2 65 2 66 2 136 10 276 6 209 2 138 4 210 2 71 2 211 4 212 2 73 2 139 2 279 2 141 2 142 2 
145 2 215 4 79 4 0 4 216 2 147 2 218 14 1 20 146 2 217 2 149 2 2 2 3 2 219 2 221 4 222 2 150 4 84 14 151 4 8 2 88 6 225 4 227 10 12 2 13 10 154 4 15 2 156 2 92 2 93 8 230 4 158 2 159 10 95 2 160 2 98 2 234 16 19 14 237 14 100 2 164 2 165 2 22 2 23 4 25 6 243 2 27 4 167 6 104 2 28 2 168 2 105 2 171 2 30 2 31 2 32 6 172 2 112 2 173 2 174 2 252 2 176 2 36 12 183 2 117 2 37 2 258 2 185 6 186 2 259 2 43 2 44 2 45 8 261 8 188 2 48 2 51 6 262 6 53 2 190 2 192 4 54 6 125 2 57 2 197 4 198 2 267 2 128 2 59 2 61 2 269 2 133 4 201 2 203 4 202 4 272 2 65 2 66 4 136 10 70 2 276 2 209 2 138 2 210 2 71 2 211 4 73 2 139 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 24 217 2 147 2 149 2 2 6 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 4 12 2 13 6 154 2 15 2 156 2 92 6 230 2 159 4 95 2 160 2 162 2 234 10 98 2 19 10 237 10 164 6 165 2 22 2 23 2 25 8 27 2 167 4 243 2 104 2 28 2 168 2 171 2 31 2 109 2 32 2 112 2 172 2 249 2 173 2 174 2 252 2 176 2 254 2 36 6 183 2 117 6 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 126 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 6 202 2 203 2 272 2 65 2 66 2 136 10 276 2 209 6 138 6 210 2 71 2 211 4 139 2 214 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 24 217 2 147 2 149 2 2 6 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 4 12 2 13 6 154 2 15 2 156 2 92 6 230 2 159 4 95 2 160 2 162 2 234 10 98 2 19 10 237 10 164 6 165 2 22 2 23 2 25 8 27 2 167 4 243 2 104 2 28 2 168 2 171 2 31 2 109 2 32 2 112 2 172 2 249 2 173 2 174 2 252 2 176 2 254 2 36 6 183 2 117 6 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 126 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 6 202 2 203 2 272 2 65 2 66 2 136 10 276 2 209 6 138 6 210 2 71 2 211 4 139 2 214 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 24 217 2 147 2 149 2 2 6 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 4 12 2 13 6 154 2 15 2 156 2 92 6 230 2 159 4 95 2 160 2 162 2 234 10 98 2 19 10 237 10 164 6 165 2 22 2 23 2 25 8 27 2 167 4 243 2 104 2 28 2 168 2 105 2 171 2 31 2 109 2 32 2 112 2 172 2 249 2 173 2 174 2 252 2 176 2 254 2 36 6 183 2 117 6 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 126 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 6 202 2 203 2 272 2 65 2 66 2 136 10 276 2 209 6 138 6 210 2 71 2 211 4 139 2 214 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 24 217 2 147 2 149 2 2 6 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 4 12 2 13 6 154 2 15 2 156 2 92 6 230 2 159 4 95 2 160 2 162 2 234 10 98 2 19 10 237 10 164 6 165 2 22 2 23 2 25 8 27 2 167 4 243 2 104 2 28 2 168 2 105 2 171 2 31 2 109 2 32 2 112 2 172 2 249 2 173 2 174 2 252 2 176 2 254 2 36 6 183 2 117 6 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 126 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 6 202 2 203 2 272 2 65 2 66 2 136 10 276 2 209 6 138 6 210 2 71 2 211 4 139 2 214 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 4 12 2 13 6 154 2 15 2 156 2 92 4 230 2 159 4 95 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 4 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 171 2 31 2 109 2 32 2 172 2 112 2 173 2 174 2 252 2 176 2 254 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 271 2 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 4 12 2 13 6 154 2 15 2 156 2 92 4 230 2 159 4 95 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 4 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 105 2 171 2 31 2 109 2 32 2 172 2 112 2 173 2 174 2 252 2 176 2 254 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 271 2 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 147 2 218 12 1 26 146 2 217 2 149 2 2 4 3 2 219 2 221 4 222 2 150 4 84 12 151 2 8 2 88 4 89 2 225 4 227 6 12 2 13 8 154 2 15 2 156 2 92 4 93 6 230 4 158 4 159 8 95 2 160 2 162 2 98 2 234 12 19 12 237 12 100 2 164 4 165 2 22 2 23 4 25 8 243 2 27 4 167 4 104 2 28 2 168 2 105 2 171 2 30 2 31 2 32 4 172 2 112 2 173 2 174 2 252 2 176 2 180 2 36 8 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 4 188 2 48 2 51 4 262 4 53 2 190 2 192 4 54 4 125 2 57 2 197 4 198 2 128 2 59 2 61 2 131 2 269 2 133 4 201 4 64 2 203 4 202 4 272 2 65 2 66 2 136 12 276 2 209 4 138 4 210 2 71 2 211 4 73 2 139 2 214 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 147 2 218 12 1 26 146 2 217 2 149 2 2 4 3 2 219 2 221 4 222 2 150 4 84 12 151 2 8 2 88 4 89 2 225 4 227 6 12 2 13 8 154 2 15 2 156 2 92 4 93 6 230 4 158 4 159 8 95 2 160 2 162 2 98 2 234 12 19 12 237 12 100 2 164 4 165 2 22 2 23 4 25 8 243 2 27 4 167 4 104 2 28 2 168 2 171 2 30 2 31 2 32 4 172 2 112 2 173 2 174 2 252 2 176 2 180 2 36 8 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 4 188 2 48 2 51 4 262 4 53 2 190 2 192 4 54 4 125 2 57 2 197 4 198 2 128 2 59 2 61 2 131 2 269 2 133 4 201 4 64 2 203 4 202 4 272 2 65 2 66 2 136 12 276 2 209 4 138 4 210 2 71 2 211 4 73 2 139 2 214 2 279 2 142 2 141 2 
145 4 215 6 79 8 0 4 216 4 146 2 218 20 1 28 217 4 147 4 149 4 2 4 3 4 219 4 221 4 222 4 150 8 84 20 151 2 8 4 88 10 89 4 225 4 227 10 12 4 13 14 154 4 15 4 156 4 92 4 93 4 230 4 158 2 159 8 95 4 18 2 160 4 234 24 98 4 19 20 237 20 100 2 164 4 165 4 22 8 23 4 25 8 27 4 167 8 243 4 104 4 28 4 168 4 171 4 31 4 108 2 32 8 172 2 112 4 173 4 174 4 252 4 176 4 36 14 183 4 117 4 37 4 38 2 258 4 185 10 186 4 259 4 43 4 44 4 45 12 261 6 188 4 51 8 262 8 53 4 190 4 192 4 54 8 125 4 57 4 197 8 198 4 128 4 59 4 131 2 269 4 133 4 201 4 202 4 203 4 272 4 65 4 66 4 136 12 276 4 209 4 138 4 210 4 71 4 211 8 73 2 139 4 279 4 142 4 141 4 
145 2 215 2 79 4 0 2 216 2 218 10 1 24 217 2 147 2 149 2 2 4 3 2 219 2 221 4 222 2 150 4 84 10 8 2 88 6 89 4 225 4 227 2 12 2 13 6 154 2 15 2 156 2 92 4 230 4 158 2 159 6 95 2 18 2 160 2 234 12 98 2 19 10 237 10 164 4 165 2 22 4 23 4 25 8 27 4 167 4 243 2 104 2 28 2 168 2 171 2 31 2 32 4 172 2 112 2 173 2 174 2 252 2 176 2 36 6 183 2 117 4 37 2 38 2 258 2 185 6 186 2 259 2 43 2 44 2 45 6 46 2 261 2 188 2 51 4 262 4 53 2 190 2 192 4 54 4 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 4 201 4 202 4 203 4 272 2 65 2 66 2 136 12 276 2 209 4 138 4 210 2 71 2 211 4 139 2 279 2 142 2 141 2 
145 4 215 4 79 8 0 4 216 6 218 20 1 28 217 4 147 4 149 4 2 6 3 4 219 4 221 2 222 4 150 8 84 20 8 4 88 8 89 2 225 2 227 4 12 4 13 12 154 4 15 4 156 4 92 6 230 2 159 6 95 4 160 4 162 2 234 20 98 4 19 20 237 20 164 6 165 4 22 6 23 2 25 8 27 2 167 8 243 4 104 4 28 4 168 4 171 4 31 4 32 4 172 2 112 4 173 4 174 6 252 4 176 4 36 12 183 4 117 6 37 4 258 4 185 8 186 4 259 4 43 4 44 4 45 12 46 2 261 4 188 4 51 4 262 4 53 4 190 4 192 2 54 4 125 4 57 4 197 6 198 4 128 4 59 4 131 2 269 4 133 2 201 6 202 2 203 2 272 4 65 4 66 4 136 10 276 4 209 6 138 6 210 4 71 4 278 2 211 8 139 4 214 2 279 4 142 4 141 4 
145 2 215 2 79 4 0 2 216 4 146 2 218 18 1 26 217 4 147 4 149 4 2 4 3 4 219 4 221 4 222 4 150 8 84 18 151 2 8 4 88 6 89 4 225 4 227 4 12 4 13 8 154 2 15 4 156 4 92 4 230 4 159 6 95 4 160 4 234 14 98 4 19 18 237 18 164 4 165 4 22 6 23 4 166 2 25 8 27 4 167 6 243 4 104 4 28 4 168 4 171 4 31 4 32 6 172 2 112 4 173 4 174 4 252 2 176 4 36 10 183 4 255 2 117 4 37 4 258 2 185 6 186 4 41 2 259 4 43 2 44 4 45 10 261 4 188 2 51 6 262 6 53 4 190 4 192 4 54 6 125 4 57 4 197 6 198 4 128 2 59 4 131 2 269 2 133 4 201 4 202 4 203 4 272 4 65 4 66 2 137 2 136 12 276 4 209 4 138 4 210 4 71 4 211 8 139 2 279 4 142 4 141 2 
145 2 215 2 79 6 0 2 216 2 218 10 1 30 217 2 147 2 149 2 2 4 3 2 219 2 221 6 222 2 150 4 84 10 8 2 88 8 89 6 225 6 227 2 12 2 13 6 154 2 15 2 156 2 92 4 230 6 158 4 159 6 95 2 18 4 160 2 234 14 98 2 19 10 237 10 164 4 165 2 22 4 23 6 166 2 25 10 27 6 167 4 243 2 104 2 28 2 168 2 171 2 31 2 32 6 172 2 112 2 173 2 174 2 252 2 176 2 36 6 183 2 255 2 117 4 37 2 38 4 258 2 185 8 186 2 41 2 259 2 43 2 44 2 45 6 46 2 261 2 188 2 51 6 262 6 53 2 190 2 192 6 54 6 125 2 57 2 197 4 127 2 198 2 128 2 59 2 131 2 269 2 133 4 201 4 202 4 203 6 272 2 65 2 66 2 137 2 136 16 276 2 209 4 138 4 210 2 71 2 211 4 139 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 4 218 18 1 20 217 4 147 4 149 4 2 4 3 4 219 4 221 2 222 4 150 6 84 18 8 4 88 4 89 2 225 2 227 2 12 2 13 8 154 2 15 4 156 2 92 4 230 2 159 6 95 4 160 4 234 14 98 4 19 18 237 18 164 4 165 4 22 6 23 2 25 6 27 2 167 4 243 4 104 4 28 4 168 4 171 4 31 4 32 2 172 2 112 4 173 4 174 4 252 2 176 4 36 6 183 4 255 2 117 4 37 4 258 2 185 4 186 4 41 2 259 2 43 2 44 4 45 8 261 2 188 2 51 2 262 2 53 4 190 2 192 2 54 2 125 4 57 4 197 6 198 4 128 2 60 2 59 4 131 2 269 2 133 4 201 4 202 4 203 2 272 2 65 4 66 2 137 2 136 8 276 4 209 4 138 4 210 4 71 4 211 8 139 2 279 4 142 4 141 2 
145 2 215 2 79 6 0 2 216 2 218 10 1 24 217 2 147 2 149 2 2 4 3 2 219 2 221 4 222 2 150 4 84 10 8 2 88 6 89 4 225 4 227 2 12 2 13 6 154 2 15 2 156 2 92 4 230 4 158 2 159 6 95 2 18 2 160 2 234 12 98 2 19 10 237 10 164 4 165 2 22 4 23 4 25 8 27 4 167 4 243 2 104 2 28 2 168 2 171 2 31 2 32 4 172 2 112 2 173 2 174 2 252 2 176 2 36 6 183 2 255 2 117 4 37 2 38 2 258 2 185 6 186 2 41 2 259 2 43 2 44 2 45 6 46 2 261 2 188 2 51 4 262 4 53 2 190 2 192 4 54 4 125 2 57 2 197 4 127 2 198 2 128 2 60 2 59 2 131 2 269 2 133 4 201 4 202 4 203 4 272 2 65 2 66 2 137 2 136 12 276 2 209 4 138 4 210 2 71 2 211 4 139 2 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 2 12 2 13 6 154 2 15 2 156 2 92 6 230 2 159 4 95 2 160 2 234 10 98 2 19 10 237 10 164 6 165 2 22 2 23 2 25 8 27 2 167 4 243 2 104 2 28 2 168 2 171 2 31 2 32 2 172 2 112 2 173 2 174 2 252 2 176 2 36 6 183 2 117 4 37 2 258 2 185 4 40 2 186 2 259 2 43 2 44 2 45 6 46 2 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 57 2 197 2 198 2 128 2 59 2 131 2 269 2 133 2 201 6 202 2 203 2 272 2 65 2 66 2 136 10 276 2 209 4 138 6 210 2 71 2 211 4 139 2 279 2 142 2 141 2 
215 2 252 2 176 2 79 4 216 2 1 28 218 8 36 2 149 2 117 8 37 2 219 2 220 2 185 4 221 4 150 4 84 8 45 4 8 2 151 2 261 6 88 4 89 2 225 4 51 2 227 8 13 8 262 2 92 8 93 2 190 2 192 4 54 2 230 4 159 4 95 2 234 10 19 8 237 8 100 2 126 2 164 8 197 4 198 2 165 2 128 2 59 2 23 4 269 2 131 2 133 4 201 8 25 12 167 2 27 4 104 2 202 4 203 4 65 2 171 2 136 16 31 2 32 2 209 8 210 2 138 8 172 2 112 2 211 4 73 2 174 2 142 2 
215 2 252 2 176 2 79 4 216 2 1 28 218 4 117 8 37 2 219 2 220 2 185 4 221 4 84 4 151 2 261 4 88 4 89 2 225 4 51 2 227 4 13 4 262 2 92 8 192 4 54 2 230 4 159 4 95 2 234 4 19 4 237 4 126 2 164 8 198 2 128 2 59 2 23 4 269 2 131 2 133 4 201 8 25 12 27 4 104 2 202 4 203 4 65 2 136 16 31 2 32 2 209 8 138 8 172 2 112 2 211 4 174 2 142 2 
215 2 252 2 176 2 79 4 216 2 1 28 218 4 117 8 37 2 219 2 220 2 185 4 221 4 84 4 151 2 261 4 88 4 89 2 225 4 51 2 227 4 13 4 262 2 92 8 192 4 54 2 230 4 159 4 95 2 234 4 19 4 237 4 126 2 164 8 198 2 128 2 59 2 23 4 269 2 131 2 133 4 201 8 25 12 27 4 104 2 202 4 203 4 65 2 136 16 31 2 32 2 209 8 138 8 172 2 112 2 211 4 174 2 142 2 
215 2 252 2 176 2 79 4 216 2 1 28 218 4 117 8 37 2 219 2 220 2 185 4 221 4 84 4 151 2 261 4 88 4 89 2 225 4 51 2 227 4 13 4 262 2 92 8 192 4 54 2 230 4 159 4 95 2 234 4 19 4 237 4 126 2 164 8 198 2 128 2 59 2 23 4 269 2 131 2 133 4 201 8 25 12 27 4 104 2 202 4 203 4 65 2 136 16 31 2 32 2 209 8 138 8 172 2 112 2 211 4 174 2 142 2 
215 2 252 2 176 2 79 4 216 2 1 16 218 4 117 2 37 2 219 2 185 4 221 4 84 4 8 2 151 2 261 6 88 4 225 4 227 8 51 2 13 8 262 2 92 2 93 2 192 4 54 2 230 4 159 4 95 2 234 8 19 4 237 4 100 2 164 2 197 2 198 2 128 2 59 2 23 4 269 2 133 4 201 2 25 6 27 4 104 2 202 4 203 4 65 2 136 10 31 2 209 2 32 2 210 2 138 2 112 2 172 2 211 4 73 2 174 2 142 2 
145 2 0 4 216 2 218 12 1 20 146 2 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 12 152 2 151 2 8 2 88 2 89 2 225 2 227 4 12 2 13 2 154 4 15 2 156 2 157 2 92 4 230 2 159 6 95 2 160 2 162 2 234 8 98 2 19 12 237 12 164 4 165 2 22 4 23 2 25 6 27 2 167 6 243 2 104 2 28 2 168 2 171 2 30 2 31 2 109 2 32 4 172 2 112 2 173 2 174 2 176 2 254 2 36 10 183 2 117 4 37 2 258 2 185 2 186 2 259 2 43 2 44 2 45 8 261 2 188 2 48 2 51 4 262 4 53 2 190 2 192 2 54 4 125 2 57 2 197 2 198 2 59 2 131 2 133 2 201 4 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 4 279 2 142 2 141 2 
145 2 0 4 216 2 218 12 1 20 146 2 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 12 152 2 151 2 8 2 88 2 89 2 225 2 227 4 12 2 13 2 154 4 15 2 156 2 157 2 92 4 230 2 159 6 95 2 160 2 162 2 234 8 98 2 19 12 237 12 164 4 165 2 22 4 23 2 25 6 27 2 167 6 243 2 104 2 28 2 168 2 105 2 171 2 30 2 31 2 109 2 32 4 172 2 112 2 173 2 174 2 176 2 254 2 36 10 183 2 117 4 37 2 258 2 185 2 186 2 259 2 43 2 44 2 45 8 261 2 188 2 48 2 51 4 262 4 53 2 190 2 192 2 54 4 125 2 57 2 197 2 198 2 59 2 131 2 133 2 201 4 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 4 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 2 12 2 13 6 154 2 15 2 156 2 157 2 92 4 230 2 159 4 95 2 96 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 4 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 171 2 31 2 109 2 32 2 172 2 112 2 173 2 174 2 252 2 176 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 63 2 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 4 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 2 12 2 13 6 154 2 15 2 156 2 157 2 92 4 230 2 159 4 95 2 96 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 4 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 105 2 171 2 31 2 109 2 32 2 172 2 112 2 173 2 174 2 252 2 176 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 63 2 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 4 279 2 142 2 141 2 
145 2 215 2 79 4 0 4 216 2 147 2 218 12 1 36 146 2 217 2 149 2 2 8 3 4 219 2 220 2 221 4 222 2 150 4 84 12 151 2 8 2 88 4 89 2 225 4 227 6 12 2 13 8 154 4 15 2 156 2 92 10 93 6 230 4 158 4 159 10 95 2 160 4 162 2 98 2 234 14 19 12 237 12 100 2 164 8 165 2 22 4 23 4 25 12 243 2 27 4 167 6 104 2 28 2 168 2 105 2 171 2 30 2 31 2 32 4 112 2 172 2 173 2 174 2 252 2 177 2 176 2 115 2 36 12 183 2 117 8 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 8 261 4 188 2 48 2 51 4 262 4 53 2 190 2 192 4 54 4 125 2 196 2 126 2 57 2 197 4 198 2 128 2 59 2 61 2 131 2 269 2 270 2 133 4 201 10 203 4 202 4 272 2 65 2 66 4 136 16 276 4 209 8 138 10 210 2 71 2 278 2 211 4 73 2 139 2 214 2 279 2 141 2 142 2 
145 2 215 2 79 4 0 2 216 2 147 2 218 10 1 32 146 2 217 2 148 2 149 2 2 6 3 2 219 2 221 4 222 2 150 4 84 10 151 2 8 2 88 4 89 2 225 4 227 6 12 2 13 8 154 2 15 2 156 2 92 6 93 4 230 4 158 4 159 6 95 2 96 2 160 2 162 4 98 2 234 12 19 10 237 10 100 2 164 6 165 2 22 4 23 4 25 10 243 2 27 4 167 4 104 2 28 2 168 2 171 2 31 2 109 2 32 4 112 2 172 2 173 2 174 2 252 2 176 2 180 2 36 8 183 2 117 6 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 4 188 2 51 4 262 4 53 2 190 2 192 4 54 4 125 2 126 2 57 2 197 4 198 2 128 2 59 2 61 2 131 2 269 2 133 4 201 6 203 4 202 4 272 2 65 2 66 2 136 14 276 2 209 6 138 6 210 2 71 2 278 2 211 4 73 2 139 2 214 6 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 147 2 218 10 1 32 146 2 217 2 148 2 149 2 2 6 3 2 219 2 221 4 222 2 150 4 84 10 151 2 8 2 88 4 89 2 225 4 227 6 12 2 13 8 154 2 15 2 156 2 92 6 93 4 230 4 158 4 159 6 95 2 96 2 160 2 162 4 98 2 234 12 19 10 237 10 100 2 164 6 165 2 22 2 23 4 25 10 243 2 27 4 167 4 104 2 28 2 168 2 105 2 171 2 31 2 109 2 32 4 112 2 172 2 173 2 174 2 252 2 176 2 180 2 36 8 183 2 117 6 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 4 188 2 51 4 262 4 53 2 190 2 192 4 54 4 125 2 126 2 57 2 197 4 198 2 128 2 59 2 61 2 131 2 269 2 133 4 201 6 203 4 202 4 272 2 65 2 66 2 136 14 276 2 209 6 138 6 210 2 71 2 278 2 211 4 73 2 139 2 214 6 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 2 12 2 13 6 154 2 15 2 156 2 92 4 230 2 159 4 95 2 96 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 4 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 171 2 31 2 109 4 32 2 172 2 112 2 173 2 174 2 175 2 252 2 176 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 194 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 278 2 211 4 139 2 214 6 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 86 2 88 4 89 2 225 2 227 2 12 2 13 6 154 2 15 2 156 2 157 2 92 4 230 2 159 4 95 2 96 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 2 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 171 2 31 2 109 4 32 2 172 2 112 2 173 2 174 2 175 2 252 2 176 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 6 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 86 2 88 4 89 2 225 2 227 2 12 2 13 6 154 2 15 2 156 2 157 2 92 4 230 2 159 4 95 2 96 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 2 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 105 2 171 2 31 2 109 4 32 2 172 2 112 2 173 2 174 2 175 2 252 2 176 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 211 4 139 2 214 6 279 2 142 2 141 2 
145 2 215 2 79 4 0 2 216 2 218 10 1 20 217 2 147 2 149 2 2 4 3 2 219 2 221 2 222 2 150 4 84 10 8 2 88 4 89 2 225 2 227 2 12 2 13 6 154 2 15 2 156 2 92 4 230 2 159 4 95 2 96 2 160 2 162 2 234 10 98 2 19 10 237 10 164 4 165 2 22 4 23 2 25 6 27 2 167 4 243 2 104 2 28 2 168 2 105 2 171 2 31 2 109 4 32 2 172 2 112 2 173 2 174 2 175 2 252 2 176 2 36 6 183 2 117 4 37 2 258 2 185 4 186 2 259 2 43 2 44 2 45 6 261 2 188 2 51 2 262 2 53 2 190 2 192 2 54 2 194 2 125 2 57 2 197 4 198 2 128 2 59 2 131 2 269 2 133 2 201 4 202 2 203 2 272 2 65 2 66 2 136 8 276 2 209 4 138 4 210 2 71 2 278 2 211 4 139 2 214 6 279 2 142 2 141 2 
215 2 252 2 176 2 79 4 216 2 1 14 218 4 117 4 37 2 219 2 185 4 221 2 84 4 261 4 88 4 89 2 225 2 51 2 227 4 13 4 262 2 92 4 192 2 54 2 230 2 159 2 95 2 234 4 19 4 237 4 164 4 198 2 128 2 59 2 23 2 269 2 131 2 133 2 201 4 25 6 27 2 104 2 203 2 202 2 65 2 136 8 31 2 32 2 209 4 138 4 112 2 172 2 211 4 174 2 142 2 
215 2 252 2 176 2 79 4 216 2 1 14 218 4 117 4 37 2 219 2 185 4 221 2 84 4 261 4 88 4 89 2 225 2 51 2 227 4 13 6 262 2 92 4 192 2 54 2 230 2 159 2 95 2 234 6 19 4 237 4 164 4 198 2 128 2 59 2 23 2 269 2 131 2 133 2 201 4 25 6 27 2 104 2 203 2 202 2 65 2 136 8 31 2 32 2 209 4 138 4 112 2 172 2 211 4 174 2 142 2 
137 2 250 2 1 2 
137 2 250 2 1 2 159 2 
137 2 250 2 110 2 1 2 169 2 80 2 230 2 
75 2 135 2 233 2 76 2 251 6 187 2 153 2 29 2 235 2 206 2 137 2 14 2 82 2 58 2 242 2 248 2 199 2 230 4 200 2 42 2 159 2 193 2 
75 2 135 2 233 2 76 2 251 6 187 2 153 2 29 2 235 2 206 2 137 2 14 2 82 2 58 2 242 2 248 2 199 2 230 4 200 2 42 2 159 2 193 2 
77 2 78 2 55 2 253 2 114 2 178 8 99 8 182 2 81 2 257 8 118 2 101 2 240 6 241 2 21 2 5 20 129 2 6 8 130 2 7 6 103 10 119 8 260 2 26 2 85 2 9 2 49 2 274 2 106 2 52 2 155 2 69 2 91 2 208 4 94 4 16 2 17 2 140 2 159 4 232 2 280 2 
77 2 78 2 55 2 253 2 114 2 178 8 99 8 182 2 81 2 257 8 118 2 101 2 240 6 241 2 21 2 5 20 129 2 6 8 130 2 7 6 103 10 119 8 260 2 26 2 85 2 9 2 49 2 274 2 106 2 52 2 155 2 69 2 91 2 208 4 94 4 16 2 17 2 140 2 159 4 232 2 280 2 
77 2 78 2 55 2 253 2 114 2 178 8 99 8 182 2 81 2 257 8 118 2 101 2 240 6 241 2 21 2 5 20 129 2 6 8 130 2 7 6 103 10 119 8 260 2 26 2 85 2 9 2 49 2 274 2 106 2 52 2 155 2 69 2 91 2 208 4 94 4 16 2 17 2 140 2 159 4 232 2 280 2 
77 2 78 2 253 2 114 2 178 10 81 2 182 2 257 10 256 2 118 2 5 24 6 10 7 8 119 10 260 2 85 2 9 2 121 2 49 2 52 2 155 2 91 2 94 6 17 2 16 2 159 6 232 2 55 2 99 10 101 2 240 8 241 2 21 4 129 2 130 2 103 12 26 2 274 2 106 2 69 2 208 6 140 2 280 2 
77 2 78 2 55 2 253 2 114 2 178 8 99 8 182 2 81 2 257 8 118 2 101 2 240 6 241 2 21 2 5 20 129 2 6 8 130 2 7 6 103 10 119 8 260 2 26 2 85 2 9 2 49 2 274 2 106 2 52 2 155 2 69 2 91 2 208 4 94 4 16 2 17 2 140 2 159 4 232 2 280 2 
179 2 239 2 20 2 62 2 244 2 261 2 47 2 227 2 137 2 207 2 109 2 191 2 159 4 
179 2 239 2 20 2 62 2 244 2 261 2 224 2 47 2 227 2 137 2 207 2 109 2 191 2 74 2 159 4 124 2 
113 2 179 2 184 2 261 2 224 4 47 2 227 2 122 2 191 2 229 2 230 2 159 2 124 2 195 2 264 2 239 2 20 2 102 2 273 2 170 2 68 2 137 2 207 6 109 2 74 2 143 2 
77 2 5 2 226 2 106 2 159 2 
90 2 204 2 
181 2 204 2 90 2 
77 2 78 2 253 2 114 2 178 6 99 6 182 2 81 2 256 2 257 6 240 4 21 4 5 14 6 6 130 2 7 6 103 6 119 6 85 2 121 2 9 2 274 2 106 2 52 2 155 2 69 2 208 4 94 6 16 2 17 2 159 6 232 2 
77 2 78 2 253 2 114 4 178 8 182 2 81 2 257 8 118 2 5 20 6 8 7 4 119 8 260 2 85 4 9 2 49 2 52 4 155 2 94 4 16 2 17 2 159 4 232 2 55 2 99 8 240 4 21 2 129 2 130 2 103 10 26 2 274 4 106 2 208 2 140 2 280 2 
44 4 243 2 97 2 245 2 177 2 216 2 88 2 1 2 51 2 238 2 276 4 39 2 32 2 4 2 54 2 159 2 201 2 
253 2 111 2 246 2 189 2 
144 2 263 2 55 2 178 4 99 2 116 2 236 4 257 4 118 6 266 2 5 12 6 2 129 4 103 8 134 2 119 4 26 4 260 4 49 8 247 2 11 2 50 2 205 2 107 2 67 2 72 2 213 2 159 6 140 4 280 6 
144 2 263 2 55 2 178 4 99 2 116 2 236 4 257 4 118 6 266 2 5 12 6 2 129 4 103 8 134 2 119 4 26 4 260 4 49 8 247 2 11 2 50 2 205 2 107 2 67 2 72 2 213 2 159 6 140 4 280 6 

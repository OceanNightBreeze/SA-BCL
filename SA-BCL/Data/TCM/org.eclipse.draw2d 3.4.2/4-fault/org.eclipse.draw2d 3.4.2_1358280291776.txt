#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.eclipse.draw2d.test.XYLayoutTest:testPreferredSize()V PASSED
org.eclipse.draw2d.test.RayTest:test_length()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_happypath()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_bugzilla130042()V PASSED
org.eclipse.draw2d.test.PrecisionPointTest:testEquals()V PASSED
org.eclipse.draw2d.test.ColorConstantTest:test_ColorConstantInit()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testAntialias()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testFillRules()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCapAA()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testPatterns()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBendpoints()V ERROR java.lang.RuntimeException (251,358) 364 157 368 30 351 32 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBlockedPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformed()V FAILED junit.framework.AssertionFailedError 231 145 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformedInverted()V FAILED junit.framework.AssertionFailedError 231 145 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemovePath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testOffsetShrink()V FAILED junit.framework.AssertionFailedError 231 146 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit()V FAILED junit.framework.AssertionFailedError 231 117 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit2()V FAILED junit.framework.AssertionFailedError 231 117 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendMiss()V FAILED junit.framework.AssertionFailedError 231 117 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testShortestPathOutsideOval()V FAILED junit.framework.AssertionFailedError 231 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottom()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottomInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTop()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTopInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSubpath()V FAILED junit.framework.AssertionFailedError 231 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangent()V FAILED junit.framework.AssertionFailedError 231 17 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangentInverted()V FAILED junit.framework.AssertionFailedError 231 17 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationSymmetry()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationValues()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_sameBehavior()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop2()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testHardWrapping()V ERROR java.lang.NegativeArraySizeException 47 92 82 124 
org.eclipse.draw2d.test.TextFlowWrapTest:testSoftWrapping()V ERROR java.lang.NegativeArraySizeException 47 92 82 124 
org.eclipse.draw2d.test.TextFlowWrapTest:testTruncatedWrapping()V ERROR java.lang.NegativeArraySizeException 47 92 82 124 
org.eclipse.draw2d.test.TextFlowWrapTest:testInlineFlow()V ERROR java.lang.NegativeArraySizeException 47 92 82 124 
org.eclipse.draw2d.test.TextFlowWrapTest:testNestedInlineFlows()V ERROR java.lang.NegativeArraySizeException 47 92 82 124 
org.eclipse.draw2d.test.GraphicsClipping:testSimpleClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testTranslatedClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testZoomedClip()V PASSED
org.eclipse.draw2d.test.LayeredPaneTest:testIndexOutOfBounds()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testImageRotation()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testRotatingImagesWithDifferentDepths()V PASSED
org.eclipse.draw2d.test.TextualTests:testLineRootBidiCommit()V ERROR java.lang.NegativeArraySizeException 47 92 82 124 
org.eclipse.draw2d.test.TextualTests:testGetFirstAndLastOffsetForLine()V ERROR java.lang.NegativeArraySizeException 47 92 82 124 
org.eclipse.draw2d.test.PointListTests:testIntersects()V FAILED junit.framework.AssertionFailedError 
org.eclipse.draw2d.test.PrecisionDimensionTest:testEquals()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_Thumbnail()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_EmptyThumbnail()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.eclipse.draw2d.parts.Thumbnail:isDirty()Z
org.eclipse.draw2d.geometry.Rectangle:preciseX()D
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.ShortestPathRouter:updateObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomLeftIntersection()V
org.eclipse.draw2d.SWTGraphics:drawPoint(II)V
org.eclipse.draw2d.AbstractLayout:getBorderPreferredSize(Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.BlockFlow:BlockFlow()V
org.eclipse.draw2d.graph.ShortestPathRouter:testOffsetSegmentForIntersections(Lorg.eclipse.draw2d.graph.Segment;ILorg.eclipse.draw2d.graph.Path;)I
org.eclipse.draw2d.Figure:repaint()V
org.eclipse.draw2d.geometry.Dimension:Dimension(II)V
org.eclipse.draw2d.geometry.PointList:getPoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.ColorConstants.SystemColorFactory.1:run()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.5:run()V
org.eclipse.draw2d.graph.Segment:getSlope()D
org.eclipse.draw2d.graph.ShortestPathRouter:bendPaths()V
org.eclipse.draw2d.graph.Path:testAndSet(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTangent()V
org.eclipse.draw2d.geometry.Point:hashCode()I
org.eclipse.draw2d.geometry.PointList:getPoint(Lorg.eclipse.draw2d.geometry.Point;I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.PointList:addPoint(II)V
org.eclipse.draw2d.Figure:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.Figure:getUpdateManager()Lorg.eclipse.draw2d.UpdateManager;
org.eclipse.draw2d.Figure:getBackgroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.SWTGraphics:clipRect(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.PrecisionDimension:PrecisionDimension(DD)V
org.eclipse.draw2d.geometry.Point:Point()V
org.eclipse.draw2d.SWTGraphics:popState()V
org.eclipse.draw2d.geometry.Point:preciseX()D
org.eclipse.draw2d.graph.Path:generateShortestPath(Ljava.util.List;)Z
org.eclipse.draw2d.test.AdvancedGraphicsTests.2:run()V
org.eclipse.draw2d.graph.ShortestPathRouter:solve()Ljava.util.List;
org.eclipse.draw2d.graph.Vertex:updateOffset()V
org.eclipse.draw2d.graph.Path:resetPartial()V
org.eclipse.draw2d.test.ThumbnailTest.TestThumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.ScaledGraphics:translate(II)V
org.eclipse.draw2d.SWTGraphics:pushState()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionTop()V
org.eclipse.draw2d.test.GraphicsClipping:gcClipping()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.graph.Path.SegmentStack:push(Ljava.lang.Object;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.4:run()V
org.eclipse.draw2d.Figure:translateToParent(Lorg.eclipse.draw2d.geometry.Translatable;)V
org.eclipse.draw2d.geometry.Geometry:productSign(JJ)I
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexIntersections()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersection()V
org.eclipse.draw2d.text.FlowPage:invalidate()V | CONSTANT | 1866 | 3 -> -1
org.eclipse.draw2d.AbstractLayout:invalidate(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.parts.Thumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.LayeredPane:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle()V
org.eclipse.draw2d.IFigure.NoInsets:NoInsets()V
org.eclipse.draw2d.graph.Path:getStartPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.ScaledGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.parts.Thumbnail:setScales(FF)V
org.eclipse.draw2d.Ellipse:Ellipse()V
org.eclipse.draw2d.SWTGraphics:getClip(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.PrecisionDimension:updateInts()V
org.eclipse.draw2d.SWTGraphics:setLineCap(I)V
org.eclipse.draw2d.ImageUtilities:createRotatedImage(Lorg.eclipse.swt.graphics.Image;)Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.Figure.1:addInvalidFigure(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.SWTGraphics:getFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isRunning()Z
org.eclipse.draw2d.geometry.Rectangle:right()I
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:run()V
org.eclipse.draw2d.geometry.Rectangle:toString()Ljava.lang.String;
org.eclipse.draw2d.graph.ShortestPathRouter:growObstaclesPass()V
org.eclipse.draw2d.graph.ShortestPathRouter:growObstacles()V
org.eclipse.draw2d.graph.Path:reconnectSubPaths()V
org.eclipse.draw2d.graph.Segment:getLength()D
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.ScaledGraphics:zoomFont(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.geometry.Point:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:pop()Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.graph.Path:getBendPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.geometry.Rectangle:resize(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.PrecisionRectangle:getPreciseCopy()Lorg.eclipse.draw2d.geometry.PrecisionRectangle;
org.eclipse.draw2d.geometry.PrecisionRectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:intersect(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.BlockFlow:revalidate()V
org.eclipse.draw2d.Figure:isVisible()Z
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(FFFF)V
org.eclipse.draw2d.geometry.Rectangle:union(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:getPosition(Lorg.eclipse.draw2d.geometry.Point;)I
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getCopy()Lorg.eclipse.draw2d.SWTGraphics.Clipping;
org.eclipse.draw2d.geometry.PointList:removeAllPoints()V
org.eclipse.draw2d.SWTGraphics:checkSharedClipping()V
org.eclipse.draw2d.geometry.PointList:addPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.Figure:revalidate()V
org.eclipse.draw2d.test.RayTest:testLengthValues(IID)V
org.eclipse.draw2d.ScaledGraphics:setScale(D)V
org.eclipse.draw2d.graph.Path:getEndPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.SWTGraphics:fillPolygon([I)V
org.eclipse.draw2d.parts.Thumbnail:setDirty(Z)V
org.eclipse.draw2d.ScaledGraphics:setLocalFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.SWTGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setX(D)V
org.eclipse.draw2d.Figure:erase()V
org.eclipse.draw2d.graph.Obstacle:Obstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.graph.ShortestPathRouter;)V
org.eclipse.draw2d.graph.Obstacle:shrinkVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.geometry.Rectangle:preciseY()D
org.eclipse.draw2d.ScaledGraphics:getCachedFont(Lorg.eclipse.draw2d.ScaledGraphics.FontKey;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Vertex:Vertex(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.SWTGraphics:checkFill()V
org.eclipse.draw2d.text.PageFlowLayout:PageFlowLayout(Lorg.eclipse.draw2d.text.FlowPage;)V
org.eclipse.draw2d.SWTGraphics:setFillRule(I)V
org.eclipse.draw2d.Figure:repaint(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics:drawString(Ljava.lang.String;II)V
org.eclipse.draw2d.SWTGraphics:checkPaint()V
org.eclipse.draw2d.ScaledGraphics:scale(D)V
org.eclipse.draw2d.parts.Thumbnail:getScaleX()F
org.eclipse.draw2d.graph.Path:getPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestQuadBendMiss(I)V
org.eclipse.draw2d.geometry.Dimension:negate()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.ShortestPathRouter:addObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:regenerateChildPaths(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;II)Ljava.util.List;
org.eclipse.draw2d.geometry.PointList:PointList()V
org.eclipse.draw2d.graph.ShortestPathRouter:testAndDirtyPaths(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.Figure:getLayoutManager()Lorg.eclipse.draw2d.LayoutManager;
org.eclipse.draw2d.Figure:setLayoutManager(Lorg.eclipse.draw2d.LayoutManager;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:scale(FF)V
org.eclipse.draw2d.ScaledGraphics:dispose()V
org.eclipse.draw2d.geometry.Rectangle:preciseWidth()D
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.geometry.Point:getCopy()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.Rectangle:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersectionCross()V
org.eclipse.draw2d.graph.Path:cleanup()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:SetPattern(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;Lorg.eclipse.swt.graphics.Pattern;Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.text.FlowFigureLayout:FlowFigureLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNoPathsSolved()V
org.eclipse.draw2d.graph.Vertex:fullReset()V
org.eclipse.draw2d.AbstractHintLayout:invalidate()V
org.eclipse.draw2d.SWTGraphics:setLineStyle(I)V
org.eclipse.draw2d.SWTGraphics:setAntialias(I)V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path.SegmentStack:pop()Lorg.eclipse.draw2d.graph.Segment;
org.eclipse.draw2d.graph.Vertex:grow()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestDeformed()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestOffsetShrink()V
org.eclipse.draw2d.graph.Path:addConnectingSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;ZZ)V
org.eclipse.draw2d.graph.ShortestPathRouter:labelPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:FillRules(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;II)V
org.eclipse.draw2d.geometry.Rectangle:getLocation()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.PrecisionPoint:PrecisionPoint(DD)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:assertImageEquality(II)V
org.eclipse.draw2d.geometry.Rectangle:bottom()I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:internalAddObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.graph.Path:addSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;Ljava.util.List;)V
org.eclipse.draw2d.Figure:getPreferredSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Obstacle:containsProper(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.Shape:Shape()V
org.eclipse.draw2d.graph.ShortestPathRouter:labelVertex(Lorg.eclipse.draw2d.graph.Segment;JLorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.Rectangle:translate(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:linkVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics:checkText()V
org.eclipse.draw2d.graph.Path:refreshExcludedObstacles(Ljava.util.List;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setWidth(D)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1:paintControl(Lorg.eclipse.swt.events.PaintEvent;)V
org.eclipse.draw2d.text.FlowFigure:FlowFigure()V
org.eclipse.draw2d.geometry.Ray:dotProductL(Lorg.eclipse.draw2d.geometry.Ray;)J
org.eclipse.draw2d.geometry.PointList:removePoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isActive()Z
org.eclipse.draw2d.geometry.Insets:getWidth()I
org.eclipse.draw2d.Figure:fireFigureMoved()V
org.eclipse.draw2d.graph.Obstacle:getSpacing()I
org.eclipse.draw2d.SWTGraphics:setClip(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:translate(FF)V
org.eclipse.draw2d.graph.Vertex:getDeformedRectangle(I)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexForIntersections(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:fullReset()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:run()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomRightIntersection()V
org.eclipse.draw2d.geometry.Geometry:linesIntersect(IIIIIIII)Z
org.eclipse.draw2d.SWTGraphics:setAffineMatrix([F)V
org.eclipse.draw2d.SWTGraphics:setForegroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Vertex:getSpacing()I
org.eclipse.draw2d.graph.Path:Path()V
org.eclipse.draw2d.Figure:firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V
org.eclipse.draw2d.graph.Segment:crossProduct(Lorg.eclipse.draw2d.graph.Segment;)J
org.eclipse.draw2d.ScaledGraphics:ScaledGraphics(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.geometry.Rectangle:getCenter()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.ImageUtilities:rotateOptimized(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.Figure:getInsets()Lorg.eclipse.draw2d.geometry.Insets;
org.eclipse.draw2d.graph.ShortestPathRouter:recombineChildrenPaths()V
org.eclipse.draw2d.Figure:setPreferredSize(II)V
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.text.BlockFlowLayout:BlockFlowLayout(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.geometry.Dimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:cleanup()V
org.eclipse.draw2d.AbstractLayout:invalidate()V
org.eclipse.draw2d.geometry.Rectangle:getCopy()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:labelPaths()V
org.eclipse.draw2d.graph.ShortestPathRouter:removePath(Lorg.eclipse.draw2d.graph.Path;)Z
org.eclipse.draw2d.geometry.Rectangle:Rectangle(IIII)V
org.eclipse.draw2d.geometry.Point:getDistance(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.parts.Thumbnail:getSourceRectangle()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:addPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.PrecisionPoint:updateInts()V
org.eclipse.draw2d.geometry.PointList:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Obstacle:init(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineSubpaths()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:setOn(Lorg.eclipse.swt.graphics.GC;II)V
org.eclipse.draw2d.text.FlowContainerLayout:FlowContainerLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.SWTGraphics:restoreState(Lorg.eclipse.draw2d.SWTGraphics.State;)V
org.eclipse.draw2d.geometry.Dimension:isEmpty()Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Obstacle:growVertices()V
org.eclipse.draw2d.geometry.PrecisionRectangle:performScale(D)V
org.eclipse.draw2d.Figure:setValid(Z)V
org.eclipse.draw2d.geometry.Rectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.SWTGraphics:drawPolyline([I)V
org.eclipse.draw2d.geometry.Point:Point(II)V
org.eclipse.draw2d.SWTGraphics:setBackgroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.SWTGraphics.State:clone()Ljava.lang.Object;
org.eclipse.draw2d.geometry.Ray:Ray(II)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNumPoints(Lorg.eclipse.draw2d.geometry.PointList;I)V
org.eclipse.draw2d.Figure.1:addDirtyRegion(Lorg.eclipse.draw2d.IFigure;IIII)V
org.eclipse.draw2d.SWTGraphics:SWTGraphics(Lorg.eclipse.swt.graphics.GC;)V
org.eclipse.draw2d.Figure:getForegroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:stop()V
org.eclipse.draw2d.geometry.PointList:size()I
org.eclipse.draw2d.geometry.Rectangle:union(IIII)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.GraphicsClipping:graphicsClip()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.parts.Thumbnail:adjustToAspectRatio(Lorg.eclipse.draw2d.geometry.Dimension;Z)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:run()V
org.eclipse.draw2d.SWTGraphics:getLineWidth()I
org.eclipse.draw2d.geometry.Rectangle:isEmpty()Z
org.eclipse.draw2d.graph.Vertex:bend(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.Insets:getHeight()I
org.eclipse.draw2d.test.AdvancedGraphicsTests:displayImage()V
org.eclipse.draw2d.geometry.Dimension:Dimension()V
org.eclipse.draw2d.graph.Path:addPerimiterSegments(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Segment:intersects(IIII)Z
org.eclipse.draw2d.geometry.Point:toString()Ljava.lang.String;
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.Figure:getFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.Figure:setParent(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.XYLayout:calculatePreferredSize(Lorg.eclipse.draw2d.IFigure;II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.BlockFlowLayout:blockContentsChanged()V
org.eclipse.draw2d.graph.Path.SegmentStack:popObstacle()Lorg.eclipse.draw2d.graph.Obstacle;
org.eclipse.draw2d.graph.Segment:intersects(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.Figure:getParent()Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:resetThumbnailImage()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:intersect(IIII)V
org.eclipse.draw2d.parts.Thumbnail:getPreferredSize(II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics:setTextAntialias(I)V
org.eclipse.draw2d.SWTGraphics:setBackgroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.graph.Path:addAllSegmentsBetween(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.Rectangle:contains(II)Z | OPERATOR | 4102 | + -> -
org.eclipse.draw2d.SWTGraphics:init()V
org.eclipse.draw2d.graph.Segment:Segment(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.geometry.Rectangle:scale(DD)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.ScaledGraphics:getCachedFontData(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.FontData;
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:restart()V
org.eclipse.draw2d.graph.Segment:cosine(Lorg.eclipse.draw2d.graph.Segment;)D
org.eclipse.draw2d.SWTGraphics:fillText(Ljava.lang.String;II)V
org.eclipse.draw2d.graph.Obstacle:reset()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.ImageUtilities:rotatePixelByPixel(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.FigureUtilities:findCommonAncestor(Lorg.eclipse.draw2d.IFigure;Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.Figure:getBorder()Lorg.eclipse.draw2d.Border;
org.eclipse.draw2d.test.AdvancedGraphicsTests.3:run()V
org.eclipse.draw2d.Figure:setFlag(IZ)V
org.eclipse.draw2d.graph.Path:labelGraph()Z
org.eclipse.draw2d.graph.ShortestPathRouter:internalRemoveObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.geometry.PrecisionPoint:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.ScaledGraphics.FontKey:FontKey()V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:start()V
org.eclipse.draw2d.Figure:getBounds()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Path:setEndPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Vertex:shrink()V
org.eclipse.draw2d.SWTGraphics:setAlpha(I)V
org.eclipse.draw2d.Figure:getPreferredSize(II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.FlowPage:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.Figure:getFlag(I)Z
org.eclipse.draw2d.SWTGraphics:translate(II)V
org.eclipse.draw2d.graph.Path:isObstacleVisible(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.SWTGraphics:reconcileHints(II)V
org.eclipse.draw2d.RectangleFigure:RectangleFigure()V
org.eclipse.draw2d.graph.Path:invertPriorVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.SWTGraphics:scale(FF)V
org.eclipse.draw2d.graph.ShortestPathRouter:resetObstacleExclusions()V
org.eclipse.draw2d.Figure:isMirrored()Z
org.eclipse.draw2d.ScaledGraphics.FontKey:FontKey(Lorg.eclipse.swt.graphics.Font;I)V
org.eclipse.draw2d.Figure:invalidate()V
org.eclipse.draw2d.Graphics:translate(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:setLineJoin(I)V
org.eclipse.draw2d.geometry.Rectangle:setLocation(Lorg.eclipse.draw2d.geometry.Point;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Vertex:addPath(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.geometry.Rectangle:scale(D)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:setForegroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.SWTGraphics:translatePointArray([III)V
org.eclipse.draw2d.EventListenerList:containsListener(Ljava.lang.Class;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:refreshChildrenEndpoints(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;)V
org.eclipse.draw2d.geometry.PointList:PointList([I)V
org.eclipse.draw2d.graph.ShortestPathRouter:countVertices()V
org.eclipse.draw2d.graph.ShortestPathRouter:removeObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.ShortestPathRouter:dirtyPathsOn(Lorg.eclipse.draw2d.graph.Vertex;)Z
org.eclipse.draw2d.SWTGraphics:scale(D)V
org.eclipse.draw2d.geometry.PrecisionRectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.ScaledGraphics:createFont(Lorg.eclipse.swt.graphics.FontData;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.6:run()V
org.eclipse.draw2d.UpdateManager:addUpdateListener(Lorg.eclipse.draw2d.UpdateListener;)V
org.eclipse.draw2d.geometry.Rectangle:preciseHeight()D
org.eclipse.draw2d.graph.Obstacle:shrinkVertices()V
org.eclipse.draw2d.geometry.PointList:ensureCapacity(I)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopRightIntersection()V
org.eclipse.draw2d.graph.ShortestPathRouter:getNearestVertex(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Vertex;
org.eclipse.draw2d.geometry.Insets:Insets(IIII)V
org.eclipse.draw2d.Figure:repaint(IIII)V
org.eclipse.draw2d.SWTGraphics:setGraphicHints(I)V
org.eclipse.draw2d.ScaledGraphics:zoomFontHeight(I)I
org.eclipse.draw2d.AbstractLayout:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setHeight(D)V
org.eclipse.draw2d.graph.ShortestPathRouter:resetVertices()V
org.eclipse.draw2d.AbstractLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.Point:negate()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.ScaledGraphics:getLocalFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionBottom()V
org.eclipse.draw2d.graph.Path:setBendPoints(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.geometry.Dimension:expand(Lorg.eclipse.draw2d.geometry.Dimension;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.Figure:setPreferredSize(Lorg.eclipse.draw2d.geometry.Dimension;)V
org.eclipse.draw2d.geometry.Dimension:getNegated()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:AntialiasSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;IILorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.Dimension:Dimension(Lorg.eclipse.draw2d.geometry.Dimension;)V
org.eclipse.draw2d.SWTGraphics:checkGC()V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:resetTileValues()V
org.eclipse.draw2d.AbstractLayout:getPreferredSize(Lorg.eclipse.draw2d.IFigure;II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.Figure:useLocalCoordinates()Z
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle()V
org.eclipse.draw2d.Figure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:solveDirtyPaths()I
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.ScaledGraphics.FontKey:setValues(Lorg.eclipse.swt.graphics.Font;I)V
org.eclipse.draw2d.graph.Path:setStartPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.Geometry:cross(JJJJ)J
org.eclipse.draw2d.parts.Thumbnail:Thumbnail()V
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:performTestcase(Ljava.lang.Runnable;[Ljava.lang.Runnable;)V
org.eclipse.draw2d.geometry.Point:getPreciseDistance2(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.graph.Obstacle:growVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.SWTGraphics:initTransform(Z)V
org.eclipse.draw2d.graph.Path:determineShortestPath()Z
org.eclipse.draw2d.graph.Path:addObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)V | CONDITION | 6751 | if (x) -> if (!x)
org.eclipse.draw2d.geometry.PrecisionDimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.LayeredPane:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.geometry.Rectangle:hashCode()I
org.eclipse.draw2d.graph.Path:createVisibilityGraph(Ljava.util.List;)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.XYLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPaths()V
org.eclipse.draw2d.geometry.PrecisionRectangle:performTranslate(II)V
org.eclipse.draw2d.ScaledGraphics.FontKey:hashCode()I
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getBoundingBox(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:getSpacing()I
org.eclipse.draw2d.geometry.Point:preciseY()D
org.eclipse.draw2d.Figure:isValidationRoot()Z
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:LineSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;III)V
org.eclipse.draw2d.SWTGraphics:setLineWidth(I)V
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:push(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.geometry.Dimension:union(Lorg.eclipse.draw2d.geometry.Dimension;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.parts.Thumbnail:setSource(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.Vertex:Vertex(IILorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setY(D)V
org.eclipse.draw2d.geometry.Ray:length()D
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.Figure:getChildren()Ljava.util.List;
org.eclipse.draw2d.geometry.PrecisionRectangle:updateInts()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
286 2 341 2 262 2 237 2 193 2 141 2 48 2 290 4 198 2 123 2 370 2 22 10 124 2 200 2 6 2 292 4 25 2 245 2 175 2 347 2 296 2 158 2 9 2 51 2 83 2 52 1 224 8 247 3 128 2 10 7 328 1 353 2 377 2 302 8 205 8 111 2 329 2 206 2 278 4 62 6 161 2 280 8 232 2 253 2 335 2 254 2 382 2 92 8 209 6 388 2 258 20 
172 2 386 2 93 2 230 2 
286 2 377 2 302 4 193 2 111 2 329 2 277 2 62 4 280 4 232 2 253 2 22 10 292 4 92 4 209 2 9 2 83 2 224 4 258 18 128 2 190 2 
286 2 22 6 193 2 302 2 111 2 292 4 329 2 277 2 92 2 62 2 280 2 232 2 209 2 9 2 83 2 224 2 258 12 190 2 128 2 253 2 
27 2 152 2 283 2 213 2 
12 1 
217 2 219 2 28 2 31 2 226 2 228 2 229 4 37 4 241 2 246 2 263 2 264 2 84 2 279 2 87 2 89 2 99 2 289 2 293 2 295 2 112 2 113 4 308 2 309 2 330 2 140 2 343 2 345 4 153 2 359 2 167 2 170 2 180 2 379 4 189 4 188 2 
96 2 99 2 289 2 293 2 108 2 295 2 110 2 308 2 309 2 217 2 219 2 28 2 31 2 228 2 37 4 229 4 330 2 42 2 140 2 345 2 150 2 153 2 246 2 359 2 264 4 170 2 84 2 180 2 87 2 89 2 379 2 185 2 188 2 189 2 
99 2 289 2 293 2 295 2 304 2 13 2 113 2 308 2 309 2 217 2 219 2 28 2 31 2 131 2 226 2 228 2 37 4 229 4 330 2 139 2 345 2 153 2 246 2 60 2 359 2 264 2 170 2 84 2 180 2 87 2 378 2 379 4 89 2 188 2 189 2 
99 2 289 2 293 2 295 2 304 2 13 2 113 2 308 2 309 2 319 2 217 2 219 2 28 2 31 2 131 2 226 2 228 2 37 4 229 4 330 2 140 2 139 2 345 2 153 2 246 2 60 2 359 2 264 2 170 2 84 2 180 2 87 2 378 2 379 4 89 2 188 2 189 2 
217 2 219 2 28 2 31 2 228 4 229 4 37 4 246 2 67 2 264 4 273 2 84 2 87 2 89 2 99 4 289 2 293 2 295 2 113 2 308 4 320 2 134 2 330 2 345 4 153 2 359 2 362 8 167 2 170 2 180 2 379 2 188 2 189 2 
44 4 192 4 262 2 236 4 287 2 212 2 119 2 143 2 364 2 215 2 196 2 75 4 102 2 265 2 120 2 147 2 2 2 367 4 121 4 122 2 368 2 77 4 168 2 266 4 154 8 268 8 156 2 27 1 107 8 29 6 201 4 157 2 30 2 32 2 51 2 53 2 129 2 34 2 130 2 351 2 159 4 248 2 227 16 376 6 249 4 355 2 356 4 206 2 86 2 251 2 11 2 88 2 358 2 311 2 256 2 312 2 384 10 184 2 91 2 41 8 66 8 209 2 360 6 187 4 339 2 210 6 95 2 
44 4 45 2 191 4 192 2 236 2 143 2 196 4 102 4 2 2 147 2 103 2 199 2 148 2 154 6 156 4 107 6 201 4 157 2 51 4 53 2 299 2 204 2 351 2 159 4 248 2 249 4 356 4 206 4 207 2 251 2 358 2 15 2 311 2 256 2 313 2 66 6 116 2 209 4 69 2 360 6 70 2 361 2 210 6 165 2 71 2 18 2 262 4 212 2 119 4 363 2 364 2 215 4 75 2 20 2 265 2 121 2 367 4 76 2 122 4 368 2 216 2 77 4 168 2 323 2 371 2 266 4 324 2 268 8 29 6 30 2 32 2 222 2 177 2 129 2 34 2 130 2 133 2 274 2 375 2 376 6 227 18 275 2 86 2 231 2 281 2 88 2 334 2 380 2 90 2 381 2 384 10 184 2 91 2 41 8 137 4 187 4 
44 4 45 2 191 6 192 6 194 2 142 2 288 2 143 2 144 2 196 2 102 2 2 6 147 2 103 2 199 2 148 2 4 2 244 2 154 8 156 2 107 8 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 6 116 6 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 6 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 6 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 325 2 268 12 29 12 30 2 32 2 222 2 177 4 129 6 34 2 130 2 272 2 133 2 274 2 375 6 376 12 227 24 275 2 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 10 184 2 91 6 41 8 137 4 187 4 
44 4 45 2 191 6 192 6 194 2 142 2 288 2 143 2 144 2 196 2 102 2 2 6 147 2 103 2 199 2 148 2 4 2 244 2 154 8 156 2 107 8 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 6 116 6 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 6 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 6 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 325 2 268 12 29 12 30 2 32 2 222 2 177 4 129 6 34 2 130 2 272 2 133 2 274 2 375 6 376 12 227 24 275 2 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 10 184 2 91 6 41 8 137 4 187 4 
44 4 45 2 191 6 192 6 194 2 142 2 288 2 143 2 144 2 196 2 102 2 2 6 147 2 103 2 199 2 148 2 4 2 244 2 154 8 156 2 107 8 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 6 116 6 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 6 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 6 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 325 2 268 12 29 12 30 2 32 2 222 2 177 4 129 6 34 2 130 2 272 2 133 2 274 2 375 6 376 12 227 24 275 2 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 10 184 2 91 6 41 8 137 4 187 4 
44 4 45 2 191 6 192 6 194 2 142 2 288 2 143 2 144 2 196 2 102 2 2 6 147 2 103 2 199 2 148 2 4 2 244 2 154 8 156 2 107 8 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 6 116 6 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 6 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 6 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 325 2 268 12 29 12 30 2 32 2 222 2 177 4 129 6 34 2 130 2 272 2 133 2 274 2 375 6 376 12 227 24 275 2 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 10 184 2 91 6 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 8 156 2 107 6 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 8 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 166 2 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 186 2 41 8 137 4 387 2 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 8 156 2 107 6 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 8 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 166 2 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 186 2 41 8 137 4 387 2 187 4 
44 4 45 2 191 4 192 4 236 2 143 2 145 2 196 4 102 4 2 4 147 2 103 2 199 2 148 2 154 6 156 4 107 8 201 4 157 2 51 4 53 2 299 2 204 2 351 2 159 4 248 2 249 4 356 4 206 4 207 2 251 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 209 4 69 2 360 10 70 2 361 2 210 10 165 2 71 2 18 2 262 4 212 4 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 4 367 4 76 2 122 4 368 2 216 2 77 4 168 2 323 2 371 2 266 4 324 2 268 8 29 10 30 2 32 2 222 2 177 2 129 4 34 2 130 2 133 2 274 2 375 2 376 10 227 22 275 2 86 2 231 2 281 2 88 2 334 2 380 2 183 2 90 2 381 2 384 12 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 191 4 192 4 236 2 143 2 145 2 196 4 102 4 2 4 147 2 103 2 199 2 148 2 154 6 156 4 107 8 201 4 157 2 51 4 53 2 299 2 204 2 351 2 159 4 248 2 249 4 356 4 206 4 207 2 251 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 209 4 69 2 360 10 70 2 361 2 210 10 165 2 71 2 18 2 262 4 212 4 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 4 367 4 76 2 122 4 368 2 216 2 77 4 168 2 323 2 371 2 266 4 324 2 268 8 29 10 30 2 32 2 222 2 177 2 129 4 34 2 130 2 133 2 274 2 375 2 376 10 227 22 275 2 86 2 231 2 281 2 88 2 334 2 380 2 183 2 90 2 381 2 384 12 184 2 91 4 41 8 137 4 187 4 
44 12 45 4 191 12 192 4 236 2 194 4 288 4 143 4 144 4 196 4 102 4 2 4 147 4 103 4 199 4 148 4 244 4 154 12 156 4 107 8 201 8 157 4 8 4 51 4 204 4 53 4 299 4 351 4 159 6 248 4 249 12 356 12 206 4 162 4 207 4 251 4 306 4 14 2 358 4 15 4 311 4 256 4 16 4 257 2 313 4 66 12 116 4 209 8 69 4 360 24 70 4 361 4 210 24 165 4 71 4 18 4 72 4 262 4 212 4 19 2 119 4 363 4 364 4 215 4 75 8 20 4 265 4 121 4 367 8 76 4 122 4 216 4 368 4 77 8 168 4 323 4 371 4 266 8 324 4 268 26 29 24 30 4 32 4 222 4 177 8 129 4 34 4 130 6 272 4 133 4 274 4 375 14 376 24 275 2 227 28 86 4 281 4 88 4 334 4 182 4 380 4 183 2 90 4 381 8 384 12 184 4 91 4 41 16 137 8 187 12 
44 6 45 2 191 6 192 4 236 2 194 2 288 2 143 2 144 2 196 4 102 4 2 4 147 2 103 2 199 2 148 2 244 2 154 6 156 4 107 8 201 6 157 2 8 2 51 4 204 2 53 2 299 2 351 2 159 2 248 2 249 6 356 6 206 4 162 2 207 2 251 2 306 2 358 2 15 2 311 2 256 2 16 4 257 2 313 2 66 6 116 4 209 6 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 4 212 4 19 2 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 4 367 4 76 2 122 4 216 2 368 2 77 4 168 2 323 2 371 2 266 6 324 2 268 14 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 24 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 12 184 2 91 4 136 2 41 8 137 4 187 6 
44 8 45 4 191 12 192 6 194 4 288 4 143 4 144 4 196 2 102 2 2 6 147 4 103 4 199 4 148 4 244 4 154 12 156 2 107 8 201 8 157 4 8 4 51 2 204 4 53 4 299 4 351 4 159 4 248 4 249 8 356 8 206 2 162 4 250 2 207 4 251 4 11 2 306 4 358 4 15 4 311 4 256 4 16 2 313 4 66 12 116 6 209 6 69 4 360 24 70 4 361 4 210 24 165 4 71 4 18 4 72 4 262 2 212 6 119 2 363 4 364 4 215 2 75 8 20 4 265 4 121 6 367 8 76 4 122 2 216 4 368 4 77 8 168 4 323 4 371 4 266 8 324 4 268 24 29 24 221 2 30 4 32 4 222 4 177 8 129 6 34 6 130 4 272 4 133 4 274 4 375 12 376 24 275 2 227 28 86 4 281 4 88 6 334 4 182 4 380 4 183 2 90 4 381 6 384 10 184 4 91 6 136 2 41 16 137 8 187 8 
44 8 45 4 191 10 192 4 194 2 288 2 143 4 144 2 196 4 102 4 2 4 147 2 103 4 3 2 199 4 148 4 244 2 154 8 156 4 107 8 201 6 157 4 8 4 51 4 204 4 53 4 299 4 351 4 159 4 248 2 249 8 356 8 206 4 162 2 207 4 251 2 306 2 14 2 358 2 15 4 311 4 256 4 16 4 313 4 66 8 116 4 209 6 69 4 360 20 70 4 361 4 210 20 165 4 71 4 315 2 18 4 72 2 262 4 212 4 119 4 363 4 364 2 215 4 75 6 20 4 265 2 121 4 367 4 76 4 122 4 216 4 368 4 77 8 168 4 323 4 371 4 266 6 324 4 268 16 29 20 30 4 32 4 222 4 177 6 129 4 34 4 130 2 272 2 133 4 225 2 274 4 375 10 376 20 275 2 227 26 86 2 281 4 282 2 88 4 334 4 182 2 380 4 183 2 90 4 381 6 384 12 184 4 91 4 41 10 137 8 187 8 
44 8 45 2 191 6 192 4 236 4 194 2 288 2 143 2 144 2 196 6 102 6 2 4 147 2 103 2 3 2 199 2 148 2 244 2 154 6 294 2 156 6 107 10 201 8 157 2 8 2 51 6 204 2 53 2 299 2 351 2 159 2 248 2 249 8 356 8 206 4 162 2 207 2 251 2 306 2 358 2 15 2 311 2 256 2 16 6 257 4 313 2 66 6 116 4 209 6 69 2 360 12 70 2 361 2 210 12 165 2 71 2 315 2 18 2 72 2 262 4 212 4 19 4 119 6 363 2 364 2 215 6 75 4 20 2 265 2 121 4 367 6 76 2 122 6 216 2 368 2 77 4 168 2 323 2 371 2 266 8 324 2 268 16 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 225 2 274 2 375 6 376 12 275 2 227 30 86 2 281 2 282 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 16 184 2 91 4 136 2 41 8 137 4 187 8 
44 4 45 4 191 8 192 4 194 2 288 2 143 4 144 2 196 2 102 2 2 4 147 2 103 2 199 4 148 4 244 2 154 6 156 2 107 6 201 4 157 4 8 4 51 2 204 4 53 4 299 4 351 4 159 2 248 2 249 4 356 4 206 4 162 2 207 4 251 2 306 2 358 2 15 4 311 4 256 4 16 2 313 4 66 6 116 4 209 6 69 4 360 20 70 4 361 2 210 20 314 2 165 4 71 4 315 2 18 4 72 2 262 4 212 4 119 2 363 4 364 2 215 2 75 6 20 4 265 2 121 4 367 4 76 4 122 2 216 4 368 4 77 8 168 4 323 2 371 4 266 4 324 4 268 16 29 20 30 4 32 4 222 2 177 4 129 4 34 4 130 2 272 2 133 4 225 2 274 2 375 6 376 20 275 2 227 20 86 2 281 4 282 2 88 4 334 4 182 2 380 4 183 2 90 4 381 6 384 8 184 4 91 4 41 10 137 6 187 4 
44 6 45 2 191 6 192 4 236 2 194 2 288 2 143 2 144 2 196 4 102 4 2 4 147 2 103 2 199 2 148 2 244 2 154 6 294 2 156 4 107 8 201 6 157 2 8 2 51 4 204 2 53 2 299 2 351 2 159 2 248 2 249 6 356 6 206 4 162 2 207 2 251 2 306 2 358 2 15 2 311 2 256 2 16 4 257 2 313 2 66 6 116 4 209 6 69 2 360 12 70 2 361 2 210 12 314 2 165 2 71 2 315 2 18 2 72 2 262 4 212 4 19 2 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 4 367 6 76 2 122 4 216 2 368 2 77 4 168 2 323 2 371 2 266 6 324 2 268 14 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 225 2 274 2 375 6 376 12 275 2 227 24 86 2 281 2 282 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 12 184 2 91 4 136 2 41 8 137 4 187 6 
44 4 45 2 191 6 192 6 194 2 288 2 143 2 144 2 196 2 102 2 2 6 147 2 103 2 199 2 148 2 244 2 154 6 156 2 107 8 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 207 2 251 2 306 2 358 2 15 2 311 2 256 2 16 2 313 2 208 2 66 6 116 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 6 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 10 184 2 91 6 136 2 41 8 137 4 187 4 
44 6 45 2 191 6 192 8 236 2 194 2 142 2 288 2 143 2 144 2 196 4 146 2 102 4 2 8 147 2 103 2 199 2 148 2 106 2 244 2 154 6 156 4 107 12 201 6 157 2 8 2 51 4 204 2 53 2 299 2 351 2 159 4 248 2 249 6 356 6 206 4 162 2 207 2 251 2 306 2 358 2 14 2 15 2 311 2 256 2 16 2 313 2 66 8 116 8 209 8 69 2 360 14 70 2 361 2 210 14 165 2 71 2 72 2 18 2 262 4 212 8 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 8 367 4 76 2 122 4 216 2 368 2 77 4 168 2 323 2 371 2 266 6 324 2 268 12 29 14 30 2 32 2 327 2 222 2 177 4 33 2 129 8 34 2 272 2 130 6 133 2 274 2 375 8 376 14 227 32 275 2 86 4 231 2 281 2 181 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 16 184 2 91 8 41 8 137 4 187 6 
44 4 45 2 191 4 192 8 236 2 142 2 143 2 196 4 102 4 2 8 147 2 103 2 199 2 148 2 106 2 154 6 156 4 107 12 201 4 157 2 51 4 204 2 53 2 299 2 351 2 159 4 248 2 249 4 356 4 206 4 207 2 251 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 8 209 4 69 2 360 10 70 2 361 2 117 2 210 10 165 2 71 2 18 2 262 4 212 8 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 8 367 4 76 2 122 4 368 2 216 2 77 4 168 2 323 2 371 2 266 4 324 2 268 8 29 10 30 2 32 2 222 2 177 2 129 8 34 2 130 2 133 2 274 2 375 2 376 10 227 30 275 2 86 2 231 2 281 2 88 2 334 2 380 2 183 2 90 2 381 2 384 16 184 2 91 8 41 8 137 4 187 4 
44 4 45 2 191 4 192 8 236 2 142 2 143 2 196 4 102 4 2 8 147 2 103 2 199 2 148 2 106 2 154 6 156 4 107 12 201 4 157 2 51 4 204 2 53 2 299 2 351 2 159 4 248 2 249 4 356 4 206 4 207 2 251 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 8 209 4 69 2 360 10 70 2 361 2 117 2 210 10 165 2 71 2 18 2 262 4 212 8 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 8 367 4 76 2 122 4 368 2 216 2 77 4 168 2 323 2 371 2 266 4 324 2 268 8 29 10 30 2 32 2 222 2 177 2 129 8 34 2 130 2 133 2 274 2 375 2 376 10 227 30 275 2 86 2 231 2 281 2 88 2 334 2 380 2 183 2 90 2 381 2 384 16 184 2 91 8 41 8 137 4 187 4 
44 4 45 2 191 4 192 8 236 2 142 2 143 2 196 4 102 4 2 8 147 2 103 2 199 2 148 2 106 2 154 6 156 4 107 12 201 4 157 2 51 4 204 2 53 2 299 2 351 2 159 4 248 2 249 4 356 4 206 4 207 2 251 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 8 209 4 69 2 360 10 70 2 361 2 117 2 210 10 165 2 71 2 18 2 262 4 212 8 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 8 367 4 76 2 122 4 368 2 216 2 77 4 168 2 323 2 371 2 266 4 324 2 268 8 29 10 30 2 32 2 222 2 177 2 129 8 34 2 130 2 133 2 274 2 375 2 376 10 227 30 275 2 86 2 231 2 281 2 88 2 334 2 380 2 183 2 90 2 381 2 384 16 184 2 91 8 41 8 137 4 187 4 
44 4 45 2 191 4 192 2 236 2 143 2 196 4 102 4 2 2 147 2 103 2 199 2 148 2 154 6 156 4 107 6 201 4 157 2 51 4 53 2 299 2 204 2 351 2 159 4 248 2 249 4 356 4 206 4 207 2 251 2 358 2 15 2 311 2 256 2 313 2 66 6 116 2 209 4 69 2 360 10 70 2 361 2 210 10 165 2 71 2 18 2 262 4 212 2 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 2 367 4 76 2 122 4 368 2 216 2 77 4 168 2 323 2 371 2 266 4 324 2 268 8 29 10 30 2 32 2 222 2 177 2 129 2 34 2 130 2 133 2 274 2 375 2 376 10 227 18 275 2 86 2 231 2 281 2 88 2 334 2 380 2 90 2 381 2 384 10 184 2 91 2 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 8 156 2 107 6 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 4 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 6 116 4 68 2 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 338 2 384 8 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 8 156 2 107 6 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 4 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 64 2 66 6 116 4 68 2 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 338 2 384 8 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 4 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 68 2 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 38 2 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 4 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 68 2 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 38 2 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 41 8 137 4 187 4 
44 6 45 2 191 6 192 8 236 2 194 2 142 2 288 2 143 2 144 2 196 4 102 4 2 8 147 2 103 2 199 2 148 2 106 2 244 2 154 6 156 4 107 12 201 4 157 2 8 2 51 4 204 2 53 2 299 2 351 2 159 4 248 2 249 6 356 6 206 4 162 2 207 2 251 2 306 2 358 2 14 2 15 2 311 2 256 2 16 2 313 2 66 6 116 8 209 6 69 2 360 12 70 2 361 2 210 12 165 2 71 2 72 2 18 2 262 4 212 8 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 8 367 4 76 2 122 4 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 8 34 2 272 2 130 4 133 2 274 2 375 8 376 12 227 32 275 2 86 2 231 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 16 184 2 91 8 41 8 137 4 187 6 
44 6 45 2 191 6 192 6 236 2 194 2 142 2 288 2 143 2 144 2 196 4 102 4 2 6 147 2 103 2 199 2 148 2 244 2 154 6 156 4 107 10 201 4 157 2 8 2 51 4 204 2 53 2 299 2 351 2 159 4 248 2 249 6 356 6 206 4 162 2 207 2 251 2 306 2 358 2 14 2 15 2 311 2 256 2 16 2 313 2 66 6 116 6 209 6 69 2 360 12 70 2 361 2 210 12 165 2 71 2 17 2 72 2 18 2 262 4 212 6 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 6 367 4 76 2 122 4 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 6 34 2 130 4 272 2 133 2 274 2 375 8 376 12 227 28 275 2 86 2 231 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 14 184 2 91 6 41 8 137 4 187 6 
44 6 45 2 191 6 192 6 236 2 194 2 142 2 288 2 143 2 144 2 196 4 102 4 2 6 147 2 103 2 199 2 148 2 244 2 154 6 156 4 107 10 201 4 157 2 8 2 51 4 204 2 53 2 299 2 351 2 159 4 248 2 249 6 356 6 206 4 162 2 207 2 251 2 306 2 358 2 14 2 15 2 311 2 256 2 16 2 313 2 66 6 116 6 209 6 69 2 360 12 70 2 361 2 210 12 165 2 71 2 17 2 72 2 18 2 262 4 212 6 119 4 363 2 364 2 215 4 75 4 20 2 265 2 121 6 367 4 76 2 122 4 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 6 34 2 130 4 272 2 133 2 274 2 375 8 376 12 227 28 275 2 86 2 231 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 14 184 2 91 6 41 8 137 4 187 6 
44 4 45 2 46 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 6 207 2 251 2 11 2 306 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 221 2 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 6 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 132 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 8 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 6 207 2 251 2 11 2 306 2 164 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 132 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 2 384 8 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 46 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 160 2 249 4 356 4 206 2 162 2 250 6 207 2 251 2 11 2 306 2 358 2 15 2 311 2 256 2 16 2 313 2 66 6 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 268 12 29 12 221 2 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 41 8 137 4 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 358 2 15 2 311 2 256 2 16 2 313 2 66 8 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 166 2 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 326 2 268 12 29 12 221 2 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 41 8 137 4 387 2 187 4 
44 4 45 2 191 6 192 4 194 2 288 2 143 2 144 2 196 2 102 2 2 4 147 2 103 2 199 2 148 2 244 2 154 6 155 2 156 2 107 6 201 4 157 2 8 2 297 2 51 2 204 2 53 2 299 2 351 2 159 2 248 2 249 4 356 4 206 2 162 2 250 8 207 2 251 2 11 2 306 2 358 2 15 2 311 2 256 2 16 2 313 2 66 8 116 4 68 4 209 4 69 2 360 12 70 2 361 2 210 12 165 2 71 2 18 2 72 2 262 2 212 4 166 2 119 2 363 2 364 2 215 2 75 4 20 2 265 2 121 4 367 4 76 2 122 2 216 2 368 2 77 4 168 2 323 2 371 2 266 4 324 2 326 2 268 12 29 12 221 2 30 2 32 2 222 2 177 4 129 4 34 2 130 2 272 2 133 2 274 2 375 6 376 12 275 2 227 20 86 2 281 2 88 2 334 2 182 2 380 2 183 2 90 2 381 4 384 8 184 2 91 4 41 8 137 4 387 2 187 4 
369 2 225 2 227 2 
369 2 225 2 209 2 227 2 
369 2 352 2 225 2 227 2 85 2 51 2 305 2 
104 2 317 2 322 2 328 2 225 2 1 2 79 2 169 2 179 2 385 2 80 2 100 2 245 2 175 2 372 2 333 2 209 2 389 6 349 2 51 4 127 2 223 2 
104 2 317 2 322 2 328 2 225 2 1 2 79 2 169 2 179 2 385 2 80 2 100 2 245 2 175 2 372 2 333 2 209 2 389 6 349 2 51 4 127 2 223 2 
123 2 124 2 255 2 291 2 171 2 218 2 92 2 47 2 7 2 209 2 109 2 202 2 82 2 135 2 
123 2 124 2 255 2 291 2 171 2 218 2 92 2 47 2 7 2 209 2 109 2 202 2 82 2 135 2 
123 2 124 2 255 2 291 2 171 2 218 2 92 2 47 2 7 2 209 2 109 2 202 2 82 2 135 2 
123 2 124 2 255 2 291 2 171 2 218 2 92 2 47 2 7 2 209 2 109 2 202 2 82 2 135 2 
123 2 124 2 255 2 291 2 171 2 218 2 92 2 47 2 7 2 209 2 109 2 202 2 82 2 135 2 
178 2 260 2 225 2 238 2 73 2 163 2 39 2 89 2 345 2 78 2 113 2 5 2 217 2 24 2 154 4 66 4 209 4 
178 2 374 2 260 2 225 2 238 2 239 2 73 2 57 2 163 2 180 2 39 2 89 4 345 2 113 2 5 2 217 2 24 2 154 4 293 2 66 4 81 2 209 4 51 2 
316 2 362 2 238 2 239 2 345 6 5 2 125 2 217 2 154 2 293 2 295 2 51 2 298 2 269 2 178 2 374 2 225 2 57 2 163 2 180 2 89 4 307 2 113 2 66 2 209 2 
286 4 262 2 205 8 193 4 302 4 111 2 329 4 62 4 101 2 332 2 280 4 232 4 48 2 366 2 253 4 335 2 21 2 22 10 292 10 92 4 50 2 348 2 388 2 209 4 138 8 9 2 43 2 83 6 224 4 258 20 128 2 190 2 
61 2 197 2 
197 2 61 2 276 2 
123 2 124 2 255 2 291 2 171 2 218 2 92 2 47 2 7 2 209 2 109 2 202 2 82 2 135 2 
47 2 135 2 123 2 124 2 255 2 291 2 218 2 171 2 92 2 7 2 82 2 202 2 109 2 209 2 
44 2 243 2 266 2 227 2 324 2 356 2 214 2 173 2 20 2 209 2 187 2 121 2 
26 2 59 2 365 2 247 2 
340 4 0 2 286 20 97 2 342 2 98 2 99 2 195 2 240 2 101 2 344 2 198 4 105 2 49 2 242 2 149 2 151 2 293 2 292 8 346 2 245 4 158 2 203 4 9 6 51 2 350 2 54 2 10 16 55 6 300 2 354 2 301 2 56 2 302 6 111 6 58 2 62 4 161 2 303 2 357 2 252 2 63 2 310 2 114 2 115 2 65 2 209 6 258 24 259 2 211 10 261 2 118 2 318 2 74 2 321 2 22 12 267 2 23 2 25 6 220 4 175 4 174 2 373 2 176 2 83 8 224 6 270 2 271 2 35 2 227 2 36 2 329 6 278 4 331 2 280 6 232 6 233 2 234 2 40 2 336 2 235 2 337 2 383 2 92 4 284 2 285 2 94 2 
340 4 0 2 286 20 97 2 342 2 98 2 99 2 195 2 240 2 101 2 344 2 198 4 105 2 49 2 242 2 149 2 151 2 293 2 292 8 346 2 245 4 158 2 203 4 9 6 51 2 350 2 54 2 10 18 55 6 300 2 354 2 301 2 56 2 302 8 111 6 58 2 62 6 161 2 303 2 357 2 252 2 63 2 310 2 114 2 115 2 65 2 209 6 258 28 259 2 211 10 261 2 118 2 318 2 74 2 321 2 22 14 267 2 23 2 25 6 220 4 175 4 174 2 373 2 176 2 126 2 83 8 224 8 270 2 271 2 35 2 227 2 36 2 329 6 278 4 331 2 280 8 232 6 233 2 234 2 40 2 336 2 235 2 337 2 383 2 92 6 284 2 285 2 94 2 

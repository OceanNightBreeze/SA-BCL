#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
org.eclipse.draw2d.test.XYLayoutTest:testPreferredSize()V PASSED
org.eclipse.draw2d.test.RayTest:test_length()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_happypath()V PASSED
org.eclipse.draw2d.test.FigureUtilitiesTest:test_findCommonAncestor_bugzilla130042()V PASSED
org.eclipse.draw2d.test.PrecisionPointTest:testEquals()V PASSED
org.eclipse.draw2d.test.ColorConstantTest:test_ColorConstantInit()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testAntialias()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testFillRules()V PASSED
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V ERROR java.lang.IllegalArgumentException 316 371 417 363 248 229 
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCapAA()V ERROR java.lang.IllegalArgumentException 316 371 417 363 248 229 
org.eclipse.draw2d.test.AdvancedGraphicsTests:testPatterns()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContainerLeadingWord()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testBlockLeadingWord()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadPrecedingInline()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadFromNested()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadAtEndOfBlock()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextLookaheadPastEmptyString()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextChineseCharLookahead()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testContextHyphenLookahead()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testSingleLetter()V PASSED
org.eclipse.draw2d.test.LookAheadTest:testSingleSpace()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBendpoints()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBlockedPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testBottomRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformed()V FAILED junit.framework.AssertionFailedError 563 502 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeformedInverted()V FAILED junit.framework.AssertionFailedError 563 502 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasAddPath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasMoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemoveObstacleNoIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testDeltasRemovePath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testOffsetShrink()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendHit2()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testQuadBendMiss()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testShortestPathOutsideOval()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottom()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionBottomInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTop()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSideIntersectionTopInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testSubpath()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangent()V FAILED junit.framework.AssertionFailedError 563 65 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTangentInverted()V FAILED junit.framework.AssertionFailedError 563 65 
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCross()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionCrossInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopLeftIntersectionInverted()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersection()V PASSED
org.eclipse.draw2d.test.ShortestPathRoutingTest:testTopRightIntersectionInverted()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationSymmetry()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_creationValues()V PASSED
org.eclipse.draw2d.test.RectangleTest:test_sameBehavior()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop()V PASSED
org.eclipse.draw2d.test.PrecisionRectangleTest:testCrop2()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testHardWrapping()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testSoftWrapping()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testTruncatedWrapping()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testInlineFlow()V PASSED
org.eclipse.draw2d.test.TextFlowWrapTest:testNestedInlineFlows()V PASSED
org.eclipse.draw2d.test.FlowBorderTests:testBorderedTextFlow()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testSimpleClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testTranslatedClip()V PASSED
org.eclipse.draw2d.test.GraphicsClipping:testZoomedClip()V PASSED
org.eclipse.draw2d.test.LayeredPaneTest:testIndexOutOfBounds()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testImageRotation()V PASSED
org.eclipse.draw2d.test.ImageUtilitiesTest:testRotatingImagesWithDifferentDepths()V PASSED
org.eclipse.draw2d.test.TextualTests:testLineRootBidiCommit()V PASSED
org.eclipse.draw2d.test.TextualTests:testGetFirstAndLastOffsetForLine()V PASSED
org.eclipse.draw2d.test.PointListTests:testIntersects()V PASSED
org.eclipse.draw2d.test.PrecisionDimensionTest:testEquals()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_Thumbnail()V PASSED
org.eclipse.draw2d.test.ThumbnailTest:test_EmptyThumbnail()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
org.eclipse.draw2d.graph.ShortestPathRouter:addObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.Figure:validate()V
org.eclipse.draw2d.Figure:setBorder(Lorg.eclipse.draw2d.Border;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.Graphics:translate(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.FlowFigure:contributeBidi(Lorg.eclipse.draw2d.text.BidiProcessor;)V
org.eclipse.draw2d.SWTGraphics:setAntialias(I)V
org.eclipse.draw2d.geometry.Rectangle:getCopy()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:BidiLevelNode()V
org.eclipse.draw2d.graph.Segment:intersects(IIII)Z
org.eclipse.draw2d.text.LineRoot:getVisibleBottom()I
org.eclipse.draw2d.geometry.Dimension:isEmpty()Z
org.eclipse.draw2d.test.AdvancedGraphicsTests.5:run()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:FillRules(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;II)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setX(D)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:AntialiasSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;IILorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.Rectangle:preciseHeight()D
org.eclipse.draw2d.graph.ShortestPathRouter:cleanup()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNoPathsSolved()V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.ScaledGraphics:getLocalFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.SWTGraphics:setTextAntialias(I)V
org.eclipse.draw2d.graph.ShortestPathRouter:bendPaths()V
org.eclipse.draw2d.ScaledGraphics.FontKey:hashCode()I
org.eclipse.draw2d.text.ContentBox:getBaseline()I
org.eclipse.draw2d.geometry.PrecisionRectangle:updateInts()V
org.eclipse.draw2d.graph.ShortestPathRouter:labelPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isRunning()Z
org.eclipse.draw2d.graph.Obstacle:shrinkVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.ScaledGraphics:getCachedFont(Lorg.eclipse.draw2d.ScaledGraphics.FontKey;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.ScaledGraphics.FontKey:FontKey(Lorg.eclipse.swt.graphics.Font;I)V
org.eclipse.draw2d.text.BlockFlow:createBlockBox()Lorg.eclipse.draw2d.text.BlockBox;
org.eclipse.draw2d.graph.Path.SegmentStack:popObstacle()Lorg.eclipse.draw2d.graph.Obstacle;
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexIntersections()V
org.eclipse.draw2d.graph.Path:reconnectSubPaths()V
org.eclipse.draw2d.geometry.Point:negate()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.LineRoot:findParent(Lorg.eclipse.draw2d.text.NestedLine;Ljava.util.List;I)Lorg.eclipse.draw2d.text.LineRoot.Result;
org.eclipse.draw2d.SWTGraphics:getFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.FigureUtilities:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.test.TextFlowWrapTest:runHardWrappingTests()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:restoreState(Lorg.eclipse.draw2d.SWTGraphics.State;)V
org.eclipse.draw2d.SWTGraphics:translatePointArray([III)V
org.eclipse.draw2d.test.RayTest:testLengthValues(IID)V
org.eclipse.draw2d.graph.Path:generateShortestPath(Ljava.util.List;)Z
org.eclipse.draw2d.ScaledGraphics:setScale(D)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:resetThumbnailImage()V
org.eclipse.draw2d.SWTGraphics:drawPoint(II)V
org.eclipse.draw2d.XYLayout:calculatePreferredSize(Lorg.eclipse.draw2d.IFigure;II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.Rectangle:getPosition(Lorg.eclipse.draw2d.geometry.Point;)I
org.eclipse.draw2d.SWTGraphics.RectangleClipping:translate(FF)V
org.eclipse.draw2d.text.TextFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.text.InlineFlowLayout:setContinueOnSameLine(Z)V
org.eclipse.draw2d.geometry.PrecisionPoint:PrecisionPoint(DD)V
org.eclipse.draw2d.geometry.PrecisionRectangle:performScale(D)V
org.eclipse.draw2d.geometry.Insets:Insets(IIII)V
org.eclipse.draw2d.text.TextFlow:getFlowUtilities()Lorg.eclipse.draw2d.text.FlowUtilities;
org.eclipse.draw2d.text.TextFlow:contributeBidi(Lorg.eclipse.draw2d.text.BidiProcessor;)V
org.eclipse.draw2d.Figure:revalidate()V
org.eclipse.draw2d.SWTGraphics:initTransform(Z)V
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:push()Lorg.eclipse.draw2d.text.LineRoot.BidiLevelNode;
org.eclipse.draw2d.graph.ShortestPathRouter:growObstaclesPass()V
org.eclipse.draw2d.text.FlowUtilities:setupFragment(Lorg.eclipse.draw2d.text.TextFragmentBox;Lorg.eclipse.swt.graphics.Font;Ljava.lang.String;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTangent()V
org.eclipse.draw2d.text.FlowUtilities:getAverageCharWidth(Lorg.eclipse.draw2d.text.TextFragmentBox;Lorg.eclipse.swt.graphics.Font;)F
org.eclipse.draw2d.SWTGraphics:setForegroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopRightIntersection()V
org.eclipse.draw2d.AbstractLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.Dimension:Dimension(Lorg.eclipse.swt.graphics.Point;)V
org.eclipse.draw2d.Figure:fireCoordinateSystemChanged()V
org.eclipse.draw2d.text.FlowFigure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.graph.Path:testAndSet(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.test.AdvancedGraphicsTests.1AntialiasSettings:run()V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(IIII)V
org.eclipse.draw2d.text.FlowUtilities:getTextUtilities()Lorg.eclipse.draw2d.TextUtilities;
org.eclipse.draw2d.ScaledGraphics:zoomFont(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.geometry.Rectangle:getCenter()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.TextFlow:setText(Ljava.lang.String;)V
org.eclipse.draw2d.text.InlineFlow:addLeadingWordRequirements([I)Z
org.eclipse.draw2d.text.CompositeBox:setRecommendedWidth(I)V
org.eclipse.draw2d.text.NestedLine:setLineRoot(Lorg.eclipse.draw2d.text.LineRoot;)V
org.eclipse.draw2d.text.ParagraphTextLayout.SegmentLookahead:SegmentLookahead(Lorg.eclipse.draw2d.text.ParagraphTextLayout;[Ljava.lang.String;I)V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle()V
org.eclipse.draw2d.graph.ShortestPathRouter:dirtyPathsOn(Lorg.eclipse.draw2d.graph.Vertex;)Z
org.eclipse.draw2d.text.FlowPage:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.BlockFlow:revalidateBidi(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.graph.ShortestPathRouter:resetVertices()V
org.eclipse.draw2d.text.FlowFigure:FlowFigure()V
org.eclipse.draw2d.text.ContentBox:getBidiLevel()I
org.eclipse.draw2d.geometry.Rectangle:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Vertex:Vertex(IILorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:getPreciseCopy()Lorg.eclipse.draw2d.geometry.PrecisionRectangle;
org.eclipse.draw2d.FigureUtilities:getGC()Lorg.eclipse.swt.graphics.GC;
org.eclipse.draw2d.Figure.1:addDirtyRegion(Lorg.eclipse.draw2d.IFigure;IIII)V
org.eclipse.draw2d.text.BlockFlowLayout:getContinueOnSameLine()Z
org.eclipse.draw2d.graph.ShortestPathRouter:countVertices()V
org.eclipse.draw2d.text.FlowUtilities:initBidi(Lorg.eclipse.draw2d.text.TextFragmentBox;Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.text.PageFlowLayout:PageFlowLayout(Lorg.eclipse.draw2d.text.FlowPage;)V
org.eclipse.draw2d.text.FlowFigure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:getBendPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.SWTGraphics:translate(II)V
org.eclipse.draw2d.geometry.Point:Point(II)V
org.eclipse.draw2d.LayeredPane:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.geometry.PointList:removeAllPoints()V
org.eclipse.draw2d.graph.Obstacle:Obstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.graph.ShortestPathRouter;)V
org.eclipse.draw2d.text.BlockFlowLayout:addBelowPreviousLine(Lorg.eclipse.draw2d.text.CompositeBox;)V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.geometry.Point:getCopy()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.test.GraphicsClipping:graphicsClip()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.SWTGraphics:setFillRule(I)V
org.eclipse.draw2d.graph.ShortestPathRouter:solveDirtyPaths()I
org.eclipse.draw2d.graph.Path:setEndPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.ShortestPathRouter:internalRemoveObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.text.FlowUtilities:getBorderAscentWithMargin(Lorg.eclipse.draw2d.text.InlineFlow;)I
org.eclipse.draw2d.geometry.Rectangle:bottom()I
org.eclipse.draw2d.text.FlowFigure:setFlowContext(Lorg.eclipse.draw2d.text.FlowContext;)V
org.eclipse.draw2d.Figure.1:addInvalidFigure(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.text.BlockFlow:getRightMargin()I
org.eclipse.draw2d.FigureUtilities:getFontMetrics(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.FontMetrics;
org.eclipse.draw2d.Figure:isValidationRoot()Z
org.eclipse.draw2d.graph.Segment:crossProduct(Lorg.eclipse.draw2d.graph.Segment;)J
org.eclipse.draw2d.graph.ShortestPathRouter:labelPaths()V
org.eclipse.draw2d.Ellipse:Ellipse()V
org.eclipse.draw2d.geometry.PointList:addAll(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.AbstractLayout:getBorderPreferredSize(Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.InlineFlowLayout:flush()V
org.eclipse.draw2d.ScaledGraphics.FontKey:FontKey()V
org.eclipse.draw2d.TextUtilities:getStringExtents(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:Path(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.text.BlockFlow:useLocalCoordinates()Z
org.eclipse.draw2d.Figure:repaint(IIII)V
org.eclipse.draw2d.graph.Obstacle:containsProper(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.Figure:setSize(II)V
org.eclipse.draw2d.text.ContentBox:requiresBidi()Z
org.eclipse.draw2d.SWTGraphics:scale(D)V
org.eclipse.draw2d.geometry.Rectangle:isEmpty()Z
org.eclipse.draw2d.geometry.PrecisionDimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.FlowContainerLayout:FlowContainerLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.ScaledGraphics:scale(D)V
org.eclipse.draw2d.text.BidiProcessor:isJoiningCharacter(C)Z
org.eclipse.draw2d.test.TextFlowWrapTest:doTest2(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;[Ljava.lang.String;)V
org.eclipse.draw2d.text.LineBox:getDescent()I
org.eclipse.draw2d.test.TextFlowWrapTest:runTruncatedWrappingTests()V
org.eclipse.draw2d.SWTGraphics:drawString(Ljava.lang.String;II)V
org.eclipse.draw2d.geometry.Dimension:negate()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.graph.Vertex:getDeformedRectangle(I)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.LineBox:add(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.text.TextFragmentBox:isTruncated()Z
org.eclipse.draw2d.geometry.Rectangle:scale(DD)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.AbstractFlowBorder:getRightMargin()I
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:stop()V
org.eclipse.draw2d.SWTGraphics:fillPolygon([I)V
org.eclipse.draw2d.text.FlowUtilities:canBreakAfter(C)Z
org.eclipse.draw2d.geometry.Geometry:productSign(JJ)I
org.eclipse.draw2d.geometry.Ray:dotProductL(Lorg.eclipse.draw2d.geometry.Ray;)J
org.eclipse.draw2d.AbstractLayout:invalidate(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.text.LineBox:getFragments()Ljava.util.List;
org.eclipse.draw2d.geometry.PrecisionDimension:updateInts()V
org.eclipse.draw2d.graph.ShortestPathRouter:labelVertex(Lorg.eclipse.draw2d.graph.Segment;JLorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.SWTGraphics:SWTGraphics(Lorg.eclipse.swt.graphics.GC;)V
org.eclipse.draw2d.Figure:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.ScaledGraphics:dispose()V
org.eclipse.draw2d.SWTGraphics:setBackgroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.geometry.Geometry:linesIntersect(IIIIIIII)Z | CONSTANT | 2234 | 0 -> -1
org.eclipse.draw2d.geometry.PrecisionRectangle:crop(Lorg.eclipse.draw2d.geometry.Insets;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.Figure:setPreferredSize(II)V
org.eclipse.draw2d.geometry.Geometry:cross(JJJJ)J
org.eclipse.draw2d.graph.Vertex:Vertex(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionTop()V
org.eclipse.draw2d.text.LineRoot:buildBidiTree(Lorg.eclipse.draw2d.text.FlowBox;Lorg.eclipse.draw2d.text.LineRoot.BidiLevelNode;Ljava.util.List;)V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:isActive()Z
org.eclipse.draw2d.geometry.PrecisionRectangle:setY(D)V
org.eclipse.draw2d.text.FlowBox:getWidth()I
org.eclipse.draw2d.graph.Vertex:getSpacing()I
org.eclipse.draw2d.text.TextFlow:getBidiInfo()Lorg.eclipse.draw2d.text.BidiInfo;
org.eclipse.draw2d.text.TextFlow:getDescent()I
org.eclipse.draw2d.geometry.Point:hashCode()I
org.eclipse.draw2d.Figure:getChildren()Ljava.util.List;
org.eclipse.draw2d.ImageUtilities:rotateOptimized(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.text.ParagraphTextLayout:layout()V
org.eclipse.draw2d.geometry.Rectangle:Rectangle()V
org.eclipse.draw2d.Figure:getUpdateManager()Lorg.eclipse.draw2d.UpdateManager;
org.eclipse.draw2d.Figure:getBounds()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.BlockFlowLayout:blockContentsChanged()V
org.eclipse.draw2d.SWTGraphics:init()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.3:run()V
org.eclipse.draw2d.EventListenerList:containsListener(Ljava.lang.Class;)Z
org.eclipse.draw2d.text.TextFlow:TextFlow()V
org.eclipse.draw2d.graph.Path:linkVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.Figure:getInsets()Lorg.eclipse.draw2d.geometry.Insets;
org.eclipse.draw2d.graph.ShortestPathRouter:updateObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.Obstacle:shrinkVertices()V
org.eclipse.draw2d.text.BlockFlow:getBlockBox()Lorg.eclipse.draw2d.text.BlockBox;
org.eclipse.draw2d.text.LineBox:getBottomMargin()I
org.eclipse.draw2d.Figure:getForegroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.AbstractLayout:getPreferredSize(Lorg.eclipse.draw2d.IFigure;II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.test.AbstractTextTest:assertFragmentLocation(Lorg.eclipse.draw2d.text.TextFragmentBox;)V
org.eclipse.draw2d.text.BlockFlowLayout:preLayout()V
org.eclipse.draw2d.text.FlowFigureLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.SWTGraphics:popState()V
org.eclipse.draw2d.geometry.Insets:getWidth()I
org.eclipse.draw2d.graph.ShortestPathRouter:getSubpathForSplit(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.geometry.Point:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.geometry.PrecisionDimension:PrecisionDimension(DD)V
org.eclipse.draw2d.ScaledGraphics:setLocalFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.geometry.Ray:Ray(II)V
org.eclipse.draw2d.text.TextFragmentBox:TextFragmentBox(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.text.LineRoot.Result:Result(Lorg.eclipse.draw2d.text.LineBox;I)V
org.eclipse.draw2d.text.ParagraphTextLayout.SegmentLookahead:getWidth()I
org.eclipse.draw2d.graph.ShortestPathRouter:internalAddObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.Figure:getFlag(I)Z
org.eclipse.draw2d.text.LineRoot:add(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.geometry.Rectangle:preciseY()D
org.eclipse.draw2d.graph.Segment:getLength()D
org.eclipse.draw2d.text.BidiProcessor:add(Lorg.eclipse.draw2d.text.FlowFigure;Ljava.lang.String;)V
org.eclipse.draw2d.parts.Thumbnail:isDirty()Z
org.eclipse.draw2d.text.TextFlow:addLeadingWordRequirements([I)Z
org.eclipse.draw2d.Figure:setBounds(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.PointList:PointList([I)V
org.eclipse.draw2d.text.BlockFlow:validate()V
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.AbstractLayout:invalidate()V
org.eclipse.draw2d.Figure:isMirrored()Z
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1FillRules:run()V
org.eclipse.draw2d.geometry.PointList:PointList()V
org.eclipse.draw2d.test.AdvancedGraphicsTests:testLineJoinCap()V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:resetTileValues()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.FlowBox:getX()I
org.eclipse.draw2d.SWTGraphics:setAffineMatrix([F)V
org.eclipse.draw2d.text.InlineFlowLayout:endLine()V
org.eclipse.draw2d.Figure:firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V
org.eclipse.draw2d.SWTGraphics:setLineJoin(I)V
org.eclipse.draw2d.text.BlockFlow:getLeftMargin()I
org.eclipse.draw2d.Figure:repaint()V
org.eclipse.draw2d.graph.Obstacle:getSpacing()I
org.eclipse.draw2d.text.BidiProcessor:setOrientation(I)V
org.eclipse.draw2d.graph.ShortestPathRouter:orderPaths()V
org.eclipse.draw2d.text.TextFragmentBox:getAscent()I
org.eclipse.draw2d.text.TextLayout:getFragment(ILjava.util.List;)Lorg.eclipse.draw2d.text.TextFragmentBox;
org.eclipse.draw2d.graph.ShortestPathRouter:addPath(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.ShortestPathRouter:getSpacing()I
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(FFFF)V
org.eclipse.draw2d.test.AdvancedGraphicsTests:performTestcase(Ljava.lang.Runnable;[Ljava.lang.Runnable;)V
org.eclipse.draw2d.geometry.Point:preciseX()D
org.eclipse.draw2d.text.BlockFlowLayout:getWidthLookahead(Lorg.eclipse.draw2d.text.FlowFigure;[I)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1:paintControl(Lorg.eclipse.swt.events.PaintEvent;)V
org.eclipse.draw2d.TextUtilities:getDescent(Lorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.text.InlineFlowLayout:createNewLine()V
org.eclipse.draw2d.FigureUtilities:findCommonAncestor(Lorg.eclipse.draw2d.IFigure;Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.graph.Path:addSegmentsFor(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:emit(Ljava.util.List;)V
org.eclipse.draw2d.text.BlockBox:add(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.Figure:repaint(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.FlowPage:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.test.ThumbnailTest.TestThumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.text.InlineFlow:postValidate()V
org.eclipse.draw2d.graph.ShortestPathRouter:testOffsetSegmentForIntersections(Lorg.eclipse.draw2d.graph.Segment;ILorg.eclipse.draw2d.graph.Path;)I
org.eclipse.draw2d.test.FlowBorderTests:getTextFragment(Lorg.eclipse.draw2d.text.TextFlow;I)Lorg.eclipse.draw2d.text.TextFragmentBox;
org.eclipse.draw2d.graph.Path:addObstacle(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.text.TextFlow:TextFlow(Ljava.lang.String;)V
org.eclipse.draw2d.SWTGraphics:setGraphicHints(I)V
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:pop()Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.SWTGraphics:setForegroundPattern(Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.ImageUtilities:rotatePixelByPixel(Lorg.eclipse.swt.graphics.ImageData;)Lorg.eclipse.swt.graphics.ImageData;
org.eclipse.draw2d.text.FlowUtilities:getTextLayoutBounds(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;II)Lorg.eclipse.swt.graphics.Rectangle;
org.eclipse.draw2d.text.FlowPage:getPageWidth()I
org.eclipse.draw2d.text.LineRoot:bidiCommit()V
org.eclipse.draw2d.text.FlowUtilities:wrapFragmentInContext(Lorg.eclipse.draw2d.text.TextFragmentBox;Ljava.lang.String;Lorg.eclipse.draw2d.text.FlowContext;Lorg.eclipse.draw2d.text.FlowUtilities.LookAhead;Lorg.eclipse.swt.graphics.Font;I)I
org.eclipse.draw2d.geometry.Rectangle:resize(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.ShortestPathRouter:recombineChildrenPaths()V
org.eclipse.draw2d.parts.Thumbnail:Thumbnail()V
org.eclipse.draw2d.text.TextFlow:getText()Ljava.lang.String;
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.graph.ShortestPathRouter.PathStack:push(Lorg.eclipse.draw2d.graph.Path;)V
org.eclipse.draw2d.graph.Path:labelGraph()Z
org.eclipse.draw2d.text.BlockFlowLayout:createNewLine()V
org.eclipse.draw2d.text.FlowContainerLayout:getCurrentLine()Lorg.eclipse.draw2d.text.LineBox;
org.eclipse.draw2d.graph.Vertex:updateOffset()V
org.eclipse.draw2d.text.LineBox:getAscent()I
org.eclipse.draw2d.text.FlowFigureLayout:layout(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.text.TextFlow:getFirstOffsetForLine(I)I
org.eclipse.draw2d.graph.Path:getPoints()Lorg.eclipse.draw2d.geometry.PointList;
org.eclipse.draw2d.parts.Thumbnail:getThumbnailImage()Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.graph.Path:invertPriorVertices(Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.test.SimpleTextTest:makePageWidth(Ljava.lang.String;I)V
org.eclipse.draw2d.text.BidiProcessor.BidiEntry:BidiEntry(Lorg.eclipse.draw2d.text.FlowFigure;II)V
org.eclipse.draw2d.AbstractHintLayout:invalidate()V
org.eclipse.draw2d.test.LookAheadTest:getContext(Lorg.eclipse.draw2d.text.FlowFigure;)Lorg.eclipse.draw2d.text.FlowContext;
org.eclipse.draw2d.SWTGraphics:setBackgroundColor(Lorg.eclipse.swt.graphics.Color;)V
org.eclipse.draw2d.geometry.PointList:getPoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.NestedLine:NestedLine(Lorg.eclipse.draw2d.text.InlineFlow;)V
org.eclipse.draw2d.Figure:getSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.FlowContainerLayout:layout()V
org.eclipse.draw2d.Figure:setFlag(IZ)V
org.eclipse.draw2d.geometry.Rectangle:toString()Ljava.lang.String;
org.eclipse.draw2d.text.AbstractFlowBorder:getBottomMargin()I
org.eclipse.draw2d.IFigure.NoInsets:NoInsets()V
org.eclipse.draw2d.geometry.Point:getPreciseDistance2(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.graph.Obstacle:growVertices()V
org.eclipse.draw2d.SWTGraphics:setLineCap(I)V | STATEMENT | 28164 | stmt -> ;
org.eclipse.draw2d.Figure:setLayoutManager(Lorg.eclipse.draw2d.LayoutManager;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersectionCross()V
org.eclipse.draw2d.ScaledGraphics:ScaledGraphics(Lorg.eclipse.draw2d.Graphics;)V
org.eclipse.draw2d.text.FlowUtilities:measureString(Lorg.eclipse.draw2d.text.TextFragmentBox;Ljava.lang.String;ILorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.text.ParagraphTextLayout.SegmentLookahead:setIndex(I)V
org.eclipse.draw2d.geometry.Rectangle:intersect(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Path:setBendPoints(Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.text.BlockFlowLayout:setContinueOnSameLine(Z)V
org.eclipse.draw2d.Figure:setValid(Z)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestSideIntersectionBottom()V
org.eclipse.draw2d.SWTGraphics:reconcileHints(II)V
org.eclipse.draw2d.geometry.Rectangle:union(IIII)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.BlockFlow:revalidate()V
org.eclipse.draw2d.Figure:add(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.text.InlineFlowLayout:preLayout()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:intersect(IIII)V
org.eclipse.draw2d.text.FlowPage:postValidate()V
org.eclipse.draw2d.geometry.PointList:getPoint(Lorg.eclipse.draw2d.geometry.Point;I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.geometry.Insets:getHeight()I
org.eclipse.draw2d.text.BlockBox:BlockBox(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.text.ContentBox:setBidiLevel(I)V
org.eclipse.draw2d.geometry.Rectangle:contains(Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.geometry.Dimension:getNegated()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.ParagraphTextLayout:ParagraphTextLayout(Lorg.eclipse.draw2d.text.TextFlow;I)V
org.eclipse.draw2d.Figure:useLocalCoordinates()Z
org.eclipse.draw2d.SWTGraphics.RectangleClipping:scale(FF)V
org.eclipse.draw2d.text.LineBox:getTopMargin()I
org.eclipse.draw2d.test.AdvancedGraphicsTests.4:run()V
org.eclipse.draw2d.geometry.Ray:length()D
org.eclipse.draw2d.graph.Path:createVisibilityGraph(Ljava.util.List;)V
org.eclipse.draw2d.geometry.Point:Point()V
org.eclipse.draw2d.graph.Path:setStartPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.TextFragmentBox:getDescent()I
org.eclipse.draw2d.graph.Path:Path()V
org.eclipse.draw2d.text.TextFlow:getAscent()I
org.eclipse.draw2d.graph.Path:addConnectingSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;ZZ)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:SetPattern(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;Lorg.eclipse.swt.graphics.Pattern;Lorg.eclipse.swt.graphics.Pattern;)V
org.eclipse.draw2d.graph.Path:refreshExcludedObstacles(Ljava.util.List;)V
org.eclipse.draw2d.Figure:setPreferredSize(Lorg.eclipse.draw2d.geometry.Dimension;)V
org.eclipse.draw2d.text.FlowPage:invalidate()V
org.eclipse.draw2d.graph.Vertex:shrink()V
org.eclipse.draw2d.SWTGraphics:getLineWidth()I
org.eclipse.draw2d.RectangleFigure:RectangleFigure()V
org.eclipse.draw2d.XYLayout:setConstraint(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.Dimension:Dimension(Lorg.eclipse.draw2d.geometry.Dimension;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestTopLeftIntersection()V
org.eclipse.draw2d.SWTGraphics:setAlpha(I)V
org.eclipse.draw2d.geometry.Rectangle:translate(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.FigureUtilities:getStringExtents(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.Figure:getPreferredSize(II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.geometry.Rectangle:right()I
org.eclipse.draw2d.geometry.PrecisionRectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.BlockFlowLayout:setupBlock()V
org.eclipse.draw2d.graph.Vertex:bend(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.Figure:fireFigureMoved()V
org.eclipse.draw2d.geometry.Dimension:expand(Lorg.eclipse.draw2d.geometry.Dimension;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.test.AdvancedGraphicsTests.6:run()V
org.eclipse.draw2d.SWTGraphics:drawPolyline([I)V
org.eclipse.draw2d.text.LineRoot:setLineTop(I)V
org.eclipse.draw2d.text.LineRoot:layoutNestedLines(Ljava.util.List;)V
org.eclipse.draw2d.SWTGraphics:checkFill()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1SetPattern:run()V
org.eclipse.draw2d.Figure:invalidate()V
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:addPerimiterSegments(Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.SWTGraphics:checkGC()V
org.eclipse.draw2d.SWTGraphics:pushState()V
org.eclipse.draw2d.geometry.Rectangle:setSize(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.graph.Path:determineShortestPath()Z
org.eclipse.draw2d.text.BlockFlowLayout:forceChildInvalidation(Lorg.eclipse.draw2d.Figure;)Z
org.eclipse.draw2d.ScaledGraphics:createFont(Lorg.eclipse.swt.graphics.FontData;)Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.text.FlowContainerLayout:isCurrentLineOccupied()Z
org.eclipse.draw2d.test.AdvancedGraphicsTests:displayImage()V
org.eclipse.draw2d.test.GraphicsClipping:gcClipping()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.parts.Thumbnail:setDirty(Z)V
org.eclipse.draw2d.geometry.Rectangle:hashCode()I
org.eclipse.draw2d.text.TextFlow:getTextUtilities()Lorg.eclipse.draw2d.TextUtilities;
org.eclipse.draw2d.graph.ShortestPathRouter:solve()Ljava.util.List;
org.eclipse.draw2d.graph.ShortestPathRouter:getNearestVertex(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Vertex;
org.eclipse.draw2d.test.AdvancedGraphicsTests.2:run()V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:LineSettings(Lorg.eclipse.draw2d.test.AdvancedGraphicsTests;III)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.geometry.Rectangle:contains(II)Z
org.eclipse.draw2d.geometry.PointList:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.test.AbstractTextTest.TestBorder:TestBorder(Lorg.eclipse.draw2d.geometry.Insets;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:resetObstacleExclusions()V
org.eclipse.draw2d.geometry.Rectangle:union(II)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.parts.Thumbnail:getSourceRectangle()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Rectangle:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.BlockFlowLayout:addCurrentLine()V
org.eclipse.draw2d.Figure:isVisible()Z
org.eclipse.draw2d.text.TextFragmentBox:setTruncated(Z)V
org.eclipse.draw2d.Shape:Shape()V
org.eclipse.draw2d.geometry.Dimension:union(Lorg.eclipse.draw2d.geometry.Dimension;)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.BidiProcessor:isJoiner(I)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestOffsetShrink()V
org.eclipse.draw2d.text.InlineFlowLayout:setupLine(Lorg.eclipse.draw2d.text.LineBox;)V
org.eclipse.draw2d.TextUtilities:getAscent(Lorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.text.BlockBox:toRectangle()Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.geometry.Point:getDistance(Lorg.eclipse.draw2d.geometry.Point;)D
org.eclipse.draw2d.graph.Path:addAllSegmentsBetween(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.Path.SegmentStack:push(Ljava.lang.Object;)V
org.eclipse.draw2d.geometry.Rectangle:performTranslate(II)V
org.eclipse.draw2d.test.TextFlowWrapTest:runSoftWrappingTests()V
org.eclipse.draw2d.text.LineRoot:LineRoot(Z)V
org.eclipse.draw2d.text.FlowFigureLayout:invalidate()V
org.eclipse.draw2d.graph.Obstacle:growVertex(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.graph.ShortestPathRouter:refreshChildrenEndpoints(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;)V
org.eclipse.draw2d.graph.Path:getStartPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.BlockFlowLayout:endLine()V
org.eclipse.draw2d.SWTGraphics:checkPaint()V
org.eclipse.draw2d.graph.Path:resetPartial()V
org.eclipse.draw2d.text.InlineFlow:createDefaultFlowLayout()Lorg.eclipse.draw2d.text.FlowFigureLayout;
org.eclipse.draw2d.graph.Vertex:grow()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertAbove(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.ScaledGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.ColorConstants.SystemColorFactory.1:run()V
org.eclipse.draw2d.text.LineBox:getAvailableWidth()I
org.eclipse.draw2d.Figure:getBorder()Lorg.eclipse.draw2d.Border;
org.eclipse.draw2d.text.FlowFigureLayout:getContext()Lorg.eclipse.draw2d.text.FlowContext;
org.eclipse.draw2d.geometry.Rectangle:preciseWidth()D
org.eclipse.draw2d.text.TextFlow:getFragmentsWithoutBorder()Ljava.util.List;
org.eclipse.draw2d.Figure:getBackgroundColor()Lorg.eclipse.swt.graphics.Color;
org.eclipse.draw2d.geometry.Dimension:Dimension()V
org.eclipse.draw2d.text.FlowContainerLayout:forceChildInvalidation(Lorg.eclipse.draw2d.Figure;)Z
org.eclipse.draw2d.graph.Segment:Segment(Lorg.eclipse.draw2d.graph.Vertex;Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.text.NestedLine:getOuterAscent()I
org.eclipse.draw2d.graph.ShortestPathRouter:testAndDirtyPaths(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.text.FlowContainerLayout:layoutChildren()V
org.eclipse.draw2d.text.InlineFlowLayout:getWidthLookahead(Lorg.eclipse.draw2d.text.FlowFigure;[I)V
org.eclipse.draw2d.text.InlineFlow:setBorder(Lorg.eclipse.draw2d.Border;)V
org.eclipse.draw2d.Figure:getParent()Lorg.eclipse.draw2d.IFigure;
org.eclipse.draw2d.test.TextFlowWrapTest:runGenericTests()V
org.eclipse.draw2d.graph.Path:getEndPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.PageFlowLayout:getContextWidth()I
org.eclipse.draw2d.text.FlowFigure:addLeadingWordRequirements([I)Z
org.eclipse.draw2d.Figure:getPreferredSize()Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.FlowUtilities:getTextLayout()Lorg.eclipse.swt.graphics.TextLayout;
org.eclipse.draw2d.Figure:isValid()Z
org.eclipse.draw2d.graph.Path.SegmentStack:pop()Lorg.eclipse.draw2d.graph.Segment;
org.eclipse.draw2d.text.TextFlow:getLastOffsetForLine(I)I
org.eclipse.draw2d.geometry.PointList:getLastPoint()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.text.FlowContainerLayout:addToCurrentLine(Lorg.eclipse.draw2d.text.FlowBox;)V
org.eclipse.draw2d.graph.Path:addSegmentsTargetAboveSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.graph.ShortestPathRouter:growObstacles()V
org.eclipse.draw2d.SWTGraphics:setLineStyle(I)V
org.eclipse.draw2d.ScaledGraphics:getCachedFontData(Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.FontData;
org.eclipse.draw2d.test.LookAheadTest:assertLineBreakNotFound(Z)V
org.eclipse.draw2d.geometry.Dimension:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointBelow(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.SWTGraphics:setLineWidth(I)V
org.eclipse.draw2d.Figure:erase()V
org.eclipse.draw2d.text.BlockFlowLayout:getBlockFlow()Lorg.eclipse.draw2d.text.BlockFlow;
org.eclipse.draw2d.geometry.Point:preciseY()D
org.eclipse.draw2d.Figure:isCoordinateSystem()Z
org.eclipse.draw2d.graph.ShortestPathRouter:regenerateChildPaths(Lorg.eclipse.draw2d.graph.Path;Ljava.util.List;II)Ljava.util.List;
org.eclipse.draw2d.text.TextFragmentBox:getOuterDescent()I
org.eclipse.draw2d.parts.Thumbnail:setSource(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.geometry.PrecisionRectangle:setHeight(D)V
org.eclipse.draw2d.graph.Segment:cosine(Lorg.eclipse.draw2d.graph.Segment;)D
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Obstacle:init(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Path:isObstacleVisible(Lorg.eclipse.draw2d.graph.Obstacle;)Z
org.eclipse.draw2d.text.InlineFlow:getFragments()Ljava.util.List;
org.eclipse.draw2d.Figure:translateToParent(Lorg.eclipse.draw2d.geometry.Translatable;)V
org.eclipse.draw2d.graph.ShortestPathRouter:checkVertexForIntersections(Lorg.eclipse.draw2d.graph.Vertex;)V
org.eclipse.draw2d.graph.Vertex:fullReset()V
org.eclipse.draw2d.geometry.Rectangle:getLocation()Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.Figure:layout()V
org.eclipse.draw2d.test.AdvancedGraphicsTests:assertImageEquality(II)V
org.eclipse.draw2d.text.InlineFlowLayout:InlineFlowLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPointLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Segment:getSlope()D
org.eclipse.draw2d.ScaledGraphics.FontKey:setValues(Lorg.eclipse.swt.graphics.Font;I)V
org.eclipse.draw2d.graph.Vertex:addPath(Lorg.eclipse.draw2d.graph.Path;Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Segment;)V
org.eclipse.draw2d.graph.Path:getSubPath(Lorg.eclipse.draw2d.graph.Segment;)Lorg.eclipse.draw2d.graph.Path;
org.eclipse.draw2d.UpdateManager:addUpdateListener(Lorg.eclipse.draw2d.UpdateListener;)V
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.text.TextFragmentBox:getOuterAscent()I
org.eclipse.draw2d.test.LookAheadTest:assertLookaheadMatchesString([ILjava.lang.String;)V
org.eclipse.draw2d.parts.Thumbnail:adjustToAspectRatio(Lorg.eclipse.draw2d.geometry.Dimension;Z)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.text.LineBox:requiresBidi()Z
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:start()V
org.eclipse.draw2d.text.CompositeBox:getRecommendedWidth()I
org.eclipse.draw2d.geometry.Rectangle:intersects(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.text.BlockFlowLayout:endBlock()V
org.eclipse.draw2d.text.AbstractFlowBorder:getTopMargin()I
org.eclipse.draw2d.geometry.PointList:size()I
org.eclipse.draw2d.LayeredPane:add(Lorg.eclipse.draw2d.IFigure;Ljava.lang.Object;I)V
org.eclipse.draw2d.SWTGraphics:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.text.BlockFlowLayout:BlockFlowLayout(Lorg.eclipse.draw2d.text.BlockFlow;)V
org.eclipse.draw2d.text.LineRoot:getVisibleTop()I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertLeft(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.geometry.Rectangle:setLocation(Lorg.eclipse.draw2d.geometry.Point;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.NestedLine:getOuterDescent()I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestDeformed()V
org.eclipse.draw2d.text.FlowFigure:revalidateBidi(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.test.AdvancedGraphicsTests.1LineSettings:run()V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getBoundingBox(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.LineRoot:contiguousCommit(Lorg.eclipse.draw2d.text.FlowBox;I)V
org.eclipse.draw2d.graph.Path:cleanup()V
org.eclipse.draw2d.text.FlowBox:setWidth(I)V
org.eclipse.draw2d.test.LookAheadTest:getFollow(Lorg.eclipse.draw2d.text.FlowFigure;)I
org.eclipse.draw2d.test.ShortestPathRoutingTest:doSetUp(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.FlowBox:setX(I)V
org.eclipse.draw2d.geometry.Dimension:Dimension(II)V
org.eclipse.draw2d.SWTGraphics.RectangleClipping:RectangleClipping(Lorg.eclipse.swt.graphics.Rectangle;)V
org.eclipse.draw2d.text.FlowUtilities:getBorderDescentWithMargin(Lorg.eclipse.draw2d.text.InlineFlow;)I
org.eclipse.draw2d.SWTGraphics.State:clone()Ljava.lang.Object;
org.eclipse.draw2d.text.TextLayout:TextLayout(Lorg.eclipse.draw2d.text.TextFlow;)V
org.eclipse.draw2d.geometry.Rectangle:scale(D)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.FigureUtilities:getStringDimension(Ljava.lang.String;Lorg.eclipse.swt.graphics.Font;)Lorg.eclipse.swt.graphics.Point;
org.eclipse.draw2d.text.LineRoot.BidiLevelNode:BidiLevelNode(Lorg.eclipse.draw2d.text.LineRoot.BidiLevelNode;I)V
org.eclipse.draw2d.text.FlowFigureLayout:FlowFigureLayout(Lorg.eclipse.draw2d.text.FlowFigure;)V
org.eclipse.draw2d.Figure:getFont()Lorg.eclipse.swt.graphics.Font;
org.eclipse.draw2d.ScaledGraphics:zoomFontHeight(I)I
org.eclipse.draw2d.text.LineRoot:getBaseline()I
org.eclipse.draw2d.SWTGraphics:scale(FF)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertOffsetShrink(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.text.BidiProcessor:BidiProcessor()V
org.eclipse.draw2d.text.LineBox:isOccupied()Z
org.eclipse.draw2d.geometry.Insets:Insets(I)V
org.eclipse.draw2d.graph.ShortestPathRouter:removeObstacle(Lorg.eclipse.draw2d.geometry.Rectangle;)Z
org.eclipse.draw2d.geometry.PrecisionRectangle:performTranslate(II)V
org.eclipse.draw2d.Figure:setFont(Lorg.eclipse.swt.graphics.Font;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertRight(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.FlowPage:setPageWidth(I)V
org.eclipse.draw2d.geometry.PrecisionRectangle:PrecisionRectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.graph.Obstacle:reset()V
org.eclipse.draw2d.text.TextFlow:setBidiInfo(Lorg.eclipse.draw2d.text.BidiInfo;)V
org.eclipse.draw2d.text.LineRoot:commit()V
org.eclipse.draw2d.geometry.PointList:removePoint(I)Lorg.eclipse.draw2d.geometry.Point;
org.eclipse.draw2d.SWTGraphics:getClip(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.test.LookAheadTest:getWidth(Ljava.lang.String;)I
org.eclipse.draw2d.geometry.PointList:addPoint(Lorg.eclipse.draw2d.geometry.Point;)V
org.eclipse.draw2d.graph.Path:addSegmentsTargetBesideSource(Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;)V
org.eclipse.draw2d.ImageUtilities:createRotatedImage(Lorg.eclipse.swt.graphics.Image;)Lorg.eclipse.swt.graphics.Image;
org.eclipse.draw2d.geometry.PrecisionRectangle:setWidth(D)V
org.eclipse.draw2d.geometry.PrecisionPoint:updateInts()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomLeftIntersection()V
org.eclipse.draw2d.text.FlowFigureLayout:setFlowContext(Lorg.eclipse.draw2d.text.FlowContext;)V
org.eclipse.draw2d.graph.ShortestPathRouter:recombineSubpaths()V
org.eclipse.draw2d.text.TextFlow:addLeadingWordWidth(Ljava.lang.String;[I)Z
org.eclipse.draw2d.text.NestedLine:getLineRoot()Lorg.eclipse.draw2d.text.LineRoot;
org.eclipse.draw2d.text.ContentBox:getLineRoot()Lorg.eclipse.draw2d.text.LineRoot;
org.eclipse.draw2d.graph.ShortestPathRouter:removePath(Lorg.eclipse.draw2d.graph.Path;)Z
org.eclipse.draw2d.text.AbstractFlowBorder:getLeftMargin()I
org.eclipse.draw2d.text.FlowContainerLayout:getRemainingLineWidth()I
org.eclipse.draw2d.geometry.PointList:addPoint(II)V
org.eclipse.draw2d.text.BlockFlow:getHorizontalAligment()I
org.eclipse.draw2d.geometry.Rectangle:preciseX()D
org.eclipse.draw2d.graph.Path:fullReset()V
org.eclipse.draw2d.text.InlineFlowLayout:getContinueOnSameLine()Z
org.eclipse.draw2d.geometry.Rectangle:union(Lorg.eclipse.draw2d.geometry.Rectangle;)Lorg.eclipse.draw2d.geometry.Rectangle;
org.eclipse.draw2d.text.BidiProcessor:assignResults([I)V
org.eclipse.draw2d.text.BlockFlow:BlockFlow()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertNumPoints(Lorg.eclipse.draw2d.geometry.PointList;I)V
org.eclipse.draw2d.text.FlowFigureLayout:getFlowFigure()Lorg.eclipse.draw2d.text.FlowFigure;
org.eclipse.draw2d.parts.Thumbnail:getPreferredSize(II)Lorg.eclipse.draw2d.geometry.Dimension;
org.eclipse.draw2d.SWTGraphics.RectangleClipping:getCopy()Lorg.eclipse.draw2d.SWTGraphics.Clipping;
org.eclipse.draw2d.ScaledGraphics:translate(II)V
org.eclipse.draw2d.Figure:getLayoutManager()Lorg.eclipse.draw2d.LayoutManager;
org.eclipse.draw2d.text.ContentBox:setLineRoot(Lorg.eclipse.draw2d.text.LineRoot;)V
org.eclipse.draw2d.SWTGraphics:checkSharedClipping()V
org.eclipse.draw2d.geometry.Point:toString()Ljava.lang.String;
org.eclipse.draw2d.SWTGraphics:clipRect(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.InlineFlowLayout:isCurrentLineOccupied()Z
org.eclipse.draw2d.text.BidiProcessor:process()V
org.eclipse.draw2d.parts.Thumbnail:setScales(FF)V
org.eclipse.draw2d.text.BlockFlowLayout:flush()V
org.eclipse.draw2d.parts.Thumbnail.ThumbnailUpdater:restart()V
org.eclipse.draw2d.graph.Segment:intersects(Lorg.eclipse.draw2d.geometry.Point;Lorg.eclipse.draw2d.geometry.Point;)Z
org.eclipse.draw2d.Figure:setParent(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.test.AbstractTextTest.TestBorder:getInsets(Lorg.eclipse.draw2d.IFigure;)Lorg.eclipse.draw2d.geometry.Insets;
org.eclipse.draw2d.text.FlowPage:validate()V
org.eclipse.draw2d.geometry.PrecisionPoint:equals(Ljava.lang.Object;)Z
org.eclipse.draw2d.text.FlowUtilities:getEllipsisWidth(Lorg.eclipse.swt.graphics.Font;)I
org.eclipse.draw2d.SWTGraphics.RectangleClipping:setOn(Lorg.eclipse.swt.graphics.GC;II)V
org.eclipse.draw2d.AbstractLayout:remove(Lorg.eclipse.draw2d.IFigure;)V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestQuadBendMiss(I)V
org.eclipse.draw2d.graph.Path:addSegment(Lorg.eclipse.draw2d.graph.Segment;Lorg.eclipse.draw2d.graph.Obstacle;Lorg.eclipse.draw2d.graph.Obstacle;Ljava.util.List;)V
org.eclipse.draw2d.text.FlowContainerLayout:cleanup()V
org.eclipse.draw2d.SWTGraphics:fillText(Ljava.lang.String;II)V
org.eclipse.draw2d.SWTGraphics:setClip(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.test.TextFlowWrapTest:doTest(Ljava.lang.String;Ljava.lang.String;[Ljava.lang.String;)V
org.eclipse.draw2d.geometry.PointList:ensureCapacity(I)V
org.eclipse.draw2d.parts.Thumbnail:getScaleX()F
org.eclipse.draw2d.test.ShortestPathRoutingTest:doTestBottomRightIntersection()V
org.eclipse.draw2d.text.ParagraphTextLayout:getSegments(Ljava.lang.String;[I)[Ljava.lang.String;
org.eclipse.draw2d.geometry.Rectangle:Rectangle(Lorg.eclipse.draw2d.geometry.Rectangle;)V
org.eclipse.draw2d.text.FlowUtilities:findFirstDelimeter(Ljava.lang.String;)I
org.eclipse.draw2d.SWTGraphics:checkText()V
org.eclipse.draw2d.test.ShortestPathRoutingTest:doAssertPathRight(Lorg.eclipse.draw2d.geometry.PointList;Lorg.eclipse.draw2d.geometry.PointList;)V
org.eclipse.draw2d.text.BlockFlow:getOrientation()I
org.eclipse.draw2d.text.BlockFlowLayout:cleanup()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
239 2 108 2 399 2 324 2 168 2 443 2 203 2 344 2 306 2 50 2 400 2 349 2 348 2 75 6 368 8 95 2 7 2 258 2 425 4 224 8 133 2 158 2 57 1 226 2 314 8 355 4 192 2 60 8 568 2 430 2 512 7 118 6 317 2 180 2 299 8 596 2 302 1 121 2 397 2 183 2 198 2 236 2 184 10 438 20 185 2 69 2 579 2 126 2 91 2 560 2 213 4 
45 2 208 2 157 2 334 2 
108 2 239 2 118 4 254 2 299 4 75 2 368 4 121 2 95 2 397 2 319 2 258 2 236 2 133 2 184 10 438 18 185 2 314 4 579 2 60 4 213 4 
397 2 239 2 108 2 319 2 258 2 118 2 236 2 133 2 185 2 438 12 184 6 254 2 299 2 75 2 579 2 314 2 368 2 95 2 60 2 213 4 
55 2 336 2 582 2 545 2 
423 1 
6 2 294 2 457 4 15 2 165 2 22 2 476 2 316 2 188 2 496 2 43 2 44 2 202 2 52 2 352 2 515 4 67 4 363 2 74 2 371 4 372 4 378 2 234 2 385 2 247 2 102 2 248 2 251 2 566 2 570 2 266 2 268 2 417 4 584 2 146 2 598 2 
154 2 366 2 371 2 6 2 294 4 372 4 227 2 378 2 457 2 13 2 234 2 385 2 165 2 476 2 316 2 247 2 102 2 248 2 111 2 251 2 566 2 570 2 496 2 333 2 43 2 44 2 266 2 268 2 202 2 52 2 584 2 352 2 515 4 67 2 
305 2 316 2 570 2 504 2 52 2 44 2 515 4 457 2 584 2 12 2 247 2 102 2 371 2 452 2 372 4 237 2 417 2 248 2 566 2 386 2 363 2 
305 2 316 2 570 2 504 2 52 2 44 2 515 4 457 2 12 2 584 2 247 2 102 2 371 2 6 2 452 2 372 4 237 2 417 2 248 2 566 2 386 2 363 2 229 2 
294 4 457 2 165 4 476 2 316 2 496 4 43 2 342 2 202 2 52 2 352 2 61 8 515 4 67 2 362 2 367 2 371 4 372 4 378 2 234 2 385 2 247 2 102 2 248 2 251 2 566 2 570 2 266 2 268 4 417 2 584 2 589 2 598 2 
219 2 80 4 540 2 382 2 94 6 549 2 180 4 486 2 40 4 129 2 277 2 354 4 518 4 438 8 521 10 70 4 
442 2 
80 4 250 2 40 4 180 6 540 2 94 4 564 2 129 2 549 2 219 2 277 2 382 2 509 2 518 4 293 2 438 10 354 4 521 10 70 4 568 2 
250 2 40 4 180 6 540 2 94 4 564 6 129 2 549 2 219 2 277 2 382 2 509 2 518 4 436 4 293 2 426 4 438 6 354 4 521 6 70 4 568 2 
250 2 438 2 564 2 509 2 293 2 568 2 180 2 
80 2 250 2 40 4 180 4 540 2 94 4 564 2 129 2 549 2 219 2 277 2 382 2 509 2 518 4 293 2 438 6 354 4 521 6 70 4 568 2 
239 2 250 2 80 4 503 6 180 6 564 2 87 2 549 2 95 2 219 2 277 2 397 2 509 2 258 2 293 2 133 2 184 10 185 2 438 18 79 2 568 2 213 2 
239 2 250 2 80 4 40 4 503 6 180 6 540 2 94 4 129 2 564 2 87 2 549 2 95 2 219 2 277 2 397 2 382 2 518 4 509 2 258 2 293 2 133 2 184 10 185 2 438 26 354 4 521 10 70 4 79 2 568 2 213 2 
239 2 40 4 503 2 540 2 94 4 129 2 549 2 95 2 219 2 277 2 397 2 382 2 518 4 258 2 133 2 454 2 486 2 184 2 185 2 438 4 354 4 521 2 70 4 79 2 213 2 
239 2 40 4 503 2 540 2 94 4 129 2 549 2 95 2 219 2 277 2 397 2 382 2 518 4 258 2 133 2 184 2 185 2 438 4 354 4 521 2 70 4 79 2 213 2 
109 2 0 2 216 2 28 2 30 2 446 2 327 4 112 2 563 2 75 4 113 2 448 2 156 4 481 2 451 2 221 2 370 2 7 2 34 2 78 2 35 2 535 2 191 2 406 12 295 4 36 2 491 2 228 4 116 2 494 8 374 2 9 4 262 2 538 2 161 2 264 2 408 6 194 2 267 2 335 2 336 1 413 2 381 6 541 4 337 2 414 2 122 2 415 2 88 2 46 2 303 12 383 2 123 2 339 4 418 4 460 12 125 2 462 2 92 10 304 2 388 4 166 4 343 2 169 4 51 2 420 2 17 2 466 2 240 4 170 8 346 2 468 2 19 2 275 2 205 8 392 2 130 2 548 2 587 2 242 2 507 2 131 2 176 6 97 2 472 2 279 2 473 4 280 2 312 2 23 2 134 4 179 2 356 2 555 4 592 6 101 4 245 2 63 2 596 2 432 10 246 8 287 4 183 2 434 2 479 2 27 2 558 4 103 24 359 2 249 12 105 4 106 2 440 2 212 2 
109 2 0 4 28 2 30 2 446 2 327 4 112 2 563 2 75 4 255 2 156 4 450 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 406 6 36 2 491 2 407 2 116 10 228 2 494 2 374 2 9 4 264 2 408 12 194 2 267 2 335 2 413 2 381 4 541 2 414 2 415 2 88 2 46 2 542 2 303 6 383 2 123 2 339 2 418 2 460 6 92 10 341 2 304 2 166 4 388 4 169 4 343 2 51 2 17 2 240 2 170 6 467 2 468 4 19 2 205 2 275 2 392 2 130 2 548 2 587 2 242 2 507 2 131 2 176 4 97 2 279 2 473 4 280 2 23 2 134 4 179 2 356 10 555 2 592 2 101 4 245 2 63 2 596 4 432 12 246 2 287 2 183 4 434 4 27 2 558 2 103 18 249 6 105 2 106 4 212 4 
109 6 0 2 28 2 216 2 30 2 446 2 3 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 6 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 8 231 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 6 418 2 460 10 92 10 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 170 8 467 2 346 2 468 2 391 2 19 2 275 2 205 4 392 2 546 2 130 6 548 2 587 2 242 2 507 2 131 6 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 478 2 101 4 245 6 63 2 596 2 432 10 246 6 287 6 183 2 434 2 27 2 558 2 103 24 359 2 249 10 105 2 106 2 212 2 
109 6 0 2 28 2 216 2 30 2 446 2 3 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 6 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 8 231 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 6 418 2 460 10 92 10 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 170 8 467 2 346 2 468 2 391 2 19 2 275 2 205 4 392 2 546 2 130 6 548 2 587 2 242 2 507 2 131 6 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 478 2 101 4 245 6 63 2 596 2 432 10 246 6 287 6 183 2 434 2 27 2 558 2 103 24 359 2 249 10 105 2 106 2 212 2 
109 6 0 2 28 2 216 2 30 2 446 2 289 2 3 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 6 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 8 231 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 6 418 2 460 10 92 10 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 170 8 467 2 346 2 468 2 391 2 19 2 275 2 205 4 392 2 546 2 130 6 548 2 587 2 242 2 507 2 131 6 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 478 2 101 4 245 6 63 2 596 2 432 10 246 6 287 6 183 2 434 2 27 2 558 2 103 24 359 2 249 10 105 2 106 2 212 2 
109 6 0 2 28 2 216 2 30 2 446 2 289 2 3 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 6 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 8 231 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 6 418 2 460 10 92 10 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 170 8 467 2 346 2 468 2 391 2 19 2 275 2 205 4 392 2 546 2 130 6 548 2 587 2 242 2 507 2 131 6 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 478 2 101 4 245 6 63 2 596 2 432 10 246 6 287 6 183 2 434 2 27 2 558 2 103 24 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 73 2 327 4 112 2 75 4 156 2 532 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 8 231 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 387 2 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 4 555 2 592 2 101 4 245 4 594 2 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 289 2 73 2 327 4 112 2 75 4 156 2 532 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 8 231 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 387 2 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 4 555 2 592 2 101 4 245 4 594 2 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 4 28 2 216 2 30 2 446 2 289 2 73 2 327 4 112 2 563 2 75 6 255 2 156 4 481 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 406 10 36 2 491 4 116 6 228 4 494 2 374 2 9 4 262 2 161 2 264 2 408 8 194 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 542 2 303 10 383 2 123 2 339 4 418 2 460 10 502 2 92 12 304 2 388 4 166 4 343 2 169 4 51 2 420 2 17 2 240 4 466 2 170 8 467 2 346 2 468 4 391 2 19 2 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 134 2 179 2 356 4 555 2 592 2 101 4 245 4 63 2 596 4 432 12 246 8 287 4 183 4 434 4 479 2 27 2 558 2 103 24 359 2 249 10 105 2 106 4 212 4 
109 4 0 4 28 2 216 2 30 2 446 2 73 2 327 4 112 2 563 2 75 6 255 2 156 4 481 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 406 10 36 2 491 4 116 6 228 4 494 2 374 2 9 4 262 2 161 2 264 2 408 8 194 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 542 2 303 10 383 2 123 2 339 4 418 2 460 10 502 2 92 12 304 2 388 4 166 4 343 2 169 4 51 2 420 2 17 2 240 4 466 2 170 8 467 2 346 2 468 4 391 2 19 2 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 134 2 179 2 356 4 555 2 592 2 101 4 245 4 63 2 596 4 432 12 246 8 287 4 183 4 434 4 479 2 27 2 558 2 103 24 359 2 249 10 105 2 106 4 212 4 
109 4 0 4 323 2 28 4 216 4 30 4 446 4 73 4 327 10 112 4 255 2 75 8 156 8 481 4 451 4 370 4 34 4 7 4 78 4 35 4 535 4 191 4 406 20 36 4 491 4 116 10 228 4 494 2 374 4 9 8 262 4 161 4 264 4 408 14 194 4 267 4 335 4 413 4 381 8 541 4 414 4 122 4 415 4 88 4 46 4 542 2 303 20 383 4 123 4 578 2 339 4 418 4 460 20 92 12 304 4 388 10 166 8 343 4 169 8 51 6 420 4 17 4 240 8 466 4 467 2 170 8 346 4 468 4 391 2 19 8 275 4 205 8 392 4 130 4 548 4 587 4 242 4 507 4 131 4 176 12 97 4 472 4 279 4 473 8 280 4 23 4 134 2 179 4 356 6 555 4 592 4 283 2 101 8 245 4 63 4 596 4 432 24 246 14 287 4 183 4 479 2 434 4 27 4 558 4 103 28 359 4 249 20 105 4 106 4 212 4 
109 4 0 4 323 2 28 2 216 2 30 2 446 2 73 4 327 6 112 2 75 6 156 4 481 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 406 10 36 2 116 2 228 4 494 2 374 2 9 4 262 2 161 2 264 2 408 6 194 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 578 2 339 4 418 2 460 10 92 12 304 2 388 6 166 4 343 2 169 4 51 2 420 2 17 2 240 4 466 2 467 2 170 8 346 2 18 2 468 4 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 4 432 12 246 6 287 4 183 4 434 4 27 2 558 2 103 24 359 2 249 10 105 2 106 4 212 4 
109 6 0 2 28 4 216 4 30 4 446 4 73 2 327 8 112 4 75 6 156 4 481 4 451 4 370 4 34 4 7 2 78 2 35 4 535 4 191 4 295 2 406 20 36 4 116 4 228 6 374 4 9 4 262 4 161 4 264 4 408 12 194 4 571 2 42 2 267 4 335 4 413 4 381 8 541 4 414 4 122 4 415 4 88 4 46 4 303 20 383 4 123 4 339 6 418 6 460 20 92 10 304 4 388 8 166 4 343 4 169 4 51 4 420 4 17 4 240 8 466 4 467 2 170 8 346 4 18 2 468 2 391 2 19 6 275 4 205 6 392 4 130 6 548 4 587 4 242 4 507 4 131 6 176 12 97 4 472 4 279 4 473 8 280 4 23 4 179 4 356 4 555 4 592 4 101 8 245 6 63 4 596 2 432 20 246 12 287 6 183 2 434 2 27 4 558 4 103 28 359 4 249 20 105 6 106 2 212 2 
109 4 0 4 28 2 216 2 30 4 446 4 73 4 327 6 112 4 75 6 156 6 481 2 451 4 370 2 34 4 7 4 78 4 35 4 114 2 535 4 191 4 406 18 36 4 116 4 228 4 374 4 9 6 193 2 262 4 161 2 264 2 408 8 194 4 85 2 267 4 335 4 413 4 381 4 541 4 414 4 122 2 415 4 88 4 46 4 303 18 383 4 123 4 339 4 418 4 460 18 92 12 304 4 388 6 166 6 343 4 169 6 51 2 420 2 17 4 240 6 466 2 467 2 170 8 346 2 468 4 391 2 19 6 275 4 205 6 392 4 130 4 548 4 587 4 242 4 507 4 131 4 176 10 97 4 472 2 279 4 473 8 280 4 23 4 134 2 395 2 179 4 356 4 555 4 592 4 101 8 245 4 63 4 596 4 432 14 246 10 287 4 183 4 479 2 434 4 27 4 558 4 103 26 359 2 249 18 105 4 106 4 212 4 
109 4 0 6 323 4 28 2 216 2 30 2 446 2 73 6 327 8 112 2 75 6 156 6 481 2 451 2 370 2 34 2 7 4 78 6 35 2 114 2 535 2 191 2 406 10 36 2 116 2 228 4 494 4 374 2 9 6 193 2 262 2 161 2 264 2 408 6 194 2 85 2 267 2 335 2 413 2 381 6 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 578 4 339 4 418 2 460 10 92 16 304 2 388 8 166 6 343 2 169 6 51 2 420 2 17 2 240 4 466 2 467 2 170 10 346 2 18 2 468 6 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 469 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 395 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 4 432 14 246 6 287 4 183 6 434 6 27 2 558 2 103 30 359 2 249 10 105 2 106 6 212 6 
109 4 0 2 28 2 216 2 30 2 446 4 529 2 73 2 327 4 112 4 75 6 156 2 481 2 451 4 370 2 34 4 7 4 78 2 35 4 114 2 535 2 191 4 406 18 36 4 116 2 228 4 374 4 9 2 262 4 161 2 264 2 408 8 194 2 85 2 267 4 335 4 413 2 381 4 541 4 414 4 122 2 415 4 88 4 46 4 303 18 383 4 123 4 339 4 418 4 460 18 92 8 304 2 388 4 166 2 343 4 169 2 51 2 420 2 17 4 240 4 466 2 467 2 170 6 346 2 468 2 391 2 19 6 275 4 205 6 392 4 130 4 548 4 587 4 242 4 507 4 131 4 176 8 97 4 472 2 279 4 473 6 280 4 23 4 395 2 179 4 356 2 555 4 592 4 101 8 245 4 63 4 596 4 432 14 246 6 287 4 183 2 434 2 27 4 558 4 103 20 359 2 249 18 105 4 106 2 212 2 
109 4 0 4 323 2 28 2 216 2 30 2 446 2 529 2 73 4 327 6 112 2 75 6 156 4 481 2 451 2 370 2 34 2 7 4 78 4 35 2 114 2 535 2 191 2 406 10 36 2 116 2 228 4 494 2 374 2 9 4 262 2 161 2 264 2 408 6 194 2 85 2 267 2 335 2 413 2 381 6 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 578 2 339 4 418 2 460 10 92 12 304 2 388 6 166 4 343 2 169 4 51 2 420 2 17 2 240 4 466 2 467 2 170 8 346 2 18 2 468 4 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 469 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 395 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 4 432 12 246 6 287 4 183 4 434 4 27 2 558 2 103 24 359 2 249 10 105 2 106 4 212 4 
109 4 0 2 28 2 216 2 30 2 446 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 406 10 36 2 116 2 228 6 374 2 9 2 262 2 161 2 264 2 408 6 194 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 6 418 2 460 10 92 10 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 8 346 2 18 2 468 2 391 2 19 2 275 2 205 2 392 2 130 6 548 2 587 2 242 2 507 2 131 6 176 6 97 2 472 2 279 2 473 4 280 2 552 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 8 0 4 216 2 28 2 30 2 446 2 3 2 402 2 73 2 327 6 112 2 563 2 75 8 255 2 156 4 481 2 450 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 295 2 406 12 36 2 491 6 228 8 116 8 494 2 374 2 9 4 262 2 161 2 264 2 408 10 194 2 571 2 267 2 335 2 413 2 381 4 541 2 122 2 414 2 415 2 88 2 46 2 542 2 303 12 383 2 384 2 123 2 339 8 418 2 460 12 92 16 304 2 388 6 166 4 343 2 169 4 51 4 420 2 17 2 466 2 240 2 170 12 467 2 346 2 468 4 391 2 19 4 275 2 205 4 392 2 130 8 548 2 587 2 242 2 507 2 131 8 176 4 97 2 472 2 279 2 473 4 280 2 23 2 134 2 510 2 179 2 356 8 555 2 592 2 101 4 283 2 245 8 63 2 596 4 432 14 246 6 287 8 183 4 434 4 479 2 27 2 558 2 103 34 359 2 249 12 105 2 106 4 148 2 212 4 525 2 
109 8 0 4 216 2 28 2 30 2 446 2 3 2 73 2 327 4 112 2 563 2 75 10 255 2 156 4 532 2 481 2 450 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 295 4 406 12 36 2 491 8 228 8 116 6 494 4 374 2 9 4 262 2 161 2 264 2 408 8 194 2 571 12 231 2 42 2 267 2 300 8 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 12 383 2 384 2 123 2 339 8 418 2 460 12 92 16 304 2 388 4 166 4 343 2 169 4 51 2 420 4 17 2 466 2 240 6 170 12 467 2 346 4 421 2 468 4 391 2 19 4 275 2 205 4 392 2 130 8 586 2 548 2 587 2 242 2 507 2 131 8 176 8 97 2 472 4 279 2 473 4 280 2 23 2 134 2 510 2 179 2 356 6 555 2 592 2 101 4 245 8 63 2 596 4 432 14 246 12 287 8 183 4 434 4 479 2 27 2 558 2 103 36 359 2 249 12 105 2 106 4 148 2 599 2 212 4 
109 8 0 4 216 2 28 2 30 2 446 2 3 2 73 2 327 6 112 2 563 2 75 10 255 2 156 4 532 2 481 2 450 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 295 4 406 12 36 2 491 8 228 8 116 8 494 4 374 2 9 4 262 2 161 2 264 2 408 8 194 2 571 12 231 2 42 2 267 2 300 8 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 12 383 2 384 2 123 2 339 8 418 2 460 12 92 16 304 2 388 6 166 4 343 2 169 4 51 4 420 4 17 2 466 2 240 6 170 12 467 2 346 4 421 2 468 4 391 2 19 4 275 2 205 4 392 2 130 8 586 2 548 2 587 2 242 2 507 2 131 8 176 8 97 2 472 4 279 2 473 4 280 2 23 2 134 2 510 2 179 2 356 6 555 2 592 2 101 4 283 4 245 8 63 2 596 4 432 14 246 12 287 8 183 4 434 4 479 2 27 2 558 2 103 36 359 2 249 12 105 2 106 4 148 2 599 2 212 4 
109 8 0 4 216 2 28 2 30 2 446 2 3 2 73 2 327 4 112 2 563 2 75 6 255 2 156 4 532 2 481 2 450 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 295 4 406 10 36 2 491 4 228 8 116 6 494 4 374 2 9 4 262 2 161 2 264 2 408 8 194 2 571 12 231 2 42 2 267 2 300 8 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 8 418 2 460 10 92 16 304 2 388 4 166 4 343 2 169 4 51 2 420 2 17 2 240 4 466 2 170 12 467 2 346 2 421 2 468 4 391 2 19 4 275 2 205 4 392 2 130 8 586 2 548 2 587 2 242 2 507 2 131 8 176 6 97 2 472 2 279 2 473 4 280 2 23 2 134 2 510 2 179 2 356 6 555 2 592 2 101 4 245 8 63 2 596 4 432 12 246 8 287 8 183 4 434 4 479 2 27 2 558 2 103 36 359 2 249 10 105 2 106 4 599 2 212 4 
109 2 0 4 28 2 216 2 30 2 446 2 327 4 112 2 563 2 75 6 255 2 156 4 481 2 450 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 406 10 36 2 491 4 116 6 228 2 494 2 374 2 9 4 262 2 161 2 264 2 408 10 194 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 542 2 303 10 383 2 123 2 339 2 418 2 460 10 92 10 304 2 166 4 388 4 169 4 343 2 51 2 420 2 17 2 240 4 466 2 170 6 467 2 346 2 468 4 19 2 275 2 205 4 392 2 130 2 548 2 587 2 242 2 507 2 131 2 176 6 97 2 472 2 279 2 473 4 280 2 23 2 134 2 179 2 356 6 555 2 592 2 101 4 245 2 63 2 596 4 432 14 246 8 287 2 183 4 434 4 479 2 27 2 558 2 103 20 359 2 249 10 105 2 106 4 212 4 
109 4 0 2 28 2 216 2 30 2 446 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 4 231 2 267 2 300 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 315 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 289 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 4 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 4 231 2 267 2 300 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 315 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 4 267 2 300 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 421 2 468 2 391 2 171 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 289 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 4 267 2 300 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 421 2 468 2 391 2 171 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 8 0 4 216 2 28 2 30 2 446 2 289 2 3 2 73 2 327 4 112 2 563 2 75 6 255 2 156 4 481 2 451 2 482 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 295 2 406 10 36 4 491 4 228 10 116 6 494 4 374 2 9 4 262 2 538 2 161 2 264 2 408 8 194 2 571 2 42 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 542 2 303 10 383 2 123 2 339 10 418 2 460 10 125 2 92 16 304 2 388 4 166 4 343 2 169 4 51 2 420 2 17 2 204 2 240 4 466 2 170 12 467 2 346 2 468 4 391 2 19 4 275 2 205 4 392 2 130 8 548 2 587 2 242 2 507 2 131 10 176 6 97 2 472 2 279 4 473 4 280 2 23 2 134 2 510 2 179 2 356 4 555 2 592 4 101 4 245 8 63 2 596 4 432 12 246 8 287 8 183 4 434 4 479 2 27 2 558 2 103 36 359 2 249 10 105 2 106 4 212 4 
109 6 0 4 28 2 216 2 30 2 446 2 3 2 73 2 327 4 112 2 563 2 75 6 255 2 156 4 481 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 406 10 36 2 491 4 116 6 228 6 494 2 374 2 9 4 262 2 161 2 264 2 408 8 194 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 542 2 303 10 383 2 123 2 339 6 418 2 460 10 92 14 304 2 388 4 166 4 343 2 169 4 51 2 420 2 17 2 240 4 466 2 170 10 467 2 346 2 468 4 391 2 19 4 275 2 205 4 392 2 130 6 548 2 587 2 242 2 507 2 131 6 176 6 97 2 472 2 279 2 473 4 280 2 23 2 134 2 179 2 356 4 555 2 592 2 101 4 245 6 63 2 596 4 432 12 246 8 287 6 183 4 434 4 479 2 27 2 558 2 103 28 65 2 359 2 249 10 105 2 106 4 212 4 
109 6 0 4 28 2 216 2 30 2 446 2 289 2 3 2 73 2 327 4 112 2 563 2 75 6 255 2 156 4 481 2 451 2 370 2 34 2 7 4 78 4 35 2 535 2 191 2 406 10 36 2 491 4 116 6 228 6 494 2 374 2 9 4 262 2 161 2 264 2 408 8 194 2 267 2 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 542 2 303 10 383 2 123 2 339 6 418 2 460 10 92 14 304 2 388 4 166 4 343 2 169 4 51 2 420 2 17 2 240 4 466 2 170 10 467 2 346 2 468 4 391 2 19 2 275 2 205 4 392 2 130 6 548 2 587 2 242 2 507 2 131 6 176 6 97 2 472 2 279 2 473 4 280 2 23 2 134 2 179 2 356 4 555 2 592 2 101 4 245 6 63 2 596 4 432 12 246 8 287 6 183 4 434 4 479 2 27 2 558 2 103 28 65 2 359 2 249 10 105 2 106 4 212 4 
109 4 0 2 28 2 216 2 30 2 446 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 571 6 42 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 421 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 351 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 6 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 307 2 421 2 468 2 391 2 19 2 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 289 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 456 2 571 6 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 307 2 421 2 468 2 391 2 19 2 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 289 2 73 2 327 4 112 2 75 4 156 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 571 6 42 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 499 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 421 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 351 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 2 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 73 2 327 4 112 2 75 4 156 2 532 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 571 8 42 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 387 2 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 421 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 4 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 68 2 106 2 212 2 
109 4 0 2 28 2 216 2 30 2 446 2 289 2 73 2 327 4 112 2 75 4 156 2 532 2 481 2 451 2 370 2 34 2 7 2 78 2 35 2 535 2 191 2 295 2 406 10 36 2 116 2 228 4 374 2 9 2 262 2 161 2 264 2 408 6 194 2 571 8 42 2 267 2 300 4 335 2 413 2 381 4 541 2 414 2 122 2 415 2 88 2 46 2 303 10 383 2 123 2 339 4 418 2 460 10 387 2 92 8 304 2 388 4 166 2 343 2 169 2 51 2 420 2 17 2 240 4 466 2 467 2 170 6 346 2 421 2 468 2 391 2 19 4 275 2 205 4 392 2 130 4 548 2 587 2 242 2 507 2 131 4 176 6 97 2 472 2 279 2 473 4 280 2 23 2 179 2 356 4 555 2 592 2 101 4 245 4 63 2 596 2 432 10 246 6 287 4 183 2 434 2 27 2 558 2 103 20 359 2 249 10 105 2 68 2 106 2 212 2 
232 2 103 2 395 2 
75 2 232 2 103 2 395 2 
393 2 183 2 369 2 500 2 232 2 103 2 395 2 
557 2 167 2 534 2 183 4 215 2 465 2 324 2 203 2 544 2 84 2 427 2 16 2 357 2 56 2 57 2 93 2 75 2 530 2 26 6 174 2 395 2 14 2 
557 2 167 2 534 2 183 4 215 2 465 2 324 2 203 2 544 2 84 2 427 2 16 2 357 2 56 2 57 2 93 2 75 2 530 2 26 6 174 2 395 2 14 2 
214 8 149 8 1 24 150 16 217 8 527 24 444 6 364 16 445 32 365 2 72 2 155 8 75 44 5 8 449 8 368 34 531 2 219 8 533 8 291 8 76 16 8 2 222 8 223 4 536 2 373 8 225 64 537 16 79 8 159 34 375 8 81 24 10 16 377 8 83 8 298 8 299 50 86 8 87 10 233 42 458 16 459 56 89 4 382 66 90 2 236 2 238 8 461 16 239 44 463 8 306 6 241 8 94 32 172 4 547 2 549 8 309 8 95 52 470 32 175 98 96 4 471 8 310 8 551 16 177 8 313 24 98 8 475 16 314 50 178 38 99 2 395 32 243 16 396 16 554 8 556 16 244 8 100 24 318 12 180 56 25 6 182 8 397 60 319 2 398 8 184 112 185 76 561 2 107 16 322 8 250 8 108 2 324 8 562 2 252 38 325 2 186 12 326 8 564 112 256 4 33 2 189 24 257 16 404 24 258 44 405 8 485 8 190 2 259 2 488 16 329 2 490 16 330 8 492 8 115 8 261 16 192 24 116 16 568 16 569 8 332 16 40 98 41 2 117 2 409 8 118 26 195 16 411 16 119 8 265 2 120 70 497 2 412 34 196 14 498 16 574 8 270 2 271 8 272 2 576 8 338 30 416 16 340 24 273 8 579 2 200 8 201 2 203 16 581 8 503 8 345 12 53 2 129 20 424 8 277 24 278 16 506 32 132 16 508 24 425 64 281 16 133 52 426 24 353 8 354 28 588 8 135 8 136 40 58 8 59 8 60 18 511 50 356 16 591 4 430 2 282 16 140 2 209 8 514 8 62 2 516 4 595 8 284 16 596 16 285 16 597 8 143 8 64 8 144 30 358 8 435 8 211 8 518 28 360 16 66 8 519 4 438 260 520 6 439 2 521 74 70 28 441 8 71 8 523 36 600 24 601 8 526 1 213 62 
214 6 149 6 1 18 150 12 527 16 217 6 444 12 364 12 445 24 365 4 72 2 155 6 75 34 5 6 449 6 368 28 531 2 219 6 533 6 291 6 76 12 8 4 222 6 223 4 536 4 373 6 225 48 537 12 79 6 159 28 375 6 81 18 10 12 377 4 83 6 298 6 299 40 86 6 87 8 233 34 458 12 459 42 89 4 382 50 90 4 236 2 238 6 461 12 239 34 463 6 306 6 241 6 94 20 172 8 547 2 549 6 309 6 95 40 470 24 175 74 471 6 310 6 551 12 177 6 313 18 98 6 475 12 314 40 178 30 99 2 395 24 243 12 396 12 554 6 556 12 244 6 100 18 318 10 180 42 25 6 182 6 397 46 319 2 398 6 184 88 185 58 561 4 107 12 322 6 108 2 250 6 324 6 562 2 252 30 325 2 186 10 326 6 564 84 256 8 33 2 189 18 257 12 404 18 258 34 405 6 485 6 190 2 259 2 488 12 329 2 490 12 330 6 492 6 115 6 261 12 192 18 116 12 568 14 569 6 332 12 40 74 117 2 409 6 410 2 118 22 195 12 411 12 119 6 265 2 120 54 497 2 412 28 196 12 498 12 574 6 270 4 271 6 272 4 576 6 338 24 416 12 340 18 273 6 579 2 200 6 201 2 203 12 581 6 503 6 345 10 53 2 129 14 424 6 277 18 278 12 506 24 132 12 508 18 425 48 281 12 133 40 426 18 353 6 354 20 588 6 135 6 136 30 58 6 59 6 60 16 511 40 356 12 591 4 430 2 282 12 140 2 209 6 514 6 62 4 516 4 595 6 284 12 596 12 285 12 597 6 143 6 64 6 144 24 358 6 435 6 518 20 211 6 360 12 66 6 519 8 438 202 520 6 439 2 521 56 70 20 441 6 71 6 523 30 600 18 601 6 213 48 
214 6 149 6 1 18 150 14 527 14 217 6 444 6 364 12 445 24 365 2 72 2 155 6 75 34 5 6 449 6 368 28 531 2 219 6 533 6 291 6 76 20 8 2 222 6 223 4 536 2 373 6 225 48 537 12 79 6 159 26 375 6 81 18 10 12 377 2 83 6 298 6 299 40 86 6 87 8 233 32 458 12 459 42 89 4 382 50 90 2 236 2 238 6 461 12 239 34 463 6 306 6 241 6 94 28 172 4 547 2 549 6 309 6 95 40 470 24 175 72 471 6 310 6 551 12 177 6 313 18 98 6 475 12 314 40 178 30 99 2 395 24 243 12 396 12 554 6 556 12 244 6 100 18 318 10 180 42 25 6 182 6 397 46 319 2 398 6 184 88 185 58 561 2 107 12 322 6 108 2 250 6 324 6 562 2 252 30 325 2 186 10 326 6 564 84 256 4 33 2 189 18 257 12 404 18 258 34 405 6 485 6 190 2 259 2 488 12 329 2 490 12 330 6 492 6 115 6 261 12 192 18 116 12 568 14 569 6 332 12 40 82 117 2 409 6 118 22 195 12 411 12 119 6 265 2 120 54 497 2 412 28 196 12 498 12 574 6 270 2 271 6 272 2 576 6 338 24 416 12 340 18 273 6 579 2 200 6 201 2 203 12 581 6 503 6 345 10 583 8 53 2 129 22 424 6 277 18 278 12 506 24 132 12 508 18 425 48 281 12 133 40 426 18 353 6 354 28 588 6 135 6 136 30 58 6 59 6 60 16 511 38 356 12 591 4 430 2 282 12 140 2 209 6 514 6 62 2 516 4 595 6 284 12 596 12 285 12 597 6 143 6 64 6 144 24 358 6 435 6 518 28 211 6 145 2 360 12 66 6 519 4 438 202 520 6 439 2 521 56 70 28 441 6 71 6 523 30 600 18 601 6 213 48 
214 34 149 46 1 60 150 48 527 66 217 24 444 12 364 26 445 72 365 4 72 2 155 18 75 106 5 24 449 46 368 64 531 2 219 10 533 12 291 24 76 32 8 4 222 12 223 4 536 4 373 12 225 102 537 26 79 12 159 128 375 12 296 22 82 22 81 60 10 48 377 18 83 24 298 24 299 100 86 12 87 24 233 94 458 36 459 88 235 10 89 6 382 158 90 6 236 2 238 12 461 36 239 100 463 24 306 8 241 12 94 48 172 12 547 2 549 10 309 14 95 124 470 118 175 282 96 28 471 24 550 24 310 24 551 48 177 24 313 98 98 18 475 36 314 100 178 88 99 2 395 72 477 2 243 42 396 26 554 40 556 26 244 24 100 60 317 2 318 18 180 144 25 10 182 24 397 148 319 2 320 12 398 24 184 310 185 160 561 4 107 26 322 12 250 14 108 2 324 12 562 2 252 88 325 2 253 22 186 18 326 24 564 270 256 8 33 2 189 48 257 26 403 22 404 66 258 100 405 12 485 24 190 2 259 2 488 52 329 2 490 26 330 36 492 12 115 46 261 48 192 36 116 30 568 22 569 34 332 26 40 216 41 2 117 2 409 12 410 2 118 40 195 24 411 26 119 12 265 2 573 12 120 168 497 2 412 64 196 18 498 48 574 12 270 4 271 12 272 4 576 12 338 64 416 26 501 22 340 66 273 24 579 2 419 2 127 22 200 12 201 2 203 24 581 12 503 26 345 18 53 2 129 36 424 40 277 58 278 36 506 78 54 24 132 24 508 64 425 176 281 26 133 124 426 150 353 12 354 48 588 24 135 12 136 92 58 24 59 24 60 28 356 36 511 134 591 6 430 2 282 86 140 4 209 16 514 46 62 4 516 4 431 12 595 24 284 52 596 36 285 36 597 18 433 22 143 12 64 24 144 88 358 12 435 24 211 14 518 48 436 10 360 36 66 18 519 8 438 568 520 8 439 2 521 182 70 48 441 12 71 12 523 54 600 38 601 12 213 150 
214 28 149 56 1 84 150 48 527 76 217 24 444 12 364 26 445 96 365 4 72 2 155 18 75 140 5 36 449 56 368 82 531 2 219 10 533 12 291 24 76 32 8 4 222 12 223 4 536 4 373 12 225 102 537 26 79 12 159 138 296 28 375 12 80 20 82 32 81 66 10 72 377 18 83 24 298 36 299 130 86 12 87 28 233 116 458 48 459 88 235 8 89 6 382 158 90 6 236 2 238 12 461 48 239 136 463 24 306 8 241 12 94 48 172 12 547 2 549 10 309 14 95 172 470 164 175 326 96 38 471 36 550 48 310 24 551 48 177 24 313 118 98 18 475 48 314 130 178 88 99 2 395 96 477 2 243 42 396 26 554 46 556 26 244 24 100 84 318 22 180 210 25 10 182 24 397 208 319 2 320 24 398 24 184 504 185 208 559 28 561 4 107 26 322 12 108 2 250 14 324 12 562 2 252 88 253 28 325 2 186 22 326 24 564 308 256 8 33 2 189 60 257 26 403 28 404 66 258 136 405 12 485 24 190 2 259 2 488 58 329 2 490 26 330 60 492 12 115 56 261 72 192 36 116 32 568 26 569 28 332 26 40 216 41 2 117 2 409 12 410 2 118 42 195 24 411 26 119 12 265 2 573 12 120 168 497 2 412 82 196 18 498 72 121 4 574 12 270 4 271 12 272 4 576 12 338 64 416 26 501 32 340 66 273 24 579 2 419 2 127 32 200 12 201 2 203 24 581 12 503 36 345 22 53 2 129 36 424 46 277 58 278 48 54 68 506 84 132 24 508 62 425 196 281 26 133 172 426 234 353 12 354 48 588 36 135 12 136 92 58 24 59 24 60 34 511 144 356 36 591 6 430 2 282 102 140 4 209 16 514 56 62 4 431 24 516 4 595 24 284 58 596 48 285 48 597 18 433 32 143 12 64 24 144 84 358 12 435 36 518 48 211 14 436 8 360 48 66 18 519 8 438 790 520 8 439 2 521 182 70 48 441 12 71 12 523 54 600 38 601 12 213 210 
214 8 149 10 1 10 150 8 217 4 152 2 527 10 445 12 364 6 2 2 155 4 528 2 75 16 5 4 449 10 368 10 219 4 533 2 291 4 290 2 76 8 222 2 225 26 537 6 159 20 296 4 375 2 80 2 82 4 81 16 10 8 83 4 298 4 299 16 86 2 301 4 458 4 233 18 459 22 235 2 382 46 238 2 461 6 239 16 463 6 390 2 241 2 94 22 549 6 309 4 95 20 470 20 175 62 96 4 471 4 550 4 310 4 551 8 177 4 313 20 98 4 475 6 314 16 178 24 395 12 553 2 554 10 396 6 243 10 244 4 556 6 100 10 318 2 180 28 25 2 182 4 397 24 183 1 320 2 398 6 185 24 184 46 107 6 322 2 250 4 324 2 252 24 253 4 186 2 326 4 564 60 189 8 257 6 403 4 404 16 258 16 405 2 485 6 488 10 490 10 330 6 492 2 115 10 261 8 192 6 116 6 493 4 568 2 569 8 263 2 332 6 40 64 409 2 195 4 118 4 411 10 119 2 120 46 412 10 196 6 498 8 121 2 574 2 271 2 576 2 338 18 416 6 199 2 501 4 340 16 273 4 127 4 200 2 580 10 203 4 581 2 345 2 129 14 424 10 277 12 278 6 54 4 506 16 132 4 508 12 425 34 281 10 426 26 133 20 353 2 354 18 588 4 57 2 136 20 58 4 59 4 60 4 356 6 511 26 430 1 282 20 209 4 514 10 431 2 595 4 284 10 596 4 285 6 597 4 433 4 64 4 358 2 144 20 435 4 518 18 211 6 436 2 360 6 66 4 437 2 438 166 521 122 441 2 70 18 71 2 600 8 523 14 601 2 213 24 
356 4 570 2 274 2 379 2 572 2 584 2 75 4 371 2 484 2 417 2 21 2 321 2 353 2 590 2 49 2 395 2 116 4 
356 4 110 2 570 4 379 2 539 2 505 2 572 2 52 2 584 2 75 4 183 2 371 2 102 2 484 2 311 2 417 2 21 2 321 2 353 2 590 2 49 2 395 2 116 4 
110 2 151 2 505 2 52 2 584 2 75 2 371 6 21 2 353 2 331 2 590 2 395 2 116 2 137 2 356 2 316 2 570 4 539 2 61 2 517 2 183 2 102 2 417 2 49 2 524 2 
108 2 239 2 495 2 118 4 180 2 163 2 299 4 585 2 75 4 596 2 458 2 368 4 95 4 397 6 471 2 292 8 319 2 258 2 104 2 236 4 224 8 133 4 158 2 438 20 184 10 185 4 69 2 330 2 579 4 314 4 60 4 213 10 
181 2 543 2 
543 2 181 2 269 2 
214 2 149 8 150 8 1 14 527 6 217 4 364 2 444 16 445 16 365 2 72 2 155 4 75 28 449 8 5 6 531 2 368 26 219 4 533 2 291 4 76 4 8 2 222 2 223 2 536 2 373 2 225 10 537 2 79 2 159 18 375 2 296 6 80 2 82 6 81 6 10 12 83 4 298 6 299 34 86 2 87 10 233 18 458 6 459 10 89 6 382 16 90 4 236 2 461 8 239 26 463 4 306 6 241 2 94 6 172 8 547 2 549 8 309 4 95 30 470 26 175 46 96 6 471 4 550 8 310 4 551 8 177 4 313 18 98 4 475 8 314 34 178 8 99 2 395 16 477 2 243 4 396 2 554 8 556 2 244 4 100 14 317 2 318 10 180 38 182 4 397 34 319 2 320 4 398 4 184 100 185 34 559 6 561 2 107 2 322 2 250 2 108 2 324 2 562 2 252 8 325 2 253 4 186 10 401 2 326 4 564 52 256 4 33 2 189 10 257 2 403 4 404 8 258 26 405 2 485 4 190 2 259 2 488 6 490 2 330 10 492 2 115 8 261 12 192 2 116 4 568 14 38 2 569 4 332 2 40 24 117 2 118 16 195 4 411 2 265 2 573 2 120 20 497 2 412 26 498 12 121 4 574 2 270 6 271 2 272 2 338 4 576 2 416 2 501 4 340 8 273 4 579 2 419 2 127 4 200 2 201 2 203 2 581 2 503 10 345 10 53 2 129 4 424 8 277 12 278 8 54 16 132 2 508 10 425 22 281 2 133 30 426 44 354 4 588 6 135 2 136 14 58 4 59 4 60 18 356 6 511 10 430 2 282 16 140 4 209 4 514 8 62 4 210 2 516 2 431 4 595 4 284 6 596 6 285 8 597 4 433 4 142 2 64 4 144 6 358 2 435 6 211 4 518 4 436 6 360 8 66 4 519 4 438 214 520 6 521 86 70 4 441 2 71 2 523 2 600 4 601 2 213 36 
149 2 214 2 150 4 1 6 217 2 527 4 364 2 445 8 72 2 155 2 75 14 447 2 449 2 5 2 531 2 368 14 533 2 291 2 76 2 222 2 223 2 373 2 225 10 537 2 159 4 375 2 81 2 10 4 377 2 83 2 298 2 299 18 86 2 87 2 233 8 458 4 459 10 89 4 382 8 236 2 461 4 239 12 463 2 306 4 241 2 94 14 547 2 95 14 470 12 175 16 96 2 471 2 310 2 551 4 177 2 313 6 98 2 475 4 314 18 178 4 99 2 395 8 243 2 396 2 554 2 556 2 244 2 100 6 318 6 180 12 25 6 182 2 397 16 319 2 398 2 185 20 184 34 107 2 322 2 108 2 324 2 562 2 252 4 325 2 186 6 326 2 564 20 33 2 189 6 257 2 404 4 258 12 405 2 485 2 259 2 488 2 490 2 330 2 492 2 115 2 261 4 192 4 116 2 568 10 569 2 332 2 40 12 117 2 409 2 118 12 195 4 411 2 265 2 120 10 497 2 412 14 498 4 574 2 271 2 338 2 576 2 416 2 340 4 273 2 579 2 200 2 201 2 203 2 581 2 345 6 53 2 129 2 424 2 277 4 278 4 506 4 132 4 508 6 425 14 281 2 133 14 426 4 353 2 354 2 588 2 135 2 136 6 428 4 58 2 60 10 59 2 511 6 356 4 430 2 282 4 140 2 209 2 514 2 516 2 595 2 284 2 596 4 285 4 597 2 286 2 64 2 144 2 358 2 435 2 518 2 360 4 66 2 438 76 520 4 521 20 441 2 70 2 71 2 523 8 600 4 601 2 213 18 
138 2 538 2 388 2 166 2 555 4 389 2 169 2 103 2 592 4 545 2 105 2 55 2 336 2 75 2 156 2 541 2 228 2 
430 2 139 2 206 2 160 2 
399 2 324 4 443 2 288 2 29 2 153 2 31 2 4 2 32 2 75 6 187 2 480 2 531 2 368 6 218 2 328 2 189 2 220 2 483 2 565 2 77 2 258 6 453 2 487 2 225 2 489 2 260 2 567 2 37 2 192 4 376 2 297 2 39 2 230 2 455 4 496 2 118 4 162 2 380 2 11 4 299 6 458 2 575 6 577 2 197 2 124 2 47 2 48 2 91 6 239 6 128 2 464 2 203 4 308 2 347 2 422 2 276 2 173 2 350 2 20 2 95 6 207 2 394 10 425 4 133 6 474 2 314 6 60 4 429 2 24 2 593 2 512 16 513 2 141 2 397 8 183 2 102 2 103 2 360 2 438 24 185 20 184 12 147 2 361 4 522 2 521 2 213 8 
399 2 324 4 443 2 288 2 29 2 153 2 31 2 4 2 32 2 75 6 187 2 480 2 531 2 368 8 218 2 328 2 189 2 220 2 483 2 565 2 77 2 258 6 453 2 487 2 225 2 489 2 260 2 567 2 37 2 192 4 376 2 297 2 39 2 230 2 455 4 496 2 118 6 162 2 380 2 11 4 299 8 458 2 575 6 577 2 197 2 124 2 47 2 164 2 48 2 91 6 239 6 128 2 464 2 203 4 308 2 347 2 422 2 276 2 173 2 350 2 20 2 95 6 207 2 394 10 425 4 133 6 474 2 314 8 60 6 429 2 24 2 593 2 512 18 513 2 141 2 397 8 183 2 102 2 103 2 360 2 438 28 185 20 184 14 147 2 361 4 522 2 521 2 213 8 

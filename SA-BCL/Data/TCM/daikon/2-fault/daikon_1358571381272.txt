#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 805 1087 (1618,1867) (1618,1867) 882 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3_17()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_68()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3_13()Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_69()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaParser:jj_3R_72()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_164()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_29()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:gt(II)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:slice([III)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:has_typeof()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_61()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:eltsGTE([II)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(FF)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_ntk()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 3152 | stmt -> ;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(D[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_60()Z
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:logOn()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:indexOf([J[J)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.VarInfo:isPrestate()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:elementIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_104()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Debug:logDetail()Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3R_57()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String; | ASSIGN | 882 | = null
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3_35()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_96()Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_97()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_53()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_117()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_99()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ProglangType:base()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_25(I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_30()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_106()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern:intern([D)[D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ModBitTracker:split(I)I
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_25()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaCharStream:readChar()C
daikon.Quant:lt(II)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.JavaParser:jj_3R_136()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.Quant:union([I[I)[I
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(DD)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.Quant:lexEqual([I[I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_18()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_110()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_77()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_81()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:eq(JJ)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariants:Invariants()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_118()Z
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_169()Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Assert:assertTrue(Z)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3_12()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.ProglangType:baseIsScalar()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.ProglangType:dimensions()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName:hasTypeOf()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice3:arity()I
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.ProglangType:isString()Z
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfo:isPointer()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3_3()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:jj_3R_137()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_210()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:BeginToken()C
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_115()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ProglangType:isIntegral()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:is_false()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.Invariant:logOn()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3_14()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1320 2 1837 4 892 2 1447 2 609 2 338 2 37 2 1168 2 1178 2 
899 2 426 6 313 2 1848 6 810 2 133 2 311 2 493 6 1108 2 377 2 1060 2 
1329 2 1408 2 1162 2 1668 6 1843 4 447 6 1320 2 1242 4 736 6 60 2 1447 2 612 2 979 6 
1723 4 685 4 871 12 1616 6 1415 10 603 26 1446 16 562 10 350 4 1447 6 990 2 782 8 1276 10 568 10 824 4 1574 28 701 10 1388 16 271 16 575 2 1912 8 1577 2 1320 6 22 8 796 2 1323 2 950 6 1809 8 430 2 48 2 
1637 6 532 4 
1297 2 
660 2 1758 2 1642 2 288 4 1070 2 230 2 778 2 967 2 1820 2 122 2 916 2 244 2 360 2 1424 2 302 2 1829 4 490 2 544 2 545 2 251 2 499 2 134 2 1779 4 1442 2 1298 2 508 2 1168 2 986 2 1447 4 816 2 321 2 380 2 696 2 1246 2 1379 2 1180 2 880 2 272 2 575 2 1799 2 100 2 1320 4 105 2 1695 4 
1160 4 110 6 1502 2 871 22 1616 4 1415 15 604 6 603 47 562 15 1446 32 350 2 1447 4 1904 6 1276 15 1111 4 568 6 998 4 1418 2 1795 4 701 15 1574 52 1797 2 1388 32 271 32 218 4 247 5 1184 2 362 4 363 8 1318 2 1320 4 22 19 1323 2 950 4 1488 3 1809 6 498 6 626 4 923 6 
230 2 1196 2 1911 2 
590 2 122 2 1742 2 141 2 1874 10 1185 2 21 2 204 2 677 2 478 2 1360 2 36 22 1272 2 459 2 
1636 2 49 2 871 2 1415 2 603 4 562 2 1446 2 350 2 1673 2 756 2 1305 2 1274 2 1276 2 820 2 995 2 568 4 701 2 1574 6 271 2 1388 2 22 2 950 2 1493 2 
1276 4 1111 4 1723 2 1795 4 1574 16 701 4 271 8 1388 8 871 4 1415 4 603 12 1446 8 562 4 498 6 1904 6 1400 2 1586 2 
1365 2 1196 2 1405 2 1591 2 404 10 1614 4 774 2 201 4 1338 2 230 8 1559 4 1302 4 987 4 1207 2 321 2 1792 4 758 2 1739 2 513 2 11 10 1082 2 123 4 821 2 914 62 359 2 1424 4 1911 6 1829 4 849 2 792 2 1831 2 1457 2 620 4 306 2 428 14 1121 4 1194 4 337 2 1608 4 865 2 
1297 2 111 2 375 2 480 2 1377 2 1275 2 725 2 619 2 165 2 952 2 
227 2 345 2 1702 2 1068 1 113 3 114 2 843 2 1203 4 1339 2 1074 2 1204 2 1475 16 965 1 1819 3 481 2 719 2 720 2 1081 1 1209 4 1347 2 1211 2 358 2 125 2 728 2 970 3 851 2 491 2 1833 2 250 2 368 1 1222 2 859 16 24 2 860 2 980 2 629 1 745 1 746 2 29 2 868 32 631 2 633 2 1615 2 1371 6 985 8 1373 2 1507 16 33 2 752 2 34 2 149 2 1247 6 515 6 639 32 382 2 1847 1 996 2 519 2 1625 3 1393 1 650 2 1117 1 1119 2 158 2 768 1 769 8 1520 4 167 2 47 2 1857 3 1126 2 1522 2 1753 2 1129 2 892 2 1264 2 1412 2 1414 4 1643 2 1016 3 1136 2 1138 2 1535 2 416 2 1140 3 1765 2 1767 24 420 2 419 24 1768 2 1026 2 1282 2 919 2 676 3 429 3 550 2 801 4 802 6 1781 1 1780 1 804 2 1886 2 683 4 1551 2 1554 2 1666 3 1889 2 1440 3 554 2 1890 2 1891 2 1892 2 315 12 443 2 1445 2 1897 2 1170 2 1169 2 691 1 1561 2 1447 32 937 2 1562 1 95 2 1565 4 209 1 326 2 702 1 465 2 1683 1 467 3 704 2 1576 2 1455 4 1803 16 706 2 1317 2 947 2 1320 34 832 5 1190 8 1693 2 580 2 837 12 836 2 1463 2 340 2 475 2 589 2 
77 2 1320 2 
1320 4 754 2 968 2 
46 2 
1467 2 1 6 477 14 959 2 4 2 6 6 1478 22 485 2 487 196 1481 6 488 4 15 2 1483 2 17 2 971 6 494 6 19 186 975 2 974 74 496 12 23 22 1490 4 1491 2 1494 10 1495 4 978 2 1497 4 1498 2 28 24 504 6 506 24 507 152 1505 4 984 2 1506 2 989 2 997 4 999 16 522 2 1516 2 1002 168 43 2 524 4 1005 96 525 4 45 4 1008 6 1010 2 528 2 50 2 1527 4 530 24 54 2 55 4 59 20 1019 2 534 2 1021 2 1022 12 63 18 1537 4 537 18 64 50 1539 4 1024 6 66 2 1540 42 1542 6 540 4 1543 2 73 14 72 138 71 2 546 2 1029 2 78 62 549 6 548 2 1545 2 1548 2 1553 2 1037 376 1040 2 90 10 1041 6 92 4 94 4 1566 2 1568 6 566 4 1043 36 567 2 1045 4 1046 2 97 188 570 168 98 2 1049 114 99 2 1050 2 577 6 578 2 1580 2 582 6 1581 2 587 6 1058 4 1585 92 1587 2 1588 2 108 480 1062 2 1065 2 593 24 594 4 597 24 595 2 599 8 116 300 602 72 1075 2 605 2 607 6 1078 4 1594 286 1079 2 1080 2 1083 2 124 10 1597 48 1087 2 1088 2 127 4 622 6 132 2 1089 10 1604 6 1605 4 1091 14 1092 2 1093 2 627 2 1095 2 1096 2 136 2 1609 8 1611 12 140 4 632 6 1101 2 636 16 1102 330 1103 6 148 6 1618 2 1104 2 638 4 1105 2 152 4 1620 12 1107 14 1113 24 1624 12 646 4 649 18 157 2 651 2 1631 2 1632 2 159 6 654 6 655 2 1124 6 1123 2 169 6 1131 2 173 2 174 40 663 2 176 4 177 10 664 6 666 22 1644 2 667 4 668 2 1646 2 1647 6 1141 82 183 6 1144 2 1649 6 1145 2 184 22 185 2 1654 2 187 168 1148 12 191 14 192 2 1662 40 1154 4 679 4 196 6 1157 6 198 2 1665 2 1163 2 200 2 688 10 1166 4 1669 6 202 168 689 2 205 2 692 2 1173 6 1175 2 695 22 1674 2 1177 184 1675 12 1676 2 1680 2 215 168 703 78 217 2 1688 152 222 2 1690 4 710 2 1697 6 228 4 1200 2 1703 24 713 4 1704 2 1202 6 232 2 1705 2 716 162 237 4 718 4 1708 40 723 4 1213 2 1212 4 241 82 726 22 1215 48 1711 2 1712 2 730 4 1216 2 1219 2 1716 6 735 6 739 2 1722 2 1227 4 1231 24 1230 2 1232 2 743 6 1724 376 747 2 1236 6 748 300 258 6 749 94 1725 184 259 22 753 6 1731 4 755 188 1243 2 261 2 264 18 1737 2 1735 2 263 2 1734 8 265 2 759 2 760 2 761 96 1250 6 273 6 762 86 1744 10 275 24 1253 188 1745 2 766 168 279 56 1750 4 1752 2 771 6 1754 4 772 2 284 4 1263 6 773 10 775 4 1760 6 287 4 776 4 1268 2 781 4 1271 2 292 24 1764 168 294 6 298 48 788 2 1278 2 1277 2 301 6 1280 24 1770 26 1287 2 1772 6 1288 2 798 6 1776 2 1292 2 1295 10 805 2 807 4 806 2 314 40 812 2 815 2 1789 2 1790 12 817 2 1306 10 323 14 324 6 819 4 1309 2 325 14 823 2 825 4 1796 38 1315 2 327 14 830 58 1800 2 1319 2 1320 8 330 2 1321 300 332 2 333 2 1808 4 336 2 1812 8 838 4 839 20 1817 4 342 2 1332 108 844 168 845 2 1339 2 352 8 1344 2 1350 4 850 10 1830 2 361 2 855 20 369 38 1358 4 1359 46 373 2 1842 24 870 2 1370 6 873 2 876 4 1374 2 1375 6 878 2 1380 4 1381 2 1383 24 383 332 1386 8 881 24 1387 2 882 2 884 4 1849 4 885 2 886 18 887 2 388 6 390 18 1853 4 395 4 1399 2 396 2 1401 2 1856 2 1402 2 1859 6 1403 2 890 2 401 4 1407 2 893 14 1409 2 402 56 1863 46 1410 8 403 8 1411 54 1413 2 409 12 410 6 1867 2 900 22 412 168 904 2 1868 4 908 2 417 4 910 2 913 4 1421 2 421 6 1422 2 917 2 1876 2 1429 24 920 2 1431 10 433 4 924 96 922 2 435 2 437 6 1885 2 1435 2 1436 4 438 42 440 2 1887 2 1888 6 928 6 1895 4 445 4 1899 2 450 2 935 6 452 2 936 2 453 2 1447 8 454 10 938 4 457 62 939 2 1449 2 1905 2 1906 50 464 6 1451 14 466 2 1452 96 945 4 1454 2 468 6 469 6 1914 2 949 2 1465 114 473 2 
57 2 1084 2 1392 2 1238 1 
1901 2 1392 2 
1300 2 230 2 1788 2 652 2 824 2 135 2 1392 2 
652 2 1392 2 474 2 
652 2 889 2 1392 2 
641 2 503 2 1084 2 
652 2 1392 2 
372 2 503 2 
1663 2 1392 2 
1898 2 503 2 1084 2 
1084 2 943 2 83 2 
1084 2 266 2 681 2 
1084 2 517 2 151 2 
669 2 1084 2 1038 2 
503 2 234 2 
879 2 1392 2 
943 2 932 2 
1612 2 266 2 
1341 2 151 2 
1038 2 1150 2 
503 2 3 2 
1882 2 1038 2 
151 2 765 2 
266 2 1538 2 
89 2 943 2 
1898 2 1254 2 503 2 1084 2 
1898 2 1254 2 503 2 1084 2 1870 2 
1706 2 503 2 1084 2 
503 2 1084 2 1798 2 
1077 2 1020 2 208 2 1823 2 
230 2 1296 2 1600 2 135 2 
230 2 1788 2 1296 2 1600 2 135 2 1249 2 
230 2 1671 2 652 2 824 2 135 2 1392 2 
309 2 1758 2 
230 2 269 2 824 2 135 2 
529 2 151 2 
343 2 1038 2 
1130 2 943 2 
808 2 266 2 
266 2 1038 2 376 2 
1640 2 266 2 1038 2 
1443 2 266 2 1038 2 
1883 2 266 2 1038 2 
51 2 230 2 511 6 783 6 295 2 854 2 1464 2 135 2 
503 2 1747 2 
476 2 1404 2 1860 2 112 2 68 2 1864 2 1251 4 274 2 1627 2 366 2 875 2 389 2 1056 2 533 2 36 6 1122 2 680 2 1294 4 
1330 2 1084 2 
465 2 
227 2 345 6 1702 2 843 2 114 2 1339 2 1203 4 965 4 482 2 483 2 120 2 719 2 1209 2 1709 2 860 2 746 2 868 4 631 2 1371 4 32 2 985 2 34 4 752 2 1376 4 1247 2 515 6 639 6 1847 2 382 2 1384 2 1741 2 519 2 1395 2 167 2 1126 2 892 2 1414 4 1013 2 780 2 1535 2 416 2 1765 2 420 2 1026 2 1768 2 542 2 919 2 1153 2 550 2 801 4 802 2 804 2 683 4 1554 2 554 2 1890 2 1891 2 315 8 691 2 1447 26 937 2 1565 2 1179 2 1684 2 704 2 1455 2 1803 6 1054 4 706 2 1317 2 1320 26 1693 2 334 2 471 2 837 8 589 2 
227 2 345 6 1702 2 114 2 843 2 1339 2 1203 4 965 1 482 2 483 2 120 2 719 2 1209 2 1222 2 860 2 746 2 868 4 631 2 1371 6 32 2 985 2 33 2 34 4 752 2 149 2 1376 4 1247 2 515 6 639 6 1847 2 382 2 1384 2 1741 2 519 2 1395 2 167 2 1126 2 892 2 1414 4 1531 2 1013 2 780 2 1535 2 416 2 1765 2 420 2 1026 2 1768 2 542 2 1030 2 919 2 550 2 801 4 802 2 804 2 683 4 1554 2 554 2 1890 2 1891 2 315 8 691 2 1447 26 937 2 1565 2 1179 2 1572 2 1684 2 704 2 1455 2 1803 6 1054 4 706 2 1317 2 1320 26 1693 2 334 2 837 8 589 2 
829 2 
1589 2 1732 2 
171 4 1011 2 1414 2 843 2 1474 2 1339 2 964 2 479 2 1535 2 236 2 416 2 238 2 418 2 969 2 671 4 1026 2 1085 8 1427 2 1027 2 493 6 1286 2 365 10 76 2 1430 2 426 6 737 2 253 2 1293 2 863 2 801 2 371 2 1364 2 1554 2 313 2 1501 4 1890 2 810 4 317 2 1039 8 377 4 1447 6 564 2 515 4 460 2 1108 2 1109 2 268 2 700 4 1848 6 385 2 1320 12 1322 2 833 2 1460 2 583 2 104 4 1521 4 656 2 1195 2 1127 2 
171 4 1011 2 1414 2 843 2 1474 2 1339 2 231 4 964 2 479 2 1535 2 236 2 416 2 238 2 418 2 969 2 671 4 1026 2 1085 8 1427 2 1027 2 493 8 1286 2 365 10 76 2 426 6 737 2 133 2 253 2 1293 2 801 2 863 2 371 2 1554 2 313 2 1501 4 1890 2 810 4 317 2 1039 8 377 4 1447 6 564 2 515 4 460 2 1108 2 1109 2 268 2 700 4 216 2 1848 8 385 2 1320 12 1322 2 833 2 278 2 1460 2 583 2 104 4 1521 4 656 2 1195 2 1127 2 
1011 2 671 4 810 2 493 2 1286 2 377 2 76 2 964 2 426 2 479 2 238 2 104 2 1521 4 863 2 460 2 371 2 1109 2 1195 2 
171 4 1011 2 1414 2 843 2 1474 2 1339 2 964 2 479 2 1535 2 236 2 416 2 238 2 418 2 969 2 671 4 1026 2 1085 4 1427 2 1027 2 493 6 1286 2 365 6 76 2 1430 2 426 4 737 2 133 2 253 2 1293 2 863 2 801 2 371 2 1364 2 1554 2 1501 4 1890 2 810 4 317 2 1039 4 377 4 1447 6 564 2 515 4 460 2 1108 2 1109 2 268 2 700 4 1848 6 385 2 1320 12 1322 2 833 2 1460 2 583 2 104 4 1521 4 656 2 1195 2 1127 2 
171 4 1011 2 1414 2 843 2 1474 2 1339 2 964 2 479 2 1535 2 236 2 416 2 238 2 418 2 969 2 671 4 1026 2 1085 4 1427 2 1027 2 493 4 1286 2 365 6 76 2 1430 2 426 6 737 2 253 2 1293 2 311 2 863 2 801 2 371 2 1364 2 1554 2 1501 4 1890 2 810 4 317 2 1039 4 377 4 1447 6 564 2 515 4 460 2 1108 2 1109 2 268 2 700 4 1848 6 385 2 1320 12 1322 2 833 2 1460 2 583 2 104 4 1521 4 656 2 1195 2 1127 2 
171 4 1011 2 1414 2 843 2 1474 2 1339 2 964 2 479 2 1535 2 236 2 416 2 238 2 418 2 969 2 671 4 1026 2 1085 4 1427 2 1027 2 493 6 1286 2 365 6 76 2 1430 2 426 6 737 2 253 2 1293 2 863 2 801 2 371 2 1364 2 1554 2 313 2 1501 4 1890 2 810 4 317 2 1039 8 377 4 1447 6 564 2 515 4 460 2 1108 2 1109 2 268 2 700 4 1848 6 385 2 1320 12 1322 2 833 2 1460 2 583 2 104 4 1521 4 656 2 1195 2 1127 2 
171 4 1011 2 1414 2 843 2 1474 2 1339 2 964 2 479 2 1535 2 236 2 416 2 238 2 418 2 969 2 671 4 1026 2 1085 8 1427 2 1027 2 493 6 1286 2 365 10 76 2 1430 2 426 8 737 2 253 2 1293 2 311 2 863 2 801 2 371 2 1364 2 1554 2 313 2 1501 4 1890 2 810 4 317 2 1039 8 377 4 1447 6 564 2 515 4 460 2 1108 2 1109 2 268 2 700 4 1848 8 385 2 1320 12 1322 2 833 2 1460 2 583 2 104 4 1521 4 656 2 1195 2 1127 2 
171 4 1011 2 1414 2 843 2 1474 2 1339 2 964 2 479 2 1535 2 236 2 416 2 238 2 418 2 969 2 671 4 1026 2 1085 8 1427 2 1027 2 493 6 1286 2 365 10 76 2 1430 2 426 6 737 2 253 2 1293 2 863 2 801 2 371 2 1364 2 1554 2 313 2 1501 4 1890 2 810 4 317 2 1039 8 377 4 1447 6 564 2 515 4 460 2 1108 2 1109 2 268 2 700 4 1848 6 385 2 1320 12 1322 2 833 2 1460 2 583 2 104 4 1521 4 656 2 1195 2 1127 2 
1696 2 1468 6 1702 2 1474 2 1203 4 964 2 1205 7 479 2 236 2 238 2 1707 2 482 2 1209 2 968 6 1480 2 969 2 489 2 1713 7 493 4 973 1 1222 2 737 2 253 4 500 2 1500 2 1501 4 32 2 985 2 510 6 33 2 757 2 1247 2 515 6 994 6 268 2 519 2 1521 4 46 6 1011 2 1530 1 780 4 1535 2 1026 2 1027 2 1286 2 76 2 304 2 77 6 307 6 81 1 550 12 1032 2 1293 2 311 4 801 4 802 2 1554 2 554 2 810 4 315 4 317 2 558 6 1039 2 1565 2 564 2 1571 6 1803 6 1054 4 1317 2 1320 46 833 2 1322 4 583 2 585 1 837 4 1057 2 104 4 1584 1 589 2 1815 4 1335 6 345 6 843 2 114 2 1339 2 601 2 118 2 1821 8 365 2 860 2 863 2 371 2 1363 2 868 2 631 2 1841 10 1371 6 377 4 639 8 1108 4 382 2 1109 2 640 2 1848 12 385 2 1118 2 1630 2 160 6 164 4 167 2 1126 2 656 2 1127 2 1128 2 171 6 892 2 1414 4 902 6 416 2 912 2 418 2 1650 1 420 2 671 4 1423 2 1653 2 423 2 1427 2 674 2 190 1 1430 2 426 8 193 1 194 6 434 1 1434 6 1664 2 683 4 1890 2 1165 2 203 2 1171 2 1447 24 937 2 693 2 1448 2 697 6 458 2 460 2 700 8 1684 2 704 2 944 2 1455 2 1456 6 706 2 470 2 1460 2 1462 2 1195 2 
1815 4 1696 2 1468 6 1335 6 345 6 1702 2 114 2 843 2 1474 2 601 2 1203 4 1339 2 1340 2 118 2 964 2 479 2 236 2 1707 2 238 2 482 2 968 6 1821 8 1209 4 1480 2 969 2 489 2 493 8 365 2 1222 2 497 2 737 2 253 4 500 2 860 2 863 2 1363 2 371 2 1500 2 1501 4 868 2 1841 10 631 2 32 2 1371 6 377 4 985 2 510 6 33 2 34 2 757 2 1247 2 639 8 515 6 1108 4 1109 2 382 2 994 6 640 2 268 2 1848 12 519 2 385 2 1118 2 1630 2 160 6 164 4 1521 4 46 6 167 2 656 2 1126 2 1127 2 1128 2 892 2 171 6 1011 2 1414 4 902 6 780 4 1535 2 416 2 912 2 418 2 420 2 1423 2 671 4 1026 2 1653 2 423 2 1427 2 1027 2 1286 2 674 2 76 2 77 6 304 2 307 6 1430 2 426 8 194 6 1032 2 550 12 1293 2 1434 6 802 2 801 4 1664 2 683 4 1554 2 313 4 554 2 1890 2 810 4 315 8 1165 2 317 2 558 6 1039 6 203 2 1171 2 937 2 1447 26 1448 2 693 2 458 2 697 6 1565 4 564 2 460 2 1571 6 700 8 704 2 1684 2 944 2 1456 6 1803 6 1455 4 1054 4 470 2 1317 2 706 2 1320 48 1322 4 833 2 1460 2 583 2 1462 2 837 8 104 4 1057 2 1195 2 589 2 
1815 4 1696 2 1468 6 1335 6 345 6 1702 2 843 2 114 2 1474 2 601 2 1203 4 1339 2 1340 2 118 2 964 2 479 2 236 2 1707 2 238 2 482 2 968 6 1821 8 1209 4 1480 2 969 2 489 2 1085 4 493 8 365 6 1222 2 497 2 737 2 253 4 500 2 860 2 863 2 1363 2 371 2 1500 2 1501 4 868 2 1841 10 631 2 32 2 1371 6 377 4 985 2 510 6 33 2 34 2 757 2 1247 2 639 8 515 6 1108 4 1109 2 382 2 994 6 640 2 268 2 1848 12 519 2 385 2 1118 2 1630 2 160 6 164 4 1521 4 46 6 167 2 656 2 1126 2 1127 2 1128 2 892 2 171 6 1011 2 1414 4 902 6 780 4 1535 2 416 2 912 2 418 2 420 2 1423 2 671 4 1026 2 1653 2 423 2 1427 2 1027 2 1286 2 674 2 76 2 77 6 304 2 307 6 1430 2 426 8 194 6 1032 2 550 12 1293 2 1434 6 802 2 801 4 1664 2 683 4 1554 2 313 4 554 2 1890 2 810 4 315 8 1165 2 317 2 558 6 1039 6 203 2 1171 2 937 2 1447 26 1448 2 693 2 458 2 697 6 1565 4 564 2 460 2 1571 6 700 8 704 2 1684 2 944 2 1456 6 1803 6 1455 4 1054 4 470 2 1317 2 706 2 1320 48 1322 4 833 2 1460 2 583 2 1462 2 837 8 104 4 1057 2 1195 2 589 2 
1696 2 1468 6 1702 2 1474 2 1203 4 964 2 479 2 236 2 238 2 1707 2 482 4 1209 4 968 12 1214 2 1480 2 969 2 489 2 493 10 733 6 1222 2 497 2 737 2 253 4 500 2 1226 2 1500 2 1501 4 32 2 985 4 751 6 510 12 33 2 34 2 757 2 1247 4 515 6 994 6 268 2 519 2 1003 6 1521 4 46 12 1011 2 1759 6 780 4 1535 2 1534 2 297 2 1026 2 1027 2 1286 2 76 2 304 2 77 12 307 12 550 10 1032 2 1293 2 311 2 801 4 802 4 1554 2 313 4 554 2 810 4 315 10 317 2 558 6 1039 6 1565 4 564 2 1571 6 1803 8 1054 6 1317 2 1320 52 833 2 1322 4 583 2 837 10 1810 6 1057 2 104 4 1811 6 589 2 1815 4 1335 6 345 8 114 2 843 2 1339 2 601 2 1340 2 118 2 1821 8 1596 6 1085 4 365 6 133 2 860 2 863 2 862 6 371 2 1363 2 864 2 868 4 631 2 1841 8 1371 6 377 4 1619 2 639 12 1108 4 382 2 1109 2 640 2 1848 16 385 2 1118 2 1630 2 1396 2 160 12 164 4 167 2 1126 2 656 2 1127 2 1128 2 171 6 892 2 1414 4 902 6 416 2 912 2 418 2 420 2 671 4 1423 2 1653 2 423 2 1427 2 674 2 1430 2 426 10 194 6 1434 6 1664 2 683 4 1890 2 203 2 1171 2 1447 24 937 2 1448 2 693 2 697 6 458 2 460 2 700 8 1684 2 704 2 944 2 1455 4 1456 6 706 2 470 2 948 2 1460 2 1461 6 1462 2 1195 2 
171 2 313 2 1501 2 1011 2 810 4 1474 2 1039 6 377 4 479 2 564 2 1108 2 460 2 268 2 700 2 969 2 1848 4 671 2 385 2 1085 4 1427 2 493 6 365 4 1286 2 76 2 1320 4 1430 2 426 6 1460 2 737 2 1293 2 1521 2 656 2 863 2 371 2 1127 2 
345 6 1702 2 114 2 843 2 1474 2 1203 4 1339 2 479 2 8 2 969 2 851 2 493 6 365 2 250 2 1222 2 737 2 860 2 863 2 371 2 1501 2 868 3 631 2 1841 2 1615 2 1371 6 32 2 377 4 33 2 1378 2 1247 3 515 6 639 8 1108 2 382 2 268 2 1848 4 519 2 385 2 1521 2 167 2 1126 2 656 2 1127 2 171 2 892 2 894 2 1011 2 1414 4 780 2 1535 2 416 2 671 2 1026 2 1427 2 1286 2 76 2 1430 2 426 6 550 4 1293 2 801 4 802 3 683 4 1554 2 313 2 1890 2 554 2 810 4 1165 2 317 2 1039 6 1447 24 937 2 1304 2 1308 3 564 2 460 2 700 2 465 2 1684 2 704 2 1803 6 1054 4 706 2 1317 2 1320 28 1460 2 1694 2 589 2 
957 2 268 2 1427 2 
957 2 268 2 1427 2 
957 2 1815 2 345 2 1702 2 114 2 843 2 1339 2 1203 4 964 2 1076 2 965 2 479 2 236 2 966 2 610 2 1209 4 1085 4 493 12 365 6 1603 2 1222 2 133 4 253 2 860 2 863 4 1229 2 1500 2 1501 2 868 2 1841 2 631 2 1371 6 32 2 377 4 33 2 1508 2 515 6 639 2 1108 4 1109 2 268 6 1848 16 519 2 385 2 42 2 1850 2 391 2 164 2 1521 2 1125 4 167 2 1126 2 1260 2 171 4 283 2 892 2 1414 4 289 2 780 6 1535 2 416 2 906 4 912 2 418 2 420 4 1026 2 671 2 542 4 1427 4 1286 2 304 2 426 12 550 4 1293 2 926 2 311 4 801 4 683 4 1554 2 1784 2 1439 2 313 4 554 2 1890 2 810 4 315 4 1039 6 1447 16 937 2 1565 4 1047 2 700 4 1684 2 704 2 1456 2 1455 4 1803 2 706 2 1317 2 1320 24 1322 4 833 2 1192 2 837 4 104 4 589 2 
1589 2 1815 2 283 2 1841 2 1456 2 470 2 1320 4 1076 2 35 2 1508 2 1447 2 1730 2 1535 2 238 2 550 2 224 2 500 2 
957 2 345 2 1702 2 114 2 843 2 1339 2 1203 4 964 2 1076 2 479 2 236 2 966 2 610 2 1209 4 486 2 1085 4 493 12 365 6 1603 2 1222 2 133 4 253 4 860 2 863 4 255 2 1500 2 1501 2 868 4 631 2 1371 6 32 2 377 4 33 2 1727 2 1508 2 1736 2 515 6 639 2 1108 4 1109 2 268 6 1848 16 519 2 385 2 42 2 164 2 1521 2 1125 4 167 2 1126 2 1260 2 283 2 171 4 892 2 1414 4 1532 2 289 2 780 6 1535 2 416 2 906 4 912 2 418 2 420 4 1026 2 671 2 542 4 1427 4 1286 2 304 2 426 12 550 2 1293 2 926 4 311 4 801 4 683 4 1554 2 1439 2 313 4 554 2 1890 2 810 4 315 4 1039 6 1447 16 937 2 1565 4 1047 2 700 4 1684 2 704 2 1456 2 1455 4 1803 2 706 2 1317 2 1320 24 1322 4 833 2 1192 2 583 2 837 4 104 4 589 2 
957 2 1815 2 345 2 596 2 1702 2 114 2 843 2 1339 2 1203 4 964 2 1076 2 965 1 479 2 236 2 966 2 610 2 1209 4 1085 4 493 12 365 6 1603 2 1222 2 133 4 253 4 860 2 863 4 1500 2 1501 2 868 2 1841 2 631 2 1371 6 32 2 377 4 33 2 1508 2 515 6 639 2 1108 4 1109 2 268 6 1848 16 519 2 385 2 42 2 164 2 1521 2 1125 4 167 2 1126 2 1260 2 171 4 283 2 892 2 408 2 1414 4 289 2 780 6 1535 2 416 2 906 4 912 2 418 2 420 4 1026 2 671 2 542 4 186 2 1427 4 1286 2 304 2 426 12 550 4 1293 2 926 2 311 4 801 4 683 4 1554 2 1439 2 313 4 554 2 1890 2 810 4 315 4 1039 6 1447 16 937 2 1564 2 1565 4 1047 2 700 4 827 2 1684 2 704 2 1456 2 1455 4 1803 2 706 2 1317 2 1320 24 1322 4 833 2 1192 2 583 2 837 4 104 4 589 2 
2 3 958 2 962 12 7 2 965 2 9 2 10 2 12 4 13 8 16 2 18 2 20 2 22 6 976 3 977 2 24 2 25 78 26 4 980 2 27 20 981 2 30 38 31 24 982 112 32 2 985 84 33 328 988 3 987 2 36 6 991 106 992 2 993 2 38 2 39 2 40 2 41 2 1000 2 1001 80 44 2 1004 3 47 14 1007 2 1009 3 52 2 53 2 1012 2 56 3 1013 2 1014 76 58 104 1015 2 1016 3 1018 4 61 78 62 2 65 2 1025 2 67 2 1026 2 70 2 69 2 74 3 75 16 80 2 79 38 82 2 84 3 1033 4 86 3 85 2 1034 2 87 40 1036 20 88 2 91 66 93 60 1042 2 95 14 96 2 1044 5 1048 2 101 38 1051 38 1052 2 1053 8 1054 12 102 3 103 2 1055 1 1057 2 1059 2 1061 2 109 2 1063 38 1064 4 1066 6 1067 3 1068 1 113 2 114 2 1069 2 115 2 1071 2 1073 78 1074 2 119 2 120 2 1081 1 121 2 125 2 1086 2 126 78 128 2 129 2 130 26 131 8 1090 2 1094 2 137 10 1098 120 1097 80 1099 2 1100 2 138 2 142 2 143 2 144 8 146 2 147 2 150 166 1106 2 1111 4 153 4 1112 4 154 38 155 2 1114 2 156 2 1116 78 1119 2 1120 10 163 2 167 82 1126 2 168 76 170 156 1129 2 1132 2 172 2 1134 2 178 2 180 2 181 80 1135 2 1136 16 1137 2 1139 3 1140 2 1142 2 1143 2 1146 4 1147 2 1149 2 188 6 1151 2 189 2 1152 2 195 2 1155 2 1156 3 197 10 1159 2 1158 2 1160 4 1161 2 199 4 1164 2 201 2 1167 2 1169 2 1170 2 1172 2 207 2 1176 3 1174 2 209 13 210 4 211 2 1179 84 212 2 1181 2 1182 4 214 2 1183 2 219 2 1184 4 220 2 1186 10 1188 2 1187 48 1189 2 1190 14 1191 80 223 80 1193 11 1194 2 225 2 1197 38 1198 1 226 8 1199 2 1201 4 229 3 1203 480 1204 2 1206 2 239 2 1208 2 1210 2 1211 2 1214 2 242 8 243 2 246 2 1217 2 245 20 247 6 248 2 1218 2 1220 2 249 3 1221 2 1222 318 1223 2 1224 36 1225 2 1226 4 254 170 1228 14 256 4 1234 2 1235 2 257 4 1237 2 1239 2 1240 2 1241 2 262 3 1247 46 1248 12 271 12 276 22 277 558 1257 78 1258 24 280 2 281 2 282 36 1259 2 1261 38 1262 2 1264 2 285 2 1265 2 1266 2 286 2 1269 2 1270 16 291 2 293 2 296 2 1276 6 299 2 300 2 1279 2 1281 2 1282 2 1284 2 1285 2 305 80 1290 2 1289 2 308 2 310 22 1291 2 312 4 316 2 315 183 1299 4 318 2 1301 2 319 3 1303 38 1304 2 322 2 1307 2 1308 2 1311 2 326 2 1312 3 1313 2 1314 2 328 2 1316 2 329 2 1317 2 1320 1174 1323 2 1325 2 334 2 335 2 1326 3 1327 2 339 2 340 2 1328 2 341 158 1331 2 1334 2 344 38 345 18 346 2 347 2 1339 2 348 2 1342 2 351 2 1345 2 1346 3 353 8 355 6 354 2 1347 2 356 2 1348 3 358 2 1349 2 1352 10 363 8 364 2 1353 9 1354 14 1356 10 1355 2 370 2 1361 8 1362 38 1363 2 374 2 1366 2 1367 60 1369 2 1371 1116 1372 16 1373 2 378 10 379 3 1378 2 381 2 1382 2 382 2 1384 2 384 2 1385 22 1388 12 1389 1 1390 82 1391 6 1393 15 386 10 387 38 1394 2 1395 2 393 1 1396 2 392 2 394 2 1397 2 1398 3 398 2 399 32 400 3 1412 2 406 2 407 2 1414 8 1415 6 411 4 413 38 415 2 416 2 1417 2 419 15 1418 2 420 18 1420 2 422 4 1423 8 1425 2 1426 2 424 34 1428 3 425 2 427 2 429 2 431 3 432 22 1433 2 439 2 1437 78 1438 2 441 2 1440 2 1442 2 1441 6 1444 2 442 80 444 2 443 2 1445 2 448 6 449 8 1446 12 1447 966 455 78 456 2 458 8 461 60 463 2 1450 3 467 2 1453 2 1458 4 1459 76 1462 2 472 2 475 2 1466 4 1470 2 1472 2 1473 2 1475 14 1476 2 481 2 1479 18 482 46 483 2 484 2 1482 2 1484 2 491 2 1485 3 495 2 1486 38 1487 2 498 6 1489 234 1492 3 1496 2 502 2 1499 2 1503 2 1504 2 505 2 509 102 1507 52 1509 24 1510 2 514 2 1511 2 515 10 516 2 1512 2 518 2 519 2 1513 2 520 2 521 234 1514 2 1515 80 1517 1 523 2 1518 2 1519 1 1520 32 526 2 527 2 1523 3 1524 20 1525 4 1526 2 1528 2 1529 4 531 2 1533 3 1534 2 1535 2 536 1 535 4 1536 2 538 2 1541 4 541 3 543 3 1544 78 1546 2 1547 2 550 10 1549 2 551 2 1554 2 553 2 1555 2 554 2 1557 2 555 2 557 2 560 2 1558 2 561 22 562 6 1561 2 1562 1 1563 4 563 34 1569 2 1567 10 565 2 1570 10 569 2 1573 3 1574 24 1575 80 572 38 573 156 574 2 1576 2 579 3 1579 6 581 2 584 34 586 2 1583 2 588 2 589 2 591 2 1590 2 592 2 598 2 1593 156 600 2 603 18 608 2 1595 1 613 36 614 2 615 2 616 78 1598 2 618 2 1601 2 1602 3 621 2 620 2 623 2 624 14 625 38 1606 2 1607 2 628 2 1610 40 630 2 631 2 1613 3 633 2 635 2 1616 4 637 10 1617 2 1619 2 639 126 1621 10 640 8 642 2 643 2 1623 6 644 3 645 2 1625 2 647 2 648 2 650 2 1628 2 1629 2 1630 4 1633 2 653 16 1635 2 657 10 658 2 659 2 1638 3 1639 2 1641 80 662 2 665 2 1645 22 1651 7 1652 2 1653 2 673 4 672 2 1655 1 1656 20 676 2 1657 78 1659 2 1658 8 1660 78 1661 2 1664 2 682 2 683 402 684 66 1666 3 686 158 687 78 1667 4 1670 2 690 2 691 2 1672 2 694 2 1678 2 1677 8 699 80 1679 2 1681 12 702 1 701 6 704 2 1685 38 1686 38 1687 78 705 2 706 2 707 6 1689 18 1691 20 1692 2 709 6 1694 2 711 3 1696 2 712 2 1698 2 1701 2 1700 26 1702 8 714 78 715 78 1707 16 721 2 722 38 1710 2 727 2 729 2 1715 21 731 2 732 2 1718 2 1720 6 1721 2 738 2 740 2 741 12 742 2 744 2 750 3 1728 2 1729 78 1733 2 757 22 1738 2 1741 4 1740 20 763 2 767 2 769 14 1748 3 1749 4 770 4 1751 2 1753 2 1755 2 1756 10 1757 2 1761 2 777 4 780 2 784 2 1766 2 785 3 1767 61 787 2 789 2 790 2 791 124 1769 2 1771 2 793 2 794 38 795 3 797 2 1774 8 1773 80 1775 2 799 2 800 38 1778 60 802 16 801 8 1781 1 803 2 1783 2 1785 24 811 2 813 2 1786 2 814 2 1787 2 1791 10 1792 2 1793 2 818 2 1794 4 822 2 1801 24 831 18 1803 32 1805 38 1806 2 834 2 1807 2 835 2 1809 6 837 178 1813 4 1814 2 1816 4 840 2 841 2 842 2 843 2 1818 80 846 2 1819 2 847 2 1824 2 1822 2 1825 2 1827 40 1826 4 848 4 1828 2 852 1 1832 80 853 83 1833 2 1835 2 1836 2 1838 2 858 2 859 100 860 4 864 2 1839 2 866 2 1840 2 868 110 867 2 1841 2 869 6 871 10 872 2 874 2 877 2 1844 3 1847 3 1851 4 888 2 1854 2 1858 2 891 2 892 8 1861 2 894 2 895 4 1862 24 896 2 1865 6 1866 20 897 78 903 54 901 2 1869 2 907 4 1871 4 909 2 911 2 1873 2 1877 2 1875 80 918 2 1878 2 1880 2 1881 112 921 2 925 158 1884 38 1886 2 929 2 1890 2 1892 2 1894 80 1896 2 1897 2 933 2 934 2 1900 16 1903 2 937 84 940 2 1907 2 1908 2 1909 18 941 24 942 95 1913 2 946 2 947 2 1915 2 948 2 1917 2 1916 2 951 2 953 2 955 3 954 2 1918 14 
1034 2 868 2 345 2 179 2 147 2 690 2 1447 2 482 6 1247 2 639 2 382 2 1828 2 41 2 643 2 1352 2 1803 2 386 2 1054 2 1835 2 1320 2 795 2 802 2 740 2 197 4 
1034 2 868 2 345 2 179 2 147 2 690 2 1447 2 482 6 1247 2 639 2 382 2 1828 2 41 2 643 2 1352 2 1803 2 386 2 1054 2 1835 2 1320 2 795 2 802 2 740 2 197 4 
1034 2 868 2 345 2 179 2 147 2 690 2 1447 2 482 6 1247 2 639 2 382 2 1828 2 41 2 643 2 1352 2 1803 2 386 2 1054 2 1835 2 1320 2 795 2 802 2 740 2 197 4 
1524 4 27 4 1469 2 1785 3 1036 4 931 2 930 2 139 2 868 3 509 6 1616 2 1072 2 1415 2 1507 2 962 2 1416 2 603 4 562 2 1446 2 1447 4 1247 3 639 2 382 2 1276 2 1872 2 786 4 724 2 1740 4 617 2 701 2 1574 5 941 3 571 3 271 2 1388 2 1835 2 1458 2 1320 10 859 2 1809 4 
1524 4 1469 2 962 2 1415 2 1072 2 603 4 1416 2 1872 2 1276 2 786 4 724 2 617 2 1835 2 22 2 859 2 27 4 1785 2 930 2 931 2 1036 4 868 2 139 2 871 2 1616 2 509 6 1507 2 1446 2 562 2 1447 4 1247 2 639 2 382 2 1740 4 1574 4 701 2 941 2 1388 2 271 2 571 2 1458 2 1320 10 1323 2 1809 4 
1524 4 1469 2 962 2 1415 2 1072 2 603 4 1416 2 1872 2 1276 2 786 4 724 2 617 2 1835 2 22 2 859 2 27 4 1785 2 930 2 931 2 1036 4 868 2 139 2 871 2 1616 2 509 6 1507 2 1446 2 562 2 1447 4 1247 2 639 2 382 2 1740 4 1574 4 701 2 941 2 1388 2 271 2 571 2 1458 2 1320 10 1323 2 1809 4 
1524 4 1469 2 962 2 1415 2 1072 2 603 4 1416 2 1872 2 1276 2 786 4 724 2 617 2 1835 2 22 2 859 2 27 4 1785 2 930 2 931 2 1036 4 868 2 139 2 871 2 1616 2 509 6 1507 2 1446 2 562 2 1447 4 1247 2 639 2 382 2 1740 4 1574 4 701 2 941 2 1388 2 271 2 571 2 1458 2 1320 10 1323 2 1809 4 
1524 4 1469 2 962 2 1415 2 1072 2 603 4 1416 2 1872 2 1276 2 786 4 724 2 617 2 1835 2 22 4 859 2 27 4 1785 2 930 2 931 2 1036 4 868 2 139 2 871 4 1616 2 509 6 1507 2 1446 2 562 2 1447 4 1247 2 639 2 382 2 1740 4 1574 4 701 2 941 2 1388 2 271 2 571 2 1458 2 1320 10 1323 4 1809 4 
129 2 1804 2 1066 2 1743 2 1602 2 354 2 
1179 2 39 2 1854 2 1033 2 1602 2 721 2 559 2 
1893 2 843 2 117 2 1017 2 1762 2 206 2 1477 2 1207 1 1447 8 717 2 1273 1 1846 2 267 2 915 1 1910 2 492 2 1283 1 1831 1 1802 2 1255 2 1320 10 857 2 160 2 252 2 1719 2 397 2 
1160 2 1265 2 871 5 983 2 1616 2 1415 6 603 12 1446 6 562 6 1447 6 1871 2 1825 2 565 2 1180 2 1276 6 1111 2 1574 16 701 6 360 2 1388 6 271 6 247 4 363 2 1746 2 1320 6 1487 2 22 2 1323 2 498 4 1809 4 
1550 1 1524 2 1648 2 27 2 1740 2 199 2 1336 2 1471 2 175 4 221 2 1256 2 1320 1 1560 2 856 6 1447 1 1634 2 1855 2 861 2 
1524 2 1648 2 27 2 1740 2 199 4 1471 2 1336 2 175 4 221 2 1256 2 1560 2 856 6 1634 4 1855 2 861 4 
1550 1 1524 2 1648 2 27 2 1740 2 199 8 1471 8 1336 2 175 4 221 2 1256 2 1320 1 1560 2 856 10 1447 1 1634 8 1855 6 861 8 
1524 2 1648 2 27 2 1740 2 199 2 1336 2 175 2 221 2 1256 2 1560 2 856 2 1634 2 861 2 
107 10 0 4 341 16 1197 4 1699 90 1593 18 1203 112 1818 6 961 10 349 24 1073 6 714 4 233 2 965 4 715 10 239 8 240 2 722 4 616 24 14 2 1351 4 1714 4 1599 10 126 6 1715 15 853 8 1832 6 1485 2 1834 8 1222 58 1357 2 1489 84 1492 2 860 8 254 34 25 6 1097 6 1610 2 1233 4 634 6 1371 248 145 2 1726 4 33 58 1729 6 512 24 1244 4 991 42 150 50 1621 11 883 18 154 4 521 92 1515 6 1115 2 387 4 277 124 161 4 1257 6 167 14 170 36 400 4 1133 26 897 6 181 6 58 42 777 4 779 1 61 10 413 4 414 4 541 6 1419 26 791 12 1544 24 1284 8 188 4 1875 6 303 2 675 8 305 6 547 12 1657 6 1773 6 1658 7 1660 10 1432 2 84 2 925 16 1782 2 683 88 1437 6 1035 4 686 16 687 6 315 28 1894 6 442 6 446 2 319 2 937 14 1447 134 455 10 1567 8 1310 90 1044 2 462 2 1182 4 1450 2 1575 6 1682 24 942 22 572 4 1686 4 573 17 1687 10 219 8 101 4 1051 4 576 2 1805 4 708 8 1320 150 1578 2 709 4 1191 24 223 6 1193 7 
107 2 170 2 1406 2 400 2 341 4 1333 2 661 4 405 2 960 2 1592 2 1593 2 898 2 1267 2 1203 20 1818 2 961 2 349 2 290 2 61 2 965 2 715 2 235 2 1343 2 239 2 611 2 541 4 670 2 1599 2 853 6 1284 2 1028 2 1834 2 734 2 1717 2 1773 2 1031 2 1879 2 1660 2 1222 2 1777 2 1357 2 1432 2 678 2 925 4 501 4 860 2 436 2 1097 2 1782 2 1552 2 683 20 552 2 809 2 686 4 1368 2 442 2 315 38 869 4 1371 44 446 2 1726 2 33 2 451 2 1902 2 260 2 1447 44 937 2 512 2 455 2 320 2 1845 2 698 2 213 2 462 2 1622 2 1682 2 1575 2 573 2 1687 2 219 2 1626 2 1252 2 1115 2 1001 6 1320 46 277 6 331 2 1324 2 223 2 162 4 166 2 167 2 
341 10 1197 4 1337 32 1593 10 1203 44 1818 4 1073 4 963 2 233 2 5 8 606 8 235 2 715 6 239 2 722 4 357 4 126 4 1715 8 1832 4 853 6 1485 2 1222 28 1357 2 1489 24 860 2 254 30 25 4 1097 4 1368 10 1371 104 33 30 637 2 260 2 1729 4 991 16 1245 2 150 8 1110 4 154 4 521 24 1515 4 764 16 387 4 277 24 1852 8 1257 4 166 10 1006 16 167 6 170 6 897 4 58 8 181 4 777 4 61 4 413 4 1763 8 539 4 541 2 791 14 1284 2 1875 4 1657 4 1658 4 1879 2 1773 4 1660 4 1432 2 925 10 1782 2 683 36 927 2 1437 4 686 10 1556 2 687 4 315 14 1894 4 442 4 556 2 446 2 937 6 1447 70 455 4 1567 4 462 2 1182 4 1450 2 826 4 1575 4 828 4 572 4 1686 4 573 10 1687 4 219 2 101 4 1051 4 1805 4 1320 78 1578 2 331 10 709 2 1191 8 223 4 106 4 956 4 
170 2 341 6 1593 2 1203 14 1818 4 777 2 714 2 965 2 61 2 715 2 239 2 240 2 541 2 1715 6 188 2 853 4 1284 2 1773 4 1879 2 1660 2 1222 12 1357 2 1492 2 1432 2 84 2 925 6 860 2 254 6 1782 2 1097 4 683 14 686 6 315 14 442 4 1371 40 446 2 319 2 33 12 1447 26 937 2 320 2 455 2 1567 4 1621 2 462 2 1182 2 1575 4 942 10 1687 2 573 2 219 2 1115 2 576 2 1320 28 277 8 709 2 1193 2 223 4 167 2 
270 2 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 
367 1 905 1 182 1 1582 1 1023 1 972 1 

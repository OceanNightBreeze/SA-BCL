#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 819 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 453 1640 7 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.ProglangType:isArray()Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_135()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eq(FF)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:jj_3R_85()Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logDetail()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.PptSlice1:arity()I
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfo:relate_var()V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3R_54()Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_99()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:justified()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfo:has_typeof()Z
daikon.Quant:eq(II)Z
daikon.Debug:logDetail()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_97()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:eltwiseGT([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_114()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3R_115()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:union([I[I)[I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.PptName:isEnterPoint()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_96()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.InvMap:InvMap()V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfo:isDerived()Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
daikon.Quant:concat([I[I)[I
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:ne(II)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ProglangType:baseIsString()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.string.OneOfString:enabled()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_55()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3_20()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3R_81()Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_67()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([F[D)Z
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3R_73()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_56()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_137()Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Debug:logOn()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_103()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_210()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.ProglangType:isScalar()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3_19()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_107()Z
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:jj_3R_109()Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isIOAArray()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:isIntegral()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.JavaParser:jj_3R_98()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.JavaParser:jj_3_18()Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(JJ)Z
daikon.PptName:getSignature()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:isPointer()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern([J)[J
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3_21()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eq(DD)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Ppt:Ppt()V
daikon.PptSlice1:num_samples()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:slice([III)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3_14()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_29()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([S[S)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.ProglangType:isString()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_25()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_48()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfo:isPrestate()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:memberOf(F[F)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:size()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_3R_124()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_102()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:Node()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
502 2 1612 2 57 2 432 4 136 2 516 2 678 2 1127 2 799 2 
1003 2 694 2 1444 2 1341 6 223 2 64 2 1300 2 430 2 1613 6 431 2 693 6 
921 4 1507 2 130 2 836 4 1267 6 1475 6 373 2 1231 2 55 6 57 2 598 2 1302 6 136 2 
1416 2 1582 8 1386 26 1183 6 213 16 1075 6 746 4 92 2 1209 4 136 6 452 12 563 10 952 16 1454 8 666 10 1220 2 667 8 1667 4 1060 2 404 4 781 16 782 10 1067 10 383 10 57 6 338 2 1348 8 680 2 181 28 1353 2 
757 4 626 6 
865 2 
1206 2 317 2 1621 2 161 4 70 2 167 2 1531 4 218 2 1261 2 1432 2 566 2 381 4 118 2 120 2 1546 2 1371 2 1594 2 1440 2 787 2 437 2 1223 2 680 2 1443 2 1328 2 1278 2 1566 2 685 2 288 2 502 2 448 2 1025 2 911 2 136 4 540 2 1031 4 1396 2 1504 2 245 2 360 2 509 2 57 4 1245 2 808 2 707 2 
472 4 1582 6 4 2 1419 6 1386 47 1183 4 213 32 417 2 165 6 1075 4 854 4 136 4 952 32 452 22 563 6 1454 19 219 5 1395 6 21 2 1630 6 666 15 482 3 121 4 331 4 404 2 781 32 1244 8 1479 2 782 15 1512 6 993 4 383 15 1067 15 57 4 1516 4 468 2 1301 4 181 52 1353 2 
911 2 635 2 605 2 
1491 2 1645 2 1 2 120 2 96 2 702 2 1345 22 428 10 948 2 561 2 291 2 827 2 1177 2 379 2 
1599 2 1386 4 212 2 213 2 1497 2 11 2 1075 2 452 2 952 2 563 4 1454 2 72 2 1629 2 666 2 402 2 299 2 404 2 805 2 781 2 782 2 383 2 1067 2 181 6 
1630 6 755 2 666 4 331 4 1386 12 213 8 781 8 782 4 383 4 1067 4 1301 4 1209 2 452 4 952 8 181 16 1395 6 520 2 
1415 2 940 4 1644 4 1523 2 189 2 1333 4 980 2 1388 4 1446 2 560 4 687 4 1337 2 911 8 635 6 1160 2 605 2 540 4 1571 2 750 2 1189 2 1031 4 1432 2 115 10 1262 2 543 4 569 2 270 10 1401 14 1542 2 802 4 150 4 756 2 732 2 1438 2 1373 2 1091 62 1303 4 1518 2 1250 4 308 2 
1009 2 475 2 514 2 660 2 853 2 1533 2 1259 2 1186 2 865 2 521 2 
310 2 941 2 103 8 715 2 714 2 413 4 1355 3 8 2 1468 12 214 1 1358 2 602 2 947 2 825 2 1052 2 12 2 13 2 18 1 114 6 326 2 421 1 1264 1 523 2 524 4 424 4 835 2 1061 16 1270 1 837 2 1272 4 334 1 528 8 1174 2 342 2 1377 2 29 3 530 2 1597 3 1485 2 30 16 126 1 975 32 237 3 848 2 1280 2 1384 2 1495 2 132 2 349 2 447 2 856 2 1184 2 1499 2 351 1 135 2 858 2 136 32 862 24 541 2 1607 2 1399 6 871 2 144 2 251 3 252 4 460 1 364 2 461 16 1609 6 462 3 1406 2 1510 2 54 2 1612 2 1299 2 57 34 876 2 554 5 61 32 1094 2 369 1 997 4 370 2 471 4 1204 2 1414 2 557 2 558 2 1619 3 655 3 1310 24 1101 2 160 2 68 2 1315 6 773 3 1428 2 565 2 380 2 1539 2 893 12 481 2 1321 2 75 2 778 2 572 2 1543 1 1010 2 1324 2 485 2 276 2 176 2 897 2 1118 16 1441 3 1120 2 1442 2 1126 2 85 2 390 2 283 2 1227 2 394 2 583 3 499 2 582 1 287 4 191 2 1338 2 1030 2 1573 1 1140 2 507 1 1036 2 591 2 401 2 1143 2 1668 2 1146 1 1243 2 1343 2 1344 3 807 2 1148 2 1577 1 937 2 810 2 1350 2 816 8 
57 2 1596 2 
57 4 668 2 609 2 
407 2 
410 6 1253 2 820 2 0 4 411 2 2 2 412 2 3 2 414 22 416 2 1255 2 1257 4 9 6 15 6 829 2 828 54 420 6 19 4 831 12 830 224 1260 4 1263 2 422 22 832 6 23 2 1266 18 834 2 26 46 425 14 838 432 1273 204 1275 8 429 6 1276 6 438 12 1281 192 36 2 445 30 1289 6 37 32 1290 4 857 18 860 290 861 2 43 8 41 4 456 2 44 4 870 2 869 2 458 6 46 2 47 2 1295 4 872 4 873 6 49 2 52 6 1298 26 56 132 57 10 467 46 470 4 1305 6 1306 2 1309 4 63 4 474 4 477 2 65 6 885 4 480 6 71 2 74 2 890 198 892 6 894 2 80 68 896 2 487 26 82 198 488 140 83 16 898 112 899 2 490 6 1327 8 493 2 494 4 902 12 88 2 1329 2 500 2 1335 6 907 2 93 2 912 4 916 6 915 2 918 2 920 4 95 2 510 4 929 30 933 2 935 2 513 30 101 12 1356 2 944 182 945 8 515 6 1359 2 949 6 1361 2 1363 30 950 2 951 2 517 2 1365 328 953 4 954 2 522 2 117 2 961 2 964 2 965 28 526 24 1372 60 969 6 1376 2 970 2 1378 2 128 16 127 2 129 6 534 4 1383 2 535 2 978 2 979 8 1390 6 133 2 134 8 538 2 136 10 539 2 137 182 139 4 545 22 1400 2 544 2 142 2 546 26 143 4 146 2 988 4 989 8 549 30 147 10 1404 4 1408 82 155 2 552 2 1410 2 1411 18 156 2 996 60 998 106 1420 4 162 4 163 2 1421 6 164 2 559 46 166 2 1000 2 1422 20 1424 2 168 2 564 6 169 2 1431 4 1002 2 570 2 1005 8 1006 4 1007 12 571 4 1435 198 173 2 174 198 1437 6 178 4 1013 2 179 2 1015 2 1014 4 578 2 1016 2 579 8 580 4 1019 2 581 2 185 28 186 198 188 2 1023 6 1448 2 1027 10 193 6 1453 2 196 64 1032 48 197 2 1034 112 1035 2 1458 2 201 2 1459 30 1041 4 1043 2 1044 6 203 2 1461 2 205 26 597 26 1046 2 600 4 1047 2 1463 2 210 28 211 86 601 12 1469 6 1054 2 217 4 1471 4 606 2 608 12 607 4 1473 4 221 6 1062 244 617 2 226 4 1481 4 1069 12 1483 10 230 92 232 2 1486 2 1488 2 627 26 236 198 630 4 1492 2 1493 2 631 26 1496 112 239 386 241 4 240 4 242 8 1077 6 1078 14 637 2 638 8 639 20 1505 60 640 2 643 6 247 4 250 2 1509 2 1083 4 1084 6 1513 2 1085 2 1514 2 1088 2 1087 10 648 66 1089 2 1093 2 1519 30 651 2 652 88 653 2 257 8 1522 22 259 26 654 8 656 14 1098 566 1097 2 1525 50 1100 8 1526 2 1104 2 1106 2 1107 4 1108 2 264 2 661 2 663 6 1536 30 1537 160 271 30 665 2 1544 2 1115 6 669 432 1547 94 275 8 671 14 277 20 1552 10 1554 4 1116 2 278 2 1119 2 1559 2 1561 8 1125 6 281 2 1563 2 1564 118 1130 4 1131 46 682 2 285 244 684 6 289 12 1568 24 688 6 293 8 691 4 689 2 1136 2 1137 4 692 16 295 2 1574 14 696 6 1575 2 1144 6 1145 74 700 2 704 28 302 8 301 6 300 52 1576 376 1147 2 1579 28 305 70 1151 6 306 4 708 6 1581 20 1153 6 1154 20 1583 2 713 6 315 2 316 4 1585 6 320 2 1587 2 1157 4 722 6 723 6 1588 2 1589 4 1158 64 322 4 725 4 323 6 1163 2 325 4 726 2 727 2 1591 2 729 30 328 2 329 6 330 12 1165 6 1166 2 333 2 1171 336 733 2 734 4 1173 132 736 2 1595 2 336 4 737 2 339 2 340 204 341 6 343 2 346 2 1182 2 347 6 745 4 1601 4 1602 98 352 6 747 4 1187 30 354 244 356 328 359 6 358 198 1192 4 1193 2 1195 4 1611 6 1197 20 760 2 367 6 762 6 1199 46 368 2 1202 26 1614 2 1615 16 1617 2 1618 2 768 20 372 6 770 198 769 4 1208 84 772 2 1623 4 1210 12 1211 20 1213 6 377 26 1624 4 1625 192 378 4 1214 14 1215 26 1216 2 1218 4 1631 2 1636 2 1637 2 1638 4 1639 2 786 2 385 2 388 48 1641 2 788 4 1643 2 1225 6 1227 2 791 6 793 2 391 2 1228 6 1648 2 1230 2 1232 2 1233 2 1649 4 794 2 1234 106 1653 2 797 2 1656 2 798 10 398 4 1659 4 1238 6 1237 6 1661 60 801 2 1663 2 1662 2 400 112 1665 2 1666 2 803 2 804 2 1672 12 405 228 1247 2 408 4 1248 14 1675 2 813 6 814 2 1252 6 
1117 2 1330 1 183 2 889 2 
59 2 183 2 
38 2 911 2 229 2 767 2 1667 2 183 2 175 2 
1122 2 183 2 175 2 
90 2 183 2 175 2 
529 2 1642 2 889 2 
183 2 175 2 
304 2 529 2 
785 2 183 2 
776 2 529 2 889 2 
819 2 
658 2 1283 2 889 2 
450 2 492 2 889 2 
594 2 659 2 889 2 
629 2 529 2 
840 2 183 2 
624 2 282 2 
849 2 1283 2 
311 2 450 2 
594 2 111 2 
1465 2 529 2 
594 2 525 2 
262 2 450 2 
1283 2 1628 2 
1439 2 282 2 
776 2 984 2 529 2 889 2 
776 2 216 2 984 2 529 2 889 2 
1374 2 529 2 889 2 
1472 2 529 2 889 2 
483 2 1196 2 225 2 1056 2 
911 2 229 2 314 2 454 2 
911 2 229 2 767 2 314 2 353 2 454 2 
911 2 664 2 229 2 1667 2 183 2 175 2 
167 2 1578 2 
911 2 229 2 1349 2 1667 2 
94 2 450 2 
594 2 650 2 
1086 2 282 2 
505 2 1283 2 
594 2 1283 2 319 2 
594 2 1283 2 1498 2 
594 2 1402 2 1283 2 
594 2 946 2 1283 2 
911 2 796 2 800 2 332 6 1477 6 229 2 469 2 97 2 
529 2 973 2 
457 2 641 2 248 2 1528 2 1387 2 574 2 1105 2 1345 6 1286 2 1287 4 673 2 1449 2 1651 2 58 2 1055 4 27 2 971 2 1517 2 
206 2 889 2 
1442 2 
939 2 941 2 103 2 413 4 1468 8 1052 2 1362 2 13 2 114 2 523 2 524 2 423 2 424 2 963 2 1061 6 1270 2 1272 4 1174 2 1068 2 1070 4 530 4 975 6 1280 2 1384 2 349 2 1184 2 1499 2 135 2 858 2 136 26 1292 2 541 2 866 2 1399 4 871 6 144 2 1080 2 252 4 1609 2 152 2 1406 2 1612 2 54 2 57 26 1299 2 61 4 1307 2 369 2 997 4 471 2 158 2 557 2 160 2 67 4 1315 6 1319 2 887 2 1539 2 893 8 75 2 1321 2 572 2 778 2 485 2 1324 2 1010 2 276 2 176 2 900 2 1227 2 499 2 1650 2 1143 4 401 2 1350 2 817 2 
939 2 941 2 103 2 413 4 1468 8 1052 2 1362 2 13 2 114 2 523 2 524 2 423 2 424 2 1168 2 1061 6 1270 2 1272 4 1174 2 1068 2 1070 4 530 2 975 6 1280 2 1384 2 349 2 1184 2 1499 2 135 2 858 2 136 26 541 2 866 2 1399 6 871 6 144 2 1080 2 252 4 1609 2 152 2 1406 2 1612 2 54 2 57 26 1299 2 61 4 1307 2 369 2 997 4 370 2 471 2 158 2 557 2 160 2 67 4 1315 6 1319 2 1539 2 893 8 75 2 1321 2 572 2 778 2 485 2 1324 2 1010 2 276 2 176 2 897 2 900 2 1227 2 499 2 1650 2 908 2 923 2 1143 4 401 2 810 2 1350 2 817 2 
743 2 
1532 2 531 2 
1205 2 712 2 312 2 1341 2 223 2 905 2 1242 2 64 2 992 2 1082 2 393 4 1039 2 576 2 1022 2 1673 4 879 2 397 2 693 2 
208 2 1048 2 1205 2 712 2 312 2 415 6 1466 2 64 4 1315 4 1317 2 724 2 1539 2 1004 2 75 2 1322 2 223 4 274 4 1272 2 1480 4 576 2 1174 2 676 4 1178 2 1227 2 495 2 238 2 1444 2 1384 2 905 2 393 4 499 2 1022 2 1288 2 1393 2 136 6 1604 2 397 2 587 4 355 2 752 2 693 6 694 2 144 2 296 4 1341 4 252 2 1242 4 298 2 992 2 1082 2 1671 2 1039 2 1045 2 1673 4 57 12 596 2 1246 2 1613 6 1150 2 879 2 
208 2 1048 2 1205 2 712 2 312 2 415 6 1466 2 64 4 1315 4 1317 2 724 2 1003 2 1539 2 1004 2 75 2 1322 2 223 4 274 4 1272 2 1480 4 576 2 1174 2 676 4 1178 2 1227 2 495 2 238 2 1444 2 1384 2 905 2 393 4 499 2 1022 2 1288 2 1393 2 136 6 1604 2 397 2 587 4 355 2 752 2 693 4 144 2 296 4 1341 6 252 2 1242 4 298 2 992 2 1082 2 1671 2 1039 2 1045 2 1673 4 57 12 596 2 1246 2 1613 6 1150 2 879 2 
208 2 1048 2 1205 2 712 2 312 2 415 6 1466 2 64 4 1315 4 1317 2 724 2 1539 2 1004 2 75 2 1322 2 223 4 274 8 1272 2 1480 4 576 2 1174 2 430 2 676 4 1178 2 1227 2 495 2 238 2 1444 2 1384 2 905 2 393 4 499 2 1022 2 1288 2 1393 2 136 6 1604 2 397 2 587 4 355 2 752 2 693 6 144 2 296 4 1341 6 252 2 1242 4 298 2 992 2 1082 2 1671 2 1039 2 1045 2 1673 4 57 12 596 2 1246 2 1613 6 1150 2 879 2 
208 2 1048 2 1205 2 712 2 312 2 415 10 1466 2 64 4 1315 4 1317 2 724 2 1003 2 1539 2 1004 2 75 2 1322 2 223 4 274 8 1272 2 1480 4 576 2 1174 2 430 2 676 4 1178 2 1227 2 495 2 238 2 1444 2 1384 2 905 2 393 4 499 2 1022 2 1288 2 1393 2 136 6 1604 2 397 2 587 8 355 2 752 2 693 6 144 2 296 4 252 2 1341 8 1242 4 298 2 992 2 1082 2 1671 2 1039 2 1045 2 1673 4 57 12 596 2 1246 2 1613 8 1150 2 879 2 
208 2 1048 2 1205 2 712 2 312 2 415 10 1466 2 64 4 1315 4 1317 2 724 2 1539 2 1004 2 75 2 1322 2 223 4 274 8 1272 2 1480 4 576 2 1174 2 430 2 676 4 1178 2 1227 2 495 2 238 2 1444 2 1384 2 905 2 393 4 499 2 1022 2 1288 2 1393 2 136 6 1604 2 397 2 587 8 355 2 752 2 693 6 144 2 296 4 1341 6 252 2 1242 4 298 2 992 2 1082 2 1671 2 1039 2 1045 2 1673 4 57 12 596 2 1246 2 1613 6 1150 2 879 2 
208 4 1048 2 413 4 415 2 1468 4 1470 2 13 2 424 2 833 2 223 4 1061 6 1272 4 1476 6 1480 4 1274 2 1070 4 844 8 440 2 238 2 1494 6 1288 2 1499 2 858 12 1291 2 636 7 1079 6 42 2 1294 6 871 6 246 1 459 2 252 4 1082 2 463 2 57 46 61 2 879 2 62 1 471 2 1521 2 256 2 64 4 883 6 260 2 884 2 1315 6 1316 6 1317 2 1539 2 893 4 75 2 1321 2 1322 2 668 6 274 2 485 2 276 2 897 2 1555 2 676 8 495 2 496 1 498 4 683 6 905 2 499 2 501 2 693 4 296 6 1341 8 697 2 924 2 298 2 512 2 932 2 1150 2 1350 2 709 10 939 2 941 2 312 2 712 2 103 2 106 2 724 2 1364 1 114 2 523 2 958 6 524 2 1593 1 1370 2 122 1 1174 2 968 1 1596 6 1178 2 975 8 1384 2 1600 2 349 2 1391 2 1184 2 135 2 1393 2 136 24 1604 2 1605 1 355 2 752 2 1397 6 1399 6 144 2 550 2 1609 2 992 2 1406 2 152 2 1612 2 1407 2 761 6 1613 12 997 4 158 4 1205 2 556 2 160 2 1003 4 1004 2 171 4 572 2 780 7 576 2 176 2 783 2 1017 2 184 2 1227 2 1444 4 393 4 1020 2 1022 2 1650 2 395 6 1655 2 585 2 397 2 588 6 1455 2 1456 6 1242 4 1671 2 1039 2 1045 4 1673 4 596 2 1674 1 1246 2 407 6 810 2 
939 2 208 4 1048 2 941 2 103 2 712 2 312 2 413 4 415 2 106 2 1468 8 1470 2 724 2 13 2 114 2 958 6 523 2 524 4 833 2 424 4 223 4 1061 6 1370 2 1476 6 1272 4 1480 4 1274 2 1174 2 430 4 1070 4 1596 6 1178 2 844 8 345 2 975 8 440 2 238 2 1494 6 1181 2 1600 2 1384 2 1391 2 349 2 1288 2 1499 2 1184 2 858 12 135 2 1291 2 1393 2 136 26 1604 2 355 2 42 2 1079 6 752 2 1294 6 1397 6 871 6 1399 6 144 2 459 2 252 4 550 2 1609 2 463 2 992 2 1082 2 152 2 1406 2 1407 2 1612 2 761 6 57 48 1613 12 61 2 879 2 997 4 158 4 471 4 256 2 1521 2 556 2 1205 2 260 2 883 6 160 2 64 4 884 2 1315 6 1316 6 1317 2 1539 2 1004 2 893 8 171 4 1321 2 75 2 572 2 1322 2 668 6 274 6 485 2 276 2 576 2 176 2 783 2 897 2 1555 2 1017 2 676 8 184 2 495 2 1227 2 1444 4 498 4 683 6 905 2 393 4 1020 2 499 2 501 2 1650 2 1022 2 395 6 1655 2 585 2 397 2 588 6 1455 2 693 8 1456 6 296 6 697 2 1341 8 1143 2 924 2 1242 4 298 2 1671 2 1039 2 512 2 1045 4 1673 4 596 2 932 2 407 6 1246 2 1150 2 810 2 1350 2 709 10 
939 2 208 4 1048 2 941 2 103 2 712 2 312 2 413 4 415 6 106 2 1468 8 1470 2 724 2 13 2 114 2 958 6 523 2 524 4 833 2 424 4 223 4 1061 6 1370 2 1476 6 1272 4 1480 4 1274 2 1174 2 430 4 1070 4 1596 6 1178 2 844 8 345 2 975 8 440 2 238 2 1494 6 1181 2 1600 2 1384 2 1391 2 349 2 1288 2 1499 2 1184 2 858 12 135 2 1291 2 1393 2 136 26 1604 2 355 2 42 2 1079 6 752 2 1294 6 1397 6 871 6 1399 6 144 2 459 2 252 4 550 2 1609 2 463 2 992 2 1082 2 152 2 1406 2 1407 2 1612 2 761 6 57 48 1613 12 61 2 879 2 997 4 158 4 471 4 256 2 1521 2 556 2 1205 2 260 2 883 6 160 2 64 4 884 2 1315 6 1316 6 1317 2 1539 2 1004 2 893 8 171 4 1321 2 75 2 1322 2 572 2 668 6 274 6 485 2 276 2 576 2 176 2 783 2 897 2 1555 2 1017 2 676 8 184 2 495 2 1227 2 1444 4 498 4 683 6 905 2 393 4 1020 2 499 2 501 2 1650 2 1022 2 395 6 1655 2 585 2 397 2 588 6 587 4 1455 2 693 8 1456 6 296 6 697 2 1341 8 1143 2 924 2 1242 4 298 2 1671 2 1039 2 512 2 1045 4 1673 4 596 2 932 2 407 6 1246 2 1150 2 810 2 1350 2 709 10 
208 4 1048 2 413 4 415 6 1468 10 1470 2 13 2 833 2 424 4 223 4 1061 8 1272 4 1271 2 1476 6 1480 4 1274 2 430 4 1070 6 844 8 440 2 238 2 33 2 1494 6 1288 2 1499 2 858 10 1291 2 451 6 455 6 1079 12 42 2 1294 6 871 8 459 2 252 4 1082 2 463 2 464 6 57 52 61 4 879 2 471 4 1521 2 256 2 260 2 64 4 883 6 1314 2 1315 6 1316 12 1317 2 1538 6 1539 2 893 10 1541 6 75 2 1321 2 1322 2 668 12 274 6 485 2 276 2 897 2 1555 2 676 8 495 2 498 4 683 6 1331 2 905 2 499 2 501 2 693 10 694 2 296 6 1341 10 697 2 1143 2 924 2 298 2 512 2 932 2 1150 2 1350 2 709 8 939 4 941 2 312 2 712 2 103 4 106 2 724 2 114 4 523 2 958 6 524 4 1370 2 527 2 1174 2 1175 2 1596 12 1178 2 740 6 345 2 975 12 1181 2 1384 2 1600 2 349 2 1391 2 1184 2 135 2 1393 2 136 24 983 6 1604 2 355 2 752 2 1397 6 1399 6 144 2 1405 6 550 2 1609 4 992 2 1406 2 152 2 1612 2 1407 2 761 6 1613 16 997 4 158 4 1205 2 556 2 160 2 1003 2 1004 2 171 4 572 2 576 2 176 2 783 2 1017 2 387 2 1224 2 184 2 1227 2 1444 4 1646 6 393 4 1020 2 1022 2 1650 2 395 6 1655 2 585 2 397 2 587 4 588 12 1455 2 1456 6 1242 4 1671 2 1039 2 1045 4 1673 4 596 2 1246 2 407 12 810 2 
495 2 1205 2 1048 2 1444 2 312 2 415 4 64 4 393 2 1022 2 1317 2 1393 2 1604 2 397 2 355 2 587 4 752 2 693 6 296 2 1322 2 1341 6 223 4 298 2 274 6 1082 2 1671 2 1480 2 1039 2 57 4 1673 2 596 2 1613 4 430 2 676 2 1178 2 879 2 
1048 2 941 2 312 2 413 4 415 2 13 2 114 3 523 2 1474 2 223 4 1061 6 1272 4 837 2 1480 2 1174 2 227 2 430 2 1070 4 1178 2 975 8 1384 2 1288 2 349 2 1184 2 1499 2 135 2 858 4 1393 2 136 24 1604 2 355 2 752 2 1399 6 871 6 144 2 252 4 1403 2 1609 3 1082 2 152 2 1406 2 1612 2 57 28 876 2 1613 4 61 3 879 2 997 4 158 2 1205 2 64 4 160 2 884 2 1315 6 1317 2 1539 2 568 2 75 2 1322 2 572 2 274 6 485 2 276 2 176 2 897 2 577 2 676 2 1442 2 1227 2 495 2 1444 2 393 2 499 2 1650 2 1022 2 1026 3 397 2 693 6 296 2 1341 6 298 2 1671 2 1039 2 1673 2 596 2 937 2 810 2 1350 2 709 2 
208 2 1048 2 1205 2 712 2 312 2 415 10 1466 2 64 4 1315 4 1317 2 724 2 1539 2 1004 2 75 2 1322 2 223 4 274 8 1272 2 1480 4 576 2 1174 2 430 2 676 4 1178 2 1227 2 495 2 238 2 1444 2 1384 2 905 2 393 4 499 2 1022 2 1288 2 1393 2 136 6 1604 2 397 2 587 8 355 2 752 2 693 6 144 2 296 4 1341 6 252 2 1242 4 298 2 992 2 1082 2 1671 2 1039 2 1045 2 1673 4 57 12 596 2 1246 2 1613 6 1150 2 879 2 
208 2 1048 2 1205 2 712 2 312 2 415 10 64 4 1315 4 1317 2 724 2 324 2 1539 2 1004 2 75 2 1322 2 223 4 274 8 1632 2 1272 2 1480 4 576 2 1174 2 430 2 676 4 1178 2 1227 2 439 4 495 2 238 2 1444 2 1384 2 905 2 393 4 499 2 1022 2 1288 2 1393 2 136 6 1604 2 397 2 587 8 752 2 693 8 694 2 144 2 296 4 252 2 1341 6 1242 4 298 2 992 2 1082 2 1671 2 1039 2 1045 2 1673 4 57 12 596 2 1246 2 1613 8 1150 2 879 2 
596 2 1322 2 519 2 
596 2 1322 2 519 2 
208 4 941 2 712 2 413 4 415 6 1256 2 1468 4 1362 4 519 2 113 4 523 2 524 4 424 4 223 4 1061 2 1272 4 618 2 967 2 1480 2 1174 2 430 4 530 2 235 2 975 2 440 2 238 2 1384 2 537 2 349 2 1184 2 1499 2 135 2 858 4 1603 2 1393 2 136 16 751 2 1502 2 1399 6 871 2 144 2 1608 2 252 4 50 4 1082 2 152 2 1406 2 1612 2 57 24 1198 2 1613 16 61 2 997 4 471 4 158 6 556 2 473 2 160 2 64 4 1315 6 1003 4 1539 2 893 4 171 2 1321 4 75 2 1322 6 572 2 274 6 485 2 276 2 576 2 1549 2 176 2 897 2 676 4 279 2 1227 2 1444 4 903 2 498 2 286 2 393 2 499 2 501 2 1650 2 397 4 587 4 693 12 1456 2 694 4 296 4 695 2 297 2 1341 12 1242 4 298 2 1039 2 1045 2 1673 2 596 4 1246 2 1150 2 810 2 1350 2 709 2 
171 2 1608 2 833 2 905 2 1549 2 1622 2 1174 2 57 4 858 2 136 2 1152 2 709 2 531 2 1455 2 235 2 1456 2 170 2 
208 4 941 2 712 2 413 4 415 6 1468 4 1360 2 1362 4 519 2 113 4 523 2 524 4 424 4 223 4 1061 2 1272 4 967 2 1480 2 1174 2 430 4 235 2 975 2 440 2 238 2 1384 2 537 2 349 2 1184 2 1499 2 135 2 858 2 1603 2 244 2 1393 2 136 16 751 2 1502 2 1399 6 871 2 144 2 1608 2 252 4 50 4 1082 2 152 2 1406 2 1612 2 57 24 1198 4 1613 16 253 2 61 4 997 4 471 4 158 6 556 2 473 2 1312 2 160 2 64 4 1315 6 1003 4 1539 2 1004 2 893 4 1321 4 75 2 1322 6 572 2 274 6 485 2 276 2 576 2 1549 2 176 2 897 2 676 4 1227 2 1444 4 903 2 498 2 286 2 393 2 499 2 501 2 1650 2 397 4 587 4 693 12 1456 2 694 4 296 4 297 2 1341 12 1242 4 298 2 1039 2 1045 4 1673 2 596 4 1246 2 1150 2 810 2 1580 2 1350 2 
208 4 941 2 712 2 413 4 415 6 1468 4 604 2 1362 4 519 2 113 4 523 2 524 4 424 4 223 4 1061 2 1272 4 967 2 1480 2 1174 2 430 4 530 1 235 2 975 2 440 2 238 2 1384 2 537 2 349 2 1184 2 1499 2 135 2 858 4 1603 2 1393 2 136 16 751 2 1502 2 1399 6 871 2 144 2 1608 2 252 4 50 4 1082 2 152 2 1406 2 1612 2 57 24 1198 2 1613 16 1092 2 1304 2 61 2 997 4 471 4 158 6 556 2 473 2 160 2 64 4 1315 6 662 2 1003 4 1539 2 1004 2 893 4 171 2 1321 4 75 2 1322 6 572 2 274 6 485 2 276 2 576 2 1549 2 176 2 897 2 676 4 1227 2 1444 4 903 2 498 2 286 2 393 2 499 2 501 2 1650 2 397 4 587 4 693 12 1456 2 694 4 296 4 297 2 1341 12 698 2 1242 4 298 2 1039 2 1045 4 1673 2 596 4 1246 2 1150 2 810 2 1350 2 709 2 
822 18 413 200 1254 2 6 2 4 4 5 4 7 2 10 2 417 2 418 2 1258 32 12 2 13 2 14 2 16 2 17 3 22 2 1265 10 423 2 1268 2 835 2 1269 1 1270 2 1271 2 1272 6 839 2 1274 2 841 2 433 2 435 8 842 74 29 2 843 2 30 48 1277 2 1279 18 845 2 846 24 847 32 31 18 441 18 442 2 444 2 443 14 33 2 34 2 851 10 1282 2 852 2 1284 2 855 2 446 18 856 2 447 2 858 4 449 2 1291 2 39 1 862 12 453 2 452 10 866 2 867 4 868 2 1293 2 871 14 45 2 459 2 461 14 874 2 1296 10 462 2 1297 2 53 12 465 2 875 2 57 512 60 44 1301 4 877 46 61 58 1307 2 1310 12 881 20 1311 2 476 1 882 32 1313 14 69 4 1314 4 1315 8 73 4 1319 2 1320 10 891 14 893 99 481 2 75 2 1321 10 1323 64 77 2 484 4 78 2 79 18 895 2 485 36 486 2 81 2 897 130 1325 2 489 2 491 18 901 2 84 84 900 48 87 18 497 6 89 2 904 2 1331 2 499 2 503 2 909 30 1336 32 910 72 1338 2 504 2 913 18 506 2 914 2 1339 2 917 102 919 2 1340 8 922 2 924 2 925 2 926 2 927 2 1343 2 928 2 930 32 1346 8 1347 2 931 2 936 18 934 2 1350 2 98 32 1351 32 100 4 938 2 1352 2 1353 2 939 46 102 2 1354 2 942 2 940 2 941 4 103 52 105 2 943 2 106 4 1357 32 107 20 947 2 109 2 952 12 110 2 112 1 518 2 1366 2 955 2 114 16 1367 2 116 2 523 2 959 84 121 4 962 32 966 2 527 2 528 12 123 232 1375 6 1377 2 972 46 530 1 124 3 532 2 1380 4 974 2 975 76 1382 2 976 30 1384 2 1385 2 131 4 1386 18 977 2 1388 2 1391 2 982 2 1392 2 135 2 136 410 1394 2 138 2 542 2 1395 6 140 32 1398 32 985 4 141 4 987 32 1399 460 144 2 145 4 548 2 148 4 1403 2 149 2 550 2 991 14 150 2 151 2 1406 2 153 2 154 2 994 4 553 18 995 3 1412 2 997 168 158 2 1414 2 1417 1 159 2 1418 42 160 2 560 2 1423 32 1426 7 1428 2 1001 2 562 2 1430 33 567 4 568 2 1008 16 1434 2 572 2 1436 2 573 14 1011 14 575 2 176 2 177 2 577 2 1012 3 180 2 1018 2 181 24 182 18 184 4 187 2 190 2 583 2 1021 18 1447 32 1445 2 584 32 1024 14 1451 16 1026 2 192 2 1452 2 585 4 1454 6 1029 2 195 32 586 24 1030 2 1033 4 589 1 198 2 199 2 590 4 200 2 1036 2 1037 2 592 2 1038 2 593 2 1460 2 1040 2 202 18 595 2 599 32 1462 2 207 2 1464 2 213 12 1468 96 1049 20 1050 64 603 2 602 2 1051 2 1470 2 219 6 1057 64 220 20 1058 2 612 20 1059 2 613 12 222 32 614 2 615 2 616 2 1061 24 1478 1 1065 18 1066 2 1067 6 619 3 1068 2 227 2 620 2 621 14 1070 12 1482 2 1484 10 233 2 1487 14 625 2 1489 2 1071 2 237 2 628 2 1490 4 1073 4 1495 2 1074 2 632 6 1076 2 633 2 1500 14 1499 8 243 32 1501 18 1503 3 642 4 1080 2 249 4 251 2 252 6 1081 2 644 2 645 2 646 16 1515 2 254 32 1095 2 255 6 1520 1 1096 2 258 32 1524 2 655 2 1099 2 657 2 1101 2 1103 4 1102 2 1527 2 1529 20 261 32 1530 4 265 2 1109 2 266 46 1535 13 267 2 1534 26 1110 32 1540 2 1112 16 1113 2 1539 2 666 6 1114 2 1545 4 273 16 670 10 276 36 672 32 1548 2 1551 1 1553 2 674 4 1118 26 675 2 1557 2 1560 2 1121 2 1124 32 1128 2 1126 2 280 32 1129 1 1565 2 1132 4 287 4 686 16 1133 62 1567 2 290 3 1569 55 1570 4 1138 2 1572 2 294 44 1139 4 1140 2 699 18 701 4 703 2 705 3 706 4 1148 2 303 2 307 64 710 4 309 20 310 2 711 3 1582 6 1584 2 715 2 714 2 716 18 717 32 718 2 1586 2 719 24 318 12 720 2 321 64 1159 3 1161 2 1162 2 326 2 1164 4 1592 2 730 46 1167 2 1169 8 1170 2 1172 14 334 2 735 18 335 2 1175 2 1174 2 1176 14 739 2 738 20 1597 2 741 48 344 32 1598 2 742 3 1180 2 744 2 1600 2 1183 4 348 22 349 2 1184 2 350 6 748 2 749 2 1188 3 1190 2 357 2 753 14 1607 2 754 2 361 4 362 3 364 2 1194 2 1609 46 1610 2 1612 8 366 8 763 2 764 14 369 2 1204 2 371 44 1619 2 766 2 1620 2 1207 4 771 32 374 2 773 2 774 10 1626 2 1627 2 380 2 1219 18 1633 2 1634 64 1221 2 781 12 1635 2 782 6 382 2 383 6 784 14 384 2 1222 2 386 2 1640 2 387 2 789 32 389 2 1226 2 790 48 1227 2 390 2 792 4 1647 2 1229 62 394 2 1650 2 795 14 1652 4 1654 2 1655 2 396 2 1657 10 1235 32 1236 2 1658 16 399 2 1664 2 802 2 1239 24 1240 18 1669 2 1243 2 1244 8 806 2 406 6 811 2 409 3 810 130 812 28 816 12 817 2 
975 2 628 2 939 6 503 2 13 2 192 2 136 2 114 2 871 2 1609 2 1061 2 1296 4 670 2 1221 2 57 2 1012 2 763 2 489 2 1070 2 675 2 1484 2 61 2 1203 2 901 2 
975 2 628 2 939 6 503 2 13 2 192 2 136 2 114 2 871 2 1609 2 1061 2 1296 4 670 2 1221 2 57 2 1012 2 763 2 489 2 1070 2 675 2 1484 2 61 2 1203 2 901 2 
975 2 628 2 939 6 503 2 13 2 192 2 136 2 114 2 871 2 1609 2 1061 2 1296 4 670 2 1221 2 57 2 1012 2 763 2 489 2 1070 2 675 2 1484 2 61 2 1203 2 901 2 
209 2 975 2 1381 2 1582 4 881 4 1132 2 1386 4 1183 2 479 2 318 2 213 2 981 2 107 4 1427 2 13 2 136 4 952 2 586 3 917 6 612 4 666 2 1241 2 1609 3 403 2 781 2 782 2 383 2 1067 2 57 10 337 2 1118 2 1201 3 878 4 61 3 181 6 30 2 846 3 309 4 1308 2 901 2 
209 2 1582 4 881 4 213 2 318 2 479 2 107 4 13 2 1427 2 952 2 612 4 666 2 781 2 782 2 1067 2 383 2 337 2 1118 2 181 4 30 2 846 2 901 2 975 2 1381 2 1132 2 1386 4 1183 2 981 2 136 4 452 2 1454 2 586 2 917 6 1241 2 1609 2 403 2 57 10 1201 2 61 2 878 4 1353 2 1308 2 309 4 
209 2 1582 4 881 4 213 2 318 2 479 2 107 4 13 2 1427 2 952 2 612 4 666 2 781 2 782 2 1067 2 383 2 337 2 1118 2 181 4 30 2 846 2 901 2 975 2 1381 2 1132 2 1386 4 1183 2 981 2 136 4 452 2 1454 2 586 2 917 6 1241 2 1609 2 403 2 57 10 1201 2 61 2 878 4 1353 2 1308 2 309 4 
209 2 1582 4 881 4 213 2 318 2 479 2 107 4 13 2 1427 2 952 2 612 4 666 2 781 2 782 2 1067 2 383 2 337 2 1118 2 181 4 30 2 846 2 901 2 975 2 1381 2 1132 2 1386 4 1183 2 981 2 136 4 452 2 1454 2 586 2 917 6 1241 2 1609 2 403 2 57 10 1201 2 61 2 878 4 1353 2 1308 2 309 4 
209 2 1582 4 881 4 213 2 318 2 479 2 107 4 13 2 1427 2 952 2 612 4 666 2 781 2 782 2 1067 2 383 2 337 2 1118 2 181 4 30 2 846 2 901 2 975 2 1381 2 1132 2 1386 4 1183 2 981 2 136 4 452 4 1454 4 586 2 917 6 1241 2 1609 2 403 2 57 10 1201 2 61 2 878 4 1353 4 1308 2 309 4 
551 2 25 2 1326 2 40 2 710 2 1334 2 
826 2 25 2 1556 2 1179 2 1379 2 1548 2 900 2 
818 2 104 2 1155 1 1450 2 859 2 1212 2 376 2 136 8 1429 2 690 2 1079 2 956 2 269 2 1111 2 144 2 1142 1 172 1 731 2 1550 2 647 2 57 10 204 2 1373 1 1149 2 434 2 308 1 
1582 4 1099 2 1386 12 1183 2 213 6 449 2 136 6 952 6 452 5 1454 2 219 4 1395 4 1660 2 1191 2 360 2 666 6 121 2 1244 2 781 6 782 6 1371 2 1067 6 383 6 57 6 1301 2 841 2 1560 2 181 16 100 2 1353 2 
612 2 313 1 779 2 1332 2 1063 2 1530 2 107 2 1285 2 634 2 466 2 57 1 1185 2 419 6 809 2 136 1 436 4 125 2 309 2 
612 2 779 2 1332 2 1063 2 1530 4 107 2 1285 2 634 4 466 2 1185 4 419 6 809 2 436 4 125 2 309 2 
612 2 313 1 779 8 1332 6 1063 2 1530 8 107 2 1285 2 634 8 466 2 57 1 1185 8 419 10 809 2 136 1 436 4 125 2 309 2 
612 2 1063 2 1530 2 107 2 1285 2 634 2 466 2 1185 2 419 2 809 2 436 2 125 2 309 2 
941 2 821 2 413 44 717 4 1156 4 1586 2 1357 4 1050 10 321 6 1258 4 1590 10 955 2 1368 2 1057 10 957 4 959 24 222 4 960 8 962 4 1478 2 426 16 427 2 123 24 228 2 1176 4 621 4 622 4 1375 4 842 30 530 2 1277 2 344 6 847 4 32 2 533 2 443 4 536 4 1389 10 632 5 1076 4 243 4 136 70 1606 4 140 4 753 4 1398 4 1399 102 987 4 991 4 758 4 57 78 649 2 997 36 1616 16 258 4 1418 14 476 2 999 2 66 2 261 4 1313 4 771 8 263 2 1423 4 1425 2 1535 8 1430 6 1110 4 1217 8 893 16 777 2 1323 10 573 4 485 6 1011 4 276 6 1634 10 382 2 1551 2 784 4 897 28 677 2 1124 4 280 4 84 24 789 4 1129 4 1447 8 1336 4 795 4 584 4 910 8 1028 2 1134 32 1235 4 195 4 1457 1 1141 2 508 8 1342 4 593 4 930 4 810 26 1249 8 599 4 307 11 815 2 1351 16 98 4 1251 10 
1520 2 941 2 258 4 1417 2 413 14 717 4 1586 2 1357 4 263 2 1050 6 1425 2 321 2 1426 2 1430 4 1535 6 955 2 1110 4 1057 6 893 14 1323 6 962 4 1269 2 485 2 1064 2 276 2 1634 2 382 2 123 8 897 12 228 2 1375 4 842 6 530 2 1124 2 1277 2 741 2 847 2 344 2 1129 2 32 2 533 2 35 2 1076 2 1569 10 136 26 195 2 986 2 1399 40 148 2 48 2 593 2 930 4 57 28 810 12 649 2 307 2 98 2 997 14 255 2 
941 8 717 6 413 112 1586 4 1357 6 824 4 721 90 1050 16 1053 24 321 36 1258 6 1159 2 955 8 1057 16 610 24 728 4 327 8 1369 12 24 26 959 84 222 6 962 6 1269 2 1064 2 1478 4 123 124 427 2 1176 4 621 4 1375 8 231 2 842 34 623 10 530 4 1277 8 1279 2 234 24 741 4 344 10 847 10 32 2 533 2 443 4 35 2 632 5 1076 4 243 6 136 134 864 4 863 2 140 6 753 4 1398 6 1399 248 986 2 987 6 1506 8 148 4 991 4 759 8 57 150 1200 4 649 2 157 26 555 4 254 24 997 88 255 11 1520 2 880 4 258 6 1417 2 1418 12 476 2 882 6 478 2 261 6 1313 4 771 24 263 2 1423 6 1425 2 1426 7 775 6 1430 8 1535 15 1110 6 1433 90 893 28 777 2 272 4 1323 16 573 4 485 14 1011 4 276 14 1634 18 672 24 382 8 1551 2 784 4 897 58 1124 10 1562 18 280 6 84 92 789 6 86 4 1129 6 906 4 392 10 1447 42 1336 6 795 4 584 6 910 50 1569 22 195 10 1235 6 593 4 511 10 930 6 810 58 599 6 307 16 98 10 1351 42 
941 2 258 2 413 20 717 2 823 2 999 2 1357 2 108 2 263 2 215 2 1050 4 1053 2 1425 2 321 2 375 2 268 2 1430 6 1590 2 1318 4 955 2 1110 2 888 2 1057 4 610 2 20 2 611 2 893 36 76 2 119 2 1323 4 962 2 1064 2 485 2 276 2 1634 2 382 2 123 6 897 6 228 2 28 2 1558 4 623 2 972 6 530 2 679 2 1124 2 1123 2 681 2 1277 2 234 2 344 2 847 2 1129 2 86 2 1072 2 32 2 792 4 533 2 850 2 392 2 1389 2 91 2 136 44 292 2 1135 2 194 2 195 2 1399 48 1506 2 1141 2 48 2 990 2 363 2 1508 2 511 2 51 2 365 4 1511 2 930 2 1042 2 57 46 1409 2 1090 2 810 6 649 2 765 2 307 2 98 2 1251 2 997 20 1413 2 
284 2 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 
886 1 547 1 224 1 1467 1 1670 1 99 1 

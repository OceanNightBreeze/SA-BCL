#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 754 1044 964 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 1219 607 1008 598 436 466 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1219 607 1008 598 436 466 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 1219 607 1008 598 436 466 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 1219 607 1008 95 1029 598 436 466 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptSlice1:arity()I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:slice([III)[I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice1:num_samples()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3_17()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_105()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_56()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3_12()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptName:getFullClassName()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_114()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_135()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_89()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3_15()Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap:size()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_21()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Debug:logDetail()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:RootNode()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:memberOf(D[F)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_107()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String; | RETURN | 29320 | return null
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_20()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice2:arity()I
daikon.VarInfo:relate_var()V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptName:isEnterPoint()Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3_5()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:sum([D)D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_169()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaCharStream:BeginToken()C
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_163()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_30()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.Intern:intern([I)[I
utilMDE.Intern:intern([D)[D
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:lexLT([I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:sameLength([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3_27()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:eltsGTE([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:jj_3R_109()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3_19()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:union([I[I)[I
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_14()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:eltsLT([II)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
utilMDE.Intern:intern([J)[J
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_2_1(I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:subsetOf([J[J)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_121()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_162()Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:setEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_69()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_85()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.Invariants:Invariants()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_115()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:eq(II)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:passes()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(DD)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:concat([I[I)[I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ValueTuple:size()I
jtb.JavaCharStream:backup(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:sum([I)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_2_13(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_88()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3_4()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3_36()Z
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:isFloat()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.Invariant:prob_or(DD)D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_67()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.Node:Node()V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:lt(II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:gte(II)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.InvMap:InvMap()V
daikon.Quant:eq(FF)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:setDiff([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3_25()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:subsetOf([D[F)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_137()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3_3()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:eq(JJ)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:numIntArrays()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_2_16(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3R_73()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:logOn()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_100()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:sign(I)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_149()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_126()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:justified()Z
daikon.ModBitTracker:num_vars()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_35()Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eltwiseGT([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_22()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
699 2 902 2 318 2 424 4 1149 2 280 2 1210 2 148 2 377 2 
271 2 506 2 390 2 1273 6 897 2 86 2 536 6 189 2 1323 2 1075 6 1054 2 
262 6 916 4 1149 2 1184 2 300 2 122 2 634 6 923 6 924 6 796 4 148 2 13 2 117 2 
244 10 489 6 957 4 246 10 1149 6 959 8 228 10 988 26 84 2 890 2 148 6 370 29 1137 16 1383 2 679 4 289 16 66 8 460 10 357 4 387 2 389 12 1081 8 1267 4 563 10 137 2 487 2 222 8 326 6 1065 2 542 16 
1243 6 1094 4 
1178 2 
244 4 1148 2 246 2 228 2 376 2 1238 2 350 2 988 4 793 2 657 2 370 6 503 2 1137 2 1014 2 289 2 460 2 66 2 389 2 1267 2 563 2 326 2 157 2 542 2 
370 14 957 2 480 4 614 6 1137 8 246 4 1385 6 289 8 460 4 445 2 228 4 389 5 988 12 563 4 486 4 869 2 542 8 
1191 2 641 2 1257 2 958 2 349 4 766 4 908 2 775 2 1295 2 866 10 1032 62 1199 4 653 2 430 4 14 4 726 2 1382 2 404 2 1246 2 132 2 949 2 461 14 1227 2 876 2 1162 4 41 2 134 8 1336 4 21 4 392 2 808 4 1209 2 565 4 760 6 590 4 1254 4 980 2 311 4 1319 10 956 2 
1030 2 819 2 1101 2 996 2 1178 2 893 2 463 2 711 2 568 2 293 2 
1255 2 902 2 695 2 98 2 51 2 187 2 698 2 989 2 1172 2 60 2 652 2 148 4 779 2 14 2 355 2 601 2 1364 2 604 2 238 2 710 2 565 4 881 2 294 2 1236 4 958 2 1375 2 1149 4 1045 2 247 2 80 2 302 2 250 2 1240 2 890 2 1012 2 403 2 629 4 1247 2 630 2 858 4 134 2 978 2 272 2 899 2 
838 6 244 6 489 4 1025 2 614 6 277 2 1067 4 246 16 1149 4 959 6 228 16 988 48 167 4 123 8 148 4 127 2 370 55 480 4 519 6 1137 32 1159 2 1385 6 289 32 460 16 66 18 410 2 176 6 389 22 1267 2 563 16 1368 4 1083 4 1338 6 486 4 137 2 326 4 542 32 327 4 276 2 
134 2 760 2 876 2 
1117 2 1160 2 999 2 443 2 408 22 302 2 1277 2 648 2 745 2 47 2 231 10 353 2 951 2 1379 2 
939 6 183 3 418 2 1027 3 6 2 420 2 8 2 512 4 1296 2 1126 2 351 24 1219 4 1220 2 1298 1 700 2 425 2 280 2 776 2 1305 2 194 2 1037 2 1134 6 517 2 599 2 108 4 433 1 603 2 112 2 708 3 114 2 115 1 204 2 607 4 206 1 25 2 1146 1 610 2 1149 34 362 2 211 2 1048 2 1153 1 885 2 619 1 886 2 622 2 795 1 124 1 1241 2 307 2 125 2 216 2 1325 4 217 2 891 2 798 2 799 2 627 3 36 2 729 12 129 6 37 1 457 1 975 2 1331 12 804 3 1056 1 462 2 40 2 977 4 894 16 734 2 1335 2 633 4 735 16 736 1 1164 2 373 2 1165 3 1337 2 48 16 814 32 640 2 225 2 472 6 1169 2 53 2 743 2 645 2 1353 2 994 3 746 2 654 2 748 2 148 32 1260 2 822 2 1079 1 560 5 1365 2 324 2 562 2 832 2 1371 2 240 1 1086 8 158 2 159 2 1373 3 1005 1 1272 2 77 4 1093 2 841 16 1195 24 332 8 844 3 79 2 1096 32 397 2 399 2 674 2 1280 2 89 2 257 2 499 2 853 2 259 8 500 3 260 2 767 2 263 2 855 2 344 2 1283 2 264 2 405 3 681 2 92 3 586 2 1018 2 684 2 1208 2 345 2 685 2 1390 2 275 2 1213 1 1022 2 
860 2 
286 2 1149 2 
839 2 1149 4 1123 2 
1 6 1024 14 2 6 3 2 693 2 692 22 694 2 5 2 1031 2 11 2 12 2 1033 2 702 2 1035 198 16 2 703 244 18 46 704 2 356 2 705 4 20 94 709 60 359 4 1039 6 712 6 23 16 1041 2 715 12 24 50 717 2 718 30 26 2 27 2 31 132 1047 4 366 12 33 4 722 2 723 12 1051 432 1053 8 1052 2 725 4 368 4 727 2 35 4 730 2 38 2 732 6 39 4 733 30 371 12 1057 192 1059 6 1058 12 42 2 1063 2 45 4 1064 6 737 2 49 2 1069 2 375 18 52 2 54 2 742 8 741 2 1072 328 58 106 379 4 744 20 380 4 747 2 61 4 749 6 1076 2 750 328 751 4 383 14 384 2 1078 2 385 2 386 566 67 2 388 4 69 6 68 290 71 4 391 4 1084 6 393 2 73 2 74 4 75 32 394 6 1087 26 762 26 395 2 1091 98 396 4 1098 30 83 2 1099 4 398 24 87 2 85 2 400 2 1103 60 402 2 91 84 1104 2 1106 2 407 2 406 6 770 228 1107 4 1108 6 771 6 1109 2 1111 2 1112 132 416 6 96 10 1115 24 1114 2 1116 6 774 2 1119 2 97 2 1121 64 1125 2 101 8 1128 4 102 20 1129 2 103 2 426 6 427 2 104 6 429 2 778 4 105 52 1133 2 106 4 780 4 1136 2 107 64 109 6 1138 8 781 2 1140 4 434 2 1141 6 113 4 435 182 437 6 784 2 786 2 116 28 1144 2 441 46 1147 198 119 4 790 2 442 46 1149 10 1150 2 1151 4 446 60 1152 6 791 46 448 2 794 6 126 4 1156 4 797 2 451 2 1157 4 452 20 455 22 458 88 459 2 1161 2 805 160 1163 6 133 2 464 6 1166 6 807 2 136 2 468 4 469 48 140 6 139 2 812 2 1168 2 813 6 471 4 141 4 473 2 142 4 1170 86 474 182 146 2 821 2 1174 2 147 14 148 10 477 2 479 2 149 2 1175 4 1177 2 481 12 823 8 1181 4 153 2 1182 2 482 2 826 2 483 2 827 2 1187 6 1188 2 829 2 828 2 1189 2 155 8 833 2 488 2 835 2 836 18 840 2 1193 2 160 244 162 2 1194 2 842 2 843 26 1197 6 848 12 492 16 493 2 850 6 851 2 496 6 497 60 1200 2 169 2 171 198 1201 2 854 18 172 4 1202 70 859 26 177 336 1211 2 178 6 1212 6 181 112 509 4 182 112 1214 2 184 6 1215 2 186 2 865 4 188 12 1217 10 514 4 191 26 515 2 192 432 867 2 516 6 193 2 1223 26 870 2 196 198 1226 54 873 6 1229 10 200 14 877 4 201 4 522 6 207 2 1233 4 1234 2 883 2 884 2 209 8 208 8 525 2 212 6 215 6 887 2 888 2 528 30 1242 14 531 4 530 6 532 8 533 4 534 8 1249 66 1250 106 220 30 896 6 1251 12 1253 4 541 2 224 6 900 12 901 2 903 28 226 6 906 4 547 4 229 2 1259 2 909 20 910 6 549 6 550 6 232 6 1262 386 235 10 556 4 918 2 237 2 921 2 1265 22 1266 2 564 2 239 22 1269 8 925 2 566 2 241 48 567 4 242 2 926 2 927 2 243 2 1270 14 245 16 572 2 573 2 575 2 577 2 249 376 576 2 931 2 252 2 1278 4 254 6 580 140 258 8 582 244 1281 6 1282 6 584 30 583 26 933 4 265 2 266 4 267 2 268 2 269 2 587 10 935 6 588 8 936 2 273 2 274 198 1289 2 591 12 940 198 1297 16 1299 2 594 2 281 30 1301 2 595 30 1302 6 1303 2 944 4 596 26 284 26 1307 6 285 2 597 28 946 8 287 30 600 198 602 2 1312 6 605 192 950 6 606 204 952 2 954 28 611 74 295 92 297 2 616 4 617 198 962 82 301 30 1324 2 620 4 623 2 304 4 624 12 966 68 967 2 970 10 626 2 308 4 971 112 628 2 1328 6 974 2 631 2 1333 2 1334 4 1332 2 979 8 1339 2 635 6 309 2 637 4 1341 4 1342 2 1343 4 639 2 1344 8 982 6 984 6 985 4 1349 28 986 20 642 2 314 2 316 20 646 118 317 2 992 6 649 4 1352 8 655 2 1354 20 998 6 1355 6 321 4 658 4 661 2 1362 4 322 2 1001 2 323 2 325 14 1372 2 663 4 665 6 1374 112 330 6 1376 2 331 6 667 2 668 2 670 26 335 30 336 8 1377 2 1007 6 1378 4 339 6 675 4 1010 2 341 26 676 2 677 2 1013 46 1381 2 1016 2 1386 2 682 4 1387 2 1389 4 1390 2 1019 4 686 4 1020 204 1021 224 347 20 689 2 1023 2 
764 2 374 2 465 1 721 2 
57 2 721 2 
55 2 470 2 
1292 2 134 2 540 2 856 2 227 2 721 2 357 2 
548 2 227 2 721 2 
227 2 740 2 721 2 
554 2 470 2 374 2 
227 2 721 2 
261 2 470 2 
164 2 721 2 
945 2 470 2 374 2 
981 2 374 2 1095 2 
374 2 713 2 1340 2 
1043 2 374 2 1143 2 
374 2 938 2 1274 2 
470 2 1350 2 
1062 2 721 2 
981 2 288 2 
1100 2 713 2 
1043 2 1367 2 
450 2 938 2 
470 2 29 2 
830 2 938 2 
1043 2 1318 2 
932 2 713 2 
9 2 981 2 
945 2 470 2 374 2 1050 2 
81 2 945 2 470 2 374 2 1050 2 
470 2 374 2 638 2 
570 2 470 2 374 2 
773 2 759 2 1276 2 59 2 
134 2 540 2 761 2 1284 2 
1292 2 134 2 540 2 761 2 439 2 1284 2 
134 2 540 2 227 2 721 2 357 2 997 2 
312 2 98 2 
134 2 540 2 44 2 357 2 
1043 2 672 2 
938 2 415 2 
981 2 467 2 
803 2 713 2 
372 2 713 2 938 2 
713 2 938 2 1218 2 
650 2 713 2 938 2 
713 2 938 2 1261 2 
1237 6 494 2 579 2 872 6 134 2 540 2 1167 2 1391 2 
728 2 329 2 571 2 456 2 236 2 175 2 1204 2 1017 2 408 6 511 4 28 2 758 4 213 2 190 2 991 2 1130 2 834 2 150 2 
374 2 816 2 
743 2 
939 2 1026 2 418 2 7 2 512 4 1219 4 1220 2 1298 2 279 2 425 2 700 2 280 2 1300 2 1034 2 1037 2 1134 6 599 2 108 2 112 2 607 4 609 2 610 2 1149 26 885 2 32 2 886 2 124 4 306 2 125 6 217 2 729 8 129 2 218 2 1331 8 40 2 977 2 894 6 633 4 373 2 1337 2 310 2 814 6 472 4 225 2 1258 4 815 2 1169 2 53 2 817 4 1071 2 645 2 1353 4 148 26 822 2 1176 2 1079 2 922 2 832 2 1371 2 159 2 664 2 77 2 1096 4 397 2 399 2 259 2 767 2 263 2 344 2 681 2 586 2 1018 2 1207 2 1390 2 275 2 1022 2 
939 2 1026 2 418 2 1216 2 7 2 512 4 1219 4 1220 2 1298 2 279 2 425 2 700 2 280 2 1300 2 1037 2 1134 6 599 2 108 2 112 2 114 2 607 4 609 2 610 2 1149 26 885 2 32 2 886 2 124 2 306 2 125 6 217 2 454 2 729 8 129 2 218 2 1331 8 40 2 977 2 894 6 633 4 373 2 1337 2 814 6 472 6 225 2 1258 4 815 2 1169 2 53 2 817 4 1071 2 645 2 1353 4 148 26 822 2 1176 2 1079 2 922 2 832 2 1371 2 159 2 664 2 77 2 1096 4 397 2 399 2 259 2 767 2 855 2 174 2 263 2 344 2 681 2 586 2 1018 2 1390 2 685 2 275 2 1022 2 
1154 2 551 2 
914 2 
0 2 1118 2 189 4 421 2 53 2 512 2 1351 8 990 2 943 2 647 4 148 6 1075 6 913 2 1132 2 1356 2 1077 2 1134 4 1263 8 64 2 660 4 1310 2 111 2 112 2 782 2 358 2 203 2 156 2 1002 2 1231 2 787 2 569 2 928 2 610 2 1273 6 1149 12 929 4 1046 4 1097 2 248 2 885 2 671 2 86 2 367 2 1102 4 1158 2 173 4 506 2 767 2 1245 2 680 2 1203 10 219 2 536 6 1018 2 633 2 271 4 135 2 1390 2 346 2 543 2 
0 2 1118 2 189 4 421 2 53 2 512 2 1351 8 990 2 943 2 647 4 148 6 913 2 1075 6 1132 2 1356 2 1077 2 1134 4 1263 8 64 2 660 4 1310 2 755 2 111 2 112 2 782 2 358 2 290 4 156 2 1002 2 1231 2 787 2 569 2 928 2 610 2 1273 8 1149 12 929 4 1046 4 1097 2 248 2 885 2 671 2 86 2 495 2 367 2 1102 4 1158 2 173 4 767 2 506 2 1245 2 680 2 1203 10 536 8 633 2 1018 2 271 4 135 2 1390 2 897 2 346 2 543 2 
1132 2 1077 2 173 4 1273 2 1310 2 680 2 929 4 189 2 111 2 358 2 271 2 671 2 990 2 156 2 1002 2 1102 2 913 2 1075 2 
0 2 1118 2 189 4 421 2 53 2 512 2 1351 4 990 2 943 2 647 4 148 6 1075 4 913 2 1132 2 1356 2 1077 2 1134 4 1263 4 64 2 660 4 1310 2 111 2 112 2 782 2 358 2 203 2 156 2 1002 2 1231 2 787 2 569 2 928 2 610 2 1273 6 1149 12 929 4 1046 4 1097 2 248 2 885 2 671 2 86 2 367 2 1102 4 1158 2 173 4 767 2 1245 2 680 2 1203 6 219 2 536 6 1018 2 633 2 271 4 135 2 1390 2 897 2 346 2 543 2 
0 2 1118 2 189 4 421 2 53 2 512 2 1351 4 990 2 943 2 647 4 148 6 1075 6 913 2 1132 2 1356 2 1077 2 1134 4 1263 4 64 2 660 4 1310 2 111 2 112 2 782 2 358 2 390 2 203 2 156 2 1002 2 1231 2 787 2 569 2 928 2 610 2 1273 4 1149 12 929 4 1046 4 1097 2 248 2 885 2 671 2 86 2 367 2 1102 4 1158 2 173 4 767 2 1245 2 680 2 1203 6 219 2 536 6 1018 2 633 2 271 4 135 2 1390 2 346 2 543 2 
0 2 1118 2 189 4 421 2 53 2 512 2 1351 4 990 2 943 2 647 4 148 6 1075 6 913 2 1132 2 1356 2 1077 2 1134 4 1263 8 64 2 660 4 1310 2 111 2 112 2 782 2 358 2 203 2 156 2 1002 2 1231 2 787 2 569 2 928 2 610 2 1273 6 1149 12 929 4 1046 4 1097 2 248 2 885 2 671 2 86 2 367 2 1102 4 1158 2 173 4 506 2 767 2 1245 2 680 2 1203 6 219 2 536 6 1018 2 633 2 271 4 135 2 1390 2 346 2 543 2 
0 2 1118 2 189 4 421 2 53 2 512 2 1351 8 990 2 943 2 647 4 148 6 1075 8 913 2 1132 2 1356 2 1077 2 1134 4 1263 8 64 2 660 4 1310 2 111 2 112 2 782 2 358 2 390 2 203 2 156 2 1002 2 1231 2 787 2 569 2 928 2 610 2 1273 6 1149 12 929 4 1046 4 1097 2 248 2 885 2 671 2 86 2 367 2 1102 4 1158 2 173 4 506 2 767 2 1245 2 680 2 1203 10 219 2 536 8 633 2 1018 2 271 4 135 2 1390 2 346 2 543 2 
0 2 1118 2 189 4 421 2 53 2 512 2 1351 8 990 2 943 2 647 4 148 6 1075 6 913 2 1132 2 1356 2 1077 2 1134 4 1263 8 64 2 660 4 1310 2 111 2 112 2 782 2 358 2 203 2 156 2 1002 2 1231 2 787 2 569 2 928 2 610 2 1273 6 1149 12 929 4 1046 4 1097 2 248 2 885 2 671 2 86 2 367 2 1102 4 1158 2 173 4 506 2 767 2 1245 2 680 2 1203 10 219 2 536 6 1018 2 633 2 271 4 135 2 1390 2 346 2 543 2 
0 2 690 6 189 4 7 2 512 4 1219 4 352 6 10 2 1220 2 354 6 1224 2 1037 2 358 2 202 2 361 6 1231 2 1232 4 1046 6 885 2 32 4 886 2 214 6 1049 8 217 2 367 2 729 4 1245 2 219 2 536 12 894 6 373 2 46 6 543 4 1258 4 53 2 378 2 912 2 1075 8 913 2 1077 2 62 1 1263 2 64 2 919 2 756 7 561 1 390 4 1268 2 569 2 928 2 1273 4 77 2 78 6 929 4 1097 2 1096 2 248 2 930 2 399 2 86 4 255 1 1102 4 259 2 767 2 586 12 271 4 411 2 1288 2 414 2 939 2 1120 2 1118 2 99 1 1123 6 421 4 942 2 943 2 425 2 280 2 777 2 1132 2 286 6 1134 6 599 2 1310 2 108 2 1139 6 111 2 112 2 782 2 114 2 1314 2 607 4 291 7 785 2 1317 6 787 2 609 2 610 2 789 2 1321 4 1149 46 618 2 125 6 625 2 1326 2 1158 2 801 1 802 1 129 2 1331 4 977 2 633 4 135 2 1337 2 138 2 814 8 983 6 1347 1 472 6 815 2 1169 2 143 2 990 2 647 4 148 24 1356 2 659 6 152 2 1180 6 660 8 154 2 1183 1 1361 2 1363 1 1185 6 1002 2 156 2 832 2 1371 2 159 2 846 2 490 2 1198 10 671 2 168 2 498 2 1380 2 173 4 507 2 680 2 1203 2 681 2 860 6 1018 2 1390 2 685 2 862 2 346 2 1022 2 
690 6 939 2 0 2 1118 2 1120 2 1123 6 7 2 189 4 421 4 512 4 352 6 1219 4 10 2 1220 2 942 2 943 2 425 2 280 2 777 2 354 6 1132 2 1224 2 286 6 1037 2 1134 6 1310 2 599 2 108 4 1139 6 111 2 112 2 782 2 358 2 202 2 114 2 1314 2 607 4 361 6 785 2 1317 6 1231 2 609 2 787 2 1232 4 610 2 789 2 1321 4 296 2 1149 48 1046 6 618 2 32 4 885 2 886 2 214 6 1049 8 625 2 125 6 1326 2 367 2 217 2 1158 2 453 2 729 8 129 2 1245 2 219 2 1331 8 536 12 894 6 977 4 633 4 135 2 373 2 1337 2 46 6 138 2 543 4 983 6 814 8 472 6 1258 4 815 2 1169 2 143 2 53 2 378 2 990 2 647 4 1353 2 912 2 148 26 913 2 1075 8 1356 2 1077 2 659 6 1180 6 152 2 1263 6 660 8 64 2 154 2 919 2 1361 2 1185 6 1268 2 156 2 1002 2 832 2 1371 2 569 2 928 2 159 2 77 4 1273 8 78 6 929 4 490 2 846 2 1096 2 1097 2 248 2 930 2 1198 10 671 2 168 2 399 2 86 4 1102 4 498 2 259 2 1380 2 173 4 506 4 767 2 507 2 1203 2 680 2 681 2 860 6 586 12 1018 2 271 4 411 2 1288 2 862 2 685 2 1390 2 414 2 346 2 1022 2 
690 6 939 2 0 2 1118 2 1120 2 1123 6 7 2 189 4 421 4 512 4 352 6 1219 4 10 2 1220 2 942 2 943 2 425 2 280 2 777 2 354 6 1132 2 1224 2 286 6 1037 2 1134 6 1310 2 599 2 108 4 1139 6 111 2 112 2 782 2 358 2 202 2 114 2 1314 2 607 4 361 6 785 2 1317 6 1231 2 609 2 787 2 1232 4 610 2 789 2 1321 4 296 2 1149 48 1046 6 618 2 32 4 885 2 886 2 214 6 1049 8 625 2 125 6 1326 2 367 2 217 2 1158 2 453 2 729 8 129 2 1245 2 219 2 1331 8 536 12 894 6 977 4 633 4 135 2 373 2 1337 2 46 6 138 2 543 4 983 6 814 8 472 6 1258 4 815 2 1169 2 143 2 53 2 378 2 1351 4 990 2 647 4 1353 2 912 2 148 26 913 2 1075 8 1356 2 1077 2 659 6 1180 6 152 2 1263 6 660 8 64 2 154 2 919 2 1361 2 1185 6 1268 2 156 2 1002 2 832 2 1371 2 569 2 928 2 159 2 77 4 1273 8 78 6 929 4 490 2 846 2 1096 2 1097 2 248 2 930 2 1198 10 671 2 168 2 399 2 86 4 1102 4 498 2 259 2 1380 2 173 4 506 4 767 2 507 2 1203 6 680 2 681 2 860 6 586 12 1018 2 271 4 411 2 1288 2 862 2 685 2 1390 2 414 2 346 2 1022 2 
0 2 690 6 189 4 7 2 697 6 512 4 1219 4 352 6 10 2 1220 2 354 6 1224 2 1037 2 358 2 202 2 361 12 1231 2 1232 4 720 6 1046 6 885 2 32 4 886 2 214 6 1049 8 217 2 367 2 729 10 1245 2 219 2 536 16 894 8 373 2 897 2 46 12 543 4 1258 6 905 2 53 2 378 2 1075 10 913 2 233 6 1077 2 915 6 1263 6 64 2 919 2 390 2 1268 2 569 2 928 2 1273 10 77 4 78 6 929 4 1097 2 1096 4 248 2 930 2 399 2 86 4 1102 4 90 6 259 4 767 2 586 10 271 4 411 2 412 2 1288 2 414 2 939 4 1120 2 1118 2 1123 12 421 4 1127 2 942 2 943 2 425 2 280 2 777 2 1132 2 286 12 1134 6 1309 6 599 2 1310 2 108 4 1139 6 111 2 112 2 782 2 114 2 1314 2 607 4 785 2 1317 6 609 2 787 2 610 2 789 2 613 6 1321 4 296 2 1149 52 961 2 618 2 125 8 625 2 1326 2 1158 2 453 2 129 4 1331 10 976 2 977 4 632 6 633 4 135 2 1337 2 138 2 814 12 983 12 472 6 815 4 1169 2 143 2 644 2 1351 4 990 2 647 4 1353 2 148 24 1356 2 151 2 659 6 152 2 1180 6 660 8 154 2 1361 2 1185 6 1002 2 156 2 832 2 1371 2 159 2 1196 6 846 2 490 2 1198 8 671 2 338 2 168 2 498 2 1380 2 173 4 506 4 507 2 680 2 1203 6 681 2 860 12 1018 2 685 2 1390 2 862 2 346 2 1022 2 
0 2 1273 6 1149 4 1118 2 929 2 1046 2 189 4 1097 2 1351 4 990 2 671 2 647 2 86 2 913 2 1075 6 1077 2 173 2 506 2 1245 2 1263 6 660 2 64 2 219 2 1203 4 680 2 536 4 135 2 358 2 271 4 1002 2 346 2 1231 2 787 2 569 2 928 2 
0 2 939 3 1118 2 189 4 7 2 512 4 1219 4 1220 2 425 2 280 2 195 2 1134 6 1037 2 599 2 112 2 358 2 114 2 607 4 1231 2 609 2 787 2 610 2 1149 28 1046 2 885 2 32 2 886 2 125 6 217 2 129 3 731 2 1245 2 219 2 536 4 894 6 633 4 135 2 373 2 1337 2 814 8 472 6 1258 4 1169 2 53 2 743 2 990 2 647 2 148 24 912 2 1075 6 913 2 1077 2 1263 6 660 2 64 2 559 2 1186 2 1002 2 832 2 569 2 928 2 159 2 1273 6 929 2 1096 3 1097 2 248 2 669 2 1198 2 671 2 399 2 86 2 89 2 173 2 506 2 767 2 1283 2 680 2 1203 2 681 2 586 4 1018 2 271 4 413 3 345 2 685 2 1390 2 346 2 1022 2 
1089 2 0 2 135 2 
1089 2 0 2 135 2 
691 2 0 4 1026 4 7 2 189 4 421 2 512 4 1219 4 1220 2 425 2 280 2 777 2 868 2 283 4 1132 2 1037 2 1134 6 1310 2 599 2 108 4 874 2 112 2 782 2 114 2 607 4 785 2 292 4 609 2 1232 2 610 2 1321 2 1149 24 1046 4 120 2 885 2 32 6 886 2 124 2 125 2 367 2 217 2 529 2 729 4 1329 2 1245 2 1331 4 536 16 977 4 894 2 633 4 135 6 373 2 1337 2 897 4 138 2 543 4 814 2 472 6 1066 2 1169 2 53 2 315 2 820 2 1351 4 990 4 647 2 148 16 552 2 1075 12 1356 2 752 2 1180 2 1263 6 660 4 757 2 390 4 1002 2 832 2 1371 4 1089 2 159 2 77 4 1273 12 163 2 666 2 929 2 1096 2 1198 2 399 2 86 4 1102 4 173 2 767 2 506 4 680 2 1203 6 681 2 586 4 1018 2 271 4 1287 2 772 2 1390 2 685 2 937 2 346 2 
691 2 1380 2 767 2 1180 2 1321 2 524 2 1149 4 120 2 165 2 586 2 1198 2 942 2 156 2 772 2 551 2 148 2 763 2 
691 2 0 4 1026 4 7 2 189 4 421 4 512 4 1219 4 1220 2 425 2 280 2 777 2 283 4 1132 2 1131 2 1037 2 1134 6 1310 2 599 2 108 4 112 2 782 2 114 2 607 4 785 2 292 4 609 2 1232 2 610 2 1149 24 1046 4 120 2 885 2 32 6 886 2 124 1 125 2 367 2 217 2 529 2 1158 2 369 2 729 4 1245 2 1331 4 536 16 977 4 894 2 633 4 135 6 373 2 1337 2 897 4 138 2 543 4 814 2 472 6 1066 4 1169 2 53 2 315 2 820 2 1351 4 990 4 647 2 148 16 552 2 1075 12 1356 2 752 2 1180 2 1263 6 660 4 558 2 757 2 1000 2 390 4 1002 2 832 2 1371 4 1089 2 159 2 77 4 1273 12 163 2 929 2 1096 4 399 2 86 4 1102 4 173 2 767 2 506 4 680 2 1203 6 681 2 586 2 1018 2 271 4 1287 2 772 2 1390 2 685 2 937 2 346 2 179 2 
691 2 0 4 1026 4 7 2 189 4 421 4 512 4 1219 4 1220 2 425 2 280 2 777 2 283 4 1306 2 1132 2 1037 2 1134 6 1310 2 599 2 108 4 875 2 112 2 782 2 114 2 607 4 785 2 292 4 609 2 1232 2 610 2 1321 2 1149 24 1046 4 120 2 885 2 32 6 886 2 124 1 125 2 367 2 217 2 529 2 1158 2 729 4 1245 2 1331 4 536 16 977 4 894 2 633 4 135 6 373 2 1337 2 897 4 636 2 138 2 543 4 814 2 50 2 472 6 1066 2 1169 2 53 2 315 2 820 2 1351 4 990 4 647 2 148 16 552 2 1075 12 1356 2 752 2 1180 2 1263 6 660 4 757 2 390 4 1002 2 832 2 1371 4 1089 2 159 2 77 4 1273 12 163 2 929 2 1096 2 1198 2 399 2 86 4 1102 4 173 2 767 2 506 4 680 2 1203 6 681 2 586 4 1018 2 271 4 1287 2 1110 2 772 2 1390 2 685 2 937 2 346 2 
864 2 4 12 510 2 348 2 696 2 349 2 7 2 512 4 513 2 1029 12 1219 16 10 2 1220 6 1221 2 15 2 701 4 871 2 1037 2 1225 2 518 2 197 2 706 2 19 2 1228 2 198 2 199 2 878 16 202 2 521 2 360 4 22 2 879 2 716 2 714 2 1042 2 880 2 719 4 523 4 1044 2 363 3 364 2 210 2 30 2 1239 2 32 2 885 2 886 2 889 2 217 2 370 16 729 24 892 4 731 2 1244 6 1055 2 218 2 535 4 537 2 894 14 1060 2 539 2 895 2 43 24 735 4 373 2 1254 2 898 2 223 2 542 8 48 4 544 2 904 2 1258 12 905 2 739 2 907 2 228 4 53 2 1070 4 1071 2 378 2 56 10 230 2 1073 2 1074 2 234 2 63 4 917 2 754 2 1079 2 557 2 65 16 66 4 559 2 389 6 922 2 1082 2 563 4 1085 2 72 4 76 10 1271 4 765 2 1092 2 246 4 574 2 1096 19 82 10 1275 2 251 2 399 2 578 6 253 2 1279 6 256 3 259 20 767 2 585 2 768 2 586 2 270 16 412 2 413 2 589 2 1290 6 1113 2 939 19 277 4 419 4 1122 4 1124 2 592 2 100 2 593 2 1127 2 422 2 1298 2 423 12 279 2 425 2 1300 2 280 4 428 2 430 2 282 4 431 10 1134 6 432 2 1135 2 1137 8 599 4 947 2 948 14 110 2 289 8 112 2 1142 2 783 3 114 4 1314 4 607 14 1316 4 608 2 788 14 1145 2 440 12 610 2 1149 60 959 6 961 2 447 2 298 4 121 4 963 2 964 2 303 2 621 4 306 2 305 2 124 2 125 14 969 2 968 2 1327 4 800 2 128 2 129 16 973 4 1159 2 131 3 1331 26 460 4 633 4 806 14 1337 2 808 2 809 2 811 2 1345 2 814 28 1348 2 472 26 815 46 1169 4 143 2 1171 2 144 2 643 2 988 12 644 2 1173 2 319 10 475 2 651 2 995 2 993 2 148 48 656 2 478 2 1176 2 320 2 1357 2 151 2 1359 16 152 2 1360 2 825 2 1186 2 1366 2 832 2 486 4 1371 4 1003 2 1190 2 1192 2 159 2 328 2 489 4 1004 2 664 14 845 2 847 10 669 2 1006 2 491 2 166 12 338 2 673 2 1008 2 1199 2 340 2 1009 2 852 4 342 1 502 2 170 2 501 2 505 2 678 2 1015 12 1385 6 681 6 1206 2 1388 16 1018 2 683 2 861 2 862 2 1390 2 685 4 688 3 1022 2 
939 2 814 2 1258 2 815 6 1149 2 1096 2 1155 2 82 2 1221 2 56 2 251 2 319 4 125 2 1009 2 148 2 968 2 478 2 129 2 768 2 19 2 894 2 783 2 608 2 1022 2 
939 2 814 2 1258 2 815 6 1149 2 1096 2 1155 2 82 2 1221 2 56 2 251 2 319 4 125 2 1009 2 148 2 968 2 478 2 129 2 768 2 19 2 894 2 783 2 608 2 1022 2 
939 2 814 2 1258 2 815 6 1149 2 1096 2 1155 2 82 2 1221 2 56 2 251 2 319 4 125 2 1009 2 148 2 968 2 478 2 129 2 768 2 19 2 894 2 783 2 608 2 1022 2 
48 2 939 3 489 2 417 4 814 2 161 2 246 2 1149 10 959 4 363 3 278 2 228 2 1096 3 988 4 527 2 965 4 578 6 911 3 148 4 401 4 555 2 370 4 343 2 1308 2 1137 2 1264 2 1384 2 289 2 460 2 19 2 735 2 563 2 1038 2 831 4 221 2 72 2 118 4 688 3 542 2 1022 2 
939 2 48 2 814 2 417 4 228 2 278 2 988 4 911 2 148 4 555 2 1308 2 1137 2 1264 2 289 2 66 2 19 2 389 2 563 2 1038 2 831 4 72 2 118 4 489 2 161 2 1149 10 246 2 959 4 363 2 1096 2 527 2 965 4 578 6 401 4 343 2 370 4 1384 2 460 2 735 2 221 2 137 2 542 2 688 2 1022 2 
939 2 48 2 814 2 417 4 228 2 278 2 988 4 911 2 148 4 555 2 1308 2 1137 2 1264 2 289 2 66 2 19 2 389 2 563 2 1038 2 831 4 72 2 118 4 489 2 161 2 1149 10 246 2 959 4 363 2 1096 2 527 2 965 4 578 6 401 4 343 2 370 4 1384 2 460 2 735 2 221 2 137 2 542 2 688 2 1022 2 
939 2 48 2 814 2 417 4 228 2 278 2 988 4 911 2 148 4 555 2 1308 2 1137 2 1264 2 289 2 66 2 19 2 389 2 563 2 1038 2 831 4 72 2 118 4 489 2 161 2 1149 10 246 2 959 4 363 2 1096 2 527 2 965 4 578 6 401 4 343 2 370 4 1384 2 460 2 735 2 221 2 137 2 542 2 688 2 1022 2 
939 2 48 2 814 2 417 4 228 2 278 2 988 4 911 2 148 4 555 2 1308 2 1137 2 1264 2 289 2 66 4 19 2 389 4 563 2 1038 2 831 4 72 2 118 4 489 2 161 2 1149 10 246 2 959 4 363 2 1096 2 527 2 965 4 578 6 401 4 343 2 370 4 1384 2 460 2 735 2 221 2 137 4 542 2 688 2 1022 2 
673 2 1105 2 130 2 444 2 333 2 662 2 
1090 2 94 2 849 2 664 2 130 2 520 2 1088 2 
1191 1 612 2 983 2 1068 2 1149 10 1322 2 738 2 1028 2 148 8 1011 1 1358 2 484 1 769 2 707 2 1061 2 1313 2 112 2 1230 2 1370 2 485 2 205 2 953 2 508 2 1291 1 956 1 882 2 
838 4 489 2 1025 1 1293 2 1149 6 510 2 246 6 1294 2 959 4 228 6 988 12 123 2 305 2 148 6 370 15 753 2 1137 6 1385 4 289 6 460 6 66 3 389 5 93 2 1083 2 563 6 360 2 710 2 486 2 137 2 899 2 542 6 
972 2 17 1 1149 1 1080 2 545 4 934 2 538 2 299 2 792 2 1285 2 1286 2 438 2 831 2 148 1 88 7 810 2 118 2 401 2 
972 2 1080 2 934 2 545 4 538 2 299 4 792 2 1285 4 1286 2 438 2 831 2 88 6 810 4 118 2 401 2 
972 2 17 1 1149 1 1080 2 934 8 545 4 538 2 299 8 792 6 1285 8 1286 2 438 2 831 2 148 1 88 10 810 8 118 2 401 2 
972 2 1080 2 545 2 538 2 299 2 1285 2 1286 2 438 2 831 2 88 2 810 2 118 2 401 2 
864 1 696 2 100 2 593 2 1219 14 1029 2 1220 6 1135 1 432 2 598 2 599 4 947 3 1142 2 199 2 878 2 114 4 436 2 1315 2 607 12 1042 1 714 2 716 2 880 2 1320 2 719 4 523 4 1149 34 364 2 121 4 969 2 800 2 973 4 1331 4 1060 2 895 2 466 2 811 2 898 2 544 2 472 24 904 2 313 2 1171 2 144 1 995 2 148 30 234 2 1357 2 63 4 1360 2 920 2 1366 2 1085 2 1192 2 1271 4 1092 2 845 2 847 10 1008 2 581 2 502 2 505 2 681 6 1388 2 685 4 1113 2 863 1 
1192 2 1271 2 1256 2 544 2 185 2 472 8 1149 14 313 2 121 2 847 2 643 2 1219 6 1220 2 423 2 1008 2 124 2 148 14 553 2 502 2 1357 2 505 2 973 2 598 2 599 2 1331 6 681 2 1060 2 199 2 436 2 607 6 466 2 
696 6 100 4 593 4 1029 20 1219 36 941 4 1220 6 1222 4 1304 2 1036 6 598 2 432 4 1135 6 599 2 947 10 1311 2 1142 4 199 2 114 16 436 2 607 30 1040 10 716 10 714 4 880 6 1320 2 719 18 1235 2 523 6 615 2 1149 72 960 4 364 4 365 2 121 8 526 20 34 2 724 4 449 4 969 4 800 12 973 8 1248 4 1331 14 1330 4 895 4 1252 4 466 2 811 4 898 4 1346 4 1256 2 544 2 472 74 904 6 546 2 987 10 313 2 1171 4 144 5 818 4 995 4 476 2 148 64 381 4 382 4 234 4 1357 2 1179 12 63 18 1360 4 824 4 70 2 1366 4 1369 4 1085 6 837 10 1192 2 1271 8 847 20 334 4 337 4 1008 2 581 2 502 2 504 16 505 2 857 4 681 6 1205 16 409 4 95 2 685 16 687 6 180 4 1113 2 
1192 2 1271 4 1256 2 544 2 472 20 904 2 1149 20 313 2 1171 2 121 4 847 6 1029 2 1219 8 1220 2 145 2 34 2 1008 2 124 2 995 2 148 18 502 2 1357 2 505 2 973 4 1135 2 598 2 599 2 947 2 1331 12 681 2 920 2 895 2 199 2 114 4 436 2 95 2 607 8 685 4 466 2 716 2 898 2 880 2 1392 2 
955 2 

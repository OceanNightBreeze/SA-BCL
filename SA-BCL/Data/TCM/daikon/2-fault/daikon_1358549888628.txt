#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1292 273 552 1013 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:union([I[I)[I
jtb.JavaCharStream:backup(I)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([B[I)Z
jtb.visitor.FormatCommand:getCommand()I
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3_13()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ProglangType:isArray()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3_19()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_104()Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3_22()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_118()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_5()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3_10()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_180()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_210()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:subsetOf([F[D)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long; | RETURN | 14834 | return null
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.Debug:logDetail()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_124()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:logOn()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3_1()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:isScalar()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_74()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ValueTuple:size()I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_2_3(I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_30()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_89()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3R_60()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3_12()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.InvMap:InvMap()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_125()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_121()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptSlice1:arity()I
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.JavaParser:jj_3R_57()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lte(II)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(JJ)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_72()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_69()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:subsetOf([D[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_2_18(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.Intern:intern([D)[D
daikon.diff.Node:Node()V
utilMDE.LimitedSizeIntSet:size()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_15()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:present()Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_77()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_81()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_108()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:arity()I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3_36()Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_54()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Debug:logOn()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:jj_3R_105()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_25()Z
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_115()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ProglangType:dimensions()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_102()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:lexGTE([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_169()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_148()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_56()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_62()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_16()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:slice([III)[I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaParser:jj_3R_149()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:jj_3R_48()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_35()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_103()Z
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:eltsLT([II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaCharStream:BeginToken()C
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3R_136()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_73()Z
daikon.PptName:getSignature()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltwiseEqual([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
922 2 348 4 772 2 944 6 1227 2 425 2 4 2 427 2 950 2 431 2 955 2 1059 2 384 2 612 2 118 4 337 2 54 2 104 2 1155 2 745 2 870 2 452 2 716 2 
843 2 922 4 1275 2 348 12 944 14 337 8 425 8 24 2 447 4 950 8 1321 4 1030 6 104 6 806 6 870 4 452 4 716 4 
844 2 624 2 1014 2 1347 14 1093 2 473 2 161 4 582 2 992 4 25 2 302 8 403 2 303 2 474 4 162 4 816 2 218 4 115 2 1355 2 406 4 887 4 98 2 1025 62 442 10 539 2 1171 4 1360 2 243 2 202 2 1150 2 1279 4 712 4 1005 2 968 4 107 2 1111 2 969 4 869 4 1323 10 422 6 
260 2 832 2 991 2 91 2 490 2 557 2 1124 2 594 2 1218 2 182 2 
372 2 828 2 755 2 390 2 321 2 1299 2 174 2 723 4 752 2 
641 6 623 2 0 2 1331 2 650 2 859 6 1054 2 293 2 450 6 885 2 205 2 
372 2 890 2 84 4 679 6 894 4 1302 6 274 6 420 2 1145 2 1299 2 282 2 797 6 1008 2 
922 10 372 6 348 26 1010 2 678 6 944 29 847 2 425 16 4 4 24 4 950 16 431 8 404 2 955 6 266 8 304 8 1299 6 118 10 337 16 121 4 1379 2 71 2 242 2 417 4 104 12 344 8 227 2 870 10 452 10 716 10 
543 6 587 4 
182 2 
372 4 85 2 86 2 1016 2 1137 2 1183 2 433 2 1100 2 755 2 1185 2 1144 2 144 2 1188 2 1103 2 518 2 838 2 1192 2 1358 2 285 4 526 2 808 2 694 2 1367 4 349 2 61 2 1116 4 1330 2 992 4 814 2 302 2 404 2 303 2 1041 2 163 2 406 2 1299 4 538 2 310 2 638 2 644 2 467 2 228 2 1177 2 181 2 
922 16 372 4 348 48 1010 2 678 4 373 4 944 52 664 6 425 32 4 2 1019 2 950 32 328 8 431 18 721 4 851 2 1261 6 955 4 304 6 436 2 1299 4 996 4 118 6 1265 2 938 2 337 32 523 4 1064 6 447 4 1362 6 1321 4 103 4 1030 6 104 22 806 6 132 2 870 16 452 16 716 16 
1150 2 302 2 422 2 
41 2 1160 2 580 2 990 2 88 10 55 2 353 2 815 22 317 2 248 2 974 2 1185 2 632 2 692 2 
1178 2 
788 2 468 2 372 32 1130 2 1226 2 1131 3 1309 2 83 16 553 2 871 2 1132 2 1133 2 472 2 377 2 1311 2 10 2 382 1 1237 3 882 2 652 3 977 2 386 2 99 2 888 2 801 4 14 2 480 2 481 2 893 2 566 8 729 2 1246 1 896 2 1065 1 569 2 292 24 203 2 807 3 204 2 20 2 296 2 110 2 1324 4 109 1 398 3 1075 2 208 1 1257 2 666 2 736 2 737 2 1167 2 994 2 306 16 1169 3 820 2 669 3 593 2 821 2 408 1 1083 2 823 2 672 2 35 2 309 2 914 2 597 2 124 8 498 2 413 2 1338 2 38 2 917 3 130 8 920 16 919 4 921 2 40 4 747 2 930 2 1181 2 428 2 233 2 1350 1 234 2 47 1 833 6 48 2 682 2 143 6 332 24 333 2 1102 1 1277 2 339 1 519 2 444 2 1105 2 1359 2 1107 2 1194 4 689 2 765 4 1361 2 244 2 151 1 768 2 1196 3 1285 1 249 6 157 2 252 2 1033 2 455 1 1114 2 158 32 1293 2 1037 2 1370 2 776 2 1294 12 257 16 1119 2 951 2 628 3 1120 2 954 2 701 2 702 2 1121 4 1374 6 460 3 956 4 1299 34 268 1 1046 1 1047 2 784 2 68 2 173 3 465 32 174 2 175 5 1222 12 72 2 367 2 275 2 715 2 276 1 
1297 2 1299 2 
1063 2 1299 4 216 2 
372 10 3 10 374 2 375 244 719 4 5 2 720 4 1055 2 1056 432 380 4 1058 30 724 20 12 4 13 2 726 2 1061 4 1062 2 391 2 392 8 394 2 395 6 16 228 1068 2 1069 16 730 6 17 6 396 26 1072 2 1076 28 399 6 400 2 1079 6 401 12 402 26 26 2 27 2 1081 4 405 2 739 6 30 2 1082 12 741 2 34 8 411 10 36 2 416 376 1085 2 414 6 744 14 418 2 39 2 1088 8 1089 6 423 10 424 2 42 4 746 198 1090 64 749 2 45 6 429 2 430 92 1095 20 1096 198 1097 2 432 6 1098 2 754 46 49 30 756 2 434 4 435 16 1101 8 437 2 439 30 438 2 440 2 759 18 441 6 761 8 53 6 52 2 445 6 767 6 56 2 769 224 57 2 770 48 451 2 771 6 1113 4 774 2 60 8 775 2 456 2 62 2 458 4 1118 8 778 2 459 2 1120 2 64 4 781 4 1123 2 783 2 65 2 463 86 69 198 464 6 466 8 73 88 1127 2 74 20 1128 30 77 2 80 2 470 2 81 60 87 2 1136 20 90 2 92 2 1138 4 792 2 1141 10 93 2 95 160 476 4 1147 6 102 2 800 82 1148 2 1149 2 483 132 1151 4 805 2 484 2 486 26 1158 6 487 2 488 4 1161 6 810 14 111 6 812 2 1168 2 113 30 817 4 818 10 116 60 117 12 494 50 819 2 1170 54 822 14 1172 6 1173 2 125 6 827 2 499 4 126 4 500 2 501 30 127 2 128 6 502 386 829 8 1175 22 131 198 504 2 505 6 1179 106 506 2 136 6 831 8 834 2 511 4 1184 8 140 46 141 4 142 2 514 140 515 4 1187 4 517 22 1190 26 1191 14 521 2 522 2 149 2 525 4 153 30 842 4 155 26 527 4 528 6 1199 28 156 2 845 4 1201 2 1202 6 1203 2 160 6 529 2 1204 204 530 182 1206 4 1208 70 854 4 855 2 856 4 857 2 531 28 164 4 1209 2 1210 12 1211 4 1212 2 861 6 862 2 535 2 536 2 1213 2 171 118 863 2 864 4 865 2 1220 26 545 2 1223 16 178 4 1224 6 867 4 548 22 180 6 551 244 184 566 1229 6 1228 46 1230 2 872 20 873 2 875 132 874 2 877 98 878 2 1231 4 187 6 556 32 188 26 189 6 190 2 1234 2 191 2 193 290 1238 48 883 198 194 2 559 2 886 2 196 60 195 2 1240 2 562 6 197 2 1241 4 198 2 892 192 1243 2 895 2 899 8 568 6 572 6 571 2 901 2 1253 4 207 46 905 26 210 4 1256 84 581 4 214 2 1260 2 908 2 909 12 586 2 590 4 219 6 591 2 1264 2 910 22 912 60 913 2 221 6 595 28 596 2 1266 8 223 336 1267 4 1268 4 915 4 225 14 599 2 916 24 600 2 226 12 602 6 1269 4 923 2 924 2 1270 52 603 30 231 112 926 8 232 2 1271 12 931 4 235 6 605 2 933 2 934 6 609 4 1272 8 936 2 1273 2 1274 2 611 24 239 2 1276 2 939 204 240 2 616 6 241 4 1282 2 1281 2 1283 4 1284 4 941 8 247 198 619 2 943 6 620 2 621 20 1288 182 1289 2 622 4 1290 6 253 6 254 2 1291 2 256 2 948 2 259 2 262 2 1295 6 263 2 264 2 265 2 952 328 631 12 1296 12 957 2 267 4 1299 10 634 30 269 2 960 2 962 4 1300 2 637 2 1301 2 1303 6 965 2 271 4 640 4 642 46 643 4 645 2 967 2 1306 2 1307 4 646 6 970 2 647 6 277 2 971 6 972 2 279 26 973 2 280 2 1312 14 1313 68 1314 198 1316 106 654 2 653 18 655 328 1319 244 978 4 1320 112 657 14 286 2 982 2 659 8 288 4 290 2 291 2 984 4 662 2 294 12 986 30 663 6 297 2 299 6 1328 2 300 6 995 2 1333 2 305 2 1334 6 668 2 1335 2 997 2 670 6 671 432 999 94 1001 4 313 4 1002 2 1339 2 315 2 1004 4 1340 4 1341 2 319 198 1006 112 320 20 1342 2 1343 2 1344 2 676 26 1012 6 323 2 1011 6 1345 2 1348 2 1015 16 324 192 680 18 326 6 1351 12 1021 4 1353 4 330 26 1354 28 684 4 1023 4 331 2 1024 2 1357 6 335 12 336 8 1027 66 342 2 1031 6 691 2 346 10 350 2 695 4 1036 2 352 6 697 2 1040 2 699 74 700 6 1042 4 354 2 703 4 357 4 705 6 358 64 359 2 360 2 1376 6 364 4 1378 20 1380 6 707 30 710 4 709 2 1381 6 366 2 711 2 713 112 1384 2 1052 2 1051 6 371 4 714 2 
561 2 1003 1 976 2 1244 2 
368 2 976 2 
302 2 1159 2 1368 2 417 2 137 2 976 2 393 2 
1368 2 976 2 108 2 
1368 2 1026 2 976 2 
537 2 1244 2 1176 2 
1368 2 976 2 
1087 2 1176 2 
976 2 325 2 
1244 2 1176 2 1039 2 
453 2 966 2 1244 2 
388 2 1044 2 1244 2 
932 2 636 2 1244 2 
1318 2 961 2 1244 2 
1176 2 1386 2 
976 2 532 2 
966 2 850 2 
322 2 388 2 
636 2 1060 2 
961 2 89 2 
138 2 1176 2 
961 2 1035 2 
636 2 1385 2 
388 2 224 2 
1369 2 966 2 
1250 2 1244 2 1176 2 1039 2 
1250 2 1244 2 1176 2 758 2 1039 2 
852 2 1244 2 1176 2 
82 2 1244 2 1176 2 
361 2 1255 2 1067 2 533 2 
169 2 534 2 963 2 742 2 648 2 1115 2 172 2 804 4 764 4 63 2 826 2 415 2 766 2 815 6 1086 2 704 2 129 2 295 2 
945 2 1244 2 
302 2 656 2 185 2 137 2 
302 2 656 2 15 2 185 2 137 2 393 2 
302 2 1368 2 417 2 866 2 137 2 976 2 
349 2 1305 2 
302 2 417 2 1164 2 137 2 
636 2 397 2 
961 2 1122 2 
1308 2 966 2 
388 2 717 2 
329 2 961 2 388 2 
961 2 388 2 1020 2 
961 2 388 2 735 2 
1053 2 961 2 388 2 
750 2 137 2 302 2 1045 2 97 6 891 6 412 2 316 2 
1176 2 369 2 
275 2 
788 2 372 26 1226 2 553 2 871 2 1133 2 472 2 790 2 278 2 10 2 382 2 881 2 882 2 386 2 888 2 801 2 14 2 893 2 482 2 566 2 1246 2 729 2 1153 2 203 4 20 2 23 2 988 2 737 2 1167 2 994 2 306 6 1083 2 410 2 35 2 309 2 597 2 498 2 413 6 919 4 921 2 40 4 234 2 833 6 610 4 143 2 238 2 519 2 520 4 444 2 1105 2 615 2 1107 2 1194 2 765 4 1110 2 249 4 157 2 1114 2 158 4 946 2 1117 2 1294 8 1372 2 1120 2 702 4 1121 2 1374 2 956 4 1299 26 270 2 784 2 1047 2 465 6 174 2 1222 8 1050 2 
788 2 372 26 1130 2 1226 2 553 2 871 2 1133 2 472 2 790 2 278 2 10 2 382 2 881 2 882 2 386 2 888 2 801 2 14 2 893 2 482 2 566 2 1246 2 729 2 1153 2 203 2 20 2 988 2 737 2 1167 2 994 2 306 6 33 2 1083 2 35 2 309 2 597 2 498 2 413 6 919 4 921 2 40 4 234 2 833 6 610 4 143 2 238 2 519 2 520 4 444 2 1105 2 615 2 1107 2 1194 2 765 4 249 6 157 2 252 2 1114 2 158 4 946 2 1117 2 1294 8 1372 2 626 2 1120 2 702 4 1121 2 1374 2 956 4 1299 26 270 2 784 2 1047 2 639 2 465 6 174 2 1222 8 367 2 1050 2 
1189 2 
340 2 674 2 
469 2 372 6 928 2 472 2 426 2 44 4 1182 2 1352 2 833 4 722 4 795 2 650 4 837 10 10 2 1146 2 14 2 1107 2 765 2 524 2 617 2 840 2 1364 2 245 2 1198 2 1322 4 449 8 450 6 293 4 693 2 157 2 1200 2 1074 2 623 2 989 2 1327 4 212 2 696 2 734 8 1078 2 1120 2 217 2 1331 2 859 6 1332 2 588 2 1299 12 911 2 362 2 998 2 1377 4 1219 4 497 2 597 2 540 2 641 6 544 2 549 2 919 2 79 2 675 2 
372 6 469 2 0 2 472 2 928 2 426 2 44 4 555 2 1182 2 1352 2 833 4 722 4 795 2 650 4 837 10 10 2 1146 2 14 2 940 4 1107 2 765 2 524 2 840 2 245 2 1198 2 1322 4 449 8 450 8 293 4 693 2 157 2 1200 2 1074 2 623 2 989 2 1327 4 212 2 696 2 734 8 1078 2 1120 2 217 2 1331 2 1332 2 859 6 588 2 1299 12 911 2 362 2 998 2 1377 4 1219 4 497 2 597 2 540 2 641 8 544 2 546 2 549 2 919 2 675 2 79 2 
469 2 1200 2 1074 2 1327 4 1219 2 1182 2 1352 2 722 4 795 2 650 2 859 2 549 2 293 2 450 2 588 2 693 2 675 2 79 2 
469 2 372 6 0 2 928 2 472 2 426 2 44 4 1182 2 1352 2 833 4 722 4 795 2 650 4 837 6 10 2 1146 2 14 2 1107 2 765 2 524 2 617 2 840 2 1364 2 245 2 1198 2 1322 4 449 4 450 6 293 4 693 2 157 2 1200 2 1074 2 989 2 1327 4 212 2 696 2 734 4 1078 2 1120 2 217 2 1331 2 859 4 1332 2 588 2 1299 12 911 2 362 2 998 2 1377 4 1219 4 497 2 597 2 540 2 641 6 544 2 549 2 919 2 79 2 675 2 
469 2 372 6 928 2 472 2 426 2 44 4 1182 2 1352 2 833 4 722 4 795 2 650 4 837 6 10 2 1146 2 14 2 1107 2 765 2 524 2 617 2 840 2 1364 2 245 2 1198 2 1322 4 449 4 450 4 293 4 693 2 157 2 205 2 1200 2 1074 2 989 2 1327 4 212 2 696 2 734 4 1078 2 1120 2 217 2 1331 2 859 6 1332 2 588 2 1299 12 911 2 362 2 998 2 1377 4 1219 4 497 2 597 2 540 2 641 6 544 2 549 2 919 2 79 2 675 2 
469 2 372 6 928 2 472 2 426 2 44 4 1182 2 1352 2 833 4 722 4 795 2 650 4 837 6 10 2 1146 2 14 2 1107 2 765 2 524 2 617 2 840 2 1364 2 245 2 1198 2 1322 4 449 4 450 6 293 4 693 2 157 2 1200 2 1074 2 623 2 989 2 1327 4 212 2 696 2 734 8 1078 2 1120 2 217 2 1331 2 859 6 1332 2 588 2 1299 12 911 2 362 2 998 2 1377 4 1219 4 497 2 597 2 540 2 641 6 544 2 549 2 919 2 79 2 675 2 
469 2 372 6 928 2 472 2 426 2 44 4 1182 2 1352 2 833 4 722 4 795 2 650 4 837 10 10 2 1146 2 14 2 1107 2 765 2 524 2 617 2 840 2 1364 2 245 2 1198 2 1322 4 449 8 450 6 293 4 693 2 157 2 205 2 1200 2 1074 2 623 2 989 2 1327 4 212 2 696 2 734 8 1078 2 1120 2 217 2 1331 2 859 8 1332 2 588 2 1299 12 911 2 362 2 998 2 1377 4 1219 4 497 2 597 2 540 2 641 8 544 2 549 2 919 2 79 2 675 2 
469 2 372 6 928 2 472 2 426 2 44 4 1182 2 1352 2 833 4 722 4 795 2 650 4 837 10 10 2 1146 2 14 2 1107 2 765 2 524 2 617 2 840 2 1364 2 245 2 1198 2 1322 4 449 8 450 6 293 4 693 2 157 2 1200 2 1074 2 623 2 989 2 1327 4 212 2 696 2 734 8 1078 2 1120 2 217 2 1331 2 859 6 1332 2 588 2 1299 12 911 2 362 2 998 2 1377 4 1219 4 497 2 597 2 540 2 641 6 544 2 549 2 919 2 79 2 675 2 
372 24 1 1 553 2 379 1 722 4 10 2 882 2 386 2 888 12 14 2 563 2 725 8 893 2 566 2 1063 6 898 1 903 2 20 2 21 2 205 4 22 1 1074 2 1077 2 212 2 213 6 734 2 1078 2 737 2 1080 6 583 2 217 4 588 2 911 4 409 6 35 2 597 2 413 6 919 4 921 2 40 4 1092 2 928 2 426 2 44 6 46 2 751 2 604 2 607 2 610 4 50 2 757 2 238 2 1105 2 444 2 615 4 1107 2 1106 6 765 4 245 2 249 6 1287 2 450 4 252 2 1114 2 1294 4 261 2 627 2 1120 2 629 6 1121 2 956 4 1297 6 1299 46 1298 1 270 2 958 2 785 6 465 8 786 2 641 12 75 1 79 2 1130 2 469 2 471 2 1133 2 472 2 789 2 1134 1 790 2 795 2 650 4 649 6 477 6 1146 2 801 2 979 1 1152 4 1154 6 661 2 1322 4 293 4 1325 7 1162 2 989 2 1327 4 811 2 1167 2 994 2 1331 4 1332 2 306 6 998 2 311 2 824 6 497 2 314 2 675 2 1178 6 134 2 327 2 1182 2 510 7 833 6 1352 2 1022 6 837 2 143 2 685 2 338 10 519 2 1194 2 148 4 524 2 840 2 1364 2 1198 2 154 2 157 2 693 2 1200 2 158 2 696 2 1038 6 1205 1 355 2 1374 2 859 8 1375 2 362 2 363 6 1377 8 1219 4 540 2 174 2 1221 2 544 2 1222 4 549 2 550 2 
469 2 372 26 1130 2 553 2 471 2 1133 2 789 2 472 2 790 2 722 4 795 2 649 6 650 4 10 2 477 6 882 2 1146 2 386 2 888 12 801 4 563 2 14 2 725 8 893 2 1063 6 566 2 1152 4 1154 6 661 2 1322 4 293 4 903 2 21 2 20 2 1074 2 989 2 1162 2 1077 2 1327 4 811 2 212 2 213 6 734 6 1078 2 737 2 1080 6 583 2 1167 2 994 2 217 4 1331 4 1332 2 588 2 306 6 911 4 409 6 998 2 35 2 824 6 311 2 497 2 597 2 314 2 413 6 318 2 919 4 921 2 40 4 675 2 1178 6 134 2 1092 2 928 2 426 2 44 6 751 2 46 2 327 2 604 2 1182 2 1352 2 833 6 1022 6 607 2 837 2 143 2 610 4 757 2 50 2 238 2 685 2 338 10 519 2 615 4 444 2 1105 2 1106 6 1107 2 1194 4 148 4 765 4 524 2 840 2 1364 2 245 2 1198 2 1287 2 249 6 154 2 450 8 693 2 157 2 252 2 1200 2 623 4 158 2 1114 2 1038 6 1294 8 696 2 261 2 1373 2 627 2 629 6 1120 2 355 2 702 2 1374 2 1121 4 1375 2 859 8 956 4 1297 6 1299 48 958 2 270 2 362 2 363 6 785 6 1377 8 1219 4 465 8 174 2 540 2 786 2 1221 2 641 12 1222 8 544 2 549 2 550 2 79 2 
469 2 372 26 1130 2 553 2 471 2 1133 2 789 2 472 2 790 2 722 4 795 2 649 6 650 4 10 2 477 6 882 2 1146 2 386 2 888 12 801 4 563 2 14 2 725 8 893 2 1063 6 566 2 1152 4 1154 6 661 2 1322 4 293 4 903 2 21 2 20 2 1074 2 989 2 1162 2 1077 2 1327 4 811 2 212 2 213 6 734 6 1078 2 737 2 1080 6 583 2 1167 2 994 2 217 4 1331 4 1332 2 588 2 306 6 911 4 409 6 998 2 35 2 824 6 311 2 497 2 597 2 314 2 413 6 318 2 919 4 921 2 40 4 675 2 1178 6 134 2 1092 2 928 2 426 2 44 6 751 2 46 2 327 2 604 2 1182 2 1352 2 833 6 1022 6 607 2 837 6 143 2 610 4 757 2 50 2 238 2 685 2 338 10 519 2 615 4 1105 2 444 2 1106 6 1107 2 1194 4 148 4 765 4 524 2 840 2 1364 2 245 2 1198 2 1287 2 249 6 154 2 449 4 450 8 693 2 157 2 252 2 1200 2 623 4 158 2 1114 2 1038 6 1294 8 696 2 261 2 1373 2 627 2 629 6 1120 2 355 2 702 2 1374 2 1121 4 1375 2 859 8 956 4 1297 6 1299 48 958 2 270 2 362 2 363 6 785 6 1377 8 1219 4 465 8 174 2 540 2 786 2 1221 2 641 12 1222 8 544 2 549 2 550 2 79 2 
372 24 0 2 553 2 6 6 722 4 10 2 882 2 386 2 888 10 14 2 563 2 725 8 893 2 566 4 1063 12 903 2 20 2 21 2 205 2 1074 2 212 2 1258 2 213 6 734 6 1078 2 737 2 1080 12 583 2 585 2 217 4 588 2 911 4 409 12 35 2 597 2 413 8 919 4 921 2 40 4 1092 2 928 2 927 6 426 2 44 6 46 2 751 2 604 2 607 2 610 6 757 2 50 2 238 2 444 2 1105 2 615 4 1107 2 1106 6 765 4 245 2 1287 2 249 6 450 10 449 4 252 2 623 4 1114 2 1294 10 261 2 627 2 1120 2 629 6 1121 4 956 4 1297 12 1299 52 270 4 958 2 785 6 465 12 786 2 641 16 787 2 79 2 1130 2 469 2 471 2 1133 2 472 2 789 2 790 2 795 2 650 4 649 6 477 6 1146 2 801 4 980 2 658 6 660 2 1152 4 1154 12 661 2 1322 4 293 4 1162 2 989 2 1327 4 811 2 1167 2 993 2 491 2 994 2 1331 4 1332 2 306 8 998 2 311 2 824 6 1000 6 497 2 314 2 318 2 1007 6 675 2 1178 12 134 2 1346 6 327 2 1182 2 833 6 1352 2 1022 6 837 6 143 4 685 2 338 8 519 2 1194 4 148 4 524 2 840 2 1364 2 1198 2 154 2 157 2 693 2 1200 2 158 4 848 2 696 2 1038 6 1373 2 355 2 702 2 1374 4 356 6 859 10 1375 2 362 2 363 6 1377 8 1219 4 540 2 174 2 1221 2 544 2 1222 10 177 6 1383 6 549 2 550 2 
469 2 623 2 1074 2 1327 2 928 2 426 2 44 2 212 2 734 6 696 2 1352 2 722 2 795 2 1331 2 650 4 837 4 1332 2 859 6 1299 4 588 2 1146 2 998 2 1377 2 540 2 524 2 641 4 840 2 1364 2 245 2 1322 2 449 4 450 6 293 4 675 2 79 2 
468 2 372 24 1130 2 469 2 553 2 1133 2 472 2 790 2 186 2 722 2 795 2 650 4 10 2 882 2 975 2 1146 2 386 2 888 4 14 2 893 2 1322 2 293 4 20 2 110 2 1074 2 1327 2 1077 2 212 2 734 6 737 2 1167 2 1331 2 1332 2 588 2 306 6 998 2 35 2 597 2 413 6 38 2 919 4 921 2 40 4 675 2 230 2 928 2 426 2 44 2 833 6 1352 2 837 2 610 4 1356 3 143 3 238 2 338 2 519 2 444 2 1105 2 615 2 1193 2 1107 2 765 4 524 2 840 2 1364 2 245 2 249 6 450 6 157 2 252 2 623 2 1114 2 158 3 696 2 1120 2 1374 3 859 6 956 4 1299 28 1377 2 465 8 174 2 540 2 641 4 544 2 275 2 1225 2 79 2 
840 2 998 2 446 2 
840 2 998 2 446 2 
372 16 1130 2 0 4 553 2 1133 2 472 2 791 2 790 2 378 2 722 2 649 2 650 4 10 2 882 2 386 2 888 4 101 2 801 4 14 2 893 2 200 2 1152 2 203 2 1322 2 19 4 293 4 731 2 20 2 205 4 989 2 1327 2 1259 4 734 6 737 2 994 4 28 2 217 2 1331 4 588 4 306 2 495 2 911 4 998 6 35 2 497 2 597 2 413 2 919 4 921 2 40 4 675 2 928 2 44 4 1094 2 604 2 833 6 236 2 837 6 238 2 334 2 937 2 338 2 519 2 444 2 1105 2 615 6 446 2 1107 2 1194 4 148 2 839 2 765 4 524 2 840 4 249 6 250 2 449 4 450 12 693 2 157 2 252 2 1200 2 623 4 1114 2 158 2 1294 4 1372 4 1120 2 1121 4 1375 2 956 4 859 12 1299 24 362 2 170 2 1215 2 1377 4 1219 4 465 2 174 2 786 2 541 2 1304 2 641 16 1222 4 79 2 
888 2 372 2 471 2 338 2 472 2 1215 2 791 2 1371 2 148 2 1182 2 365 2 289 2 28 2 674 2 649 2 757 2 1299 4 
372 16 1130 2 0 4 553 2 1133 2 472 2 791 2 790 2 378 2 722 2 649 2 650 4 383 2 10 2 882 2 386 2 888 2 101 2 801 4 14 2 893 2 200 2 1152 2 1322 2 19 4 293 4 731 4 20 2 205 4 1326 2 989 2 1327 2 1259 4 734 6 737 2 994 4 28 2 217 4 1331 4 588 4 306 2 911 4 998 6 35 2 497 2 597 2 413 2 919 4 921 2 40 4 675 2 1180 2 928 2 44 4 604 2 833 6 837 6 238 2 334 2 937 2 519 2 444 2 1105 2 615 6 446 2 1107 2 1194 4 765 4 524 2 840 4 152 2 1198 2 249 6 250 2 449 4 450 12 693 2 157 2 252 2 1200 2 623 4 1114 2 158 4 1294 4 1372 4 1120 2 1121 4 1375 2 956 4 859 12 1299 24 362 2 67 2 170 2 1215 2 1377 4 1219 4 465 2 174 2 786 2 541 2 1304 2 641 16 1222 4 79 2 
372 16 1130 2 0 4 553 2 1133 2 472 2 791 2 790 2 378 2 722 2 649 2 650 4 10 2 882 2 386 2 888 4 101 2 801 4 14 2 893 2 200 2 1152 2 203 1 1322 2 19 4 293 4 731 2 20 2 205 4 989 2 1327 2 1259 4 734 6 737 2 994 4 28 2 217 4 1331 4 588 4 306 2 911 4 998 6 35 2 743 2 497 2 597 2 413 2 919 4 921 2 40 4 675 2 925 2 928 2 44 4 604 2 833 6 837 6 238 2 334 2 937 2 338 2 519 2 444 2 1105 2 615 6 446 2 1107 2 1194 4 148 2 765 4 524 2 341 2 840 4 1198 2 249 6 250 2 449 4 450 12 693 2 157 2 252 2 59 2 1200 2 623 4 1114 2 158 2 1294 4 1372 4 1120 2 1121 4 1375 2 956 4 859 12 1299 24 362 2 170 2 1215 2 1377 4 1219 4 465 2 174 2 786 2 541 2 1304 2 641 16 1222 4 76 2 79 2 
372 20 1130 1 552 2 553 2 1013 2 1133 2 472 2 833 6 794 2 1142 2 10 2 143 2 610 4 882 2 796 2 238 2 386 2 11 2 888 2 479 2 14 2 519 2 615 2 1105 2 444 2 893 2 1107 2 1245 2 765 4 983 2 942 2 249 5 573 2 903 2 20 2 157 2 58 2 252 1 1073 2 1292 2 1162 2 158 2 1114 2 1163 6 457 4 737 2 1207 2 627 2 1167 2 584 2 1120 2 1374 2 956 4 165 2 1299 26 706 2 306 6 959 2 35 2 311 2 312 2 465 8 597 2 174 2 413 6 1221 2 37 2 273 2 419 2 919 4 550 2 921 2 40 4 
372 2 1091 3 158 3 1017 2 1165 1 625 2 1167 2 1057 2 1374 3 1143 2 143 3 610 2 1299 2 306 2 270 6 760 2 592 2 964 2 284 2 465 2 413 2 176 2 343 2 1286 2 574 4 
372 2 760 2 592 2 1091 2 158 2 284 2 964 2 1017 2 465 2 413 2 625 2 176 2 343 2 1167 2 1057 2 1286 2 1143 2 1374 2 610 2 143 2 574 4 1299 2 270 6 306 2 
372 2 760 2 592 2 1091 2 158 2 284 2 964 2 1017 2 465 2 413 2 625 2 176 2 343 2 1167 2 1057 2 1286 2 1143 2 1374 2 610 2 143 2 574 4 1299 2 270 6 306 2 
372 4 922 2 1009 4 678 2 83 2 425 2 43 2 830 2 554 2 753 2 1143 2 651 2 143 3 614 2 337 2 387 3 1247 3 618 3 345 4 452 2 985 2 348 4 1251 2 944 5 158 3 1034 4 257 2 950 2 1167 2 738 2 1043 4 304 4 166 4 1299 10 635 2 308 2 119 6 465 2 870 2 716 2 
922 2 372 4 1009 4 1251 2 348 4 1010 2 678 2 944 4 83 2 158 2 43 2 425 2 1034 4 257 2 830 2 554 2 950 2 431 2 738 2 1167 2 753 2 1043 4 1143 2 304 4 143 2 651 2 166 4 1299 10 635 2 308 2 614 2 119 6 337 2 387 2 465 2 1247 2 104 2 618 2 345 4 870 2 985 2 452 2 716 2 
922 2 372 4 1009 4 1251 2 348 4 1010 2 678 2 944 4 83 2 158 2 43 2 425 2 1034 4 257 2 830 2 554 2 950 2 431 2 738 2 1167 2 753 2 1043 4 1143 2 304 4 143 2 651 2 166 4 1299 10 635 2 308 2 614 2 119 6 337 2 387 2 465 2 1247 2 104 2 618 2 345 4 870 2 985 2 452 2 716 2 
922 2 372 4 1009 4 1251 2 348 4 1010 2 678 2 944 4 83 2 158 2 43 2 425 2 1034 4 257 2 830 2 554 2 950 2 431 2 738 2 1167 2 753 2 1043 4 1143 2 304 4 143 2 651 2 166 4 1299 10 635 2 308 2 614 2 119 6 337 2 387 2 465 2 1247 2 104 2 618 2 345 4 870 2 985 2 452 2 716 2 
922 2 372 4 1009 4 1251 2 348 4 1010 4 678 2 944 4 83 2 158 2 43 2 425 2 1034 4 257 2 830 2 554 2 950 2 431 4 738 2 1167 2 753 2 1043 4 1143 2 304 4 143 2 651 2 166 4 1299 10 635 2 308 2 614 2 119 6 337 2 387 2 465 2 1247 2 104 4 618 2 345 4 870 2 985 2 452 2 716 2 
904 2 897 2 762 2 1197 2 1070 2 1049 2 
576 2 1070 2 949 2 1157 2 1336 2 278 2 782 2 
372 8 206 2 624 1 578 2 301 2 1099 2 492 1 667 2 1299 10 385 1 168 2 589 2 51 2 283 2 1242 2 727 2 597 2 448 2 1154 2 1109 2 105 1 1156 2 547 2 107 1 1112 2 370 2 
165 2 
372 1 407 2 732 2 1009 2 298 2 665 1 733 2 849 2 1108 2 1280 6 835 2 1029 2 345 2 166 2 884 4 1299 1 32 2 183 2 
407 4 732 2 1009 2 298 2 733 2 849 4 1108 2 1280 6 835 2 1029 2 345 2 166 2 884 4 32 4 183 2 
372 1 407 8 732 2 1009 2 298 2 665 1 733 2 849 8 1108 2 1280 10 835 6 1029 8 345 2 166 2 884 4 1299 1 32 8 183 2 
407 2 732 2 1009 2 298 2 733 2 849 2 1108 2 1280 2 345 2 166 2 884 2 32 2 183 2 
372 134 1130 58 1310 6 718 22 876 6 880 4 381 6 1139 2 1140 4 793 2 1232 4 475 16 1233 6 281 4 1235 2 94 24 192 4 558 8 96 6 1239 2 560 6 798 2 100 10 478 12 799 2 389 24 728 4 203 4 570 4 106 4 1248 42 18 10 902 16 987 124 809 6 209 8 577 6 211 34 579 50 906 8 215 16 813 2 1166 2 112 18 907 6 114 6 740 24 1262 10 493 92 1263 10 31 6 220 4 120 18 222 8 122 10 35 8 496 2 123 2 825 84 598 4 673 8 918 6 921 14 503 4 421 6 601 10 40 112 133 24 677 2 135 4 748 4 1349 16 1018 26 606 8 683 2 512 4 836 6 139 8 1186 4 237 2 145 2 613 12 686 4 146 11 1104 17 444 14 443 8 147 90 1278 2 1195 6 150 4 690 4 1363 10 1365 8 246 6 841 36 249 248 1366 6 1032 6 251 6 347 2 252 58 454 90 846 4 773 6 351 26 159 4 698 8 853 6 953 4 858 2 630 24 956 88 780 2 860 24 633 4 1299 150 167 42 66 4 1048 4 1125 4 70 6 542 1 1222 28 179 10 868 2 1129 2 78 6 
1130 2 372 44 2 2 929 2 1349 4 1135 2 508 2 1139 2 793 2 8 2 512 2 935 2 608 2 94 2 1236 2 513 4 558 2 1315 2 237 2 516 6 100 2 799 2 564 2 687 2 802 2 199 2 1104 2 688 2 565 2 444 2 803 2 763 2 201 2 1195 2 981 2 287 2 567 2 1363 2 246 2 841 2 203 2 1249 2 249 44 18 2 485 4 575 2 902 4 251 4 252 2 1252 2 809 2 987 6 773 2 1329 2 947 4 258 2 906 6 215 4 489 2 777 2 698 2 29 4 114 2 956 20 1262 2 1263 2 860 2 780 2 461 2 1299 46 31 2 307 2 1214 2 120 2 1126 2 222 2 122 2 35 2 1217 2 708 2 1337 2 598 2 1382 2 673 2 1222 38 179 2 868 2 921 2 601 2 133 2 229 2 40 20 
372 70 1130 28 1310 4 376 2 876 4 880 4 879 4 381 4 1140 4 793 2 7 4 475 8 1233 4 281 4 1235 2 9 4 558 2 96 4 1317 2 100 4 889 4 799 2 201 2 1066 8 900 2 106 4 1248 8 18 4 902 10 1071 8 987 24 1254 4 809 4 577 4 211 30 579 8 1329 10 215 10 906 6 813 2 1166 2 907 4 114 4 493 24 1262 4 31 4 220 4 120 10 222 2 35 2 1084 8 825 24 1174 4 918 4 921 6 503 4 40 44 601 4 421 4 748 4 1349 10 507 32 508 10 509 8 681 4 836 4 139 4 237 2 613 14 688 2 1104 10 443 4 444 6 1195 4 690 4 1028 2 246 4 841 6 249 104 1366 4 251 2 347 2 252 30 846 4 773 4 159 2 255 2 698 2 853 4 953 4 630 8 956 36 780 2 462 16 1299 78 167 16 1048 4 1125 4 1216 2 70 4 708 10 1382 2 1222 14 272 16 179 6 868 2 78 4 
1130 12 372 26 1349 6 718 10 1139 2 793 2 475 6 281 2 558 2 1186 2 237 2 798 2 100 2 145 2 799 2 146 2 1104 2 444 2 443 4 201 2 1278 2 1195 4 728 2 1365 2 246 4 203 2 841 2 249 40 18 2 902 6 251 2 252 12 987 8 809 4 211 6 773 4 159 2 906 4 215 6 698 2 953 2 858 2 114 4 956 14 1262 2 780 2 1299 28 31 4 1214 2 222 2 120 2 35 2 1222 14 179 2 868 2 921 2 40 14 601 2 1129 2 
779 2 

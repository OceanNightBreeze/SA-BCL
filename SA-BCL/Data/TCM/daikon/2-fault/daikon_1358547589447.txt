#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 757 1419 188 450 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:negate(I)I
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_134()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_100()Z
utilMDE.Intern:intern([D)[D
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_70()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_163()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:new_ppt()V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:jj_3R_54()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3_16()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE:sum([D)D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eq(II)Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:lte(II)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3R_135()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:isScalar()Z
daikon.ProglangType:isArray()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_148()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:pairwiseGT([I[I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_106()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:subsetOf([J[J)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.ModBitTracker:num_vars()I
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:setDiff([I[I)[I
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:InvMap()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:ne(II)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eltsLTE([II)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:concat([I[I)[I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:jj_3R_180()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.PptSlice1:arity()I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:jj_3R_98()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_116()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLT([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3_12()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_101()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_77()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3_5()Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_164()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_104()Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_62()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_2_17(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:jj_3R_109()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice2:arity()I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_21()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptName:getSignature()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:present()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:subsetOf([D[F)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3_29()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_126()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_61()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Node:Node()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_110()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.FormatCommand:getCommand()I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:backup(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_114()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaCharStream:FillBuff()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.MathMDE:gcd(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.PptSlice0:arity()I
daikon.ProglangType:isFloat()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_22()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:jj_3R_161()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.JavaParser:jj_3_3()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:union([I[I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:slice([III)[I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_96()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_72()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3_15()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_36()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Debug:logDetail()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:eq(FF)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.Assert:assertTrue(Z)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_81()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_17()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_52()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.ValueTuple:size()I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_80()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_53()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant; | RETURN | 3416 | return null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.PptName:toString()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.ProglangType:dimensions()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_136()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3_20()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfo:relate_var()V
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_125()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
daikon.Quant:gt(II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1153 4 374 2 22 2 1238 2 1334 2 214 2 817 2 387 2 1411 2 
771 6 865 2 116 2 932 2 499 2 248 2 982 2 926 2 617 6 185 2 330 6 
372 2 22 2 872 4 895 2 1373 2 421 2 1375 4 1238 2 746 6 1162 2 340 6 1368 6 1027 6 
309 6 22 6 797 6 992 2 276 8 760 2 875 10 745 4 314 2 364 8 489 4 54 26 950 2 1238 6 973 16 677 4 442 2 588 10 56 28 1190 10 1382 8 868 10 79 2 710 12 1265 2 698 16 699 8 1106 16 427 10 793 4 
509 6 1116 4 
1403 2 
738 2 1065 2 273 2 1117 2 5 2 1252 4 413 2 412 4 416 2 1221 2 1223 2 1071 2 465 2 520 2 382 2 612 2 1265 2 213 2 387 2 19 2 670 2 620 2 22 4 931 2 337 2 799 2 763 2 1238 4 722 2 631 2 1381 4 1011 2 691 2 1103 4 554 2 594 2 176 2 641 2 83 2 233 2 1014 2 851 2 1107 2 601 2 
1297 4 646 8 309 4 45 6 272 2 22 4 1086 2 103 4 797 4 875 15 89 6 856 4 745 2 364 19 1355 6 54 47 802 4 1003 4 1238 4 973 32 588 15 256 6 442 2 56 52 167 2 227 2 1190 6 545 6 1382 6 1010 2 403 4 868 15 710 22 1316 5 731 4 698 32 427 15 1106 32 352 3 
620 2 1008 2 26 2 
247 2 28 2 431 2 457 2 549 2 31 2 451 2 554 2 877 22 492 2 426 2 297 10 543 2 1152 2 
964 2 309 2 88 2 875 2 745 2 364 2 54 4 973 2 588 2 56 6 1256 2 1362 2 1190 4 497 2 169 2 170 2 76 2 868 2 710 2 698 2 408 2 427 2 1106 2 
545 6 978 2 868 4 89 6 710 4 875 4 856 4 489 2 802 4 54 12 698 8 973 8 588 4 1106 8 427 4 56 16 445 2 
620 8 216 2 579 4 673 4 780 4 313 2 624 10 337 2 1305 4 295 14 859 2 763 4 952 2 883 2 278 4 8 2 1222 2 224 2 75 2 1008 6 682 4 242 2 1095 62 26 2 261 2 58 2 692 2 1169 4 349 2 1103 4 713 2 1288 4 305 2 264 2 752 4 998 4 870 2 838 2 354 4 1016 10 
365 2 1422 2 1051 2 146 2 1403 2 1364 2 902 2 1060 2 559 2 125 2 
909 1 740 2 912 2 193 2 1353 2 821 2 1157 2 564 2 1250 2 198 2 6 3 462 3 1358 2 202 2 747 1 827 2 661 2 209 24 1263 2 15 6 834 2 381 32 665 2 211 2 574 2 1365 6 386 2 214 2 1177 2 1178 2 930 4 22 34 391 2 104 16 758 2 485 2 1270 2 1089 2 759 2 580 3 486 2 488 2 1002 3 764 2 940 2 767 12 1274 3 1378 2 941 2 223 1 1188 2 495 2 769 2 683 2 1009 2 1191 4 1279 1 1195 2 229 1 1102 2 693 1 1012 2 1385 2 694 1 304 2 33 2 34 3 1389 2 1295 32 779 3 1109 2 1208 2 1296 6 507 2 126 2 411 4 1300 2 48 2 237 16 1019 2 1215 2 702 2 948 2 1118 1 52 2 1216 2 1306 2 862 1 1023 2 317 2 1307 1 1396 2 953 2 1025 2 1121 6 1309 2 518 24 1028 12 519 2 866 1 141 2 1230 1 788 2 61 2 614 4 250 2 615 1 526 2 425 2 1033 2 1406 8 1408 3 1318 1 1035 5 795 8 429 3 1038 2 967 2 251 16 67 3 432 2 438 2 72 2 1046 2 1238 32 165 4 441 2 443 2 805 1 343 2 725 2 544 2 1052 4 1239 1 726 8 347 2 1428 2 449 2 1344 2 1142 4 1143 16 265 2 266 1 84 2 1349 3 85 3 907 2 353 4 908 2 
22 2 1024 2 
22 4 388 2 1262 2 
195 2 
357 4 0 2 1064 2 360 204 739 2 361 4 2 4 741 6 742 2 3 6 743 2 744 26 1069 2 366 4 1072 6 369 6 9 30 10 2 1075 106 13 2 748 6 14 2 749 46 1077 6 379 4 16 2 380 2 18 20 750 20 1081 18 390 2 754 6 755 8 1083 6 756 6 22 10 1085 2 761 2 762 46 395 2 1093 244 1094 2 765 4 398 12 400 2 1096 20 402 6 401 2 770 2 1097 4 1098 12 30 2 1100 2 776 2 1104 60 405 14 32 84 777 2 1108 2 41 6 42 26 409 4 1110 6 1112 2 410 198 46 12 1115 182 49 2 781 2 50 4 782 8 1119 2 55 336 1120 4 786 2 418 2 787 28 1124 2 59 2 424 8 1125 26 1127 112 790 2 428 6 792 2 794 328 1129 432 68 2 796 2 436 6 434 386 435 6 798 2 1131 2 70 4 800 2 1132 2 71 6 439 2 1133 2 803 2 804 224 1134 2 446 2 447 30 1141 28 448 4 80 2 810 2 81 118 82 6 455 2 454 2 1146 26 1148 6 1150 4 456 10 1154 2 86 2 458 48 816 192 87 4 819 8 820 46 1158 74 822 2 823 82 824 4 1160 432 1161 198 1164 4 461 16 93 2 92 26 825 4 463 132 94 2 464 10 1167 14 466 160 96 2 828 6 832 2 835 198 1174 2 97 6 475 2 479 16 98 6 481 2 102 2 1181 2 109 2 108 70 842 2 843 26 1184 46 1185 2 491 2 493 22 112 2 1187 2 113 8 114 4 846 4 498 6 1199 12 500 12 847 8 1201 8 503 2 1202 2 120 2 849 4 123 2 850 48 1205 2 1206 46 1207 2 506 4 852 2 508 204 128 6 1212 2 853 68 1213 4 129 12 514 4 860 2 1217 2 132 8 1218 14 515 24 135 4 136 30 864 4 1224 50 138 2 867 8 1225 290 139 4 1226 6 142 2 521 2 145 28 524 14 525 2 150 6 1231 6 527 16 1233 4 528 6 153 2 531 2 873 18 535 30 158 198 537 112 540 132 541 6 1238 10 1237 6 882 6 162 6 163 2 884 12 887 20 886 244 888 4 889 2 894 4 893 2 1240 2 172 2 1241 2 173 2 1242 2 552 4 175 20 897 22 555 4 900 4 180 2 179 2 182 2 906 2 558 4 184 6 186 6 187 4 189 4 911 112 1247 4 1246 2 913 2 196 198 1249 6 197 26 1251 2 1254 12 200 2 201 12 914 4 915 228 916 6 917 2 1257 2 919 22 568 4 205 8 207 6 1258 4 1259 4 569 14 1260 2 1261 2 571 10 572 2 923 4 212 20 1266 2 575 6 927 2 576 2 1269 2 578 30 933 6 582 4 935 2 220 2 1273 6 225 30 226 26 1278 2 1280 4 1282 8 1281 4 592 6 1284 4 593 2 1285 4 1286 98 1290 2 595 8 596 2 1291 20 1293 2 597 4 234 4 946 2 602 12 603 12 236 52 1299 4 1302 12 1304 2 604 20 951 6 605 2 240 2 241 4 954 64 243 2 955 26 244 4 1310 2 956 112 245 2 609 4 1312 4 611 32 1315 4 613 6 960 2 616 2 961 4 1317 6 1320 198 1319 2 962 2 1322 6 1323 6 1325 6 1326 4 619 64 963 6 621 6 966 30 252 2 1327 566 969 198 625 140 970 2 626 16 1328 2 971 30 1331 2 1332 18 1333 4 255 244 975 6 630 2 977 86 257 88 1335 2 1336 2 258 2 259 2 1338 2 1339 2 1341 2 634 22 1342 6 637 2 981 2 263 28 1347 4 267 6 640 4 1348 2 269 2 985 2 642 2 644 2 986 14 987 2 988 4 989 10 274 2 1352 2 648 4 649 192 650 2 652 6 654 6 1356 8 1359 2 1360 4 279 2 1361 8 280 4 281 6 657 2 658 2 284 106 286 30 660 6 287 6 997 182 666 2 667 2 290 4 999 2 1000 2 1371 26 292 30 672 2 1001 4 1372 2 294 2 1374 2 675 2 1376 2 678 2 1379 30 684 2 1380 2 687 2 1383 8 301 6 300 4 1013 2 1386 2 697 6 1388 2 306 6 1015 6 307 14 1017 328 1018 4 1392 2 1393 2 703 6 1022 2 704 2 316 66 1395 2 705 4 318 6 320 2 1398 2 1026 4 1399 2 708 2 321 4 322 2 326 60 1405 6 1407 2 716 2 717 2 329 94 1410 198 332 8 1412 92 1037 28 1413 6 335 6 719 4 1041 2 720 2 336 10 1042 2 1043 4 1415 2 338 26 339 2 1417 2 1418 24 1046 2 1420 4 1048 4 341 6 1424 8 344 2 1426 2 345 4 346 54 1057 60 1058 6 350 376 729 2 728 10 1059 2 1430 8 730 2 1061 2 734 6 1062 60 
944 2 1301 2 215 2 275 1 
215 2 1166 2 
620 2 254 2 215 2 1165 2 143 2 1050 2 793 2 
1427 2 215 2 1165 2 
534 2 215 2 1165 2 
1301 2 419 2 1031 2 
215 2 1165 2 
1404 2 419 2 
215 2 854 2 
53 2 1301 2 419 2 
65 2 29 2 1301 2 
1301 2 1433 2 768 2 
310 2 221 2 1301 2 
1301 2 1397 2 607 2 
737 2 419 2 
215 2 1227 2 
65 2 706 2 
1433 2 1214 2 
221 2 836 2 
659 2 1397 2 
419 2 166 2 
1397 2 662 2 
221 2 874 2 
151 2 1433 2 
861 2 65 2 
53 2 1301 2 419 2 1275 2 
53 2 1301 2 419 2 1275 2 131 2 
1192 2 1301 2 419 2 
1301 2 419 2 477 2 
324 2 584 2 766 2 1387 2 
826 4 608 2 483 2 532 2 334 2 156 2 814 2 910 2 375 4 553 2 1235 2 1032 2 474 2 877 6 994 2 476 2 806 2 100 2 
1301 2 845 2 
620 2 143 2 469 2 470 2 
620 2 254 2 1074 2 143 2 469 2 470 2 
620 2 396 2 215 2 1165 2 143 2 793 2 
382 2 1248 2 
620 2 143 2 1078 2 793 2 
221 2 1220 2 
17 2 1397 2 
65 2 1298 2 
1433 2 460 2 
590 2 1433 2 1397 2 
1433 2 1397 2 1147 2 
689 2 1433 2 1397 2 
839 2 1433 2 1397 2 
620 2 561 6 566 2 1055 2 143 2 896 2 869 6 809 2 
419 2 35 2 
948 2 
740 2 193 2 564 2 1358 2 202 2 208 2 15 2 381 6 211 2 925 2 1365 4 386 2 214 2 929 2 930 4 22 26 104 6 758 2 841 2 759 2 1270 2 488 2 764 2 767 8 679 2 399 4 1188 2 1009 2 1191 2 1195 2 229 4 1012 2 694 2 304 2 1295 4 124 2 1109 2 1296 6 411 2 1019 2 1215 2 857 4 52 2 1306 2 317 2 1396 2 417 2 134 2 1121 2 1028 8 866 2 140 2 141 2 957 2 325 2 422 2 250 6 795 2 533 2 438 2 1046 2 72 2 1238 26 165 4 443 2 1052 4 544 2 1428 2 1344 2 1142 2 265 2 177 2 84 4 903 2 353 4 736 2 
740 2 193 2 821 2 564 2 1358 2 202 2 12 2 208 2 15 2 663 2 834 2 381 6 211 2 925 2 1365 6 386 2 214 2 929 2 930 4 22 26 391 2 104 6 758 2 759 2 1270 2 488 2 764 2 1004 2 767 8 679 2 399 4 1188 2 1009 2 1191 2 1195 2 229 2 1012 2 694 2 304 2 1295 4 124 2 1109 2 1296 6 411 2 1019 2 1215 2 857 4 52 2 1306 2 317 2 1396 2 417 2 134 2 1121 2 1028 8 866 2 141 2 325 2 422 2 250 6 795 2 533 2 438 2 1046 2 72 2 1238 26 165 4 443 2 1052 4 544 2 1428 2 1344 2 1142 2 265 2 177 2 84 4 903 2 353 4 736 2 
24 2 
1391 2 1092 2 
1209 4 191 2 1019 2 193 2 130 2 1021 2 277 2 563 2 1358 2 204 10 865 4 1073 8 1363 2 1313 2 248 2 711 2 522 4 148 2 1175 2 152 2 926 2 386 2 617 6 20 2 330 6 331 2 1082 2 333 2 930 2 291 2 1084 4 22 12 488 2 393 8 487 2 296 2 1416 2 583 2 878 4 1046 2 1238 6 73 2 1421 2 1007 2 1188 2 890 2 1135 2 771 6 116 4 979 4 1345 2 980 2 502 2 695 2 406 2 407 2 38 4 353 2 355 2 1296 4 
1209 4 191 2 1019 2 193 2 130 2 1021 2 277 2 563 2 1358 2 368 2 204 10 1073 8 865 4 1363 2 1313 2 248 2 522 4 148 2 152 2 926 2 386 2 617 8 20 2 331 2 1082 2 330 6 333 2 930 2 291 2 1084 4 22 12 488 2 393 8 487 2 296 2 1416 2 583 2 878 4 1046 2 1238 6 73 2 1421 2 1007 2 1188 2 890 2 1135 2 771 8 116 4 636 2 979 4 1345 2 980 2 502 2 695 2 406 2 407 2 36 4 38 4 353 2 185 2 355 2 1296 4 
1209 2 116 2 865 2 1313 2 980 2 695 2 583 2 878 4 148 2 406 2 1421 2 407 2 1007 2 38 4 617 2 20 2 890 2 330 2 
1209 4 191 2 1019 2 193 2 130 2 1021 2 277 2 563 2 1358 2 204 6 865 4 1073 4 1363 2 1313 2 711 2 522 4 148 2 1175 2 152 2 926 2 386 2 617 6 20 2 330 4 331 2 1082 2 333 2 930 2 291 2 1084 4 22 12 488 2 393 4 487 2 296 2 1416 2 583 2 878 4 1046 2 1238 6 73 2 1421 2 1007 2 1188 2 890 2 1135 2 771 6 116 4 979 4 1345 2 980 2 502 2 695 2 406 2 407 2 38 4 185 2 353 2 355 2 1296 4 
1209 4 191 2 1019 2 193 2 130 2 1021 2 277 2 563 2 1358 2 204 6 865 4 1073 4 1363 2 1313 2 711 2 522 4 148 2 1175 2 152 2 926 2 386 2 617 4 20 2 330 6 331 2 1082 2 333 2 930 2 291 2 1084 4 22 12 488 2 393 4 487 2 296 2 1416 2 583 2 878 4 1046 2 1238 6 73 2 1421 2 1007 2 1188 2 890 2 1135 2 771 6 116 4 499 2 979 4 1345 2 980 2 502 2 695 2 406 2 407 2 38 4 353 2 355 2 1296 4 
1209 4 191 2 1019 2 193 2 130 2 1021 2 277 2 563 2 1358 2 204 6 865 4 1073 8 1363 2 1313 2 248 2 711 2 522 4 148 2 1175 2 152 2 926 2 386 2 617 6 20 2 330 6 331 2 1082 2 333 2 930 2 291 2 1084 4 22 12 488 2 393 4 487 2 296 2 1416 2 583 2 878 4 1046 2 1238 6 73 2 1421 2 1007 2 1188 2 890 2 1135 2 771 6 116 4 979 4 1345 2 980 2 502 2 695 2 406 2 407 2 38 4 353 2 355 2 1296 4 
1209 4 191 2 1019 2 193 2 130 2 1021 2 277 2 563 2 1358 2 204 10 865 4 1073 8 1363 2 1313 2 248 2 711 2 522 4 148 2 1175 2 152 2 926 2 386 2 617 6 20 2 330 8 331 2 1082 2 333 2 930 2 291 2 1084 4 22 12 488 2 393 8 487 2 296 2 1416 2 583 2 878 4 1046 2 1238 6 73 2 1421 2 1007 2 1188 2 890 2 1135 2 771 8 116 4 499 2 979 4 1345 2 980 2 502 2 695 2 406 2 407 2 38 4 353 2 355 2 1296 4 
1209 4 191 2 1019 2 193 2 130 2 1021 2 277 2 563 2 1358 2 204 10 865 4 1073 8 1363 2 1313 2 248 2 711 2 522 4 148 2 1175 2 152 2 926 2 386 2 617 6 20 2 330 6 331 2 1082 2 333 2 930 2 291 2 1084 4 22 12 488 2 393 8 487 2 296 2 1416 2 583 2 878 4 1046 2 1238 6 73 2 1421 2 1007 2 1188 2 890 2 1135 2 771 6 116 4 979 4 1345 2 980 2 502 2 695 2 406 2 407 2 38 4 353 2 355 2 1296 4 
359 2 1 1 560 2 191 2 192 2 193 2 195 6 563 2 4 2 367 6 371 7 11 1 204 2 373 6 1073 2 208 2 15 2 1262 6 381 8 383 1 751 2 926 4 386 2 214 2 20 2 1268 6 1082 2 930 4 1084 8 391 2 22 46 758 2 759 2 1090 2 218 2 583 2 767 4 399 4 942 1 771 12 27 8 773 2 406 2 407 2 38 4 1295 2 1109 2 1296 6 411 2 238 1 52 2 783 2 1306 2 784 6 414 2 1121 2 610 2 1313 2 250 6 617 4 795 2 430 2 438 2 72 2 73 2 976 6 629 2 443 2 1135 4 1139 1 1140 1 1344 2 979 6 1345 2 1142 2 980 2 808 2 265 12 453 2 1144 4 1155 2 991 1 459 1 277 2 1159 2 1358 2 282 2 1363 2 995 2 831 10 834 2 1173 2 1365 6 291 2 1180 4 104 6 488 2 487 2 296 2 1007 2 1188 2 1189 2 1009 2 1191 2 685 2 688 2 116 4 1195 2 117 2 499 4 302 6 502 2 695 2 304 2 504 2 124 2 1209 4 1019 2 130 4 1021 2 1396 2 1024 6 1028 4 865 4 141 2 711 2 522 4 148 2 152 2 714 2 330 8 331 2 333 2 718 6 154 2 533 4 1044 2 538 6 1416 2 878 4 1046 2 1238 24 159 2 161 6 1421 2 165 4 885 7 724 6 1049 2 890 2 1052 4 544 2 1054 2 551 2 177 2 901 6 178 6 733 6 353 4 355 2 
359 2 560 2 1155 2 191 2 192 2 195 6 193 2 277 2 1159 2 4 2 563 2 367 6 1358 2 282 2 204 2 373 6 1073 6 208 2 1363 2 995 2 831 10 1262 6 15 2 381 8 834 2 1173 2 751 2 926 4 214 2 1365 6 386 2 1268 6 20 2 1082 2 930 4 1084 8 291 2 1180 4 22 48 391 2 104 6 758 2 759 2 1272 2 1090 2 487 2 488 2 218 2 296 2 583 2 767 8 399 4 1007 2 1188 2 1189 2 1009 2 685 2 1191 4 771 12 688 2 27 8 1195 2 116 4 117 2 773 2 302 6 502 2 695 2 304 2 406 2 407 2 37 2 504 2 1295 2 38 4 124 2 1109 2 1296 6 1209 4 411 4 1019 2 130 4 1021 2 52 2 783 2 784 6 1306 2 1024 6 414 2 1396 2 1121 2 1028 8 865 4 610 2 141 2 1313 2 711 2 248 4 522 4 250 6 148 2 152 2 714 2 617 8 331 2 330 8 333 2 718 6 795 2 154 2 430 2 533 4 438 2 1044 2 538 6 1416 2 878 4 72 2 1046 2 159 2 1238 26 161 6 73 2 1421 2 165 4 976 6 724 6 629 2 443 2 1049 2 890 2 544 2 1052 4 1135 4 1054 2 551 2 979 6 1344 2 1345 2 980 2 1142 4 808 2 901 6 177 2 265 12 453 2 178 6 1144 4 84 2 733 6 353 4 355 2 
359 2 560 2 1155 2 191 2 192 2 195 6 193 2 277 2 1159 2 4 2 563 2 367 6 1358 2 282 2 204 6 373 6 1073 6 208 2 1363 2 995 2 831 10 1262 6 15 2 381 8 834 2 1173 2 751 2 926 4 214 2 1365 6 386 2 1268 6 20 2 1082 2 930 4 1084 8 291 2 1180 4 22 48 391 2 104 6 758 2 759 2 1272 2 1090 2 393 4 487 2 488 2 218 2 296 2 583 2 767 8 399 4 1007 2 1188 2 1189 2 1009 2 685 2 1191 4 771 12 688 2 27 8 116 4 1195 2 117 2 773 2 302 6 502 2 695 2 304 2 406 2 407 2 37 2 504 2 1295 2 38 4 124 2 1109 2 1296 6 1209 4 411 4 1019 2 130 4 1021 2 52 2 783 2 784 6 1306 2 1024 6 414 2 1396 2 1121 2 1028 8 865 4 610 2 141 2 1313 2 711 2 248 4 522 4 250 6 148 2 152 2 714 2 617 8 331 2 330 8 333 2 718 6 795 2 154 2 430 2 533 4 438 2 1044 2 538 6 1416 2 878 4 72 2 1046 2 159 2 1238 26 161 6 73 2 1421 2 165 4 976 6 724 6 629 2 443 2 1049 2 890 2 544 2 1052 4 1135 4 1054 2 551 2 979 6 1344 2 1345 2 980 2 1142 4 808 2 901 6 177 2 265 12 453 2 178 6 1144 4 84 2 733 6 353 4 355 2 
359 2 560 2 191 2 192 2 193 2 195 12 1068 6 563 2 4 2 367 6 203 6 204 6 373 6 1073 6 208 2 15 4 1262 12 381 12 573 6 921 6 751 2 926 4 386 2 214 2 20 2 1268 6 1082 2 930 4 1084 8 391 2 22 52 758 2 759 2 1272 2 393 4 1090 2 218 2 583 2 939 6 767 10 399 6 771 16 27 8 773 2 406 2 407 2 37 2 38 4 1295 4 39 2 1109 2 1296 6 411 4 52 2 783 2 1306 2 784 6 414 2 1121 4 610 2 1313 2 248 4 250 8 617 10 795 4 430 2 438 2 72 2 73 2 976 12 629 2 443 2 444 2 1135 4 1344 2 979 6 1345 2 1142 4 980 2 808 2 265 10 453 2 1144 4 84 2 270 2 1155 2 277 2 1159 2 1358 2 656 6 282 2 1363 2 995 2 831 8 834 2 1173 2 1365 6 1367 6 291 2 1180 4 104 8 293 2 487 2 488 2 296 2 494 2 1007 2 1188 2 1189 2 1009 2 1191 4 685 2 688 2 1195 2 116 4 117 2 1198 2 499 2 118 6 302 6 502 2 695 2 304 2 124 2 1209 4 1019 2 130 4 1021 2 1396 2 1024 12 516 6 1028 10 865 4 141 2 711 2 522 4 148 2 152 2 714 2 330 10 331 2 333 2 718 6 154 2 533 4 1044 2 538 6 1416 2 878 4 1046 2 1238 24 159 2 881 2 161 6 1421 2 165 4 724 6 1049 2 890 2 1052 4 544 2 1054 2 551 2 1431 2 177 4 901 12 178 6 733 12 353 4 185 2 355 2 
1084 2 291 2 22 4 191 2 393 4 487 2 277 2 563 2 296 2 1416 2 583 2 878 2 890 2 771 4 204 4 1073 6 865 4 116 4 1363 2 979 2 711 2 248 2 522 2 695 2 148 2 406 2 926 2 407 2 38 2 617 6 20 2 1082 2 331 2 355 2 330 6 
191 2 193 2 277 2 563 2 1358 2 204 2 1073 6 208 2 1363 2 831 2 1172 2 15 3 834 2 381 8 926 2 386 2 1365 6 214 2 20 2 1082 2 930 4 1084 2 291 2 22 28 391 2 104 6 758 2 759 2 488 2 487 2 296 2 583 2 399 4 1188 2 1009 2 771 4 116 4 1195 2 695 2 304 2 406 2 407 2 504 2 38 2 1295 3 124 2 1109 2 1296 6 505 3 1300 2 48 2 1019 2 948 2 52 2 1396 2 1121 3 865 4 141 2 711 2 248 2 522 2 1402 2 250 6 148 2 1034 2 617 6 330 6 331 2 533 2 536 2 438 2 1416 2 878 2 72 2 1046 2 1238 24 165 4 443 2 890 2 725 2 1052 4 544 2 979 2 1344 2 1345 2 265 4 811 2 353 4 355 2 
1179 2 191 2 355 2 
1179 2 191 2 355 2 
191 6 1067 2 193 2 277 2 1070 4 1358 2 204 6 1073 6 208 2 995 2 831 2 471 2 834 2 381 2 926 4 1365 6 386 2 214 2 288 2 289 2 20 2 1179 2 930 4 291 2 1084 4 1180 2 482 2 22 24 391 2 1087 2 104 2 758 2 759 2 1271 2 488 2 393 4 581 2 676 4 767 4 1188 2 1009 2 1191 4 771 16 1195 2 116 4 499 4 229 2 502 2 304 2 406 4 1204 2 1295 2 38 2 124 2 1109 2 1296 6 1209 4 411 4 1019 2 130 2 52 2 783 2 1306 4 133 2 1396 2 1028 4 865 4 141 2 248 4 522 2 789 2 250 2 152 2 617 12 330 12 533 6 438 2 878 2 1046 2 72 2 159 2 1238 16 73 2 1421 2 165 4 724 2 443 2 891 2 890 2 1052 4 1135 4 1056 2 979 4 1344 2 1243 2 980 2 1142 4 265 4 556 2 181 2 1144 2 1149 2 353 4 185 4 355 4 736 4 
1180 2 22 4 1087 2 1019 2 831 2 394 2 1044 2 1173 2 1092 2 265 2 1238 2 181 2 133 2 753 2 1007 2 724 2 1036 2 
190 2 191 6 1067 2 193 2 277 2 1070 4 1358 2 204 6 1073 6 208 2 995 2 471 2 834 2 381 2 926 4 1365 6 386 2 214 2 289 2 20 2 1179 2 930 4 1084 4 291 2 482 4 22 24 391 2 1087 2 104 2 758 2 759 2 488 2 393 4 676 4 767 4 1188 2 1009 2 1191 4 771 16 1195 2 116 4 499 4 502 2 304 2 406 4 1295 4 38 2 124 2 1109 2 1296 6 1209 4 411 4 1019 2 130 4 1021 2 52 2 783 2 1306 4 133 2 1396 2 1028 4 865 4 141 2 248 4 522 2 789 2 149 2 250 2 152 2 617 12 330 12 533 6 438 2 878 2 1046 2 72 2 159 2 1238 16 628 2 73 2 1421 2 165 4 724 2 443 2 632 2 891 2 890 2 1052 4 1135 4 1056 2 979 4 1344 2 1243 2 980 2 1142 4 265 2 556 2 181 2 1144 2 812 2 1149 2 353 4 185 4 355 4 736 4 
191 6 1067 2 193 2 277 2 1070 4 1358 2 204 6 206 2 1073 6 208 2 995 2 831 2 471 2 834 2 381 2 926 4 1365 6 386 2 214 2 289 2 20 2 99 2 1179 2 930 4 291 2 1084 4 1180 2 482 2 22 24 391 2 1087 2 104 2 758 2 759 2 488 2 393 4 676 4 767 4 1188 2 1009 2 1191 4 771 16 1195 2 116 4 499 4 229 1 502 2 304 2 406 4 1295 2 38 2 124 2 1109 2 1296 6 1209 4 411 4 1019 2 130 4 1021 2 513 2 52 2 1394 2 783 2 1306 4 133 2 1396 2 1028 4 865 4 141 2 248 4 522 2 249 2 789 2 250 2 152 2 617 12 330 12 533 6 438 2 878 2 1046 2 72 2 159 2 1238 16 73 2 1421 2 165 4 724 2 443 2 891 2 890 2 1052 4 1135 4 1056 2 979 4 1344 2 1243 2 980 2 1142 4 265 4 556 2 181 2 1144 2 1149 2 353 4 185 4 355 4 736 4 
188 2 193 2 4 2 364 4 567 10 370 2 376 2 378 4 15 9 381 18 210 2 925 2 924 12 752 2 214 2 386 2 928 2 929 2 21 2 930 4 22 28 391 2 757 2 758 2 759 2 219 2 936 2 767 16 399 10 588 2 1099 8 773 2 231 2 1289 2 1106 4 1295 9 1109 2 1296 6 600 4 43 1 44 2 235 2 949 8 52 2 54 6 1306 4 785 2 606 2 417 2 56 8 1121 9 1123 8 420 12 422 2 250 12 62 2 427 2 1324 2 791 4 795 12 430 2 1130 2 438 2 1330 4 72 2 1329 2 973 4 629 2 443 2 1138 2 633 2 1344 2 450 2 265 2 268 10 811 2 1145 8 89 6 1159 2 1358 2 283 2 467 2 829 2 1169 2 1171 2 1172 2 834 2 1365 6 478 6 998 2 1176 1 669 8 1369 2 104 12 484 2 840 8 673 2 674 2 488 2 107 12 110 2 1377 6 679 8 680 1 1188 2 1009 2 1194 1 1195 2 1010 4 1196 2 1384 24 1200 2 501 2 119 2 694 2 121 1 122 2 304 2 848 8 698 4 124 2 505 2 1210 4 1211 12 311 6 1019 2 1020 4 856 4 1396 2 319 2 134 2 137 1 707 8 1028 16 866 2 868 2 141 2 1030 2 710 4 325 2 1402 2 1232 4 328 2 1409 2 715 4 529 2 530 6 533 2 875 2 536 2 1414 2 539 2 1046 2 1238 22 1419 2 723 2 164 4 165 4 1049 2 544 2 1052 4 546 2 548 2 551 2 174 2 1429 4 899 2 177 12 903 2 904 2 905 2 353 4 354 2 
1324 2 
1324 2 
1324 2 
700 3 1303 2 512 2 651 2 54 4 1219 2 1357 4 56 6 517 2 1122 3 868 2 1229 4 15 3 381 2 427 2 1267 2 577 3 22 10 23 6 251 2 797 2 157 2 875 2 937 2 1238 4 973 2 721 2 588 2 1006 4 74 2 544 2 807 4 1382 4 1143 2 698 2 1106 2 1295 3 183 2 643 2 645 4 
700 2 1303 2 512 2 651 2 364 2 54 4 1219 2 1357 4 56 4 517 2 1122 2 868 2 710 2 1229 4 15 2 381 2 427 2 1267 2 577 2 22 10 23 6 251 2 797 2 157 2 875 2 937 2 1238 4 973 2 721 2 442 2 588 2 1006 4 74 2 544 2 807 4 1382 4 1143 2 698 2 1106 2 1295 2 183 2 643 2 645 4 
700 2 1303 2 512 2 651 2 364 2 54 4 1219 2 1357 4 56 4 517 2 1122 2 868 2 710 2 1229 4 15 2 381 2 427 2 1267 2 577 2 22 10 23 6 251 2 797 2 157 2 875 2 937 2 1238 4 973 2 721 2 442 2 588 2 1006 4 74 2 544 2 807 4 1382 4 1143 2 698 2 1106 2 1295 2 183 2 643 2 645 4 
700 2 1303 2 512 2 651 2 364 2 54 4 1219 2 1357 4 56 4 517 2 1122 2 868 2 710 2 1229 4 15 2 381 2 427 2 1267 2 577 2 22 10 23 6 251 2 797 2 157 2 875 2 937 2 1238 4 973 2 721 2 442 2 588 2 1006 4 74 2 544 2 807 4 1382 4 1143 2 698 2 1106 2 1295 2 183 2 643 2 645 4 
700 2 1303 2 512 2 651 2 364 4 54 4 1219 2 1357 4 56 4 517 2 1122 2 868 2 710 4 1229 4 15 2 381 2 427 2 1267 2 577 2 22 10 23 6 251 2 797 2 157 2 875 2 937 2 1238 4 973 2 721 2 442 4 588 2 1006 4 74 2 544 2 807 4 1382 4 1143 2 698 2 1106 2 1295 2 183 2 643 2 645 4 
1005 2 920 2 1255 2 1401 2 370 2 473 2 
127 2 879 2 155 2 679 2 1128 2 1255 2 818 2 
64 2 392 1 22 10 193 2 1354 2 199 1 938 2 397 2 1238 8 1308 2 242 1 168 2 591 2 1029 2 58 1 1197 2 635 2 570 2 1287 2 377 2 1432 2 1126 2 557 2 733 2 735 1 1063 2 
646 2 965 2 22 6 797 2 89 4 875 6 856 2 364 2 936 2 54 12 1238 6 973 6 416 2 588 6 442 2 56 16 95 2 1382 4 403 2 548 2 868 6 710 5 775 2 1429 2 1316 4 698 6 1106 6 427 6 670 2 1151 2 
813 2 1390 2 1351 2 285 2 815 2 510 2 934 2 1229 2 1080 2 1006 2 1357 2 598 2 389 2 
813 2 1390 2 1351 2 285 2 22 1 815 2 510 2 363 1 934 2 1229 2 1236 2 452 2 1080 4 1238 1 1006 2 1357 2 598 2 389 6 
813 4 1390 2 1351 4 285 2 815 4 510 2 934 2 1229 2 1236 2 452 2 1080 4 1006 2 1357 2 598 2 389 6 
813 8 1390 2 1351 8 285 2 22 1 815 8 510 2 363 1 934 2 1229 2 1236 8 452 6 1080 4 1238 1 1006 2 1357 2 598 2 389 10 
358 10 271 4 1066 6 990 2 1156 2 562 4 194 8 90 6 993 2 7 10 655 4 830 2 1076 36 833 2 472 4 664 10 834 58 1079 2 922 2 1264 2 668 6 1365 248 1366 6 480 2 101 8 1370 6 22 150 391 58 671 17 105 4 1088 90 759 14 106 16 107 4 217 6 1182 4 1091 4 1183 2 585 2 222 90 586 42 111 6 25 4 1186 2 844 42 681 1 298 2 1277 2 1009 8 299 24 686 18 943 16 115 8 1193 2 1194 16 690 10 228 18 772 84 1101 24 229 4 774 4 404 4 696 12 848 34 121 8 232 24 1203 2 1294 8 778 6 43 11 1111 4 1211 22 47 6 947 26 855 16 239 92 51 6 415 4 137 8 1028 28 246 124 709 2 1228 4 1314 4 60 24 523 2 958 4 327 4 1321 26 63 4 622 50 1234 4 66 8 968 6 1039 10 433 6 1040 6 253 4 437 6 876 10 69 4 801 2 1045 12 160 6 1238 134 542 6 974 8 165 88 1337 4 342 10 1423 24 1052 112 892 6 1137 6 1340 6 260 6 547 24 77 4 550 8 1343 6 1344 14 351 10 1346 6 983 4 1244 6 984 2 1350 4 1245 8 
358 2 308 2 356 2 1114 2 1066 4 990 2 701 2 312 2 194 2 855 4 511 2 858 2 1253 4 565 2 7 2 918 2 1123 6 1028 38 246 6 709 2 468 4 1400 2 1168 4 996 2 1170 2 1076 2 323 2 833 2 712 2 664 2 834 2 423 2 147 2 922 2 1365 44 385 2 871 2 837 2 1369 4 101 2 391 2 22 46 671 2 1039 2 433 2 759 2 253 2 106 4 437 2 876 2 627 2 1183 2 972 2 1238 44 880 2 974 2 587 2 165 20 589 2 342 2 1425 2 299 2 1009 2 1052 20 1136 2 1053 2 1137 2 943 4 1340 2 1193 2 115 6 690 2 228 2 171 2 1283 2 78 2 348 2 1101 2 727 2 229 2 1344 2 303 2 351 2 1346 2 898 2 230 2 639 2 1292 2 232 2 983 2 1244 2 1245 2 
271 4 1066 2 647 4 362 2 990 2 1156 2 562 2 90 4 7 4 655 4 1163 16 830 2 1076 6 472 4 834 30 1079 2 922 2 384 4 668 4 1365 104 1366 4 101 2 1370 4 22 78 391 28 671 10 105 4 759 6 106 10 217 4 1182 4 1183 2 490 2 586 16 111 4 25 4 587 10 844 8 1276 4 1009 2 496 2 943 10 1193 2 115 6 1194 8 690 6 228 10 772 24 774 4 303 10 848 30 945 8 1105 2 599 16 40 8 1113 4 47 4 855 10 239 24 51 4 863 2 137 4 57 4 1028 14 246 24 709 2 1400 2 1311 8 323 2 1314 4 1228 4 60 8 958 4 327 4 622 8 623 2 66 4 1039 4 1040 4 433 4 437 4 876 4 801 2 1045 14 627 2 1238 70 1047 4 542 4 160 4 974 2 440 32 165 36 342 4 1052 44 892 4 1137 4 1340 4 260 4 77 4 1343 4 1344 6 638 8 1346 4 639 10 732 4 1244 4 1245 2 
43 2 1211 10 1066 2 990 2 562 2 855 6 993 2 7 2 1028 14 246 8 709 2 1400 2 1076 2 833 2 1314 2 834 12 922 2 1264 2 1365 40 837 2 101 2 391 12 22 28 66 4 1039 2 671 2 433 4 759 2 106 6 437 4 107 2 876 2 1183 2 1238 26 974 2 165 14 1186 2 342 2 1277 2 1009 2 1052 14 943 6 1137 4 115 4 1193 2 1194 6 1340 4 690 2 228 2 77 2 229 2 1344 2 1346 4 404 2 121 2 848 6 1244 4 984 2 1245 2 
91 2 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 
959 1 653 1 315 1 144 1 262 1 618 1 

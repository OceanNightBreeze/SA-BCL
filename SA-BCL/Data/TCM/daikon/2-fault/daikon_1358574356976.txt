#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1324 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (945,1488) 229 (494,1609) (945,1488) 859 (494,1609) 1358 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_169()Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.VarInfoName:hashCode()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_3_30()Z
daikon.Quant:lte(II)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:lt(II)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([I)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_62()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logDetail()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_4()Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_162()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:getConfidence()D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.Invariant:logOn()Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_149()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:subsetOf([S[S)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_73()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:numIntArrays()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:num_samples()I
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(II)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3_12()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ValueTuple:size()I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.JavaParser:jj_3R_76()Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3_19()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_81()Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.Debug:logDetail()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsFloat()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_126()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isIOASet()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice3:arity()I
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_ntk()I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_210()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Ppt:Ppt()V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3_27()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:relate_var()V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:isIntegral()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([F[D)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.string.OneOfString:enabled()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.ModBitTracker:num_sets()I
daikon.ProglangType:isPointerFileRep()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_4(I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
utilMDE.MathMDE:sign(I)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:is_false()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Node:Node()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_vars()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3_10()Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isFloat()Z
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:slice([III)[I
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_samples()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String; | ASSIGN | 10463 | = null
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:elementIsIntegral()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice2:arity()I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:justified()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_22()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:concat([I[I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:jj_3R_74()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 972 | if (x) -> if (!x)
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_161()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_2_15(I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_137()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_86()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_58()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_115()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_21()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.ModBitTracker:split(I)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_54()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.PptSlice1:arity()I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoSequence.Reverse:enabled()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName:hasTypeOf()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_2_17(I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isString()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:isIOAArray()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_102()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexGT([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_122()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_60()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1764 2 1001 2 892 2 808 4 507 2 1537 2 1427 2 1096 2 1265 2 
1601 2 485 2 765 6 64 6 579 2 460 2 172 2 138 2 848 6 173 2 1494 2 
1850 6 1667 6 567 6 1576 2 725 2 507 2 1781 4 203 2 599 4 109 2 1156 6 1256 2 1427 2 
174 10 825 8 1244 8 384 16 42 10 214 6 477 4 75 10 1793 10 865 10 1592 2 531 2 1170 6 1858 8 1201 16 9 2 277 8 429 12 739 4 1684 28 1490 26 936 2 507 6 1775 16 1151 2 1184 2 1693 4 911 4 1427 6 1848 2 
799 6 1164 4 
642 2 
1698 2 1541 2 1822 2 553 2 894 2 449 2 786 2 1596 2 565 2 625 2 507 4 401 2 1149 2 287 2 1097 2 1151 2 907 2 1779 2 1780 4 1841 2 1210 2 692 2 1427 4 472 2 294 2 916 2 38 2 1222 2 104 2 1319 2 651 2 425 2 1171 4 1801 4 1176 2 875 2 193 2 1635 2 1637 4 884 2 1463 2 544 2 1537 2 1695 2 
174 6 825 6 499 6 384 32 42 15 1670 4 214 4 75 15 1793 15 865 15 1170 4 1201 32 1741 2 277 19 1862 6 429 22 1654 5 902 2 1273 6 1293 4 934 4 1682 2 1684 52 1751 4 1490 47 228 6 507 4 489 4 1775 32 1184 2 1692 8 773 4 1693 2 1392 4 1562 3 603 6 1427 4 1757 2 1614 2 
210 2 8 2 1596 2 
1697 2 1343 2 97 2 1539 2 1506 2 1067 2 879 2 1644 22 1348 2 23 2 745 2 731 2 1803 10 1176 2 
1616 2 174 4 384 2 42 2 214 2 75 2 1793 2 865 2 219 2 1201 2 480 2 1014 2 277 2 429 2 393 2 431 2 1382 2 1684 6 1490 4 1775 2 461 2 24 2 1693 2 
934 4 1684 16 1751 4 1490 12 798 2 384 8 228 6 42 4 1775 8 75 4 1793 4 865 4 1201 8 1862 6 911 2 112 2 429 4 
1159 2 1397 2 210 6 1620 2 828 10 861 2 1288 2 421 4 1735 4 1628 2 894 4 836 4 8 2 1675 2 1173 4 1860 2 1594 4 1322 4 838 4 366 14 536 4 1596 8 900 62 1864 2 430 4 117 2 1489 2 794 2 1635 2 657 2 1414 2 1418 10 1780 4 1498 2 1155 2 1241 4 571 2 94 2 268 4 517 2 
642 2 847 2 1024 2 703 2 1493 2 202 2 1112 2 1060 2 1033 2 1813 2 
1 2 1068 1 383 2 611 3 1075 4 501 16 389 1 1544 4 1082 2 955 2 618 2 956 4 617 2 155 32 1549 16 11 2 1291 2 736 2 624 2 1551 2 161 2 1655 2 162 1 1297 2 968 6 1301 4 507 32 1416 2 972 2 1096 2 1099 6 26 2 746 1 851 2 979 2 1208 6 513 3 1211 2 1305 3 1424 2 637 12 1212 2 171 2 1561 2 1428 2 1427 34 1565 5 1438 2 755 2 1568 2 1225 1 757 3 420 2 650 16 1673 24 1443 1 1323 2 1448 2 1231 2 1233 2 1333 2 1458 2 435 24 197 2 1461 2 994 1 664 2 1239 2 63 4 1128 3 775 2 547 2 1341 3 1000 2 1133 3 1475 8 443 12 323 2 1825 2 1479 2 1480 2 781 2 330 2 1250 4 1008 2 1138 2 1011 3 1356 2 332 2 561 1 1015 16 789 3 1831 3 1258 2 223 3 456 2 1147 2 337 2 1022 2 1361 2 688 2 232 2 1610 2 1500 1 1723 2 1034 2 803 2 695 2 1370 1 1036 6 1371 3 1161 2 698 8 913 2 914 2 354 1 475 2 1373 2 578 2 1512 2 1169 4 245 2 924 4 363 1 1518 2 364 2 1519 2 248 32 1379 2 1743 2 1179 2 116 1 1636 2 256 2 937 2 257 2 1384 2 1053 1 1530 8 1388 1 1186 1 1187 2 1188 2 1189 2 133 2 136 1 1190 2 604 2 1394 2 
741 2 1427 2 
801 2 417 2 1427 4 
377 2 
948 16 1401 44 498 2 1403 2 4 2 951 2 953 2 5 16 7 6 957 2 503 8 1409 2 14 2 960 2 969 2 18 2 970 18 19 2 1413 246 506 4 508 48 973 4 509 2 974 4 975 4 976 2 978 4 28 2 27 2 1423 2 1422 10 1429 2 1431 2 1433 2 36 2 1435 2 523 22 527 4 44 36 532 4 988 4 50 4 537 2 1451 4 1455 4 992 2 1459 2 56 2 57 2 1462 2 996 2 60 2 1465 2 1469 4 1003 2 69 2 556 2 1483 2 1007 12 76 16 1010 4 80 22 1486 2 1017 18 564 4 566 2 1021 2 84 4 85 2 86 2 87 2 1496 2 569 2 1499 2 570 2 90 2 1501 2 1502 2 93 2 572 2 96 2 98 2 99 62 576 4 1038 2 102 42 1507 96 103 2 580 2 105 2 1513 4 1514 88 107 2 582 2 1045 2 583 2 110 2 1520 6 585 2 1522 4 1048 2 592 2 121 4 1524 4 1051 2 1525 52 593 2 1057 2 1058 2 597 4 1061 2 601 2 1532 2 131 2 132 2 1536 2 1535 2 134 46 143 2 1064 4 605 2 1070 2 1072 6 1542 2 1079 14 1078 2 146 4 147 4 150 2 151 2 152 2 154 2 622 74 157 4 1088 12 160 2 1090 4 1091 2 1093 2 1092 56 1554 2 1098 2 1101 88 1102 2 636 2 641 6 643 2 644 16 178 2 179 2 648 2 1109 2 186 2 652 2 1114 58 187 2 188 94 189 2 1116 62 655 2 1117 2 1119 4 192 2 1122 2 660 2 1578 4 1124 4 195 2 1125 2 1581 4 662 54 663 2 1126 62 1127 4 1583 4 207 18 667 2 1130 2 209 50 670 94 1131 94 671 4 1134 8 211 94 674 2 676 2 1591 2 682 2 1595 2 1597 48 684 16 1600 2 1146 2 224 4 1604 4 227 2 686 2 233 2 235 12 236 2 237 2 697 14 1619 2 1162 50 1621 2 1623 2 1622 2 700 6 701 2 247 4 706 2 1630 6 1632 2 708 2 1177 2 1633 12 254 2 255 94 710 2 1181 74 714 2 715 30 1183 8 260 4 261 4 265 88 717 2 1641 2 718 2 720 4 269 4 721 2 722 44 272 2 726 4 727 18 1194 2 729 2 1193 2 274 94 1647 4 1649 2 1651 2 278 2 737 4 738 2 280 4 1656 94 1657 2 283 18 284 2 285 2 286 2 742 4 743 2 288 4 1664 2 747 2 1213 4 291 2 293 2 751 6 1668 4 1220 2 753 2 754 2 756 2 295 2 1671 4 1226 2 1672 2 1680 246 297 2 1678 2 762 2 301 2 763 2 1686 2 1234 2 764 2 1687 2 1235 2 308 58 1689 2 770 2 313 2 774 20 1240 8 315 6 317 2 1242 4 1700 2 322 2 326 6 780 4 782 18 327 94 1704 2 783 42 1254 2 333 2 787 12 1712 6 793 2 1713 2 339 90 1715 2 1718 2 800 2 1721 2 341 2 342 94 346 2 347 12 1263 2 349 100 1266 2 1267 2 352 2 807 14 812 2 1271 2 362 2 1738 4 1744 2 1274 2 1749 4 817 4 818 18 1277 2 1279 2 1754 2 375 2 376 2 1281 94 1282 2 1283 4 379 2 1758 2 1285 2 1759 4 380 2 1287 4 1760 6 1761 42 830 2 385 4 387 2 835 2 1290 2 1769 2 841 94 844 58 1294 2 1300 2 398 8 400 2 1774 2 1773 2 403 4 1778 2 404 6 850 4 409 2 1784 2 411 2 857 18 1792 2 416 2 864 2 1316 2 419 2 418 4 1796 18 1795 358 424 6 426 2 868 2 869 6 1804 28 1324 2 872 2 1325 4 1806 30 876 4 1807 8 433 2 878 2 434 12 883 2 882 2 1335 2 1810 50 887 44 1812 2 1817 2 1823 4 447 2 448 12 1353 36 896 30 895 4 451 246 899 2 898 2 901 2 1833 4 458 2 1839 2 462 2 908 22 1364 2 910 2 1844 2 467 2 1368 104 1851 2 1852 4 917 52 1853 4 920 2 1854 2 1856 2 928 2 927 2 1376 8 1859 2 483 2 930 4 484 2 1866 2 1867 2 1868 2 938 2 1385 2 1873 8 1875 2 1878 6 943 2 944 2 1879 2 1880 4 
1809 2 405 1 890 2 661 2 
15 2 661 2 
559 2 1582 2 739 2 915 2 1596 2 661 2 1508 2 
1261 2 661 2 1508 2 
661 2 1508 2 58 2 
1809 2 91 2 159 2 
661 2 1508 2 
1474 2 91 2 
854 2 661 2 
1809 2 1470 2 91 2 
1809 2 889 2 271 2 
1809 2 37 2 771 2 
1809 2 106 2 1855 2 
1809 2 858 2 205 2 
1436 2 91 2 
1378 2 661 2 
520 2 271 2 
37 2 206 2 
106 2 638 2 
1083 2 205 2 
91 2 391 2 
1788 2 205 2 
106 2 406 2 
259 2 37 2 
271 2 459 2 
1809 2 1470 2 414 2 91 2 
1809 2 1470 2 590 2 414 2 91 2 
1809 2 91 2 985 2 
1809 2 91 2 704 2 
1237 2 1209 2 1783 2 1441 2 
709 2 826 4 1588 4 816 2 1644 6 905 2 1302 2 25 2 1199 2 59 2 1137 2 1139 2 408 2 1032 2 1768 2 350 2 1087 2 471 2 
1809 2 1400 2 
1582 2 1442 2 1596 2 1439 2 
559 2 1582 2 1442 2 1772 2 1596 2 1439 2 
1789 2 1582 2 739 2 1596 2 661 2 1508 2 
1683 2 884 2 
1268 2 1582 2 739 2 1596 2 
106 2 356 2 
1046 2 205 2 
271 2 881 2 
37 2 1248 2 
37 2 205 2 539 2 
37 2 205 2 619 2 
37 2 1782 2 205 2 
37 2 205 2 1572 2 
1350 2 1108 2 1596 2 367 2 1460 6 374 6 1582 2 1559 2 
372 2 91 2 
1512 2 
1 2 1075 2 145 2 1544 2 956 4 617 2 155 6 1291 2 1410 2 736 2 1655 2 968 6 1412 2 1301 2 1416 2 507 26 165 2 1096 2 1099 2 979 2 1208 2 1212 2 637 8 1427 26 1564 4 755 2 1225 2 420 2 1676 2 1323 4 1231 2 1332 2 658 2 1333 2 1579 2 880 2 197 2 1461 2 664 2 1239 2 63 4 775 2 547 2 1821 2 1587 4 443 8 1475 2 781 2 1250 4 1008 2 1355 2 1015 6 1258 2 1147 2 338 2 688 2 232 2 1610 2 803 2 695 2 1036 5 1161 2 913 1 354 2 475 2 578 2 245 1 924 4 248 4 813 2 1743 6 129 2 941 2 1188 2 1189 2 133 2 136 4 492 2 
1 2 1075 2 145 2 1544 2 956 4 617 2 155 6 1291 2 1410 2 736 2 161 2 1655 2 968 6 1412 2 1301 2 507 26 1416 2 1096 2 1099 2 979 2 1208 2 1212 2 637 8 1427 26 1564 4 755 2 1225 2 420 2 1676 2 867 2 1323 4 1231 2 1332 2 658 2 1333 2 1579 2 880 2 197 2 1461 2 664 2 1239 2 63 4 775 2 547 2 1821 2 1587 4 672 2 443 8 1475 2 781 2 1250 4 1008 2 1355 2 1015 6 1258 2 1147 2 688 2 232 2 1610 2 803 2 695 2 1617 2 1036 6 1161 2 913 2 354 2 475 2 578 2 245 2 924 4 248 4 813 2 1743 6 129 2 1188 2 1189 2 133 2 136 1 492 2 
740 2 
1185 2 997 2 
494 2 827 4 723 8 1347 2 445 2 325 2 781 2 1482 2 1077 2 273 2 679 2 1250 2 1706 2 897 4 1829 10 1358 2 1601 2 1655 2 968 4 164 2 282 2 1491 2 1836 2 1416 2 507 6 22 2 848 6 232 2 632 4 1420 2 1609 2 1207 2 693 2 514 2 238 2 172 4 1613 2 1430 2 1427 12 859 2 862 2 577 2 924 2 1321 2 1172 4 1800 2 1574 2 485 4 52 2 1454 2 1748 4 765 6 1869 4 197 2 1461 2 127 8 204 2 64 6 775 2 138 2 
494 2 144 4 827 4 723 8 1347 2 445 2 325 2 781 2 1482 2 1077 2 273 2 679 2 1250 2 1706 2 897 4 1829 10 1358 2 1601 2 1655 2 968 4 164 2 282 2 1491 2 1836 2 1416 2 507 6 22 2 848 6 232 2 1494 2 632 4 1609 2 1207 2 693 2 514 2 238 2 1786 2 1613 2 1430 2 172 4 1427 12 1310 2 859 2 862 2 577 2 924 2 1321 2 1172 4 1800 2 1574 2 485 4 1454 2 1748 4 765 8 1869 4 197 2 1461 2 127 8 204 2 64 8 775 2 138 2 
485 2 1347 2 1491 2 862 2 765 2 577 2 1482 2 1077 2 273 2 848 2 632 4 1609 2 897 2 1207 2 1172 4 1358 2 1613 2 172 2 
494 2 827 4 723 4 1347 2 445 2 325 2 781 2 1482 2 1077 2 273 2 679 2 1250 2 1706 2 897 4 1829 6 1358 2 1601 2 1655 2 968 4 164 2 282 2 1491 2 1836 2 1416 2 507 6 22 2 848 4 232 2 1494 2 632 4 1420 2 1609 2 1207 2 693 2 514 2 238 2 172 4 1613 2 1430 2 1427 12 859 2 862 2 577 2 924 2 1321 2 1172 4 1800 2 1574 2 485 4 52 2 1454 2 1748 4 765 6 1869 4 197 2 1461 2 127 4 204 2 64 6 775 2 
494 2 827 4 723 4 1347 2 445 2 325 2 781 2 1482 2 1077 2 273 2 679 2 1250 2 1706 2 897 4 1829 6 1358 2 1601 2 1655 2 968 4 164 2 282 2 1491 2 1836 2 1416 2 507 6 460 2 22 2 848 6 232 2 632 4 1420 2 1609 2 1207 2 693 2 514 2 238 2 172 4 1613 2 1430 2 1427 12 859 2 862 2 577 2 924 2 1321 2 1172 4 1800 2 1574 2 485 4 52 2 1454 2 1748 4 765 4 1869 4 197 2 1461 2 127 4 204 2 64 6 775 2 
494 2 827 4 723 4 1347 2 445 2 325 2 781 2 1482 2 1077 2 273 2 679 2 1250 2 1706 2 897 4 1829 6 1358 2 1601 2 1655 2 968 4 164 2 282 2 1491 2 1836 2 1416 2 507 6 22 2 848 6 232 2 632 4 1420 2 1609 2 1207 2 693 2 514 2 238 2 172 4 1613 2 1430 2 1427 12 859 2 862 2 577 2 924 2 1321 2 1172 4 1800 2 1574 2 485 4 52 2 1454 2 1748 4 765 6 1869 4 197 2 1461 2 127 8 204 2 64 6 775 2 138 2 
494 2 827 4 723 8 1347 2 445 2 325 2 781 2 1482 2 1077 2 273 2 679 2 1250 2 1706 2 897 4 1829 10 1358 2 1601 2 1655 2 968 4 164 2 282 2 1491 2 1836 2 1416 2 507 6 460 2 22 2 848 8 232 2 632 4 1420 2 1609 2 1207 2 693 2 514 2 238 2 172 4 1613 2 1430 2 1427 12 859 2 862 2 577 2 924 2 1321 2 1172 4 1800 2 1574 2 485 4 52 2 1454 2 1748 4 765 6 1869 4 197 2 1461 2 127 8 204 2 64 8 775 2 138 2 
494 2 827 4 723 8 1347 2 445 2 325 2 781 2 1482 2 1077 2 273 2 679 2 1250 2 1706 2 897 4 1829 10 1358 2 1601 2 1655 2 968 4 164 2 282 2 1491 2 1836 2 1416 2 507 6 22 2 848 6 232 2 632 4 1420 2 1609 2 1207 2 693 2 514 2 238 2 172 4 1613 2 1430 2 1427 12 859 2 862 2 577 2 924 2 1321 2 1172 4 1800 2 1574 2 485 4 52 2 1454 2 1748 4 765 6 1869 4 197 2 1461 2 127 8 204 2 64 6 775 2 138 2 
1396 6 494 2 1 2 273 2 956 4 13 2 1410 2 736 2 1655 2 968 6 282 2 741 6 1416 2 507 24 22 2 1420 2 979 2 1207 2 1208 2 514 2 1212 12 1426 4 1430 2 1427 46 750 2 980 7 525 2 1437 6 46 1 1676 4 1231 2 1453 1 1454 2 302 4 53 2 765 4 993 2 1461 2 1239 2 63 4 64 12 775 2 1475 2 552 2 1005 2 325 2 781 2 1482 2 1250 4 1008 2 1706 2 1009 2 1012 1 334 6 1015 6 562 2 790 6 796 2 1491 2 803 2 1036 6 805 2 100 6 358 2 577 2 578 2 1509 2 1511 2 1044 2 1743 6 586 1 1748 4 594 6 127 2 1056 2 373 6 377 6 133 2 824 2 606 1 827 8 1075 2 1077 2 386 10 1544 2 616 2 617 2 155 8 837 2 1085 2 1771 2 164 4 1299 2 1301 2 1096 2 848 8 632 4 1099 2 1777 2 637 4 172 4 1563 2 1564 4 1105 6 859 2 862 2 417 6 182 2 649 6 1321 2 1800 2 656 1 1574 2 432 8 1333 2 1579 2 197 2 886 6 204 2 666 2 669 2 1821 2 443 4 1346 2 1347 2 445 2 212 2 679 4 897 4 1829 2 1358 2 1601 4 1360 6 1836 2 229 2 460 4 232 2 1609 2 238 2 693 2 1613 2 695 2 696 1 1161 2 913 2 918 1 1375 1 245 2 924 4 926 7 1172 4 248 2 249 2 485 4 1869 6 1870 6 1874 6 264 2 1188 2 1189 2 
1396 6 824 2 494 2 1 2 827 8 1075 4 273 2 1077 2 386 10 616 2 1544 4 617 2 956 4 837 2 155 8 1085 2 13 2 1410 2 736 2 1771 2 1655 2 968 6 1299 2 164 4 282 2 1301 4 741 6 507 26 1416 2 1096 2 22 2 848 8 1099 2 1420 2 632 4 1777 2 1207 2 979 2 1208 2 1212 12 637 8 514 2 1426 4 1427 48 1430 2 172 4 1563 2 750 2 1564 4 1105 6 859 2 525 2 1437 6 862 2 417 6 182 2 649 6 1321 2 1676 4 1800 2 1323 2 1574 2 1231 2 432 8 1454 2 302 4 53 2 1333 2 765 8 194 2 1579 2 993 2 197 2 1461 2 1239 2 886 6 1694 2 204 2 666 2 63 4 64 12 775 2 669 2 1821 2 1475 2 443 8 552 2 1346 2 1347 2 212 2 1005 2 445 2 325 2 1482 2 781 2 679 4 1008 2 1250 4 1706 2 1009 2 897 4 1829 2 334 6 1358 2 1015 6 562 2 790 6 1601 4 1360 6 796 2 1491 2 1836 2 229 2 232 2 1609 2 693 2 238 2 803 2 1613 2 695 2 1036 6 1161 2 805 2 913 2 100 6 358 2 577 2 578 2 1509 2 1511 2 245 2 924 4 1044 2 1172 4 248 2 249 2 1743 6 485 4 1748 4 594 6 1869 6 1870 6 373 6 1056 2 127 6 1874 6 264 2 1188 2 377 6 1189 2 133 2 138 4 
1396 6 824 2 494 2 1 2 827 8 723 4 1075 4 273 2 1077 2 386 10 616 2 1544 4 617 2 956 4 837 2 155 8 1085 2 13 2 1410 2 736 2 1771 2 1655 2 968 6 1299 2 164 4 282 2 1301 4 741 6 507 26 1416 2 1096 2 22 2 848 8 1099 2 1420 2 632 4 1777 2 1207 2 979 2 1208 2 1212 12 637 8 514 2 1426 4 1427 48 1430 2 172 4 1563 2 750 2 1564 4 1105 6 859 2 525 2 1437 6 862 2 417 6 182 2 649 6 1321 2 1676 4 1800 2 1323 2 1574 2 1231 2 432 8 1454 2 302 4 53 2 1333 2 765 8 194 2 1579 2 993 2 197 2 1461 2 1239 2 886 6 1694 2 204 2 666 2 63 4 64 12 775 2 669 2 1821 2 1475 2 443 8 552 2 1346 2 1347 2 212 2 1005 2 445 2 325 2 1482 2 781 2 679 4 1008 2 1250 4 1706 2 1009 2 897 4 1829 6 334 6 1358 2 1015 6 562 2 790 6 1601 4 1360 6 796 2 1491 2 1836 2 229 2 232 2 1609 2 693 2 238 2 803 2 1613 2 695 2 1036 6 1161 2 805 2 913 2 100 6 358 2 577 2 578 2 1509 2 1511 2 245 2 924 4 1044 2 1172 4 248 2 249 2 1743 6 485 4 1748 4 594 6 1869 6 1870 6 373 6 1056 2 127 6 1874 6 264 2 1188 2 377 6 1189 2 133 2 138 4 
1396 6 494 2 1 2 723 4 273 2 6 6 956 4 13 2 1410 4 736 2 1655 2 968 6 282 2 741 12 507 24 1416 2 22 2 1420 2 979 2 1207 2 1208 4 514 2 1212 10 1426 4 1430 2 1427 52 750 2 518 2 525 2 1437 6 1676 4 1231 2 1454 2 302 4 53 2 765 10 540 2 993 2 1461 2 1239 2 1694 2 63 4 64 16 775 2 1475 4 552 2 1005 2 325 2 1482 2 781 2 1250 4 1008 2 1706 2 1009 2 334 6 1015 8 562 2 790 6 796 2 1491 2 1494 2 803 2 1036 6 805 2 100 6 358 2 577 2 578 2 1509 2 1511 2 1044 2 1739 2 1743 8 113 6 1748 4 1278 6 594 12 127 6 373 6 1059 6 377 12 133 2 138 4 824 2 827 8 1075 4 1077 2 833 6 386 8 1544 4 616 2 617 2 155 12 837 2 1085 2 845 2 1771 2 164 4 1299 2 1301 4 1096 2 848 10 632 4 1099 4 1777 2 170 2 637 10 172 4 640 6 1563 2 1564 6 1105 12 859 2 860 2 862 2 417 12 182 2 423 2 649 6 1321 2 1800 2 1323 2 1574 2 432 8 1333 2 194 2 1579 2 197 2 886 6 204 2 666 2 669 2 1821 2 443 10 1346 2 1347 2 445 2 212 2 679 4 897 4 1829 6 1358 2 1601 4 1360 6 1832 6 225 6 1836 2 229 2 230 2 460 2 232 2 1609 2 693 2 238 2 1613 2 695 2 1161 2 913 2 1625 6 245 2 924 4 1172 4 248 4 249 2 485 4 1869 6 1870 12 1874 6 264 2 1188 2 1189 2 
827 2 723 4 862 2 445 2 325 2 577 2 273 2 1077 2 1482 2 1829 4 1321 2 1172 2 1800 2 1574 2 1601 2 485 4 1748 2 282 2 765 6 1869 2 1836 2 848 6 1420 2 127 6 632 2 1207 2 204 2 64 4 238 2 514 2 1427 4 1430 2 1613 2 172 4 138 2 
1 2 827 2 1077 2 273 2 1198 2 386 2 617 2 956 4 155 8 736 2 1655 2 968 6 282 2 507 24 1416 2 22 2 1096 2 631 2 848 6 1420 2 632 2 1099 3 979 2 1207 2 1208 3 514 2 1212 4 1561 2 172 4 1427 28 1430 2 1564 4 862 2 1321 2 1676 2 1679 2 1800 2 1574 2 1231 2 1233 2 1333 2 765 6 1123 2 1579 2 197 2 1461 2 1239 2 204 2 63 4 64 4 775 2 1821 2 445 2 325 2 781 2 1482 2 1250 4 1008 2 1829 2 1015 6 1601 2 1022 2 1836 2 232 2 691 2 238 2 1613 2 695 2 1036 6 1161 2 913 2 577 2 578 2 1512 2 245 2 924 4 1172 2 248 3 1743 6 485 4 1748 2 1869 2 1056 2 127 6 1188 2 1877 3 1189 2 133 2 138 2 
1407 2 445 2 1836 2 
1407 2 445 2 1836 2 
1538 2 494 2 1 2 827 4 723 4 2 2 1075 4 1077 4 386 2 1544 4 1407 2 956 4 617 2 155 2 12 2 1653 2 736 2 1655 2 968 6 164 2 282 2 1301 4 507 16 1416 2 1096 2 848 12 632 2 979 2 289 2 637 4 1212 4 1426 2 1427 24 172 4 1218 2 859 2 1669 2 862 2 1318 4 1676 6 654 2 1231 2 302 2 1333 2 1577 2 765 12 1579 2 197 2 1461 2 1339 2 1239 2 314 2 63 4 64 16 775 2 316 2 1821 2 1701 2 443 4 1346 2 445 6 325 2 781 2 679 4 328 2 1250 4 1008 2 784 2 897 4 1829 6 1358 2 1015 2 81 4 1601 4 1836 4 229 2 460 4 232 2 1494 4 1609 2 693 2 803 4 95 2 1613 2 695 2 1036 6 1161 2 913 2 578 2 245 2 924 4 1172 2 248 2 249 2 813 4 1743 2 485 4 1049 2 1748 2 1869 4 373 2 127 6 1189 2 133 2 136 2 138 4 
1538 2 1218 2 239 2 552 2 1669 2 1347 2 507 2 197 2 1509 2 373 2 386 2 997 2 1546 2 1212 2 1426 2 33 2 1427 4 
945 2 494 2 1 2 827 4 723 4 2 2 1075 4 1077 4 1544 4 956 4 617 2 155 2 736 2 1655 2 968 6 164 4 282 2 1301 4 507 14 1416 2 1096 2 848 12 632 2 979 2 637 4 1212 2 1427 20 172 4 1218 2 859 2 1669 2 862 2 1318 2 1676 4 1573 2 1231 2 302 2 1333 2 1577 2 765 12 1579 2 197 2 1461 2 1339 2 1239 2 314 4 63 4 64 16 775 2 316 2 1821 2 443 4 1346 2 445 4 325 2 781 2 679 4 328 2 1250 4 1008 2 1706 2 784 2 897 4 1829 4 1358 2 1015 2 81 2 1359 2 1601 4 1488 2 1836 4 229 2 460 4 232 2 1494 4 1609 2 693 2 803 2 95 2 1613 2 695 2 1036 6 1161 2 913 2 578 2 245 2 924 4 1172 2 248 4 249 2 813 4 1743 2 485 4 1049 2 1748 2 1869 4 127 6 1189 2 133 2 138 4 
1538 2 494 2 1 2 827 4 723 4 2 2 1075 4 1077 4 386 2 1544 4 1407 2 956 4 617 2 155 2 12 2 736 2 1655 2 968 6 164 4 282 2 1301 4 507 16 1416 2 1095 2 1096 2 848 12 632 2 979 2 637 4 1212 4 1426 2 1427 24 172 4 1218 2 859 2 1669 2 862 2 1567 2 1318 4 1676 6 1231 2 874 2 302 2 1333 2 1577 2 765 12 1579 2 197 2 1461 2 1339 2 1239 2 314 2 63 4 64 16 775 2 316 2 1821 2 443 4 1346 2 445 6 325 2 781 2 679 4 328 2 1250 4 1008 2 1706 2 784 2 897 4 1829 6 1358 2 1015 2 81 4 1601 4 1836 4 229 2 460 4 232 2 1494 4 1609 2 693 2 803 4 95 2 1613 2 695 2 1036 6 1161 2 913 2 578 2 245 2 924 4 1172 2 248 2 249 2 813 4 1743 2 485 4 1049 2 1748 2 1182 2 1869 4 373 2 127 6 596 2 1189 2 133 2 136 1 138 4 
946 2 0 2 947 6 1 2 949 3 950 2 3 2 952 2 954 2 955 2 956 402 958 4 13 2 961 112 962 2 964 4 963 3 16 2 965 3 17 2 966 10 968 10 967 558 21 20 20 36 971 80 26 16 979 2 29 2 30 10 31 2 32 2 34 2 35 2 981 2 982 2 983 3 39 24 40 3 42 6 43 22 984 2 986 20 987 4 45 2 47 2 989 156 990 3 49 2 54 2 55 38 61 2 62 1 63 480 998 8 999 2 67 83 66 34 68 2 70 2 1004 2 71 2 72 3 73 2 1005 2 74 8 75 6 1006 12 1008 2 77 2 78 2 1011 2 1013 2 1015 32 1016 2 1018 2 1019 2 82 2 83 2 1023 4 88 6 1026 4 1029 38 1030 80 1031 2 1034 2 92 2 1035 80 1036 1112 101 2 1037 6 1039 2 1040 2 1041 2 1043 2 108 2 111 2 114 2 1050 2 115 2 119 2 118 2 120 2 122 2 1055 2 1054 38 128 2 129 2 130 2 133 2 135 1 137 2 136 3 140 2 141 2 139 2 1063 95 1065 2 1068 1 1071 2 1073 60 145 2 1076 2 149 2 148 3 1082 2 1081 48 153 10 155 126 156 2 1085 2 158 2 1089 120 1096 8 166 80 1099 16 168 6 1100 78 169 3 170 2 171 2 1103 2 1104 2 175 3 1106 2 177 2 1107 2 180 2 182 2 1110 2 184 80 185 2 1111 2 1113 2 1115 18 190 2 191 2 1118 2 1120 2 1121 6 1123 2 196 16 197 2 200 38 199 2 201 2 1128 3 208 2 1132 78 1135 2 213 78 1136 4 215 2 217 3 218 3 1138 2 1141 18 220 14 221 4 1143 9 1144 8 1145 234 222 2 223 2 226 8 1148 2 230 4 231 2 232 2 1150 2 234 2 1152 2 1154 2 1157 2 1158 54 1160 1 1161 4 1163 3 240 78 241 2 242 2 1165 2 1167 2 1168 2 243 2 1169 32 1170 4 245 324 244 10 246 4 1174 2 1173 2 248 110 1175 6 250 2 1178 24 251 2 253 2 252 2 1180 4 256 2 257 2 1184 2 258 2 262 2 1186 1 263 2 264 16 1187 2 266 78 1188 2 1189 2 267 2 268 2 1190 2 1191 2 1192 2 1195 2 275 22 1198 2 1196 78 1197 4 1200 22 1201 12 276 2 277 6 279 2 1202 3 1203 12 1204 2 1205 80 1206 2 1208 46 290 2 1211 2 1212 10 1214 2 1215 2 1216 3 1217 2 1221 4 1225 3 1224 2 1227 2 296 2 1228 2 1230 2 298 2 300 80 1231 84 1232 36 303 20 305 12 304 2 306 2 307 2 309 4 310 2 1236 2 311 34 312 12 1238 2 1239 2 318 10 319 6 320 10 321 8 1243 2 1245 2 1246 2 323 2 1249 2 329 8 1250 8 1251 2 331 2 1253 2 332 2 1255 24 335 2 1257 2 336 2 1259 2 1260 4 340 2 343 2 344 10 345 2 1262 2 348 2 1264 2 351 78 353 2 1269 4 355 2 354 2 357 2 1270 2 360 2 359 80 361 2 1272 11 365 2 1275 2 1276 78 368 2 370 2 378 3 1284 2 1286 2 381 78 382 2 384 12 1289 3 386 2 388 4 389 1 390 4 1292 2 392 2 394 124 1295 38 395 2 1297 2 396 24 1298 26 1299 2 397 2 399 2 402 16 1303 2 407 10 1304 20 1305 2 410 2 1306 1 1307 3 412 2 413 2 1309 2 1312 4 415 2 1314 2 1317 38 421 2 422 2 423 2 1320 2 427 2 429 10 428 2 1327 8 1326 32 1328 2 1330 16 1329 2 1331 36 1332 2 1333 8 1334 2 435 61 437 2 436 22 1336 6 1337 2 438 2 1338 2 439 4 440 1 1340 60 441 3 1341 2 1342 26 442 2 1344 2 443 183 1345 2 444 3 446 2 1349 2 1351 24 1352 2 1354 2 449 2 1355 86 450 4 1356 2 1357 7 452 2 453 2 454 2 455 2 456 14 457 2 1362 2 1363 2 1365 2 463 2 1366 3 464 158 466 2 1367 3 469 2 468 2 470 3 1371 2 473 4 1372 2 474 2 1373 2 476 2 478 2 1374 4 482 2 481 10 1379 2 1380 2 1381 2 486 38 1383 3 487 2 488 2 1388 1 1390 2 1391 2 1392 4 490 2 491 2 1393 2 492 2 1394 2 1395 2 495 2 1398 2 1399 2 497 2 1404 3 1405 2 501 52 1406 14 502 2 1408 2 504 20 1410 46 505 9 1411 8 1412 2 1416 2 507 966 1419 2 510 78 1421 102 511 4 512 78 513 2 1425 20 1424 2 515 38 1427 1174 1428 2 516 2 1432 170 518 2 1434 14 524 2 525 8 526 4 1438 2 528 158 529 3 1440 2 533 2 1443 15 534 2 1446 2 1447 10 535 80 536 2 1448 2 1449 4 1452 3 538 2 1456 60 1457 40 1458 2 541 2 1461 2 543 2 545 2 1464 3 1466 2 546 2 1467 2 1468 2 548 2 549 60 550 2 1473 2 1475 84 1477 2 1478 2 1481 2 1479 2 1480 2 557 2 1484 6 1485 2 561 1 562 8 563 3 1490 18 1495 8 1497 78 1500 13 573 2 575 2 574 76 578 2 1510 3 581 2 1516 4 1517 3 1519 2 584 80 1521 2 589 2 588 2 1523 2 591 20 1526 2 1527 78 1528 3 1530 14 598 2 600 80 1533 82 1534 4 604 2 1540 4 607 38 608 2 610 2 611 2 612 2 613 3 614 24 1543 38 616 4 618 2 617 2 1545 38 1547 2 1548 2 621 2 1549 14 1550 158 620 38 623 2 1551 14 626 2 1552 38 627 3 628 2 630 2 1555 4 631 2 1556 156 1557 78 633 2 634 2 635 2 1558 2 637 178 1560 2 1564 12 1566 2 645 38 1568 2 1569 2 646 3 647 66 650 100 1570 2 1571 2 658 4 659 4 1575 2 1580 78 1584 18 665 2 666 2 1589 2 673 3 675 2 677 2 678 2 681 2 680 104 1593 76 1598 2 683 38 685 2 1599 2 1603 2 687 2 1606 4 1607 2 689 2 690 3 1611 2 1612 2 694 2 1614 4 695 2 1615 2 1618 2 698 14 699 2 702 2 1624 2 1626 2 1627 2 1629 2 707 2 1631 2 1634 2 711 78 1636 2 1638 2 716 2 1639 80 1640 2 719 1 724 2 1643 2 1644 6 1645 2 728 10 1646 3 730 2 1648 2 732 2 1650 6 733 3 1654 6 736 82 1655 2 1658 2 744 2 1659 38 1660 2 1661 2 1662 2 1663 2 1665 3 749 2 1666 2 750 22 752 80 757 2 1673 15 1674 76 758 4 1676 2 1679 2 760 3 1681 2 761 24 1684 24 766 2 767 2 1688 22 769 4 1690 6 768 112 1691 2 772 80 1692 8 775 2 1696 2 776 2 777 20 778 4 1702 2 1703 2 781 2 1705 2 785 2 1707 2 1708 3 1709 2 1710 2 1711 2 789 3 788 14 791 22 792 80 795 2 796 8 797 38 1714 38 1716 2 1717 106 1722 2 802 2 1723 2 1724 3 803 18 804 8 1726 2 806 2 1727 2 1728 18 1731 38 1732 78 809 2 810 4 1733 2 811 2 1734 1 1735 2 1736 2 1737 2 1739 2 1740 2 1741 2 1742 4 1743 18 814 2 1746 22 1747 3 1751 4 1750 40 1752 2 819 2 1753 38 822 2 1755 2 1756 2 823 2 825 6 829 2 831 66 832 2 1762 2 834 6 1766 1 1765 2 1767 4 839 4 840 2 1770 2 842 38 843 2 845 2 846 2 1775 12 1776 1 849 10 851 2 852 2 853 2 1785 1 855 4 856 78 1787 2 1790 2 860 2 863 2 1793 6 1794 234 865 6 1797 2 866 10 1799 38 870 2 1802 38 1805 2 873 80 877 2 880 2 1808 34 885 2 888 16 1814 2 1815 3 1816 2 1818 2 1821 2 1819 2 1820 2 1824 2 891 166 1826 2 893 6 1827 2 1828 2 903 10 1830 4 1834 2 1837 8 904 12 906 2 1840 2 909 2 1842 2 1843 2 1846 3 1849 2 912 4 913 314 914 2 919 2 921 3 922 2 925 2 924 8 923 4 1862 6 1865 6 933 2 935 2 937 2 1872 2 1871 156 939 40 940 2 1877 2 1876 16 
1564 2 177 2 244 4 155 2 190 2 453 2 248 2 1015 2 1743 2 1410 6 253 2 966 2 399 2 507 2 1838 2 1099 2 1337 2 1722 2 690 2 1662 2 1208 2 407 2 1188 2 1427 2 
1564 2 177 2 244 4 155 2 190 2 453 2 248 2 1015 2 1743 2 1410 6 253 2 966 2 399 2 507 2 1838 2 1099 2 1337 2 1722 2 690 2 1662 2 1208 2 407 2 1188 2 1427 2 
1564 2 177 2 244 4 155 2 190 2 453 2 248 2 1015 2 1743 2 1410 6 253 2 966 2 399 2 507 2 1838 2 1099 2 1337 2 1722 2 690 2 1662 2 1208 2 407 2 1188 2 1427 2 
1642 2 825 4 39 3 1402 2 384 2 42 2 75 2 986 4 1793 2 865 2 216 2 650 2 501 2 1170 2 1201 2 155 2 1861 3 248 3 1178 3 1602 2 1020 2 1684 5 303 4 1685 2 1490 4 21 4 507 4 125 2 1775 2 369 4 312 2 542 2 1722 2 1421 6 1208 3 1425 4 1188 2 1534 2 1427 10 1504 2 
1642 2 825 4 39 2 1402 2 384 2 42 2 75 2 986 4 1793 2 865 2 216 2 650 2 501 2 1170 2 1201 2 155 2 277 2 1861 2 248 2 429 2 1178 2 1602 2 1020 2 1684 4 303 4 1685 2 1490 4 21 4 507 4 125 2 1775 2 369 4 1184 2 312 2 542 2 1722 2 1421 6 1208 2 1425 4 1188 2 1534 2 1427 10 1504 2 
1642 2 825 4 39 2 1402 2 384 2 42 2 75 2 986 4 1793 2 865 2 216 2 650 2 501 2 1170 2 1201 2 155 2 277 2 1861 2 248 2 429 2 1178 2 1602 2 1020 2 1684 4 303 4 1685 2 1490 4 21 4 507 4 125 2 1775 2 369 4 1184 2 312 2 542 2 1722 2 1421 6 1208 2 1425 4 1188 2 1534 2 1427 10 1504 2 
1642 2 825 4 39 2 1402 2 384 2 42 2 75 2 986 4 1793 2 865 2 216 2 650 2 501 2 1170 2 1201 2 155 2 277 2 1861 2 248 2 429 2 1178 2 1602 2 1020 2 1684 4 303 4 1685 2 1490 4 21 4 507 4 125 2 1775 2 369 4 1184 2 312 2 542 2 1722 2 1421 6 1208 2 1425 4 1188 2 1534 2 1427 10 1504 2 
1642 2 825 4 39 2 1402 2 384 2 42 2 75 2 986 4 1793 2 865 2 216 2 650 2 501 2 1170 2 1201 2 155 2 277 4 1861 2 248 2 429 4 1178 2 1602 2 1020 2 1684 4 303 4 1685 2 1490 4 21 4 507 4 125 2 1775 2 369 4 1184 4 312 2 542 2 1722 2 1421 6 1208 2 1425 4 1188 2 1534 2 1427 10 1504 2 
319 2 1311 2 634 2 1383 2 959 2 1018 2 
519 2 1355 2 1383 2 1767 2 307 2 3 2 1607 2 
1397 1 1219 2 551 2 1069 2 1223 2 1315 2 1166 2 530 1 705 2 1675 1 1140 2 1444 2 10 1 991 1 1086 2 1652 2 1745 2 1296 2 507 8 1870 2 1027 2 232 2 1608 2 1811 2 1129 2 1427 10 
1002 2 825 4 1822 2 384 6 42 6 75 6 1763 2 1793 6 865 6 422 2 785 2 1170 2 1201 6 277 2 1862 4 429 4 1654 4 964 2 1019 2 1684 16 1751 2 1490 12 507 6 1775 6 907 2 1184 2 1692 2 1392 2 635 2 1427 6 
21 2 507 1 1415 1 89 2 1374 2 198 2 986 2 1042 2 977 2 1515 2 942 2 1425 2 48 2 1377 6 734 2 1427 1 931 2 1487 4 
1042 2 977 2 1515 2 942 2 48 2 1425 2 1377 6 21 2 89 4 734 4 1374 4 198 2 931 2 1487 4 986 2 
21 2 507 1 1415 1 89 8 198 2 1374 8 986 2 1042 8 977 2 1515 6 942 2 1425 2 48 2 1377 10 734 8 1427 1 931 2 1487 4 
977 2 942 2 48 2 1425 2 1377 2 21 2 89 2 734 2 1374 2 198 2 931 2 1487 2 986 2 
1063 22 493 2 607 4 1066 4 381 6 609 1 1289 2 613 2 500 24 1080 4 1646 2 1196 4 1543 4 834 4 956 88 1084 6 156 8 1550 16 842 4 394 12 736 14 965 2 281 8 967 124 163 24 627 6 971 6 507 134 1417 4 1556 18 1557 24 166 6 849 8 510 6 1205 6 1100 10 748 2 32 8 856 6 292 10 1427 150 1432 34 522 18 40 2 41 10 43 15 181 4 528 16 1317 4 1794 84 184 6 1229 2 299 10 989 17 1802 4 300 6 535 6 873 6 1231 14 51 90 1580 24 200 4 1336 2 63 112 67 8 668 26 1132 6 1586 24 443 28 1345 8 1476 8 779 2 891 50 1590 8 324 2 213 6 893 4 1136 4 558 2 1006 7 1252 4 680 42 560 2 450 4 79 4 1143 7 1145 92 792 6 797 4 1714 4 1717 42 1719 4 1028 2 1720 90 1029 4 1030 24 1497 6 464 16 1845 4 351 6 1035 6 1036 248 1161 8 913 58 240 10 1730 2 1732 10 359 6 921 4 245 58 1272 11 932 2 584 6 1863 26 711 6 1276 10 713 2 1527 10 1871 36 1753 4 126 12 939 2 371 4 821 2 266 6 1639 6 136 4 1062 2 
1585 2 1471 2 1586 2 496 2 443 37 1345 2 1476 2 270 2 324 2 1074 2 555 2 500 2 558 2 615 4 956 20 560 2 1142 2 156 2 1550 4 735 2 736 2 163 2 967 6 627 3 1553 2 1835 4 1094 2 629 2 507 44 1025 4 1417 2 1556 2 166 2 568 2 167 2 1100 2 1205 2 464 4 639 2 32 2 292 2 1308 2 1427 46 1035 2 1369 2 1036 45 1161 2 913 3 1791 2 41 2 1729 2 240 2 1313 2 1732 2 359 2 528 4 921 1 245 3 1857 2 1798 2 1677 2 653 2 759 2 989 2 299 2 1445 2 1175 4 300 2 932 2 584 2 1231 2 587 2 815 2 1052 2 1276 2 712 2 1527 2 713 2 1871 2 1529 2 1531 2 772 6 995 2 820 2 821 2 1280 2 63 20 65 2 136 2 602 2 67 6 142 2 
607 4 381 4 613 2 1543 4 956 36 156 2 1550 10 842 4 394 14 736 6 965 2 967 24 627 2 507 70 1556 10 166 4 849 4 1100 4 1205 4 510 4 32 2 856 4 1427 78 1432 30 521 4 176 4 43 8 528 10 1317 4 1794 24 183 4 184 4 866 2 1798 10 989 10 871 32 1802 4 535 4 300 4 1231 6 873 4 1450 2 200 4 63 44 65 10 67 6 1132 4 1471 2 1699 16 443 14 1345 2 779 2 891 8 324 2 1247 2 213 4 1136 4 893 2 680 8 450 4 560 2 1143 3 1145 24 792 4 797 4 1714 4 1717 16 1029 4 1030 8 1497 4 465 4 464 10 1725 8 351 4 1847 2 1503 4 1035 4 1036 104 1161 2 913 28 240 4 1732 6 359 4 245 30 1047 2 479 4 929 8 932 2 584 4 711 4 712 2 1276 4 713 2 1527 4 1871 6 123 2 124 8 1753 4 1387 16 1529 10 1389 8 595 4 821 2 1639 4 266 4 1062 2 602 2 
1063 9 443 14 1345 2 324 2 1289 2 893 2 1136 2 1006 1 558 2 1646 2 1196 2 834 2 956 14 560 2 450 2 156 2 1550 6 736 2 967 8 627 2 1094 2 507 26 1556 2 1028 2 166 4 849 4 1205 4 1100 2 464 6 32 2 1427 28 1035 4 1036 40 1432 6 1161 2 913 12 40 1 240 2 1732 2 43 5 359 4 528 6 1229 2 245 12 1272 1 989 2 300 4 932 2 584 4 1231 2 1276 2 1527 2 713 2 1871 2 821 2 63 14 602 2 136 2 67 4 
1386 2 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 
1505 1 1472 1 1153 1 1605 1 1492 1 554 1 

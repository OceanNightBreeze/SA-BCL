#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:jj_3R_102()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfo:new_ppt()V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_22()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_63()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_28()Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_104()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.ModBitTracker:num_vars()I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfo:isIOASet()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.Quant:concat([I[I)[I
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3R_122()Z
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Debug:logOn()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName:hasTypeOf()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Stopwatch:Stopwatch(Z)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:subsetOf([B[I)Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_2_4(I)Z
daikon.Debug:logDetail()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_116()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:FillBuff()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.Node:Node()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_98()Z
daikon.ModBitTracker:split(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_100()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_30()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:numIntArrays()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:elementIsIntegral()Z
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:memberOf(S[S)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isPointerFileRep()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptSlice1:arity()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.ProglangType:dimensions()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_149()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3_1()Z
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.Quant:gt(II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptSlice2:arity()I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String; | STATEMENT | 10651 | stmt -> ;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:intersection([I[I)[I
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:isPrestate()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(FF)Z
daikon.VarInfo:isDerived()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.Quant:sameLength([I[I)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_36()Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_57()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.PptName:toString()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_81()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_15()Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_125()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:getSignature()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.PptSlice0:arity()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.Quant:memberOf(J[J)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_27()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isArray()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:eq(II)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.JavaParser:jj_3R_48()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice3:arity()I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_19()Z
daikon.inv.Invariant:is_false()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3_3()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.Assert:assertTrue(Z)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.sequenceString.MemberString:enabled()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.JavaParser:jj_3_20()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.ProglangType:isString()Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([D)D
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.ModBitTracker:num_sets()I
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_2_16(I)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfo:has_typeof()Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_3R_109()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3_18()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3_35()Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_106()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:isMissing(I)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_10()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 4356 | = null
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3R_108()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.ProglangType:isFloat()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_3R_163()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
789 2 607 2 1675 2 431 2 1708 6 793 2 578 4 191 2 644 2 1857 2 501 2 1239 2 200 2 354 2 1302 2 1626 4 627 2 926 2 1872 2 395 2 971 2 751 2 1248 2 
501 4 1708 15 686 4 1202 2 354 8 283 4 1099 6 65 6 627 5 1766 2 926 4 578 12 395 8 971 4 397 2 1248 8 751 4 
1546 2 1761 2 43 4 839 10 1762 2 902 4 177 4 1676 4 608 2 1137 2 634 4 461 2 701 4 488 2 1235 2 1288 4 83 2 1821 4 818 2 1020 2 1796 10 523 2 917 4 1861 6 590 8 330 2 737 2 1693 4 959 4 960 4 1927 2 1627 2 626 2 657 2 862 4 1028 2 1660 2 69 14 1663 2 1512 62 
1883 2 1285 2 412 2 1855 2 1554 2 591 2 335 2 1576 2 337 2 70 2 
398 4 1282 2 1113 2 1066 2 288 2 1646 2 144 4 1017 2 582 2 819 4 822 2 470 2 415 2 1533 2 1358 2 646 2 825 2 1023 2 590 2 1423 2 960 4 1082 2 157 2 1833 2 238 2 1480 4 783 2 718 2 973 2 788 2 1545 2 177 2 841 2 113 2 248 2 908 2 376 2 1262 2 1097 4 1330 2 1749 2 924 2 626 2 1162 2 
532 8 789 18 1169 6 1730 2 903 2 1708 53 1040 4 1585 4 283 4 542 4 793 2 578 48 1293 4 1619 6 225 4 1179 2 1921 6 1097 4 501 16 1602 2 686 4 354 32 1218 4 1099 6 65 6 1626 6 627 22 926 16 863 2 999 2 927 6 1193 6 1480 4 1872 4 395 32 971 16 1033 2 751 16 1248 32 
1861 2 590 2 1927 2 
534 2 1830 2 448 22 64 2 1588 2 1833 2 746 2 1913 2 1036 10 1513 2 166 2 931 2 168 2 1357 2 
1560 2 1097 2 352 2 479 2 1779 2 1814 4 1480 2 113 2 487 2 
1594 2 227 2 603 2 1273 6 20 2 1292 2 1050 2 460 6 1539 2 970 6 1334 2 
194 2 1097 2 1828 2 1252 6 921 6 1383 2 690 4 1242 6 782 2 1902 4 1480 2 830 6 1785 2 
789 8 836 4 2 8 574 2 1708 28 1585 6 1766 4 793 4 578 26 1619 8 55 2 852 4 1097 6 501 10 890 2 1078 2 892 2 354 16 1626 10 627 12 926 10 1931 8 1872 6 1480 6 395 16 1033 2 971 10 973 2 1248 16 751 10 
482 4 1856 6 
335 2 
263 2 
1097 2 1098 2 
1097 4 1503 2 957 2 
278 2 869 2 1706 2 512 1 9 2 1707 2 1011 2 138 2 1462 2 1583 2 760 2 879 2 1710 1 1347 2 410 2 1353 2 1593 2 1823 6 1021 2 1236 12 149 6 770 2 1600 2 1360 2 773 2 1831 2 37 2 660 6 36 2 1480 32 1835 24 426 2 309 2 172 2 427 2 1134 2 1840 3 535 1 1841 2 1136 1 1488 4 538 2 50 2 1384 2 1141 2 1615 2 1846 2 1385 1 1850 8 546 1 1853 3 1044 1 54 3 1860 4 1150 2 197 2 1151 4 682 2 1048 6 552 1 918 2 444 2 920 2 1398 2 1863 2 1401 1 689 3 1053 2 1750 5 451 1 205 3 67 4 566 2 210 2 929 2 806 1 1631 2 1275 2 1875 16 567 4 1058 2 1168 2 572 1 1170 2 573 2 1413 2 79 2 1765 1 1064 16 1284 3 81 2 1523 4 467 1 1290 3 708 3 823 2 471 2 1182 16 352 2 1892 2 586 2 711 2 955 2 1534 2 1774 2 1080 2 1898 2 1777 2 962 1 964 8 1899 3 596 2 1662 2 240 32 598 2 1541 2 1904 2 485 2 835 1 1089 2 1306 2 1669 12 1672 8 1788 2 1433 32 1436 2 371 16 251 2 1909 2 979 2 493 2 1916 1 618 2 1097 34 1561 4 386 4 1563 24 989 2 1214 2 1692 2 1447 3 1329 2 124 2 1804 2 997 2 1104 2 129 3 1333 2 1106 3 
510 2 1006 2 1007 12 6 132 1008 2 8 2 1457 4 1460 112 515 2 1012 2 516 26 13 4 16 12 19 16 1463 6 1464 4 21 2 517 8 1467 2 1018 2 1469 26 524 26 29 112 1025 2 32 28 1475 6 1029 2 1030 4 1478 4 34 2 38 198 1480 10 1032 2 529 2 1034 4 1035 8 1481 26 530 198 531 28 1483 6 41 6 1039 2 42 106 1487 30 536 2 48 6 537 30 1041 376 51 26 1042 4 53 2 1492 8 1493 8 543 198 548 12 1496 26 57 4 1498 8 551 6 1500 2 59 4 1049 2 1506 432 555 18 1507 16 60 2 1051 2 1052 2 560 2 1054 328 1055 14 561 4 1511 2 71 2 1057 198 73 2 1060 4 1517 4 1519 6 76 46 1520 2 80 4 1524 4 1526 4 1068 6 583 14 1529 6 585 6 1074 2 1531 10 90 8 588 2 92 4 1077 2 1079 6 1535 4 94 2 1081 2 593 24 99 4 1084 46 599 2 103 2 102 2 1543 4 602 2 105 6 106 2 107 6 1090 12 606 290 1091 2 1092 12 1549 4 609 4 611 2 115 2 614 22 1553 2 615 6 118 2 1559 8 120 8 1097 10 1568 10 1567 4 1100 2 122 2 1102 48 1101 60 1570 4 629 6 631 16 1574 6 1575 2 128 2 133 2 1578 6 632 6 1580 2 1581 2 1114 2 140 24 637 2 1115 2 1118 4 1119 2 640 74 642 6 147 6 1598 2 647 4 153 2 651 2 1603 4 654 6 159 4 161 54 162 6 163 6 1606 2 164 2 663 2 1608 4 1132 2 666 6 171 2 1610 244 1135 2 1611 2 1138 2 179 2 668 2 184 4 1144 10 1616 4 671 6 1617 2 1147 432 192 4 193 2 678 6 679 2 680 192 681 12 682 2 1623 70 198 2 1154 244 202 6 203 66 1160 2 204 22 1159 2 1158 2 1630 2 209 2 211 8 693 8 212 2 1165 2 1166 4 696 198 215 4 1640 14 1643 22 1645 6 223 2 1647 2 1177 26 1178 2 706 4 1649 224 228 6 1650 2 1651 2 1184 68 1186 4 1185 2 1652 6 234 30 1656 2 715 14 1659 60 716 8 239 30 1194 132 1196 2 241 2 1667 2 720 2 1199 6 1674 6 1677 6 1679 112 246 2 247 18 1682 4 252 20 723 2 726 2 1205 30 1208 6 258 20 729 8 1209 2 262 2 1211 2 1689 2 1215 2 1217 386 742 26 268 4 743 8 269 84 1223 2 272 2 273 6 747 244 1699 2 748 2 1226 14 277 6 1228 6 750 4 752 4 1703 4 753 2 1705 6 1231 2 754 2 756 198 755 2 757 2 763 2 286 2 289 30 291 20 1712 4 296 2 768 2 1713 26 1715 46 769 4 772 6 1716 60 775 2 1240 12 302 2 303 88 779 6 304 2 781 14 1725 4 308 6 1249 20 787 48 1250 2 310 2 312 2 313 566 314 20 1255 30 1254 2 1257 4 1258 2 1737 22 325 2 326 4 1264 4 327 92 1267 20 1268 4 1269 6 331 6 1747 6 332 4 1271 8 1754 4 1756 14 339 6 338 2 1757 2 1277 4 809 4 1279 2 1280 2 342 160 1764 4 810 10 814 6 1283 2 347 12 1287 2 1768 8 1291 198 1769 6 820 8 1294 2 1295 6 1770 2 1296 64 1299 4 353 8 1776 106 357 4 1780 4 358 6 1304 2 361 328 1787 12 1307 4 840 2 366 2 367 2 369 2 843 4 374 30 844 4 1313 2 377 4 378 2 1316 2 848 12 1793 2 1794 82 1320 2 1323 10 380 2 853 6 381 2 1797 2 1325 30 389 198 1801 192 1803 228 393 182 394 32 865 28 396 6 866 6 399 4 400 2 1340 50 870 2 872 28 1341 2 405 6 1343 2 407 30 1818 2 408 4 1819 2 1820 182 411 2 1822 46 1356 4 887 6 1824 2 417 4 421 10 893 12 1363 118 1367 2 896 4 1368 2 898 94 1372 4 1374 2 900 6 1836 2 1837 2 1379 4 1380 2 1842 8 1843 6 904 20 434 2 905 2 436 2 1848 4 438 4 910 2 440 28 1387 2 1858 6 916 204 1393 6 443 112 1396 2 446 2 1400 6 922 336 449 52 450 6 925 2 1868 6 1408 2 928 2 457 6 1409 204 1877 46 458 2 1881 4 939 2 1885 20 1886 2 941 2 1887 6 464 2 1415 2 466 6 945 6 469 2 953 2 472 64 1422 30 1893 2 475 2 1895 2 476 4 1424 2 1897 26 477 6 1427 2 478 12 965 2 966 26 1901 18 1428 2 972 2 484 2 975 60 1907 98 1430 2 978 2 1435 2 490 2 981 2 1911 4 491 4 983 2 986 4 495 2 496 140 987 86 499 2 1925 6 502 2 1929 2 998 2 506 2 1452 4 1934 2 1455 16 509 6 1002 2 1004 2 1935 4 
261 2 235 2 174 1 590 2 1377 2 
261 2 235 2 1671 2 317 2 590 2 1377 2 
852 2 261 2 481 2 590 2 454 2 1259 2 
236 2 1423 2 
852 2 261 2 590 2 876 2 
1407 2 653 2 
1829 2 1352 2 
1544 2 1476 2 
845 2 158 2 
824 2 845 2 1352 2 
860 2 845 2 1352 2 
1866 2 845 2 1352 2 
845 2 798 2 1352 2 
697 6 1681 2 261 2 684 2 590 2 713 2 1869 2 360 6 
710 2 883 2 
852 2 261 2 888 2 481 2 317 2 590 2 1259 2 
1260 2 481 2 1259 2 
481 2 44 2 1259 2 
710 2 985 2 249 2 
481 2 1259 2 
710 2 154 2 
1062 2 1259 2 
710 2 985 2 101 2 
1476 2 1495 2 985 2 
845 2 219 2 985 2 
1298 2 1407 2 985 2 
985 2 1110 2 1352 2 
710 2 1381 2 
993 2 1259 2 
1476 2 301 2 
1516 2 845 2 
1407 2 1241 2 
1564 2 1352 2 
710 2 1411 2 
1612 2 1352 2 
1407 2 365 2 
845 2 717 2 
1476 2 1094 2 
710 2 1465 2 985 2 101 2 
710 2 1465 2 1009 2 985 2 101 2 
868 2 710 2 985 2 
710 2 985 2 557 2 
500 2 181 2 270 2 1832 2 
1666 2 1772 4 1124 2 649 2 1233 2 1432 2 390 2 448 6 741 2 942 2 1220 2 1155 2 1685 4 911 2 1095 2 307 2 641 2 568 2 
985 2 1844 2 
1514 2 985 2 1259 2 
1579 2 1259 2 
1141 2 
278 2 3 4 1706 2 1707 2 875 2 1583 6 1462 4 879 2 1710 4 1353 2 1019 2 1823 2 1021 2 1236 8 149 6 773 2 652 2 1831 2 897 2 660 4 37 2 1480 26 1245 2 1246 2 426 2 427 2 535 2 1488 4 182 2 1615 2 1846 2 1850 2 546 2 676 2 195 4 1860 2 1150 2 1151 4 682 2 1048 2 685 2 1398 2 1751 2 66 2 67 4 567 4 1168 2 79 2 1064 6 1523 2 1070 2 352 2 1892 2 955 2 1534 2 1774 2 1080 2 596 2 1662 2 240 6 1904 2 1089 2 977 2 1669 8 1788 2 245 2 1433 4 1791 2 1436 2 251 2 730 2 1097 26 1561 2 989 2 1214 2 1104 2 
278 2 3 4 1706 2 1707 2 875 2 1583 6 1462 4 879 2 1710 1 1347 2 881 2 1353 2 1823 2 1021 2 1236 8 149 6 773 2 652 2 1831 2 897 2 660 6 37 2 1480 26 1245 2 1246 2 426 2 427 2 1134 2 535 2 1488 4 182 2 1615 2 1846 2 1850 2 546 2 1739 2 195 4 1860 2 1150 2 1151 4 682 2 1048 2 918 2 685 2 1398 2 1751 2 66 2 67 4 567 4 1168 2 79 2 1064 6 1523 2 1070 2 1181 2 352 2 1892 2 955 2 1534 2 1774 2 1080 2 596 2 1662 2 240 6 1904 2 1089 2 1669 8 1788 2 245 2 1433 4 1791 2 1436 2 251 2 730 2 1097 26 1561 2 989 2 1214 2 1104 2 
802 2 
1103 2 580 2 
1759 2 134 10 935 2 1706 2 218 2 460 6 10 2 1346 2 703 2 284 8 14 2 1175 2 15 2 1350 2 1292 2 1594 4 149 4 956 2 955 2 150 2 1361 2 1774 2 958 4 780 2 1480 6 970 6 600 4 901 2 426 2 363 4 603 4 173 2 1788 2 180 2 1738 4 672 2 1854 2 914 2 1918 4 1919 2 1920 2 854 2 550 4 1688 2 384 2 1097 12 1150 2 1442 8 1151 2 682 2 1690 2 734 2 1397 2 1050 2 1273 6 1753 2 67 2 564 2 804 2 1003 2 
1759 2 134 10 935 2 1706 2 218 2 460 8 10 2 1346 2 703 2 284 8 14 2 1175 2 15 2 1350 2 1292 2 1594 4 149 4 956 2 955 2 150 2 1361 2 1774 2 958 4 780 2 1480 6 1539 2 970 8 600 4 901 2 1247 2 426 2 363 4 603 4 173 2 1788 2 180 2 1142 4 1043 2 1738 4 672 2 1854 2 914 2 1918 4 1919 2 1920 2 854 2 550 4 1150 2 384 2 1097 12 1151 2 1442 8 682 2 734 2 1397 2 1050 2 1273 6 67 2 1753 2 564 2 804 2 1003 2 
1920 2 1759 2 1594 2 550 4 603 2 363 4 935 2 218 2 460 2 1361 2 180 2 1346 2 14 2 15 2 1273 2 1350 2 1854 2 1918 2 
1759 2 134 6 935 2 1706 2 218 2 460 6 10 2 1346 2 703 2 284 4 14 2 1175 2 15 2 1350 2 1594 4 149 4 956 2 955 2 150 2 1361 2 1774 2 958 4 780 2 1539 2 1480 6 970 6 600 4 901 2 426 2 363 4 603 4 173 2 1788 2 180 2 1738 4 672 2 1854 2 914 2 1918 4 1919 2 1920 2 854 2 550 4 1688 2 384 2 1097 12 1150 2 1442 4 1151 2 682 2 1690 2 734 2 1397 2 1050 2 1273 4 1753 2 67 2 564 2 804 2 1003 2 
1759 2 134 6 935 2 1706 2 218 2 460 4 10 2 1346 2 703 2 284 4 14 2 1175 2 15 2 20 2 1350 2 1594 4 149 4 956 2 955 2 150 2 1361 2 1774 2 958 4 780 2 1480 6 970 6 600 4 901 2 426 2 363 4 603 4 173 2 1788 2 180 2 1738 4 672 2 1854 2 914 2 1918 4 1919 2 1920 2 854 2 550 4 1688 2 384 2 1097 12 1150 2 1442 4 1151 2 682 2 1690 2 734 2 1397 2 1050 2 1273 6 1753 2 67 2 564 2 804 2 1003 2 
1759 2 134 6 935 2 1706 2 218 2 460 6 10 2 1346 2 703 2 284 4 14 2 1175 2 15 2 1350 2 1292 2 1594 4 149 4 956 2 955 2 150 2 1361 2 1774 2 958 4 780 2 1480 6 970 6 600 4 901 2 426 2 363 4 603 4 173 2 1788 2 180 2 1738 4 672 2 1854 2 914 2 1918 4 1919 2 1920 2 854 2 550 4 1688 2 384 2 1097 12 1150 2 1442 8 1151 2 682 2 1690 2 734 2 1397 2 1050 2 1273 6 1753 2 67 2 564 2 804 2 1003 2 
1759 2 134 10 935 2 1706 2 218 2 460 6 10 2 1346 2 703 2 284 8 14 2 1175 2 15 2 20 2 1350 2 1292 2 1594 4 149 4 956 2 955 2 150 2 1361 2 1774 2 958 4 780 2 1480 6 970 8 600 4 901 2 426 2 363 4 603 4 173 2 1788 2 180 2 1738 4 672 2 1854 2 914 2 1918 4 1919 2 1920 2 854 2 550 4 1688 2 384 2 1097 12 1150 2 1442 8 1151 2 682 2 1690 2 734 2 1397 2 1050 2 1273 8 67 2 1753 2 564 2 804 2 1003 2 
1759 2 134 10 935 2 1706 2 218 2 460 6 10 2 1346 2 703 2 284 8 14 2 1175 2 15 2 1350 2 1292 2 1594 4 149 4 956 2 955 2 150 2 1361 2 1774 2 958 4 780 2 1480 6 970 6 600 4 901 2 426 2 363 4 603 4 173 2 1788 2 180 2 1738 4 672 2 1854 2 914 2 1918 4 1919 2 1920 2 854 2 550 4 1688 2 384 2 1097 12 1150 2 1442 8 1151 2 682 2 1690 2 734 2 1397 2 1050 2 1273 6 1753 2 67 2 564 2 804 2 1003 2 
1706 2 1707 2 10 2 14 2 15 2 20 4 292 4 519 6 1021 2 1236 4 773 2 33 2 780 2 1480 24 1488 4 49 2 321 2 1735 1 1738 4 1742 1 550 4 1048 2 1503 6 1050 4 1751 2 66 2 1273 8 67 4 1753 2 564 2 804 2 567 4 1759 2 569 6 78 6 79 2 1063 2 1064 6 816 2 349 2 1523 2 1071 6 352 2 1774 2 1080 2 95 2 355 2 828 2 1778 6 1781 1 594 1 596 2 600 8 601 2 363 4 603 4 604 6 1788 2 849 2 854 4 384 2 1097 46 1098 6 855 1 1561 2 622 6 1327 4 1569 7 1104 2 127 2 1331 1 1812 2 134 2 401 2 402 6 877 2 1583 6 879 2 1346 2 636 2 1350 2 1353 2 1823 2 1594 4 149 6 648 2 150 4 1361 2 1831 2 423 2 897 2 660 6 901 2 1131 10 426 2 1133 2 1134 2 173 2 180 2 1615 2 1846 2 1386 6 670 2 1850 2 186 2 672 2 1854 2 914 2 1389 6 195 4 1150 2 1860 2 1151 4 682 2 918 2 1397 2 685 4 688 2 1628 6 455 2 1632 2 695 2 1168 2 935 2 218 2 1410 8 459 6 460 4 703 2 1175 2 955 2 956 2 958 6 1190 2 1662 2 240 8 970 12 1906 2 976 2 1669 4 1433 2 251 12 982 1 1918 4 1919 2 728 2 1920 2 1688 2 263 6 498 6 1442 2 734 2 1213 1 989 2 503 2 740 2 271 2 744 7 1451 1 1003 2 
134 2 1812 2 401 2 402 6 873 2 1706 2 1707 2 10 2 139 2 877 2 1462 2 1583 6 636 2 1346 2 879 2 14 2 15 2 292 4 1350 2 519 6 1353 2 1823 2 1594 4 1021 2 1236 8 149 6 648 2 150 4 1361 2 773 2 1831 2 33 2 423 2 897 2 780 2 660 6 1480 26 1131 10 901 2 1133 2 426 2 1134 2 173 2 1488 4 49 2 180 2 1615 2 321 2 1846 2 670 2 1386 6 186 2 1850 2 1738 4 672 2 1854 2 914 2 1389 6 195 4 550 4 1860 4 1150 2 1151 4 682 2 1048 2 1503 6 918 2 1050 4 1397 2 685 4 688 2 1628 6 1751 2 66 2 1273 8 1753 2 67 4 564 2 804 2 455 2 1632 2 567 4 695 2 1759 2 569 6 1168 2 935 2 459 6 1410 8 218 2 460 8 78 6 79 2 1063 2 816 2 1064 6 703 2 349 2 1175 2 1523 4 1292 4 1071 6 352 2 956 2 955 2 1774 2 1080 2 958 6 95 2 355 2 1190 2 828 2 1778 6 1662 2 596 2 240 8 601 2 600 8 970 12 1906 2 976 2 603 4 363 4 604 6 1669 8 1788 2 1433 2 251 12 849 2 1918 4 728 2 1919 2 1920 2 854 4 263 6 1688 2 498 6 1097 48 384 2 1098 6 1442 6 622 6 734 2 1561 4 989 2 503 2 1327 4 740 2 271 2 1104 2 127 2 1003 2 
1812 2 134 6 401 2 402 6 873 2 1706 2 1707 2 10 2 139 2 877 2 1462 2 1583 6 636 2 1346 2 879 2 284 4 14 2 15 2 292 4 1350 2 519 6 1353 2 1823 2 1594 4 1021 2 1236 8 149 6 648 2 150 4 1361 2 773 2 1831 2 33 2 423 2 897 2 780 2 660 6 1480 26 1131 10 901 2 1133 2 426 2 1134 2 173 2 1488 4 49 2 180 2 1615 2 321 2 1846 2 670 2 1386 6 186 2 1850 2 1738 4 672 2 1854 2 914 2 1389 6 195 4 550 4 1860 4 1150 2 1151 4 682 2 1048 2 1503 6 918 2 1050 4 1397 2 685 4 688 2 1628 6 1751 2 66 2 1273 8 1753 2 67 4 564 2 804 2 455 2 1632 2 567 4 695 2 1759 2 569 6 1168 2 935 2 459 6 1410 8 218 2 460 8 78 6 79 2 1063 2 816 2 1064 6 703 2 349 2 1175 2 1523 4 1292 4 1071 6 352 2 956 2 955 2 1774 2 1080 2 958 6 95 2 355 2 1190 2 828 2 1778 6 1662 2 596 2 240 8 601 2 600 8 970 12 1906 2 976 2 603 4 363 4 604 6 1669 8 1788 2 1433 2 251 12 849 2 1918 4 728 2 1919 2 1920 2 854 4 263 6 1688 2 498 6 1097 48 384 2 1098 6 1442 6 622 6 734 2 1561 4 989 2 503 2 1327 4 740 2 271 2 1104 2 127 2 1003 2 
1706 2 1707 2 10 2 1462 2 284 4 14 2 15 2 1015 6 20 2 292 4 519 12 1021 2 1236 10 525 2 773 2 33 2 780 2 1480 24 1488 4 49 2 321 2 1738 4 550 4 1499 6 1048 4 1503 12 1050 4 1751 2 66 4 1273 10 67 4 1753 2 564 2 804 2 567 4 1759 2 569 6 78 6 79 2 1063 2 1064 8 816 2 349 2 1523 4 1292 4 1527 6 1071 12 352 2 587 2 1774 2 1080 2 95 2 355 2 828 2 1778 6 596 2 1539 2 600 8 601 2 1087 2 1088 2 363 4 603 4 604 12 1788 2 849 2 854 4 384 2 1097 52 1098 12 1561 4 622 6 1327 4 1566 6 625 2 1104 2 127 2 134 6 1812 2 401 2 402 6 873 2 139 2 877 2 1583 8 879 2 1346 2 636 2 142 2 1350 2 1353 2 1823 4 1594 4 149 6 648 2 150 4 1361 2 1364 6 1831 2 423 2 897 2 660 6 901 2 1131 8 426 2 1134 2 173 2 180 2 1613 6 1615 2 669 2 1846 2 1849 6 1386 6 670 2 1850 4 186 2 672 2 1854 2 914 2 1389 6 195 6 1150 2 1860 4 1151 4 682 2 918 2 1397 2 685 4 688 2 1628 6 455 2 1632 2 695 2 1168 2 935 2 218 2 1410 8 459 6 460 10 703 2 1175 2 955 2 956 2 1655 6 958 6 714 6 1190 2 1662 2 240 12 970 16 1906 2 976 2 1669 10 1433 4 251 10 1918 4 1919 2 728 2 1920 2 1688 2 263 12 498 6 1442 6 734 2 989 2 503 2 736 2 740 2 271 2 1003 2 
1759 2 363 2 603 4 134 4 173 2 935 2 218 2 460 6 284 4 14 2 1738 2 1350 2 1292 2 672 2 1854 2 914 2 1919 2 1594 4 550 2 1688 2 1097 4 384 2 1442 6 956 2 1050 2 1397 2 1361 2 958 2 1273 6 1753 2 780 2 600 2 970 4 901 2 1003 2 
134 2 1706 2 1707 2 10 2 1583 6 879 2 14 2 1350 2 1353 2 1823 3 1594 4 414 2 1021 2 149 6 1600 2 773 2 1361 2 1831 2 1365 3 897 2 780 2 660 6 1480 24 901 2 1131 2 426 2 1133 2 1134 2 173 2 1488 4 1141 2 1615 2 1846 2 1738 2 672 2 1854 2 914 2 550 2 195 4 1150 2 1151 4 682 2 1048 3 918 2 1050 2 444 2 1397 2 685 2 1751 2 1273 6 67 4 1753 2 1873 2 567 4 1759 2 1168 2 935 2 218 2 460 6 79 2 1064 6 1292 2 823 2 709 2 352 2 956 2 955 2 1774 2 958 2 596 2 1662 2 240 8 600 2 970 4 603 4 363 2 1788 2 1433 3 251 4 1318 2 1919 2 1688 2 1097 28 384 2 1442 6 989 2 1104 2 1807 2 1003 2 
1382 2 901 2 1919 2 
1382 2 901 2 1919 2 
134 6 1706 2 1707 2 877 2 1583 2 879 2 1710 2 284 4 1348 2 882 2 292 2 20 4 1353 2 1354 2 1594 4 1021 2 1236 4 149 6 150 4 773 2 1831 2 897 2 1723 2 660 6 1480 16 1245 4 1244 2 1131 2 901 6 426 2 1134 2 175 2 1382 2 433 2 1488 4 180 2 1615 2 1846 2 1386 2 1852 2 1738 2 672 2 1854 2 914 2 1046 2 550 2 1860 4 1150 2 1151 4 682 2 918 2 1050 4 685 6 1751 2 1273 12 67 4 804 2 567 4 1759 4 1636 2 935 2 74 4 460 12 79 2 1064 2 703 2 1523 4 948 2 1292 4 352 2 955 2 1774 2 958 4 1080 4 1537 2 596 2 1662 2 597 2 240 2 1540 2 1539 4 970 16 600 4 1906 2 363 2 603 4 1669 4 1788 2 1200 4 1433 2 1309 2 251 4 846 2 117 2 1918 4 1919 4 1920 2 854 2 1097 24 1442 6 734 2 1561 4 989 2 1327 2 271 2 1104 2 
695 2 1150 2 1097 4 1327 2 433 2 251 2 435 2 1348 2 15 2 1386 2 1851 2 127 2 117 2 580 2 1480 2 1131 2 1936 2 
134 6 1706 2 1707 2 877 2 1583 2 879 2 284 4 1348 2 882 2 292 2 20 4 1353 2 1594 4 1021 2 1236 4 149 6 150 4 773 2 1831 2 897 2 660 6 1480 16 1245 4 1244 2 901 6 426 2 1134 2 175 2 1382 2 47 2 433 2 1488 4 180 2 1615 2 1846 2 1386 2 188 2 1738 2 1852 2 672 2 1854 2 914 2 1046 2 550 2 1860 4 1150 2 1151 4 682 2 918 2 1050 4 685 6 1751 2 1273 12 67 4 564 2 804 2 567 4 1759 4 1636 2 933 2 935 2 74 4 460 12 79 2 1064 2 703 2 1523 4 948 4 1292 4 352 2 955 2 1774 2 958 4 1080 4 596 2 1662 2 597 2 240 2 1540 2 1539 4 600 4 970 16 1906 2 363 2 603 4 838 2 1669 4 1788 2 1200 4 1433 4 1309 2 251 2 117 2 1322 2 1918 4 1919 4 1920 2 854 4 1097 24 1442 6 734 2 1561 4 989 2 271 2 1104 2 
134 6 871 2 1706 2 1707 2 877 2 514 2 1583 2 879 2 1710 1 284 4 1348 2 882 2 292 2 20 4 1353 2 1594 4 1021 2 1236 4 149 6 150 4 773 2 1831 2 897 2 660 6 1480 16 1245 4 1244 2 1131 2 901 6 426 2 1134 2 175 2 1382 2 433 2 1488 4 180 2 1615 2 1846 2 1386 2 1852 2 1738 2 672 2 1854 2 914 2 1046 2 550 2 1860 4 1150 2 1621 2 1151 4 682 2 918 2 1050 4 685 6 1751 2 1273 12 67 4 564 2 804 2 567 4 1759 4 1636 2 935 2 74 4 460 12 79 2 1064 2 703 2 1416 2 1523 4 948 2 1292 4 352 2 955 2 1774 2 958 4 1080 4 596 2 1662 2 597 2 240 2 1540 2 1539 4 970 16 600 4 1906 2 363 2 603 4 1669 4 1788 2 1200 4 1433 2 1309 2 251 4 117 2 1918 4 1919 4 1920 2 854 4 1097 24 1442 6 733 2 734 2 1561 4 989 2 1327 2 271 2 1104 2 
0 2 1 2 4 3 5 2 1010 2 7 2 9 2 1011 2 11 2 1013 2 12 2 17 2 18 2 22 2 23 102 24 10 26 2 25 4 27 2 1021 2 28 156 1022 2 1023 2 1024 2 30 2 31 2 1026 4 1027 2 1031 2 1033 2 1037 2 39 2 1038 2 40 2 43 2 45 2 46 2 49 16 50 2 52 7 54 2 56 78 1047 3 58 2 1048 46 61 2 62 60 65 6 63 2 1053 2 66 46 67 8 68 2 1056 4 72 10 1058 2 1059 38 1061 2 75 2 77 2 79 2 1064 32 1065 106 1067 78 81 2 82 2 85 80 1069 3 1070 2 1073 80 87 2 89 10 91 78 1076 2 1080 16 96 2 98 1 1083 38 1086 2 1087 2 1088 2 108 3 109 4 110 2 112 4 111 174 114 2 1093 2 1096 2 1097 1174 121 2 123 3 124 2 125 36 1104 2 126 8 129 2 1105 158 130 34 132 2 1106 2 1109 2 135 156 136 2 1111 558 137 3 138 2 1112 112 141 2 142 4 143 2 1117 2 145 38 146 4 1120 2 1123 26 148 2 149 10 152 3 151 80 155 2 1126 2 156 4 160 2 1129 24 1131 2 1130 2 167 2 1134 324 172 2 176 2 178 3 1139 3 1140 78 182 84 183 84 1143 2 1145 2 187 2 189 10 1146 2 1148 38 1149 2 195 12 1150 2 1151 8 197 2 1153 3 1157 6 206 10 1161 8 207 2 210 14 1163 2 208 14 1164 8 1167 2 213 2 1168 2 1169 6 216 2 217 2 1171 2 221 2 222 2 1173 80 1174 2 224 78 1176 112 1179 4 1180 2 229 2 1182 100 230 2 233 2 1187 10 1188 12 1189 2 1191 3 237 3 1192 2 1195 80 240 126 242 2 1198 2 243 38 244 2 245 2 1201 66 251 10 1203 78 253 2 256 38 257 2 1207 4 260 1 259 80 1210 2 264 2 265 3 1218 4 267 2 1224 2 274 2 276 2 1227 2 1229 20 1230 14 280 3 281 2 279 2 282 4 1234 2 285 2 287 2 293 4 294 2 295 14 297 2 1236 176 298 2 1237 2 1238 4 300 2 306 2 1246 2 1248 12 309 2 311 80 1251 2 315 2 316 22 1256 2 319 2 320 5 321 2 322 2 323 10 1261 6 324 2 1263 14 1265 2 328 2 1266 2 329 2 333 2 1270 4 1272 2 336 2 1275 14 1274 3 340 2 1276 40 341 2 1278 2 1281 2 343 2 344 2 345 234 346 6 1284 3 348 2 350 78 1286 80 1289 2 1290 2 351 2 1297 2 352 8 354 12 1300 8 1303 2 355 2 356 7 362 4 1305 2 1306 2 364 2 1308 158 370 24 1310 38 371 14 372 3 373 2 1311 2 1312 80 1314 234 1315 1 1317 3 379 2 1319 1 1318 2 1321 156 1324 2 383 78 385 2 386 32 1326 2 387 78 388 4 1329 2 391 2 395 12 1332 3 1333 2 1335 2 1336 2 1337 2 1338 9 401 22 404 2 1342 2 406 2 1344 2 1345 2 409 2 410 2 1353 2 416 2 414 2 418 2 1359 2 1360 2 419 6 420 2 1362 2 1365 2 1366 2 422 2 1369 2 424 4 1370 2 1373 4 1375 2 1376 36 425 2 426 2 1378 2 428 2 429 18 430 3 432 3 1384 2 1385 1 437 12 439 2 1388 2 441 60 1391 3 1390 2 442 2 1394 78 1395 4 445 2 1399 2 447 2 1401 1 1402 2 448 6 1403 2 1404 2 1406 2 452 2 453 2 455 2 456 4 1412 3 462 3 463 2 1414 2 465 2 1417 2 468 60 1418 38 471 2 1420 3 1421 2 474 2 473 2 1426 2 483 2 485 2 1429 2 486 22 1431 78 1433 110 1434 6 489 24 492 2 1438 4 493 2 494 2 1439 20 1440 2 497 10 1441 2 1443 48 501 6 1444 3 1445 78 504 2 1448 4 1449 12 505 10 507 166 1450 12 508 2 1453 2 1454 2 1456 2 512 1 1459 38 513 2 1466 6 518 2 520 2 1468 80 525 2 1470 2 1471 4 1472 2 1473 2 526 78 1474 2 1477 76 527 78 528 2 1479 2 1480 966 1482 2 532 8 1484 3 533 2 1485 2 535 3 1486 8 1488 480 1489 2 1490 40 539 2 1491 3 540 54 541 2 1494 2 544 2 545 38 547 2 546 2 1497 34 1501 2 1502 2 553 18 1504 80 1505 4 558 2 559 2 1508 2 562 8 563 2 1509 4 566 16 565 38 1510 10 567 402 1515 4 1518 2 571 6 575 2 1521 36 576 4 577 12 578 18 1525 2 579 4 1528 2 581 18 1530 2 1532 104 586 2 587 2 589 2 592 2 1536 4 595 2 1538 2 596 4 598 2 1542 2 601 2 1547 2 605 2 1548 2 610 2 1550 2 1551 2 612 2 613 1 1555 38 616 2 617 2 1556 2 618 2 619 66 621 78 1562 2 1563 15 1565 8 627 10 1571 2 1572 2 628 2 1573 8 1577 2 1582 2 633 2 634 2 1583 18 1584 2 1585 4 1586 2 638 4 1587 2 639 16 1592 2 1590 2 643 2 1593 2 645 2 1595 2 1596 38 1597 2 1599 2 1601 38 650 22 652 2 1605 2 1604 2 656 2 655 4 659 3 660 1112 1607 22 661 25 662 2 664 2 665 3 1609 2 667 22 1615 8 1614 76 669 2 1619 6 673 2 674 2 675 2 1620 38 677 18 682 2 683 2 1622 40 1625 2 1624 2 685 2 686 4 688 8 689 2 691 2 692 2 1629 10 1631 2 1632 2 694 20 1634 22 1638 2 1639 2 698 26 699 1 700 10 701 2 702 2 1641 2 1644 2 1648 2 704 14 705 3 707 1 708 2 1654 2 1653 2 712 10 1657 3 1658 2 1661 2 1662 2 1664 2 1668 1 719 2 1669 181 1670 24 1672 14 722 2 721 38 724 4 1683 2 1684 2 1686 2 727 80 728 4 730 4 1687 2 732 2 731 2 735 20 1691 2 1692 2 736 2 739 4 738 34 1694 2 740 2 1695 2 1696 2 1698 38 745 5 1700 3 1701 2 749 80 751 6 1702 1 1704 4 1706 2 1707 2 1708 24 758 2 760 2 761 2 1709 38 759 2 762 2 1710 4 764 20 766 2 1711 158 767 2 1714 2 1717 8 773 82 774 2 776 2 1719 2 777 2 778 78 1722 2 1721 8 1720 2 1726 2 1727 2 786 2 790 2 789 6 1729 2 1731 2 791 10 1732 24 1733 2 792 2 1734 2 1736 2 795 2 796 60 1740 24 1741 6 1743 4 1744 2 1745 2 797 2 1746 2 1748 2 799 2 801 2 803 20 1755 10 806 1 805 18 1758 2 1760 2 1763 2 811 2 812 2 813 2 815 2 1765 15 817 2 1767 2 821 2 1771 2 1773 2 1774 2 1775 3 1777 2 1782 2 831 4 1784 38 1786 2 832 2 833 2 834 2 835 1 837 2 1789 2 1788 2 1790 2 842 2 1791 2 1792 4 847 2 850 2 851 3 856 2 1798 2 857 3 1799 2 858 78 1800 2 859 2 1802 2 861 2 863 2 864 2 1805 3 1806 3 1807 2 1809 2 1808 76 867 2 1810 2 1811 2 869 2 1812 8 1813 8 874 80 875 2 1815 2 1816 2 1817 38 878 4 879 84 880 2 884 2 885 2 886 82 1823 16 1825 2 1827 12 895 2 1831 2 897 2 899 14 1835 61 1838 2 1840 3 1839 2 902 2 1841 2 1845 3 906 3 907 38 1846 2 1850 84 1853 2 912 38 913 2 915 98 1859 24 917 2 918 314 1864 2 923 2 1865 2 1867 2 926 6 1871 4 929 2 1873 2 1876 2 1875 52 1874 13 932 2 1878 4 1880 2 1879 32 934 3 936 80 1882 124 938 2 937 2 940 2 943 2 1888 3 944 20 946 3 947 2 1889 4 1890 2 950 2 951 6 952 6 954 1 955 2 961 120 1896 2 1898 2 963 8 1899 2 964 14 1900 7 967 2 969 10 971 6 1903 2 1905 3 974 2 976 8 1908 2 1910 2 980 78 979 2 1912 38 984 2 1914 2 1916 13 1915 2 1917 2 1922 80 1923 2 1924 6 989 2 988 2 990 2 1926 2 991 2 994 2 995 2 996 2 1928 2 1930 2 1933 4 1000 2 1001 2 1005 2 1937 2 
1168 2 1337 2 533 2 1433 2 1583 2 1815 2 462 2 1064 2 791 2 1551 2 675 2 1823 2 195 2 497 4 1097 2 298 2 1048 2 505 2 1571 2 66 6 658 2 1782 2 240 2 1480 2 
1168 2 1337 2 533 2 1433 2 1583 2 1815 2 462 2 1064 2 791 2 1551 2 675 2 1823 2 195 2 497 4 1097 2 298 2 1048 2 505 2 1571 2 66 6 658 2 1782 2 240 2 1480 2 
1168 2 1337 2 533 2 1433 2 1583 2 1815 2 462 2 1064 2 791 2 1551 2 675 2 1823 2 195 2 497 4 1097 2 298 2 1048 2 505 2 1571 2 66 6 658 2 1782 2 240 2 1480 2 
1665 2 214 2 1168 2 318 2 1433 3 1708 4 370 3 1585 2 576 2 577 2 578 4 1116 2 944 4 1016 3 23 6 1619 4 86 2 1182 2 1097 10 1048 3 501 2 687 4 201 2 354 2 829 2 926 2 1752 2 1571 2 1129 3 803 4 240 2 1480 4 395 2 971 2 165 2 1875 2 694 4 1229 4 751 2 1248 2 
1665 2 789 2 214 2 1168 2 318 2 1433 2 1708 4 370 2 1585 2 576 2 577 2 578 4 1116 2 944 4 1016 2 23 6 1619 4 86 2 1182 2 1097 10 1048 2 501 2 687 4 201 2 354 2 627 2 829 2 926 2 1752 2 1571 2 1129 2 803 4 240 2 1480 4 395 2 971 2 1033 2 165 2 1875 2 694 4 1229 4 751 2 1248 2 
1665 2 789 2 214 2 1168 2 318 2 1433 2 1708 4 370 2 1585 2 576 2 577 2 578 4 1116 2 944 4 1016 2 23 6 1619 4 86 2 1182 2 1097 10 1048 2 501 2 687 4 201 2 354 2 627 2 829 2 926 2 1752 2 1571 2 1129 2 803 4 240 2 1480 4 395 2 971 2 1033 2 165 2 1875 2 694 4 1229 4 751 2 1248 2 
1665 2 789 2 214 2 1168 2 318 2 1433 2 1708 4 370 2 1585 2 576 2 577 2 578 4 1116 2 944 4 1016 2 23 6 1619 4 86 2 1182 2 1097 10 1048 2 501 2 687 4 201 2 354 2 627 2 829 2 926 2 1752 2 1571 2 1129 2 803 4 240 2 1480 4 395 2 971 2 1033 2 165 2 1875 2 694 4 1229 4 751 2 1248 2 
1665 2 789 4 214 2 1168 2 318 2 1433 2 1708 4 370 2 1585 2 576 2 577 2 578 4 1116 2 944 4 1016 2 23 6 1619 4 86 2 1182 2 1097 10 1048 2 501 2 687 4 201 2 354 2 627 4 829 2 926 2 1752 2 1571 2 1129 2 803 4 240 2 1480 4 395 2 971 2 1033 4 165 2 1875 2 694 4 1229 4 751 2 1248 2 
1728 2 1743 2 1047 2 518 2 575 2 1731 2 182 2 
786 2 1744 2 1122 2 1047 2 346 2 992 2 
1673 2 1253 2 116 1 190 2 949 1 519 2 1591 1 818 1 584 2 1558 2 226 2 1795 2 1097 10 889 2 556 2 1774 2 826 2 894 2 1156 2 1660 1 1371 2 305 2 1480 8 784 2 1724 2 1108 2 
425 2 532 2 789 3 1169 4 1708 15 1585 2 578 12 1648 2 439 2 1619 4 1121 2 1097 6 501 6 686 2 1218 2 354 6 1749 2 924 2 65 4 627 4 1222 2 926 6 999 1 1031 2 1509 2 1480 6 395 6 971 6 1033 2 1248 6 751 6 
1419 2 1097 1 1232 2 403 1 1894 2 254 2 944 2 1589 2 803 2 1480 1 968 2 1045 2 1107 4 104 6 169 2 521 2 694 2 362 2 
1419 2 1232 4 1894 2 254 2 944 2 1589 4 803 2 968 2 1045 2 1107 4 104 6 169 2 521 2 694 2 362 4 
1419 2 1097 1 1232 8 403 1 1894 2 254 8 944 2 1589 8 803 2 1480 1 968 6 1045 2 1107 4 104 10 169 2 521 2 694 2 362 8 
1419 2 1232 2 1894 2 944 2 1589 2 803 2 1045 2 1107 2 104 2 169 2 521 2 694 2 362 2 
1339 4 135 17 1111 124 874 6 1459 4 1458 24 878 2 1817 4 879 14 1710 4 1711 16 413 8 1351 24 145 4 146 2 1355 4 1468 6 28 18 771 4 299 8 1601 4 1827 8 773 14 151 6 1125 4 1718 1 526 6 527 6 778 10 1128 2 35 2 660 248 1480 134 661 15 1243 26 665 6 785 10 1134 58 1484 2 311 6 45 8 1488 112 1845 4 320 4 183 8 909 90 794 4 549 90 1620 4 915 22 56 10 1392 2 1394 6 554 2 918 58 1152 2 199 2 1161 4 206 7 930 2 1633 8 1874 7 1276 2 567 88 1635 4 1637 2 570 2 1639 8 1882 12 936 6 345 92 1065 42 350 6 1067 6 1286 6 1522 12 1173 6 224 10 84 26 85 6 950 8 1072 10 1073 6 1532 42 91 10 827 2 97 4 356 4 100 4 1900 2 596 8 1669 28 243 4 1308 16 1431 6 111 34 368 2 1792 2 721 4 250 24 1203 4 980 24 725 4 1552 18 1912 4 256 4 1314 84 1207 2 1321 36 727 6 259 24 382 6 1922 6 383 10 1097 150 621 6 858 6 1445 6 1216 2 387 24 624 10 392 2 1698 4 745 4 1450 11 507 50 1105 16 749 6 
1635 2 570 2 1637 2 135 2 1639 2 936 2 1111 6 1458 2 1172 4 1461 2 879 2 1642 4 1710 2 1286 2 1173 2 290 2 1349 2 1711 4 224 2 85 2 1351 2 1891 2 950 2 1072 2 522 2 1183 2 231 2 28 2 232 2 91 2 299 2 1826 2 1075 2 419 4 891 2 773 2 1301 2 1425 4 1127 2 778 2 480 2 1128 2 35 2 660 45 596 2 1085 2 1480 44 1834 2 785 2 665 3 1197 2 1134 3 311 2 1669 37 45 2 1308 4 368 2 1488 20 1680 2 250 2 1845 1 183 6 375 2 1204 2 1437 2 255 2 1312 6 185 2 1321 2 56 2 196 2 383 2 1097 46 1212 2 1862 2 918 3 1328 2 1446 2 623 2 1152 2 624 2 1221 2 334 2 630 2 1225 2 1870 2 275 2 1105 4 131 2 808 2 749 2 567 20 
135 10 511 4 1111 24 874 4 1459 4 635 2 1817 4 879 6 1014 8 1711 10 145 4 1468 4 28 10 1827 4 1601 4 773 6 526 4 527 4 778 4 1128 2 660 104 1480 70 661 8 665 2 170 8 1134 30 311 4 45 2 1488 44 320 4 183 6 1847 16 1620 4 56 4 1394 4 918 28 919 2 1152 2 800 2 1405 16 1161 2 206 3 1755 2 930 2 807 8 567 36 1637 2 570 2 1639 2 1882 14 936 4 345 24 1065 16 350 4 1067 4 1286 4 1173 4 224 4 85 4 950 2 1073 4 88 4 1532 8 231 2 91 6 93 4 827 2 596 2 1783 4 359 4 1197 10 1669 14 243 4 1308 10 1431 4 111 30 368 2 1792 2 721 4 1204 2 1437 10 255 2 1912 4 256 4 1314 24 1206 4 1207 2 1321 6 727 4 259 8 383 4 1922 4 1097 78 620 8 621 4 858 4 1445 4 266 32 1219 2 1697 4 1698 4 1221 10 745 4 1932 2 507 8 1105 10 749 4 
570 2 1637 2 135 2 1639 2 936 4 1111 8 878 2 879 2 1710 2 1286 4 1173 4 1711 6 224 2 85 4 146 2 950 2 231 2 28 2 91 2 1827 4 891 2 773 2 356 2 778 2 1128 2 35 2 660 40 596 2 1480 26 661 5 665 2 1134 12 1484 1 311 4 1669 14 45 2 1308 6 111 6 368 2 1488 14 1203 2 320 2 183 4 1321 2 915 9 56 2 1392 2 383 2 1097 28 918 12 1152 2 1216 2 745 2 1450 1 1161 2 1105 6 1874 1 749 4 567 14 
1678 2 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 
765 1 220 1 1618 1 1884 1 119 1 1557 1 

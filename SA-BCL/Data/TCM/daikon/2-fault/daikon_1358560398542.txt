#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1010 838 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 119 807 1682 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ProglangType:isFloat()Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_2_13(I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.FormatTestCase:passes()Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_97()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eq(JJ)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.Invariant:prob_or(DD)D
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quant:eltwiseGTE([I)Z
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:isDerived()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_136()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Debug:logDetail()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_18(I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_125()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:jj_3R_58()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.Quant:lte(II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3R_107()Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_5()Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3_4()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7602 | return null
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_57()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_137()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([I)[I
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:size()I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_86()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_133()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName:hasTypeOf()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:relate_var()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.ProglangType:isScalar()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3_1()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:isIOASet()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:num_samples()I
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:FillBuff()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:isString()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName:hashCode()I
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:split(I)I
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String; | ASSIGN | 9869 | = null
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eq(FF)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_12()Z
utilMDE.Assert:assertTrue(Z)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_2_1(I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eq(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isIOAArray()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt:Ppt()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3_18()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_114()Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
utilMDE.WeakHasherMap:size()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_210()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_100()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.ProglangType:baseIsFloat()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3_30()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_52()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_4(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsString()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:has_typeof()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:Node()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_135()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.JavaParser:jj_3_15()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:min_max([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_3_10()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:gt(II)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:memberOf(F[F)Z
daikon.Debug:logOn()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.Quant:union([I[I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_108()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1204 2 524 4 410 2 1277 2 885 2 1118 2 875 2 968 2 1042 2 
1385 2 1557 2 369 2 1531 2 907 6 556 2 487 6 1458 6 1285 2 1316 2 1400 2 
410 2 202 6 884 2 1029 4 12 6 1629 6 346 2 875 2 570 2 93 6 69 4 42 2 1027 2 
410 6 59 10 1620 2 1544 2 1270 6 1173 12 502 16 844 4 105 8 1226 2 559 8 1129 10 506 4 457 26 1004 2 852 2 875 6 226 29 49 10 266 8 1256 16 1562 4 1533 16 709 10 1649 10 485 6 1506 2 881 4 522 8 1015 2 
960 4 234 6 
1220 2 
1241 2 441 2 1288 2 933 2 661 2 1243 2 447 2 1086 2 278 2 452 2 1093 2 183 2 185 2 7 2 941 2 282 2 1004 2 1628 2 948 2 858 2 348 2 636 2 866 2 683 2 410 4 302 2 913 4 151 2 1389 2 747 2 1443 4 1277 2 44 2 222 2 45 2 875 4 537 2 168 2 652 4 1453 4 169 2 269 2 374 2 1352 2 
410 4 59 16 1037 6 607 2 1601 2 916 2 1638 4 613 4 1270 4 1173 22 939 6 920 4 158 6 389 6 451 2 502 32 1226 2 559 18 1129 16 897 8 457 48 1499 4 875 4 1340 4 49 16 226 55 266 6 1256 32 1533 32 709 16 484 6 485 4 1649 6 881 2 329 6 1508 2 1117 4 720 2 800 4 
118 2 44 2 1098 2 
508 2 480 10 1050 2 222 2 338 2 663 2 323 2 972 2 1257 2 1020 2 279 2 1378 2 603 2 942 22 
1660 2 59 2 208 2 1468 2 1173 2 502 2 559 2 1129 2 457 4 1305 2 194 2 49 2 226 6 1256 2 1533 2 709 2 485 2 1649 4 1632 2 881 2 120 2 824 2 990 2 
457 12 1037 6 59 4 1340 4 226 16 49 4 1638 4 1256 8 1533 8 98 2 709 4 484 6 1173 4 502 8 1489 2 1129 4 506 2 
931 62 150 2 306 4 773 2 686 2 553 2 723 4 64 4 1069 2 664 2 1443 4 748 4 1022 2 895 10 34 2 104 2 975 4 1399 2 1178 4 185 4 1368 2 695 10 1098 2 1181 4 622 2 754 2 1231 4 1047 2 1606 4 945 14 44 8 877 2 1255 2 908 2 515 2 1648 2 118 6 1611 4 374 2 1239 4 
932 2 1220 2 1198 2 1548 2 1175 2 1339 2 326 2 82 2 792 2 300 2 
438 2 1414 2 1191 3 885 2 1512 2 1418 24 1197 2 997 8 1087 2 339 3 1520 2 4 1 1427 2 1300 2 453 2 1522 6 9 3 898 3 10 2 344 12 1103 2 1007 2 137 2 903 2 904 2 1209 2 16 2 460 2 1308 2 672 2 1312 3 1213 2 145 2 795 4 20 2 148 2 467 2 1320 1 1218 2 471 2 1325 12 1120 24 580 4 1018 2 1222 16 1446 1 693 2 1332 4 1555 8 1642 16 1230 2 43 2 925 6 165 2 1451 2 1136 2 1237 2 1138 2 1561 1 926 2 598 1 1452 3 819 2 52 2 170 32 822 1 601 2 1564 2 602 2 55 4 1566 6 829 2 57 3 1038 1 833 2 382 2 384 1 1040 16 276 1 498 2 1573 2 724 2 1244 2 1470 2 1576 1 845 32 1668 2 618 4 850 3 1247 6 70 2 186 1 190 2 1370 2 287 2 289 16 1373 2 192 2 1673 2 399 2 1052 2 1160 1 80 2 79 2 1161 2 736 2 1258 2 1485 1 1163 2 1057 2 200 3 743 2 1166 2 88 2 410 34 1597 2 303 2 305 2 1387 2 206 5 212 2 1174 2 1604 2 868 2 106 2 871 2 648 3 1498 2 1182 8 535 2 1183 2 1076 2 1501 1 320 2 1608 4 876 2 875 32 113 4 429 1 115 2 1408 4 1697 2 1185 1 1610 1 1410 2 766 3 1413 2 1615 3 655 2 
410 2 361 2 
410 4 1526 2 771 2 
149 2 
442 2 1289 2 443 4 444 6 892 4 1293 2 449 58 3 4 894 2 1295 2 1297 4 1296 2 1298 2 1299 2 1301 16 6 2 899 2 1303 8 13 22 902 4 1304 6 905 18 1306 2 1307 12 1310 2 909 94 17 4 462 4 1315 18 464 2 468 12 911 2 1319 2 1321 4 914 88 470 2 1324 2 26 2 27 4 1326 2 474 2 1327 2 918 2 31 2 37 2 1328 2 36 6 1329 2 1331 2 477 2 1334 2 478 2 1338 2 924 6 481 2 1341 2 47 2 483 48 50 2 1342 44 927 2 1348 20 488 2 930 2 492 96 1351 2 1358 2 495 2 1362 2 1363 358 497 88 62 2 499 2 500 2 937 62 1364 4 938 2 65 2 940 2 504 18 505 2 71 4 1371 4 72 2 509 2 75 94 510 2 511 2 950 4 514 12 517 2 518 2 1379 2 520 2 1382 6 86 2 961 2 89 6 965 2 526 2 91 4 529 46 1391 2 97 12 100 4 534 2 533 2 1398 2 976 246 108 2 1405 6 978 94 112 2 538 2 116 28 117 2 121 2 122 14 123 2 543 2 1415 2 547 22 995 2 1419 30 550 2 552 94 1422 94 998 4 557 2 129 2 1424 2 1426 16 1425 12 560 2 134 2 563 16 1431 2 566 2 1006 2 568 2 1010 2 142 2 1012 6 144 2 143 2 572 2 1434 2 1435 2 1436 2 1437 2 576 2 577 4 1440 2 154 2 1444 2 1445 4 1024 42 1448 2 1449 4 161 2 587 2 164 2 594 2 595 18 596 2 597 246 600 2 1032 4 1455 2 1459 4 172 74 173 2 1460 2 604 4 175 2 176 4 1036 2 1465 2 177 2 611 2 610 2 178 2 1043 2 180 2 614 2 182 42 1471 4 1472 2 188 30 1476 4 1477 2 191 2 193 2 623 2 1479 2 624 2 625 18 626 2 1484 2 1056 2 1486 2 633 2 1062 4 637 4 1064 2 639 2 1494 2 1066 2 641 2 643 2 218 2 1075 2 1077 4 223 8 224 8 650 2 653 2 1080 4 1083 42 1085 54 656 2 228 4 659 2 1514 8 662 2 665 2 1088 2 1089 2 666 2 668 2 670 94 238 2 239 6 1527 2 1530 8 673 2 677 14 1111 2 244 4 1113 2 679 104 247 44 1535 4 680 2 681 6 248 4 1536 2 1537 2 1119 2 1121 6 252 58 253 2 1545 8 255 2 1123 4 688 2 256 52 1549 18 692 2 258 2 696 56 1130 2 697 2 1554 2 1131 4 699 2 1556 2 701 4 260 2 700 36 1133 2 261 4 1135 36 702 4 263 14 1559 2 707 2 706 50 710 4 1139 4 1565 2 714 16 716 4 717 2 1568 44 1149 2 1569 2 1151 2 1152 50 722 4 1574 18 1578 4 1581 90 1154 6 1155 2 1585 2 1157 2 1159 4 1158 4 733 2 1589 2 294 2 297 74 1162 2 738 94 739 2 1593 2 741 2 1594 2 1596 4 1167 50 301 2 1169 62 308 2 312 2 749 2 750 2 313 2 314 2 1603 2 315 2 1180 2 316 2 1179 2 752 2 317 2 319 2 1607 2 757 22 324 2 328 2 767 4 1188 2 1618 12 1190 52 770 8 1193 2 335 4 1194 4 1196 8 1622 2 1627 2 1202 2 1203 2 1206 6 345 4 1207 4 1210 18 786 2 790 94 349 2 798 30 799 2 1216 4 352 88 355 4 1217 4 1636 18 803 4 1639 10 1223 2 808 2 1225 4 1640 4 1229 2 809 2 810 48 364 4 1232 2 367 6 817 2 371 2 820 2 1652 2 1655 2 1657 4 376 2 826 2 378 2 1658 2 1240 2 380 4 1663 2 1242 2 838 2 839 2 840 2 842 94 1666 2 388 2 390 4 846 4 391 2 392 4 1669 2 1249 246 1671 2 1254 2 1675 2 403 4 857 2 856 94 1679 4 404 12 405 62 1680 2 407 2 408 4 1259 2 864 6 1686 2 1265 2 1687 2 1271 2 416 2 417 2 1272 2 1273 2 867 2 421 2 869 4 1691 2 1693 2 1692 2 422 2 426 2 874 16 1280 100 1696 2 1281 2 879 4 1282 4 430 2 880 4 432 2 1701 12 1284 58 436 2 437 94 883 2 1286 2 
649 2 1551 2 651 2 1367 1 
1386 2 649 2 
431 2 44 2 721 2 152 2 649 2 1411 2 1562 2 
431 2 1079 2 649 2 
431 2 649 2 1664 2 
1404 2 1483 2 651 2 
431 2 649 2 
1483 2 1150 2 
649 2 507 2 
1483 2 651 2 56 2 
1132 2 956 2 651 2 
651 2 92 2 1553 2 
409 2 651 2 635 2 
273 2 1439 2 651 2 
1483 2 1125 2 
735 2 649 2 
111 2 956 2 
1457 2 1553 2 
409 2 783 2 
162 2 1439 2 
1483 2 590 2 
1439 2 1201 2 
159 2 409 2 
1553 2 201 2 
1251 2 956 2 
1483 2 1013 2 651 2 56 2 
1483 2 1013 2 934 2 651 2 56 2 
1483 2 1577 2 651 2 
1483 2 651 2 1475 2 
1112 2 678 2 1025 2 39 2 
1172 2 44 2 1411 2 1665 2 
1172 2 1600 2 44 2 152 2 1411 2 1665 2 
431 2 44 2 1016 2 649 2 1411 2 1562 2 
76 2 1352 2 
44 2 198 2 1411 2 1562 2 
1447 2 409 2 
1439 2 1645 2 
1528 2 956 2 
1092 2 1553 2 
53 2 1439 2 1553 2 
400 2 1439 2 1553 2 
1439 2 1553 2 1302 2 
548 2 1439 2 1553 2 
991 2 1662 2 1023 6 8 2 44 2 703 6 1411 2 718 2 
1483 2 1491 2 
73 2 993 2 1051 2 1542 2 887 4 579 2 859 2 1563 2 141 2 910 4 1481 2 63 2 18 2 928 2 131 2 713 2 1091 2 942 6 
327 2 651 2 
724 2 
1414 2 885 2 1512 2 545 2 1197 2 1427 2 1522 2 344 8 1205 2 241 4 1209 1 137 2 16 2 906 2 672 2 795 4 145 2 148 2 467 2 471 2 1325 8 357 2 580 2 693 6 1332 4 589 2 479 2 925 6 165 2 1451 2 52 2 819 2 170 6 822 2 1564 2 55 4 1566 2 829 2 382 1 498 2 725 2 1244 4 845 4 618 2 1247 5 1370 2 289 6 851 4 192 2 1673 2 79 2 1054 2 954 2 1485 2 1057 2 298 2 1488 2 1490 2 1597 2 410 26 88 2 1387 2 1174 2 1602 2 106 2 1182 2 535 2 1608 4 320 2 875 26 876 2 115 2 1184 2 1408 2 1610 4 984 2 435 2 1413 2 
1414 2 885 2 1512 2 545 2 1197 2 1427 2 1522 2 344 8 1205 2 241 4 14 2 1209 2 137 2 16 2 906 2 672 2 795 4 145 2 148 2 467 2 471 2 1325 8 357 2 580 2 583 2 693 6 1332 4 589 2 925 6 165 2 1451 2 52 2 819 2 170 6 822 2 1564 2 55 4 1566 2 829 2 382 2 498 2 725 2 1244 4 845 4 618 2 1247 6 1370 2 289 6 851 4 192 2 1673 2 79 2 1054 2 954 2 1485 2 1057 2 1488 2 1490 2 410 26 1597 2 88 2 1387 2 99 2 1174 2 106 2 1182 2 1183 2 535 2 1608 4 320 2 875 26 876 2 115 2 1184 2 1408 2 1610 2 984 2 435 2 1413 2 
288 2 
1344 2 1279 2 
272 2 992 2 230 2 834 4 1359 4 1197 2 1517 2 1044 2 893 10 779 2 501 2 342 2 135 2 567 2 136 8 1531 4 907 6 1110 2 79 2 245 2 1055 2 463 2 1164 2 865 4 148 2 958 2 23 2 1597 2 410 12 1387 2 250 2 251 2 95 2 156 4 1174 2 217 2 1400 2 107 8 363 2 1335 4 1235 2 1030 2 815 2 925 4 1608 2 875 6 265 2 369 2 225 2 1647 2 487 6 227 2 1458 6 1143 2 1654 2 55 2 1656 4 1285 4 1146 2 829 2 
272 2 992 2 230 2 834 4 1359 4 1197 2 1517 2 1041 4 1044 2 893 10 779 2 501 2 342 2 135 2 567 2 136 8 1531 4 907 8 1110 2 79 2 245 2 1055 2 463 2 1633 2 1164 2 865 4 1316 2 148 2 958 2 23 2 1597 2 410 12 1387 2 250 2 95 2 156 4 1174 2 1071 2 217 2 1400 2 107 8 363 2 1335 4 1030 2 1608 2 815 2 925 4 875 6 265 2 369 2 225 2 1647 2 487 8 227 2 55 2 1143 2 1654 2 1458 6 1656 4 1285 4 1146 2 829 2 
230 2 834 2 815 2 1359 4 265 2 225 2 1531 2 907 2 1647 2 1044 2 779 2 463 2 1654 2 1458 2 865 4 1285 2 217 2 958 2 
272 2 992 2 230 2 834 4 1359 4 1197 2 1517 2 1044 2 893 6 779 2 501 2 342 2 135 2 567 2 136 4 1531 4 907 6 1110 2 79 2 245 2 1055 2 463 2 1164 2 865 4 1316 2 148 2 958 2 23 2 1597 2 410 12 1387 2 250 2 251 2 95 2 156 4 1174 2 217 2 1400 2 107 4 363 2 1335 4 1235 2 1030 2 815 2 925 4 1608 2 875 6 265 2 225 2 1647 2 487 6 227 2 1458 4 1143 2 1654 2 55 2 1656 4 1285 4 1146 2 829 2 
272 2 992 2 230 2 834 4 1359 4 1197 2 1517 2 1044 2 893 6 779 2 501 2 342 2 135 2 567 2 136 4 1531 4 907 4 1110 2 79 2 245 2 1055 2 463 2 1164 2 865 4 148 2 958 2 23 2 1597 2 1385 2 410 12 1387 2 250 2 251 2 95 2 156 4 1174 2 217 2 1400 2 107 4 363 2 1335 4 1235 2 1030 2 815 2 925 4 1608 2 875 6 265 2 225 2 1647 2 487 6 227 2 1458 6 1143 2 1654 2 55 2 1656 4 1285 4 1146 2 829 2 
272 2 992 2 230 2 834 4 1359 4 1197 2 1517 2 1044 2 893 6 779 2 501 2 342 2 135 2 567 2 136 4 1531 4 907 6 1110 2 79 2 245 2 1055 2 463 2 1164 2 865 4 148 2 958 2 23 2 1597 2 410 12 1387 2 250 2 251 2 95 2 156 4 1174 2 217 2 1400 2 107 8 363 2 1335 4 1235 2 1030 2 815 2 925 4 1608 2 875 6 265 2 369 2 225 2 1647 2 487 6 227 2 1458 6 1143 2 1654 2 55 2 1656 4 1285 4 1146 2 829 2 
272 2 992 2 230 2 834 4 1359 4 1197 2 1517 2 1044 2 893 10 779 2 501 2 342 2 135 2 567 2 136 8 1531 4 907 6 1110 2 79 2 245 2 1055 2 463 2 1164 2 865 4 148 2 958 2 23 2 1597 2 1385 2 410 12 1387 2 250 2 251 2 95 2 156 4 1174 2 217 2 1400 2 107 8 363 2 1335 4 1235 2 1030 2 1608 2 815 2 925 4 875 6 265 2 369 2 225 2 1647 2 487 8 227 2 1458 8 1143 2 1654 2 55 2 1656 4 1285 4 1146 2 829 2 
272 2 992 2 230 2 834 4 1359 4 1197 2 1517 2 1044 2 893 10 779 2 501 2 342 2 135 2 567 2 136 8 1531 4 907 6 1110 2 79 2 245 2 1055 2 463 2 1164 2 865 4 148 2 958 2 23 2 1597 2 410 12 1387 2 250 2 251 2 95 2 156 4 1174 2 217 2 1400 2 107 8 363 2 1335 4 1235 2 1030 2 815 2 925 4 1608 2 875 6 265 2 369 2 225 2 1647 2 487 6 227 2 1458 6 1143 2 1654 2 55 2 1656 4 1285 4 1146 2 829 2 
885 2 1512 2 230 2 889 2 1517 2 891 6 893 2 454 2 1522 2 1097 2 1526 6 1531 4 907 4 672 2 1110 2 245 2 243 2 246 6 463 2 23 2 471 2 1323 6 684 7 1325 4 250 2 251 2 690 2 693 6 1332 4 1335 8 925 6 265 2 52 2 1346 6 487 12 1564 12 55 4 1143 2 1566 2 1146 2 272 4 1359 4 1361 6 498 2 725 4 501 2 67 6 284 2 1370 2 289 6 944 2 293 6 1376 2 79 2 516 6 1164 2 84 2 958 2 523 2 1597 2 1385 4 963 2 88 2 1387 2 1170 1 95 2 1174 2 1400 4 107 2 979 2 1182 2 1608 4 322 2 115 2 981 2 1408 2 1409 1 762 1 124 2 330 6 1414 2 992 2 549 2 1195 2 1197 2 779 2 1624 2 1427 2 1430 6 342 2 135 4 344 4 567 2 1209 2 138 2 347 2 795 4 145 2 148 2 354 6 149 6 801 6 357 2 580 2 805 2 156 4 584 2 361 6 363 2 589 2 365 1 1030 2 815 2 165 2 1451 2 1647 2 170 8 1653 2 373 8 171 1 1458 8 1654 2 1656 6 375 2 1035 2 829 2 382 2 609 1 834 4 1044 2 1473 2 845 2 618 2 1247 6 851 4 397 2 1048 2 192 2 1672 6 854 1 1055 2 1057 2 865 4 1490 2 410 46 1263 2 1267 2 413 4 209 7 1690 1 217 2 424 2 1073 1 1502 2 875 24 225 2 227 2 1082 10 1702 4 1285 4 
1414 2 992 2 334 2 885 2 230 2 1512 2 1195 2 549 2 1197 2 889 2 1517 2 891 6 893 2 779 2 1624 2 1427 2 1430 6 1522 2 454 2 1097 2 342 2 135 4 344 8 1526 6 567 2 138 2 1209 2 347 2 1531 4 672 2 907 8 1110 2 243 2 245 2 246 6 463 2 145 2 795 4 148 2 149 6 354 6 23 2 801 6 1323 6 471 2 1325 8 357 2 251 2 250 2 580 4 805 2 156 4 690 2 582 2 584 2 693 6 361 6 1332 4 1335 8 363 2 589 2 1030 2 815 2 925 6 1451 2 165 2 369 4 265 2 1647 2 52 2 170 8 1346 6 1653 2 487 12 373 8 1564 12 1566 2 1143 2 1654 2 1458 8 55 4 375 2 1656 6 1035 2 1146 2 829 2 272 4 382 2 1361 6 834 4 1359 4 498 2 1244 2 725 4 1044 2 501 2 1473 2 67 6 845 2 618 4 284 2 1247 6 1370 2 1048 2 397 2 851 4 289 6 944 2 1672 6 192 2 293 6 1376 2 79 2 1055 2 516 6 1057 2 1164 2 84 2 865 4 1490 2 958 2 523 2 88 2 963 2 410 48 1597 2 1387 2 1263 2 413 4 1267 2 95 2 1174 2 1400 4 217 2 107 6 424 2 979 2 1182 2 1608 4 1502 2 322 2 875 26 225 2 981 2 115 2 1408 4 227 2 1082 10 124 2 1702 4 330 6 1285 4 
1414 2 992 2 334 2 885 2 230 2 1512 2 1195 2 549 2 1197 2 889 2 1517 2 891 6 893 6 779 2 1624 2 1427 2 1430 6 1522 2 454 2 1097 2 342 2 135 4 344 8 1526 6 567 2 136 4 138 2 1209 2 347 2 1531 4 672 2 907 8 1110 2 243 2 245 2 246 6 463 2 145 2 795 4 148 2 149 6 354 6 23 2 801 6 1323 6 471 2 1325 8 357 2 251 2 250 2 580 4 805 2 156 4 690 2 582 2 584 2 693 6 361 6 1332 4 1335 8 363 2 589 2 1030 2 815 2 925 6 1451 2 165 2 369 4 265 2 1647 2 52 2 170 8 1346 6 1653 2 487 12 373 8 1564 12 1566 2 1143 2 1654 2 1458 8 55 4 375 2 1656 6 1035 2 1146 2 829 2 272 4 382 2 1361 6 834 4 1359 4 498 2 1244 2 725 4 1044 2 501 2 1473 2 67 6 845 2 618 4 284 2 1247 6 1370 2 1048 2 397 2 851 4 289 6 944 2 1672 6 192 2 293 6 1376 2 79 2 1055 2 516 6 1057 2 1164 2 84 2 865 4 1490 2 958 2 523 2 88 2 963 2 410 48 1597 2 1387 2 1263 2 413 4 1267 2 95 2 1174 2 1400 4 217 2 107 6 424 2 979 2 1182 2 1608 4 1502 2 322 2 875 26 225 2 981 2 115 2 1408 4 227 2 1082 10 124 2 1702 4 330 6 1285 4 
885 2 1512 2 230 2 889 2 1517 2 891 12 893 6 454 2 1522 4 1097 2 1101 6 1526 12 1531 4 907 10 672 2 674 6 1110 2 245 2 243 2 246 6 463 2 1316 2 466 6 23 2 471 2 1323 6 1325 10 250 2 251 2 690 2 693 8 1550 6 1332 4 1335 8 925 6 265 2 52 2 1346 12 487 16 1564 10 1142 2 55 4 1143 2 1566 4 1146 2 272 4 1359 4 1361 6 498 2 725 4 501 2 67 6 284 2 1370 2 289 8 944 2 293 12 1376 2 79 2 516 6 1164 2 84 2 958 2 523 2 1385 2 1597 2 963 2 88 2 1387 2 95 2 1174 2 1395 6 1400 4 107 6 979 2 1182 4 1608 4 322 2 115 2 981 2 1408 4 124 2 330 6 1414 2 992 2 334 2 1195 2 549 2 1197 2 779 2 1624 2 1427 2 1430 6 342 2 135 4 344 10 567 2 136 4 1209 2 138 2 347 2 1009 2 794 6 795 4 145 2 350 2 148 2 354 6 149 12 801 6 1219 2 357 2 580 4 805 2 156 4 582 2 584 2 361 12 1227 6 363 2 589 4 1030 2 815 2 165 2 1451 2 369 4 1647 2 170 12 1653 2 373 8 1458 10 1654 2 1656 6 375 2 1035 2 829 2 382 2 834 4 1244 2 1044 2 1473 2 845 4 618 4 1247 6 851 6 397 2 1048 2 192 2 1672 6 1676 2 1055 2 1057 2 865 4 1490 2 410 52 1263 2 1267 2 413 4 211 2 870 6 217 2 1274 2 647 6 1502 2 875 24 225 2 1503 2 227 2 1082 8 1702 4 1285 4 
23 2 410 4 1359 2 251 2 250 2 95 2 1044 2 156 2 893 4 779 2 501 2 1400 2 217 2 107 6 1335 2 363 2 1030 2 136 4 815 2 369 2 265 2 1531 4 907 6 1110 2 1647 2 245 2 487 4 227 2 1143 2 1654 2 1458 6 1656 2 865 2 1285 4 1146 2 
1414 2 885 2 1512 2 1197 2 893 2 450 3 779 2 1427 2 1522 3 342 2 1007 2 1209 2 1531 4 907 6 672 2 1110 2 245 2 795 4 145 2 148 2 23 2 471 2 357 2 1441 2 251 2 250 2 804 2 156 2 693 6 1332 4 1335 2 363 2 1030 2 925 6 815 2 165 2 1451 2 369 2 265 2 48 2 1647 2 52 2 170 8 487 4 1564 4 1458 6 55 4 1566 3 1654 2 1143 2 1656 2 929 2 1146 2 829 2 382 2 1359 2 498 2 724 2 725 2 1044 2 501 2 845 3 1247 6 1370 2 289 6 851 4 192 2 196 2 79 2 80 2 1057 2 865 2 1490 2 410 28 1597 2 305 2 1387 2 95 2 1174 2 1400 2 217 2 107 6 424 2 1608 4 875 24 115 2 227 2 1082 2 1285 4 
501 2 1369 2 1110 2 
501 2 1369 2 1110 2 
1189 2 333 2 1414 2 885 2 1512 2 549 2 1516 4 1197 2 1517 2 893 6 1427 2 135 4 565 2 344 4 567 2 136 4 1209 2 1531 4 672 2 907 12 1110 4 788 2 245 2 1534 2 795 4 1316 4 148 2 471 2 249 2 1325 4 357 2 580 4 687 4 156 2 693 2 1332 4 363 2 1335 4 925 6 815 4 165 2 1451 2 593 2 705 2 369 4 167 2 1647 2 52 2 170 2 487 16 1564 4 55 4 1458 12 1656 4 1145 2 829 2 272 2 1355 2 606 2 382 2 834 4 1359 2 498 2 725 6 1044 2 501 6 843 2 845 2 618 4 1369 2 1247 6 1370 2 1048 2 289 2 192 2 79 2 406 2 1057 2 1164 2 865 2 1490 2 958 2 963 2 88 4 410 24 1597 2 411 2 1385 4 1387 2 413 2 94 2 1174 2 1400 4 107 6 219 2 1608 4 875 16 225 2 115 2 1408 4 1610 2 984 4 1082 2 1702 2 330 2 1285 4 
333 2 1523 2 410 4 230 2 1195 2 875 2 167 2 413 2 1344 2 406 2 1564 2 1082 2 330 2 645 2 379 2 148 2 1035 2 
1189 2 333 2 1414 2 992 2 885 2 1512 2 549 2 1516 4 1197 2 1517 2 893 6 1427 2 5 2 135 4 344 4 567 2 136 4 1209 2 1531 4 672 2 907 12 1110 4 788 2 245 2 1534 4 795 4 1316 4 148 2 471 2 1325 4 357 2 580 4 687 4 156 2 693 2 1332 4 1335 4 363 2 925 6 815 4 165 2 1451 2 593 2 705 2 369 4 167 2 1647 2 52 2 170 2 487 16 1564 2 55 4 1458 12 1656 4 829 2 1355 2 272 4 1148 2 606 2 382 2 834 4 1359 2 836 2 498 2 725 6 1044 2 501 6 843 2 845 4 618 4 1369 2 1247 6 1370 2 1048 2 289 2 192 2 79 2 406 2 1057 2 1164 2 865 2 1490 2 958 2 963 2 88 4 410 24 1597 2 411 2 1385 4 1598 2 1387 2 1174 2 1400 4 1497 2 107 6 219 2 1608 4 875 16 225 2 115 2 1408 4 984 4 1702 2 330 2 1285 4 
1189 2 333 2 1414 2 992 2 885 2 660 2 1512 2 549 2 1516 4 1197 2 1517 2 893 6 1427 2 135 4 344 4 567 2 136 4 1209 2 1531 4 672 2 907 12 1110 4 788 2 245 2 1534 2 795 4 465 2 1316 4 148 2 471 2 1325 4 357 2 580 4 687 4 156 2 693 2 1332 4 363 2 1335 4 925 6 815 4 165 2 1451 2 593 2 705 2 369 4 167 2 1647 2 52 2 170 2 487 16 1564 4 55 4 1458 12 1656 4 829 2 1355 2 272 4 606 2 382 2 383 2 834 4 1359 2 498 2 725 6 1044 2 501 6 843 2 845 2 618 4 1369 2 1247 6 1370 2 1048 2 289 2 192 2 79 2 406 2 1057 2 1164 2 865 2 1490 2 958 2 963 2 88 4 410 24 1597 2 411 2 1385 4 1387 2 413 2 1174 2 1400 4 107 6 219 2 1608 4 875 16 225 2 115 2 1408 4 1610 1 984 4 1507 2 1082 2 1702 2 330 2 1616 2 1285 4 
439 48 440 26 0 24 885 8 1 2 1290 2 886 3 445 2 888 2 446 48 889 2 2 3 1291 4 448 48 1292 26 450 2 453 7 1300 2 455 2 456 2 897 8 898 3 10 2 900 22 457 18 901 2 458 2 459 3 904 2 15 4 460 2 906 58 1308 2 1309 2 1313 3 20 7 21 48 22 2 1317 2 1318 2 469 2 1320 1 912 2 1322 2 25 2 471 52 1325 124 472 2 28 22 29 4 473 42 915 2 917 26 30 22 919 1 921 42 33 50 475 2 35 3 476 2 1330 3 40 2 1333 58 1332 248 1336 3 1337 2 43 2 925 8 482 2 46 2 48 2 49 6 926 9 52 2 1343 28 486 4 1345 2 1347 2 489 3 490 16 1349 54 55 6 54 2 491 2 1350 48 1353 2 1354 48 57 2 58 2 1356 2 59 6 493 2 1357 18 494 2 1360 2 496 4 935 48 61 2 498 8 936 20 1365 2 66 2 502 12 503 48 68 2 70 2 1370 52 74 2 1373 2 1372 2 1374 26 946 2 1375 2 77 2 512 73 949 2 78 24 951 2 1376 2 79 2 1377 2 952 2 953 3 954 2 955 2 83 8 1381 1 521 2 959 2 962 48 1384 4 88 10 87 2 525 2 967 48 1387 2 1388 2 527 2 969 48 1390 2 528 2 970 2 971 2 530 4 1392 26 96 2 531 2 101 2 1394 48 103 1 102 96 532 2 974 2 1396 2 1397 2 975 2 1401 1 1402 6 110 2 1403 3 536 16 113 18 980 1 114 1 1406 2 1407 26 115 2 981 14 539 2 982 344 983 8 119 2 540 2 1410 2 541 32 985 48 1412 22 987 2 986 2 989 1 988 58 125 2 1414 2 126 2 1416 2 1417 2 545 2 127 4 994 2 1418 30 546 2 551 8 997 14 128 4 1421 14 554 2 555 4 130 2 999 2 1000 4 1001 2 1427 2 1429 2 559 6 133 5 561 8 562 22 1003 2 564 4 1432 2 1008 2 138 2 139 26 1009 2 140 20 1011 10 145 2 1014 48 146 32 147 2 148 2 1438 3 575 48 1017 2 1441 2 153 2 155 96 1442 96 1018 2 1019 12 581 2 158 6 1446 6 584 4 586 58 585 2 160 2 1026 3 1028 2 589 46 1450 2 591 22 165 4 1451 2 592 8 166 4 599 2 1452 2 1031 2 170 98 1454 8 601 2 602 2 1461 2 1462 2 174 3 1463 2 1464 2 605 78 1037 6 607 2 608 5 1040 68 179 2 612 2 181 4 1470 2 615 2 1045 2 1474 96 617 7 184 8 1046 4 619 26 187 4 190 2 189 4 1049 2 1478 26 192 2 1052 2 1480 2 195 3 196 2 627 48 197 2 1054 2 1482 15 629 22 631 22 630 2 1485 3 1057 2 632 2 1488 2 634 6 1059 2 200 2 1492 2 1493 2 1063 2 638 2 203 2 1065 4 640 2 204 2 1067 3 205 2 207 1 1495 2 1068 8 210 2 211 2 212 2 215 26 644 2 1496 48 1070 2 216 48 646 38 1072 8 648 2 1498 2 221 48 1500 20 1502 2 1504 22 226 23 1505 10 1081 2 1509 78 1510 4 657 2 658 18 1511 48 229 2 1512 2 231 4 1513 2 1515 48 232 18 1518 2 1087 2 233 2 1519 2 235 2 1520 2 1090 2 1521 2 1095 2 669 10 1522 46 1096 2 236 3 237 2 1524 96 240 2 1103 2 1104 2 1105 2 1106 18 1107 2 1532 12 672 2 1109 2 676 4 1533 12 675 2 242 26 243 14 1114 2 1115 2 1116 2 1117 4 682 54 1538 48 1539 2 685 2 1120 15 1540 2 1541 4 1543 2 1122 116 1546 24 1547 2 1124 2 689 4 691 116 690 2 257 2 1126 22 693 14 1127 2 1552 2 1128 4 1129 6 1555 14 259 2 1134 2 1558 3 262 2 704 14 1560 2 1561 1 1138 2 1137 116 266 6 708 2 709 6 711 2 712 2 1141 2 268 4 1142 2 1564 4 715 8 1566 16 1144 74 720 4 271 4 1147 20 1567 4 1570 3 274 2 1571 4 1572 3 276 1 275 2 277 2 1573 2 725 2 726 102 1575 2 1153 2 281 22 283 2 1580 2 1582 54 1583 26 287 2 1584 2 731 20 1156 2 732 12 289 26 1586 3 1587 2 734 2 1588 2 291 2 1590 10 1160 1 1163 2 1591 18 740 2 1592 48 742 26 1165 2 743 2 744 2 1166 2 745 2 1597 2 304 1 1599 10 303 2 306 2 746 2 1171 2 307 2 311 4 1173 10 1174 2 1181 2 753 8 1605 3 1182 62 1608 6 1609 2 321 2 755 2 756 2 1184 2 758 10 1610 1 759 2 760 2 761 2 764 3 763 12 1611 2 1612 3 1613 4 1186 3 1614 2 766 3 765 2 1615 2 1617 3 768 2 331 2 332 2 769 16 1619 2 1191 2 1192 10 336 51 1621 4 1197 2 337 4 776 4 1199 48 777 2 339 2 1200 4 340 2 1626 6 1625 4 780 16 782 2 341 2 343 22 344 129 1205 2 784 2 1209 198 1208 2 347 2 1630 2 785 2 787 2 789 104 1631 2 791 2 1213 2 796 26 795 296 797 1 350 2 351 2 1215 3 353 2 1218 2 1635 2 356 4 1219 2 1637 2 357 2 804 2 1638 4 1222 14 1221 2 358 3 806 2 807 2 359 2 1226 2 360 10 1228 2 1641 48 1642 38 1230 2 1231 2 1233 3 1234 4 366 2 813 2 1236 20 1643 2 814 20 368 2 816 2 370 16 821 2 1238 48 1650 2 372 20 822 2 1651 2 823 48 375 2 825 4 827 2 829 2 381 4 831 2 832 2 1661 2 382 190 384 8 385 2 841 2 387 2 845 76 847 2 848 6 850 2 1246 16 1245 2 1247 680 394 16 1248 2 395 8 396 48 851 12 853 2 398 24 1252 10 1674 7 855 2 401 2 402 2 1676 2 1678 18 860 48 1677 4 1256 12 861 2 1681 48 1682 2 862 2 1683 20 1684 36 1685 2 410 741 1260 2 1262 2 1263 2 1264 6 1266 2 414 18 1267 2 1269 2 415 26 1270 4 418 2 419 2 1689 2 420 2 868 2 1274 4 423 2 871 2 1275 2 1278 22 1276 3 425 2 875 600 1694 48 1695 58 429 1 428 2 427 22 878 2 1697 2 1698 2 1699 2 882 4 1700 48 1283 2 434 2 435 2 1704 96 1287 2 
410 2 806 2 693 2 845 2 360 4 1522 2 236 2 1248 2 589 6 109 2 289 2 851 2 1643 2 1252 2 1105 2 321 2 946 2 875 2 1011 2 170 2 1114 2 1614 2 145 2 1566 2 
410 2 806 2 693 2 845 2 360 4 1522 2 236 2 1248 2 589 6 109 2 289 2 851 2 1643 2 1252 2 1105 2 321 2 946 2 875 2 1011 2 170 2 1114 2 1614 2 145 2 1566 2 
410 2 806 2 693 2 845 2 360 4 1522 2 236 2 1248 2 589 6 109 2 289 2 851 2 1643 2 1252 2 1105 2 321 2 946 2 875 2 1011 2 170 2 1114 2 1614 2 145 2 1566 2 
410 10 59 2 1571 2 1040 2 936 4 1688 2 1270 2 775 2 1546 3 1019 2 726 6 1224 2 1294 2 502 2 728 2 845 3 1522 3 1129 2 457 4 621 3 1642 2 731 4 943 2 1500 4 1005 2 875 4 1529 4 49 2 226 5 78 3 266 4 513 2 1256 2 51 2 1533 2 709 2 170 2 372 4 1614 2 145 2 
59 2 1571 2 1040 2 936 4 775 2 726 6 1294 2 502 2 728 2 845 2 559 2 1522 2 621 2 457 4 731 4 943 2 1005 2 1529 4 78 2 513 2 1256 2 1533 2 145 2 410 10 1270 2 1688 2 1019 2 1546 2 1173 2 1224 2 1226 2 1129 2 1642 2 1500 4 875 4 226 4 49 2 266 4 51 2 709 2 170 2 372 4 1614 2 
59 2 1571 2 1040 2 936 4 775 2 726 6 1294 2 502 2 728 2 845 2 559 2 1522 2 621 2 457 4 731 4 943 2 1005 2 1529 4 78 2 513 2 1256 2 1533 2 145 2 410 10 1270 2 1688 2 1019 2 1546 2 1173 2 1224 2 1226 2 1129 2 1642 2 1500 4 875 4 226 4 49 2 266 4 51 2 709 2 170 2 372 4 1614 2 
59 2 1571 2 1040 2 936 4 775 2 726 6 1294 2 502 2 728 2 845 2 559 2 1522 2 621 2 457 4 731 4 943 2 1005 2 1529 4 78 2 513 2 1256 2 1533 2 145 2 410 10 1270 2 1688 2 1019 2 1546 2 1173 2 1224 2 1226 2 1129 2 1642 2 1500 4 875 4 226 4 49 2 266 4 51 2 709 2 170 2 372 4 1614 2 
59 2 1571 2 1040 2 936 4 775 2 726 6 1294 2 502 2 728 2 845 2 559 4 1522 2 621 2 457 4 731 4 943 2 1005 2 1529 4 78 2 513 2 1256 2 1533 2 145 2 410 10 1270 2 1688 2 1019 2 1546 2 1173 4 1224 2 1226 4 1129 2 1642 2 1500 4 875 4 226 4 49 2 266 4 51 2 709 2 170 2 372 4 1614 2 
825 2 1034 2 1253 2 751 2 698 2 830 2 
964 2 540 2 132 2 906 2 1061 2 957 2 830 2 
1383 1 1168 2 410 10 574 1 412 2 90 2 835 2 254 2 837 2 310 2 1069 1 1174 2 727 2 362 2 588 2 1525 2 163 2 875 8 877 1 1053 1 1140 2 1346 2 737 2 1487 2 519 2 299 2 
657 2 410 6 544 2 1037 4 59 6 933 2 231 2 1638 2 1270 2 1173 4 158 4 502 6 585 2 1226 2 559 2 897 2 1129 6 457 12 875 6 1480 2 949 2 226 16 49 6 858 2 266 4 1256 6 1533 6 709 6 1117 2 1634 2 
731 2 410 1 1500 2 875 1 947 2 1065 2 774 2 81 6 267 2 372 2 571 2 1212 2 214 2 433 2 1176 2 694 4 1060 1 828 2 
731 2 1500 2 947 4 1065 4 774 2 81 6 267 2 571 2 372 2 1212 2 214 2 433 2 1176 2 694 4 828 4 
731 2 410 1 1500 2 875 1 947 8 1065 8 774 2 81 10 267 2 571 8 372 2 1212 6 214 2 433 2 1176 2 694 4 1060 1 828 8 
731 2 1500 2 947 2 1065 2 774 2 81 2 267 2 372 2 214 2 433 2 1176 2 694 2 828 2 
439 6 1511 6 336 8 994 8 1515 6 446 42 448 6 1199 24 555 4 778 90 1626 4 1428 2 1002 2 669 8 900 4 343 4 1100 26 344 28 1524 36 459 2 671 90 1209 58 1108 2 789 50 1211 8 1314 10 795 112 1014 10 21 24 1538 6 1438 4 24 4 802 4 471 14 575 6 578 6 1122 92 155 17 1442 16 30 4 157 4 691 34 586 4 922 1 1126 4 1330 2 1332 88 41 2 811 4 1641 10 1336 2 812 18 1558 2 591 4 165 8 818 2 1137 84 1238 10 268 4 823 6 377 2 1144 12 719 24 1659 26 1354 6 382 58 1039 2 935 10 1575 8 503 24 1474 18 729 8 617 11 849 4 1046 2 281 4 1579 10 285 2 1247 248 1370 14 1250 4 1670 8 396 6 1674 7 512 22 1678 15 860 6 953 2 627 6 629 4 296 2 631 4 1681 6 863 2 1592 10 1380 4 85 10 1595 12 410 150 962 6 967 6 1264 4 969 6 642 2 973 24 1394 42 102 16 1496 6 1177 4 216 6 1605 6 221 6 1278 4 875 134 1406 8 1694 6 1407 2 427 4 982 124 1078 2 1610 4 983 7 1700 6 654 24 985 6 1703 4 1187 2 1704 16 
382 3 127 4 336 6 994 2 996 2 60 2 935 2 1420 2 890 2 1469 2 1575 2 280 2 1366 2 616 2 1623 2 1474 2 1667 2 667 2 1428 2 1094 2 1579 2 730 2 896 2 1099 2 1247 45 393 2 286 2 620 2 1370 2 1524 2 1670 2 344 37 1209 3 292 2 1108 2 860 2 627 2 1311 2 296 2 793 2 573 2 1314 2 795 20 1014 2 1058 2 1592 2 1380 2 85 2 410 46 1438 1 967 2 966 2 471 2 1261 2 575 2 1393 4 155 2 309 2 1442 4 973 2 1021 2 102 4 1333 6 1332 20 41 2 977 2 1641 2 318 4 872 2 220 2 1605 3 221 2 165 2 1644 2 875 44 1406 2 982 6 1646 2 1078 2 325 2 1610 2 1238 2 1700 2 1456 2 1033 4 654 2 542 2 1084 2 377 2 270 2 719 2 1704 4 
439 4 1511 4 994 2 336 6 772 4 1515 4 446 16 551 2 448 4 555 4 1423 4 1626 2 1428 2 1094 10 781 4 669 4 900 4 343 4 1524 6 344 14 11 16 1102 2 1209 30 1108 2 789 8 461 4 1433 2 19 4 795 44 1014 4 471 6 575 4 1122 24 155 10 1442 10 30 4 691 30 32 4 1126 4 38 2 1332 36 1641 4 1336 2 1558 2 591 4 165 2 264 2 818 2 1137 24 1238 6 268 4 823 4 377 2 1144 14 1354 4 382 28 1039 2 935 4 1466 4 386 8 1469 2 1575 2 503 8 1474 10 281 4 1247 104 393 2 620 10 1370 6 396 4 290 32 1674 3 295 2 860 4 1678 8 627 4 628 8 629 4 296 2 631 4 1681 4 1592 4 199 8 410 78 962 4 967 4 969 4 1394 8 213 16 102 10 1496 4 216 4 872 10 220 2 1605 2 873 8 221 4 1278 4 875 70 1406 2 1694 4 427 4 982 24 1078 2 1700 4 985 4 1704 10 
382 12 336 4 994 2 935 2 1420 2 555 2 1575 2 1626 2 1474 2 1428 2 617 1 1002 2 669 4 393 2 1247 40 1370 2 344 14 1524 2 459 2 1209 12 512 9 1108 2 1678 5 860 4 953 2 627 4 296 2 795 14 1014 2 1592 2 410 28 967 4 471 2 575 4 1264 2 1442 6 155 2 691 6 102 6 586 2 1330 1 1332 14 41 2 1641 2 1605 2 221 4 165 2 875 26 1406 2 982 8 1078 2 1610 2 1238 2 983 1 1700 4 268 2 377 2 1187 2 1704 6 
1074 2 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 
558 1 569 1 1268 1 1214 1 1467 1 923 1 

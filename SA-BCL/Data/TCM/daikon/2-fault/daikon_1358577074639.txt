#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 745 460 1032 427 170 502 971 1044 42 224 430 223 811 837 179 298 761 331 970 296 978 877 574 941 2 4 803 838 1015 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 533 139 1030 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (121,658) 1094 518 547 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (121,658) 1094 518 547 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_114()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ValueTuple:size()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_53()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_62()Z
daikon.Debug:logDetail()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.inv.Invariant:logDetail()Z
daikon.diff.Node:Node()V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.ModBitTracker:num_samples()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:relate_var()V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:slice([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:sum([I)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_118()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(J[J)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.PptSlice2:arity()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_58()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_96()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_120()Z
daikon.ProglangType:dimensions()I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ProglangType:isScalar()Z
daikon.ProglangType:baseIsScalar()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quant:memberOf(I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:eltwiseLT([I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:setEqual([I[I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_134()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern:numIntArrays()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:lt(II)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([J[J)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:isPointer()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.RootNode:RootNode()V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfo:new_ppt()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:readChar()C
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_117()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | OPERATOR | 107346 | <= -> ==
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptSlice1:arity()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_121()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE:pow(II)I
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3_13()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eq(JJ)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_21()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:intern([I)[I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_161()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariants:Invariants()V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3R_52()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_15()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eq(DD)Z
daikon.PptSlice0:arity()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.JavaParser:jj_3R_148()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([D)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral; | RETURN | 92129 | return null
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3_5()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_4()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:hashCode()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt:Ppt()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 2 1027 2 400 4 656 2 658 2 918 2 121 2 846 2 1049 2 
1113 2 380 6 40 2 934 2 1024 6 408 2 1097 6 309 2 828 2 31 2 438 2 
372 2 730 2 215 6 658 2 121 2 43 4 788 2 282 4 386 6 772 2 538 6 213 2 165 6 
612 10 355 2 235 26 658 6 733 10 878 16 1020 6 242 8 589 10 49 4 715 10 121 6 192 8 306 10 826 4 683 16 411 29 721 6 1041 2 1042 2 943 4 722 8 901 2 536 2 566 4 347 2 1048 2 67 8 394 16 571 12 
1077 6 486 4 
999 2 
612 2 137 2 511 2 235 4 733 2 991 2 206 2 878 2 185 2 589 2 242 2 822 2 1101 2 49 2 338 2 715 4 306 2 683 2 787 2 411 6 721 2 394 2 571 2 
1081 4 612 4 508 2 337 2 51 6 235 12 808 6 733 4 933 4 826 2 306 4 683 8 878 8 411 15 394 8 589 4 571 5 
1 6 1083 2 573 4 354 4 432 2 619 2 700 4 329 2 736 10 1060 2 813 2 476 4 740 4 850 4 629 4 481 4 664 2 630 2 489 2 85 2 117 2 148 4 1003 2 823 2 676 8 248 10 153 2 598 2 494 2 409 4 1036 2 27 62 896 2 253 4 836 4 1039 2 415 2 129 14 1012 2 201 4 
999 2 47 2 768 2 1074 2 193 2 62 2 726 2 904 2 539 2 463 2 
987 2 328 2 467 2 140 2 12 2 480 2 629 4 481 2 16 2 1067 2 917 2 82 2 632 2 19 2 932 2 935 2 343 4 725 2 802 2 1083 2 658 4 433 2 1086 2 735 4 960 2 237 2 297 2 662 2 367 2 115 2 369 2 523 2 371 2 52 2 676 2 597 2 121 4 974 2 1038 2 198 2 1048 2 1049 2 1052 4 540 2 
1081 4 612 16 617 2 235 48 808 6 658 4 733 16 1088 6 236 4 208 4 266 2 878 32 1020 4 211 4 628 6 882 2 402 2 445 2 114 8 589 16 242 18 49 2 51 6 715 6 121 4 933 4 306 16 192 6 683 32 560 4 411 54 497 2 686 4 721 4 536 2 390 6 288 6 394 32 571 22 
1 2 676 2 813 2 
1080 2 425 22 151 2 73 2 988 2 990 2 455 2 268 2 127 2 814 2 917 2 346 10 645 2 404 2 
259 1 543 3 844 1 992 2 701 2 847 2 703 2 144 2 271 2 853 1 852 3 405 6 858 8 407 24 278 2 714 2 555 2 281 1 25 1 283 2 157 6 28 2 416 2 29 2 870 16 417 2 1011 2 286 4 33 16 569 1 290 2 291 16 424 6 873 1 731 3 876 1 437 16 879 2 582 2 46 2 738 2 739 3 1023 4 742 2 883 1 586 1 886 2 186 2 591 3 1029 2 1031 2 1035 2 456 3 748 2 60 2 195 2 196 2 603 2 64 2 897 2 313 2 609 4 316 2 903 2 756 2 318 2 905 2 907 2 203 4 615 2 465 2 325 1 326 2 466 2 909 32 472 2 764 3 473 3 1062 2 330 2 478 2 1064 2 916 2 484 12 1065 6 777 2 930 2 1071 2 635 2 90 12 636 2 783 1 92 2 220 2 495 2 93 2 796 2 228 2 799 3 951 2 351 2 353 3 954 2 649 2 656 2 658 32 809 2 515 2 1087 4 516 2 959 5 356 1 961 2 1092 2 361 1 963 2 815 4 1096 8 819 2 109 2 113 4 370 2 522 1 244 3 965 2 245 2 246 2 668 32 119 2 969 8 674 2 681 2 682 24 121 34 122 2 975 2 250 2 251 1 976 2 384 1 252 2 829 2 982 2 530 2 128 2 840 4 254 3 132 2 1124 2 
197 2 
161 2 121 2 
255 2 121 4 927 2 
2 2 260 2 4 2 8 2 845 2 11 20 269 4 545 4 13 2 14 24 546 40 270 2 273 2 277 4 550 2 857 20 279 6 22 4 24 4 556 8 284 8 867 4 32 4 289 2 874 2 574 2 875 4 294 2 42 2 44 14 877 2 579 14 296 2 298 2 585 4 584 4 593 26 595 2 54 2 56 2 891 24 599 46 57 2 601 2 895 8 900 46 898 2 315 2 66 2 608 2 321 2 614 4 912 14 913 22 626 46 331 2 332 4 79 2 921 46 922 6 83 4 924 6 631 2 335 6 928 2 939 176 95 2 940 4 941 2 643 8 946 6 99 4 952 2 953 2 655 46 657 4 102 4 103 2 357 8 360 8 105 36 962 4 964 46 108 4 966 4 667 2 669 2 967 10 374 2 677 8 970 2 971 2 679 2 680 46 378 36 684 4 977 2 978 2 979 2 981 16 392 2 690 6 692 2 693 4 135 2 989 2 697 2 699 2 398 46 997 2 142 46 704 10 1001 36 1005 2 159 4 1008 4 1009 2 419 2 727 4 167 2 729 2 427 2 170 2 1015 2 173 2 430 2 435 2 436 4 179 2 440 2 180 2 741 4 441 12 744 2 745 2 448 14 746 146 1026 2 454 22 1032 2 458 2 460 2 752 8 1044 2 1046 20 757 2 200 2 464 2 758 2 1053 2 761 2 762 48 468 8 1055 8 1058 2 1057 2 1059 14 471 146 475 46 766 4 212 4 482 4 483 2 1066 4 491 2 493 8 782 2 784 46 219 8 496 4 790 2 223 2 499 4 224 2 226 10 797 4 501 146 502 2 803 2 507 2 233 4 514 2 811 2 1093 2 238 20 818 4 817 4 1103 2 1108 2 1110 2 837 2 838 2 841 48 842 28 537 8 1119 16 
716 2 1034 2 720 1 647 2 
791 2 716 2 
553 2 795 2 676 2 696 2 
553 2 795 2 676 2 696 2 890 2 1061 2 
299 2 1084 2 676 2 696 2 716 2 566 2 
217 2 433 2 
676 2 696 2 566 2 147 2 
323 2 755 2 
379 2 194 2 
1085 2 87 2 
169 2 1099 2 
379 2 1016 2 1099 2 
379 2 340 2 1099 2 
633 2 379 2 1099 2 
816 2 379 2 1099 2 
696 2 695 2 362 2 549 2 488 2 712 6 676 2 972 6 
35 2 660 2 
299 2 676 2 696 2 716 2 566 2 890 2 116 2 
299 2 716 2 308 2 
136 2 299 2 716 2 
35 2 1034 2 1100 2 
299 2 716 2 
35 2 793 2 
1114 2 716 2 
35 2 1082 2 1034 2 
1028 2 87 2 1034 2 
1034 2 1099 2 368 2 
755 2 1034 2 17 2 
687 2 379 2 1034 2 
35 2 89 2 
525 2 716 2 
303 2 87 2 
1099 2 848 2 
225 2 755 2 
379 2 166 2 
35 2 638 2 
379 2 1000 2 
413 2 755 2 
623 2 1099 2 
492 2 87 2 
35 2 258 2 1082 2 1034 2 
35 2 258 2 1082 2 705 2 1034 2 
35 2 908 2 1034 2 
35 2 618 2 1034 2 
1104 2 397 2 385 2 998 2 
188 2 425 6 650 2 654 2 74 2 172 2 429 2 6 2 734 2 263 2 936 2 531 2 831 2 344 2 902 4 391 4 70 2 149 2 
1034 2 231 2 
326 2 
844 2 702 2 405 2 555 2 157 5 562 2 28 2 416 2 417 2 286 2 1011 2 33 6 290 6 424 2 575 2 876 2 582 2 46 2 881 4 1023 4 590 4 887 2 450 2 1031 2 1035 2 307 2 748 2 603 2 897 2 313 2 609 2 903 2 1051 2 203 2 465 2 909 6 466 2 472 2 484 8 916 2 1065 6 925 2 930 2 635 2 90 8 636 2 220 2 796 2 951 1 351 2 656 2 658 26 809 2 1087 4 516 2 1091 2 519 2 815 4 819 2 113 4 965 2 522 4 370 2 118 2 668 4 671 2 969 2 681 4 121 26 975 2 250 1 383 2 530 2 982 2 128 2 388 2 130 2 1123 2 
844 2 262 2 702 2 405 2 555 2 157 6 562 2 28 2 416 2 417 2 286 2 1011 2 33 6 290 6 423 2 424 2 171 2 876 2 582 2 46 2 881 4 1023 4 590 4 887 2 450 2 1031 2 1035 2 307 2 748 2 603 2 897 2 313 2 609 2 903 2 1051 2 203 2 465 2 909 6 466 2 472 2 484 8 916 2 1065 6 930 2 635 2 90 8 636 2 220 2 796 2 951 2 351 2 656 2 658 26 809 2 1087 4 516 2 1091 2 519 2 815 4 819 2 113 4 965 2 522 2 370 2 118 2 246 2 668 4 969 2 681 4 121 26 975 2 250 2 383 2 530 2 982 2 128 2 388 2 130 2 1123 2 
1107 2 
292 2 512 2 
0 2 993 2 469 2 763 2 265 2 915 2 770 2 1065 4 81 4 1068 2 490 2 1002 2 930 2 21 4 934 4 408 2 220 2 719 2 410 2 561 2 862 2 866 2 96 4 97 4 800 2 567 2 351 2 648 8 806 2 426 2 658 6 40 4 1087 2 41 2 577 2 815 2 182 4 1097 6 1024 6 111 2 365 2 447 2 592 2 304 10 451 4 191 2 376 2 825 2 380 6 121 12 748 2 893 2 309 2 530 2 603 2 835 2 461 8 462 2 903 2 1120 2 
0 2 993 2 469 2 763 2 265 2 915 2 770 2 1065 4 81 4 1068 2 18 4 490 2 1002 2 930 2 21 4 934 4 408 2 220 2 719 2 410 2 862 2 866 2 96 4 97 4 800 2 567 2 351 2 648 8 426 2 806 2 658 6 1087 2 40 4 41 2 1089 2 577 2 815 2 182 4 1097 8 1024 8 111 2 365 2 885 2 592 2 304 10 451 4 191 2 376 2 825 2 380 6 121 12 748 2 893 2 309 2 828 2 530 2 603 2 835 2 461 8 462 2 903 2 1120 2 
0 2 592 2 426 2 451 4 806 2 380 2 40 2 934 2 41 2 835 2 866 2 462 2 81 4 97 2 1068 2 1097 2 111 2 1120 2 
0 2 993 2 469 2 763 2 265 2 915 2 770 2 1065 4 81 4 1068 2 490 2 1002 2 930 2 21 4 934 4 220 2 719 2 410 2 561 2 862 2 866 2 96 4 97 4 800 2 567 2 351 2 648 4 806 2 426 2 658 6 40 4 1087 2 41 2 577 2 815 2 182 4 1097 6 1024 6 111 2 365 2 447 2 592 2 304 6 451 4 191 2 376 2 825 2 380 4 121 12 748 2 893 2 309 2 828 2 530 2 603 2 835 2 461 4 462 2 903 2 1120 2 
0 2 993 2 469 2 763 2 265 2 915 2 770 2 1065 4 81 4 1068 2 490 2 1002 2 930 2 21 4 934 4 220 2 719 2 410 2 561 2 862 2 866 2 96 4 97 4 800 2 567 2 351 2 648 4 806 2 426 2 658 6 40 4 1087 2 41 2 577 2 815 2 182 4 1097 4 1024 6 111 2 365 2 447 2 592 2 304 6 451 4 191 2 376 2 825 2 380 6 121 12 748 2 893 2 309 2 530 2 603 2 835 2 1113 2 461 4 462 2 903 2 1120 2 
0 2 993 2 469 2 763 2 265 2 915 2 770 2 1065 4 81 4 1068 2 490 2 1002 2 930 2 21 4 934 4 408 2 220 2 719 2 410 2 561 2 862 2 866 2 96 4 97 4 800 2 567 2 351 2 648 8 806 2 426 2 658 6 40 4 1087 2 41 2 577 2 815 2 182 4 1097 6 1024 6 111 2 365 2 447 2 592 2 304 6 451 4 191 2 376 2 825 2 380 6 121 12 748 2 893 2 309 2 530 2 603 2 835 2 461 4 462 2 903 2 1120 2 
0 2 993 2 469 2 763 2 265 2 915 2 770 2 1065 4 81 4 1068 2 490 2 1002 2 930 2 21 4 934 4 408 2 220 2 719 2 410 2 561 2 862 2 866 2 96 4 97 4 800 2 567 2 351 2 648 8 806 2 426 2 658 6 40 4 1087 2 41 2 577 2 815 2 182 4 1097 6 1024 8 111 2 365 2 447 2 592 2 304 10 451 4 191 2 376 2 825 2 380 8 121 12 748 2 893 2 309 2 530 2 603 2 835 2 1113 2 461 8 462 2 903 2 1120 2 
0 2 993 2 469 2 763 2 265 2 915 2 770 2 1065 4 81 4 1068 2 490 2 1002 2 930 2 21 4 934 4 408 2 220 2 719 2 410 2 561 2 862 2 866 2 96 4 97 4 800 2 567 2 351 2 648 8 806 2 426 2 658 6 40 4 1087 2 41 2 577 2 815 2 182 4 1097 6 1024 6 111 2 365 2 447 2 592 2 304 10 451 4 191 2 376 2 825 2 380 6 121 12 748 2 893 2 309 2 530 2 603 2 835 2 461 8 462 2 903 2 1120 2 
541 1 0 2 265 2 274 6 276 1 552 2 21 4 555 2 862 2 866 2 286 2 567 4 33 6 290 6 40 4 41 2 577 2 580 1 46 2 881 4 887 2 592 2 304 2 892 6 58 2 893 2 59 6 309 4 310 4 603 2 897 2 311 2 313 2 609 2 903 2 613 2 327 6 909 8 620 2 914 2 915 2 624 10 81 4 80 2 919 1 927 6 336 6 930 2 635 12 339 2 934 4 90 4 636 2 639 2 96 8 97 4 951 2 351 2 648 2 652 6 656 2 658 24 359 1 107 2 363 6 364 6 111 2 365 2 110 2 113 4 965 2 370 2 666 2 668 2 968 6 969 2 675 6 375 2 376 2 120 2 380 8 121 46 975 2 123 2 383 2 124 2 982 2 685 2 128 2 388 2 986 2 993 2 405 2 713 6 1002 2 406 6 152 7 410 2 719 2 156 2 157 6 412 6 416 2 161 6 417 2 422 1 424 2 168 7 426 2 1019 1 1023 4 182 6 183 2 1024 12 447 2 187 2 451 4 452 2 191 4 748 2 749 2 751 2 197 6 462 2 203 2 465 2 469 2 763 2 209 1 767 2 770 2 484 4 1065 6 1068 2 490 2 220 2 796 2 503 2 800 2 801 1 804 2 805 2 806 2 809 2 1087 4 517 2 519 4 815 4 1097 4 247 8 825 2 527 2 526 2 250 2 530 2 1109 4 835 2 833 2 1113 4 1120 2 
0 2 993 2 265 2 274 6 405 2 552 2 1002 2 713 6 406 6 21 4 555 2 408 4 719 2 410 2 156 2 412 6 157 6 862 2 866 2 416 2 161 6 417 2 286 4 567 4 33 6 290 6 424 2 426 2 40 4 41 2 577 2 46 2 881 4 1023 4 182 6 183 2 1024 12 187 2 447 2 592 2 887 2 304 2 451 4 452 2 191 4 58 2 892 6 59 6 893 2 748 2 749 2 309 4 310 4 603 2 751 2 311 2 897 2 313 2 197 6 462 2 609 4 903 2 610 2 613 2 203 4 465 2 327 6 909 8 469 2 763 2 620 2 914 2 767 2 624 10 915 2 484 8 770 2 1065 6 80 2 81 4 1068 2 927 6 490 2 336 6 930 2 339 2 635 12 90 8 934 4 636 2 220 2 789 2 639 2 96 8 796 2 97 4 503 2 800 2 951 2 804 2 351 2 805 2 648 6 652 6 806 2 656 2 809 2 658 26 1087 4 517 2 519 4 107 2 815 4 363 6 364 6 1097 8 110 2 365 2 111 2 113 4 370 2 965 2 666 2 668 2 968 6 247 8 375 2 675 6 969 2 120 2 376 2 681 2 825 2 121 48 380 8 526 2 527 2 975 2 123 2 250 2 124 2 383 2 1109 4 685 2 982 2 530 2 833 2 835 2 128 2 388 2 1120 2 986 2 
0 2 993 2 265 2 274 6 405 2 552 2 1002 2 713 6 406 6 21 4 555 2 408 4 719 2 410 2 156 2 412 6 157 6 862 2 866 2 416 2 161 6 417 2 286 4 567 4 33 6 290 6 424 2 426 2 40 4 41 2 577 2 46 2 881 4 1023 4 182 6 183 2 1024 12 187 2 447 2 592 2 887 2 304 6 451 4 452 2 191 4 58 2 892 6 59 6 893 2 748 2 749 2 309 4 310 4 603 2 751 2 311 2 897 2 313 2 197 6 461 4 462 2 609 4 903 2 610 2 613 2 203 4 465 2 327 6 909 8 469 2 763 2 620 2 914 2 767 2 624 10 915 2 484 8 770 2 1065 6 80 2 81 4 1068 2 927 6 490 2 336 6 930 2 339 2 635 12 90 8 934 4 636 2 220 2 789 2 639 2 96 8 796 2 97 4 503 2 800 2 951 2 804 2 351 2 805 2 648 6 652 6 806 2 656 2 809 2 658 26 1087 4 517 2 519 4 107 2 815 4 363 6 364 6 1097 8 110 2 365 2 111 2 113 4 370 2 965 2 666 2 668 2 968 6 247 8 375 2 675 6 969 2 120 2 376 2 681 2 825 2 121 48 380 8 526 2 527 2 975 2 123 2 250 2 124 2 383 2 1109 4 685 2 982 2 530 2 833 2 835 2 128 2 388 2 1120 2 986 2 
0 2 265 2 274 12 552 2 21 4 555 2 862 2 866 2 868 2 286 4 567 4 33 8 290 8 40 4 41 2 577 2 46 2 881 6 887 2 592 2 304 6 305 2 55 6 892 12 58 2 893 2 59 6 309 4 310 4 603 2 897 2 311 2 313 2 609 4 903 2 610 2 613 2 327 6 909 12 620 2 914 2 915 2 624 8 81 4 80 2 927 12 336 6 930 2 635 10 339 2 934 4 90 10 636 2 639 2 96 8 642 6 97 4 350 6 951 2 351 2 648 6 652 12 656 2 658 24 955 6 663 2 107 2 363 6 364 6 111 2 365 2 110 2 113 4 965 2 370 2 666 2 668 4 968 6 969 4 675 6 375 2 376 2 120 2 681 2 678 2 380 10 121 52 975 2 123 2 383 4 124 2 982 2 685 2 128 2 388 2 993 2 708 2 145 2 146 6 405 4 1002 2 713 6 406 6 408 4 410 2 719 2 156 2 157 6 412 6 416 2 161 12 417 2 424 4 426 2 1023 4 182 6 183 2 1024 16 187 2 447 2 451 4 190 6 189 6 452 2 191 4 748 2 749 2 751 2 461 4 197 12 462 2 203 4 465 2 469 2 763 2 767 2 770 2 484 10 771 2 1065 6 1068 2 490 2 220 2 789 2 221 2 796 2 503 2 505 6 800 2 804 2 805 2 806 2 809 2 1087 4 517 2 519 4 815 4 1097 10 247 8 1106 6 825 2 527 2 526 2 250 2 828 2 530 2 1109 4 835 2 833 2 1113 2 1120 2 
0 2 648 6 426 2 806 2 40 4 763 2 265 2 577 2 915 2 770 2 81 2 182 2 1024 4 1097 6 365 2 111 2 490 2 447 2 304 4 451 2 21 2 376 2 825 2 121 4 380 6 934 4 408 2 893 2 309 2 862 2 835 2 96 2 461 4 462 2 1120 2 
0 2 265 2 405 3 278 2 21 2 555 2 408 2 410 2 283 2 157 6 862 2 1007 2 416 2 417 2 33 6 290 6 424 3 426 2 40 4 577 2 46 2 881 4 1023 4 742 2 182 2 1024 4 447 2 887 2 304 2 451 2 457 2 748 2 893 2 309 2 603 2 897 2 899 2 313 2 606 2 462 2 903 2 465 2 326 2 909 8 763 2 624 2 915 2 770 2 1065 6 81 2 490 2 930 2 635 4 934 4 636 2 91 3 220 2 96 2 796 2 947 2 951 2 351 2 648 6 806 2 656 2 658 24 809 2 1087 4 519 2 815 4 1097 6 365 2 111 2 113 4 965 2 668 3 376 2 825 2 380 6 121 28 975 2 250 2 530 2 982 2 835 2 128 2 388 2 1120 2 986 2 
376 2 365 2 210 2 
376 2 365 2 210 2 
0 2 993 2 396 2 141 2 551 2 552 2 1002 2 406 2 21 2 555 2 408 4 557 2 559 2 157 6 862 2 416 2 417 2 1010 2 286 4 287 4 567 4 33 2 36 4 290 2 40 4 41 2 46 2 1023 4 182 4 302 2 1024 16 592 2 887 2 304 6 451 2 191 2 748 2 309 4 310 2 603 2 897 2 313 2 461 4 462 4 609 4 903 2 199 2 322 2 203 4 465 2 909 2 469 2 210 2 624 2 484 4 770 2 1065 6 333 2 81 2 930 2 635 4 90 4 934 4 636 2 220 2 96 4 796 2 97 4 348 2 951 2 351 2 805 2 648 6 806 2 656 2 658 16 809 2 1087 4 517 2 661 2 519 6 815 4 1097 12 365 6 113 4 370 4 522 2 965 2 668 2 672 2 376 4 121 24 380 12 975 2 250 2 828 4 1109 2 530 2 983 2 128 2 388 2 1113 4 130 4 389 2 1117 2 843 2 
406 2 86 2 512 2 635 2 658 2 121 4 396 2 124 2 1109 2 624 2 160 2 1010 2 709 2 903 2 302 2 1068 2 187 2 
0 2 993 2 396 2 264 2 141 2 552 2 1002 2 406 2 21 2 555 2 408 4 559 2 157 6 862 2 416 2 417 2 1010 2 286 4 287 4 567 4 33 2 36 4 290 2 40 4 41 2 46 2 1023 4 182 4 302 2 1024 16 592 2 887 2 304 6 451 2 191 4 748 2 309 4 310 2 603 2 897 2 313 2 461 4 462 4 609 4 903 2 199 2 322 2 203 4 465 2 909 2 469 2 210 2 484 4 770 2 1065 6 333 2 81 2 930 2 635 2 90 4 934 4 636 2 220 2 96 4 796 2 97 4 348 2 800 2 948 2 951 2 351 2 805 2 648 6 806 2 656 2 658 16 809 2 1087 4 517 2 661 4 519 6 815 4 1097 12 365 6 113 4 241 2 370 4 965 2 668 4 376 4 121 24 380 12 975 2 250 2 529 2 828 4 530 2 128 2 388 2 1113 4 130 4 389 2 1117 2 843 2 1118 2 
0 2 993 2 396 2 141 2 552 2 1002 2 406 2 21 2 555 2 1006 2 408 4 559 2 157 6 862 2 416 2 869 2 417 2 1010 2 286 4 287 4 567 4 33 2 36 4 290 2 40 4 41 2 46 2 1023 4 182 4 302 2 1024 16 592 2 887 2 304 6 50 2 451 2 191 4 748 2 309 4 310 2 603 2 897 2 313 2 461 4 462 4 609 4 903 2 199 2 322 2 203 4 465 2 909 2 469 2 210 2 624 2 484 4 770 2 1065 6 333 2 81 2 930 2 931 2 635 4 90 4 934 4 636 2 220 2 96 4 796 2 97 4 348 2 800 2 951 2 351 2 805 2 648 6 806 2 656 2 658 16 809 2 1087 4 517 2 661 2 519 6 815 4 1097 12 365 6 113 4 370 4 522 1 965 2 668 2 376 4 121 24 380 12 975 2 250 2 828 4 1109 2 530 2 128 2 388 2 1113 4 130 4 389 2 1117 2 843 2 133 2 
542 4 3 2 261 2 844 2 5 10 7 2 544 2 850 2 15 2 548 4 854 2 860 2 555 4 280 2 23 2 26 2 562 2 865 6 868 2 870 4 871 2 33 14 571 6 290 14 291 4 572 1 293 1 38 16 876 2 295 4 878 8 880 2 46 2 881 12 583 2 301 2 588 2 589 4 48 2 887 2 51 6 594 12 53 2 888 3 596 4 306 4 307 2 600 2 894 2 602 2 603 2 63 2 897 4 312 2 604 2 313 2 606 2 314 2 903 2 71 2 320 2 612 4 72 2 616 3 909 28 910 2 620 4 621 2 78 14 923 2 929 2 634 2 930 2 635 2 88 2 90 25 637 4 636 2 91 2 937 2 94 2 345 2 944 6 945 2 947 2 949 10 349 2 644 2 98 2 951 5 351 2 651 2 656 4 100 3 658 38 663 2 106 2 112 10 113 8 370 4 965 2 118 2 668 19 969 20 678 2 121 48 975 2 683 8 123 2 382 16 383 46 982 2 387 2 125 2 126 2 128 2 131 6 985 10 393 4 691 2 394 8 134 6 395 12 994 4 138 2 139 2 702 2 399 4 706 12 708 2 145 2 402 2 148 2 711 2 405 19 1004 2 717 2 718 2 156 2 157 17 411 14 158 2 1007 2 414 2 416 2 723 2 162 12 417 4 418 1 163 4 421 2 164 1 1013 2 728 2 424 16 1014 2 431 2 174 3 733 4 175 2 176 2 1018 2 434 2 737 2 1020 4 1021 2 181 2 1023 10 442 2 184 2 443 4 446 2 449 4 450 2 453 16 1030 2 1033 4 192 6 457 2 748 2 749 2 750 2 459 2 753 2 1040 4 1050 2 1051 2 201 2 759 16 760 1 465 2 1054 2 1056 16 204 2 205 2 474 2 765 14 476 2 767 2 771 2 484 24 1065 6 487 2 1069 1 216 2 1073 3 781 2 786 2 220 2 221 2 497 4 1076 4 796 2 503 2 229 14 232 12 1081 4 234 2 513 2 235 12 809 4 810 2 1087 4 1090 1 1091 14 812 2 519 2 1095 2 521 10 815 4 820 2 240 24 239 4 1098 4 821 2 242 4 1102 2 250 5 528 2 827 4 530 2 834 2 832 2 833 2 1111 2 253 2 533 2 535 2 1115 2 257 4 1122 12 1123 2 
728 2 290 2 424 2 3 2 909 2 658 2 5 2 881 2 583 2 112 2 405 2 668 2 1004 2 778 2 1073 2 121 2 383 6 982 2 63 2 312 2 604 2 753 2 985 4 33 2 
728 2 290 2 424 2 3 2 909 2 658 2 5 2 881 2 583 2 112 2 405 2 668 2 1004 2 778 2 1073 2 121 2 383 6 982 2 63 2 312 2 604 2 753 2 985 4 33 2 
728 2 290 2 424 2 3 2 909 2 658 2 5 2 881 2 583 2 112 2 405 2 668 2 1004 2 778 2 1073 2 121 2 383 6 982 2 63 2 312 2 604 2 753 2 985 4 33 2 
612 2 291 2 235 4 100 3 909 2 658 4 733 2 174 3 295 2 996 4 1017 2 207 2 470 3 578 2 878 2 477 2 1020 2 143 4 520 4 589 2 405 3 150 2 668 3 121 10 1075 2 973 2 306 2 192 4 218 2 683 2 982 2 411 4 63 2 500 4 944 6 285 4 870 2 564 2 1078 2 394 2 
612 2 291 2 235 4 100 2 909 2 658 4 733 2 174 2 295 2 996 4 1017 2 207 2 470 2 578 2 878 2 477 2 1020 2 143 4 520 4 589 2 242 2 405 2 150 2 668 2 121 10 1075 2 973 2 306 2 192 4 218 2 683 2 982 2 411 4 63 2 500 4 944 6 285 4 870 2 536 2 564 2 1078 2 394 2 571 2 
612 2 291 2 235 4 100 2 909 2 658 4 733 2 174 2 295 2 996 4 1017 2 207 2 470 2 578 2 878 2 477 2 1020 2 143 4 520 4 589 2 242 2 405 2 150 2 668 2 121 10 1075 2 973 2 306 2 192 4 218 2 683 2 982 2 411 4 63 2 500 4 944 6 285 4 870 2 536 2 564 2 1078 2 394 2 571 2 
612 2 291 2 235 4 100 2 909 2 658 4 733 2 174 2 295 2 996 4 1017 2 207 2 470 2 578 2 878 2 477 2 1020 2 143 4 520 4 589 2 242 2 405 2 150 2 668 2 121 10 1075 2 973 2 306 2 192 4 218 2 683 2 982 2 411 4 63 2 500 4 944 6 285 4 870 2 536 2 564 2 1078 2 394 2 571 2 
612 2 291 2 235 4 100 2 909 2 658 4 733 2 174 2 295 2 996 4 1017 2 207 2 470 2 578 2 878 2 477 2 1020 2 143 4 520 4 589 2 242 4 405 2 150 2 668 2 121 10 1075 2 973 2 306 2 192 4 218 2 683 2 982 2 411 4 63 2 500 4 944 6 285 4 870 2 536 4 564 2 1078 2 394 2 571 4 
807 2 300 2 341 2 84 2 1091 2 950 2 1121 2 
7 2 587 2 214 2 884 2 1079 2 950 2 
351 2 611 2 202 2 509 1 39 2 658 8 101 2 957 2 10 2 104 2 920 2 274 2 710 2 121 10 598 1 155 2 984 1 641 1 415 1 1045 2 839 2 563 2 798 2 504 2 506 2 568 2 
987 2 1081 2 612 6 651 2 617 1 235 12 658 6 733 6 958 2 878 6 1020 2 773 2 855 2 114 2 589 6 242 3 19 2 51 4 121 6 306 6 192 4 683 6 411 15 1076 2 686 2 640 2 535 2 536 2 390 4 394 6 571 5 
859 2 428 2 658 1 121 1 576 2 9 1 911 2 558 4 178 2 864 2 500 2 65 2 520 2 754 2 285 2 1116 2 403 2 230 6 
859 2 428 2 576 4 911 2 558 4 178 2 864 4 500 2 65 2 520 2 754 2 285 2 1116 2 403 4 230 6 
859 2 428 8 658 1 121 1 576 8 9 1 911 2 558 4 178 6 864 8 500 2 65 2 520 2 754 2 285 2 1116 2 403 8 230 10 
859 2 576 2 911 2 558 2 864 2 500 2 65 2 520 2 754 2 285 2 1116 2 403 2 230 2 
395 2 995 2 138 2 849 1 547 2 718 2 555 4 157 14 417 4 418 1 421 2 164 2 293 1 572 2 38 2 732 2 1018 2 737 2 1023 8 449 4 596 4 1033 4 600 2 897 4 314 2 906 1 760 1 1056 2 205 2 487 2 1069 1 1072 2 90 4 637 4 94 2 951 4 234 2 513 2 658 20 518 2 1094 2 106 2 113 6 373 2 121 22 250 4 830 2 834 2 1115 2 
694 2 324 2 261 4 698 2 75 2 1063 2 625 2 627 2 849 2 707 2 851 2 547 2 272 2 775 4 926 2 275 2 776 2 334 2 20 2 554 2 779 2 555 2 90 38 154 2 785 2 222 2 498 4 157 42 863 2 342 2 792 2 794 4 942 2 417 2 420 2 227 2 565 2 421 2 872 2 30 2 164 4 570 2 34 2 352 2 510 2 653 2 572 2 658 44 956 2 358 2 737 2 581 2 439 2 45 2 518 2 1022 2 1094 2 1023 20 743 4 366 2 444 2 665 2 113 20 243 2 522 2 1025 2 524 2 670 2 373 2 449 6 747 2 824 2 381 4 121 46 889 2 1037 2 980 2 532 6 534 2 897 2 1043 2 314 2 689 2 688 2 1047 2 317 4 68 2 69 2 1122 6 319 2 
205 4 995 2 267 4 479 4 707 2 849 2 769 2 547 2 272 2 485 2 856 2 487 2 780 2 718 2 1072 2 555 2 90 14 637 6 157 20 94 2 794 2 342 2 724 2 417 2 421 2 872 2 164 2 951 4 234 2 513 2 658 26 1018 2 737 2 358 2 518 2 1094 2 1023 10 106 2 743 2 113 8 373 2 449 6 670 2 596 2 824 2 121 28 1033 6 889 2 600 2 250 4 834 2 1112 4 897 2 607 2 314 2 1115 2 317 2 256 2 68 2 
760 6 395 10 1056 2 76 2 622 2 627 2 707 2 849 2 547 2 272 2 926 2 1069 2 779 4 861 4 555 2 90 14 938 2 222 2 157 38 794 6 342 2 942 2 417 2 418 2 227 4 420 2 421 2 30 4 164 2 646 2 951 10 34 2 37 2 293 2 38 10 732 2 658 26 659 2 737 2 581 4 518 2 1094 2 1023 14 743 6 113 14 522 2 1025 2 524 4 373 2 449 8 824 2 377 4 121 28 249 2 250 10 830 2 532 6 897 2 605 2 314 2 689 4 317 6 
673 2 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 
1105 1 1070 1 401 1 774 1 177 1 61 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1826 763 (1604,1931) (1604,1931) 1099 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:is_false()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaCharStream:FillBuff()V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.ProglangType:isString()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_121()Z
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.PptSlice3:arity()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_85()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_117()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:eq(JJ)Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_72()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:isDerived()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_81()Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3R_86()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:elementIsIntegral()Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_18()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_169()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:arity()I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:intersection([I[I)[I
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_120()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_99()Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_124()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.Node:Node()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_76()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_70()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3R_103()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_75()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_108()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3_25()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsString()Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptName:toString()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3R_98()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.Quant:ne(II)Z
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3_10()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logDetail()Z
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfo:new_ppt()V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_63()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_116()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:split(I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_87()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:isReverse([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_126()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_80()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfo:isPointer()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 1380 | if (x) -> if (!x)
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_samples()I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_125()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:jj_3R_47()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_17(I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_101()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_148()Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.Quant:union([I[I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant:justified()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3_5()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String; | RETURN | 3229 | return null
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3_35()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:noDups([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_67()Z
daikon.Quant:memberOf(D[F)Z
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:subsetOf([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfo:has_typeof()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:is_type()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:subsetOf([S[S)Z
daikon.PptName:getSignature()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hashCode()I
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_62()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JavaParser:jj_3R_77()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
828 2 1047 2 1691 2 9 2 483 2 1314 2 1467 2 1904 4 1653 2 
1138 2 540 6 167 2 776 2 145 2 1245 2 1236 2 990 2 1267 6 1527 6 1812 2 
41 6 388 4 1815 6 1414 4 598 2 1117 2 1047 2 93 6 1691 2 942 2 1766 2 1770 6 1135 2 
448 8 482 16 453 8 1762 28 1449 4 1047 6 685 2 338 6 971 10 1793 2 1481 10 871 2 1270 16 1684 4 1778 2 495 10 1059 8 91 6 1168 4 1171 2 1691 6 943 4 1118 10 669 2 382 16 127 12 359 2 1562 8 1665 10 95 26 
1365 4 302 6 
617 2 
1096 2 711 2 1100 2 1201 4 209 2 961 2 1046 2 1047 4 1152 2 1206 2 1428 2 591 2 109 4 527 2 596 2 907 2 123 2 1171 2 855 4 1691 4 471 2 234 2 800 2 1625 2 995 2 361 2 546 2 612 2 550 2 1005 2 806 2 81 2 1444 2 747 2 137 2 558 2 1084 2 623 2 1777 2 629 2 828 2 1141 4 1923 2 1662 2 
715 6 482 32 1098 2 1736 6 1592 6 1703 4 453 6 1762 52 185 2 1047 4 971 15 338 4 1478 6 1481 15 1717 3 432 4 654 4 1110 4 1510 2 1684 2 1270 32 344 4 530 4 495 15 91 4 496 6 438 2 1691 4 1118 15 1525 5 382 32 1281 4 1619 2 127 22 359 2 1035 8 1562 19 95 47 1665 6 
1100 2 265 2 1315 2 
451 2 1629 2 1567 2 1630 2 1005 2 682 2 793 10 1173 2 1106 2 1661 2 796 2 1067 2 621 2 445 22 
1075 2 1588 2 482 2 677 2 153 2 245 2 1762 6 971 2 338 2 1713 2 1768 2 1481 2 27 2 1684 2 1270 2 495 2 1030 2 1118 2 382 2 127 2 1562 2 95 4 1665 4 
344 4 1270 8 482 8 1736 6 495 4 496 6 1762 16 1449 2 631 2 971 4 1118 4 1155 2 382 8 127 4 1481 4 1110 4 95 12 
609 4 1001 14 1857 4 718 2 1100 8 4 2 549 2 1531 2 1704 2 806 2 1707 2 843 2 932 4 51 2 846 2 1378 4 1315 6 1576 2 784 2 109 4 1017 10 436 4 259 2 623 4 348 2 10 4 437 2 265 2 288 4 1725 2 1062 2 1556 2 1330 4 290 4 1355 2 357 62 384 10 1195 4 1895 4 536 2 
787 2 877 2 31 2 1568 2 1824 2 617 2 1194 2 1929 2 1563 2 606 2 
1306 2 1097 2 1420 2 330 1 840 2 1533 8 1423 2 1535 4 1309 2 1105 2 1311 2 213 5 1681 2 455 2 457 2 1319 2 1214 2 851 2 980 4 1216 2 1801 4 1217 1 226 3 1686 2 1550 2 120 16 1115 1 1689 2 984 4 1552 2 1221 2 1692 24 1691 34 124 1 356 3 473 2 235 1 237 2 739 2 360 2 480 1 1226 16 1229 6 998 32 1231 3 1442 2 1443 2 1127 2 246 2 1818 24 1128 3 247 1 862 2 486 1 1007 3 1342 3 250 2 1828 2 619 1 1574 2 1718 2 622 2 1019 2 1834 6 263 2 1020 16 494 2 375 6 758 2 873 8 1723 1 1835 2 1580 2 33 2 1840 1 1353 2 1250 2 1850 2 1734 2 773 2 1040 2 45 2 1856 3 1739 2 645 32 275 2 779 2 1740 1 394 1 1047 32 1262 2 1474 2 898 2 899 2 1049 4 55 2 783 2 1268 2 281 2 1603 2 61 8 1878 4 1162 1 663 1 1169 2 1751 3 417 2 172 2 173 2 175 2 177 2 1495 2 69 12 419 4 1285 2 76 3 1288 2 674 2 1760 2 183 3 430 2 1500 2 1177 6 1293 2 1178 2 686 2 933 2 1507 2 1639 2 303 12 304 2 818 2 1912 3 1651 2 698 4 1518 2 1188 1 1653 2 312 16 1657 3 1305 2 316 2 444 2 318 2 574 2 833 1 708 2 1198 2 710 2 
1691 2 431 2 
1691 4 545 2 514 2 
1761 2 
2 6 1 2 957 4 958 2 452 4 7 2 962 6 966 2 970 38 1427 6 968 82 454 2 972 2 456 156 1429 2 458 2 1431 2 979 10 1433 16 981 26 460 22 464 6 1435 24 13 18 467 6 986 2 1436 100 468 4 469 90 1438 2 470 2 988 24 992 24 474 2 475 4 477 8 993 2 17 2 479 6 481 6 996 2 1440 6 21 2 1004 14 487 6 488 2 1010 38 1452 14 490 6 23 22 492 2 1013 26 1453 2 1457 4 1018 4 1022 2 1023 2 30 2 502 2 501 2 1029 510 34 2 1032 2 507 2 1461 196 37 4 508 58 1036 2 39 6 513 2 42 6 1039 6 1041 2 1465 2 47 10 46 4 1042 2 1466 2 1468 4 1043 8 1470 2 1047 10 520 2 53 22 1476 2 1051 16 1479 2 1482 2 1483 42 1053 120 1486 10 529 2 528 46 1055 6 1056 2 63 2 1493 6 1064 2 64 2 66 98 67 2 68 2 71 6 1070 2 70 2 1072 6 1071 6 541 6 74 6 539 26 75 6 542 2 544 4 1497 4 1076 6 78 142 552 4 556 4 1504 2 557 100 1508 4 1509 6 1086 26 86 4 1512 2 88 2 1515 4 560 2 1087 2 1516 2 1517 24 563 2 92 6 564 2 1090 6 570 2 1526 98 1094 54 1095 174 580 6 1099 2 97 6 98 36 1530 4 1536 2 102 6 584 10 583 2 1537 6 106 10 1108 22 1107 2 589 2 107 2 1539 4 592 2 1541 2 1542 2 1544 10 111 2 593 20 1113 6 1112 6 1551 4 116 2 597 2 115 2 601 6 1553 4 1557 4 1120 24 604 6 1558 2 1560 8 605 174 1561 2 1123 4 128 2 1124 100 611 4 1125 10 1126 4 1129 2 1131 16 1570 6 1571 6 620 2 1137 26 141 2 625 2 143 6 1139 2 146 58 630 2 1581 2 632 174 633 12 634 10 150 26 638 174 639 2 1591 2 1146 2 644 2 643 2 646 16 157 2 649 6 1596 6 158 16 159 4 1598 4 1153 2 1156 2 1157 12 164 2 1604 2 656 2 657 66 1609 2 659 188 1614 24 667 22 1174 4 1617 44 176 2 1621 6 181 66 1631 60 681 4 1636 54 1178 2 684 338 188 4 1180 6 1641 50 1640 2 690 4 689 2 1644 6 693 2 694 26 1181 2 192 2 1183 2 1646 2 695 12 193 4 195 2 1186 2 1650 2 1187 2 703 2 1655 14 1663 2 712 4 1669 4 1670 2 720 2 721 2 210 6 1675 2 1674 2 1676 2 214 386 216 2 1209 2 1680 4 1210 2 1211 18 221 6 727 2 1215 2 227 6 228 338 1219 10 229 14 1691 10 736 174 1694 2 1223 2 236 2 1225 4 238 4 740 4 742 26 1227 42 1698 2 1701 6 240 6 744 2 243 6 1232 10 748 12 750 174 254 166 253 2 1711 2 1714 4 1719 4 753 42 1721 2 754 308 260 4 262 6 261 2 755 2 756 6 757 6 1722 2 1244 10 1246 2 762 2 763 2 1728 24 1248 10 1251 2 767 6 271 4 770 2 772 2 1254 386 1255 78 775 2 273 46 778 12 1257 4 277 2 1741 6 1263 2 1743 6 1264 2 282 6 786 16 1746 2 285 2 286 4 788 2 1273 204 791 2 1276 18 1752 2 1279 2 795 4 1282 4 1757 4 1284 2 1287 2 1291 2 297 4 808 6 298 156 810 108 812 8 1769 4 1771 2 816 26 305 4 1299 2 817 2 1300 4 1775 12 308 42 310 2 826 2 313 6 831 26 321 4 325 4 324 24 326 286 331 6 837 2 838 4 1792 2 849 2 1312 2 339 2 343 4 1322 4 346 2 347 188 1806 10 853 174 1807 2 854 6 1329 4 354 12 1333 86 1335 2 362 26 363 100 1816 120 1338 14 1819 50 365 12 1823 6 1826 2 1827 2 371 2 867 312 868 2 1830 4 1343 26 1344 2 373 174 1833 4 1836 4 378 24 879 2 881 4 1846 2 381 8 884 18 1357 196 1358 2 886 12 385 2 387 2 1852 2 887 2 389 2 1366 6 1368 2 1859 2 892 6 1861 10 891 16 1374 2 395 2 1869 2 396 2 900 26 1870 20 1871 4 1873 2 1379 8 902 4 398 2 901 196 1875 2 1876 16 1381 4 904 6 408 2 409 4 410 2 908 2 412 2 1883 2 413 4 911 2 1384 2 915 2 1887 176 418 2 1387 6 1890 2 1891 308 1388 2 918 6 919 2 1898 4 1390 6 1899 2 421 2 924 2 1393 2 424 2 1394 62 927 14 1395 6 427 2 429 4 1402 4 1403 6 1908 2 1909 54 1405 2 434 4 1410 48 1413 22 1916 6 1917 72 1417 6 439 2 938 2 440 6 1921 192 441 6 1925 2 443 78 1926 6 1931 2 948 6 950 2 
1844 1 1462 2 1789 2 935 2 
1789 2 1451 2 
616 2 449 2 1789 2 1100 2 1396 2 691 2 1168 2 
1789 2 1396 2 1585 2 
1789 2 1396 2 1794 2 
1432 2 1462 2 1204 2 
1789 2 1396 2 
1204 2 1862 2 
1789 2 1295 2 
1462 2 1237 2 1204 2 
1462 2 287 2 1773 2 
1462 2 890 2 1683 2 
1462 2 1386 2 1915 2 
1462 2 1882 2 600 2 
1204 2 103 2 
822 2 1789 2 
232 2 1773 2 
1683 2 336 2 
138 2 1915 2 
903 2 1882 2 
1755 2 1204 2 
1882 2 1727 2 
1693 2 1915 2 
1731 2 1683 2 
555 2 1773 2 
206 2 1462 2 1237 2 1204 2 
22 2 206 2 1462 2 1237 2 1204 2 
1462 2 1716 2 1204 2 
1462 2 944 2 1204 2 
1548 2 930 2 751 2 723 2 
616 2 641 2 1100 2 730 2 
616 2 449 2 641 2 1100 2 730 2 1618 2 
616 2 1597 2 1789 2 1100 2 1396 2 1168 2 
1046 2 1749 2 
616 2 1205 2 1100 2 1168 2 
1915 2 203 2 
1361 2 1882 2 
1773 2 1918 2 
335 2 1683 2 
320 2 1882 2 1683 2 
946 2 1882 2 1683 2 
1184 2 1683 2 1882 2 
1529 2 1683 2 1882 2 
1441 2 1100 2 1202 6 616 2 112 2 702 6 734 2 1930 2 
1204 2 1832 2 
821 2 889 2 364 2 660 2 1879 4 532 2 1880 2 732 2 1061 4 1104 2 705 2 171 2 1864 2 369 2 319 2 1772 2 1874 2 445 6 
1462 2 1348 2 
1639 2 
1097 2 330 4 840 2 1423 2 1535 4 1309 2 1311 2 455 2 1319 2 1214 2 1323 2 851 2 980 2 1801 4 1686 2 1550 2 120 6 1555 2 1691 26 124 2 739 2 1229 6 998 4 1443 2 1127 2 247 2 862 2 251 4 1710 2 1019 2 1834 2 494 2 375 2 873 2 1835 2 33 2 1031 2 1729 2 1850 2 1732 2 1038 2 637 2 1040 2 1739 2 645 6 779 2 780 4 50 2 1047 26 1261 2 898 2 1049 4 899 4 655 2 405 2 1878 4 1747 2 1169 2 1495 2 419 2 69 8 1288 2 674 6 182 2 1177 4 1500 2 1178 2 1642 2 303 8 1647 2 818 2 698 2 1653 2 444 2 574 2 1198 2 
1097 2 330 1 840 2 1423 2 1535 4 1309 2 1311 2 455 2 1319 2 1214 2 1323 2 851 2 980 2 1801 4 1686 2 1550 2 120 6 1555 2 1691 26 124 2 739 2 1229 6 998 4 1443 2 1127 2 247 2 862 2 251 4 1710 2 1019 2 1834 2 494 2 375 2 873 2 1835 2 503 2 33 2 1031 2 1850 2 1732 2 1038 2 637 2 1040 2 1739 2 645 6 779 2 780 4 50 2 1047 26 1261 2 898 2 1049 4 899 4 655 2 1878 4 1747 2 1169 2 173 2 175 2 1495 2 419 2 69 8 1073 2 1288 2 674 6 182 2 1177 6 1500 2 1178 2 303 8 1647 2 818 2 698 2 1653 2 444 2 574 2 1092 2 708 2 1198 2 
366 2 
917 2 512 2 
717 2 1739 2 959 2 1101 2 208 2 101 2 1535 2 1371 2 104 4 49 2 651 2 1047 6 1867 2 1049 2 1267 6 1540 4 1109 2 728 2 165 2 284 2 1321 2 1214 2 406 2 223 10 167 4 1169 2 1691 12 1559 2 1495 2 1068 8 801 4 538 2 1623 2 1627 4 1229 4 540 6 925 2 1565 8 425 2 1078 2 1817 2 1178 2 1236 4 1506 4 1404 2 869 2 1406 2 1138 2 196 2 307 2 1578 2 1245 2 504 4 566 2 269 2 573 2 1850 2 1527 6 949 2 1198 2 
0 2 717 2 1739 2 959 2 1101 2 208 2 101 2 1535 2 1371 2 104 4 49 2 651 2 1047 6 1867 2 1049 2 1267 6 1540 4 1109 2 728 2 165 2 284 2 1321 2 1214 2 406 2 223 10 167 4 599 2 1169 2 1691 12 1495 2 1559 2 1068 8 801 4 538 2 1623 2 1812 2 1627 4 1229 4 540 8 925 2 1565 8 425 2 1078 2 1817 2 1178 2 1502 4 1236 4 1506 4 1404 2 869 2 1138 2 196 2 307 2 1245 2 504 4 566 2 269 2 573 2 1850 2 1527 8 949 2 1198 2 
165 2 1321 2 540 2 717 2 307 2 167 2 959 2 208 2 1371 2 1236 2 1506 2 269 2 869 2 1267 2 801 4 538 2 1623 2 1627 4 
717 2 1739 2 959 2 1101 2 208 2 101 2 1535 2 1371 2 104 4 49 2 651 2 1047 6 1867 2 1049 2 1267 4 1540 4 1109 2 728 2 165 2 284 2 1321 2 1214 2 406 2 223 6 167 4 1169 2 1691 12 1559 2 1495 2 1068 4 801 4 538 2 1623 2 1812 2 1627 4 1229 4 540 6 925 2 1565 4 425 2 1078 2 1817 2 1178 2 1236 4 1506 4 1404 2 869 2 1406 2 196 2 307 2 1578 2 1245 2 504 4 566 2 269 2 573 2 1850 2 1527 6 949 2 1198 2 
717 2 1739 2 959 2 1101 2 776 2 208 2 101 2 1535 2 1371 2 104 4 49 2 651 2 1047 6 1867 2 1049 2 1267 6 1540 4 1109 2 728 2 165 2 284 2 1321 2 1214 2 406 2 223 6 167 4 1169 2 1691 12 1559 2 1495 2 1068 4 801 4 538 2 1623 2 1627 4 1229 4 540 4 925 2 1565 4 425 2 1078 2 1817 2 1178 2 1236 4 1506 4 1404 2 869 2 1406 2 196 2 307 2 1578 2 1245 2 504 4 566 2 269 2 573 2 1850 2 1527 6 949 2 1198 2 
717 2 1739 2 959 2 1101 2 208 2 101 2 1535 2 1371 2 104 4 49 2 651 2 1047 6 1867 2 1049 2 1267 6 1540 4 1109 2 728 2 165 2 284 2 1321 2 1214 2 406 2 223 6 167 4 1169 2 1691 12 1559 2 1495 2 1068 4 801 4 538 2 1623 2 1627 4 1229 4 540 6 925 2 1565 8 425 2 1078 2 1817 2 1178 2 1236 4 1506 4 1404 2 869 2 1406 2 1138 2 196 2 307 2 1578 2 1245 2 504 4 566 2 269 2 573 2 1850 2 1527 6 949 2 1198 2 
717 2 1739 2 959 2 1101 2 776 2 208 2 101 2 1535 2 1371 2 104 4 49 2 651 2 1047 6 1867 2 1049 2 1267 8 1540 4 1109 2 728 2 165 2 284 2 1321 2 1214 2 406 2 223 10 167 4 1169 2 1691 12 1559 2 1495 2 1068 8 801 4 538 2 1623 2 1627 4 1229 4 540 6 925 2 1565 8 425 2 1078 2 1817 2 1178 2 1236 4 1506 4 1404 2 869 2 1406 2 1138 2 196 2 307 2 1578 2 1245 2 504 4 566 2 269 2 573 2 1850 2 1527 8 949 2 1198 2 
717 2 1739 2 959 2 1101 2 208 2 101 2 1535 2 1371 2 104 4 49 2 651 2 1047 6 1867 2 1049 2 1267 6 1540 4 1109 2 728 2 165 2 284 2 1321 2 1214 2 406 2 223 10 167 4 1169 2 1691 12 1559 2 1495 2 1068 8 801 4 538 2 1623 2 1627 4 1229 4 540 6 925 2 1565 8 425 2 1078 2 1817 2 1178 2 1236 4 1506 4 1404 2 869 2 1406 2 1138 2 196 2 307 2 1578 2 1245 2 504 4 566 2 269 2 573 2 1850 2 1527 6 949 2 1198 2 
450 2 717 2 959 2 208 2 1423 2 1673 6 967 1 455 2 728 4 1214 2 223 2 980 2 461 2 983 2 733 2 1437 7 1691 46 15 2 739 2 1229 6 998 2 1706 2 251 4 1709 2 1710 2 1236 4 491 2 1239 2 1019 2 494 2 499 2 1245 4 33 2 504 4 36 2 269 2 270 8 1038 2 1253 2 1739 2 776 4 779 2 49 2 1047 24 278 2 279 6 1259 2 1049 4 1267 8 284 2 1747 2 1489 2 1277 1 1495 2 69 4 801 4 538 2 72 2 73 7 540 4 545 6 1288 2 1078 4 296 6 1500 2 1761 6 1292 6 1506 4 813 2 559 10 303 4 1513 2 307 2 1779 2 1303 6 1782 1 830 4 566 2 573 2 1527 12 840 2 1101 2 1790 1 101 2 1535 4 104 6 1309 2 586 2 1311 12 848 6 1540 8 1795 1 1109 2 1321 2 1801 4 1550 2 120 6 350 1 1559 2 1565 2 1817 2 1127 2 133 2 1569 2 1132 1 869 2 1834 2 375 2 873 2 376 2 1578 2 1850 2 885 6 1367 2 1145 1 156 1 1147 2 645 8 1371 2 651 2 1595 2 896 2 160 6 898 2 1867 2 653 2 165 2 655 4 406 2 404 6 1608 6 1878 4 167 4 1169 2 664 6 173 2 419 2 1623 2 1627 4 923 2 925 2 179 2 425 2 674 6 675 2 1632 4 1177 6 1178 2 1179 6 431 6 1404 2 196 2 698 2 1653 2 941 2 444 2 1192 6 708 2 949 2 1198 2 
450 2 717 2 959 2 1101 2 840 2 208 2 1423 2 101 2 1535 4 1673 6 586 2 1309 2 104 6 1311 12 848 6 455 2 1540 8 1109 2 728 4 1321 2 1214 2 223 2 980 4 1801 4 1550 2 461 2 983 2 120 6 733 2 1691 48 15 2 1559 2 739 2 1228 2 998 2 1229 6 1565 6 1817 2 1127 2 1706 2 133 2 1709 2 251 4 1710 2 1569 2 1236 4 491 2 869 2 1138 4 1239 2 1019 2 1834 2 494 2 375 2 376 2 873 2 1578 2 499 2 33 2 1245 4 504 4 36 2 269 2 270 8 1850 2 885 6 1038 2 1253 2 1367 2 1739 2 1147 2 645 8 779 2 1371 2 49 2 1595 2 651 2 896 2 1047 26 518 2 160 6 278 2 1259 2 279 6 1867 2 898 2 899 2 653 2 1049 4 1267 8 165 2 284 2 655 4 1608 6 404 6 406 2 1747 2 1878 4 1489 2 167 4 664 6 1169 2 173 2 1495 2 69 8 419 4 801 4 1623 2 538 2 1627 4 923 2 72 2 540 8 179 2 925 2 545 6 425 2 674 6 1288 2 675 2 1078 4 1632 4 296 6 1761 6 1500 2 1177 6 1292 6 1178 2 1179 6 431 6 1506 4 1404 2 813 2 559 10 303 8 1513 2 196 2 698 4 307 2 1779 2 1303 6 1653 2 941 2 830 4 566 2 1192 6 444 2 573 2 1527 12 949 2 708 2 1198 2 
450 2 717 2 959 2 1101 2 840 2 208 2 1423 2 101 2 1535 4 1673 6 586 2 1309 2 104 6 1311 12 848 6 455 2 1540 8 1109 2 728 4 1321 2 1214 2 223 6 980 4 1801 4 1550 2 461 2 983 2 120 6 733 2 1691 48 15 2 1559 2 739 2 1228 2 998 2 1229 6 1565 6 1817 2 1127 2 1706 2 133 2 1709 2 251 4 1710 2 1569 2 1236 4 491 2 869 2 1138 4 1239 2 1019 2 1834 2 494 2 375 2 376 2 873 2 1578 2 499 2 33 2 1245 4 504 4 36 2 269 2 270 8 1850 2 885 6 1038 2 1253 2 1367 2 1739 2 1147 2 645 8 779 2 1371 2 49 2 1595 2 651 2 896 2 1047 26 518 2 160 6 278 2 1259 2 279 6 1867 2 898 2 899 2 653 2 1049 4 1267 8 165 2 284 2 655 4 1608 6 404 6 406 2 1747 2 1878 4 1489 2 167 4 664 6 1169 2 173 2 1495 2 1068 4 69 8 419 4 801 4 1623 2 538 2 1627 4 923 2 72 2 540 8 179 2 925 2 545 6 425 2 674 6 1288 2 675 2 1078 4 1632 4 296 6 1761 6 1500 2 1177 6 1292 6 1178 2 1179 6 431 6 1506 4 1404 2 813 2 559 10 303 8 1513 2 196 2 698 4 307 2 1779 2 1303 6 1653 2 941 2 830 4 566 2 1192 6 444 2 573 2 1527 12 949 2 708 2 1198 2 
714 2 450 2 1422 6 717 2 959 2 208 2 1423 2 1673 6 455 2 728 4 1213 6 1214 2 223 6 980 4 461 2 983 2 733 2 1691 52 15 2 739 2 1228 2 1229 6 998 4 1706 2 251 6 1710 2 1236 4 749 6 491 2 1239 2 1019 2 494 2 499 2 1245 4 33 2 504 4 36 2 269 2 270 8 1038 4 1253 2 1739 2 776 2 779 2 49 2 1047 24 518 2 278 2 279 6 1259 2 1049 4 1267 10 284 2 1747 2 1489 2 1278 6 1495 2 65 6 1068 4 69 10 801 4 538 2 72 2 540 10 545 12 1288 2 1078 4 296 6 1500 2 1761 12 1292 6 554 6 1506 4 813 2 559 8 303 10 1513 2 307 2 1779 2 1303 6 830 4 566 2 573 2 1527 16 1101 2 840 2 101 2 1535 4 582 2 104 6 1309 2 586 2 1311 10 848 12 1540 8 1109 2 1321 2 1801 4 1550 2 120 8 1331 6 125 6 1559 2 1812 2 1565 6 1817 2 1127 2 133 2 1569 2 869 2 1345 2 1138 4 1834 4 375 4 873 4 376 2 1578 2 1850 2 885 6 386 6 1367 2 1147 2 645 12 1371 2 651 2 1595 2 896 2 160 12 898 2 1867 2 899 2 653 2 165 2 655 4 406 2 404 6 1608 6 1878 4 167 4 1169 2 664 12 1885 2 173 2 419 4 1623 2 1627 4 1628 2 923 2 179 2 925 2 425 2 674 8 675 2 1632 4 1177 6 1397 2 1178 2 1638 2 1179 6 431 12 1404 2 196 2 698 4 1653 2 1919 2 941 2 444 2 1192 6 708 2 949 2 1198 2 
540 6 425 2 1565 6 717 2 1817 2 959 2 208 2 101 2 104 2 651 2 1236 4 1867 2 1267 6 1540 2 1109 2 1138 2 165 2 406 2 223 4 196 2 307 2 167 4 1578 2 1245 2 504 2 1691 4 573 2 1559 2 1068 4 1527 4 949 2 801 2 1623 2 538 2 1627 2 
96 2 717 2 959 2 840 2 208 2 101 2 1423 2 1535 4 104 2 1309 2 1311 4 1540 2 455 2 1109 2 1214 2 223 2 1801 4 1550 2 120 6 1691 28 1559 2 237 2 739 2 1229 6 998 3 1813 3 1565 6 1817 2 246 2 251 4 1709 2 1710 2 1236 4 1138 2 1019 2 1834 3 494 2 375 3 1578 2 1245 2 33 2 504 2 1850 2 152 2 1739 2 645 8 779 2 49 2 651 2 1047 24 898 2 1867 2 1049 4 1267 6 1602 2 1603 2 165 2 655 2 406 2 1878 4 1747 2 167 4 1169 2 535 2 173 2 1495 2 801 2 538 2 1623 2 1627 2 540 6 425 2 1288 2 674 6 1500 2 1177 6 1178 2 1639 2 559 2 1774 2 196 2 307 2 1653 2 444 2 573 2 1527 4 949 2 708 2 1198 2 
1559 2 746 2 101 2 
1559 2 746 2 101 2 
450 2 330 2 5 2 840 2 208 2 1423 2 101 4 1535 4 104 4 1309 2 585 2 1677 2 1311 4 215 2 455 2 1540 4 219 2 728 4 1321 2 1214 2 223 6 980 4 1801 4 1550 2 1804 2 120 2 735 2 1555 4 1691 24 1810 2 1559 6 739 2 1812 4 1229 6 998 2 1565 6 1340 2 746 2 1127 4 1234 4 133 2 249 2 1710 2 1236 4 1138 4 1019 2 494 2 1245 4 504 2 1850 2 1739 2 776 4 645 2 274 2 779 2 1371 2 1047 16 1154 2 898 2 1049 4 1267 12 165 2 284 2 655 6 1878 4 1747 2 167 4 1169 2 173 2 1495 2 1068 4 69 4 419 4 801 2 1627 2 540 12 425 2 1288 2 674 2 1078 2 1632 2 1177 6 1500 2 1178 2 1506 4 1404 2 189 4 559 2 1407 2 303 4 1513 2 1409 2 698 4 307 4 1089 2 1653 2 1920 2 830 2 566 2 1192 2 444 2 1928 2 1527 16 708 2 949 2 1198 2 
459 2 5 2 983 2 1632 2 1047 2 1311 2 1599 2 1691 4 1192 2 215 2 1810 2 1695 2 491 2 917 2 869 2 1495 2 559 2 
450 2 5 2 1101 2 840 2 208 2 1423 2 101 4 1535 4 104 4 1309 2 585 2 1677 2 1311 2 215 2 341 2 1540 4 455 2 219 2 728 4 1321 2 1214 2 223 6 980 4 1801 4 1550 2 120 2 1555 4 1691 24 1810 2 126 2 1559 6 739 2 1812 4 1229 6 998 4 1565 6 746 2 1127 4 1234 4 133 2 249 2 1710 2 1236 4 1138 4 1019 2 624 2 494 2 1245 4 504 2 1850 2 1739 2 776 4 645 2 274 2 779 2 1371 2 1047 16 1154 2 898 2 1049 4 1267 12 525 2 165 2 284 2 655 6 1878 4 1747 2 167 4 1169 2 1382 2 173 2 1495 2 1068 4 69 4 419 4 801 2 1627 2 540 12 425 2 1288 2 674 2 1078 4 1177 6 1500 2 1178 2 1506 4 1404 2 189 4 1407 2 303 4 1513 2 1409 2 698 4 307 4 1653 2 1920 4 830 2 566 2 1192 2 444 2 1928 2 1527 16 708 2 949 2 1198 2 
450 2 330 1 1101 2 5 2 840 2 208 2 1423 2 101 4 1535 4 104 4 1309 2 585 2 1677 2 1311 4 215 2 455 2 1540 4 219 2 728 4 1321 2 1214 2 223 6 980 4 1801 4 1550 2 120 2 1555 4 1691 24 1810 2 1559 6 739 2 1812 4 1229 6 998 2 1565 6 746 2 1127 4 1234 4 133 2 249 2 1710 2 1236 4 1138 4 1019 2 494 2 1245 4 504 2 1850 2 1739 2 776 4 645 2 274 2 779 2 1371 2 1047 16 1154 2 898 2 1049 4 1267 12 165 2 284 2 655 6 1878 4 1747 2 1748 2 1057 2 167 4 1169 2 173 2 1495 2 1068 4 69 4 419 4 801 2 1627 2 540 12 425 2 1288 2 674 2 1078 4 1632 2 1905 2 1177 6 1500 2 1501 2 1503 2 1178 2 1506 4 1404 2 189 4 559 2 1407 2 303 4 1513 2 1409 2 698 4 307 4 1653 2 1920 2 830 2 566 2 1192 2 444 2 1928 2 1527 16 708 2 949 2 1198 2 
952 2 953 2 954 6 3 4 955 2 956 2 960 2 6 2 963 2 965 2 964 2 969 2 8 2 971 6 973 2 974 3 975 20 976 2 977 2 978 24 10 2 982 2 11 2 984 32 12 2 985 2 987 3 14 2 15 2 991 2 16 4 994 2 997 2 998 110 18 2 19 2 999 2 1002 2 20 2 1003 2 1007 2 1006 38 24 2 1012 16 1014 2 25 4 1016 2 1015 38 26 6 29 8 28 3 1019 2 1020 14 1021 18 1024 66 1025 9 1026 4 32 2 1027 6 1028 2 33 2 35 14 1031 2 36 2 1034 6 1035 8 38 95 1037 78 40 2 1038 46 43 2 44 38 45 14 1044 2 1045 3 50 86 1048 2 1047 966 52 2 1049 8 1050 2 54 2 55 2 56 2 57 2 59 10 60 2 1052 2 1054 2 61 14 1058 2 1060 2 1063 2 1065 18 1066 2 69 178 1074 2 76 3 77 2 1077 2 79 234 80 3 1081 18 1080 4 82 3 1082 3 83 3 84 38 1085 2 85 3 90 4 1088 2 91 4 94 2 1091 76 1093 10 95 18 96 2 99 2 1102 3 100 48 1103 2 105 2 108 2 110 2 113 2 114 2 119 2 118 10 120 32 1116 166 122 3 124 2 1118 6 1119 80 1121 2 127 10 129 3 130 2 131 2 1127 18 1128 2 134 106 135 2 136 2 1130 2 139 2 140 104 1134 10 1136 2 142 2 1140 2 144 38 147 4 1142 21 151 2 1144 2 155 2 154 2 1148 2 1149 2 161 8 163 2 162 78 166 36 1163 80 1165 7 168 80 1166 2 1167 2 1169 2 169 80 1172 40 172 2 174 2 173 328 177 2 1176 1 178 2 180 2 182 2 183 2 1177 1116 184 2 186 2 1178 2 187 16 191 1 1182 3 194 2 197 2 1185 2 198 3 199 2 1189 22 1190 2 1191 2 202 14 1193 4 1196 32 1195 2 1197 2 204 2 1198 2 205 2 1199 38 1200 112 207 2 1203 2 211 2 212 2 1207 102 1208 2 217 2 218 4 1212 2 220 2 1214 2 1216 2 224 40 225 4 226 3 1218 80 230 2 231 60 1221 2 233 2 1224 22 239 4 1226 100 1229 10 1230 2 1231 2 242 34 244 2 247 3 248 2 250 2 251 12 1235 2 252 170 1238 76 255 2 256 2 257 2 1239 16 1240 2 263 2 1241 2 264 80 266 2 1243 6 267 38 268 12 1247 8 1252 2 1253 22 1256 2 276 6 278 2 1261 2 1265 2 1266 2 1268 2 1269 2 280 3 283 2 1270 12 1271 2 1274 2 1275 24 289 2 1280 83 291 2 292 2 1283 158 294 16 1285 2 1286 24 1288 2 1289 78 299 2 301 2 1296 4 303 183 1297 5 1298 38 304 2 1301 3 309 38 1302 8 311 2 312 52 1304 2 314 2 1305 2 315 2 317 2 318 2 322 2 323 80 327 3 328 2 329 78 1307 26 330 2 332 26 333 2 334 2 337 2 1309 2 1310 38 1311 10 340 2 1316 80 1318 80 1317 4 342 2 1320 2 344 4 1323 4 1324 78 1325 2 349 2 1326 38 351 2 352 2 1330 2 353 2 1332 80 356 2 355 2 1334 2 358 2 359 2 360 2 1336 2 1337 2 1339 2 1341 2 1342 2 367 3 368 78 370 2 372 3 1345 2 1346 2 1349 2 375 46 374 2 1351 1 377 2 379 24 1352 3 1353 2 1354 78 380 2 382 12 383 2 1356 2 1359 8 1360 2 1362 4 1363 2 1364 34 1367 2 391 2 1370 2 394 13 393 2 1372 2 1373 2 1375 2 1376 2 1377 4 399 2 400 78 401 2 402 2 403 78 1380 2 407 2 411 12 414 2 415 4 1383 2 417 2 416 12 1385 2 420 2 422 2 1391 2 1392 2 426 2 428 6 430 2 1397 2 1398 60 1400 2 1401 6 433 2 435 2 436 2 1408 2 1411 36 1412 38 1416 2 438 4 1418 2 1419 2 442 2 444 2 445 6 446 2 447 4 1421 2 1423 8 453 6 1425 2 1426 2 455 2 457 2 1430 158 1434 24 462 38 463 2 465 2 466 2 472 60 473 2 1439 234 478 78 482 12 1442 2 484 2 485 2 486 15 1445 20 1446 1 1447 2 1448 78 1450 2 489 3 493 3 1454 2 1459 2 494 2 495 6 497 80 500 2 498 2 506 2 509 2 510 2 1463 2 511 4 516 16 1469 2 517 2 1471 2 1472 2 519 78 1473 2 1475 8 522 3 521 2 1477 2 1480 2 1481 6 523 3 524 3 526 2 1484 18 1485 3 530 4 531 2 1488 2 1489 2 1490 2 1492 24 533 20 534 2 535 2 1495 2 537 1 1496 2 543 16 547 2 548 6 1498 8 1499 2 1500 84 553 2 1507 2 559 2 1510 2 1511 2 561 3 1518 2 1519 66 1520 2 1522 2 1521 38 1523 2 1524 2 565 2 1525 6 569 2 571 34 572 10 575 2 577 3 578 2 579 2 1528 2 581 2 1532 2 1533 14 1535 8 1534 2 582 4 587 2 588 22 1538 2 590 80 1543 10 1545 2 1546 4 595 3 594 4 1547 2 1549 2 1550 82 1552 2 602 2 1554 10 603 2 1562 6 1564 2 607 2 609 2 610 2 1566 2 615 2 1569 8 618 2 619 1 1572 3 1573 2 1574 2 1575 38 622 2 1577 2 626 24 627 2 628 2 1580 2 1582 2 1583 2 1584 2 635 2 1586 10 636 2 637 2 1587 11 1589 2 640 38 645 126 647 82 1594 10 1593 2 648 2 650 3 1600 2 1601 78 1602 2 655 2 1605 4 658 2 1611 14 1612 2 661 2 1613 4 663 1 662 2 666 2 1615 1 1616 3 1620 2 1624 2 1626 2 670 14 671 22 673 2 672 10 674 18 676 2 678 38 679 2 1633 112 680 2 1635 2 683 6 1637 2 1638 2 686 2 687 78 1643 2 688 2 692 4 1645 8 1647 2 1649 2 696 120 1651 2 699 2 700 1 701 2 1653 8 1652 78 1654 6 704 2 1656 4 1657 2 706 38 1660 4 707 3 1664 2 708 318 709 2 1666 2 710 2 713 2 714 2 1667 2 1668 4 716 2 1671 1 719 2 722 2 1678 22 724 2 725 2 1679 4 1681 2 726 4 729 2 1685 2 1687 80 1688 2 1689 2 733 8 1690 2 1691 1174 1692 15 737 2 1696 2 738 38 739 2 1697 3 741 4 1699 4 743 38 1705 4 745 2 1706 8 1708 2 1712 2 1715 2 1720 2 758 2 1723 1 1724 2 760 10 1726 78 764 2 1730 60 1732 2 765 40 1733 2 766 2 1734 2 768 20 769 1 773 14 771 10 774 3 1735 54 1736 6 1737 2 1739 2 1738 20 777 2 779 2 1740 1 781 2 1742 2 782 6 1744 2 1745 2 785 2 1747 2 789 2 790 3 792 3 1750 2 794 4 1754 4 1753 2 798 2 797 4 803 2 804 3 1758 2 805 4 1759 2 1762 24 1765 2 1764 4 809 2 811 2 1767 38 813 2 815 3 1774 2 819 2 1776 3 1777 2 823 4 1780 2 824 76 1781 8 827 2 829 2 832 2 1784 2 833 1 1785 3 1788 2 840 4 839 156 1791 2 841 8 842 2 845 4 847 558 1796 2 1797 2 850 2 1798 2 1799 2 1801 402 1800 3 1803 22 1805 2 856 4 1809 158 858 2 859 10 1811 12 860 2 1813 2 1814 2 1818 61 1820 2 1822 1 1821 3 1828 16 1829 2 870 4 1831 2 1834 16 872 80 873 84 874 38 876 2 878 3 1837 156 1838 80 1839 2 880 2 1841 2 882 2 1843 2 1845 2 1847 2 883 8 1850 2 1851 2 1853 20 888 2 1855 2 1858 78 894 2 893 2 895 36 896 4 1863 2 1865 2 897 80 1866 2 1868 3 898 2 1872 3 1877 2 1878 480 905 2 906 2 1881 2 909 10 910 2 1885 2 1884 78 912 2 1886 2 914 2 1889 2 916 20 1892 2 1894 2 1893 10 1896 2 1897 3 920 2 922 2 921 2 1900 2 1901 2 926 6 1902 2 929 8 1903 2 1906 38 931 2 933 2 934 2 1911 20 1910 2 936 2 1912 2 937 2 1914 124 1919 2 940 2 1924 4 945 2 947 156 1932 2 951 2 
998 2 1038 6 888 2 674 2 333 2 645 2 1256 2 251 2 1047 2 969 2 1134 2 59 2 1380 2 1834 2 194 2 1913 2 375 2 1301 2 120 2 33 2 289 2 1691 2 1583 2 859 4 
998 2 1038 6 888 2 674 2 333 2 645 2 1256 2 251 2 1047 2 969 2 1134 2 59 2 1380 2 1834 2 194 2 1913 2 375 2 1301 2 120 2 33 2 289 2 1691 2 1583 2 859 4 
998 2 1038 6 888 2 674 2 333 2 645 2 1256 2 251 2 1047 2 969 2 1134 2 59 2 1380 2 1834 2 194 2 1913 2 375 2 1301 2 120 2 33 2 289 2 1691 2 1583 2 859 4 
1286 3 1226 2 998 3 1143 3 482 2 333 2 1738 4 645 2 1634 2 453 4 1762 5 1763 2 1080 2 1047 4 1294 2 1260 2 971 2 652 2 1207 6 1481 2 975 4 1270 2 1272 4 375 3 495 2 91 2 121 2 1808 2 312 2 379 3 33 2 505 2 1691 10 1460 2 416 2 1118 2 382 2 916 4 95 4 768 4 
1143 2 333 2 1738 4 645 2 453 4 1047 4 971 2 1260 2 1207 6 652 2 1481 2 975 4 1270 2 1272 4 121 2 1808 2 1691 10 416 2 1118 2 916 4 127 2 359 2 1562 2 1226 2 1286 2 998 2 482 2 1634 2 1080 2 1763 2 1762 4 1294 2 375 2 495 2 91 2 312 2 379 2 33 2 505 2 1460 2 382 2 95 4 768 4 
1143 2 333 2 1738 4 645 2 453 4 1047 4 971 2 1260 2 1207 6 652 2 1481 2 975 4 1270 2 1272 4 121 2 1808 2 1691 10 416 2 1118 2 916 4 127 2 359 2 1562 2 1226 2 1286 2 998 2 482 2 1634 2 1080 2 1763 2 1762 4 1294 2 375 2 495 2 91 2 312 2 379 2 33 2 505 2 1460 2 382 2 95 4 768 4 
1143 2 333 2 1738 4 645 2 453 4 1047 4 971 2 1260 2 1207 6 652 2 1481 2 975 4 1270 2 1272 4 121 2 1808 2 1691 10 416 2 1118 2 916 4 127 2 359 2 1562 2 1226 2 1286 2 998 2 482 2 1634 2 1080 2 1763 2 1762 4 1294 2 375 2 495 2 91 2 312 2 379 2 33 2 505 2 1460 2 382 2 95 4 768 4 
1143 2 333 2 1738 4 645 2 453 4 1047 4 971 2 1260 2 1207 6 652 2 1481 2 975 4 1270 2 1272 4 121 2 1808 2 1691 10 416 2 1118 2 916 4 127 4 359 4 1562 4 1226 2 1286 2 998 2 482 2 1634 2 1080 2 1763 2 1762 4 1294 2 375 2 495 2 91 2 312 2 379 2 33 2 505 2 1460 2 382 2 95 4 768 4 
1028 2 407 2 1350 2 1243 2 864 2 792 2 
50 2 722 2 62 2 218 2 1894 2 204 2 792 2 
423 1 241 2 132 1 718 1 1739 2 392 2 1707 1 1150 2 1047 8 844 2 865 2 160 2 1009 2 1505 2 397 2 190 2 222 1 1648 2 1347 2 1220 2 1659 2 1691 10 913 2 857 2 1848 2 1622 2 
482 6 1736 4 961 2 337 2 453 4 1762 16 1047 6 971 6 1481 6 1270 6 344 2 530 2 495 6 1549 2 91 2 1026 2 1923 2 1691 6 201 2 1118 6 1525 4 382 6 1783 2 858 2 991 2 127 5 359 2 1035 2 1562 2 95 12 
1738 2 875 1 1579 2 761 2 1047 1 1151 2 1691 1 1011 2 1033 4 568 2 1679 2 148 2 752 2 476 6 58 2 1786 2 768 2 975 2 
1738 2 1579 2 761 4 1151 2 568 2 1011 2 1033 4 1679 4 148 2 752 2 476 6 58 4 1786 2 768 2 975 2 
1738 2 875 1 1579 2 761 8 1047 1 1151 2 1691 1 568 8 1011 2 1033 4 1679 8 148 2 752 6 476 10 58 8 1786 2 768 2 975 2 
1738 2 1579 2 761 2 1151 2 1011 2 1033 2 1679 2 148 2 476 2 58 2 1786 2 768 2 975 2 
1199 4 835 2 1788 8 329 10 330 4 836 2 839 18 840 8 847 124 590 6 1316 6 1318 6 1430 16 1324 6 1801 88 1802 4 1550 14 1218 6 1114 8 1326 4 117 10 1116 50 1691 150 1332 6 1809 16 1119 6 738 4 989 4 16 4 1439 92 478 6 743 4 1000 4 134 42 1235 8 1448 6 252 34 367 4 368 10 866 90 1133 24 140 42 1572 2 1455 2 1015 4 28 6 258 2 872 6 264 6 874 4 497 6 377 8 1242 2 759 24 1837 36 1352 2 1354 6 1249 4 1849 2 1034 4 38 22 1037 10 1359 7 1142 15 272 2 1587 7 640 4 1854 2 1858 24 642 2 1860 24 48 4 1258 12 1047 134 897 24 519 10 782 4 162 6 1601 10 400 6 403 6 1606 10 1878 112 1163 6 909 8 169 6 1170 8 665 4 1172 2 1884 6 668 4 1280 8 1494 1 1888 18 173 58 1756 2 1283 16 672 11 1289 24 928 26 79 84 678 4 551 2 1907 8 1177 248 1500 14 1399 6 687 4 84 4 814 2 1182 2 1297 2 303 28 1298 4 87 4 1776 2 1914 12 306 90 1652 6 1656 4 939 26 1922 2 1927 4 707 2 947 17 323 6 708 58 834 10 
149 2 1787 2 272 2 329 2 1788 2 330 2 642 2 839 2 1308 4 840 2 1860 2 1369 2 1672 2 1047 44 519 2 847 6 590 2 1601 2 1682 4 1158 2 1430 4 1606 2 1111 4 345 2 1160 2 1610 2 1878 20 1161 2 1801 20 1487 2 731 2 1550 2 117 2 1163 2 1164 2 168 6 1491 2 169 2 1327 2 1170 2 1222 2 1691 46 1332 2 1809 4 1119 2 1280 6 173 2 799 2 989 2 1389 2 1756 2 1175 2 1283 4 608 2 1122 2 1700 2 1702 2 1290 2 861 2 551 2 1233 2 614 2 1500 2 1177 44 863 2 1008 2 1401 4 1235 2 367 2 368 2 300 2 1083 2 1133 2 303 38 258 2 28 4 1514 2 89 2 820 2 264 2 377 2 759 2 200 2 825 2 1837 2 1922 2 1658 2 947 2 1464 2 708 2 1037 2 834 2 
1199 4 1788 2 329 4 836 2 839 10 840 2 1424 8 847 24 1313 2 590 4 1316 4 1430 10 852 8 1324 4 1801 36 1550 6 1218 4 1326 4 1116 8 1328 8 1554 2 1691 78 1809 10 1332 4 1119 4 738 4 16 4 1439 24 478 4 608 2 1122 10 743 4 1233 2 613 4 134 16 1235 2 1448 4 252 30 368 4 1825 2 140 8 1572 2 1015 4 28 2 258 2 264 4 872 4 874 4 497 4 1242 2 377 2 1837 6 1842 2 1354 4 1359 4 1037 4 1142 8 149 10 272 2 640 4 390 4 642 2 515 16 1047 70 897 8 519 6 782 2 162 4 1601 4 1159 4 400 4 403 4 1607 4 1160 2 1878 44 1163 4 909 4 170 4 169 4 1884 4 1280 6 173 30 1283 10 1069 8 802 2 295 4 79 24 678 4 551 2 807 2 1177 104 1500 6 84 4 303 14 1298 4 89 10 1914 14 562 32 1652 4 1656 4 1922 2 567 4 707 2 947 10 323 4 708 28 576 16 
272 2 1587 2 329 2 1788 2 835 2 330 2 642 2 840 2 839 2 1047 26 519 2 782 2 847 8 590 4 1601 2 1430 6 1160 2 1610 2 1878 14 1801 14 1550 2 1163 4 909 4 169 4 1691 28 1809 6 1332 4 1280 4 1119 4 173 12 1756 2 16 2 1283 6 672 2 551 2 1500 2 1177 40 1235 2 252 6 368 2 687 2 814 2 1182 2 303 14 258 2 28 2 1776 2 264 4 377 2 1837 2 1352 2 1656 2 1922 2 1034 2 947 2 38 10 708 12 1037 2 1142 6 
1590 2 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 
1456 1 1458 1 697 1 1415 1 293 1 1079 1 

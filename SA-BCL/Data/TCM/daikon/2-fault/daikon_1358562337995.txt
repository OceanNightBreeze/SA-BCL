#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 631 499 664 745 334 1282 985 208 72 1063 1289 1432 1245 1396 803 1053 1464 600 651 131 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:isIOASet()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_30()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.sequenceString.MemberString:enabled()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:Node()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_81()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_96()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_10()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:isString()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:is_false()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_120()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3_21()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_134()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_161()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression; | STATEMENT | 68469 | stmt -> ;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.Invariant:justified()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_25(I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfo:isPointer()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfo:isDerived()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.Ppt:Ppt()V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_118()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.VarInfo:has_typeof()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.PptSlice1:num_samples()I
utilMDE.WeakHasherMap:size()I
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_115()Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3_15()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.ModBitTracker:split(I)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hasTypeOf()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:slice([III)[I
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eq(DD)Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_49()Z
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_80()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eq(II)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:ne(II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsFloat()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:union([I[I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfo:isIOAArray()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:numIntArrays()I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaParser:jj_3R_135()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.PptSlice3:arity()I
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
jtb.JavaCharStream:getBeginLine()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_3()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.MathMDE:modulus([I)[I | OPERATOR | 8627 | % -> >>>
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexGT([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_22()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1342 2 941 2 527 2 993 2 1321 2 1109 4 550 2 574 2 609 2 
591 2 392 6 554 2 1188 2 147 6 746 2 204 2 1530 2 1449 2 405 2 955 6 
1294 4 273 2 1035 6 128 6 929 6 609 2 459 4 1578 2 741 6 1315 2 527 2 725 2 321 2 
67 2 965 6 889 2 553 6 450 2 299 16 1083 8 1582 10 527 6 1376 8 1639 4 1193 4 1325 12 1297 8 152 29 816 2 1619 10 678 26 1334 4 1481 10 609 6 407 2 988 16 408 4 539 2 614 16 1550 10 46 8 959 10 379 2 
1132 6 1515 4 
1326 2 
1148 2 549 2 553 2 299 2 1582 4 1352 2 1376 2 1377 2 1268 2 8 2 1325 2 152 6 12 2 1619 2 1481 2 1334 2 678 4 988 2 1042 2 614 2 1550 2 884 2 959 2 
151 6 853 4 1325 5 152 14 1619 4 1481 4 678 12 576 4 1069 2 408 2 988 8 299 8 864 2 614 8 1550 4 915 6 959 4 
1394 2 941 2 259 2 593 2 1074 2 1150 14 1400 2 188 2 602 8 1056 2 483 2 1499 2 175 2 403 2 314 2 1649 2 748 4 1231 4 1258 2 685 2 
1047 2 887 2 25 2 69 2 862 2 1326 2 371 2 1275 2 958 2 20 2 
940 2 941 2 352 2 424 4 89 2 4 2 1316 2 527 4 363 2 1220 2 627 4 735 2 487 2 1617 2 60 2 1013 2 840 2 103 2 376 2 1168 2 682 2 1231 2 205 2 1339 2 1572 2 850 2 1127 2 644 2 1180 2 646 4 450 2 1023 2 972 2 74 2 868 2 1498 2 558 2 1357 2 458 2 1194 4 340 2 609 4 661 2 1591 2 
853 4 965 4 1262 4 1517 6 553 4 576 4 299 32 527 4 1582 6 1107 4 1376 18 267 8 1271 4 1058 4 1250 2 1563 4 1501 2 151 6 983 2 1325 22 152 54 242 2 838 6 1619 16 1481 16 1334 2 678 48 609 4 16 6 988 32 105 2 614 32 1550 16 915 6 514 2 959 16 46 6 379 2 416 6 
1231 2 1400 2 1056 2 
1161 2 802 2 562 2 387 2 537 2 4 2 155 10 1025 2 663 2 1155 2 706 22 808 2 174 2 1654 2 
826 2 1469 3 1048 2 517 2 1470 2 518 2 0 2 521 1 1374 2 522 4 190 2 3 2 1264 2 949 2 297 1 1472 1 527 32 723 32 528 2 724 8 726 3 1378 2 1381 2 1157 1 732 2 97 2 1477 2 1479 3 628 3 434 4 307 2 953 2 1064 2 14 2 439 2 15 1 635 3 538 2 841 2 1392 2 1280 16 1173 1 1487 2 847 3 1489 2 445 1 1393 1 964 3 113 6 114 2 1178 2 449 2 1399 2 550 2 29 4 124 2 1581 3 1403 3 980 2 1189 2 757 6 873 2 1585 8 1298 2 1586 2 40 1 224 2 766 2 770 2 1199 2 43 2 568 2 773 12 1513 2 997 1 1600 2 1309 32 570 2 475 12 142 16 143 2 1422 2 783 2 895 3 145 2 1424 4 238 2 1319 2 1610 2 364 2 1217 2 1216 16 1612 1 150 2 1221 2 788 4 1324 2 1521 2 675 8 1330 2 1114 4 1227 2 907 2 1621 2 912 2 1623 16 1441 2 1624 5 1443 2 798 2 590 1 381 2 258 2 160 2 1627 2 801 1 1633 2 805 2 1022 2 1450 2 165 2 1451 3 1350 1 1351 2 921 2 922 2 266 2 393 2 925 2 268 1 1247 2 810 24 811 2 927 3 699 1 1137 1 399 2 275 2 815 4 930 24 609 34 934 6 1543 4 1362 2 820 2 513 6 708 2 1363 2 1146 2 
1117 2 
777 2 609 2 
606 2 1438 2 609 4 
1467 2 419 8 421 2 828 42 186 14 426 2 1265 2 6 2 1474 2 623 36 1053 2 432 8 436 8 629 2 1063 2 631 2 199 2 437 8 17 2 441 2 1277 2 636 2 844 2 640 8 1073 4 207 4 447 4 1282 2 645 2 1075 2 1492 4 208 2 649 2 212 2 1286 16 651 2 1084 2 31 2 1289 2 219 2 36 10 1500 2 872 20 453 2 1296 2 1090 2 1092 10 39 6 1096 2 461 48 465 48 664 2 1305 28 1510 14 1516 48 893 2 668 2 235 2 1317 2 1320 2 1108 2 482 4 485 2 1328 48 59 2 1524 2 677 8 1333 18 62 4 246 8 244 6 249 2 248 146 251 20 1337 4 688 2 918 2 495 26 496 2 497 4 72 2 691 2 499 2 1348 4 692 6 500 2 924 2 923 2 1535 2 1536 48 1537 22 1355 2 926 2 77 16 505 2 1140 8 932 14 703 2 935 48 1542 2 938 2 1552 36 284 8 285 4 715 4 1368 2 516 2 946 4 520 2 293 2 1371 2 524 4 1558 2 1560 4 92 4 729 2 532 2 1564 2 1162 2 1566 2 1164 4 536 2 1166 2 311 2 104 36 743 28 1169 6 107 2 745 2 747 2 109 2 1573 6 1395 4 1397 2 1396 2 324 2 1183 26 551 4 325 192 120 48 121 22 123 14 973 2 334 2 978 2 1405 2 756 2 556 2 1406 4 336 8 126 2 1407 2 759 2 1409 2 761 8 1587 2 985 2 130 2 131 2 1414 2 1588 48 1197 2 1198 48 990 2 348 8 1595 2 1418 48 349 8 1419 48 355 2 571 2 356 4 573 4 1207 4 1000 2 1423 4 782 2 577 2 361 2 1002 2 1425 4 1004 4 785 2 365 14 579 48 786 4 1432 2 582 2 1007 2 370 6 791 4 373 2 583 2 1620 2 375 4 1015 2 1622 146 586 2 587 4 377 2 378 48 158 4 1020 4 1445 4 1239 2 1628 24 161 2 803 2 1241 2 385 22 598 4 388 2 1634 2 1243 2 390 4 600 2 167 4 1029 4 170 2 1245 2 601 4 172 2 397 2 604 2 1641 2 1037 2 814 2 1462 2 179 146 1464 2 183 4 1652 2 1465 2 616 2 414 20 
736 1 625 2 1118 2 618 2 
480 2 1118 2 
1301 2 1493 2 1290 2 1231 2 
525 2 1301 2 1493 2 1290 2 1231 2 1249 2 
490 2 1193 2 1030 2 1493 2 1231 2 1118 2 
106 2 840 2 
1027 2 1193 2 1493 2 1231 2 
696 2 690 2 
79 2 986 2 
1312 2 849 2 
464 2 1323 2 
1323 2 79 2 278 2 
1323 2 880 2 79 2 
1323 2 79 2 1518 2 
1323 2 79 2 1604 2 
1602 2 1421 6 1493 2 1354 2 979 6 1011 2 1231 2 713 2 
1154 2 320 2 
525 2 490 2 1193 2 333 2 1493 2 1231 2 1118 2 
490 2 754 2 1118 2 
490 2 506 2 1118 2 
1154 2 625 2 1373 2 
490 2 1118 2 
1154 2 312 2 
196 2 1118 2 
1154 2 625 2 1112 2 
625 2 849 2 904 2 
1323 2 382 2 625 2 
1196 2 696 2 625 2 
79 2 625 2 277 2 
1154 2 1509 2 
721 2 1118 2 
222 2 849 2 
1323 2 454 2 
1163 2 696 2 
1452 2 79 2 
852 2 1154 2 
79 2 125 2 
696 2 1174 2 
1323 2 881 2 
133 2 849 2 
230 2 1154 2 625 2 1112 2 
230 2 1361 2 1154 2 625 2 1112 2 
1154 2 625 2 1160 2 
1154 2 625 2 588 2 
1370 2 1579 2 1085 2 66 2 
1625 2 1061 2 560 2 420 2 1642 2 630 2 71 2 1525 2 191 2 1534 2 1070 4 706 6 171 2 1594 2 1488 2 1512 2 1367 2 271 4 
1210 2 625 2 
1330 2 
1470 2 0 2 522 4 190 2 1471 2 527 26 723 6 97 2 732 2 434 2 953 2 1064 2 15 2 540 2 1392 2 318 2 638 2 1489 2 111 2 545 2 113 2 114 2 1078 2 550 2 29 2 1189 2 757 6 40 2 224 2 766 2 43 2 1199 2 773 8 1309 4 1600 2 353 2 142 6 475 8 233 2 783 2 145 2 238 2 1424 4 1319 2 1610 2 364 2 1217 2 788 4 1521 2 675 2 1331 2 1227 2 686 2 258 2 160 6 1627 2 801 4 1632 4 165 2 1450 2 1351 2 1134 4 393 4 1246 2 1538 2 1247 2 275 2 815 2 1038 2 609 26 934 2 406 2 1543 4 1362 2 513 4 415 2 
1470 2 0 2 522 4 190 2 1471 2 527 26 723 6 1381 2 97 2 732 2 434 2 1568 2 953 2 1064 2 15 2 538 2 540 2 1392 2 638 2 1489 2 111 2 545 2 113 2 114 2 1078 2 550 2 29 2 1189 2 757 6 40 2 224 2 766 2 767 2 43 2 1199 2 773 8 1309 4 1600 2 353 2 142 6 475 8 233 2 783 2 145 2 1424 4 238 2 1319 2 1610 2 364 2 1217 2 788 4 1521 2 675 2 1331 2 1227 2 686 2 258 2 160 6 1627 2 801 1 1632 4 165 2 1450 2 1351 2 73 2 1134 4 393 4 1538 2 1247 2 399 2 275 2 815 2 1038 2 609 26 934 2 1543 4 1362 2 513 6 415 2 
1520 2 
1306 2 1159 2 
944 2 1468 4 1311 2 779 2 1206 4 522 2 1263 2 238 2 527 6 147 6 1319 2 1156 10 1269 2 364 2 1003 2 901 2 788 2 303 2 1060 2 1522 4 1062 4 1165 2 1010 2 1227 2 955 6 440 2 585 2 245 2 746 4 319 2 1125 2 1237 2 1128 2 1242 8 1077 2 386 2 260 2 1449 2 392 6 1188 4 554 2 213 4 1190 8 757 4 1358 2 275 2 1139 2 178 2 224 2 609 12 766 2 1416 2 42 2 132 2 1648 4 343 2 612 2 413 2 347 2 1597 2 
944 2 1468 4 1311 2 779 2 1206 4 522 2 1263 2 238 2 527 6 147 8 1319 2 1156 10 364 2 1003 2 788 2 901 2 303 2 1060 2 1567 2 1522 4 1062 4 1165 2 1010 2 1227 2 905 4 955 8 440 2 585 2 245 2 746 4 319 2 1125 2 1237 2 1128 2 749 2 1242 8 386 2 260 2 1449 2 392 6 1188 4 554 2 213 4 1190 8 757 4 1358 2 275 2 1139 2 178 2 224 2 609 12 405 2 766 2 42 2 1416 2 132 2 1648 4 343 2 612 2 413 2 347 2 1597 2 
1060 2 1468 4 1139 2 386 2 955 2 1416 2 392 2 1648 2 440 2 1188 2 612 2 213 4 746 2 413 2 347 2 1003 2 1597 2 901 2 
944 2 1468 4 1311 2 779 2 1206 4 522 2 1263 2 238 2 527 6 147 6 1319 2 1156 6 1269 2 364 2 1003 2 901 2 788 2 303 2 1060 2 1522 4 1062 4 1165 2 1010 2 1227 2 955 6 440 2 585 2 245 2 746 4 319 2 1125 2 1237 2 1128 2 1242 4 1077 2 386 2 260 2 1449 2 392 4 1188 4 213 4 1190 4 757 4 1358 2 275 2 1139 2 178 2 224 2 609 12 405 2 766 2 1416 2 42 2 132 2 1648 4 343 2 612 2 413 2 347 2 1597 2 
944 2 1468 4 1311 2 779 2 1206 4 522 2 1263 2 238 2 527 6 147 6 1319 2 1156 6 1269 2 364 2 1003 2 901 2 788 2 303 2 1060 2 1522 4 1062 4 1165 2 1010 2 1227 2 955 4 440 2 585 2 245 2 746 4 204 2 319 2 1125 2 1237 2 1128 2 1242 4 1077 2 386 2 260 2 1449 2 392 6 1188 4 213 4 1190 4 757 4 1358 2 275 2 1139 2 178 2 224 2 609 12 766 2 1416 2 42 2 132 2 1648 4 343 2 612 2 413 2 347 2 1597 2 
944 2 1468 4 1311 2 779 2 1206 4 522 2 1263 2 238 2 527 6 147 6 1319 2 1156 6 1269 2 364 2 1003 2 901 2 788 2 303 2 1060 2 1522 4 1062 4 1165 2 1010 2 1227 2 955 6 440 2 585 2 245 2 746 4 319 2 1125 2 1237 2 1128 2 1242 4 1077 2 386 2 260 2 1449 2 392 6 1188 4 554 2 213 4 1190 8 757 4 1358 2 275 2 1139 2 178 2 224 2 609 12 766 2 1416 2 42 2 132 2 1648 4 343 2 612 2 413 2 347 2 1597 2 
944 2 1468 4 1311 2 779 2 1206 4 522 2 1263 2 238 2 527 6 147 8 1319 2 1156 10 1269 2 364 2 1003 2 788 2 901 2 303 2 1060 2 1522 4 1062 4 1165 2 1010 2 1227 2 955 6 440 2 585 2 245 2 746 4 204 2 319 2 1125 2 1237 2 1128 2 1242 8 1077 2 386 2 260 2 1449 2 392 8 1188 4 554 2 213 4 1190 8 757 4 1358 2 275 2 1139 2 178 2 224 2 609 12 766 2 1416 2 42 2 132 2 1648 4 343 2 612 2 413 2 347 2 1597 2 
944 2 1468 4 1311 2 779 2 1206 4 522 2 1263 2 238 2 527 6 147 6 1319 2 1156 10 1269 2 364 2 1003 2 901 2 788 2 303 2 1060 2 1522 4 1062 4 1165 2 1010 2 1227 2 955 6 440 2 585 2 245 2 746 4 319 2 1125 2 1237 2 1128 2 1242 8 1077 2 386 2 260 2 1449 2 392 6 1188 4 554 2 213 4 1190 8 757 4 1358 2 275 2 1139 2 178 2 224 2 609 12 766 2 1416 2 42 2 132 2 1648 4 343 2 612 2 413 2 347 2 1597 2 
1468 4 1470 2 0 2 620 1 621 6 1263 2 1471 2 429 2 9 6 1060 2 434 2 1062 6 1064 2 1067 2 1480 2 13 7 440 2 204 4 851 2 643 6 1077 2 1078 4 27 2 1494 2 29 2 861 2 213 4 34 6 224 2 42 2 1302 2 43 2 44 1 883 6 1309 2 472 6 475 4 1311 2 238 2 672 2 1319 2 901 2 1110 1 902 1 1521 2 674 4 675 2 1522 4 1111 2 1117 6 910 2 245 2 1122 1 1125 2 258 2 1128 2 260 4 1347 6 1351 12 1134 4 1538 2 78 1 1358 2 275 2 1139 2 934 2 1543 4 83 2 84 1 1362 2 282 2 513 6 944 2 718 6 522 4 527 24 723 8 1156 2 531 2 97 2 303 2 1565 6 98 2 953 2 1165 4 739 1 954 4 955 4 538 2 746 4 319 2 1175 2 113 2 546 2 750 10 550 2 1188 4 1189 2 1190 2 757 6 766 2 1416 2 132 2 343 2 1593 6 347 2 994 6 773 4 1597 2 569 2 141 2 140 2 1203 7 353 2 142 6 777 6 1206 8 779 2 145 2 1001 2 1424 4 147 12 364 2 1610 2 1003 2 1429 2 788 4 1222 2 1010 2 1227 2 1228 2 585 2 795 2 1232 2 1237 2 592 2 160 6 1627 2 1240 2 804 2 386 2 164 6 1449 4 165 2 392 8 1247 2 1033 6 606 6 399 2 815 2 178 2 609 46 1040 2 1648 4 181 2 612 2 1650 1 413 2 615 2 1046 8 
944 2 1468 4 718 6 1470 2 0 2 522 4 621 6 1263 2 1471 2 527 26 723 8 429 2 1156 2 531 2 9 6 97 2 303 2 1060 2 1565 6 434 4 98 2 1062 6 953 2 1165 4 1064 2 1480 2 1067 2 954 4 1274 2 955 8 538 2 440 2 842 2 746 4 319 2 1175 2 851 2 546 2 643 6 113 2 750 10 27 2 1078 4 1077 2 550 2 1494 2 29 4 861 2 554 4 1188 4 213 4 34 6 1189 2 1190 6 757 6 224 2 766 2 132 2 42 2 1416 2 343 2 1302 2 43 2 1593 6 883 6 347 2 994 6 1597 2 773 8 569 2 140 2 141 2 472 6 1309 2 353 2 142 6 475 8 1311 2 777 6 779 2 1206 8 145 2 1001 2 672 2 1424 4 238 2 147 12 1319 2 1610 2 364 2 1429 2 1003 2 901 2 788 4 674 4 1521 2 675 2 1222 2 1522 4 1111 2 1010 2 1227 2 1228 2 1117 6 910 2 585 2 245 2 795 2 1232 2 592 2 1125 2 1237 2 258 2 1128 2 1627 2 160 6 1240 2 804 2 164 6 386 2 260 4 1347 6 1449 4 165 2 1351 12 392 8 1134 4 393 2 1538 2 1247 2 1033 6 606 6 1358 2 399 2 275 2 815 4 1139 2 178 2 934 2 609 48 1040 2 1543 4 181 2 1648 4 612 2 83 2 282 2 1362 2 615 2 413 2 513 6 1046 8 
944 2 1468 4 718 6 1470 2 0 2 522 4 621 6 1263 2 1471 2 527 26 723 8 429 2 1156 6 531 2 9 6 97 2 303 2 1060 2 1565 6 434 4 98 2 1062 6 953 2 1165 4 1064 2 1480 2 1067 2 954 4 1274 2 955 8 538 2 440 2 842 2 746 4 319 2 1175 2 851 2 546 2 643 6 113 2 750 10 27 2 1078 4 1077 2 550 2 1494 2 29 4 861 2 554 4 1188 4 213 4 34 6 1189 2 1190 6 757 6 224 2 766 2 132 2 42 2 1416 2 343 2 1302 2 43 2 1593 6 883 6 347 2 994 6 1597 2 773 8 569 2 140 2 141 2 472 6 1309 2 353 2 142 6 475 8 1311 2 777 6 779 2 1206 8 145 2 1001 2 672 2 1424 4 238 2 147 12 1319 2 1610 2 364 2 1429 2 1003 2 901 2 788 4 674 4 1521 2 675 2 1222 2 1522 4 1111 2 1010 2 1227 2 1228 2 1117 6 910 2 585 2 245 2 795 2 1232 2 592 2 1125 2 1237 2 258 2 1128 2 1627 2 160 6 1240 2 804 2 1242 4 164 6 386 2 260 4 1347 6 1449 4 165 2 1351 12 392 8 1134 4 393 2 1538 2 1247 2 1033 6 606 6 1358 2 399 2 275 2 815 4 1139 2 178 2 934 2 609 48 1040 2 1543 4 181 2 1648 4 612 2 83 2 282 2 1362 2 615 2 413 2 513 6 1046 8 
1468 4 1470 2 0 2 621 6 1263 2 1471 2 429 2 9 6 1060 2 434 4 1062 6 1064 2 1067 2 1480 2 839 6 1274 2 633 2 440 2 842 2 204 2 851 2 643 6 1077 2 1078 4 27 2 1494 2 29 4 861 2 213 4 32 6 34 6 221 6 224 2 1299 2 42 2 1302 2 43 2 883 12 1309 4 472 6 475 10 1311 2 238 2 672 2 1319 2 901 2 1521 2 674 4 675 4 1522 4 1111 2 1117 12 910 2 245 2 247 2 252 2 1125 2 258 2 1128 2 260 4 1347 6 1351 10 264 2 265 2 1134 6 1538 2 1358 2 275 2 1139 2 934 4 1543 4 83 2 1362 2 513 6 1555 2 943 6 87 6 944 2 718 6 522 4 527 24 723 12 1156 6 727 6 531 2 97 2 303 2 1565 6 98 2 953 2 1165 4 954 4 955 10 538 2 746 4 319 2 110 6 1175 2 546 2 113 4 750 8 550 2 1187 2 1188 4 554 4 1189 2 1190 6 757 6 766 2 1416 2 132 2 343 2 1593 6 347 2 994 12 773 10 1597 2 569 2 140 2 141 2 353 4 142 8 777 12 779 2 1206 8 145 2 1001 2 1424 4 147 16 364 2 1610 2 1003 2 1429 2 788 4 1222 2 1010 2 1227 2 1228 2 792 6 585 2 795 2 1232 2 1237 2 592 2 160 8 1627 2 1240 2 1242 4 804 2 386 2 164 6 1449 4 165 2 392 10 393 2 1247 2 1033 12 606 12 399 2 815 4 178 2 400 6 609 52 405 2 1040 2 1648 4 181 2 612 2 413 2 615 2 1046 8 
944 2 1468 2 1077 2 1242 4 1206 2 1449 2 1263 2 392 6 554 2 1188 4 213 2 147 4 1156 4 1003 2 1190 6 901 2 303 2 1060 2 1522 2 1062 2 1358 2 1139 2 178 2 609 4 955 6 132 2 42 2 1416 2 585 2 612 2 245 2 343 2 746 4 413 2 319 2 
944 2 1468 2 0 2 522 4 1263 2 1471 2 1051 3 527 24 723 8 1378 2 1156 2 97 2 1272 2 303 2 1060 2 1062 2 953 2 1064 2 14 2 955 6 102 2 538 2 746 4 319 2 113 3 750 2 1077 2 449 2 1078 2 550 2 554 2 1188 4 213 2 1189 2 1190 6 757 6 1091 2 224 2 766 2 132 2 1416 2 42 2 343 2 43 2 228 2 1309 3 142 6 1311 2 1206 2 145 2 1424 4 238 2 147 4 1319 2 364 2 1610 2 1003 2 901 2 788 4 1521 2 1522 2 1330 2 1227 2 585 2 245 2 258 2 160 6 1627 2 1449 2 165 2 392 6 1351 4 1134 4 1538 2 1247 2 1457 2 1358 2 399 2 275 2 1139 2 178 2 609 28 934 3 1543 4 612 2 1362 2 282 2 513 6 413 2 
343 2 176 2 1358 2 
343 2 176 2 1358 2 
1468 2 1470 4 519 2 0 2 423 2 522 4 1471 2 527 16 723 2 429 2 1267 2 1156 6 1054 2 97 2 1475 2 1383 2 434 4 1062 4 953 2 1165 4 1064 2 1387 2 954 2 955 12 538 2 540 4 746 4 204 4 319 2 750 2 1078 6 550 2 1494 2 29 4 1188 4 554 4 213 2 1190 6 1584 2 757 6 224 2 766 2 1416 2 132 2 343 4 43 2 1593 2 1308 2 1597 2 773 4 48 2 1309 2 475 4 142 2 779 2 1206 4 145 2 1424 4 238 2 147 16 1319 2 1609 2 1610 2 364 2 788 4 901 2 484 4 674 2 1521 2 1522 2 1010 2 1332 2 1227 2 1012 2 1228 2 913 4 1237 2 258 2 160 2 1627 2 594 2 801 2 1242 4 386 2 260 2 1449 4 165 2 1351 4 392 12 1456 2 1538 2 1247 2 1539 2 176 2 1358 6 399 2 275 2 815 4 609 24 405 4 1543 4 1648 4 1362 2 513 6 413 4 1466 2 
1475 2 141 2 1383 2 546 2 674 2 750 2 1605 2 609 4 766 2 1351 2 440 2 527 2 975 2 1593 2 1338 2 1159 2 1466 2 
1468 2 1470 4 519 2 0 2 1372 2 522 4 1471 2 527 16 723 2 429 2 1156 6 1054 2 97 2 1475 2 1383 2 434 4 1062 4 953 2 1165 4 1064 2 1387 4 954 2 955 12 538 2 315 2 540 4 746 4 204 4 319 2 1078 6 550 2 1494 2 29 4 1188 4 554 4 213 2 1190 6 1584 2 757 6 224 2 766 2 1416 2 132 2 343 4 43 2 1593 2 1308 2 1597 2 773 4 48 2 1309 4 475 4 142 2 779 2 1206 4 145 2 1424 4 238 2 147 16 1319 2 1609 2 1610 2 364 2 788 4 901 2 484 4 1521 2 1522 2 1010 2 1332 2 1227 2 1012 2 1228 2 913 4 1237 2 258 2 1128 2 800 2 160 2 1627 2 801 1 1242 4 386 2 260 4 1449 4 165 2 1351 2 392 12 698 2 1538 2 1247 2 1135 2 1539 2 176 2 1358 6 399 2 275 2 815 4 609 24 405 4 1543 4 1648 4 1362 2 513 6 413 4 1466 2 
1468 2 1470 4 519 2 0 2 522 4 1471 2 527 16 723 2 429 2 1156 6 1054 2 97 2 1475 2 1383 2 435 2 434 4 1062 4 953 2 1165 4 1064 2 1387 2 438 2 954 2 955 12 538 2 540 4 746 4 204 4 319 2 542 2 750 2 1078 6 550 2 1494 2 29 4 1188 4 554 4 213 2 1190 6 1584 2 757 6 224 2 766 2 1416 2 132 2 343 4 43 2 1593 2 1308 2 1597 2 773 4 48 2 1309 2 475 4 142 2 779 2 1206 4 144 2 145 2 1424 4 238 2 147 16 1319 2 1609 2 1610 2 364 2 788 4 901 2 484 4 674 2 1521 2 1522 2 374 2 1010 2 1332 2 1227 2 1012 2 1228 2 913 4 1237 2 258 2 1128 2 160 2 1627 2 801 1 1242 4 386 2 260 4 1449 4 165 2 1351 4 392 12 1538 2 1247 2 1539 2 176 2 1358 6 399 2 275 2 815 4 609 24 405 4 1543 4 1648 4 1362 2 513 6 413 4 1466 2 
825 24 824 156 826 2 827 104 830 9 0 4 2 2 831 2 832 6 3 2 5 38 833 2 834 22 835 2 11 2 836 6 837 2 15 2 841 2 843 34 19 38 845 40 21 2 846 2 22 2 847 2 23 2 848 2 24 2 26 2 27 2 854 38 28 2 855 2 856 2 857 2 858 2 859 4 861 4 860 2 30 4 865 2 867 2 33 3 35 14 869 2 870 106 871 2 37 78 873 2 38 2 874 2 875 2 40 3 41 4 879 2 878 22 877 4 876 156 43 2 882 4 46 6 885 1 47 60 886 66 890 2 49 38 51 4 892 2 894 2 895 2 896 2 52 2 897 2 898 2 54 2 899 3 900 2 57 2 58 2 903 2 906 2 907 2 908 3 909 24 911 2 910 22 63 66 912 2 64 2 914 38 65 2 916 2 68 2 70 8 919 60 922 2 927 2 75 4 76 2 928 3 930 61 80 4 933 2 934 46 936 2 81 2 937 6 82 2 939 38 85 2 86 2 942 38 945 26 88 2 947 38 948 2 90 2 91 6 950 60 93 2 95 2 951 2 96 2 97 2 99 2 98 16 100 2 953 2 105 4 957 2 108 2 959 6 960 2 111 2 961 76 962 38 964 2 113 16 963 3 965 4 966 2 115 38 118 8 967 2 970 12 971 4 969 2 124 2 974 2 976 3 980 16 981 2 984 3 129 2 987 20 988 12 989 2 134 1 991 2 135 2 992 2 136 2 137 10 138 2 139 4 995 2 996 2 998 2 142 32 143 2 145 8 146 2 148 3 149 3 150 2 1005 2 1006 22 151 6 1008 3 152 24 1009 2 153 2 1014 2 156 2 1017 2 1016 2 1019 2 157 2 159 2 1021 78 160 18 162 2 163 2 1022 2 165 2 1024 4 166 2 1026 2 169 8 168 78 1028 3 1031 2 173 2 1032 4 1034 2 1036 38 177 2 1039 3 1038 4 1041 80 180 4 182 2 1043 4 1044 16 1045 38 184 2 1049 2 187 4 189 2 1051 2 1050 2 1052 80 192 2 193 2 194 3 1055 2 195 6 1059 2 1064 2 198 2 1066 2 200 2 1068 2 201 2 202 10 203 2 1071 2 1072 2 206 2 1076 78 1078 2 209 2 211 10 210 2 1080 2 1081 80 1082 2 214 2 215 78 1087 158 1088 2 217 2 218 4 1089 3 220 2 1091 2 1093 2 223 12 224 2 225 38 226 2 227 4 1097 40 1099 2 228 2 1101 2 1102 2 231 2 1104 2 233 86 238 2 1106 2 239 2 240 2 241 2 242 2 1114 32 1113 4 1115 2 243 2 1119 4 247 4 1120 2 1121 2 250 82 252 2 1123 2 253 8 255 4 254 2 1124 166 256 4 257 16 258 2 1126 2 1129 2 261 2 1130 2 262 8 264 2 1133 78 265 2 1134 12 266 2 267 8 269 2 270 3 272 2 274 2 275 2 1138 24 276 24 1141 8 1142 2 1143 8 280 2 279 2 283 80 1144 2 1145 2 1146 2 286 2 288 8 287 2 289 38 290 2 292 2 1147 2 1149 14 1151 2 1152 2 294 2 296 2 1153 234 295 2 298 4 299 12 1157 1 1158 4 301 78 302 2 304 2 306 2 310 2 309 2 307 2 1167 2 1172 2 317 2 1176 1 322 2 1175 8 323 2 1177 2 1178 2 1181 2 326 78 1184 22 327 2 328 76 1185 80 1187 2 1186 2 329 78 332 2 330 2 335 2 1189 2 1191 16 337 78 1192 2 338 2 339 2 341 2 1195 2 342 2 344 2 345 2 1200 36 350 80 1202 2 1201 2 351 2 352 2 1204 12 353 46 354 18 357 158 1208 2 1209 2 358 4 359 2 360 2 362 2 1212 2 1213 7 1214 6 364 2 1218 3 1216 52 1219 2 1221 2 368 2 367 2 369 2 1222 2 1223 78 372 2 1226 80 1227 2 1229 13 1230 2 1233 14 1234 3 1235 2 379 2 380 32 1238 4 383 2 384 80 1240 2 389 2 391 14 1244 3 394 3 1247 82 395 54 396 2 1248 2 398 2 1251 6 399 324 401 2 402 2 1253 2 404 10 1254 2 409 2 1255 78 411 2 412 2 1256 84 1259 2 1260 2 415 2 416 6 417 2 1261 112 422 12 425 4 427 2 1264 2 1266 40 430 3 431 2 1271 4 1272 2 433 4 1273 10 1276 78 1278 10 1279 120 1280 14 443 1 444 2 1281 6 445 15 446 38 1283 4 1284 2 1285 1 451 8 452 2 1288 2 1292 80 1291 78 1295 2 455 2 1298 2 456 2 457 2 1299 2 460 2 462 2 463 2 466 2 1302 8 467 2 468 234 1303 2 469 4 1307 2 470 78 471 38 1309 110 475 184 476 20 477 2 478 2 1313 10 1314 78 479 158 1319 2 1318 2 481 80 1322 3 1324 2 1325 10 1327 2 486 38 1329 2 1331 2 489 2 1335 3 1336 8 491 80 1340 2 1341 2 492 2 1343 2 1344 24 493 2 494 2 1346 2 498 4 1350 1 1351 10 501 2 502 2 503 2 1356 2 504 6 507 2 1359 2 508 2 509 2 510 156 511 2 512 2 1362 84 513 1112 1363 2 1364 2 1365 2 1369 8 517 2 518 2 1374 2 522 8 523 20 526 4 527 966 1375 2 1376 6 528 2 529 4 530 2 1380 3 1382 2 1384 2 533 2 1388 2 1389 10 538 314 1390 2 1391 24 541 4 1393 13 543 2 545 2 544 2 1398 2 547 2 548 2 550 8 552 2 1401 2 555 2 1402 3 1403 2 557 2 1408 80 559 2 561 10 1410 78 563 2 564 26 1412 2 1413 2 1415 2 566 2 1417 3 567 16 568 2 570 2 572 2 1422 2 576 4 1424 480 1426 2 578 2 1428 176 1427 2 1430 3 580 4 581 2 1431 2 1433 2 584 2 1434 10 1435 2 1436 2 1437 38 1439 4 1441 2 1443 14 1442 2 589 2 590 1 1444 2 596 3 595 2 597 2 1448 2 1451 3 599 2 1453 2 1454 2 1455 2 603 4 1457 2 605 2 1458 2 607 2 1459 2 1460 20 1461 2 608 2 609 1174 1463 2 611 2 613 3 614 12 615 2 617 2 619 102 1470 18 1471 2 622 2 1473 3 626 2 1476 20 628 3 1479 2 1478 2 632 3 1481 6 634 2 1483 2 1482 38 1484 2 1486 3 637 2 638 2 639 26 641 2 642 2 1491 8 647 2 648 2 1495 2 650 2 652 2 653 2 654 2 1496 2 1497 2 657 2 658 3 1502 2 1503 2 1504 2 660 2 659 4 1505 2 662 2 1506 2 1507 2 1508 2 1511 48 1513 2 1514 2 666 2 669 2 670 20 671 10 672 8 673 1 1521 2 675 84 1523 76 678 18 1526 2 679 36 680 4 1527 2 681 2 1528 2 683 2 1529 2 686 2 689 2 1532 2 1533 2 694 80 693 2 695 98 697 2 699 1 700 4 1540 2 701 36 1543 402 704 2 1544 18 1546 20 1548 2 705 1 706 6 707 18 1550 6 1549 12 708 2 1551 2 710 18 711 3 1553 80 1554 60 712 2 716 1 1555 2 719 3 720 2 1556 2 722 2 1559 6 723 126 726 2 724 14 728 6 1561 3 730 2 731 2 733 38 734 2 737 124 738 2 740 3 1569 4 742 4 744 2 1570 4 1571 2 1574 38 750 2 751 10 1576 2 752 2 1577 4 1580 4 1581 2 1583 2 755 2 757 10 758 2 760 2 1585 14 1586 14 762 24 763 10 764 2 765 2 766 2 1589 2 769 2 768 2 1590 2 771 2 1592 2 1596 16 1599 2 773 178 774 2 775 6 1601 34 778 38 1603 3 780 4 1607 2 781 78 1606 80 784 38 1610 2 1612 1 1613 2 1614 22 788 8 789 2 1615 2 790 1 1616 34 1618 6 1619 6 793 14 1621 2 795 2 1623 100 797 2 799 558 1626 2 1627 2 1629 2 1630 2 801 6 1631 2 1633 2 804 2 806 7 1636 3 1638 2 809 80 810 15 812 2 813 22 1640 2 1643 2 1644 1 817 6 1645 4 818 12 1646 2 1647 112 1651 3 820 2 1653 20 822 3 823 2 1655 2 
1309 2 113 2 353 6 142 2 160 2 1631 2 1284 2 1635 2 332 2 527 2 723 2 1134 2 697 2 1189 2 270 2 1273 2 1458 2 561 2 875 2 934 2 609 2 202 4 683 2 1364 2 
1309 2 113 2 353 6 142 2 160 2 1631 2 1284 2 1635 2 332 2 527 2 723 2 1134 2 697 2 1189 2 270 2 1273 2 1458 2 561 2 875 2 934 2 609 2 202 4 683 2 1364 2 
1309 2 113 2 353 6 142 2 160 2 1631 2 1284 2 1635 2 332 2 527 2 723 2 1134 2 697 2 1189 2 270 2 1273 2 1458 2 561 2 875 2 934 2 609 2 202 4 683 2 1364 2 
1309 3 1344 3 965 2 619 6 476 4 422 2 425 2 523 4 1349 2 331 2 299 2 527 4 723 2 300 4 1216 2 1189 2 1460 4 308 2 152 5 1138 3 535 2 1619 2 1386 2 1481 2 678 4 934 3 609 10 988 2 1171 2 614 2 346 2 683 2 1623 2 1550 2 1653 4 45 3 1366 2 959 2 46 4 714 2 
1309 2 619 6 476 4 422 2 425 2 523 4 299 2 527 4 723 2 1376 2 300 4 1216 2 1325 2 308 2 152 4 535 2 1386 2 1619 2 678 4 1481 2 1171 2 683 2 1623 2 959 2 379 2 1344 2 965 2 1349 2 331 2 1189 2 1460 4 1138 2 609 10 934 2 988 2 614 2 346 2 1550 2 1653 4 45 2 46 4 1366 2 714 2 
1309 2 619 6 476 4 422 2 425 2 523 4 299 2 527 4 723 2 1376 2 300 4 1216 2 1325 2 308 2 152 4 535 2 1386 2 1619 2 678 4 1481 2 1171 2 683 2 1623 2 959 2 379 2 1344 2 965 2 1349 2 331 2 1189 2 1460 4 1138 2 609 10 934 2 988 2 614 2 346 2 1550 2 1653 4 45 2 46 4 1366 2 714 2 
1309 2 619 6 476 4 422 2 425 2 523 4 299 2 527 4 723 2 1376 2 300 4 1216 2 1325 2 308 2 152 4 535 2 1386 2 1619 2 678 4 1481 2 1171 2 683 2 1623 2 959 2 379 2 1344 2 965 2 1349 2 331 2 1189 2 1460 4 1138 2 609 10 934 2 988 2 614 2 346 2 1550 2 1653 4 45 2 46 4 1366 2 714 2 
1309 2 619 6 476 4 422 2 425 2 523 4 299 2 527 4 723 2 1376 4 300 4 1216 2 1325 4 308 2 152 4 535 2 1386 2 1619 2 678 4 1481 2 1171 2 683 2 1623 2 959 2 379 4 1344 2 965 2 1349 2 331 2 1189 2 1460 4 1138 2 609 10 934 2 988 2 614 2 346 2 1550 2 1653 4 45 2 46 4 1366 2 714 2 
908 2 654 2 1121 2 966 2 1224 2 139 2 233 2 
908 2 1478 2 418 2 684 2 214 2 728 2 
185 2 1490 2 593 1 1179 2 119 2 1 1 575 2 1557 1 236 2 237 2 428 2 527 8 1319 2 1086 2 7 2 1033 2 366 2 676 2 609 10 1300 2 956 2 314 1 316 1 1485 2 709 2 1598 2 
492 2 965 2 892 2 89 2 576 2 299 6 527 6 1376 3 267 2 501 2 1271 2 869 2 1057 2 558 2 1501 1 151 4 1325 4 152 15 1619 6 609 6 678 12 1481 6 988 6 442 2 614 6 1043 2 1550 6 959 6 46 4 416 4 379 2 
1293 2 229 1 1420 2 1531 2 476 2 448 7 1575 2 609 1 1116 2 523 2 610 2 1608 2 971 2 527 1 1304 4 821 2 1653 2 1519 2 
1293 2 1420 4 1531 2 476 2 448 6 1575 2 1116 4 523 2 610 2 1608 2 971 4 821 2 1304 4 1653 2 1519 2 
1293 2 229 1 1420 8 1531 2 476 2 448 10 1575 2 609 1 1116 8 523 2 610 6 1608 2 971 8 527 1 821 8 1304 4 1653 2 1519 2 
1293 2 1420 2 1531 2 476 2 448 2 1575 2 1116 2 523 2 1608 2 971 2 1304 2 1653 2 1519 2 
824 17 942 4 717 4 945 15 827 42 829 4 0 8 947 4 5 4 1559 4 1153 84 527 134 1052 6 529 2 1270 2 624 18 1379 24 301 6 195 4 433 4 305 2 197 1 737 12 1065 26 538 58 313 26 1276 6 962 4 1574 4 446 4 116 8 1076 10 117 2 118 4 1182 2 326 24 753 2 1185 24 329 6 863 4 1087 16 1497 8 215 6 977 2 870 42 337 6 982 4 1291 6 37 6 127 8 1408 6 1410 24 1094 4 659 2 876 18 227 2 1097 2 468 92 1098 4 470 10 350 6 1100 10 1310 4 475 28 888 10 49 4 357 16 232 2 781 4 1606 6 1314 10 479 16 1424 112 1213 2 784 4 1215 90 481 6 1428 34 56 4 1223 10 1327 8 61 2 1226 6 488 2 1229 11 680 2 1437 4 794 24 793 7 491 6 799 124 1236 4 1124 50 1446 8 1447 2 801 4 384 6 920 2 1637 24 694 6 695 22 168 6 1133 6 807 6 1247 14 809 6 603 6 1251 4 1036 4 399 58 80 2 609 150 818 8 1360 2 1041 6 1543 88 1545 10 819 90 1547 2 510 36 82 8 1255 10 1362 14 513 248 1256 8 1549 7 1553 6 515 12 
824 2 473 2 474 2 475 38 888 2 1205 4 50 2 776 2 357 4 999 2 891 2 0 2 232 2 1103 4 667 2 1606 2 1314 2 1211 2 527 44 1424 20 479 4 1379 2 94 2 1562 2 10 2 55 2 787 2 433 2 56 2 1385 2 1223 2 1327 2 1226 2 1225 2 154 2 538 2 794 2 18 2 796 2 1440 2 799 6 1345 2 112 2 801 2 1076 2 384 2 1182 2 1079 2 753 2 920 2 1081 6 1637 2 1131 2 122 2 216 2 1353 2 1404 2 1497 2 1087 4 655 2 977 2 1247 2 1136 2 603 4 127 2 656 2 1252 2 1408 2 399 2 1095 2 931 2 1411 2 1541 2 609 46 1041 2 1543 20 876 2 1545 2 937 4 1547 2 510 2 281 2 82 2 1255 2 410 2 1362 2 513 44 1256 6 1257 4 470 2 350 2 1100 2 
824 10 291 4 942 4 945 8 827 8 0 2 947 4 5 4 1153 24 527 70 1052 4 301 4 195 4 305 2 952 4 534 2 101 4 737 14 538 28 1170 4 1276 4 962 4 1574 4 446 4 1076 4 118 2 1182 2 753 2 968 2 1185 8 1287 2 329 4 216 10 1087 10 1404 2 1497 2 866 8 215 4 977 2 870 16 1291 4 337 4 37 4 1408 4 1095 10 659 2 565 16 876 10 227 2 772 8 468 24 470 4 350 4 475 14 49 4 357 10 232 2 1313 2 667 2 1606 4 1314 4 234 8 1105 16 479 10 1424 44 784 4 481 4 1611 4 1428 30 53 8 787 2 1223 6 1327 2 61 2 1226 4 1437 4 1018 32 491 4 917 2 687 4 799 24 1124 8 384 4 263 2 1133 4 168 4 1247 6 809 4 603 2 1251 4 1036 4 399 30 702 4 1541 10 609 78 818 4 1543 36 1041 4 1547 2 510 6 82 2 1255 4 1362 6 513 104 1549 4 1256 6 1553 4 
824 2 473 2 945 6 475 14 357 6 0 2 232 2 781 2 1606 4 1314 2 1559 2 527 26 1424 14 479 6 529 2 1428 6 195 2 1327 2 1223 2 1226 4 1229 2 488 2 538 12 680 2 793 2 799 8 1447 2 801 2 1076 2 384 4 118 2 1182 2 753 2 920 2 695 10 1497 2 1404 2 1087 6 977 2 1247 2 603 2 1251 2 1408 4 399 12 80 2 609 28 818 4 1543 14 1041 4 876 2 1547 2 510 2 82 2 1255 2 1362 2 513 40 1256 4 470 2 350 4 
665 2 

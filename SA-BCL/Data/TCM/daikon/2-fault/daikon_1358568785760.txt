#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 1618 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ProglangType:dimensions()I
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_180()Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:readChar()C
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_117()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.ProglangType:isArray()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:gcd([I)I
daikon.PptName:isEnterPoint()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:intersection([I[I)[I
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_48()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3R_63()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_57()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3_29()Z
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.JavaParser:jj_3R_115()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfo:isPointer()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.Intern:intern([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_69()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_96()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String; | ASSIGN | 11250 | = null
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_62()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_87()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_106()Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaCharStream:backup(I)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3_13()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.PptSlice3:arity()I
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.PptSlice0:arity()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_30()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoString.StringEqual:enabled()Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_14()Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Debug:logOn()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.Invariant:is_false()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_164()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_114()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_2_18(I)Z
daikon.ValueTuple:size()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_15()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Assert:assertTrue(Z)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isPrestate()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_18()Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_77()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:negate(I)I
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:isFloat()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3R_72()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_109()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_67()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hasTypeOf()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_17(I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParser:jj_3R_52()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.ProglangType:isString()Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_169()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
daikon.ModBitTracker:split(I)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfo:relate_var()V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[D)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(S[S)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:isDerived()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:slice([III)[I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(II)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3R_124()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hashCode()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:setDiff([I[I)[I
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.PptSlice2:arity()I
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_105()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.PptSlice1:num_samples()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_149()Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.Invariant:getConfidence()D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.visitor.FormatCommand:getNumCommands()I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_ntk()I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_148()Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.diff.Node:Node()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3_35()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:isIOASet()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
612 2 926 2 1152 2 1003 2 1012 2 580 2 1803 2 278 2 287 4 
1478 2 523 2 1440 6 735 6 571 2 1336 6 1393 2 1920 2 493 2 559 2 107 2 
1930 2 845 2 1465 4 389 2 1208 2 729 2 1414 2 1618 2 1489 2 
683 2 801 6 521 2 522 2 715 10 1587 8 171 16 444 2 1431 2 747 8 628 4 1620 16 471 12 1494 2 1373 10 1012 6 1346 4 337 10 633 2 926 6 145 26 1321 10 478 6 702 4 314 28 1871 4 26 16 937 10 884 8 1687 8 
108 6 868 4 
738 2 
1152 2 489 2 743 2 972 2 1588 4 1040 2 974 2 627 2 444 2 267 2 1826 2 271 2 1410 2 1648 2 926 4 1349 2 1108 2 570 2 283 2 1595 4 1353 2 150 2 1473 2 76 2 769 2 1060 2 772 2 1541 2 32 2 466 2 1913 2 716 4 1547 2 1788 2 1012 4 950 2 597 2 1680 2 252 2 255 4 678 2 909 2 1635 2 1279 2 
1395 4 1307 4 801 4 296 2 34 4 1282 4 715 15 171 32 1431 2 747 19 175 4 1620 32 471 22 722 6 131 4 1373 15 1012 4 1289 2 1646 3 69 6 1346 2 337 15 792 2 926 4 145 47 478 4 1321 6 151 6 314 52 1504 6 1301 4 937 15 26 32 432 8 884 6 1332 2 1906 6 775 2 198 5 
847 2 1547 2 1087 2 
1795 2 1541 2 891 22 284 2 1442 2 1667 2 57 2 1243 2 807 10 434 2 70 2 1744 2 243 2 1609 2 
715 2 171 2 747 2 1284 2 1620 2 471 2 1373 2 500 2 1346 2 337 2 1626 2 1892 2 145 4 478 2 1321 4 606 2 677 2 1475 2 1659 2 314 6 937 2 26 2 1607 2 
1395 4 145 12 701 2 715 4 702 2 171 8 314 16 1620 8 1504 6 722 6 471 4 1301 4 1373 4 26 8 937 4 246 2 337 4 
489 4 1542 4 1309 2 200 2 945 2 1588 4 1121 14 1547 8 326 2 1461 2 1011 62 864 2 783 2 1730 4 501 2 985 4 279 2 212 2 1498 4 418 2 570 2 454 2 1170 2 672 2 1443 4 1799 4 1767 4 1294 4 1320 4 847 2 1324 10 1444 2 1087 6 23 2 1331 2 1810 2 80 2 120 4 1662 4 1192 10 
744 2 1882 2 204 2 806 2 1317 2 1207 2 1502 2 768 2 291 2 738 2 
854 4 1094 3 1337 2 126 2 975 16 1701 2 861 2 862 2 130 4 629 2 1829 2 138 2 278 2 988 6 760 2 1232 2 1706 2 641 32 1470 2 148 2 1359 3 762 2 645 3 1237 2 289 24 993 12 995 2 293 2 156 2 1480 2 25 8 1241 2 1483 2 653 2 1485 2 526 2 1716 2 1614 3 527 2 1721 4 305 2 659 2 1010 4 41 2 409 2 1728 2 1012 32 1015 1 1130 2 1131 2 664 2 662 1 666 1 181 4 899 2 669 2 311 1 1022 2 1136 2 424 3 542 2 1028 2 908 3 1632 3 1506 1 431 2 1507 1 547 2 914 3 61 2 798 2 319 8 1148 2 1746 3 1397 2 321 2 1516 2 1517 2 1749 2 685 2 1881 2 1401 2 1042 24 65 2 1645 12 445 1 1755 2 1288 3 206 2 1889 2 1165 1 1647 1 563 2 213 16 1649 2 926 34 1169 2 814 2 346 2 1172 2 704 2 573 2 1654 4 1897 2 705 2 1176 2 932 2 1771 3 1179 2 1180 2 1903 32 1188 2 1064 2 824 16 1423 2 713 6 1067 1 354 4 1543 6 86 1 356 2 1545 1 718 2 93 1 1310 2 1430 2 470 1 1554 2 724 2 1312 2 1917 1 239 2 592 3 1435 2 97 2 1436 6 476 1 1080 2 1204 8 1569 2 106 1 1926 4 609 2 1088 5 1328 2 1447 2 482 16 965 2 121 2 
926 2 1923 2 
926 4 745 2 1322 2 
103 2 
968 4 1456 2 1 2 488 26 495 6 6 198 1460 12 978 4 1462 2 980 6 9 112 981 2 497 8 498 6 983 2 10 4 11 2 12 566 503 6 15 2 506 2 17 12 20 2 992 2 24 2 997 2 519 28 1000 8 28 10 1484 2 525 2 35 4 1004 22 1005 14 1006 182 1007 2 1008 14 38 4 39 6 1490 2 1491 2 1493 8 1013 4 1012 10 1018 2 45 4 538 2 47 4 1499 106 49 18 1024 2 50 4 1025 4 1505 10 1033 2 546 2 1508 20 545 2 59 132 549 2 60 22 550 6 1509 4 551 2 1513 4 1036 2 553 6 1518 8 1043 2 1520 12 557 10 558 2 1048 2 562 6 1050 6 566 84 568 4 1525 2 1053 2 73 2 1528 2 1056 160 75 2 575 28 1059 6 79 12 1533 20 579 2 82 6 83 8 1063 8 1539 6 85 6 1068 2 588 2 1544 24 1548 28 1555 6 1075 2 96 2 594 2 98 2 99 60 1559 12 1560 2 1078 2 1563 54 599 2 1567 4 1566 4 602 2 603 64 105 12 1085 6 604 4 1571 336 1573 2 1575 12 114 30 117 2 614 4 1579 6 621 6 623 2 1584 2 1585 4 625 10 1100 6 1105 2 1107 2 135 8 139 14 140 2 635 6 143 432 639 4 638 4 1109 2 1599 8 1600 2 642 6 147 2 644 4 646 2 1602 6 152 50 1114 6 153 6 1604 198 1605 4 649 2 162 20 1611 4 1116 6 1612 6 166 30 1119 2 656 2 1124 2 174 8 1127 2 1622 2 180 4 1129 2 665 198 1132 2 667 2 1624 8 1133 2 184 4 1134 4 671 2 1629 2 673 4 188 2 674 2 1142 2 676 2 190 2 193 2 1146 6 197 4 1637 4 1638 2 684 6 1641 2 201 6 1156 14 688 192 1157 2 1643 46 691 26 692 6 1162 82 1650 2 1651 112 1171 4 703 2 217 12 706 228 708 6 223 4 225 2 1185 140 1186 2 226 4 1189 244 229 6 1190 2 231 8 1664 2 233 2 1666 26 1195 4 1668 6 1196 2 1197 2 719 198 1198 6 235 2 721 92 728 48 1672 30 1674 2 244 2 1201 4 1203 6 248 2 1678 2 1681 26 1209 2 256 2 1211 2 734 60 1213 10 1216 118 1689 6 260 4 1220 2 1695 6 1223 2 264 26 1697 30 1225 4 1703 6 751 2 1226 2 753 2 277 2 274 6 756 2 1705 182 281 88 285 20 1236 2 761 86 764 46 765 2 286 52 1710 4 1711 2 774 2 776 46 777 198 778 2 1713 70 295 6 779 4 1714 2 1253 2 297 24 780 204 1254 4 298 18 300 4 301 2 1719 2 302 2 304 2 1726 30 1264 198 1729 4 1731 2 1267 2 786 14 309 2 787 2 310 4 1269 30 1270 2 789 2 1735 6 1273 8 312 6 1736 2 793 290 795 4 315 2 796 4 1743 2 797 4 1280 2 800 2 320 4 324 30 803 14 802 8 1283 16 1754 14 328 2 1756 2 329 4 331 4 332 8 805 2 1759 4 333 46 808 2 334 2 339 2 1763 4 341 30 1764 20 1292 4 812 4 811 6 343 22 1295 6 1296 32 1768 2 1299 2 817 6 1774 2 820 244 822 2 1777 2 351 2 1778 20 825 2 828 4 1779 6 1305 2 829 2 353 6 1785 6 355 2 836 224 838 2 362 2 839 6 1315 2 1314 2 1791 10 367 12 366 4 371 432 1798 4 1802 198 1805 2 1325 2 848 244 1808 60 1329 94 1330 2 1811 68 1816 6 1334 198 377 4 1817 2 853 60 856 2 857 4 858 6 859 20 380 132 1339 2 382 2 865 328 384 328 1344 26 1348 20 1836 28 388 2 390 6 872 2 1354 2 1839 2 1355 4 1356 4 1358 16 1357 2 393 2 395 2 882 8 401 2 403 6 402 6 1847 8 1848 6 892 6 893 2 894 386 1369 2 1853 26 1371 2 410 6 1372 204 413 6 898 30 414 2 1856 2 1379 4 416 2 1381 2 1861 2 420 2 1864 2 1385 4 423 46 902 2 422 2 903 4 905 4 1388 6 1387 4 427 6 1868 6 1391 22 428 4 430 2 911 2 912 6 433 376 913 2 435 8 1875 106 1876 2 437 30 1877 2 1878 8 441 2 915 16 1403 2 1404 6 442 2 1884 4 917 26 1408 26 918 2 446 98 447 2 1413 48 1411 112 1412 4 450 2 1415 2 926 10 452 2 453 6 928 192 455 2 1416 4 1419 12 936 6 1422 16 940 2 941 26 1908 6 1909 6 1425 6 1912 26 946 28 1426 2 1428 18 1915 4 1433 2 472 112 1435 2 1921 4 477 2 953 4 1438 2 954 4 1924 2 1925 4 959 2 479 12 960 64 961 2 1931 66 963 6 964 4 483 30 484 74 486 12 1452 2 1453 4 1454 2 966 2 
1117 2 1628 2 316 1 392 2 
1879 2 1628 2 
628 2 1628 2 1855 2 1547 2 303 2 373 2 1670 2 
1628 2 1145 2 373 2 
1383 2 1628 2 373 2 
469 2 1758 2 392 2 
1628 2 373 2 
469 2 1551 2 
1628 2 400 2 
697 2 469 2 392 2 
48 2 1546 2 392 2 
1824 2 273 2 392 2 
1141 2 763 2 392 2 
306 2 460 2 392 2 
469 2 1619 2 
1407 2 1628 2 
48 2 352 2 
1830 2 1824 2 
186 2 763 2 
460 2 962 2 
469 2 359 2 
460 2 1733 2 
763 2 826 2 
467 2 1824 2 
48 2 1293 2 
697 2 469 2 392 2 1538 2 
697 2 1496 2 469 2 392 2 1538 2 
1014 2 469 2 392 2 
469 2 392 2 843 2 
901 2 818 2 236 2 652 2 
385 2 1855 2 655 2 1547 2 
385 2 1855 2 655 2 1547 2 1670 2 555 2 
628 2 1628 2 1855 2 1547 2 373 2 1725 2 
1717 2 1648 2 
628 2 1855 2 1586 2 1547 2 
1096 2 763 2 
1708 2 460 2 
48 2 404 2 
1824 2 56 2 
460 2 1824 2 436 2 
460 2 1824 2 590 2 
634 2 460 2 1824 2 
460 2 1824 2 325 2 
1547 2 1855 2 211 2 601 6 189 2 510 2 886 6 1091 2 
469 2 462 2 
1762 2 165 2 891 6 124 2 64 4 1233 2 943 2 1865 2 19 2 626 2 1807 2 860 2 1160 2 1576 2 1214 4 1482 2 1017 2 1561 2 
392 2 1842 2 
762 2 
854 4 1337 2 266 2 126 2 862 2 130 2 278 2 758 2 988 2 641 6 1237 2 993 8 995 2 1480 2 512 2 771 2 1483 2 1615 4 659 2 1010 4 1012 26 412 2 664 2 1131 2 181 4 1734 2 1136 2 542 2 1028 2 1506 2 431 4 1507 4 547 2 1144 2 798 2 319 2 321 2 1749 2 1516 2 1401 6 1645 8 1755 2 1889 2 926 26 1054 2 814 2 1895 2 1172 2 573 2 1654 4 1897 2 705 2 1176 2 1179 2 1903 4 1183 2 1188 2 1064 2 824 6 1423 2 713 6 354 2 1543 4 93 2 1429 4 1789 2 473 2 1312 2 724 2 1435 2 1918 2 1436 2 1313 2 605 2 1926 2 1932 2 
854 4 1337 2 266 2 126 2 862 2 130 2 278 2 758 2 988 2 641 6 1237 2 993 8 995 2 1480 2 512 2 771 2 1483 2 1615 4 659 2 1010 4 1012 26 179 2 412 2 664 2 1131 2 181 4 1377 2 1734 2 1136 2 542 2 1028 2 1506 2 1507 1 431 4 547 2 1144 2 798 2 319 2 321 2 1749 2 1516 2 1401 6 1645 8 1755 2 1889 2 926 26 1054 2 814 2 1895 2 1172 2 704 2 573 2 1654 4 1897 2 705 2 1176 2 932 2 1179 2 1903 4 1183 2 1188 2 1064 2 824 6 1423 2 713 6 354 2 1543 6 93 2 1429 4 1312 2 724 2 1435 2 1918 2 1436 2 1792 2 1080 2 605 2 1926 2 1932 2 
1137 2 
46 2 1065 2 
967 2 1639 2 1818 2 854 2 1336 6 1222 4 1886 2 1591 4 1463 4 280 2 926 12 569 2 1891 2 144 2 571 2 1469 10 457 2 573 2 1841 4 1478 2 881 2 1181 2 1363 2 1904 4 1188 2 399 2 1064 2 713 4 834 2 1849 8 1720 2 37 2 360 2 1073 2 176 2 1012 6 1435 2 664 2 181 2 595 2 788 2 790 4 791 2 1440 6 541 2 957 2 1501 2 1630 2 107 4 192 8 1870 2 735 6 116 2 1393 4 1812 2 485 2 547 2 1934 2 1684 2 798 2 
967 2 854 2 1639 2 1818 2 1336 8 1222 4 268 4 1886 2 1591 4 1463 4 926 12 569 2 1891 2 144 2 571 2 1469 10 457 2 573 2 1841 4 290 2 1478 2 881 2 1181 2 1363 2 1904 4 1188 2 399 2 1064 2 713 4 834 2 1849 8 1720 2 37 2 360 2 176 2 1012 6 1435 2 1920 2 664 2 181 2 595 2 788 2 790 4 791 2 1440 8 541 2 957 2 1501 2 1630 2 107 4 611 2 192 8 1870 2 735 6 116 2 1393 4 1812 2 485 2 547 2 1934 2 1684 2 798 2 
1639 2 569 2 144 2 1336 2 957 2 834 2 457 2 1630 2 107 2 1841 4 360 2 735 2 1181 2 1393 2 1463 2 485 2 1684 2 1904 4 
967 2 1639 2 1818 2 854 2 1336 6 1222 4 1886 2 1591 4 1463 4 280 2 926 12 569 2 1891 2 144 2 1469 6 457 2 573 2 1841 4 1478 2 881 2 1181 2 1363 2 1904 4 1188 2 399 2 1064 2 713 4 834 2 1849 4 1720 2 37 2 360 2 1073 2 176 2 1012 6 1435 2 1920 2 664 2 181 2 595 2 788 2 790 4 791 2 1440 6 541 2 957 2 1501 2 1630 2 107 4 192 4 1870 2 735 4 116 2 1393 4 1812 2 485 2 547 2 1934 2 1684 2 798 2 
967 2 1639 2 1818 2 854 2 1336 4 1222 4 493 2 1886 2 1591 4 1463 4 280 2 926 12 569 2 1891 2 144 2 1469 6 457 2 573 2 1841 4 1478 2 881 2 1181 2 1363 2 1904 4 1188 2 399 2 1064 2 713 4 834 2 1849 4 1720 2 37 2 360 2 1073 2 176 2 1012 6 1435 2 664 2 181 2 595 2 788 2 790 4 791 2 1440 6 541 2 957 2 1501 2 1630 2 107 4 192 4 1870 2 735 6 116 2 1393 4 1812 2 485 2 547 2 1934 2 1684 2 798 2 
967 2 1639 2 1818 2 854 2 1336 6 1222 4 1886 2 1591 4 1463 4 280 2 926 12 569 2 1891 2 144 2 571 2 1469 6 457 2 573 2 1841 4 1478 2 881 2 1181 2 1363 2 1904 4 1188 2 399 2 1064 2 713 4 834 2 1849 4 1720 2 37 2 360 2 1073 2 176 2 1012 6 1435 2 664 2 181 2 595 2 788 2 790 4 791 2 1440 6 541 2 957 2 1501 2 1630 2 107 4 192 8 1870 2 735 6 116 2 1393 4 1812 2 485 2 547 2 1934 2 1684 2 798 2 
967 2 854 2 1639 2 1818 2 1336 6 1222 4 493 2 1886 2 1591 4 1463 4 280 2 926 12 569 2 1891 2 144 2 571 2 1469 10 457 2 573 2 1841 4 1478 2 881 2 1181 2 1363 2 1904 4 1188 2 399 2 1064 2 713 4 834 2 1849 8 1720 2 37 2 360 2 1073 2 176 2 1012 6 1435 2 664 2 181 2 595 2 788 2 790 4 791 2 1440 8 541 2 957 2 1501 2 1630 2 107 4 192 8 1870 2 735 8 116 2 1393 4 1812 2 485 2 547 2 1934 2 1684 2 798 2 
967 2 1639 2 1818 2 854 2 1336 6 1222 4 1886 2 1591 4 1463 4 280 2 926 12 569 2 1891 2 144 2 571 2 1469 10 457 2 573 2 1841 4 1478 2 881 2 1181 2 1363 2 1904 4 1188 2 399 2 1064 2 713 4 834 2 1849 8 1720 2 37 2 360 2 1073 2 176 2 1012 6 1435 2 664 2 181 2 595 2 788 2 790 4 791 2 1440 6 541 2 957 2 1501 2 1630 2 107 4 192 8 1870 2 735 6 116 2 1393 4 1812 2 485 2 547 2 1934 2 1684 2 798 2 
967 2 490 2 1694 2 1222 6 492 1 493 4 266 4 745 6 973 2 1463 4 278 2 280 2 988 2 1469 2 993 4 1478 4 995 2 1240 2 1480 2 771 2 516 2 1246 2 1483 2 1715 6 37 2 1720 2 1261 2 1722 2 1260 6 1010 4 1012 24 1266 2 1268 1 790 8 788 2 791 2 541 2 1501 2 542 2 547 2 798 2 319 2 321 2 1749 2 1041 2 1752 6 1047 7 569 2 1052 4 1765 7 1054 2 1766 1 573 2 574 1 819 2 1775 6 81 1 1064 2 824 6 583 6 1784 2 1543 6 354 2 834 2 360 2 840 6 595 2 1080 2 103 6 1318 2 107 4 116 2 1809 2 1812 4 854 4 1818 2 1095 4 1336 4 1337 2 126 2 862 12 130 2 863 2 630 2 1591 4 1592 2 867 2 1838 2 144 2 640 2 874 2 641 8 1841 4 1843 1 881 2 1363 2 399 2 163 2 1615 4 659 2 176 2 408 1 177 6 664 2 181 4 1375 2 1380 8 1863 6 1630 2 1631 2 1390 6 192 2 1869 2 429 2 1870 4 1872 10 1393 4 1639 2 1401 6 916 2 1886 2 1645 4 1889 2 922 6 926 46 1891 2 698 1 457 2 1895 2 215 6 1172 2 704 2 1896 2 1654 4 1897 2 705 2 1176 2 1655 6 935 6 1181 2 1903 2 1904 4 1188 2 1423 2 713 6 942 1 1435 2 1436 2 949 2 242 2 1923 6 1922 2 1440 12 957 2 1926 2 735 8 485 2 1684 2 1934 2 1451 2 
967 2 1818 2 854 4 1095 4 1694 2 490 2 1222 6 1336 8 745 6 266 4 1337 2 973 2 126 2 862 12 863 2 130 4 630 2 1592 2 1591 4 1463 4 867 2 278 2 280 2 988 2 1838 2 144 2 640 2 1469 2 874 2 641 8 1841 4 993 8 1240 2 995 2 1478 4 1480 2 881 2 771 2 1363 2 516 2 1246 2 399 2 1483 2 163 2 1715 6 1615 4 1720 2 37 2 1260 6 1722 2 1261 2 659 2 176 2 1010 4 177 6 1012 26 1266 2 664 2 181 4 1375 2 788 2 790 8 1380 8 791 2 1863 6 541 2 1501 2 1630 2 542 2 1631 2 1390 6 429 2 1869 2 192 6 1870 4 1872 10 431 2 1393 4 547 2 798 2 319 2 1639 2 321 2 1749 2 1401 6 1041 2 916 2 443 2 1752 6 1886 2 1645 8 1889 2 922 6 926 48 569 2 1891 2 1052 4 571 4 1054 2 215 6 1895 2 457 2 1172 2 1896 2 704 2 573 2 1897 2 1654 4 1655 6 1176 2 705 2 935 6 819 2 1775 6 1181 2 1903 2 1904 4 1188 2 583 6 824 6 1064 2 1423 2 713 6 1784 2 354 4 1543 6 834 2 360 2 840 6 1435 2 1436 2 949 2 242 2 595 2 1080 2 1922 2 1923 6 103 6 1440 12 1318 2 957 2 107 4 1926 4 1446 2 735 8 1809 2 116 2 1812 4 485 2 1934 2 1684 2 1451 2 
967 2 1818 2 854 4 1095 4 1694 2 490 2 1222 6 1336 8 745 6 266 4 1337 2 973 2 126 2 862 12 863 2 130 4 630 2 1592 2 1591 4 1463 4 867 2 278 2 280 2 988 2 1838 2 144 2 640 2 874 2 1469 6 641 8 1841 4 993 8 1240 2 995 2 1478 4 1480 2 881 2 771 2 1363 2 516 2 1246 2 399 2 1483 2 163 2 1715 6 1615 4 1849 4 1720 2 37 2 1260 6 1722 2 1261 2 659 2 176 2 1010 4 177 6 1012 26 1266 2 664 2 181 4 1375 2 788 2 790 8 1380 8 791 2 1863 6 541 2 1501 2 1630 2 542 2 1631 2 1390 6 429 2 1869 2 192 6 1870 4 1872 10 431 2 1393 4 547 2 798 2 319 2 1639 2 321 2 1749 2 1401 6 1041 2 916 2 443 2 1752 6 1886 2 1645 8 1889 2 922 6 926 48 569 2 1891 2 1052 4 571 4 1054 2 215 6 1895 2 457 2 1172 2 1896 2 704 2 573 2 1897 2 1654 4 1655 6 1176 2 705 2 935 6 819 2 1775 6 1181 2 1903 2 1904 4 1188 2 583 6 824 6 1064 2 1423 2 713 6 1784 2 354 4 1543 6 834 2 360 2 840 6 1435 2 1436 2 949 2 242 2 595 2 1080 2 1922 2 1923 6 103 6 1440 12 1318 2 957 2 107 4 1926 4 1446 2 735 8 1809 2 116 2 1812 4 485 2 1934 2 1684 2 1451 2 
967 2 969 2 490 2 1694 2 1222 6 493 2 266 4 745 12 973 2 1463 4 984 2 278 2 280 2 988 4 1469 6 993 10 1240 2 1478 4 995 2 1480 2 771 4 516 2 1246 2 1483 2 1715 6 1720 2 37 2 1261 2 1722 2 1260 12 1010 4 1012 24 1266 2 790 8 788 2 791 2 541 2 1501 2 542 2 547 2 798 2 319 4 321 2 1749 2 1041 2 1751 2 1752 12 68 6 569 2 571 4 1052 4 1054 2 74 6 573 2 819 2 1775 6 1064 2 824 8 583 6 1784 2 1543 6 354 4 834 2 360 2 840 6 595 2 1079 2 1080 2 103 12 1318 2 107 4 374 2 116 2 1809 2 1812 4 854 4 1818 2 1095 4 1336 10 1337 2 126 2 862 10 130 4 630 2 1591 4 1592 2 867 2 1838 2 144 2 640 2 874 2 641 12 1841 4 881 2 1363 2 399 2 161 6 163 2 169 6 1615 6 1849 4 659 2 176 2 177 6 664 2 181 4 1375 2 1380 8 1863 6 1630 2 1631 2 1390 6 192 6 1869 2 429 2 1870 4 1872 8 431 2 1393 4 1639 2 199 2 1401 8 916 2 443 2 1886 2 1645 10 1889 2 922 6 1167 6 926 52 1891 2 1895 2 457 2 456 2 215 6 1172 2 704 2 1896 2 1417 6 1654 4 1897 2 705 2 1176 2 1655 12 935 6 1181 2 1903 4 1904 4 711 6 1188 2 1423 2 713 6 1435 2 1436 4 1673 6 1920 2 949 2 242 2 1923 12 1922 2 1440 16 957 2 1926 4 1928 2 1446 2 735 10 1448 6 485 2 1684 2 1934 2 1451 2 
967 2 1818 2 1639 2 1222 2 1336 6 834 2 1849 4 1886 2 176 2 1591 2 595 2 280 2 790 2 791 2 926 4 1440 4 571 2 541 2 144 2 1469 4 957 2 1501 2 457 2 107 4 1841 2 192 6 1478 2 881 2 735 6 1363 2 1181 2 116 2 1393 4 1684 2 1904 2 
967 2 854 4 1818 2 1222 2 1336 6 1337 2 266 2 126 2 862 4 863 2 1591 2 278 2 280 2 141 3 988 3 144 2 873 2 1469 2 641 8 1841 2 762 2 1478 2 881 2 1480 2 1363 2 1483 2 1485 2 29 2 167 2 1615 4 659 2 1010 4 176 2 1012 24 664 2 181 4 790 2 1378 2 791 2 541 2 1501 2 542 2 192 6 1872 2 1393 4 547 2 798 2 61 2 1639 2 321 2 1749 2 1881 2 1401 6 1886 2 1889 2 926 28 1891 2 571 2 1054 2 1895 2 457 2 1172 2 704 2 573 2 1897 2 1654 4 705 2 1176 2 1181 2 1903 3 1904 2 1188 2 1064 2 824 6 1423 2 713 6 1543 6 834 2 1435 2 1436 3 595 2 1080 2 1440 4 957 2 107 4 109 2 735 6 116 2 1684 2 
116 2 595 2 1512 2 
116 2 595 2 1512 2 
854 4 1095 2 1222 4 1336 12 1820 4 493 4 1337 2 266 6 126 2 1589 4 862 4 130 4 1591 2 1463 4 1345 2 278 2 1229 2 758 4 869 2 1469 6 641 2 1841 2 993 4 995 4 1478 4 1480 2 1361 2 881 2 1363 2 399 2 1483 2 889 2 1616 2 1849 4 37 2 1123 2 659 2 1010 4 1012 16 664 2 181 4 788 2 790 4 542 2 58 2 1869 2 192 6 1870 2 1032 2 1872 2 1507 2 1393 4 547 2 798 2 1512 2 1151 2 1639 2 321 2 1401 2 1753 2 1645 4 920 2 1889 2 926 24 569 2 1052 2 571 4 1054 2 1895 2 1172 2 704 2 573 2 1654 4 1897 2 1300 2 705 2 1176 2 819 2 1775 2 1776 2 1903 2 1904 2 1188 2 1064 2 824 2 1423 2 713 6 1780 2 354 4 1543 6 834 4 360 2 1435 2 1920 4 595 6 596 2 1080 2 1440 16 957 2 107 4 1926 4 735 12 116 4 1812 4 1333 2 1451 2 
1922 2 926 4 869 2 1784 2 1095 2 1352 2 1487 2 58 2 862 2 1286 2 1872 2 1775 2 1012 2 920 2 485 2 798 2 1065 2 
854 4 1221 2 1222 4 1336 12 1820 4 493 4 1337 2 266 6 126 2 1589 4 862 2 129 2 130 4 1591 2 1463 4 278 2 1229 2 758 4 869 2 1469 6 641 2 1841 2 993 4 995 4 1478 4 1480 2 1361 2 881 2 1363 2 399 2 1483 2 1616 2 1849 4 1720 2 37 2 659 2 1010 4 1012 16 664 2 181 4 788 2 790 4 542 2 58 2 1869 2 192 6 1870 4 1032 2 1393 4 547 2 798 2 1512 2 1151 2 1639 2 321 2 1401 2 1753 2 1406 2 1887 2 1645 4 920 2 1889 2 926 24 569 2 1052 2 571 4 1054 2 1895 2 1172 2 704 2 573 2 1654 4 1897 2 1300 2 705 2 1176 2 819 2 1775 2 1776 4 1903 4 1904 2 1188 2 1064 2 824 2 1423 2 713 6 1780 2 354 4 1543 6 834 4 360 2 1435 2 1920 4 595 6 1080 2 1440 16 957 2 107 4 1926 4 110 2 735 12 116 4 1812 4 1333 2 1451 2 
854 4 1095 2 1222 4 1336 12 1820 4 493 4 1337 2 266 6 126 2 1589 4 862 4 130 4 1704 2 1591 2 1463 4 278 2 1229 2 758 4 869 2 1469 6 641 2 1841 2 993 4 995 4 1478 4 1480 2 1361 2 881 2 1363 2 157 2 399 2 1483 2 1616 2 1849 4 1720 2 37 2 659 2 1010 4 1012 16 664 2 181 4 788 2 790 4 542 2 58 2 679 2 1869 2 192 6 1870 4 1032 2 1872 2 1507 1 1393 4 547 2 798 2 1512 2 1151 2 1639 2 321 2 1401 2 1753 2 1645 4 920 2 1889 2 926 24 569 2 1052 2 571 4 1054 2 1895 2 1172 2 704 2 573 2 1654 4 1897 2 1300 2 705 2 1176 2 819 2 1775 2 1776 2 1903 2 1904 2 1188 2 1064 2 824 2 1423 2 713 6 1780 2 354 4 1543 6 834 4 360 2 1435 2 1920 4 595 6 1080 2 1675 2 1440 16 957 2 107 4 1926 4 733 2 735 12 116 4 1812 4 1333 2 1451 2 
969 2 0 2 2 4 4 3 971 38 5 4 973 2 975 14 976 156 977 2 7 2 979 8 984 2 985 2 986 2 13 2 988 16 14 3 16 2 989 2 18 2 21 2 990 2 993 178 991 80 994 2 995 18 25 14 26 12 27 20 999 2 1001 24 30 2 29 2 31 36 1002 2 34 4 33 22 36 2 40 10 1010 402 41 2 1012 966 1015 1 1016 6 44 2 1019 2 1020 2 1021 2 1023 6 53 2 51 2 52 3 54 2 55 32 1027 2 1026 2 1029 2 1030 2 1031 2 1034 2 62 2 63 2 1035 2 1042 61 1044 78 65 2 66 102 1045 4 67 4 1046 2 1049 2 71 4 72 6 1051 2 1054 2 1055 2 1057 2 1058 38 77 3 1061 38 1062 3 84 3 1064 2 1066 38 1067 1 87 2 1069 4 1070 2 88 2 1071 2 92 2 93 3 1072 38 1074 2 1076 2 95 2 1077 2 97 2 101 3 1079 2 1080 314 102 2 1081 2 1082 18 1083 4 1084 2 104 2 106 13 109 2 111 2 112 78 1089 2 113 2 115 38 118 2 119 2 121 2 122 104 1092 2 123 2 1093 3 1094 2 1097 34 1098 2 1099 2 1101 2 125 2 126 8 127 2 1106 12 132 3 133 4 134 2 136 2 137 66 138 2 141 2 142 3 145 18 1110 2 146 2 1111 2 149 80 148 2 1112 10 1113 2 154 18 155 16 156 2 158 2 159 4 164 8 168 4 1118 3 1120 2 1122 2 171 12 1126 2 173 40 1128 3 178 4 181 8 182 2 183 8 185 2 1135 2 187 2 1138 2 1140 2 1139 2 1143 6 191 4 194 2 195 2 1144 2 196 10 198 6 1148 2 1149 9 1150 2 1153 2 1155 4 199 2 202 4 1158 2 1161 38 205 4 206 2 207 2 1163 2 1164 2 209 24 210 2 1166 2 213 100 214 2 1168 4 1172 2 216 2 1173 4 1176 2 1175 78 1177 120 219 2 221 2 222 2 1178 2 1180 2 1182 2 1184 2 1183 86 224 2 227 60 1188 2 1187 2 228 12 1191 3 1193 2 234 2 237 16 238 78 239 2 240 38 241 2 1199 2 1200 112 245 2 1202 2 1204 14 247 2 249 158 1206 2 250 78 251 2 257 3 258 2 1212 20 259 2 1215 2 1218 10 1219 2 262 112 266 2 265 3 1224 3 270 2 269 38 272 12 1227 3 275 2 276 6 278 8 1228 2 1231 2 282 2 1232 14 1234 38 1235 3 289 15 288 38 1238 2 1239 2 292 3 293 2 1241 14 1244 1 1245 10 1246 16 1247 158 1248 78 1251 2 1249 22 1250 80 1252 22 299 2 1255 38 1256 36 1257 2 1261 2 1258 2 305 2 1262 2 1263 2 307 4 308 106 1265 2 1266 8 1271 2 311 1 1274 14 1275 2 1276 2 1277 4 313 2 314 24 317 2 1278 6 318 3 319 84 1281 80 321 82 322 2 323 2 1287 2 1288 2 330 2 1289 4 1290 2 335 2 336 8 337 6 340 2 1291 2 342 78 344 2 347 2 346 2 345 2 1297 2 1298 16 348 2 1302 1 349 78 350 1 1304 2 1306 2 1308 80 356 2 357 4 358 24 1310 2 1311 2 361 2 363 10 364 2 365 2 368 2 1316 8 369 2 1319 2 1318 4 372 10 1326 12 374 4 1327 78 375 2 376 2 379 4 1337 2 1338 2 1341 2 381 2 1342 76 383 2 1343 2 1347 2 1350 8 1351 234 387 2 1359 2 394 2 1360 2 1362 2 396 2 1364 2 1365 2 397 2 398 2 1366 24 1367 3 1368 76 406 3 407 2 1370 2 1373 6 1374 2 411 2 412 2 1375 8 1376 2 415 2 1378 2 417 18 419 2 1382 2 1384 2 421 2 424 2 425 2 1389 2 1392 2 432 8 1395 4 1396 156 1397 2 438 2 1398 38 439 4 1400 11 440 2 1402 2 1401 18 1405 2 448 2 449 60 1409 2 451 2 456 2 458 80 1418 2 1420 124 459 38 1421 80 1423 2 1424 6 463 78 465 2 468 2 1431 2 1430 2 1432 2 471 10 1434 2 1435 2 474 78 1436 46 1437 34 1439 2 1441 38 1443 2 480 3 1445 2 481 20 482 52 1447 2 1450 4 1455 12 487 2 490 2 1457 2 491 16 1458 2 1459 3 496 3 499 2 1464 3 502 2 1466 2 505 80 504 2 507 2 1468 2 508 2 509 2 1471 2 1472 2 1476 4 1477 6 511 2 1480 2 1479 26 512 2 514 4 515 2 517 22 518 2 1483 2 520 2 524 1 526 2 528 60 527 2 1486 80 1488 18 531 2 1495 3 1497 4 533 2 534 2 535 2 536 1 537 2 1498 2 539 2 540 3 1500 2 542 4 1503 3 543 2 1506 2 544 78 1507 3 547 2 548 2 1510 2 1511 2 1514 78 552 2 1515 2 1517 2 1519 20 554 80 1521 8 556 80 560 2 561 2 563 2 564 3 565 2 567 2 1524 2 1526 2 1527 2 572 9 1529 2 573 2 1530 78 576 2 1531 1 1532 4 581 10 582 2 1535 2 1537 2 584 10 1540 558 585 2 1543 1112 1542 2 587 2 1545 1 589 4 1549 2 1550 80 591 2 1552 2 1554 2 1553 2 592 2 1557 2 593 80 1558 4 598 66 1564 2 1565 3 1568 2 600 2 1569 2 1570 2 605 2 608 2 607 3 609 2 610 2 1572 2 613 2 1574 38 1577 2 616 2 1578 4 617 2 618 2 1580 3 620 2 1581 3 622 4 1582 2 1583 3 624 2 1590 2 1592 2 631 2 632 2 1593 2 1594 38 636 48 637 2 1596 2 1597 2 641 126 1598 24 643 3 1603 2 648 2 650 2 651 10 1608 6 653 2 654 2 1614 2 1613 4 1615 12 1617 2 658 2 659 2 1620 12 1621 8 661 8 662 1 664 2 663 3 666 15 1623 2 668 3 1625 7 670 2 675 78 1631 22 680 2 1632 2 1633 2 681 3 1634 2 1636 10 682 3 1640 76 1642 2 685 2 687 2 686 2 690 2 1644 16 1645 183 693 78 694 2 1649 2 695 2 696 2 1652 2 1653 2 699 10 704 324 1654 480 705 2 1656 2 1660 2 1657 14 1661 2 709 2 710 2 1662 2 713 10 1665 2 715 6 1669 80 717 4 718 2 1671 2 722 6 723 22 725 2 727 3 726 10 730 6 1677 6 731 2 732 2 1682 2 1683 20 737 2 739 2 1685 2 1686 2 741 2 740 2 1688 2 1690 22 1693 3 1691 4 1692 2 742 2 1696 2 1698 2 746 2 747 6 1700 38 749 2 748 3 750 2 752 166 754 2 755 4 757 2 759 2 760 2 1706 16 1707 2 767 60 766 40 770 2 771 46 775 2 1712 2 1718 2 781 2 1721 32 1724 2 1727 2 1728 2 785 2 784 2 1732 156 1734 4 794 2 1739 2 1740 2 1741 2 1742 2 798 2 799 2 1746 2 801 4 1747 2 1748 2 1749 2 1750 38 804 2 1760 2 1761 3 809 20 810 2 813 34 1769 234 1770 1 815 78 1773 2 821 2 823 2 824 32 827 2 831 2 1781 2 830 4 832 2 1782 2 1783 2 835 2 1787 24 837 8 841 2 1793 2 1797 2 1796 2 846 2 1801 2 1800 2 1804 2 849 2 1809 2 1813 2 1814 2 852 80 854 8 855 2 1819 22 1821 6 1822 14 1823 2 861 2 862 10 1825 170 1827 2 1828 2 1831 2 866 6 867 8 1833 36 1832 4 1834 54 1837 4 870 2 873 2 871 2 1840 1 875 2 876 3 877 2 878 2 879 2 880 2 1844 2 883 78 884 6 885 158 887 2 1845 2 888 2 891 6 1846 38 1851 1 1852 10 896 2 897 2 1854 83 1859 20 1858 2 900 3 1866 2 906 2 1867 8 907 82 908 3 910 95 1872 2 1873 38 1874 4 914 3 916 2 1883 2 1885 14 1888 2 919 4 1889 84 921 2 926 1174 925 38 923 4 924 2 1890 2 927 2 1893 1 1897 2 931 2 934 2 1900 6 1899 2 1902 2 937 6 1903 110 1905 2 939 2 1907 2 1910 20 1911 2 944 2 1913 2 947 26 1916 2 1918 2 948 38 952 2 951 40 955 3 956 2 958 24 1927 2 1928 2 1929 80 1932 2 1935 2 
944 2 1615 2 1749 2 1401 2 1852 4 1104 2 363 2 1916 2 1012 2 1436 2 663 2 988 2 926 2 53 2 641 2 1055 2 1057 2 1603 2 1392 2 771 6 1903 2 651 2 824 2 1251 2 
944 2 1615 2 1749 2 1401 2 1852 4 1104 2 363 2 1916 2 1012 2 1436 2 663 2 988 2 926 2 53 2 641 2 1055 2 1057 2 1603 2 1392 2 771 6 1903 2 651 2 824 2 1251 2 
944 2 1615 2 1749 2 1401 2 1852 4 1104 2 363 2 1916 2 1012 2 1436 2 663 2 988 2 926 2 53 2 641 2 1055 2 1057 2 1603 2 1392 2 771 6 1903 2 651 2 824 2 1251 2 
801 2 714 2 379 2 944 2 1749 2 1039 2 715 2 1914 2 1519 4 172 2 171 2 66 6 1620 2 1373 2 1012 4 1436 3 272 2 1857 4 809 4 337 2 213 2 1272 2 926 10 145 4 1738 2 930 3 1598 3 641 2 314 5 482 2 1242 2 1606 2 937 2 26 2 1212 4 1903 3 27 4 884 4 1663 2 1001 3 
801 2 714 2 379 2 944 2 1749 2 1039 2 715 2 1914 2 1519 4 172 2 171 2 1431 2 747 2 66 6 1620 2 471 2 1373 2 1012 4 1436 2 272 2 1857 4 809 4 337 2 213 2 1272 2 926 10 145 4 1738 2 930 2 1598 2 641 2 314 4 482 2 1242 2 1606 2 937 2 26 2 1212 4 1903 2 27 4 884 4 1663 2 1001 2 
801 2 714 2 379 2 944 2 1749 2 1039 2 715 2 1914 2 1519 4 172 2 171 2 1431 2 747 2 66 6 1620 2 471 2 1373 2 1012 4 1436 2 272 2 1857 4 809 4 337 2 213 2 1272 2 926 10 145 4 1738 2 930 2 1598 2 641 2 314 4 482 2 1242 2 1606 2 937 2 26 2 1212 4 1903 2 27 4 884 4 1663 2 1001 2 
801 2 714 2 379 2 944 2 1749 2 1039 2 715 2 1914 2 1519 4 172 2 171 2 1431 2 747 2 66 6 1620 2 471 2 1373 2 1012 4 1436 2 272 2 1857 4 809 4 337 2 213 2 1272 2 926 10 145 4 1738 2 930 2 1598 2 641 2 314 4 482 2 1242 2 1606 2 937 2 26 2 1212 4 1903 2 27 4 884 4 1663 2 1001 2 
801 2 714 2 379 2 944 2 1749 2 1039 2 715 2 1914 2 1519 4 172 2 171 2 1431 4 747 4 66 6 1620 2 471 4 1373 2 1012 4 1436 2 272 2 1857 4 809 4 337 2 213 2 1272 2 926 10 145 4 1738 2 930 2 1598 2 641 2 314 4 482 2 1242 2 1606 2 937 2 26 2 1212 4 1903 2 27 4 884 4 1663 2 1001 2 
1362 2 1457 2 1523 2 1821 2 406 2 1174 2 
742 2 1291 2 1515 2 1901 2 1578 2 1183 2 406 2 
232 2 3 1 970 1 1850 2 1260 2 1009 2 657 2 1012 8 1790 2 208 2 1835 1 1230 2 926 10 454 1 1467 2 1772 2 707 2 1658 2 23 1 1933 2 78 2 998 2 773 2 294 2 1188 2 712 2 
1395 2 801 2 34 2 715 6 171 6 267 2 1125 2 747 2 1431 2 1522 2 1826 2 1620 6 722 4 1671 2 471 4 1012 6 1373 6 919 2 337 6 926 6 1468 2 145 12 508 2 314 16 432 2 26 6 937 6 884 4 198 4 999 2 
926 1 1794 2 391 6 170 4 1519 2 426 2 22 2 530 2 203 2 720 1 1012 1 996 2 782 2 1303 2 27 2 71 2 809 2 230 2 
1794 2 391 6 170 4 1519 2 426 4 22 2 530 2 203 2 996 2 782 2 1303 4 27 2 71 4 809 2 230 2 
926 1 1794 8 391 10 170 4 1519 2 426 8 22 6 530 2 203 2 720 1 1012 1 996 2 782 2 1303 8 27 2 71 8 809 2 230 2 
391 2 170 2 1519 2 426 2 530 2 203 2 996 2 782 2 1303 2 27 2 71 2 809 2 230 2 
128 4 976 36 1102 24 1340 8 1825 34 1103 4 496 2 752 50 866 4 755 4 1227 2 505 6 386 2 1351 84 387 8 1234 4 149 6 288 4 766 2 991 6 647 4 1477 4 1481 6 883 6 885 16 1245 8 1248 10 1247 16 1250 6 160 2 1610 2 890 4 33 15 1846 4 1118 2 1255 4 1486 6 529 2 405 1 1259 2 1723 2 1010 88 1370 8 1012 134 1854 8 308 42 43 10 1732 17 1860 24 1862 8 900 6 1023 2 1737 2 675 10 1386 4 542 8 910 22 544 6 1507 4 1745 2 682 2 1149 7 1281 6 1396 18 1154 90 1514 6 321 14 1400 11 554 6 1044 6 1161 4 327 12 556 6 1285 4 1645 28 693 24 1757 26 1889 14 926 150 342 10 1769 92 815 6 704 58 816 10 1654 112 1530 10 1175 6 933 4 220 24 577 2 1420 12 349 6 1534 2 459 4 938 8 1184 8 1421 6 1191 2 461 4 1540 124 463 24 1194 2 586 2 1308 24 1543 248 1786 2 717 4 1427 4 1550 6 1072 4 238 4 474 6 240 4 1080 58 844 90 1441 4 955 4 249 16 1929 6 112 6 1210 18 1326 7 1327 10 115 4 1449 10 852 6 122 42 619 26 
378 2 1396 2 1335 2 1399 2 263 2 1037 2 321 2 1038 2 494 2 1699 2 689 2 976 2 128 2 1102 2 1159 2 556 2 8 2 1645 37 1702 2 1889 2 987 2 926 46 505 2 386 2 72 4 387 2 342 2 929 2 1894 2 149 2 704 3 816 2 458 6 1654 20 1530 2 1474 4 218 2 220 2 578 2 1709 2 938 2 1184 2 1536 2 885 4 1248 2 1247 4 1250 2 1540 6 1194 2 464 2 586 2 833 4 1543 45 1786 2 89 2 90 2 1259 2 94 2 1723 2 1550 2 1010 20 1492 2 1370 2 1012 44 895 2 1919 2 42 4 1854 6 43 2 1732 2 1562 2 1080 3 1860 2 1676 2 900 3 1627 2 955 1 249 4 675 2 1806 2 253 2 542 2 1323 2 254 2 1327 2 1507 2 1449 2 1394 2 1147 2 1217 2 1815 2 852 2 
976 6 1825 30 752 8 755 4 866 2 386 2 1351 24 505 4 387 2 1234 4 149 4 288 4 991 4 513 4 883 4 1245 4 885 10 1247 10 1248 4 1250 4 160 2 33 8 1846 4 1118 2 1255 4 1486 4 1723 2 660 2 1010 36 1492 10 1370 2 1012 70 532 16 308 16 1854 6 1732 10 900 2 904 16 675 4 542 2 544 4 682 2 1149 3 1281 4 1396 10 1880 2 1514 4 1399 10 321 6 554 4 1044 4 1161 4 556 4 1645 14 1889 6 338 4 926 78 342 4 700 32 1769 24 815 4 704 30 1654 44 1530 6 1175 4 577 2 578 2 1420 14 349 4 1898 4 459 4 1184 2 1540 24 1194 2 586 2 1308 8 1543 104 1786 2 717 4 91 4 1550 4 1072 4 1556 4 474 4 1919 10 240 4 475 4 100 2 1080 28 370 2 1441 4 249 10 1679 8 253 2 1086 8 1929 4 112 4 1327 4 1090 8 736 4 115 4 850 2 615 8 1815 2 1218 2 852 4 122 8 
1396 2 321 2 1400 1 976 2 1825 6 556 4 1645 14 496 2 1889 2 866 2 755 2 1227 2 926 28 386 2 505 4 387 2 342 2 1894 2 149 4 704 12 1654 14 1530 2 1477 2 1534 2 1184 2 885 6 1245 4 1247 6 1248 2 1250 4 1191 1 1540 8 1194 2 586 2 33 5 1543 40 1786 2 717 2 1259 2 1723 2 1550 4 1010 14 1370 2 238 2 1012 26 1854 4 1732 2 1080 12 900 2 249 6 1737 2 675 2 542 2 1326 1 1327 2 910 9 1507 2 1815 2 852 4 
851 2 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 
261 1 1205 1 1115 1 982 1 842 1 1601 1 

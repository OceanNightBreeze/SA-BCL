#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 262 (249,326) (249,326) 1135 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1109 216 791 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.Quant:gte(II)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3_19()Z
daikon.Quant:lexGT([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_133()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:getConfidence()D
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.ProglangType:isString()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.VarInfo:isDerived()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_2_17(I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_60()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List; | ASSIGN | 9147 | = null
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfo:has_typeof()Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3_4()Z
daikon.ModBitTracker:split(I)I
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:ne(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:lt(II)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:memberOf(J[J)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isPointer()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3_28()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ProglangType:isFloat()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3R_162()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3_5()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.JavaParser:jj_3R_101()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_109()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 5926 | return null
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:num_samples()I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3_3()Z
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_74()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.ModBitTracker:num_sets()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3R_52()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_29()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([D)D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(II)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_69()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLT([I[I)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Debug:logOn()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_104()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptName:isCombinedExitPoint()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:setEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3R_103()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.Quant:subsetOf([D[F)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_107()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant:justified()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_123()Z
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_114()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_136()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3_13()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3_14()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.ProglangType:baseIsString()Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_70()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_12()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ModBitTracker:num_vars()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Ppt:Ppt()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:size()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_110()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_89()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_164()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:lte(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:gt(II)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.PptSlice0:arity()I
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_115()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_2_35(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:hashCode()I
daikon.Quant:pairwiseLT([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_161()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:min([I)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_117()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.Node:Node()V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3_35()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:hasTypeOf()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3_15()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:eq(JJ)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_102()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1297 2 820 2 1378 2 589 4 58 2 1540 2 726 2 444 2 1044 2 
1552 2 1192 2 28 6 835 2 219 6 1236 2 620 2 721 2 1541 2 484 6 419 2 
1100 2 303 4 585 2 726 2 134 2 1355 6 829 2 1287 2 1598 6 1300 4 1540 2 976 6 1252 6 
613 2 1423 16 1554 10 115 8 1474 6 1668 2 32 10 1396 16 726 6 1124 8 573 26 1046 16 36 8 318 2 39 2 1540 6 1003 2 1166 2 532 4 584 4 1007 4 104 12 1077 8 1385 6 106 2 1196 28 1683 10 1080 10 592 10 1551 4 
153 4 1304 6 
1562 2 
461 2 1498 2 520 4 59 2 726 4 1087 2 530 2 1291 2 1511 2 17 2 1051 2 474 2 1297 2 1417 2 477 2 421 2 861 2 76 2 800 2 588 2 1303 2 864 2 866 2 752 2 1368 2 1313 4 374 2 1158 2 316 2 1216 2 39 2 1540 4 1622 4 1026 2 501 2 711 2 329 2 713 2 1680 2 563 2 936 2 223 2 1685 2 1497 4 
150 4 1470 6 1423 32 1554 15 113 2 115 19 1474 4 32 15 1396 32 726 4 379 2 573 47 1046 32 922 8 1324 6 1540 4 708 4 94 2 447 3 162 6 104 22 1077 6 1385 4 195 6 1683 15 822 4 106 2 1196 52 1015 4 1080 15 81 6 338 2 482 5 592 6 1525 4 888 2 697 4 1551 2 540 4 
1291 2 901 2 1410 2 
867 2 1151 2 238 10 1371 2 1533 2 563 2 422 22 1578 2 824 2 952 2 1218 2 1350 2 252 2 543 2 
1423 2 1554 2 754 2 115 2 32 2 1396 2 1046 2 573 4 1509 2 66 2 411 2 413 2 104 2 884 2 1439 2 1385 2 1583 2 1683 2 1196 6 1080 2 592 4 1551 2 230 2 
1470 6 1423 8 1554 4 1007 2 32 4 104 4 1396 8 1046 8 573 12 1683 4 1196 16 876 2 1015 4 1080 4 81 6 1639 2 697 4 
517 4 1313 4 31 2 915 14 966 62 784 2 435 2 492 2 293 4 870 4 437 2 1646 2 548 4 1621 2 1604 2 706 2 579 2 443 10 1291 8 279 2 1628 2 1410 2 103 2 331 2 935 2 1075 4 333 4 716 4 1417 2 984 10 821 4 75 2 901 6 1274 2 1440 4 173 4 1685 4 750 2 1572 4 666 2 
1366 2 37 2 211 2 850 2 1651 2 1548 2 1562 2 714 2 904 2 1338 2 
340 2 232 2 3 2 780 2 1392 2 783 2 1394 2 346 2 1181 2 1184 2 349 4 351 6 119 3 789 2 1501 6 1187 2 121 24 676 2 1504 1 576 2 356 8 679 2 681 2 1403 3 1607 1 581 1 16 2 256 2 682 2 1292 6 360 1 794 2 1612 2 361 1 1092 2 475 2 138 12 1012 16 1521 1 1524 2 1615 1 20 2 1309 2 804 2 1422 3 30 3 1617 2 1618 1 918 2 491 2 270 3 1020 2 380 2 38 4 1320 4 1428 1 923 2 496 3 602 2 705 2 274 2 1024 3 1540 34 709 2 1546 2 1627 2 1629 2 505 2 712 2 164 2 1115 2 1027 2 283 12 1336 4 1029 1 509 3 607 2 1638 2 719 2 1445 3 518 2 1448 1 827 2 617 2 1121 2 1342 4 1233 1 726 32 1345 2 947 2 1555 2 832 2 1131 2 842 2 846 4 1047 2 412 2 851 2 953 2 189 6 70 2 1138 2 191 5 855 16 415 2 416 1 1566 2 958 2 74 3 960 32 536 3 1247 3 196 1 1248 2 1361 16 746 2 1055 16 963 1 749 8 542 2 1663 2 1471 4 1154 4 432 32 1665 2 545 2 1673 2 320 2 973 2 556 2 444 2 1070 2 655 2 328 2 448 1 658 2 105 2 772 2 334 2 565 1 1272 2 660 2 1173 24 107 8 1082 2 1586 2 457 2 1276 2 1587 2 
955 2 1540 2 
1540 4 1045 2 1645 2 
670 2 
889 2 890 2 891 8 465 2 1286 2 9 4 466 2 470 2 897 22 473 2 18 2 476 168 1296 2 900 2 19 10 479 2 480 4 1306 2 23 8 907 2 908 2 485 12 26 6 27 10 914 152 1312 2 916 2 919 2 1316 2 1319 24 920 74 1321 186 495 8 1323 18 1322 2 40 2 497 4 499 2 43 2 930 4 1329 14 503 6 44 2 1331 6 507 2 1334 2 510 2 511 8 49 2 50 4 941 4 940 2 942 480 512 4 51 286 943 18 944 186 515 2 1339 6 55 24 946 2 56 4 1341 14 521 6 519 2 1343 4 1347 24 950 10 949 2 1349 2 951 4 63 376 525 6 67 6 529 2 528 2 1353 2 533 2 72 20 1354 42 1356 2 1360 38 79 4 538 4 1362 2 1364 2 83 4 541 2 1369 2 84 168 85 2 967 2 546 54 969 2 1372 2 87 2 547 196 971 2 974 4 553 2 1375 2 555 2 95 38 96 2 558 6 978 22 981 2 561 6 1384 2 1387 2 1389 152 111 2 571 4 995 2 117 8 1397 4 572 2 575 6 1398 2 122 6 1400 2 998 2 1000 22 1401 4 130 4 132 2 583 4 1005 22 1006 4 1413 2 1008 2 136 2 587 2 1419 24 140 4 1014 6 1420 2 144 40 146 186 145 2 593 36 1017 4 148 2 594 298 595 4 597 168 152 2 1426 6 599 48 598 6 1022 6 1430 6 155 168 1023 56 156 24 159 6 161 4 1435 40 1436 2 167 4 1028 14 605 6 1030 10 606 16 172 2 608 2 609 2 1441 2 175 6 174 4 1442 58 1034 24 1444 2 610 22 1446 2 1036 16 1038 6 1039 2 618 2 1452 10 183 18 1456 2 1457 6 623 2 624 24 626 2 186 6 628 6 1049 2 632 2 633 108 1464 2 197 12 1469 2 1056 2 637 4 1058 2 1060 4 643 2 1064 184 1476 2 207 20 1477 4 1478 2 209 2 210 10 1480 2 1482 186 212 4 213 2 215 6 1069 2 1068 6 650 114 1071 2 221 2 1072 4 1489 6 1074 48 1079 4 222 2 1490 18 1081 4 664 62 1084 4 1499 2 241 6 672 2 1089 4 674 2 242 2 1505 2 1503 298 1506 24 1507 4 1508 6 245 2 244 2 246 2 249 2 250 138 251 2 253 2 1513 6 1091 24 1516 2 686 6 1096 2 688 6 689 2 690 4 1520 94 1522 24 1523 4 693 8 695 2 260 6 262 2 261 4 1526 4 1099 2 1104 2 1105 2 266 4 1531 2 1530 24 1532 2 702 168 269 2 1110 14 1538 2 1539 24 274 2 1540 8 1542 2 1111 4 1544 10 1545 4 1112 2 277 2 1547 14 710 6 281 4 715 96 287 8 288 6 1117 22 723 376 1119 2 289 2 1120 2 291 6 292 6 726 8 727 4 729 2 730 2 1128 2 1557 2 1132 2 735 2 1558 26 1135 2 297 14 298 78 1136 2 300 2 1559 298 1137 50 1560 12 736 2 1561 2 737 2 1139 50 738 6 1565 12 739 2 740 2 308 2 742 2 745 10 1146 2 1570 12 1571 2 314 96 1149 6 1573 4 755 2 756 4 757 4 1157 2 1577 4 1162 6 1163 2 322 114 764 62 325 6 326 2 766 2 327 2 330 2 1581 6 1172 4 335 2 775 4 1174 10 1588 2 1589 4 1175 6 1592 24 779 2 343 2 1177 6 781 4 1178 162 1594 48 1596 2 1595 2 347 168 1179 2 1180 6 1183 4 1182 4 787 2 788 2 790 6 354 8 355 22 1190 330 1606 6 793 12 1608 168 1194 6 795 6 363 4 364 168 799 2 1614 6 367 2 368 184 1200 24 801 12 1203 4 370 12 371 4 1205 6 805 18 375 4 1209 2 378 2 1213 6 1217 4 1623 2 382 2 1625 6 383 46 1626 2 1221 4 1630 2 1631 6 1224 2 386 10 817 2 1225 96 388 46 1635 14 1636 56 819 82 389 86 390 6 1228 2 1640 42 393 82 394 40 826 2 395 72 1643 6 1644 2 839 6 399 4 402 6 840 10 841 2 1649 96 843 4 844 2 404 2 1239 18 847 6 849 2 408 4 853 4 1242 20 1243 40 1652 92 857 332 858 4 1656 6 424 4 426 2 1249 2 427 4 862 24 1661 4 1255 10 431 6 1669 12 1670 6 436 2 871 2 872 2 1259 14 874 4 440 2 875 2 1672 2 877 2 878 2 879 12 442 2 1677 2 1678 2 1679 6 452 2 453 2 1267 168 883 6 886 2 454 4 1270 14 1273 22 887 4 459 2 460 4 1686 4 1278 10 
181 2 1231 2 761 2 1667 1 
761 2 1202 2 
1291 2 47 2 280 2 143 2 532 2 761 2 177 2 
280 2 838 2 761 2 
648 2 280 2 761 2 
286 2 181 2 158 2 
280 2 761 2 
1290 2 286 2 
761 2 176 2 
286 2 181 2 464 2 
25 2 181 2 1472 2 
1390 2 181 2 1016 2 
285 2 181 2 1386 2 
181 2 321 2 276 2 
286 2 771 2 
64 2 761 2 
25 2 1519 2 
1390 2 1271 2 
1386 2 1295 2 
321 2 358 2 
1641 2 286 2 
321 2 259 2 
1386 2 387 2 
1097 2 1390 2 
25 2 834 2 
286 2 181 2 464 2 488 2 
286 2 181 2 464 2 488 2 934 2 
286 2 181 2 1301 2 
286 2 181 2 1235 2 
384 2 231 2 1129 2 903 2 
1291 2 1040 2 177 2 97 2 
1291 2 47 2 1040 2 177 2 97 2 1148 2 
1291 2 280 2 532 2 761 2 177 2 668 2 
800 2 1164 2 
1291 2 1408 2 532 2 177 2 
1386 2 1593 2 
979 2 321 2 
25 2 1393 2 
1390 2 381 2 
777 2 1390 2 321 2 
1390 2 321 2 604 2 
1390 2 321 2 41 2 
1390 2 321 2 927 2 
203 2 1453 2 925 2 1291 2 859 6 1358 2 537 6 177 2 
286 2 1584 2 
642 2 531 2 234 2 237 2 1122 2 267 2 1575 2 348 2 1574 2 1108 4 284 4 1245 2 717 2 272 2 422 6 1258 2 962 2 1510 2 
181 2 965 2 
334 2 
340 2 776 2 232 2 780 2 1392 2 786 4 1181 2 349 2 1284 2 351 4 789 2 11 2 1501 2 1504 2 1602 2 681 2 1607 2 256 2 682 2 1292 6 360 4 1612 2 1092 4 1012 6 138 8 1524 2 1199 2 486 2 804 2 1619 2 1019 2 1020 2 38 4 274 2 705 2 1540 26 709 2 1546 2 1629 6 505 2 283 8 1336 4 1116 2 170 2 1638 2 1035 2 518 2 1121 2 617 2 1342 2 726 26 1555 2 832 2 846 4 189 2 73 2 960 4 1246 2 749 2 869 2 1471 4 1154 2 432 6 1665 2 1673 2 556 2 444 2 765 2 655 2 328 2 658 2 1582 2 985 4 457 2 1586 2 1276 2 
340 2 232 2 780 2 1392 2 786 4 1181 2 349 2 351 6 789 2 11 2 1501 2 1504 2 1602 2 681 2 1607 2 256 2 682 2 1292 6 360 2 1612 2 1092 4 1012 6 138 8 1524 2 1197 2 1199 2 804 2 1619 2 1019 2 1020 2 38 4 274 2 705 2 1540 26 709 2 1546 2 1629 6 505 2 1333 2 283 8 1336 4 1116 2 170 2 1638 2 1035 2 518 2 1121 2 617 2 1342 2 726 26 947 2 1555 2 832 2 846 4 953 2 189 2 73 2 960 4 1246 2 746 2 749 2 869 2 1471 4 1154 2 432 6 1665 2 1160 2 1673 2 556 2 444 2 765 2 655 2 328 2 658 2 1582 2 985 4 1586 2 457 2 1276 2 
118 2 
1671 2 151 2 
1447 2 993 4 1392 2 236 2 1344 2 828 2 726 6 1185 2 1127 4 835 4 1189 2 1236 4 846 2 580 2 1292 4 1512 4 1610 2 305 2 959 8 307 2 1145 2 1467 8 80 2 484 6 313 4 640 4 28 6 430 2 1665 2 434 2 376 2 1208 2 438 2 600 2 38 2 1620 2 89 10 972 2 552 2 1673 2 274 2 1541 2 1540 12 42 2 977 2 556 2 93 2 557 2 654 2 219 6 816 2 560 2 1549 4 166 2 46 2 1492 2 457 2 721 2 1586 2 229 2 
1447 2 1552 2 993 4 1392 2 236 2 1344 2 726 6 828 2 1185 2 1127 4 835 4 1189 2 1236 4 846 2 580 2 1292 4 1512 4 1610 2 305 2 959 8 307 2 1145 2 1467 8 80 2 484 6 313 4 640 4 28 8 430 2 1665 2 434 2 376 2 1208 2 38 2 600 2 1620 2 89 10 972 2 552 2 1673 2 274 2 273 2 1541 2 1540 12 42 2 763 2 977 2 556 2 93 2 557 2 654 2 219 8 560 2 1549 4 166 2 46 2 1492 2 457 2 721 2 1586 2 108 4 229 2 
313 2 580 2 993 4 219 2 236 2 1549 4 1185 2 46 2 600 2 835 2 1620 2 1189 2 1236 2 80 2 42 2 484 2 977 2 557 2 
1447 2 1552 2 993 4 1392 2 236 2 1344 2 828 2 726 6 1185 2 1127 4 835 4 1189 2 1236 4 846 2 580 2 1292 4 1512 4 1610 2 305 2 959 4 307 2 1145 2 1467 4 80 2 484 4 313 4 640 4 28 6 430 2 1665 2 434 2 376 2 1208 2 438 2 600 2 38 2 1620 2 89 6 972 2 552 2 1673 2 274 2 1540 12 42 2 977 2 556 2 93 2 557 2 654 2 219 6 816 2 560 2 1549 4 166 2 46 2 1492 2 457 2 721 2 1586 2 229 2 
1447 2 993 4 1392 2 236 2 1344 2 828 2 726 6 1185 2 1127 4 835 4 1189 2 1236 4 846 2 1192 2 580 2 1292 4 1512 4 1610 2 305 2 959 4 307 2 1145 2 1467 4 80 2 484 6 313 4 640 4 28 6 430 2 1665 2 434 2 376 2 1208 2 438 2 600 2 38 2 1620 2 89 6 972 2 552 2 1673 2 274 2 1540 12 42 2 977 2 556 2 93 2 557 2 654 2 219 4 816 2 560 2 1549 4 166 2 46 2 1492 2 457 2 721 2 1586 2 229 2 
1447 2 993 4 1392 2 236 2 1344 2 828 2 726 6 1185 2 1127 4 835 4 1189 2 1236 4 846 2 580 2 1292 4 1512 4 1610 2 305 2 959 8 307 2 1145 2 1467 4 80 2 484 6 313 4 640 4 28 6 430 2 1665 2 434 2 376 2 1208 2 438 2 600 2 38 2 1620 2 89 6 972 2 552 2 1673 2 274 2 1541 2 1540 12 42 2 977 2 556 2 93 2 557 2 654 2 219 6 816 2 560 2 1549 4 166 2 46 2 1492 2 457 2 721 2 1586 2 229 2 
1447 2 993 4 1392 2 236 2 1344 2 828 2 726 6 1185 2 1127 4 835 4 1189 2 1236 4 846 2 1192 2 580 2 1292 4 1512 4 1610 2 305 2 959 8 307 2 1145 2 1467 8 80 2 484 8 313 4 640 4 28 8 430 2 1665 2 434 2 376 2 1208 2 438 2 38 2 600 2 1620 2 89 10 972 2 552 2 1673 2 274 2 1541 2 1540 12 42 2 977 2 556 2 93 2 557 2 654 2 219 6 816 2 560 2 1549 4 166 2 46 2 1492 2 457 2 721 2 1586 2 229 2 
1447 2 993 4 1392 2 236 2 1344 2 828 2 726 6 1185 2 1127 4 835 4 1189 2 1236 4 846 2 580 2 1292 4 1512 4 1610 2 305 2 959 8 307 2 1145 2 1467 8 80 2 484 6 313 4 640 4 28 6 430 2 1665 2 434 2 376 2 1208 2 438 2 600 2 38 2 1620 2 89 10 972 2 552 2 1673 2 274 2 1541 2 1540 12 42 2 977 2 556 2 93 2 557 2 654 2 219 6 816 2 560 2 1549 4 166 2 46 2 1492 2 457 2 721 2 1586 2 229 2 
667 2 236 2 8 2 670 6 1501 2 681 2 1292 6 682 2 256 2 1512 8 685 2 1094 2 478 2 1524 2 22 2 484 8 24 6 28 12 1529 2 1106 1 490 2 1317 2 38 4 498 2 274 2 1540 46 42 2 709 2 1546 2 506 2 1549 4 283 4 1336 4 46 2 721 4 53 6 518 2 1121 2 1342 2 1344 2 726 24 1555 2 1127 6 1346 2 953 2 955 6 305 4 1142 4 535 2 306 2 959 2 307 2 960 2 1145 2 1569 6 78 1 746 2 80 2 749 2 313 4 1152 1 1154 2 1373 7 88 6 550 10 552 2 972 2 89 2 554 2 556 2 93 2 977 2 557 2 765 2 328 2 560 2 1383 6 983 2 1586 2 340 2 993 4 780 2 1392 2 786 4 349 2 1185 2 351 6 574 6 789 12 1189 2 126 6 1602 2 1192 4 580 2 1610 4 138 4 1012 6 1013 4 366 6 590 2 804 2 1208 2 376 2 807 2 1619 2 600 2 813 7 1620 2 1219 2 1629 6 160 6 166 2 1035 4 611 1 1447 2 828 2 1645 6 831 2 835 4 1236 4 622 2 401 2 846 4 406 1 188 8 1650 2 852 2 189 2 418 6 634 1 1658 6 1660 2 636 2 1054 2 640 4 1253 1 1471 4 430 2 202 1 432 8 1665 2 204 2 434 2 1475 2 438 2 1673 2 444 2 1264 2 654 2 655 2 656 6 219 4 1488 2 1269 2 1492 2 662 1 457 2 1276 2 229 2 1279 6 
340 2 667 2 780 2 993 4 1392 2 236 2 786 4 8 2 349 4 670 6 1185 2 574 6 351 6 1501 2 789 12 126 6 1189 2 1602 2 681 2 580 2 256 2 682 2 1292 6 1512 8 1610 4 685 2 1092 2 1094 2 478 2 1012 6 138 8 1013 4 1524 2 590 2 366 6 22 2 484 8 24 6 28 12 804 2 1529 2 376 2 1208 2 490 2 807 2 1619 2 1317 2 600 2 38 4 1620 2 498 2 274 2 1219 2 1540 48 1541 4 42 2 709 2 1546 2 160 6 1629 6 506 2 1549 4 283 8 166 2 1336 4 46 2 721 4 52 2 53 6 1035 4 1447 2 518 2 1121 2 1342 4 1344 2 828 2 726 26 1645 6 1555 2 1346 2 831 2 1127 6 835 4 1236 4 622 2 401 2 846 4 188 8 852 2 1650 2 953 2 189 2 955 6 305 4 1143 2 418 6 1142 4 306 2 535 2 307 2 959 6 960 2 1658 6 1569 6 1145 2 636 2 1660 2 746 2 1054 2 80 2 749 2 313 4 640 4 1471 4 1154 4 430 2 432 8 204 2 1665 2 434 2 1475 2 438 2 88 6 550 10 89 2 972 2 552 2 1673 2 554 2 977 2 444 2 93 2 556 2 557 2 654 2 1264 2 765 2 656 6 655 2 328 2 219 8 560 2 1488 2 1383 6 983 2 1269 2 1492 2 1586 2 457 2 1276 2 1279 6 229 2 
340 2 667 2 993 4 780 2 1392 2 236 2 786 4 8 2 349 4 670 6 1185 2 574 6 351 6 1501 2 789 12 126 6 1189 2 1602 2 681 2 580 2 256 2 682 2 1292 6 1512 8 1610 4 685 2 1092 2 1094 2 478 2 1012 6 138 8 1013 4 1524 2 590 2 366 6 22 2 484 8 24 6 28 12 804 2 1529 2 376 2 1208 2 490 2 807 2 1619 2 1317 2 600 2 38 4 1620 2 498 2 274 2 1219 2 1540 48 1541 4 42 2 709 2 1546 2 160 6 1629 6 506 2 1549 4 283 8 166 2 1336 4 46 2 721 4 52 2 53 6 1035 4 1447 2 518 2 1121 2 1342 4 1344 2 828 2 726 26 1645 6 1555 2 1346 2 831 2 1127 6 835 4 1236 4 622 2 401 2 846 4 188 8 852 2 1650 2 953 2 189 2 955 6 305 4 1143 2 418 6 1142 4 306 2 535 2 307 2 959 6 960 2 1658 6 1569 6 1145 2 1467 4 636 2 1660 2 746 2 1054 2 80 2 749 2 313 4 640 4 1471 4 1154 4 430 2 432 8 204 2 1665 2 434 2 1475 2 438 2 88 6 550 10 972 2 89 6 552 2 1673 2 554 2 977 2 444 2 93 2 556 2 557 2 654 2 1264 2 765 2 656 6 655 2 328 2 219 8 560 2 1488 2 1383 6 983 2 1269 2 1492 2 457 2 1586 2 1276 2 1279 6 229 2 
667 2 236 2 8 2 670 12 894 6 1501 4 12 2 680 2 681 2 1292 6 682 2 256 2 1293 2 1512 8 685 2 1514 6 1092 2 1094 2 478 2 1524 2 484 10 24 12 28 16 1529 2 490 2 1317 2 38 4 498 2 274 2 1541 4 1540 52 42 2 709 2 1546 2 506 2 1549 4 283 10 1336 4 46 2 938 2 721 4 52 2 53 6 1552 2 516 6 518 2 1121 2 1342 4 1344 2 726 24 1555 2 1127 6 1346 2 65 2 734 6 953 2 955 12 305 4 1143 2 1142 4 535 2 306 2 959 6 307 2 960 4 1145 2 1569 6 746 2 80 2 749 4 313 4 1154 4 88 6 550 8 552 2 89 6 972 2 554 2 93 2 556 2 977 2 557 2 765 2 328 2 101 6 560 2 1383 12 983 2 1586 2 340 2 1591 2 780 2 993 4 1392 2 786 6 349 4 1185 2 351 6 574 6 789 10 1189 2 126 12 1602 2 1192 2 580 2 1610 4 1195 6 1611 2 138 10 1012 8 1013 4 590 2 366 6 804 2 1208 2 376 2 807 2 1619 4 600 2 1620 2 1219 2 1629 8 160 6 166 2 1035 4 1447 2 828 2 1645 12 831 2 835 4 836 2 1236 4 622 2 401 2 846 4 188 8 1650 2 852 2 189 4 418 6 1053 6 1658 6 1467 4 1660 2 636 2 1054 2 640 4 1471 4 1062 6 430 2 432 12 1063 6 1665 2 204 2 434 2 1475 2 438 2 1673 2 444 2 654 2 1264 2 655 2 656 6 219 10 1488 2 1269 2 1492 2 457 2 1276 2 229 2 1279 6 
640 2 1447 2 28 4 993 2 430 2 236 2 1208 2 828 2 1185 2 438 2 1127 2 600 2 835 4 1620 2 972 2 89 4 1236 4 1540 4 1541 2 42 2 93 2 557 2 1512 2 219 6 560 2 1549 2 307 2 959 6 1492 2 1145 2 1467 4 721 2 80 2 484 6 229 2 
340 2 993 2 780 2 1392 2 236 2 786 4 1185 2 351 6 789 4 1501 3 1602 2 681 2 359 2 1292 6 256 2 682 2 1512 2 1012 6 1524 2 22 2 484 6 28 4 804 2 1208 2 491 2 1212 2 38 4 600 2 1620 2 274 2 1541 2 1540 28 42 2 709 2 1546 2 1629 6 1549 2 1336 4 721 2 1035 2 1447 2 518 2 1121 2 828 2 726 24 1127 2 835 4 1236 4 846 4 953 2 189 3 959 6 307 2 741 2 960 3 1145 2 746 2 80 2 638 2 640 2 1471 4 430 2 432 8 1665 2 438 2 550 2 972 2 552 2 89 2 1673 2 93 2 556 2 444 2 557 2 765 2 653 2 655 2 328 2 1486 3 219 6 560 2 772 2 334 2 1492 2 1586 2 1082 2 457 2 1276 2 229 2 
10 2 430 2 93 2 
10 2 430 2 93 2 
340 2 780 2 993 2 1392 2 114 2 236 4 349 4 1185 2 351 6 10 2 789 4 1602 2 681 2 1192 4 256 2 682 2 1292 6 1512 4 1610 4 360 2 138 4 1012 2 1013 2 1524 2 902 2 1199 4 484 12 264 2 28 16 804 2 1311 2 373 2 376 2 807 2 1317 2 38 4 1536 4 814 2 274 2 1540 24 1541 4 1546 2 1629 2 1549 2 283 4 1336 4 46 2 1033 2 721 4 1337 2 1035 6 1552 4 518 2 1121 2 1342 4 1344 2 726 16 828 2 1555 4 831 2 1127 4 835 4 1236 4 846 4 953 2 627 2 190 2 305 2 1142 2 1144 2 959 6 960 2 1467 4 746 2 428 2 80 2 313 4 640 2 1471 4 1154 4 430 4 753 2 432 2 1665 2 205 2 1666 2 88 2 550 2 89 6 972 2 1673 2 977 2 93 6 556 2 444 2 1262 2 654 2 765 2 655 2 328 2 219 12 1586 2 457 2 1276 2 110 4 567 2 
852 2 580 2 151 2 881 2 1392 2 205 2 726 2 1454 2 789 2 88 2 1013 2 550 2 814 2 1198 2 1219 2 1540 4 567 2 
340 2 780 2 993 2 1392 2 114 2 236 4 349 4 1185 2 351 6 10 2 789 2 1602 2 681 2 1192 4 256 2 682 2 1292 6 1512 4 1610 4 683 2 684 2 138 4 1012 2 1524 2 1199 4 484 12 28 16 804 2 1311 2 373 2 376 2 807 2 1317 2 1427 2 38 4 1536 4 601 2 814 2 274 2 1540 24 1541 4 1546 2 1629 2 1549 2 283 4 1336 4 46 2 1033 2 721 4 1035 6 1552 4 518 2 1121 2 1342 4 1344 2 726 16 828 2 1555 4 831 2 1127 4 835 4 1236 4 846 4 953 2 190 4 305 4 1142 2 1144 2 959 6 960 4 1467 4 746 2 428 2 80 2 313 4 640 2 1471 4 1154 4 430 4 753 2 432 2 1665 2 434 2 205 2 1666 2 88 2 89 6 972 2 1673 2 977 2 93 6 556 2 444 2 1262 2 654 2 765 2 218 2 655 2 328 2 219 12 1586 2 457 2 1276 2 110 4 567 2 
340 2 780 2 993 2 1392 2 114 2 236 4 349 4 1185 2 351 6 10 2 789 4 1602 2 681 2 254 2 1192 4 256 2 682 2 1292 6 1512 4 1610 4 360 1 138 4 1012 2 1013 2 1524 2 1199 4 484 12 28 16 804 2 1311 2 373 2 376 2 807 2 1317 2 38 4 1536 4 814 2 274 2 1540 24 1541 4 1546 2 1629 2 1549 2 283 4 1336 4 46 2 1033 2 721 4 1035 6 1552 4 1553 2 518 2 1121 2 1342 4 1344 2 726 16 828 2 948 2 1555 4 831 2 1127 4 835 4 1236 4 846 4 953 2 190 2 305 4 1142 2 1144 2 959 6 960 2 1467 4 746 2 428 2 80 2 313 4 640 2 1150 2 1471 4 1154 4 430 4 753 2 432 2 1665 2 1370 2 434 2 205 2 1666 2 88 2 550 2 89 6 972 2 1673 2 977 2 93 6 556 2 444 2 1262 2 654 2 765 2 655 2 328 2 219 12 1586 2 457 2 1276 2 110 4 567 2 
462 32 0 4 3 2 2 64 5 2 4 2 1280 2 463 2 1281 64 1282 4 6 2 892 2 893 2 11 2 895 4 12 2 13 4 896 4 469 2 1288 2 1289 2 15 46 472 2 1293 4 1292 8 898 1 1294 32 475 2 899 32 478 2 1302 2 20 2 905 2 482 6 21 24 1305 2 906 14 483 20 912 3 911 2 913 2 1310 32 29 4 30 2 1314 18 489 2 917 5 918 2 490 6 1315 2 32 6 33 2 1318 1 35 20 34 50 493 18 921 2 38 6 922 8 1320 14 926 2 1325 2 1328 2 928 32 1327 2 500 2 502 2 45 6 931 2 932 1 504 2 933 2 1330 18 506 2 1332 32 508 14 1335 2 1336 168 937 2 509 2 938 2 939 4 48 42 513 2 514 2 54 64 518 2 1340 2 1345 2 523 24 61 2 524 4 62 14 1348 2 65 2 526 2 953 130 68 2 69 2 70 2 71 2 956 12 73 2 958 2 74 3 1357 2 960 66 536 2 1359 2 1361 30 961 4 81 6 1363 64 964 2 539 2 963 6 540 4 542 2 544 2 1367 18 86 2 968 2 970 32 549 16 551 32 90 2 973 2 975 2 91 2 1374 2 92 102 556 2 94 2 1377 2 99 1 1379 32 100 2 1380 2 559 4 980 1 1382 84 104 10 105 2 986 2 106 2 107 14 566 50 1388 3 989 4 990 14 991 2 568 18 569 2 112 18 1392 2 570 2 113 4 994 3 115 6 1396 12 573 18 119 2 121 20 123 4 1399 2 999 2 996 18 997 2 576 2 1001 2 127 2 128 18 129 2 1404 32 131 4 1405 2 1406 2 1407 2 582 2 1409 62 133 8 1411 3 1412 14 586 2 1414 2 135 62 1009 2 1416 8 1011 20 1010 57 137 16 1012 26 138 105 139 2 141 2 142 32 591 2 1421 14 147 32 149 2 1422 2 1423 12 1424 1 1018 32 1425 1 596 2 1019 2 1021 2 1428 1 1429 2 602 2 603 2 154 33 1431 2 1432 32 1024 2 1433 32 1025 20 157 2 1434 3 163 16 1027 2 169 2 1437 18 1029 1 170 2 171 28 607 2 1032 1 1031 2 1440 2 173 2 1443 2 1035 2 1445 2 612 2 178 2 1037 2 179 2 180 2 615 46 616 2 1450 4 1451 2 1042 2 619 6 1043 3 184 2 1455 2 1046 12 621 10 622 4 1460 32 187 1 1047 2 189 46 1050 2 192 2 193 2 631 2 1463 2 1052 4 198 76 635 2 1055 52 1468 2 1057 2 201 3 1059 3 1471 200 644 2 645 2 646 32 204 2 1474 4 1475 6 208 2 1479 10 1066 32 647 2 1067 8 1481 18 214 16 1483 2 216 2 651 2 652 4 653 2 1070 2 655 36 1486 2 1487 2 657 2 1488 2 1075 2 1077 6 659 2 224 14 661 2 660 2 1494 2 1080 6 663 2 225 12 1495 52 1083 2 1496 32 226 4 665 2 227 32 1085 8 667 2 233 22 235 4 1086 32 239 6 240 24 1500 2 669 20 1088 1 671 3 1501 16 675 6 1502 18 1504 3 243 32 247 4 248 48 678 1 679 2 680 2 681 2 1090 4 255 84 682 2 256 4 257 2 1515 2 1093 2 1095 2 1094 2 687 32 1521 1 691 18 692 3 1524 2 694 2 696 2 697 4 1098 4 698 10 1527 2 1101 2 265 1 1102 2 1528 32 1107 2 703 18 268 18 270 3 271 10 704 64 1535 2 1109 2 1537 18 274 2 707 4 1540 527 275 4 709 2 1113 2 1546 2 1114 20 712 5 1115 2 282 2 283 100 1116 2 718 32 719 2 720 10 722 2 1118 2 1554 6 1121 2 726 420 1123 20 1125 4 1555 10 728 2 731 2 1556 4 733 32 1131 2 1133 1 1134 2 295 24 296 2 299 2 301 2 1138 5 302 4 1563 18 1141 2 1566 7 1567 2 306 2 1568 2 741 2 744 2 746 130 747 3 311 3 748 10 749 56 751 1 312 20 1153 4 1155 3 315 2 758 2 317 1 1159 2 1576 14 1161 4 319 2 759 48 1579 14 762 2 323 2 1165 2 324 2 1580 1 767 2 328 8 769 2 1167 10 768 14 1169 2 770 2 1170 2 332 2 1171 72 1582 50 336 2 1585 2 337 2 1173 15 774 14 773 2 1586 2 339 2 1587 2 1590 18 340 2 341 6 778 16 342 3 345 2 780 2 1176 2 782 2 346 2 785 14 786 12 1184 2 350 16 351 460 789 4 352 2 1188 6 1187 2 1600 2 1601 3 791 2 353 2 1603 2 1602 2 356 14 1605 2 357 2 792 2 1191 32 1607 2 359 2 1609 2 360 1 1611 2 794 2 361 4 796 2 797 2 798 2 1613 14 365 4 1196 24 1201 4 1616 14 1204 32 369 2 802 1 803 64 804 36 1206 2 1617 2 1619 46 1210 48 808 4 1211 2 377 2 1212 2 809 2 811 2 1215 3 1214 2 380 2 1220 2 385 2 1629 14 1222 4 1223 2 1632 48 1633 18 1226 16 1634 2 818 4 1227 2 1637 32 821 2 823 2 825 2 392 3 1642 4 1230 18 827 2 396 4 1233 1 397 28 1234 2 1647 32 398 2 836 2 837 232 842 2 1237 2 1238 4 401 2 1648 2 403 1 845 13 405 2 846 6 407 2 409 32 1240 2 410 4 412 2 1241 2 854 2 855 14 1244 2 415 2 1653 3 856 4 417 32 1654 2 1655 8 420 2 860 4 1246 2 1657 10 1247 2 423 2 425 2 1659 2 1250 6 1660 2 1251 3 1662 18 1254 2 868 12 869 2 1663 2 432 82 1665 2 870 2 1256 3 873 2 1257 32 439 2 1673 2 1261 14 1675 2 444 8 445 2 446 2 1676 2 448 1 880 7 449 4 450 2 451 18 882 4 1681 14 1682 2 1268 2 885 2 455 2 1683 6 457 2 1276 2 458 2 1277 4 
1527 2 432 2 786 2 1619 6 726 2 809 2 1501 2 921 2 1535 2 621 2 1540 2 709 2 1113 2 299 2 189 2 1405 2 1629 2 1414 2 1518 2 1012 2 960 2 747 2 748 2 698 4 
1527 2 432 2 786 2 1619 6 726 2 809 2 1501 2 921 2 1535 2 621 2 1540 2 709 2 1113 2 299 2 189 2 1405 2 1629 2 1414 2 1518 2 1012 2 960 2 747 2 748 2 698 4 
1527 2 432 2 786 2 1619 6 726 2 809 2 1501 2 921 2 1535 2 621 2 1540 2 709 2 1113 2 299 2 189 2 1405 2 1629 2 1414 2 1518 2 1012 2 960 2 747 2 748 2 698 4 
1308 2 1527 2 868 2 0 2 1423 2 1554 2 432 2 1474 2 1395 2 32 2 240 3 726 4 1396 2 1123 4 60 3 35 4 573 4 1046 2 523 3 125 2 1540 10 625 2 1025 4 92 6 709 2 1265 4 189 3 564 2 1077 4 1076 2 1462 2 1491 2 960 3 1683 2 1196 5 1080 2 1361 2 1055 2 909 2 312 4 
0 2 1554 2 115 2 1395 2 1396 2 726 4 240 2 60 2 1123 4 1046 2 573 4 523 2 125 2 625 2 189 2 1462 2 960 2 1196 4 1361 2 1055 2 909 2 312 4 1308 2 1527 2 868 2 1423 2 432 2 1474 2 32 2 35 4 1540 10 92 6 1025 4 709 2 1265 4 104 2 1076 2 1077 4 564 2 1491 2 106 2 1683 2 1080 2 
0 2 1554 2 115 2 1395 2 1396 2 726 4 240 2 60 2 1123 4 1046 2 573 4 523 2 125 2 625 2 189 2 1462 2 960 2 1196 4 1361 2 1055 2 909 2 312 4 1308 2 1527 2 868 2 1423 2 432 2 1474 2 32 2 35 4 1540 10 92 6 1025 4 709 2 1265 4 104 2 1076 2 1077 4 564 2 1491 2 106 2 1683 2 1080 2 
0 2 1554 2 115 2 1395 2 1396 2 726 4 240 2 60 2 1123 4 1046 2 573 4 523 2 125 2 625 2 189 2 1462 2 960 2 1196 4 1361 2 1055 2 909 2 312 4 1308 2 1527 2 868 2 1423 2 432 2 1474 2 32 2 35 4 1540 10 92 6 1025 4 709 2 1265 4 104 2 1076 2 1077 4 564 2 1491 2 106 2 1683 2 1080 2 
0 2 1554 2 115 4 1395 2 1396 2 726 4 240 2 60 2 1123 4 1046 2 573 4 523 2 125 2 625 2 189 2 1462 2 960 2 1196 4 1361 2 1055 2 909 2 312 4 1308 2 1527 2 868 2 1423 2 432 2 1474 2 32 2 35 4 1540 10 92 6 1025 4 709 2 1265 4 104 4 1076 2 1077 4 564 2 1491 2 106 4 1683 2 1080 2 
1352 2 732 2 896 2 1391 2 1140 2 1624 2 
811 2 1582 2 732 2 806 2 414 2 562 2 1147 2 
1156 1 1473 1 57 2 726 8 1186 2 830 2 126 2 468 2 1604 1 815 2 1540 10 527 2 649 2 278 2 279 1 629 2 220 1 1564 2 534 2 1299 2 1684 2 457 2 309 2 863 2 1275 2 1229 2 
752 2 1423 6 1554 6 1449 2 115 2 1474 2 32 6 726 6 1396 6 573 12 1046 6 1159 2 922 2 1540 6 578 2 1244 2 474 2 104 6 1077 4 1031 2 1196 16 365 2 1683 6 106 2 1080 6 81 4 482 4 697 2 369 2 540 2 
102 2 165 2 194 2 1438 2 1123 2 1597 2 1418 2 124 2 939 2 1260 2 109 2 1025 2 312 2 
102 2 116 2 726 1 165 2 194 2 1438 2 1123 2 1597 6 1418 2 124 2 939 2 924 1 1260 2 1540 1 109 4 1025 2 724 2 312 2 
102 2 116 2 165 2 194 4 1438 2 1123 2 1597 6 1418 2 124 2 939 4 1260 4 109 4 1025 2 724 2 312 2 
102 2 116 8 726 1 165 2 194 8 1438 2 1123 2 1597 10 1418 2 124 2 939 8 924 1 1260 8 1540 1 109 4 1025 2 724 6 312 2 
341 11 462 24 2 18 570 8 1281 17 785 4 1086 6 1283 2 1285 2 351 248 1599 4 120 24 1188 8 243 10 996 2 467 18 1002 8 1402 4 577 26 1191 6 471 10 255 92 1404 6 1193 2 256 8 360 4 1004 26 1294 6 1613 4 1010 22 899 6 687 6 138 28 142 42 1616 4 1305 4 1204 6 910 4 147 6 1307 2 912 2 1310 6 803 16 372 90 804 14 1528 6 1207 8 1424 2 1018 10 1425 2 812 2 704 16 1429 4 154 8 1432 6 1540 150 1326 2 1433 6 928 6 929 2 932 2 1332 10 1550 4 508 4 1336 88 1637 6 718 24 48 12 945 2 54 16 614 8 616 4 1642 4 1232 2 726 134 522 2 1647 6 62 4 837 124 733 6 845 15 1133 2 1460 6 1351 24 409 6 953 58 304 4 1653 6 417 42 1357 8 77 2 198 34 746 58 1250 7 82 1 1363 36 310 10 311 4 865 24 200 12 639 2 429 6 1471 112 433 10 646 6 206 4 970 24 317 2 1576 4 1257 10 551 6 760 90 1261 4 1376 4 655 14 880 7 1379 10 1382 84 657 8 1681 4 1078 2 1171 50 456 4 774 4 566 4 228 4 227 6 990 4 
992 2 2 2 1 2 570 2 1281 2 725 2 182 2 7 2 1283 2 726 44 522 2 185 2 351 44 120 2 833 2 677 2 243 2 837 6 733 2 1130 2 1460 2 1351 2 1461 2 1048 2 471 2 953 2 256 2 360 2 1294 2 1653 4 1517 2 856 4 630 2 957 2 1298 2 138 38 1357 2 1465 2 77 2 1466 2 746 2 1363 2 481 2 1365 2 310 2 865 2 311 2 263 2 1310 2 803 4 804 2 1471 20 1528 2 700 2 1207 2 1664 4 433 2 1018 2 810 2 1257 2 494 4 704 4 759 6 441 2 154 6 1674 2 1326 2 1540 46 1543 2 929 2 1485 2 217 2 1263 2 655 2 98 2 1379 2 1168 2 1381 2 1332 2 1266 4 657 2 1073 2 982 2 168 2 1336 20 1078 2 1637 2 1493 2 987 2 228 2 391 2 54 4 
462 8 2 10 570 2 1281 10 785 4 1285 2 351 104 1188 4 243 6 14 4 1191 4 255 24 1404 4 256 2 1294 4 362 4 258 4 1415 2 1613 4 899 4 687 4 138 14 142 8 481 10 1616 4 1305 2 1204 4 1307 2 147 4 803 10 1310 4 804 6 487 4 1528 4 701 32 1018 4 1534 16 704 10 1429 4 154 6 1432 4 1540 78 1326 2 928 4 1433 4 929 2 932 2 1332 4 508 4 1336 36 1637 4 48 14 54 10 616 4 290 2 1041 2 726 70 522 2 1126 8 294 16 1647 4 62 4 837 24 1459 8 733 4 400 4 845 8 1133 2 1460 4 848 2 1048 2 409 4 953 28 954 4 1653 2 417 16 1357 2 743 8 77 2 198 30 1250 4 746 30 1363 6 1365 2 641 2 1471 44 646 4 1065 2 1576 4 1257 4 551 4 1261 4 1484 8 217 10 655 6 98 10 1379 4 1382 24 1681 4 657 2 1078 2 1171 8 1493 2 774 4 988 4 227 4 990 4 
341 2 2 2 1642 2 570 2 616 2 1281 2 726 26 1283 2 522 2 351 40 1188 4 837 8 243 2 733 4 845 6 1460 4 1048 2 953 12 256 2 360 2 1294 4 1653 2 1010 10 1298 2 1357 2 138 14 77 2 198 6 746 12 1363 2 1305 2 803 6 1310 4 804 2 1471 14 1528 4 1424 2 1018 2 1425 2 317 2 812 2 704 6 1257 2 1429 2 154 4 1326 2 1540 28 929 2 655 2 880 2 1379 2 1332 2 657 2 1336 14 1078 2 1637 4 566 2 945 2 54 6 
199 2 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 
673 1 1458 1 1061 1 344 1 699 1 1103 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 197 1089 373 910 57 140 1083 6 802 810 30 1066 854 131 460 48 1053 718 960 598 153 1059 664 885 63 89 146 547 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 871 219 826 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissing(I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:slice([III)[I
daikon.Quant:eq(JJ)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice1:arity()I
jtb.JavaCharStream:backup(I)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:getConfidence()D
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice1:num_samples()I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Node:Node()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ModBitTracker:split(I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_60()Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_88()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3_21()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:sum([D)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ProglangType:dimensions()I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltwiseLT([I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltsLteIndex([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_89()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eq(FF)Z
daikon.diff.InvMap:InvMap()V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_75()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_134()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3_1()Z
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_56()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:logDetail()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsLTE([II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaCharStream:FillBuff()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_5()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3_35()Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1511 | return null
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_115()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3_4()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfo:relate_var()V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_162()Z
daikon.ValueTuple:size()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ModBitTracker:num_vars()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:subsetOf([F[D)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_58()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:subsetOf([D[D)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3_3()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_62()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isIntegral()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_120()Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptName:isEnterPoint()Z
daikon.PptSlice0:arity()I
daikon.Quant:lexGTE([I[I)Z
daikon.ModBitTracker:num_samples()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:subsetOf([D[F)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:setEqual([I[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_81()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal; | RETURN | 91149 | return null
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_148()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
daikon.ModBitTracker:num_sets()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_122()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:eltwiseLTE([I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:isArray()Z
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
400 2 858 2 102 2 345 2 1010 2 353 2 1031 2 181 4 880 2 
899 2 114 6 609 2 850 2 669 2 451 6 944 2 965 2 138 2 707 6 159 2 
911 4 25 2 882 6 345 2 344 2 560 6 358 2 874 6 530 4 904 2 1037 2 1010 2 387 6 
523 2 847 8 883 6 295 10 855 6 994 8 470 4 13 10 597 10 890 8 1069 10 53 16 576 2 867 29 680 16 542 4 345 6 346 8 483 4 249 2 485 12 321 26 548 2 1010 6 326 2 908 2 259 10 763 4 1045 16 36 2 
989 4 375 6 
768 2 
1013 2 561 2 9 2 232 2 641 2 24 2 92 2 648 2 377 2 900 2 782 4 723 2 729 2 908 2 788 2 733 2 110 2 526 2 184 2 671 2 926 4 121 2 858 2 122 2 270 2 1060 2 861 2 537 2 125 2 931 2 129 4 1070 2 541 2 274 2 277 2 345 4 133 2 134 2 201 2 872 2 1084 2 1010 4 424 4 354 2 
525 4 847 6 113 2 74 4 883 4 117 4 295 16 855 4 992 6 13 16 470 2 994 18 597 16 498 2 538 4 343 4 1069 16 507 4 53 32 576 2 711 2 680 32 867 54 165 8 1030 6 345 4 376 6 319 6 485 22 879 2 64 6 321 48 486 2 1010 4 328 4 257 6 259 6 260 2 1045 32 
352 2 996 2 537 2 
936 2 715 2 164 2 190 2 551 2 512 22 729 2 297 2 425 2 52 10 369 2 449 2 702 2 1012 2 
594 2 295 2 794 2 855 2 632 2 13 2 470 2 994 2 597 2 497 2 1069 2 53 2 867 6 680 2 836 2 167 2 485 2 321 4 457 2 1086 2 324 2 259 4 1045 2 
53 8 542 2 680 8 867 16 1030 6 58 2 117 4 295 4 13 4 597 4 485 4 321 12 237 2 257 6 343 4 1045 8 1069 4 
589 4 391 4 3 2 183 2 558 2 7 2 851 2 1052 10 298 4 493 2 565 4 335 10 926 4 674 2 996 6 46 4 125 4 537 8 272 4 504 2 22 14 803 2 646 2 277 2 683 4 168 4 974 2 205 2 1033 62 652 2 100 4 352 2 752 2 418 2 1035 4 254 2 66 2 814 2 105 4 35 2 
765 2 768 2 203 2 954 2 351 2 619 2 188 2 658 2 892 2 691 2 
695 2 1 2 700 2 148 3 562 2 149 2 701 2 434 5 820 2 567 2 14 1 821 2 438 2 822 2 706 2 155 4 306 2 573 8 439 2 441 1 161 2 708 2 709 3 23 2 970 2 446 2 832 4 27 2 312 1 972 3 166 2 838 4 169 2 173 2 580 3 175 2 979 12 980 1 33 2 725 2 180 2 841 2 982 2 846 16 330 2 735 2 736 3 331 3 332 8 990 12 471 2 336 1 599 2 742 1 601 2 339 3 341 3 193 2 474 32 999 1 745 2 1002 2 345 34 615 1 616 2 482 2 349 2 878 2 210 2 1004 2 1005 3 753 2 754 2 1008 2 1010 32 215 2 762 2 218 2 357 2 770 2 80 2 630 24 81 2 82 4 636 2 888 32 86 2 891 16 1023 2 88 2 642 1 366 2 238 2 502 2 897 2 374 2 1028 2 91 6 778 6 779 2 650 2 780 6 378 2 245 2 1034 2 381 3 654 2 653 1 251 2 518 2 785 4 1041 2 386 2 104 2 109 2 111 2 1049 2 791 2 396 2 919 2 793 2 1058 2 925 3 400 2 532 8 406 2 799 2 1061 16 407 1 1068 1 934 4 679 3 938 1 1074 6 281 2 807 2 282 16 809 2 546 1 1075 2 941 4 419 24 945 1 288 1 420 2 1085 2 422 2 1087 4 951 2 
345 2 973 2 
119 2 345 4 588 2 
76 2 
554 4 293 2 4 12 6 2 296 4 818 6 564 16 566 2 568 10 16 14 305 2 28 2 578 4 30 2 315 14 318 4 325 2 329 8 843 2 590 2 852 2 854 2 598 2 600 24 860 22 48 2 49 46 340 10 51 46 862 4 863 2 54 8 610 2 612 2 57 2 613 2 870 20 60 2 877 14 61 4 62 2 350 2 63 2 67 2 69 4 627 46 73 8 77 4 629 8 359 2 79 8 885 2 886 4 633 24 887 2 363 2 635 2 638 46 894 2 643 46 89 2 90 2 644 2 372 2 373 2 96 4 901 46 902 2 903 2 382 2 656 4 905 36 101 46 385 20 910 2 389 2 912 4 662 36 392 8 115 42 664 2 665 4 920 4 921 20 397 146 405 6 928 4 929 4 128 2 933 4 935 8 937 36 131 2 939 2 940 22 135 2 942 4 943 4 423 2 426 2 140 2 428 4 699 2 430 2 431 2 432 2 955 4 146 2 958 48 959 2 960 2 152 2 153 2 704 2 156 2 966 176 444 2 443 2 158 2 160 4 710 4 967 2 968 2 714 4 718 2 976 10 719 4 981 4 458 4 726 146 178 20 179 2 727 8 460 2 462 2 464 16 469 4 739 4 194 16 195 46 196 48 197 2 199 2 479 2 749 8 200 2 206 2 484 2 214 2 1011 2 766 4 225 2 769 46 227 6 1017 2 771 8 494 2 496 4 1020 4 1021 8 1029 2 509 46 513 2 515 2 252 4 1036 6 1040 2 253 6 1042 146 256 2 786 4 1044 6 263 2 262 2 789 14 265 26 1053 2 1054 8 795 2 1059 2 268 2 798 2 536 2 535 4 1063 28 1066 2 802 2 804 8 275 4 547 2 810 2 286 4 1082 2 1083 2 1089 2 552 2 815 46 291 2 
801 2 491 2 59 1 587 2 
544 2 587 2 
292 2 540 2 38 2 1071 4 984 2 915 2 792 2 512 6 118 2 617 2 398 2 741 2 45 2 760 2 1088 2 127 2 1065 2 1047 4 
801 2 130 2 
659 2 537 2 314 2 898 2 
659 2 537 2 487 2 314 2 898 2 348 2 
483 2 659 2 543 2 916 2 537 2 587 2 
274 2 553 2 
483 2 37 2 659 2 537 2 
229 2 907 2 
0 2 224 2 
1081 2 575 2 
55 2 510 2 
55 2 647 2 224 2 
712 2 55 2 224 2 
55 2 304 2 224 2 
952 2 55 2 224 2 
668 6 895 6 537 2 713 2 242 2 311 2 808 2 659 2 
923 2 1062 2 
483 2 472 2 659 2 543 2 537 2 348 2 587 2 
543 2 986 2 587 2 
43 2 543 2 587 2 
801 2 1062 2 150 2 
543 2 587 2 
1050 2 1062 2 
857 2 587 2 
801 2 655 2 1062 2 
801 2 1081 2 97 2 
801 2 401 2 55 2 
801 2 481 2 229 2 
801 2 689 2 224 2 
1007 2 1062 2 
783 2 587 2 
1081 2 250 2 
55 2 1056 2 
452 2 229 2 
618 2 224 2 
750 2 1062 2 
813 2 224 2 
694 2 229 2 
55 2 266 2 
380 2 1081 2 
801 2 655 2 947 2 1062 2 
801 2 655 2 32 2 947 2 1062 2 
801 2 1015 2 1062 2 
801 2 411 2 1062 2 
143 2 685 2 213 2 784 2 
161 2 
700 2 145 2 701 2 820 2 821 2 438 4 306 2 441 2 832 4 166 2 450 2 838 2 169 2 175 2 978 2 455 2 582 4 979 8 725 2 466 2 332 2 990 8 601 2 50 2 474 6 747 2 345 26 616 2 482 2 349 2 878 2 754 2 757 2 215 2 1010 26 762 2 770 2 81 2 82 4 636 2 888 4 891 6 1022 2 88 2 366 2 502 2 1028 2 91 2 93 2 778 2 780 6 378 6 654 2 251 2 785 2 1041 4 104 2 107 2 108 2 116 4 791 2 793 2 396 2 529 2 1058 2 400 2 406 2 1064 2 1068 2 932 2 934 2 1074 4 941 4 136 2 1087 4 951 2 
700 2 145 2 701 2 820 2 821 2 438 4 306 2 441 2 832 4 166 2 450 2 838 2 169 2 175 2 978 2 455 2 582 4 979 8 725 2 180 2 735 2 332 2 990 8 601 2 50 2 474 6 1003 2 747 2 345 26 616 2 482 2 349 2 878 2 754 2 757 2 1010 26 215 2 762 2 623 2 770 2 81 2 82 4 636 2 888 4 891 6 1022 2 88 2 366 2 897 2 502 2 1028 2 91 2 93 2 778 2 780 6 378 6 654 2 251 2 785 2 1041 2 104 2 108 2 914 2 116 4 791 2 793 2 396 2 529 2 1058 2 400 2 406 2 1068 2 932 2 934 2 1074 6 941 4 136 2 1087 4 951 2 
313 2 
39 2 614 2 
429 4 1014 2 222 2 356 2 144 2 433 2 10 2 1018 2 563 2 234 2 823 2 364 2 87 4 639 2 501 2 707 6 159 2 1028 2 832 2 577 2 780 4 514 2 451 6 247 8 248 4 171 8 174 2 840 2 251 2 722 10 519 4 459 4 258 2 114 6 985 2 1048 2 918 2 791 2 987 2 669 4 399 2 601 2 998 2 342 2 607 2 480 2 609 2 345 12 869 2 349 2 751 2 944 4 215 2 1010 6 948 2 1087 2 72 2 139 4 950 2 951 2 
429 4 1014 2 356 2 144 2 433 2 10 2 1018 2 563 2 637 4 234 2 823 2 364 2 87 4 639 2 965 2 501 2 707 8 159 2 832 2 1028 2 577 2 780 4 514 2 451 8 247 8 248 4 171 8 174 2 840 2 251 2 722 10 519 4 1039 2 459 4 258 2 114 6 985 2 1048 2 918 2 791 2 987 2 669 4 399 2 601 2 998 2 342 2 607 2 480 2 198 2 609 2 345 12 869 2 349 2 751 2 944 4 215 2 1010 6 948 2 1087 2 72 2 139 4 951 2 
114 2 985 2 918 2 869 2 144 2 987 2 514 2 669 2 399 2 248 2 944 2 998 2 459 4 501 2 342 2 707 2 72 2 139 4 
429 4 1014 2 222 2 356 2 144 2 433 2 10 2 1018 2 563 2 234 2 823 2 364 2 87 4 639 2 965 2 501 2 707 6 1028 2 832 2 577 2 780 4 514 2 451 6 247 4 248 4 171 4 174 2 840 2 251 2 722 6 519 4 459 4 258 2 114 4 985 2 1048 2 918 2 791 2 987 2 669 4 399 2 601 2 998 2 342 2 607 2 480 2 609 2 345 12 869 2 349 2 751 2 944 4 215 2 1010 6 948 2 1087 2 72 2 139 4 950 2 951 2 
429 4 1014 2 222 2 356 2 144 2 433 2 10 2 1018 2 563 2 234 2 823 2 364 2 87 4 639 2 501 2 707 4 899 2 1028 2 832 2 577 2 780 4 514 2 451 6 247 4 248 4 171 4 174 2 840 2 251 2 722 6 519 4 459 4 258 2 114 6 985 2 1048 2 918 2 791 2 987 2 669 4 399 2 601 2 998 2 342 2 607 2 480 2 609 2 345 12 869 2 349 2 751 2 944 4 215 2 1010 6 948 2 1087 2 72 2 139 4 950 2 951 2 
429 4 1014 2 222 2 356 2 144 2 433 2 10 2 1018 2 563 2 234 2 823 2 364 2 87 4 639 2 501 2 707 6 159 2 1028 2 832 2 577 2 780 4 514 2 451 6 247 4 248 4 171 8 174 2 840 2 251 2 722 6 519 4 459 4 258 2 114 6 985 2 1048 2 918 2 791 2 987 2 669 4 399 2 601 2 998 2 342 2 607 2 480 2 609 2 345 12 869 2 349 2 751 2 944 4 215 2 1010 6 948 2 1087 2 72 2 139 4 950 2 951 2 
429 4 1014 2 222 2 356 2 144 2 433 2 10 2 1018 2 563 2 234 2 823 2 364 2 87 4 639 2 501 2 707 6 159 2 899 2 832 2 1028 2 577 2 780 4 514 2 451 8 247 8 248 4 171 8 174 2 840 2 251 2 722 10 519 4 459 4 258 2 114 8 985 2 1048 2 918 2 791 2 987 2 669 4 399 2 601 2 998 2 342 2 607 2 480 2 609 2 345 12 869 2 349 2 751 2 944 4 215 2 1010 6 948 2 1087 2 72 2 139 4 950 2 951 2 
429 4 1014 2 222 2 356 2 144 2 433 2 10 2 1018 2 563 2 234 2 823 2 364 2 87 4 639 2 501 2 707 6 159 2 1028 2 832 2 577 2 780 4 514 2 451 6 247 8 248 4 171 8 174 2 840 2 251 2 722 10 519 4 459 4 258 2 114 6 985 2 1048 2 918 2 791 2 987 2 669 4 399 2 601 2 998 2 342 2 607 2 480 2 609 2 345 12 869 2 349 2 751 2 944 4 215 2 1010 6 948 2 1087 2 72 2 139 4 950 2 951 2 
2 2 557 6 10 4 563 2 820 2 15 8 303 1 821 2 570 6 823 2 306 2 824 2 825 2 309 2 832 4 834 2 577 2 317 1 838 2 840 2 34 2 327 6 588 6 593 6 332 2 853 2 601 2 50 4 342 2 864 2 607 2 608 2 609 4 345 46 869 2 616 12 876 1 349 2 622 2 70 2 72 2 76 6 356 2 81 2 82 4 84 6 85 6 634 2 636 2 888 2 889 2 891 6 364 2 87 8 639 2 88 2 366 2 897 2 899 4 91 2 378 6 654 2 906 10 108 2 114 8 116 4 918 2 667 6 669 4 399 2 400 2 673 2 120 2 124 6 930 1 678 7 934 2 941 4 686 2 944 4 948 2 139 4 951 2 950 2 427 6 696 6 429 6 142 4 144 2 700 2 433 2 956 1 705 2 707 4 447 6 973 6 451 12 171 2 174 4 175 2 721 1 979 4 722 2 459 4 180 2 730 7 983 2 731 2 985 2 987 2 990 4 191 2 998 2 474 8 476 2 477 2 747 2 480 2 482 2 751 2 754 2 215 2 1010 24 217 4 1014 2 770 2 1016 2 1018 2 1019 2 234 2 501 2 503 2 1028 2 241 2 778 2 780 6 244 1 514 2 248 4 251 2 519 4 785 2 1038 1 521 2 258 2 1048 2 790 2 791 2 793 2 528 6 529 2 1058 2 269 2 1067 2 1074 6 278 1 283 2 1076 2 287 6 1087 4 
696 6 427 6 141 2 2 2 429 6 142 4 557 6 700 2 144 2 433 2 10 4 563 2 15 8 820 2 821 2 438 2 570 6 823 2 705 2 824 2 306 2 825 2 707 8 159 4 309 2 447 6 832 4 834 2 577 2 973 6 838 4 451 12 171 6 840 2 174 4 175 2 979 8 722 2 34 2 459 4 180 2 327 6 731 2 983 2 588 6 593 6 985 2 853 2 332 2 987 2 990 8 601 2 191 2 50 4 998 2 474 8 476 2 477 2 342 2 864 2 747 2 608 2 607 2 480 2 609 4 345 48 869 2 616 12 482 2 349 2 751 2 754 2 1010 26 215 2 622 2 70 2 217 4 72 2 1014 2 76 6 356 2 770 2 1016 2 81 2 1018 2 82 4 84 6 85 6 1019 2 634 2 889 2 888 2 636 2 891 6 234 2 87 8 364 2 639 2 88 2 501 2 366 2 503 2 897 2 241 2 1028 2 91 2 778 2 780 6 514 2 378 6 654 2 248 4 251 2 519 4 785 4 906 10 258 2 521 2 108 2 114 8 790 2 1048 2 116 4 918 2 791 2 793 2 667 6 528 6 529 2 669 4 1058 2 399 2 120 2 673 2 400 2 269 2 800 2 124 6 1067 2 934 4 1074 6 283 2 686 2 1076 2 941 4 944 4 287 6 948 2 1087 4 139 4 950 2 951 2 
696 6 427 6 141 2 2 2 429 6 142 4 557 6 700 2 144 2 433 2 10 4 563 2 15 8 820 2 821 2 438 2 570 6 823 2 705 2 824 2 306 2 825 2 707 8 159 4 309 2 447 6 832 4 834 2 577 2 973 6 838 4 451 12 171 6 840 2 174 4 175 2 979 8 722 6 34 2 459 4 180 2 327 6 731 2 983 2 588 6 593 6 985 2 853 2 332 2 987 2 990 8 601 2 191 2 50 4 998 2 474 8 476 2 477 2 342 2 864 2 747 2 608 2 607 2 480 2 609 4 345 48 869 2 616 12 482 2 349 2 751 2 754 2 215 2 1010 26 622 2 70 2 217 4 72 2 1014 2 76 6 356 2 770 2 1016 2 81 2 1018 2 82 4 84 6 85 6 1019 2 634 2 889 2 888 2 636 2 891 6 234 2 87 8 364 2 639 2 88 2 501 2 366 2 503 2 897 2 241 2 1028 2 91 2 778 2 780 6 514 2 378 6 247 4 654 2 248 4 251 2 519 4 785 4 906 10 258 2 521 2 108 2 114 8 790 2 1048 2 116 4 918 2 791 2 793 2 667 6 528 6 529 2 669 4 1058 2 399 2 120 2 673 2 400 2 269 2 800 2 124 6 1067 2 934 4 1074 6 283 2 686 2 1076 2 941 4 944 4 287 6 948 2 1087 4 139 4 950 2 951 2 
2 2 557 6 10 4 563 2 12 6 301 6 820 2 15 8 821 2 569 2 570 6 823 2 306 2 824 2 825 2 572 2 307 6 308 6 309 2 832 4 833 6 834 2 577 2 31 6 838 4 840 2 322 6 34 2 327 6 588 12 593 6 332 4 853 2 601 2 50 4 342 2 864 2 607 2 608 2 609 4 345 52 869 2 616 10 349 2 622 2 70 2 72 2 76 12 356 2 81 2 82 4 84 6 85 12 634 2 636 2 888 4 889 2 891 8 364 2 87 8 639 2 88 2 366 2 897 2 899 2 91 4 94 2 95 2 378 8 654 2 906 8 108 2 114 10 116 6 918 2 667 6 669 4 399 2 400 2 673 2 120 2 124 12 934 4 941 4 686 2 690 6 944 4 948 2 139 4 951 2 950 2 427 6 696 12 141 2 429 6 142 4 144 2 700 2 433 2 962 2 436 6 438 2 705 2 965 2 707 10 159 4 447 6 973 12 451 16 171 6 174 4 175 2 979 10 722 6 459 4 180 2 983 2 731 2 985 2 987 2 990 10 192 2 191 2 998 2 474 12 476 2 477 2 747 4 480 2 482 2 751 2 211 2 754 2 1010 24 215 2 217 4 1014 2 770 2 1016 2 1018 2 772 2 1019 2 234 2 501 2 503 2 1028 2 778 4 780 6 514 2 247 4 248 4 251 2 519 4 785 4 258 2 521 2 1048 2 790 2 791 2 793 2 528 6 529 2 1058 2 269 2 800 2 1067 2 1074 6 283 2 1076 2 287 6 1087 4 
429 2 1014 2 114 6 1048 2 356 2 918 2 144 2 669 4 1018 2 399 2 234 2 87 2 364 2 639 2 998 2 342 2 707 6 159 2 607 2 609 2 577 2 345 4 869 2 514 2 451 4 247 4 751 2 171 6 944 4 519 2 722 4 459 2 948 2 139 2 950 2 
429 2 144 2 700 2 433 2 820 2 821 2 306 2 707 6 159 2 161 2 831 2 832 4 577 2 451 4 454 2 171 6 175 2 722 2 459 2 180 2 463 2 993 2 601 2 50 2 998 2 474 8 342 2 607 2 609 2 345 28 869 2 616 4 482 2 349 2 751 2 753 2 754 2 756 3 755 2 1010 24 215 2 1014 2 356 2 770 2 81 2 82 4 1018 2 636 2 888 3 234 2 891 6 87 2 364 2 639 2 366 2 897 2 1028 2 241 2 91 3 778 3 780 6 514 2 378 6 654 2 251 2 519 2 906 2 108 2 114 6 1048 2 116 4 918 2 791 2 793 2 669 4 529 2 1058 2 399 2 400 2 1074 6 281 2 1075 2 941 4 944 4 948 2 1087 4 139 2 950 2 951 2 
1048 2 356 2 761 2 
1048 2 356 2 761 2 
429 4 142 2 144 2 10 2 961 2 563 2 151 2 820 2 821 2 823 2 20 2 306 2 965 4 707 12 159 4 969 4 832 4 838 4 451 16 975 2 453 4 171 6 174 4 840 2 175 2 979 4 722 6 459 2 180 2 845 2 592 2 985 2 990 4 740 2 601 2 191 2 50 6 475 2 474 2 608 2 609 4 748 2 868 2 345 24 869 2 616 4 482 2 349 2 751 2 754 2 1010 16 215 2 761 2 72 2 217 2 355 2 767 2 881 2 356 6 770 2 81 2 233 2 82 4 84 2 636 2 888 2 891 2 234 2 87 4 1022 4 88 4 366 2 897 2 899 4 1028 2 780 6 378 2 247 4 654 2 248 4 251 2 519 2 785 4 1041 2 906 2 108 2 114 12 527 2 1048 4 791 2 793 2 529 2 669 4 1058 2 399 4 400 2 123 2 934 4 1073 2 1074 6 686 2 941 4 944 4 1087 4 139 2 951 2 
845 2 39 2 527 2 345 4 987 2 616 2 186 2 84 2 797 2 581 2 1010 2 475 2 906 2 503 2 1067 2 217 2 951 2 
429 4 142 2 144 2 10 4 961 2 563 2 151 2 820 2 821 2 823 2 306 2 965 4 442 2 707 12 159 4 969 4 832 4 838 4 451 16 975 2 453 4 171 6 174 4 840 2 175 2 979 4 177 2 722 6 459 2 180 2 845 2 985 2 990 4 740 2 601 2 191 2 50 6 475 2 474 2 608 2 609 4 868 2 345 24 869 2 616 2 482 2 349 2 751 2 754 2 758 2 621 2 1010 16 215 2 761 2 72 2 355 4 767 2 881 2 356 6 770 2 81 2 233 2 82 4 84 2 636 2 888 4 891 2 234 2 87 4 1022 4 88 4 366 2 897 2 899 4 1028 2 780 6 378 2 247 4 654 2 248 4 251 2 519 2 785 4 1041 1 258 2 108 2 114 12 527 2 1048 4 791 2 793 2 529 2 669 4 1058 2 399 4 924 2 400 2 934 4 1073 2 1074 6 686 2 941 4 944 4 1087 4 139 2 951 2 
429 4 142 2 144 2 10 4 961 2 563 2 151 2 820 2 821 2 823 2 306 2 965 4 707 12 159 4 969 4 832 4 838 4 451 16 975 2 453 4 171 6 174 4 840 2 175 2 979 4 722 6 459 2 180 2 845 2 40 2 985 2 990 4 740 2 601 2 191 2 50 6 475 2 474 2 608 2 609 4 868 2 345 24 869 2 616 4 482 2 349 2 751 2 754 2 1010 16 215 2 761 2 72 2 217 2 355 2 767 2 881 2 356 6 770 2 230 2 81 2 233 2 82 4 84 2 636 2 888 2 891 2 234 2 87 4 1022 4 88 4 366 2 897 2 899 4 1028 2 780 6 378 2 247 4 654 2 248 4 251 2 519 2 785 4 1041 1 906 2 258 2 108 2 114 12 527 2 1048 4 791 2 793 2 529 2 669 4 1058 2 399 4 400 2 934 4 1073 2 1074 6 284 2 686 2 941 4 417 2 944 4 949 2 1087 4 139 2 951 2 
2 2 490 2 219 2 559 2 700 2 770 2 147 4 81 2 82 4 888 2 636 2 820 2 703 2 821 2 891 6 640 2 306 2 826 2 366 2 897 1 774 2 1028 2 832 4 91 2 834 2 778 2 780 6 378 6 654 2 383 2 251 2 175 2 255 2 180 1 521 2 734 2 116 4 791 2 793 2 988 2 1055 2 529 2 1057 2 1058 2 400 2 927 2 601 2 50 2 474 8 677 2 864 2 1074 5 345 24 871 2 616 2 482 2 1076 2 941 4 349 2 754 2 289 2 215 2 1010 18 488 2 1087 4 70 2 951 2 
848 2 116 2 226 2 700 2 395 3 991 2 888 3 891 2 338 2 474 2 571 2 163 2 747 6 91 3 345 2 778 3 378 2 99 2 212 2 759 4 65 1 1010 2 586 2 388 2 844 2 
848 2 116 2 226 2 700 2 395 2 991 2 888 2 891 2 338 2 474 2 571 2 163 2 747 6 91 2 345 2 778 2 378 2 99 2 212 2 759 4 1010 2 586 2 388 2 844 2 
848 2 116 2 226 2 700 2 395 2 991 2 888 2 891 2 338 2 474 2 571 2 163 2 747 6 91 2 345 2 778 2 378 2 99 2 212 2 759 4 1010 2 586 2 388 2 844 2 
5 4 492 2 883 2 700 2 295 2 231 2 13 2 888 3 235 4 163 2 777 3 91 3 26 2 716 4 98 4 321 4 1045 2 846 2 390 2 847 4 666 2 333 3 597 2 995 2 1061 2 474 2 743 2 1069 2 53 2 746 2 680 2 867 6 345 10 410 6 208 2 688 3 620 2 421 4 1010 4 290 2 
5 4 492 2 883 2 700 2 295 2 231 2 13 2 888 2 235 4 163 2 777 2 576 2 91 2 26 2 716 4 98 4 321 4 1045 2 846 2 390 2 847 4 666 2 333 2 994 2 597 2 995 2 1061 2 474 2 743 2 1069 2 53 2 746 2 680 2 867 4 345 10 410 6 208 2 688 2 485 2 620 2 421 4 1010 4 290 2 
5 4 492 2 883 2 700 2 295 2 231 2 13 2 888 2 235 4 163 2 777 2 576 2 91 2 26 2 716 4 98 4 321 4 1045 2 846 2 390 2 847 4 666 2 333 2 994 2 597 2 995 2 1061 2 474 2 743 2 1069 2 53 2 746 2 680 2 867 4 345 10 410 6 208 2 688 2 485 2 620 2 421 4 1010 4 290 2 
5 4 492 2 883 2 700 2 295 2 231 2 13 2 888 2 235 4 163 2 777 2 576 2 91 2 26 2 716 4 98 4 321 4 1045 2 846 2 390 2 847 4 666 2 333 2 994 2 597 2 995 2 1061 2 474 2 743 2 1069 2 53 2 746 2 680 2 867 4 345 10 410 6 208 2 688 2 485 2 620 2 421 4 1010 4 290 2 
5 4 492 2 883 2 700 2 295 2 231 2 13 2 888 2 235 4 163 2 777 2 576 4 91 2 26 2 716 4 98 4 321 4 1045 2 846 2 390 2 847 4 666 2 333 2 994 4 597 2 995 2 1061 2 474 2 743 2 1069 2 53 2 746 2 680 2 867 4 345 10 410 6 208 2 688 2 485 4 620 2 421 4 1010 4 290 2 
963 2 539 2 445 2 645 2 720 2 932 2 764 2 
645 2 302 2 465 2 604 2 626 2 412 2 
75 2 953 2 1051 2 493 1 435 2 85 2 531 2 672 2 267 1 189 2 17 1 19 2 236 2 896 2 162 2 1027 2 243 2 345 10 511 1 684 2 316 2 652 1 657 2 176 2 1010 8 215 2 
110 2 847 4 112 2 883 2 295 6 922 2 992 4 13 6 994 2 597 6 44 2 538 2 931 2 574 2 343 2 1069 6 53 6 310 2 576 2 611 2 867 16 680 6 165 2 345 6 485 3 321 12 1010 6 257 4 1045 6 909 2 
1026 2 732 4 264 2 345 1 595 2 781 2 98 2 839 2 170 2 403 1 47 2 365 2 456 2 235 2 421 2 1010 1 964 2 367 7 
1026 4 732 4 264 2 595 4 781 2 98 2 839 2 170 2 47 2 365 2 235 2 456 4 421 2 964 2 367 6 
1026 8 732 4 264 2 345 1 595 8 781 2 98 2 839 2 170 2 403 1 47 2 365 6 235 2 456 8 421 2 1010 1 964 8 367 10 
1026 2 732 2 264 2 595 2 781 2 98 2 839 2 170 2 47 2 235 2 456 2 421 2 367 2 
697 36 555 12 294 22 556 8 11 2 300 42 819 2 820 14 437 6 18 2 154 2 440 4 157 34 828 6 29 4 971 6 837 4 448 24 579 6 320 8 583 6 584 17 724 42 323 16 585 6 728 4 180 58 842 10 591 4 41 6 596 6 467 8 737 6 468 4 990 28 334 6 738 4 856 10 337 8 602 6 603 24 478 2 865 6 605 6 606 4 56 26 345 150 204 2 873 18 482 14 1006 4 1010 134 624 4 68 2 625 2 489 10 71 4 628 18 221 6 220 90 223 4 770 8 78 8 228 4 82 112 83 8 360 84 631 6 361 24 362 6 773 4 499 24 1024 4 897 58 239 2 368 6 506 2 775 50 370 10 371 90 240 2 508 124 649 2 651 2 1032 4 379 10 516 2 520 4 1041 4 103 24 1043 2 660 10 1046 6 522 2 787 92 524 8 913 10 663 6 917 1 394 4 670 11 402 16 404 16 271 4 533 4 534 12 675 6 676 4 126 4 273 8 1072 6 408 6 805 26 1074 248 682 24 409 4 279 4 413 2 545 8 414 2 941 88 1080 16 811 4 946 8 137 2 550 10 692 2 693 6 
697 2 628 2 698 2 556 6 884 4 817 2 770 2 8 2 82 20 299 2 495 2 361 2 820 2 437 2 18 2 893 2 897 2 370 2 776 2 829 2 830 2 508 6 835 4 837 2 379 2 516 2 977 2 172 2 579 2 583 2 584 2 323 4 1041 2 180 2 461 2 842 2 1043 2 660 2 261 2 106 4 522 2 524 2 913 2 182 2 393 2 849 2 467 2 185 2 990 38 796 2 42 2 856 2 187 2 473 2 402 4 997 2 337 2 675 2 602 2 603 2 478 2 1000 2 1001 2 744 6 866 2 865 2 605 4 276 2 1074 44 682 2 345 46 409 2 806 2 280 2 347 2 875 2 413 2 482 2 1077 2 416 2 941 20 687 2 1079 2 812 4 209 2 1080 4 946 2 1009 2 1010 44 550 2 216 2 489 2 
697 6 816 8 556 6 957 4 11 2 300 16 820 6 437 4 18 2 154 2 827 2 440 2 157 34 21 4 830 2 828 4 29 4 717 8 971 4 977 2 579 4 583 4 584 10 724 8 323 10 585 4 728 4 180 30 461 10 596 4 467 2 737 4 990 14 334 4 738 4 856 4 337 2 859 32 602 4 1001 10 605 2 865 4 345 78 202 2 482 6 207 2 1006 4 1010 70 624 5 489 4 71 4 628 10 221 4 223 4 78 5 770 2 82 44 83 5 360 24 631 4 773 4 499 8 500 2 368 4 239 2 897 28 1025 4 505 16 775 8 370 6 776 10 240 2 508 24 1032 4 246 4 516 2 384 2 517 8 1043 2 1046 4 261 2 522 2 787 24 524 2 913 4 663 4 402 10 404 9 271 5 534 14 675 4 676 4 126 4 1072 4 132 4 408 4 1074 104 681 16 413 2 415 2 941 36 1078 4 285 6 1080 10 549 8 550 4 693 4 
697 2 628 2 294 10 556 4 770 2 82 14 83 4 820 2 437 4 18 2 440 2 157 6 897 12 370 2 830 2 508 8 649 2 516 2 579 4 583 4 584 2 323 6 1041 2 180 12 1043 2 522 2 524 2 913 2 591 2 467 2 670 2 990 14 856 2 402 6 337 2 404 6 271 2 675 4 602 4 478 2 605 2 865 4 606 2 1074 40 345 28 204 2 545 2 413 2 414 2 482 2 941 14 1080 6 687 2 1010 26 550 2 624 2 68 2 625 2 489 2 
661 2 

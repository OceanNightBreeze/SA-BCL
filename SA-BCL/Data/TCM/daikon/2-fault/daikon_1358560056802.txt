#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 223 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_18()Z
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:noDups([I)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_109()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:slice([III)[I
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.PptSlice1:num_samples()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(FF)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.Node:Node()V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3_21()Z
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:isIOAArray()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_105()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:elementIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_55()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:setDiff([I[I)[I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I
daikon.Quant:intersection([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_124()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.PptSlice2:arity()I
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_116()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.ProglangType:isIntegral()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:passes()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_14()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfo:isDerived()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfo:isPointer()Z
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.ProglangType:baseIsString()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.Invariant:is_false()Z
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.PptName:toString()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_30()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.Invariant:logOn()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_102()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptSlice0:arity()I
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_107()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_70()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:indexOf([JJ)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:gt(II)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_76()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:lexLT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_15(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_137()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_25()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3_3()Z
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_126()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfo:isIOASet()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | OPERATOR | 15357 | == -> <
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:jj_3R_60()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3_36()Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(II)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_5()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:union([I[I)[I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:setEqual([I[I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:isReverse([I[I)Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.Quant:lte(II)Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice3:arity()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:isString()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:hasTypeOf()Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3_19()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfo:has_typeof()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_29()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_103()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:isPointerFileRep()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
697 2 984 2 80 2 907 2 69 2 1836 2 42 2 1813 2 363 4 
932 2 737 6 129 2 1708 2 988 6 1788 2 171 2 1507 6 1472 2 71 2 494 2 
1841 4 1797 2 902 6 1827 2 1813 2 1536 2 178 4 1119 6 209 2 1227 6 42 2 517 2 1326 6 
106 2 277 4 1782 2 371 6 1250 8 1813 6 203 16 607 28 77 10 1881 6 1225 4 1120 10 1287 16 42 6 941 10 1861 8 1290 10 1702 4 1735 2 582 2 1410 2 524 2 1465 26 192 8 1263 4 461 2 690 16 1617 12 1211 8 1303 10 
558 4 1887 6 
1709 2 
702 2 1574 2 1813 4 1165 2 569 2 80 2 992 2 383 2 384 2 265 2 1697 2 1527 2 885 2 1466 2 1825 2 1413 2 528 2 1707 4 394 2 1189 2 1648 2 461 2 1591 2 1651 2 1905 2 1714 2 107 2 1907 2 110 2 1247 2 473 4 603 2 1028 2 1142 2 1725 2 42 4 1203 2 417 2 1557 4 799 2 1155 4 194 2 1101 2 1510 2 
1460 2 1290 4 1206 8 33 3 1465 4 601 4 192 3 1813 4 607 4 1237 4 77 4 1120 4 1617 4 42 4 1303 4 
1165 2 1406 2 325 2 
1360 22 1543 10 505 2 1656 2 437 2 1413 2 1674 2 330 2 250 2 1578 2 1615 2 479 2 161 2 577 2 
371 2 1517 2 203 2 607 6 77 2 1120 2 1225 2 1287 2 1374 2 941 4 1433 2 1290 2 644 2 1465 4 192 2 777 2 1415 2 1537 2 1902 2 690 2 1617 2 1303 2 1387 2 
1290 4 1667 4 281 6 1465 12 1344 6 1909 2 1826 2 203 8 607 15 1263 2 77 4 1120 4 1286 4 1287 8 690 8 1617 5 1303 4 
432 4 1539 4 1808 14 32 2 1594 10 1191 2 1515 4 1113 2 730 2 1165 8 1691 2 384 4 994 2 1142 2 1372 2 1914 2 1202 2 711 4 17 2 942 2 1229 2 481 4 418 4 1144 2 1406 2 1434 2 1528 4 22 2 1916 4 915 10 887 2 325 6 1707 4 1094 4 618 2 170 2 139 62 1097 4 622 4 801 2 
930 2 843 2 1758 2 734 2 1417 2 1297 2 1008 2 1055 2 1474 2 1709 2 
1214 2 1810 2 1109 2 1110 2 1112 2 1111 1 374 2 376 8 1813 34 1218 2 1453 2 757 2 1220 2 10 1 1118 2 380 2 761 3 382 2 1228 3 995 2 1580 2 882 32 642 2 1341 2 164 2 1462 6 1123 1 648 2 1001 2 889 1 1469 2 1586 2 529 16 1126 2 531 2 1834 3 655 2 1471 3 892 3 1010 3 660 1 1473 2 1017 2 663 2 1477 2 664 2 1715 2 1244 2 1718 2 175 32 904 2 541 2 543 4 906 1 787 16 907 2 290 8 1854 2 544 3 1857 2 1858 2 41 5 42 32 1256 1 1373 2 681 2 913 2 189 2 1498 3 424 2 920 1 1869 1 1153 2 1042 4 1872 16 1157 2 695 2 1512 6 195 1 1754 24 309 1 1050 3 438 4 1629 2 1280 2 439 16 1167 2 1052 2 1880 2 1519 12 708 1 448 6 940 2 1056 2 824 2 1181 3 583 2 1895 2 1184 1 1064 2 586 4 720 4 1535 2 1772 8 331 12 217 2 723 2 835 2 1299 2 222 2 343 2 1775 4 594 2 596 2 1305 2 1781 1 1072 2 1908 2 469 2 1073 2 1194 1 729 2 347 2 846 3 1082 4 1790 2 239 2 850 2 1431 1 1665 2 968 2 613 2 745 2 1799 2 1089 2 485 2 246 2 1439 1 1441 2 247 2 617 2 863 24 487 4 490 3 1923 2 142 2 143 2 753 2 983 6 
355 2 1813 2 
1046 2 1391 2 1813 4 
533 2 
1 2 2 2 500 160 1450 2 501 2 503 6 987 2 508 4 507 2 511 4 513 2 514 4 997 6 21 24 1463 10 1464 6 527 12 1468 10 1003 6 1470 2 1007 2 27 4 1012 20 28 8 29 2 536 12 1476 6 1020 66 537 4 1478 14 1479 2 1022 6 1023 12 1025 2 1027 6 1482 20 1026 4 1481 2 1486 2 1487 26 37 2 1029 50 1488 2 39 2 1490 2 42 10 1031 2 547 2 548 4 551 328 553 2 1034 60 48 2 1036 4 555 2 1038 6 556 2 557 8 1040 26 1505 14 1504 2 56 2 58 6 1041 4 1043 4 1506 4 1044 12 61 2 1509 8 65 2 66 4 1514 6 566 386 70 16 73 2 1518 2 568 2 1053 4 79 6 570 2 81 8 1521 6 571 2 82 2 83 2 1522 2 574 74 575 4 578 2 579 4 1525 46 1058 10 581 4 584 2 1060 2 94 2 1533 2 1063 2 1534 2 97 244 99 106 1065 4 1066 4 1067 4 588 6 591 2 1071 4 597 4 598 2 1542 2 1544 6 1074 14 600 14 1079 18 1548 4 1549 2 115 28 116 2 1551 2 118 6 1554 2 612 4 124 6 1088 4 127 6 130 84 614 118 1558 2 134 30 135 2 620 2 140 2 621 2 1565 2 1098 2 141 8 1100 92 145 26 624 30 1103 2 1106 30 1105 2 1104 16 147 112 1107 224 1567 4 1572 2 152 2 150 2 628 2 153 20 631 22 1114 2 1115 6 632 4 633 54 1116 198 635 4 636 4 158 26 1121 2 638 32 1581 6 163 4 1122 8 646 328 647 2 1583 2 168 2 649 2 1586 2 1587 2 1127 182 1590 2 659 2 1592 2 1593 4 173 2 1598 6 665 4 176 68 1136 6 668 2 670 8 671 28 672 6 179 6 1139 12 676 28 1143 2 1141 8 1608 26 1609 4 186 2 191 8 1147 4 1148 2 1152 2 686 6 687 198 1618 2 693 4 1619 376 692 2 1622 2 1159 2 196 2 699 4 1625 2 200 6 201 6 1160 4 703 60 1164 18 204 4 705 6 207 6 1168 132 1174 20 1634 204 211 2 1176 8 710 2 1637 6 213 14 1638 2 1179 4 714 2 715 198 716 2 1642 6 717 2 1185 30 1186 4 1647 26 1188 432 220 6 221 2 1650 6 224 198 225 244 226 2 231 12 232 4 732 2 234 26 1197 6 236 4 740 6 237 6 1663 2 1199 2 1664 198 241 2 244 28 750 228 1672 60 252 26 1675 2 752 6 253 64 1679 94 1212 6 257 2 1215 4 756 6 758 2 1223 30 1222 6 1224 6 264 6 1694 6 765 4 1695 2 1696 4 1699 12 1230 4 266 6 1700 2 269 4 771 140 774 12 775 20 1236 4 272 30 273 10 1238 2 779 2 1240 30 1711 4 278 30 1246 20 284 106 285 2 785 4 1252 2 1722 2 286 26 289 336 789 16 1726 4 791 46 792 2 299 4 1258 2 793 28 1733 24 1736 8 1744 2 795 2 798 2 797 2 303 8 1745 12 1748 4 800 2 1266 2 306 2 1752 60 1753 6 1755 52 1757 6 1277 2 809 2 1284 2 313 4 810 2 811 6 814 2 812 64 816 198 818 2 1761 48 1760 6 321 2 323 2 327 4 1771 2 334 2 337 2 833 432 340 2 341 2 1774 6 1777 2 1780 6 1779 4 1306 2 1307 2 1783 2 845 2 350 12 352 6 848 2 1791 4 1792 10 1793 6 356 182 1310 244 856 22 361 2 858 112 1802 2 1319 4 864 4 1321 2 1803 2 1322 2 1323 6 870 6 367 4 1325 86 872 98 1327 2 1328 4 1331 2 874 2 1809 2 875 26 373 8 1813 10 1815 4 1814 6 879 6 1336 14 880 2 1821 4 1340 4 883 4 1823 2 389 2 391 4 1347 2 1828 2 393 2 1351 2 890 2 1353 12 1354 204 1833 2 1355 2 894 26 1837 20 1838 70 396 2 1839 2 896 2 897 2 1359 2 1840 6 898 566 1844 88 899 2 402 8 401 2 1846 22 1847 46 903 2 406 4 1850 48 411 2 1368 6 1376 6 1863 2 1377 2 419 4 914 2 421 2 420 4 918 198 425 6 1381 2 1380 112 924 2 1870 8 1384 6 428 6 927 2 429 4 430 2 1386 12 431 8 933 4 434 6 436 6 1877 18 1878 2 1394 6 1879 2 1883 2 1400 112 1401 2 449 2 1885 6 453 46 1405 2 1407 2 1408 6 945 22 946 10 1893 290 1894 2 1896 192 1897 192 949 2 1898 6 1416 2 951 2 464 4 1419 2 952 2 1420 16 1422 8 467 2 955 132 472 20 1424 8 956 2 957 2 476 30 1912 2 1427 4 1429 2 961 2 1913 4 964 2 1432 4 967 2 971 82 1918 46 1436 4 1442 2 489 198 978 30 491 30 1924 2 981 6 1448 14 1927 2 
986 2 137 1 63 2 709 2 
986 2 292 2 
1165 2 986 2 840 2 1132 2 1702 2 372 2 886 2 
986 2 1692 2 886 2 
698 2 986 2 886 2 
1703 2 679 2 709 2 
986 2 886 2 
1158 2 679 2 
328 2 986 2 
1892 2 679 2 709 2 
1172 2 1078 2 709 2 
296 2 1205 2 709 2 
1577 2 709 2 1705 2 
1502 2 709 2 1149 2 
358 2 679 2 
781 2 986 2 
26 2 1172 2 
1205 2 773 2 
1767 2 1705 2 
1209 2 1149 2 
1800 2 679 2 
1541 2 1149 2 
1068 2 1705 2 
1205 2 919 2 
1264 2 1172 2 
1660 2 1892 2 679 2 709 2 
1660 2 1892 2 1392 2 679 2 709 2 
251 2 679 2 709 2 
826 2 679 2 709 2 
498 2 502 2 540 2 1738 2 
1165 2 1132 2 917 2 442 2 
1165 2 840 2 1132 2 1671 2 917 2 442 2 
1165 2 249 2 986 2 1132 2 1702 2 886 2 
20 2 528 2 
1165 2 53 2 1132 2 1702 2 
751 2 1705 2 
280 2 1149 2 
1428 2 1172 2 
1205 2 123 2 
1205 2 1335 2 1149 2 
1403 2 1205 2 1149 2 
1205 2 1149 2 605 2 
1205 2 993 2 1149 2 
1132 2 1165 2 1785 2 576 2 454 6 1091 6 1004 2 1538 2 
1000 2 679 2 
1087 2 626 2 1360 6 1291 2 713 2 1275 2 6 2 842 4 96 4 990 2 98 2 136 2 1603 2 348 2 1503 2 959 2 172 2 1855 2 
188 2 709 2 
222 2 
1109 2 1112 2 1813 26 1453 2 1218 2 757 2 380 2 995 2 1580 2 1820 2 882 4 387 2 1462 6 648 2 1829 4 271 2 1586 2 529 6 531 2 1473 2 660 4 782 2 1477 2 283 2 175 6 543 4 907 2 290 2 1367 2 42 26 913 2 920 2 1153 2 304 4 1616 2 1620 2 1157 2 1512 4 438 4 1052 2 1167 2 1519 8 448 2 1056 2 1888 2 824 4 214 2 586 2 720 4 1535 2 217 2 723 2 331 8 1299 2 463 2 1775 2 1305 2 1072 2 469 2 347 2 733 2 113 2 1082 2 850 6 119 2 1665 2 243 2 613 2 1089 2 1439 2 1441 2 487 4 142 2 143 2 983 2 1806 2 
1109 2 1112 2 1813 26 1453 2 1218 2 757 2 380 2 995 2 1580 2 1820 2 882 4 1462 6 648 2 1829 4 1586 2 529 6 531 2 660 1 1473 2 782 2 1477 2 1715 2 283 2 175 6 1133 2 543 4 907 2 290 2 1367 2 42 26 681 2 913 2 1497 2 920 2 1153 2 304 4 1616 2 1620 2 1157 2 1512 6 438 4 704 2 1052 2 1167 2 1519 8 448 2 1056 2 1888 2 824 4 214 2 586 2 720 4 1535 2 217 2 723 2 331 8 1299 2 463 2 1775 2 1305 2 1072 2 469 2 347 2 733 2 113 2 1082 2 850 6 119 2 1665 2 613 2 1089 2 1439 2 247 2 1441 2 487 4 142 2 143 2 983 2 1806 2 
1681 2 
475 2 404 2 
67 2 256 2 68 2 1812 2 3 2 988 6 1685 2 438 2 1813 12 634 2 441 2 1281 2 1052 2 1690 2 1170 2 1580 2 996 2 16 2 1178 2 1462 4 523 2 92 2 526 4 1586 2 778 2 531 2 1472 4 171 2 1473 2 1904 2 595 2 1305 2 400 4 108 4 1134 2 1365 10 1137 2 960 2 737 6 1255 2 1788 2 790 2 42 6 1728 8 913 2 184 2 1257 4 1666 2 125 2 1435 2 1494 2 129 4 49 4 685 2 487 2 1383 8 1507 6 980 2 1154 2 1449 4 
67 2 256 2 68 2 1812 2 988 8 1685 2 438 2 1813 12 634 2 441 2 1281 2 1052 2 1690 2 1170 2 1580 2 996 2 16 2 1459 2 1462 4 523 2 92 2 526 4 1586 2 778 2 531 2 1708 2 1472 4 171 2 1473 2 397 4 1904 2 595 2 1305 2 400 4 108 4 1134 2 1365 10 1137 2 960 2 737 8 1255 2 1788 2 790 2 42 6 1728 8 913 2 184 2 1666 2 1257 4 125 2 1435 2 1494 2 129 4 1315 2 49 4 685 2 487 2 1383 8 1507 6 980 2 1154 2 1449 4 
184 2 1257 4 1435 2 67 2 256 2 1494 2 129 2 108 4 1685 2 526 2 1134 2 685 2 778 2 960 2 737 2 1472 2 1507 2 16 2 
67 2 256 2 68 2 1812 2 3 2 988 6 1685 2 438 2 1813 12 634 2 441 2 1281 2 1052 2 1690 2 1170 2 1580 2 996 2 16 2 1178 2 1462 4 523 2 92 2 526 4 1586 2 778 2 531 2 1708 2 1472 4 171 2 1473 2 1904 2 595 2 1305 2 400 4 108 4 1134 2 1365 6 1137 2 960 2 737 6 1255 2 790 2 42 6 1728 4 913 2 184 2 1257 4 1666 2 125 2 1435 2 1494 2 129 4 49 4 685 2 487 2 1383 4 1507 4 980 2 1154 2 1449 4 
67 2 256 2 932 2 68 2 1812 2 3 2 988 6 1685 2 438 2 1813 12 634 2 441 2 1281 2 1052 2 1690 2 1170 2 1580 2 996 2 16 2 1178 2 1462 4 523 2 92 2 526 4 1586 2 778 2 531 2 1472 4 171 2 1473 2 1904 2 595 2 1305 2 400 4 108 4 1134 2 1365 6 1137 2 960 2 737 4 1255 2 790 2 42 6 1728 4 913 2 184 2 1257 4 1666 2 125 2 1435 2 1494 2 129 4 49 4 685 2 487 2 1383 4 1507 6 980 2 1154 2 1449 4 
67 2 256 2 68 2 1812 2 3 2 988 6 1685 2 438 2 1813 12 634 2 441 2 1281 2 1052 2 1690 2 1170 2 1580 2 996 2 16 2 1178 2 1462 4 523 2 92 2 526 4 1586 2 778 2 531 2 1472 4 171 2 1473 2 1904 2 595 2 1305 2 400 4 108 4 1134 2 1365 6 1137 2 960 2 737 6 1255 2 1788 2 790 2 42 6 1728 4 913 2 184 2 1257 4 1666 2 125 2 1435 2 1494 2 129 4 49 4 685 2 487 2 1383 8 1507 6 980 2 1154 2 1449 4 
67 2 256 2 932 2 68 2 1812 2 3 2 988 8 1685 2 438 2 1813 12 634 2 441 2 1281 2 1052 2 1690 2 1170 2 1580 2 996 2 16 2 1178 2 1462 4 523 2 92 2 526 4 1586 2 778 2 531 2 1472 4 171 2 1473 2 1904 2 595 2 1305 2 400 4 108 4 1134 2 1365 10 1137 2 960 2 737 6 1255 2 1788 2 790 2 42 6 1728 8 913 2 184 2 1257 4 1666 2 125 2 1435 2 1494 2 129 4 49 4 685 2 487 2 1383 8 1507 8 980 2 1154 2 1449 4 
67 2 256 2 68 2 1812 2 3 2 988 6 1685 2 438 2 1813 12 634 2 441 2 1281 2 1052 2 1690 2 1170 2 1580 2 996 2 16 2 1178 2 1462 4 523 2 92 2 526 4 1586 2 778 2 531 2 1472 4 171 2 1473 2 1904 2 595 2 1305 2 400 4 108 4 1134 2 1365 10 1137 2 960 2 737 6 1255 2 1788 2 790 2 42 6 1728 8 913 2 184 2 1257 4 1666 2 125 2 1435 2 1494 2 129 4 49 4 685 2 487 2 1383 8 1507 6 980 2 1154 2 1449 4 
499 2 254 2 256 2 3 2 988 12 1684 2 1685 2 1216 6 1453 2 757 2 1689 6 1690 2 995 2 1693 2 996 2 16 2 15 2 1698 2 1462 6 523 2 1234 1 526 4 1002 7 529 6 778 2 531 2 533 6 1472 4 535 1 1473 2 1475 2 1016 2 782 4 1715 2 1243 2 1249 2 1485 2 543 4 1255 2 290 2 790 2 42 24 1257 4 1493 6 1494 2 46 6 49 8 1743 2 57 1 1746 4 304 4 1507 8 1749 2 1512 6 67 2 68 2 1279 2 806 2 1281 2 1052 2 76 6 1519 4 317 6 819 2 320 2 580 1 92 2 95 6 586 2 1535 2 331 4 336 6 1299 12 1775 2 595 2 1305 2 108 4 109 2 111 2 113 2 1082 2 850 6 852 1 613 2 125 4 355 6 359 2 1089 2 129 4 133 2 1092 1 1096 2 1563 2 142 2 143 2 1329 1 1812 2 1109 2 1112 2 1813 46 634 2 380 2 1580 2 1820 2 882 2 1586 2 1831 4 656 2 171 4 400 6 175 8 1134 2 1137 2 1365 2 907 2 1859 2 913 2 681 2 184 2 190 2 423 1 685 2 923 7 1383 2 1154 2 932 4 1876 8 1391 6 438 4 441 4 448 2 1170 2 1891 6 943 2 720 4 217 2 723 2 463 2 1904 2 469 2 228 2 1910 2 728 6 233 1 731 6 960 2 737 4 1661 6 739 2 1665 2 966 2 1666 2 1435 2 746 6 1204 2 487 4 979 10 980 2 983 2 1449 4 
499 2 254 2 256 2 1109 2 3 2 1812 2 988 12 1112 2 1684 2 1685 2 1216 6 1813 48 634 2 1453 2 757 2 1689 6 1690 2 380 2 1693 2 995 2 1580 2 1820 2 996 2 882 2 15 2 16 2 1698 2 1462 6 523 2 526 4 529 6 1586 2 778 2 1831 4 531 2 654 2 533 6 656 2 171 4 1472 4 1473 2 1016 2 1475 2 782 4 1243 2 1715 2 400 6 1249 2 175 8 1134 2 1485 2 1365 2 1137 2 543 4 907 2 1255 2 1724 2 290 2 790 2 42 26 1859 2 681 2 913 2 184 2 1257 4 1493 6 46 6 1494 2 49 8 190 2 1743 2 685 2 1746 4 1383 6 304 4 1749 2 1507 8 1154 2 1512 6 67 2 68 2 1876 8 1391 6 806 2 1279 2 438 4 441 4 1281 2 76 6 1052 2 1519 8 448 2 1170 2 317 6 819 2 1891 6 320 2 943 2 824 2 92 2 95 6 586 4 720 4 1535 2 723 2 217 2 331 8 336 6 1299 12 463 2 1904 2 1775 4 595 2 1305 2 109 2 108 4 469 2 228 2 728 6 1910 2 111 2 731 6 113 2 1661 6 737 8 960 2 739 2 1788 4 1082 4 850 6 1665 2 966 2 1666 2 355 6 125 4 613 2 359 2 1204 2 746 6 1435 2 129 4 1089 2 133 2 487 4 1096 2 1563 2 979 10 980 2 142 2 143 2 983 2 1449 4 
499 2 254 2 256 2 1109 2 3 2 1812 2 988 12 1112 2 1684 2 1685 2 1216 6 1813 48 634 2 1453 2 757 2 1689 6 380 2 1690 2 1693 2 995 2 1580 2 1820 2 996 2 882 2 15 2 16 2 1698 2 1462 6 523 2 526 4 529 6 1586 2 778 2 1831 4 531 2 654 2 533 6 656 2 171 4 1472 4 1473 2 1016 2 1475 2 782 4 1243 2 1715 2 400 6 1249 2 175 8 1134 2 1485 2 1365 6 1137 2 543 4 907 2 1255 2 1724 2 290 2 790 2 42 26 1859 2 1728 4 681 2 913 2 184 2 1257 4 1493 6 46 6 1494 2 49 8 190 2 1743 2 685 2 1746 4 1383 6 304 4 1749 2 1507 8 1154 2 1512 6 67 2 68 2 1876 8 1391 6 806 2 1279 2 438 4 441 4 1281 2 76 6 1052 2 1519 8 448 2 1170 2 317 6 819 2 1891 6 320 2 943 2 824 2 92 2 95 6 586 4 720 4 1535 2 723 2 331 8 217 2 336 6 1299 12 463 2 1904 2 1775 4 595 2 1305 2 109 2 108 4 469 2 228 2 728 6 1910 2 111 2 731 6 113 2 1661 6 737 8 960 2 739 2 1788 4 1082 4 850 6 1665 2 966 2 1666 2 355 6 125 4 613 2 359 2 1204 2 746 6 1435 2 129 4 1089 2 133 2 487 4 1096 2 1563 2 979 10 980 2 142 2 143 2 983 2 1449 4 
254 2 256 2 3 2 988 16 1684 2 1685 2 1216 6 1453 2 757 2 1689 12 1690 2 995 2 1693 2 996 2 16 2 15 2 1698 2 1462 6 523 2 526 4 529 8 778 2 531 2 533 12 1708 2 1472 4 1473 2 1475 2 1016 2 782 4 1715 2 1243 2 1249 2 1485 2 543 4 1255 2 1724 2 290 4 790 2 42 24 1728 4 1257 4 44 2 1493 6 1494 2 46 6 49 8 1743 2 1746 4 304 6 1507 10 1749 2 64 2 1512 6 67 2 68 2 565 6 1047 2 1279 2 806 2 1281 2 1052 2 76 12 1519 10 317 6 819 2 320 2 824 2 92 2 95 6 586 4 1535 2 830 6 331 10 336 6 1299 10 1775 4 595 2 1305 2 109 2 108 4 111 2 113 4 1788 4 1082 4 850 8 613 2 125 4 355 12 359 2 1089 2 129 4 133 2 1317 2 1559 2 1096 2 1563 2 142 2 143 2 366 2 1812 2 1109 2 1112 2 1813 52 634 2 1334 6 380 2 1580 2 1820 2 882 4 390 6 1586 2 1831 4 891 2 654 2 656 2 171 4 1358 6 398 6 400 6 175 12 1134 2 1137 2 1365 6 1138 6 177 6 907 2 1859 2 681 2 913 2 184 2 1862 2 190 2 685 2 1383 6 1154 2 932 2 1876 8 1391 12 438 4 441 4 448 4 1170 2 1891 6 943 2 720 4 217 2 723 2 463 2 1904 2 469 2 228 2 1910 2 728 6 731 6 960 2 737 10 1661 6 739 2 1665 2 966 2 1201 6 1666 2 1435 2 746 12 1204 2 487 4 979 8 980 2 983 4 1449 4 
595 2 256 2 67 2 400 2 3 2 1812 2 108 2 988 4 1685 2 1813 4 1365 4 1137 2 960 2 1690 2 737 6 1255 2 1788 2 1170 2 996 2 1728 4 16 2 1666 2 1257 2 1494 2 129 4 49 2 92 2 778 2 1383 6 171 2 1472 4 1507 6 1154 2 1449 2 1904 2 
499 2 256 2 3 2 1812 2 1109 2 988 4 258 2 1112 2 259 2 1685 2 1813 28 1453 2 757 2 380 2 1690 2 762 2 995 2 1580 2 1820 2 996 2 882 3 16 2 1462 6 1586 2 529 6 778 2 531 2 171 2 1472 4 1473 2 1241 2 782 2 1715 2 400 2 175 8 1365 2 1137 2 543 4 1255 2 907 2 42 24 681 2 913 2 1257 2 1494 2 49 2 1259 3 1383 6 304 4 1507 6 427 2 1154 2 1512 6 67 2 68 2 438 4 1052 2 1880 2 448 3 1170 2 92 2 720 4 1535 2 217 2 723 2 1299 4 463 2 222 2 1904 2 595 2 1305 2 108 2 469 2 1073 2 737 6 960 2 1788 2 850 6 1665 2 1666 2 613 2 129 4 1089 2 487 4 979 2 1923 2 142 2 983 3 1449 2 
1639 2 1255 2 1812 2 
1639 2 1255 2 1812 2 
256 4 1109 2 1812 4 988 16 1451 2 1813 24 634 2 1453 2 757 2 380 2 381 4 1693 2 995 2 1580 2 1820 2 882 2 1698 2 998 2 1461 4 1462 6 526 4 1586 2 529 2 778 2 1831 2 531 2 653 2 1708 4 1472 4 171 4 660 2 1473 2 782 6 1715 2 400 4 1717 2 175 2 1134 2 1365 6 543 4 1255 6 907 2 1367 4 790 2 1371 2 42 16 911 2 1728 4 681 2 913 2 1257 2 1494 2 49 4 1496 2 685 2 1746 2 1383 6 1265 2 1507 12 1512 6 932 4 564 2 438 4 441 2 1281 2 1052 2 808 2 1519 4 1170 2 1175 2 1639 2 90 2 92 2 586 4 720 4 1770 2 1535 2 331 4 217 2 723 2 1296 2 1299 4 463 2 1775 4 346 2 1305 2 108 2 469 2 111 2 1658 2 731 2 737 12 1788 4 1082 4 850 2 1665 2 1794 2 125 4 613 2 1089 2 129 4 487 4 979 2 142 2 143 4 1449 2 
184 2 90 2 564 2 1496 2 1684 2 404 2 1813 4 731 2 409 2 1485 2 1052 2 157 2 926 2 1746 2 979 2 1299 2 42 2 
256 4 1109 2 1812 4 988 16 1451 4 1813 24 8 2 634 2 1453 2 757 2 380 2 381 4 1693 2 995 2 1580 2 767 2 1820 2 882 4 1698 2 1461 4 1462 6 523 2 526 4 1586 2 529 2 778 2 1831 2 531 2 1708 4 1472 4 171 4 1473 2 782 6 1715 2 400 4 1717 2 175 2 1134 2 1365 6 543 4 1255 6 907 2 1367 4 1369 2 790 2 1371 2 42 16 911 2 1728 4 681 2 913 2 1257 2 1494 2 49 4 1496 2 685 2 1383 6 1265 2 1507 12 931 2 1512 6 932 4 564 2 438 4 441 4 1281 2 1052 2 808 2 1519 4 1170 2 1523 2 1175 2 1639 2 90 2 92 2 586 4 720 4 1770 2 1535 2 331 4 217 2 723 2 1296 2 1299 2 463 2 1775 4 1305 2 108 2 469 2 111 2 731 2 737 12 1788 4 1082 4 850 2 1665 2 1794 2 125 4 613 2 1089 2 129 4 487 4 142 2 143 4 1449 2 
256 4 1109 2 1812 4 988 16 1451 2 1813 24 634 2 1453 2 757 2 380 2 381 4 1693 2 995 2 1580 2 1820 2 882 2 1698 2 1461 4 1462 6 523 2 526 4 1586 2 529 2 778 2 1831 2 531 2 1708 4 1472 4 171 4 660 1 1473 2 1015 2 782 6 1715 2 400 4 1717 2 175 2 1134 2 1365 6 543 4 1255 6 907 2 1367 4 790 2 1371 2 678 2 42 16 911 2 1728 4 1375 2 681 2 913 2 1257 2 1494 2 49 4 1496 2 685 2 1746 2 1383 6 1265 2 1507 12 1512 6 932 4 564 2 438 4 441 4 1281 2 1052 2 808 2 1519 4 1170 2 1175 2 1639 2 90 2 92 2 586 4 720 4 1770 2 1535 2 216 2 331 4 217 2 723 2 1296 2 1299 4 463 2 1775 4 1305 2 108 2 469 2 111 2 731 2 737 12 1788 4 1082 4 850 2 1665 2 1794 2 125 4 613 2 744 2 1089 2 129 4 487 4 979 2 142 2 143 4 1449 2 
0 2 985 2 4 2 5 3 989 2 9 2 11 2 12 2 991 3 13 2 995 2 14 2 15 2 18 2 19 2 999 24 23 2 24 2 25 2 1005 78 1010 2 1011 2 1009 24 1013 3 1014 2 1017 2 30 2 31 38 1019 2 1021 2 1024 2 34 20 35 4 36 2 38 78 1030 26 40 36 42 966 44 4 43 83 45 78 1032 2 1033 2 47 2 1035 2 50 6 51 2 1039 2 54 2 55 32 59 24 60 10 1042 32 62 2 64 2 1047 2 1048 4 1050 2 1049 4 75 6 1052 2 77 8 78 3 84 2 86 2 87 2 88 112 1057 2 89 2 91 2 1059 2 1061 8 1062 3 1064 14 100 2 101 4 1069 4 1070 3 104 8 105 2 1076 2 1075 2 1077 2 112 16 1080 2 113 46 114 4 117 80 119 2 1085 2 121 78 120 38 122 48 1086 2 126 2 1089 4 1090 2 132 10 1093 2 138 40 142 82 143 18 1099 2 1102 2 146 2 148 2 149 78 1109 8 1110 2 151 558 1112 2 154 38 155 2 156 2 1118 2 1120 8 159 12 160 106 162 38 164 2 1123 1 166 2 1124 2 167 2 1125 2 1126 2 169 2 1131 38 174 2 175 126 1135 2 1140 4 180 3 181 2 182 3 183 82 185 2 187 20 189 2 1145 2 1146 3 192 6 1151 2 193 78 1156 2 195 1 197 2 1162 3 1161 4 202 3 203 8 1166 8 206 16 205 2 1169 2 1171 4 210 3 1173 2 208 2 1177 78 212 2 1180 3 214 4 1182 2 1183 22 1184 1 1187 2 217 2 218 3 219 8 1190 2 1192 2 1193 2 228 2 1194 15 227 2 229 4 230 3 1195 2 1196 2 235 24 1198 2 238 2 1200 2 240 2 242 2 1204 8 1206 8 245 2 1207 38 255 2 1214 2 258 2 260 6 261 2 1217 2 1219 2 262 234 1220 2 1221 4 1226 2 263 22 1228 2 265 2 1231 2 268 2 1232 2 1233 78 1235 2 270 2 1237 4 274 78 1239 2 275 2 1241 2 276 2 1242 38 1244 2 279 2 1245 2 281 6 282 3 283 2 1248 2 1249 8 287 36 288 2 1254 2 290 84 291 6 293 2 294 12 295 2 297 2 300 2 1259 2 301 2 1260 2 1261 78 1262 2 302 158 304 12 305 4 1268 10 1269 80 1271 2 1270 2 1272 2 1273 1 308 6 309 1 1278 38 310 10 311 80 1280 2 1282 36 1283 2 314 2 1285 3 315 2 1287 8 1286 4 316 2 318 76 319 2 1289 2 1288 2 320 2 1290 8 322 22 1292 2 1293 34 1294 2 324 10 1295 66 329 2 332 20 331 178 333 2 335 26 338 2 339 3 1299 10 1298 2 1300 2 342 2 1301 3 1303 8 1302 2 344 78 1305 2 1308 2 349 16 351 3 353 80 354 2 1309 2 357 2 1311 2 359 4 1314 2 1316 2 362 60 1317 2 1318 3 1320 3 364 8 365 2 1324 38 366 2 369 2 368 2 1330 3 1332 3 370 2 374 2 376 14 1333 2 377 2 378 2 379 2 380 2 382 2 1337 76 1338 2 386 3 1341 2 1342 2 1343 2 1346 9 1345 166 1348 2 1350 14 1349 2 1352 80 395 2 1356 3 1357 2 1360 6 1361 80 1362 2 403 2 405 3 408 2 1364 2 1366 2 410 3 413 2 414 2 415 2 416 2 1378 2 1379 4 422 10 424 2 426 4 1385 2 427 2 1388 2 433 2 435 2 1393 2 438 8 1395 2 440 2 439 14 443 12 444 4 445 4 1396 2 1397 2 446 38 447 3 1398 2 1399 2 448 16 450 2 451 2 452 8 1404 3 455 2 1409 2 1411 2 456 2 1412 80 457 2 460 2 1418 2 463 2 465 6 466 2 1423 2 1421 2 468 2 470 2 469 2 471 4 1425 2 1426 4 1430 1 1431 1 480 8 483 2 482 2 484 3 1437 2 1440 2 1439 2 488 6 487 8 1445 10 490 3 492 3 493 2 495 8 497 2 504 3 1452 2 509 2 1453 2 1454 2 515 6 516 2 518 102 1456 2 1458 2 519 60 1460 2 520 2 1462 10 522 1 1465 16 1467 14 525 38 529 32 531 2 532 40 1471 2 534 2 1473 2 1475 2 538 2 539 4 1480 2 1483 2 1484 38 542 2 543 480 544 3 1489 2 545 2 546 2 1491 4 550 3 552 2 1495 2 554 2 1499 80 1500 2 1501 10 561 3 1508 2 1511 2 1512 1112 1513 2 563 2 1515 2 1516 4 567 4 1519 183 1520 2 573 2 1524 2 1526 2 1528 2 1529 2 583 2 1530 2 1532 234 1535 2 587 24 592 80 593 60 594 2 1539 2 596 2 601 4 602 2 1547 3 604 4 606 60 607 22 608 2 609 2 610 2 611 2 1550 14 1552 2 1555 2 613 2 1556 2 615 2 616 2 1559 2 1560 2 1562 2 1561 2 619 4 622 2 1566 4 625 2 1569 80 1568 38 1571 2 627 2 630 2 1575 2 1576 2 1579 2 1580 2 637 2 639 2 640 2 641 16 642 2 643 2 645 2 1584 2 650 2 1586 2 1585 4 651 80 1588 2 655 2 656 16 658 3 1589 38 661 2 660 3 662 2 664 2 1595 2 1596 2 1597 2 1599 4 1601 2 1602 2 666 12 667 6 669 2 1605 20 673 80 674 4 675 2 677 2 1607 2 681 324 680 2 682 2 683 2 684 4 1610 78 1611 4 1612 2 688 3 1613 1 689 8 1616 2 690 8 1617 10 691 1 694 2 1620 2 696 6 1624 2 700 3 701 40 1626 156 1627 38 1630 2 1629 2 706 80 1632 4 1631 6 707 2 1633 120 1636 2 1635 2 711 2 712 2 1641 2 1643 2 1644 2 718 2 719 1 1645 4 720 402 721 38 722 2 723 2 1646 2 1649 3 724 2 1653 2 1652 2 725 2 1654 2 1655 20 726 2 727 14 1657 104 729 2 733 2 735 20 736 2 738 2 739 2 741 4 1662 10 1665 84 742 2 743 2 745 2 747 3 749 4 1668 2 1669 2 1673 2 1676 20 1677 4 753 2 754 2 1680 2 755 2 1682 156 1683 66 1686 2 1687 3 1688 10 757 2 759 2 760 2 761 2 762 2 764 11 766 2 768 2 1701 95 1704 4 770 8 772 18 776 10 1706 16 780 2 1710 2 782 2 1712 10 1715 314 1716 2 1718 2 784 78 1719 2 1721 2 1720 156 786 2 787 52 1723 2 1727 2 1729 2 1730 7 1731 24 1735 2 1734 2 1739 2 1740 18 1742 2 794 34 1747 24 1749 8 1750 80 1751 20 802 2 803 2 1754 15 1756 2 804 4 805 2 806 22 807 158 1759 78 813 2 817 2 1762 22 820 2 821 2 1763 76 822 2 823 2 825 2 1764 2 1765 10 1766 2 827 2 828 2 1768 38 1769 2 829 38 1772 14 831 22 1773 6 834 2 835 2 836 112 837 2 1776 80 1778 2 1781 13 838 2 839 2 844 2 1784 10 1786 2 1787 2 846 2 847 2 1790 2 849 2 850 18 1795 2 1796 2 1798 2 1799 2 855 2 1801 38 860 4 861 2 863 61 865 22 867 2 869 2 1804 124 1805 2 871 2 1806 2 1807 4 1810 2 873 6 1811 1 1813 1174 876 1 877 2 878 158 1818 18 1817 38 1816 38 881 2 1819 2 1822 2 882 110 884 2 1824 1 1832 2 1830 2 1834 2 892 2 1835 2 893 2 895 2 1842 34 1843 2 1845 3 900 2 901 3 904 14 1848 2 1849 2 1851 22 905 78 1852 2 907 8 1854 2 1857 2 1856 80 908 9 910 2 909 2 912 2 913 2 1861 6 1862 2 1864 2 1865 2 1866 78 920 3 922 2 1867 2 1868 2 925 2 1871 78 1872 100 928 2 929 2 1873 2 1874 4 934 2 1875 2 935 2 936 2 1881 4 937 12 1882 2 939 2 940 2 1886 54 1888 86 1890 2 1889 2 947 2 1895 16 948 2 1899 8 1901 2 1900 4 950 2 1903 38 1906 2 953 2 1908 2 1911 4 958 2 962 38 965 2 966 2 969 1 1915 2 970 2 1917 78 972 2 1919 2 1920 2 973 3 974 2 975 2 1921 170 976 6 977 3 979 2 1925 3 982 2 983 46 1926 18 
1388 2 1112 2 1248 2 1076 2 175 2 1600 2 1135 2 1813 2 1080 2 1784 2 113 6 738 2 448 2 850 2 42 2 882 2 268 2 324 2 529 2 304 2 1652 2 983 2 1268 4 1070 2 
1388 2 1112 2 1248 2 1076 2 175 2 1600 2 1135 2 1813 2 1080 2 1784 2 113 6 738 2 448 2 850 2 42 2 882 2 268 2 324 2 529 2 304 2 1652 2 983 2 1268 4 1070 2 
1388 2 1112 2 1248 2 1076 2 175 2 1600 2 1135 2 1813 2 1080 2 1784 2 113 6 738 2 448 2 850 2 42 2 882 2 268 2 324 2 529 2 304 2 1652 2 983 2 1268 4 1070 2 
1570 2 1573 2 1112 2 1545 2 1251 2 175 2 1813 10 203 2 607 5 735 4 77 2 787 2 1881 2 1605 4 1120 2 1287 2 1606 2 42 4 518 6 882 3 1861 4 294 2 999 3 1290 2 298 2 93 2 1465 4 486 2 1414 4 587 3 1444 3 332 4 426 2 832 2 690 2 1872 2 1652 2 1676 4 1303 2 983 3 
1570 2 1573 2 1112 2 1813 10 203 2 77 2 1881 2 1120 2 1287 2 518 6 882 2 999 2 1290 2 1465 4 93 2 1414 4 587 2 332 4 832 2 1652 2 1303 2 1545 2 175 2 1251 2 607 4 735 4 787 2 1605 4 42 4 1606 2 294 2 1861 4 298 2 1735 2 192 2 486 2 1444 2 426 2 690 2 1872 2 1617 2 1676 4 983 2 
1570 2 1573 2 1112 2 1813 10 203 2 77 2 1881 2 1120 2 1287 2 518 6 882 2 999 2 1290 2 1465 4 93 2 1414 4 587 2 332 4 832 2 1652 2 1303 2 1545 2 175 2 1251 2 607 4 735 4 787 2 1605 4 42 4 1606 2 294 2 1861 4 298 2 1735 2 192 2 486 2 1444 2 426 2 690 2 1872 2 1617 2 1676 4 983 2 
1570 2 1573 2 1112 2 1813 10 203 2 77 2 1881 2 1120 2 1287 2 518 6 882 2 999 2 1290 2 1465 4 93 2 1414 4 587 2 332 4 832 2 1652 2 1303 2 1545 2 175 2 1251 2 607 4 735 4 787 2 1605 4 42 4 1606 2 294 2 1861 4 298 2 1735 2 192 2 486 2 1444 2 426 2 690 2 1872 2 1617 2 1676 4 983 2 
1570 2 1573 2 1112 2 1813 10 203 2 77 2 1881 2 1120 2 1287 2 518 6 882 2 999 2 1290 2 1465 4 93 2 1414 4 587 2 332 4 832 2 1652 2 1303 2 1545 2 175 2 1251 2 607 4 735 4 787 2 1605 4 42 4 1606 2 294 2 1861 4 298 2 1735 4 192 4 486 2 1444 2 426 2 690 2 1872 2 1617 4 1676 4 983 2 
869 2 828 2 5 2 888 2 859 2 976 2 
563 2 538 2 972 2 5 2 1888 2 1491 2 223 2 
1540 2 1130 2 1390 2 199 2 1163 2 1628 2 1813 10 74 2 477 2 1689 2 1914 1 42 8 1492 1 17 1 267 2 854 2 1640 2 857 1 1531 2 52 2 1208 2 458 2 1267 1 1473 2 496 2 623 2 
1621 2 1907 2 281 4 601 2 844 2 1813 6 9 2 203 4 607 14 77 6 1881 2 1120 6 1287 4 1286 2 42 6 1861 4 549 2 19 2 1290 6 749 2 1206 2 1735 2 1465 10 718 2 192 2 1237 2 799 2 690 4 1617 3 1303 6 
853 2 1737 2 1670 2 375 1 1813 1 1051 2 326 2 530 2 735 2 332 2 1006 2 412 2 1604 4 478 6 1171 2 657 2 42 1 1676 2 
853 4 1737 2 1670 2 326 2 1051 2 530 2 735 2 332 2 1006 2 412 4 1604 4 478 6 657 2 1171 4 1676 2 
853 8 1737 2 1670 2 375 1 1813 1 326 8 1051 2 530 2 735 2 332 2 1006 6 412 8 1604 4 478 10 657 2 1171 8 42 1 1676 2 
853 2 1737 2 1670 2 1051 2 530 2 735 2 332 2 412 2 1604 2 478 2 657 2 1171 2 1676 2 
1568 4 1569 6 149 10 1682 18 151 124 629 10 260 2 1813 150 510 26 1117 24 262 84 878 16 763 4 14 8 764 11 160 42 1455 4 162 4 1701 22 521 90 1233 6 1345 50 1585 4 1352 6 651 6 1005 6 1589 4 1128 2 660 4 1242 4 1018 8 1361 6 1715 58 783 12 901 2 784 6 1720 36 543 112 905 6 788 2 38 24 673 6 1856 6 908 7 42 134 182 4 1860 2 681 58 43 8 45 10 1732 8 1866 10 1499 6 1261 6 1610 4 921 4 1382 10 302 16 925 8 193 24 560 26 1871 6 562 18 1269 6 1045 4 1512 248 198 2 700 2 701 2 307 4 1626 17 934 8 1278 4 311 6 72 4 1631 4 807 16 446 4 1519 28 937 7 1759 6 1285 2 815 4 1177 10 1404 2 1532 92 829 4 1183 15 585 6 720 88 459 2 1773 4 339 2 462 8 592 6 1903 4 345 2 344 6 1776 6 1304 2 1657 42 474 10 1789 24 1662 8 117 24 1084 2 1083 24 851 2 353 6 1665 14 121 10 360 2 1312 4 748 90 1313 1 1917 6 1089 8 1801 4 1921 34 868 2 1804 12 492 6 142 14 1446 2 144 4 1324 4 1677 4 1678 2 
1389 2 1569 2 1512 45 1213 4 198 2 149 2 1108 2 1274 2 1682 2 1626 2 934 2 151 6 629 2 1276 2 7 2 506 2 311 2 1813 46 706 6 807 4 1117 2 1519 37 878 4 938 2 1054 2 572 2 14 2 1339 4 1402 2 385 2 1177 2 1582 2 769 2 165 2 944 2 720 20 1352 2 215 4 589 2 462 2 660 2 592 2 345 2 103 2 1361 2 1715 3 954 2 1363 2 841 2 1546 2 1720 2 1659 2 407 2 474 2 1253 2 543 20 1789 2 963 2 1083 2 353 2 42 44 1665 2 1553 2 121 2 182 1 1860 2 681 3 43 6 45 2 360 2 1312 2 1089 2 128 2 131 2 1866 2 1741 2 862 2 796 2 1443 2 866 2 1382 2 302 4 868 2 925 2 1614 2 492 3 1564 2 142 2 1447 2 1210 2 1678 2 696 4 
1568 4 1569 4 1108 2 149 6 1682 10 151 24 1813 78 1688 2 262 24 878 10 512 2 14 2 160 16 162 4 1457 4 769 2 388 2 1233 4 1345 8 1585 4 1005 4 651 4 1352 4 652 8 1589 4 1242 4 1713 4 1361 4 1715 28 901 2 784 4 1363 10 1720 6 407 10 543 44 905 4 1853 2 788 2 673 4 908 3 1370 4 42 70 1860 2 681 30 43 6 45 4 916 4 1866 4 1499 4 1261 4 1037 4 1150 8 302 10 925 2 1871 4 1269 4 1389 10 1512 104 198 2 1623 8 1626 10 934 2 1278 4 311 4 312 8 1631 2 807 10 446 4 1519 14 1759 4 1054 2 1177 4 1532 24 829 4 1183 8 720 36 339 2 590 4 102 16 592 4 1903 4 344 4 1776 4 599 32 1657 8 1081 2 1662 4 117 8 851 2 1665 6 353 4 121 4 360 2 1089 2 1917 4 1801 4 1921 30 248 4 1922 2 1095 16 868 2 1804 14 492 2 142 6 1324 4 1677 4 1678 2 
1569 4 1512 40 198 2 149 2 700 1 934 2 151 8 1626 2 1682 2 311 4 1813 28 1631 2 807 6 937 1 1519 14 878 6 1285 2 1054 2 14 2 764 1 1177 2 1404 2 1701 9 1183 5 1585 2 720 14 1352 4 1773 2 1128 2 660 2 592 4 345 2 103 2 1304 2 1361 4 1715 12 1720 2 543 14 1662 4 42 26 1665 2 353 4 121 2 1860 2 681 12 43 4 45 2 360 2 1089 2 1866 2 1610 2 1921 6 302 6 868 2 925 2 492 2 142 2 1677 2 1678 2 
85 2 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 
399 1 559 1 1884 1 1438 1 392 1 1129 1 

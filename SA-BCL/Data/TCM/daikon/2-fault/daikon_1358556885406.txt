#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 81 1090 988 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isFloat()Z
utilMDE.Assert:assertTrue(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.Quant:union([I[I)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3_36()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_106()Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_19()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ModBitTracker:num_samples()I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:modulus([I)[I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.sequenceString.MemberString:enabled()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_70()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([D)[D
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfo:isPointer()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.JavaParser:jj_3_14()Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:new_ppt()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:justified()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I | OPERATOR | 54584 | != -> <=
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_73()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eq(FF)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:noDups([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_30()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:elementIsIntegral()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_85()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaCharStream:FillBuff()V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3_3()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:ne(II)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:relate_var()V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:BeginToken()C
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:gte(II)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_137()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3_27()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_2_10(I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3R_72()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_3R_114()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3_35()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_22()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.JavaParser:jj_3R_89()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_97()Z
daikon.Quant:eq(II)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_99()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_149()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_180()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:lte(II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_86()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_12()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:sameLength([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_25(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_ntk()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_13()Z
daikon.VarInfo:has_typeof()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:min([I)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPointerFileRep()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Quant:slice([III)[I
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.visitor.FormatCommand:getCommand()I
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_sets()I
daikon.Quant:eq(DD)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_104()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Invariant:logDetail()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:hasTypeOf()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_117()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_126()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_51()Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_110()Z
daikon.PptSlice1:num_samples()I
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.sequenceScalar.Member:enabled()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice2:arity()I
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3_21()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_164()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_47()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_210()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_1()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eq(JJ)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_124()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isString()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7599 | return null
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 2 1362 2 1366 2 1661 4 171 2 1887 2 1611 2 1613 2 1475 2 234 4 269 2 953 2 1444 2 1400 2 1170 2 822 2 1381 2 1755 2 453 2 42 6 1327 2 620 2 520 2 
139 2 1362 5 1755 8 1366 8 78 2 1661 12 171 4 1887 4 42 15 652 6 1373 4 1342 2 1456 4 1327 8 953 4 1444 4 226 6 
1771 4 856 2 366 4 1466 2 1214 10 24 2 88 2 1248 62 1440 4 701 4 145 4 1638 2 975 2 1720 4 950 2 263 8 92 2 440 4 338 2 473 6 184 2 11 2 381 2 1314 2 637 2 984 2 842 2 844 4 1753 2 782 4 1840 2 344 2 311 2 1645 4 389 2 390 4 1486 4 1767 14 1240 4 519 10 
499 2 1160 2 1375 2 239 2 405 2 1479 2 1351 2 278 2 515 2 757 2 
764 2 1899 2 1833 2 1042 2 1716 2 1433 2 181 4 431 2 28 2 
476 2 153 2 967 2 1334 2 1447 6 1673 6 1498 2 1831 2 924 6 728 2 931 2 
422 2 113 4 1726 4 998 6 712 2 28 2 1579 2 1833 2 963 2 1818 6 772 6 1523 6 994 2 
287 8 1362 12 1742 2 1366 16 1688 2 1661 26 171 10 28 6 1887 10 1499 8 400 6 68 4 1833 6 234 10 1069 2 1663 8 1696 4 953 10 380 2 1444 10 1669 2 822 6 1755 16 78 4 277 2 42 29 222 2 1327 16 1210 8 520 4 
893 6 664 4 
1375 2 
829 2 1635 2 431 2 1798 2 438 2 1590 2 380 2 1312 2 1379 2 580 4 844 4 1480 2 717 2 1084 2 1645 2 644 2 647 2 651 2 1485 2 1709 2 1605 2 1560 2 1660 2 1211 2 524 2 1216 2 28 4 910 2 1833 4 263 2 1043 2 1403 2 1104 2 1840 2 1108 2 1625 2 218 2 1233 2 685 2 551 2 163 4 420 4 995 2 885 2 
1879 2 287 18 1562 4 1362 22 1366 32 1688 2 1661 48 171 16 28 4 1887 16 1499 6 1501 6 209 2 400 4 949 2 1833 4 1373 4 837 4 234 6 953 16 1444 16 822 4 1642 8 1807 2 1755 32 1200 6 129 6 1898 4 42 52 488 2 652 6 1456 4 1327 32 619 4 1791 2 1209 6 252 4 520 2 226 6 
263 2 92 2 473 2 
660 2 1101 2 1446 2 274 2 1775 2 1624 10 644 2 1612 2 1734 22 487 2 1202 2 1357 2 756 2 1662 2 
1546 2 
0 2 1244 2 369 2 502 2 1369 10 371 1 1256 2 1257 2 7 16 1131 1 1588 2 1138 2 14 2 238 1 509 2 1697 2 127 2 1142 32 384 1 512 2 246 2 648 2 1705 2 653 6 1487 2 1390 2 795 2 1391 2 796 2 1824 2 1273 2 661 2 1712 2 907 2 25 2 668 2 1495 3 28 32 398 2 806 3 1396 2 1503 4 1397 2 808 1 1833 34 1042 2 264 1 401 6 266 4 815 3 403 2 406 5 1173 1 273 3 1730 1 1175 10 920 6 1841 1 413 2 546 2 922 3 550 4 549 2 1517 2 925 2 923 3 415 1 46 2 1183 2 418 2 691 2 826 2 1304 2 827 2 1849 2 1848 1 1306 2 1413 2 1061 2 940 1 697 4 1193 2 1195 2 570 16 1535 2 834 2 1421 2 1198 3 577 4 1543 3 185 2 1073 3 72 2 843 4 448 2 188 2 582 2 305 2 1863 2 1319 2 1864 2 1079 2 309 2 716 2 1083 2 1758 2 82 6 1434 2 83 2 1872 2 1555 2 1324 24 1325 2 1766 1 1651 2 1874 1 1207 2 1875 32 1558 2 1329 2 964 2 590 6 731 1 591 6 203 1 322 2 1565 2 466 4 1773 4 972 2 866 2 210 2 1341 1 472 3 599 6 1781 24 1575 2 989 2 103 16 613 2 1453 3 1455 3 616 2 492 2 1458 16 1794 2 1905 2 
1203 2 1833 2 
1833 4 327 2 235 2 
1465 2 1464 4 1001 2 1002 2 1003 2 1469 4 1004 12 1471 182 1477 30 507 12 12 2 510 4 1011 10 1012 198 511 2 1018 8 514 2 1482 2 1025 12 1484 2 1026 4 516 20 1488 204 1028 2 1030 70 20 2 517 4 518 2 1031 4 521 4 525 6 527 6 526 6 26 14 1497 12 28 10 1039 328 1502 4 1041 2 531 26 29 6 1044 244 536 2 31 4 535 6 1045 2 32 2 1046 26 1508 2 1509 6 539 28 1511 2 34 2 1512 244 36 4 35 2 37 2 38 118 1515 192 542 6 544 6 547 4 548 14 1052 8 43 2 1056 2 1519 2 1520 4 553 4 47 2 555 12 556 4 558 4 557 2 559 6 1524 2 1060 2 50 4 51 10 52 2 1527 198 57 2 565 2 62 8 569 112 568 2 571 2 1534 2 64 6 572 6 67 6 1536 2 1068 20 576 6 1071 4 70 2 1072 2 1074 14 1544 6 579 16 1553 4 1085 2 1554 22 585 54 586 4 1086 2 1559 60 588 2 589 4 1088 30 1564 2 593 6 1568 26 595 2 597 2 1097 2 95 2 96 6 1100 8 603 10 604 2 97 6 98 4 1103 2 1110 2 1112 20 1114 132 614 2 615 2 107 2 618 2 621 28 109 12 1119 2 626 12 1121 2 1122 2 630 6 1584 8 632 30 1126 2 634 2 119 16 1130 2 1591 4 1592 6 636 2 126 2 1140 6 1595 2 1597 48 1145 6 1598 30 643 28 1147 4 1600 6 1601 12 1602 2 1148 2 649 22 1603 26 656 2 137 4 658 198 1606 2 1154 4 662 328 663 60 666 2 144 6 669 8 1157 106 1158 4 147 2 1162 2 671 22 148 2 1615 2 1165 2 1164 2 672 8 1167 2 150 2 673 14 674 4 1616 4 152 18 677 4 1620 4 680 6 1177 2 1623 2 1627 2 159 6 686 46 1181 2 162 6 1180 2 688 2 690 6 1187 32 692 30 167 2 1633 20 1634 92 696 4 172 2 703 52 178 10 707 4 187 8 1641 4 1199 6 714 2 719 4 1646 2 1201 2 1653 2 724 6 730 2 729 6 1656 2 198 6 1658 8 1213 2 1215 2 1217 68 738 2 739 2 208 2 744 2 1221 6 1664 6 1666 2 213 2 1665 140 1667 2 1670 4 750 6 751 2 1672 2 1231 12 1230 2 1676 2 217 2 220 2 753 4 754 20 223 4 1238 2 758 198 1239 6 225 2 1681 12 227 4 1243 4 1683 6 1246 6 1684 10 1247 26 1686 8 763 46 232 4 1690 4 771 4 1693 6 1694 6 774 2 1260 6 240 4 780 2 1698 98 1699 26 1701 432 785 2 786 2 1703 8 1267 2 789 2 790 2 792 6 250 2 254 6 1711 2 1272 204 800 2 1275 60 1715 84 802 6 803 2 258 8 1719 2 259 50 804 64 1280 24 260 2 261 2 809 192 1723 2 1284 2 268 4 270 6 818 2 1728 20 1290 6 1729 46 1292 4 824 336 1731 4 1732 8 276 20 1735 8 825 6 1299 4 282 2 1740 6 1305 6 1741 2 832 48 292 2 1308 2 1743 2 1744 10 1310 4 294 60 835 2 836 6 1748 2 296 4 298 4 299 198 302 6 1315 224 845 8 1751 2 1316 86 1320 2 1754 2 1323 2 1762 14 851 2 1326 2 1768 2 1769 4 316 30 1770 26 318 8 854 6 1331 8 319 14 858 2 320 2 323 12 324 2 325 2 865 290 1336 566 1778 4 1337 6 867 4 330 6 869 16 1339 198 870 88 1345 2 873 4 874 2 337 386 339 244 875 2 1783 2 341 22 1784 6 343 20 1786 2 1349 30 1350 2 880 4 345 4 1789 4 1353 30 1354 26 1356 64 351 2 355 376 359 26 1358 2 1359 4 1360 26 1795 18 367 30 886 4 1364 4 1368 4 373 6 1800 46 891 2 377 2 1378 132 892 2 894 28 382 14 387 4 1812 2 1813 2 391 2 1385 2 1821 4 394 6 1826 4 905 2 906 2 397 2 1393 2 908 2 1830 30 911 432 1833 10 1398 2 1837 2 917 4 408 6 409 4 411 2 412 182 1843 2 1842 94 1405 6 1406 112 416 2 928 2 929 2 1845 2 417 6 1407 2 930 2 1846 2 1847 4 936 2 1410 2 427 4 941 2 1414 2 428 112 430 6 1854 2 944 18 946 4 432 6 1856 2 1421 2 1423 2 439 2 1428 82 442 2 444 4 957 30 958 4 959 46 1865 160 1432 2 451 106 1868 4 456 24 458 2 962 6 1437 2 966 198 968 6 969 228 973 6 1441 2 470 66 976 6 979 12 981 4 1893 6 1894 2 983 8 986 2 987 6 480 112 481 2 1448 28 1450 2 1449 2 482 4 1451 2 484 198 485 2 486 2 1900 2 990 2 1454 16 1902 2 1457 26 493 74 1904 6 1460 4 
752 1 899 2 1194 2 1047 2 
1228 2 1047 2 
68 2 263 2 635 2 1829 2 1710 2 1570 2 1047 2 
1883 2 635 2 1047 2 
295 2 635 2 1047 2 
301 2 596 2 1194 2 
635 2 1047 2 
596 2 56 2 
1125 2 1047 2 
596 2 1192 2 1194 2 
1194 2 721 2 399 2 
860 2 494 2 1194 2 
1115 2 1106 2 1194 2 
1436 2 1194 2 199 2 
596 2 676 2 
1577 2 1047 2 
810 2 721 2 
85 2 494 2 
1115 2 965 2 
788 2 199 2 
596 2 1858 2 
1152 2 199 2 
897 2 1115 2 
494 2 336 2 
419 2 721 2 
596 2 1192 2 1654 2 1194 2 
1578 2 596 2 1192 2 1654 2 1194 2 
596 2 335 2 1194 2 
596 2 1102 2 1194 2 
1599 2 460 2 1650 2 1443 2 
255 2 1862 2 561 2 23 2 1016 4 1278 2 386 2 346 2 1734 6 1417 4 1093 2 1504 2 1372 2 265 2 978 2 378 2 1793 2 236 2 
1722 2 1194 2 
228 2 263 2 1829 2 455 2 
228 2 263 2 30 2 1829 2 455 2 1570 2 
68 2 263 2 635 2 1829 2 1561 2 1047 2 
1043 2 474 2 
1332 2 68 2 263 2 1829 2 
1115 2 143 2 
746 2 199 2 
952 2 721 2 
506 2 494 2 
1058 2 494 2 199 2 
1159 2 494 2 199 2 
494 2 641 2 199 2 
1105 2 494 2 199 2 
116 6 1829 2 263 2 1587 2 1892 6 1287 2 1204 2 1328 2 
596 2 1506 2 
546 2 
0 2 1244 2 1369 8 1127 2 1257 2 1588 2 1138 2 509 2 1808 4 1142 4 512 2 648 2 1487 2 795 2 796 2 1273 2 661 2 907 2 28 26 398 2 1395 2 1503 2 808 2 1833 26 1042 2 264 2 401 2 266 4 149 2 402 2 1510 2 1173 4 1175 8 157 2 920 2 550 2 1517 2 280 2 46 2 827 2 1409 4 1849 2 288 2 1413 2 697 4 1535 4 706 2 1421 2 179 2 577 2 72 2 843 4 582 2 305 2 1864 2 1079 2 82 4 1872 2 1875 6 1207 2 964 2 591 2 1565 2 1773 4 972 2 974 2 1890 2 599 6 105 2 882 2 616 6 1678 2 1458 6 1118 2 1679 2 1794 2 
0 2 1244 2 1369 8 1127 2 1257 2 1588 2 1138 2 509 2 1808 4 1142 4 512 2 648 2 18 2 1487 2 795 2 796 2 1273 2 661 2 907 2 28 26 398 2 1395 2 1503 2 1282 2 808 2 1833 26 1042 2 264 2 401 2 266 4 149 2 402 2 1510 2 1173 2 1175 8 157 2 920 2 550 2 549 2 1517 2 46 2 827 2 1409 4 1849 2 1413 2 697 4 1535 4 706 2 1421 2 179 2 577 2 72 2 448 2 843 4 582 2 305 2 1864 2 1079 2 82 6 1872 2 1875 6 1207 2 964 2 1657 2 591 2 1565 2 1773 4 972 2 974 2 1890 2 599 6 989 2 105 2 882 2 616 6 1678 2 1458 6 1679 2 1794 2 
469 2 
407 2 1301 2 
476 2 1617 2 1334 2 1548 2 450 2 1643 2 1673 2 1718 2 567 2 1496 4 1610 2 850 2 173 2 924 2 755 2 1802 4 955 2 932 2 
364 2 827 2 1244 2 1849 2 54 2 697 2 1796 2 567 2 173 2 1255 2 1421 2 1802 4 769 2 1695 4 1588 2 709 2 776 4 955 2 1138 2 843 2 1548 2 450 2 1643 2 783 2 850 2 462 2 1027 2 1489 2 728 2 1490 2 1334 4 734 2 1718 4 1496 4 1610 2 28 6 1834 6 1094 2 1833 12 599 4 1288 4 476 4 1617 2 540 4 541 2 1447 6 1673 4 610 4 1517 2 1234 2 924 6 161 2 755 2 352 2 993 2 931 2 760 2 496 2 1582 2 932 2 
364 2 827 2 1244 2 1849 2 54 2 697 2 1796 2 567 2 173 2 1255 2 1421 2 1802 4 769 2 1695 4 1588 2 709 2 776 4 955 2 1138 2 843 2 1548 2 450 2 1643 2 783 2 850 2 462 2 1027 2 1489 2 1490 2 967 2 1334 4 734 2 1718 4 1496 4 1610 2 28 6 1834 6 1094 2 1833 12 599 4 1288 4 476 4 1617 2 540 4 541 2 1447 6 1673 6 610 4 1517 2 1234 2 924 4 161 2 755 2 352 2 993 2 931 2 760 2 496 2 1582 2 932 2 
364 2 827 2 1244 2 1849 2 54 2 697 2 1796 2 567 2 173 2 1255 2 1421 2 1802 4 769 2 1695 4 1588 2 709 2 776 4 955 2 1138 2 843 2 1548 2 450 2 1643 2 783 2 850 2 462 2 1027 2 1489 2 1490 2 1334 4 734 2 1718 4 1496 4 1610 2 28 6 1831 2 1834 6 1094 2 1833 12 599 4 1288 4 476 4 1617 2 540 4 541 2 1447 6 1673 6 610 8 1517 2 1234 2 924 6 161 2 755 2 352 2 993 2 931 2 760 2 496 2 1582 2 932 2 
364 2 827 2 1244 2 1849 2 54 2 697 2 1796 2 567 2 173 2 1255 2 1421 2 1802 4 769 2 1695 8 1588 2 709 2 776 4 955 2 1138 2 843 2 1548 2 450 2 1643 2 783 2 850 2 462 2 1027 2 1489 2 1490 2 967 2 1334 4 734 2 1718 4 1496 4 1610 2 28 6 1831 2 1834 10 1094 2 1833 12 599 4 1288 4 476 4 1617 2 540 4 541 2 1447 8 1673 8 610 8 1517 2 1234 2 924 6 161 2 755 2 352 2 993 2 931 2 760 2 496 2 1582 2 932 2 
364 2 827 2 1244 2 1849 2 54 2 697 2 1796 2 567 2 173 2 1255 2 1421 2 1802 4 769 2 1695 8 1588 2 709 2 776 4 955 2 1138 2 843 2 1548 2 450 2 1643 2 783 2 850 2 462 2 1027 2 1489 2 1490 2 1334 4 734 2 1718 4 1496 4 1610 2 28 6 1831 2 1834 10 1094 2 1833 12 599 4 1288 4 476 4 1617 2 540 4 541 2 1447 6 1673 6 610 8 1517 2 1234 2 924 6 161 2 755 2 352 2 993 2 931 2 760 2 496 2 1582 2 932 2 
1244 2 766 2 1255 2 5 6 1257 2 769 2 1692 2 776 4 509 2 1015 7 783 4 512 2 1704 6 787 1 1708 2 1027 2 1487 2 1489 2 1490 2 1032 6 1273 2 1718 4 1496 4 28 24 1503 2 1042 2 811 2 266 4 1288 6 540 8 541 2 1053 1 1517 2 549 2 550 2 1054 2 46 2 1059 2 1300 2 827 2 285 2 54 2 567 2 63 2 575 2 838 10 577 2 1070 2 843 4 582 2 1546 6 305 2 1547 2 1079 2 1548 2 82 6 1550 2 312 4 850 2 315 7 591 2 1334 4 1565 12 1772 6 1773 4 1335 1 327 6 1094 2 599 6 606 2 877 2 610 2 105 2 106 2 883 2 352 2 616 6 1582 2 364 2 115 2 114 2 1796 2 1369 4 1127 2 1802 4 118 6 1588 2 1138 2 1142 2 648 2 392 6 902 8 141 2 142 1 1608 1 909 6 1610 2 398 2 1833 46 1834 2 401 2 1617 2 679 2 1173 1 1175 4 157 4 920 2 921 1 924 4 161 2 1185 2 931 4 932 2 1409 4 1849 2 694 2 697 4 173 2 702 4 434 6 1421 2 179 2 708 6 1424 2 1859 2 955 2 186 2 448 2 1864 2 450 2 1643 2 1644 2 718 2 1435 2 1647 6 1203 6 462 2 1205 1 1652 6 1875 8 1207 2 964 2 195 1 967 4 734 4 972 2 476 4 477 2 749 2 1447 12 1673 8 1675 1 1234 2 1235 6 755 2 491 6 1458 6 993 2 760 2 496 2 1680 2 
364 2 1244 2 114 2 115 2 1796 2 1369 8 765 2 5 6 1255 2 766 2 1127 2 1257 2 769 2 1802 4 1692 2 118 6 1588 2 776 4 1138 2 509 2 1142 2 783 4 512 2 1704 6 648 2 392 6 1027 2 1708 2 1487 2 1489 2 1490 2 1032 6 902 8 1273 2 141 2 1718 4 909 6 1496 4 1610 2 398 2 28 26 1831 4 1503 4 1834 2 1042 2 1833 48 811 2 401 2 266 4 1288 6 1617 2 540 8 679 2 541 2 1175 8 157 4 920 2 1054 2 550 4 549 2 1517 2 924 8 46 2 1736 2 161 2 1059 2 1300 2 1185 2 931 4 932 2 285 2 1409 4 827 2 1849 2 694 2 54 2 697 4 567 2 63 2 702 4 173 2 1535 2 434 6 1421 2 575 2 708 6 838 10 179 2 1424 2 1859 2 1070 2 577 4 955 2 186 2 448 2 843 4 1546 6 582 2 1547 2 305 2 1864 2 1548 2 1079 2 450 2 1644 2 1643 2 718 2 1550 2 82 6 312 4 1647 6 850 2 1435 2 1203 6 462 2 1652 6 1207 2 1875 8 964 2 591 2 1565 12 1334 4 1772 6 734 4 1773 4 327 6 972 2 1094 2 599 6 476 4 477 2 606 2 877 2 749 2 1447 12 1673 8 610 6 105 2 106 2 1234 2 1235 6 883 2 491 6 755 2 352 2 616 6 1458 6 993 2 1582 2 496 2 760 2 1680 2 
364 2 1244 2 114 2 115 2 1796 2 1369 8 765 2 5 6 1255 2 766 2 1127 2 1257 2 769 2 1802 4 1692 2 118 6 1695 4 1588 2 776 4 1138 2 509 2 1142 2 783 4 512 2 1704 6 648 2 392 6 1027 2 1708 2 1487 2 1489 2 1490 2 1032 6 902 8 1273 2 141 2 1718 4 909 6 1496 4 1610 2 398 2 28 26 1831 4 1503 4 1042 2 1833 48 1834 6 811 2 401 2 266 4 1288 6 1617 2 540 8 679 2 541 2 1175 8 157 4 920 2 1054 2 550 4 549 2 1517 2 924 8 46 2 1736 2 161 2 1059 2 1300 2 1185 2 931 4 932 2 285 2 1409 4 827 2 1849 2 694 2 54 2 697 4 567 2 63 2 702 4 173 2 1535 2 434 6 1421 2 575 2 708 6 838 10 179 2 1424 2 1859 2 1070 2 577 4 955 2 186 2 448 2 843 4 1546 6 582 2 1547 2 305 2 1864 2 1079 2 1548 2 450 2 1644 2 1643 2 718 2 1550 2 82 6 312 4 1647 6 850 2 1435 2 1203 6 462 2 1652 6 1207 2 1875 8 964 2 591 2 1565 12 1334 4 1772 6 734 4 1773 4 327 6 972 2 1094 2 599 6 476 4 477 2 606 2 877 2 749 2 1447 12 1673 8 610 6 105 2 106 2 1234 2 1235 6 883 2 491 6 755 2 352 2 616 6 1458 6 993 2 1582 2 496 2 760 2 1680 2 
1244 2 765 2 766 2 1255 2 5 6 1257 2 769 2 1692 2 1695 4 776 4 509 2 1014 2 783 4 512 2 1704 6 1027 2 1708 2 1487 2 1489 2 1270 6 1490 2 1032 12 1273 2 1718 4 1496 4 28 24 1503 4 1042 2 811 2 266 4 1288 6 540 8 541 2 1293 6 549 2 550 4 1517 2 1054 2 46 2 1736 2 1059 2 1300 2 827 2 285 2 830 2 54 2 567 2 63 2 1535 2 575 2 838 8 577 4 1070 2 843 4 582 2 1546 12 305 2 1547 2 1548 2 1079 2 82 6 1550 2 312 4 850 2 591 4 86 6 1334 4 1565 10 1772 6 1773 4 327 12 1094 2 599 6 606 2 877 2 610 6 105 4 106 2 883 2 352 2 616 8 1582 2 364 2 115 2 114 2 1796 2 1369 10 1127 2 633 2 1802 4 1129 6 118 6 1588 2 1138 2 1142 4 639 6 648 2 392 6 902 8 141 2 909 6 1610 2 398 2 1831 4 1834 6 1833 52 401 4 1617 2 1175 10 410 6 157 4 920 4 924 10 927 2 161 2 1185 2 931 4 932 2 1409 6 1849 2 694 2 1412 6 697 4 173 2 702 4 174 2 434 6 1421 2 179 2 708 6 1424 2 1859 2 955 2 447 6 186 2 448 2 1864 2 450 2 1643 2 1644 2 718 2 1435 2 1647 12 1203 12 462 2 1652 12 1875 12 1207 2 727 2 728 2 964 2 197 6 967 2 468 2 734 4 972 2 471 2 476 4 477 2 749 2 1447 16 1673 10 1234 2 1235 6 755 2 491 6 1458 8 993 2 760 2 496 2 1680 2 
54 2 1334 4 1796 2 1496 2 1831 2 173 2 1833 4 1834 4 1094 2 769 2 1802 2 1695 4 776 2 1288 2 476 4 540 2 1548 2 450 2 541 2 1447 4 1643 2 1673 6 610 6 850 2 1234 2 924 6 462 2 755 2 1489 2 993 2 931 2 1582 2 496 2 760 2 932 2 
1244 2 1796 2 4 2 1127 2 1802 2 769 2 1588 2 776 2 1138 2 509 2 127 2 1142 3 512 2 385 2 648 2 1487 2 1489 2 1273 2 1496 2 28 24 398 2 1831 2 1833 28 1042 2 1834 2 401 3 266 4 1288 2 540 2 679 2 541 2 157 2 546 2 1051 2 549 2 1517 2 924 6 46 2 931 2 691 2 932 2 827 2 1409 4 1849 2 54 2 697 4 58 2 173 2 1421 2 179 2 838 2 843 4 448 2 582 2 305 2 1864 2 1079 2 1548 2 450 2 1643 2 82 6 850 2 462 2 1651 2 1875 8 1207 2 964 2 591 3 1334 4 1565 4 1773 4 972 2 598 2 1094 2 599 6 476 4 1447 4 1673 6 610 6 1234 2 755 2 352 2 1236 3 616 6 1458 6 993 2 1582 2 496 2 760 2 
364 2 827 2 1244 2 1849 2 54 2 697 2 1796 2 567 2 173 2 1255 2 1421 2 1802 4 769 2 1695 8 1588 2 709 2 776 4 955 2 1138 2 843 2 1548 2 450 2 1643 2 783 2 850 2 462 2 1027 2 1489 2 1490 2 1334 4 734 2 1718 4 1496 4 1610 2 28 6 1831 2 1834 10 1094 2 1833 12 599 4 1288 4 476 4 1617 2 540 4 541 2 1447 6 1673 6 610 8 1517 2 1234 2 924 6 161 2 755 2 352 2 993 2 931 2 760 2 496 2 1582 2 932 2 
423 2 364 2 1244 2 827 2 1849 2 54 2 697 2 291 4 567 2 173 2 1255 2 1421 2 769 2 1802 4 1695 8 1588 2 776 4 955 2 1138 2 843 2 1752 2 1548 2 450 2 1643 2 783 2 850 2 462 2 1027 2 1489 2 728 2 1490 2 1334 4 734 2 1718 4 1496 4 1610 2 28 6 1831 2 1834 10 1094 2 1833 12 599 4 1288 4 476 4 1617 2 540 4 541 2 1447 8 1673 6 610 8 1517 2 1234 2 924 8 161 2 755 2 352 2 993 2 931 2 760 2 496 2 1582 2 932 2 
1338 2 1489 2 1582 2 
1338 2 1489 2 1582 2 
364 2 1244 2 1369 4 230 2 1255 2 1127 2 1257 4 1802 2 1132 2 1588 2 1695 4 1010 2 776 2 1138 2 509 2 1142 2 1143 2 783 2 512 2 648 2 1707 2 1487 2 1489 4 655 2 1029 2 798 2 1273 2 1718 4 1496 2 28 16 398 2 1831 4 1503 4 1833 24 1042 2 1834 6 266 4 915 2 1288 4 33 2 1510 4 540 4 1173 2 1175 4 157 6 550 4 549 2 1517 2 924 12 46 2 161 2 1185 2 931 4 1303 2 932 2 827 2 1849 2 694 2 937 2 697 4 567 2 700 2 702 2 175 2 1421 2 838 2 179 2 1859 2 577 4 955 2 73 4 448 2 843 4 582 2 305 2 1864 2 1079 2 450 4 82 6 312 2 1875 2 728 4 1087 2 964 2 967 4 1565 4 1334 4 1772 2 734 4 1773 4 1774 4 972 2 1338 2 599 6 211 2 476 4 1447 16 1673 12 610 6 755 2 616 2 1458 2 1903 2 993 2 1582 6 496 2 
33 2 1617 2 1244 2 1565 2 1772 2 1550 2 63 2 312 2 28 2 611 2 1765 2 1833 4 838 2 224 2 1029 2 1301 2 1087 2 
364 2 1244 2 1369 4 230 2 1255 2 1127 2 1586 2 1257 4 1802 2 1132 2 1588 2 1695 4 1010 2 776 2 778 2 1138 2 509 2 1142 4 783 4 512 2 648 2 1027 2 1487 2 1489 4 1029 2 1273 2 1718 4 1496 2 28 16 398 2 1831 4 1503 4 1833 24 1042 2 1834 6 266 4 915 2 1288 4 33 2 1510 4 540 4 1175 4 157 6 550 4 549 2 1517 2 924 12 46 2 161 2 1185 2 931 4 1303 2 932 2 827 2 1849 2 694 2 937 2 697 4 833 2 567 2 700 2 702 2 175 2 1421 2 179 2 1859 2 577 4 955 2 73 4 448 2 843 4 582 2 305 2 1864 2 1079 2 450 4 82 6 1875 2 728 4 1087 2 964 2 967 4 1565 2 1334 4 1772 2 734 4 1773 4 1774 4 972 2 1338 2 599 6 211 2 476 4 1447 16 1673 12 610 6 755 2 357 2 616 2 1458 2 1581 2 1903 4 993 2 1582 6 496 2 
364 2 1244 2 1369 4 230 2 1255 2 1127 2 1257 4 1802 2 1132 2 1588 2 1695 4 1010 2 776 2 1138 2 509 2 1142 2 783 4 512 2 648 2 1266 2 1027 2 1487 2 1489 4 1029 2 659 2 1273 2 1718 4 528 2 1496 2 28 16 398 2 1831 4 1503 4 1833 24 1042 2 1834 6 266 4 915 2 1288 4 33 2 1510 4 540 4 1173 1 1175 4 157 6 550 4 549 2 1517 2 924 12 46 2 161 2 1185 2 931 4 1303 2 932 2 827 2 1849 2 694 2 937 2 697 4 567 2 700 2 702 2 175 2 1421 2 838 2 179 2 1859 2 577 4 955 2 73 4 448 2 843 4 582 2 305 2 1864 2 1079 2 450 4 82 6 312 2 1875 2 728 4 1087 2 964 2 967 4 1565 4 1334 4 1772 2 734 4 1773 4 1774 4 972 2 862 2 1338 2 599 6 211 2 476 4 1573 2 1447 16 1673 12 610 6 755 2 616 2 1458 2 1903 2 993 2 1582 6 496 2 
996 76 997 2 999 4 1000 2 1 2 2 78 3 36 4 2 1006 2 1007 2 7 100 8 2 1008 2 1009 2 9 2 10 2 14 2 13 2 1014 2 1020 10 1019 20 1021 72 1022 2 17 76 1023 38 1024 2 21 2 1033 2 1034 2 1036 76 22 2 1037 20 1038 3 27 4 28 940 1040 14 1042 8 1048 2 1049 4 1050 4 39 3 40 2 1051 2 41 2 42 24 44 2 1055 38 45 2 46 2 1057 2 48 2 49 2 1061 2 55 7 58 2 1062 2 59 3 60 2 61 2 1064 2 65 2 1066 2 1065 2 66 2 1067 76 1070 2 1073 2 1076 12 1077 36 74 2 1078 22 1079 2 75 2 76 1 1081 2 1080 72 77 14 1082 12 80 76 79 22 1083 2 82 1086 81 2 1089 2 1090 2 87 2 89 2 1091 4 1092 10 91 3 1096 2 1095 78 93 3 94 24 1099 2 99 2 1109 2 101 2 102 4 104 2 105 46 103 14 1113 4 1116 4 1117 78 110 14 111 4 112 162 115 2 1123 2 1124 16 1128 2 117 2 1135 36 120 2 123 2 1136 78 122 2 1138 2 1137 2 125 2 1141 2 1142 107 128 10 1144 36 1146 2 1149 3 130 2 1150 2 1151 6 133 226 132 4 136 20 1153 2 140 1 141 2 1156 3 145 2 146 2 1161 34 1163 2 149 2 1166 2 151 2 1169 3 1171 2 156 2 1173 2 1174 2 1176 2 1175 179 157 2 1178 2 158 2 160 2 1179 2 1184 2 165 2 1189 2 1190 6 166 2 1191 36 168 2 169 2 1193 2 170 10 171 6 1196 2 1197 2 179 2 182 2 1198 2 183 2 185 2 186 2 189 2 190 2 191 152 192 2 193 3 1207 2 1206 34 1208 12 1209 6 196 2 200 76 202 2 201 40 1212 2 205 3 206 4 204 78 207 4 1218 2 210 2 1220 2 212 2 1222 2 1223 2 1224 76 214 2 215 2 1225 2 1226 2 1227 3 1229 2 216 2 221 78 1237 2 1236 2 1240 2 1241 2 1242 2 226 6 1244 2 1245 4 229 2 1249 2 1250 76 1251 2 1253 2 1252 2 1254 1 231 2 1256 2 1258 2 1259 2 1257 16 233 2 237 2 238 1 1262 4 1261 2 1263 1 1264 36 242 2 243 10 1265 3 245 2 244 2 246 2 248 76 247 2 249 1 1268 3 1269 2 251 2 1273 4 1271 2 1274 2 256 3 1276 22 1279 3 1281 38 262 2 264 3 266 468 1283 78 267 18 1286 2 272 96 273 3 1291 544 275 2 1294 20 1295 2 279 78 1296 2 1298 2 1302 3 284 8 287 6 286 2 1304 2 290 3 1307 2 1309 2 293 2 1311 154 1313 2 300 12 303 2 304 2 305 2 1317 2 306 3 307 2 1318 2 309 2 1321 4 1322 2 313 2 1324 15 1325 2 1327 12 1329 2 317 2 1330 18 1333 16 321 2 326 2 328 2 329 3 333 2 1340 22 332 24 334 4 1343 18 1344 2 1346 8 1347 2 1348 10 1352 2 347 8 1355 4 349 2 353 3 354 2 356 6 360 76 358 26 362 2 361 14 363 2 1361 2 1362 10 366 2 365 3 368 2 1363 112 1366 12 1365 74 1367 2 369 2 370 2 1369 174 1370 2 1371 2 374 3 375 2 1373 4 376 2 1374 2 1376 2 1377 2 1380 34 1382 3 384 15 383 4 385 2 1383 2 388 1 1384 2 1387 2 1388 3 393 24 1389 2 1390 16 1391 2 396 2 395 2 398 82 1395 82 1396 2 400 4 1397 2 401 46 1399 2 402 2 1401 2 404 6 413 2 414 2 418 2 424 2 1409 12 425 2 1411 2 429 2 1415 2 1418 10 433 4 1419 2 435 152 1420 76 1421 2 437 2 1422 2 1425 3 441 2 1427 2 443 2 446 76 1429 2 445 4 448 308 1430 2 1431 4 452 3 459 2 461 9 463 3 1438 72 465 36 1439 40 466 32 467 2 468 2 471 2 472 2 1444 6 475 2 1445 154 478 24 479 2 483 36 489 2 1452 36 1453 2 490 2 1458 26 1459 2 495 66 497 4 1461 18 1462 2 1467 3 501 4 502 14 503 2 504 20 1470 76 1472 1 505 2 1474 112 1476 166 508 40 509 8 1478 4 512 2 1481 4 513 2 1486 2 1487 2 1491 78 1492 226 523 2 522 2 1493 4 1499 6 1500 60 529 2 532 2 533 16 534 30 1505 2 1507 2 537 8 538 2 1513 2 1514 2 543 2 545 76 1516 2 1517 2 549 318 1518 4 1521 4 1522 2 554 2 1525 2 1528 2 560 3 562 2 563 2 1529 8 1530 3 564 2 1531 2 566 38 570 52 1537 2 573 60 574 4 1538 24 575 2 1540 38 1541 1 1543 2 1545 2 581 4 582 2 1547 16 1549 22 583 4 1552 2 1555 2 1556 2 1557 4 587 3 590 14 591 16 1563 2 1562 4 592 4 1565 6 1566 2 1567 2 594 3 599 8 602 102 1571 22 605 2 1572 2 607 2 609 22 1575 2 1574 152 1576 2 612 54 613 2 1580 102 616 14 617 2 622 2 623 38 624 2 625 2 627 2 629 82 1583 2 1585 2 631 76 633 2 1588 2 1589 2 1594 2 638 2 1596 2 640 2 642 118 645 2 648 2 650 2 653 14 654 2 1604 2 1607 2 665 2 668 2 667 154 1609 2 670 2 1614 2 675 2 1618 4 678 2 1621 2 1622 10 682 2 681 78 1626 2 683 2 1628 2 684 60 1629 14 687 9 1630 34 689 2 1631 2 1632 1 695 2 697 6 698 78 1636 2 1637 2 705 2 704 2 706 2 711 2 1640 2 713 2 1642 8 715 2 1644 2 716 2 718 4 720 8 722 76 1648 4 723 2 725 4 726 6 727 2 1655 2 731 1 1659 2 732 2 735 2 736 2 1661 18 737 34 740 2 741 8 742 2 743 5 745 2 1668 2 748 2 1671 1 1677 2 1678 2 759 2 1679 2 1682 2 1685 2 762 2 1688 2 1687 2 766 2 768 6 1691 2 770 2 773 2 775 2 777 3 1697 2 782 2 1700 78 784 7 1702 2 791 24 1705 2 1708 16 793 26 794 38 797 48 799 2 1712 2 801 4 1713 14 1717 2 806 2 807 18 808 2 811 2 1721 2 812 2 814 78 813 4 815 2 816 2 817 2 819 2 820 3 1727 66 823 2 1733 2 1737 76 1738 2 826 2 1739 2 827 2 828 5 830 2 831 2 1746 2 1747 2 1745 8 834 2 838 2 839 2 840 8 841 2 843 6 847 2 1755 12 1757 2 1759 2 849 78 1760 2 1761 2 1763 2 852 60 853 2 855 38 857 36 859 2 1773 392 1776 76 863 2 864 2 1777 2 866 2 1779 10 871 2 872 2 1780 24 1781 61 1782 2 876 12 877 2 1787 2 879 2 1788 4 882 2 885 2 1797 2 887 2 1801 2 889 2 890 2 1805 2 1806 2 1807 4 1809 2 895 2 1810 2 1811 3 896 2 1814 4 1815 2 1816 2 1817 4 1820 2 1819 100 1822 2 900 2 901 3 1823 2 1824 14 904 2 1825 2 903 34 1827 120 1828 2 1832 8 912 2 1833 1144 913 76 914 2 1835 2 1836 38 1838 2 916 2 918 38 920 80 1841 1 922 3 923 2 925 2 927 4 933 2 934 3 935 4 1848 13 1849 2 938 2 939 2 940 1 1852 4 1851 8 942 8 1853 2 1855 1 943 2 945 3 947 2 948 38 949 2 1857 8 951 36 1860 10 954 2 953 6 956 2 1861 3 1863 2 1864 80 960 2 1866 2 1869 4 1870 2 1871 2 1874 1 1875 120 964 2 1876 18 1878 2 1877 2 1880 2 1881 2 1882 2 1885 2 971 2 970 2 972 2 1887 6 1888 2 1890 4 1891 38 977 76 980 2 982 2 1895 2 985 4 1896 2 988 2 1901 2 992 2 991 2 1905 2 
591 2 1409 2 53 2 938 2 1 2 1609 2 329 2 28 2 1779 2 1833 2 401 2 816 2 151 2 1806 2 1348 4 1142 2 128 2 105 6 1237 2 616 2 1875 2 1458 2 1207 2 48 2 
591 2 1409 2 53 2 938 2 1 2 1609 2 329 2 28 2 1779 2 1833 2 401 2 816 2 151 2 1806 2 1348 4 1142 2 128 2 105 6 1237 2 616 2 1875 2 1458 2 1207 2 48 2 
591 2 1409 2 53 2 938 2 1 2 1609 2 329 2 28 2 1779 2 1833 2 401 2 816 2 151 2 1806 2 1348 4 1142 2 128 2 105 6 1237 2 616 2 1875 2 1458 2 1207 2 48 2 
628 3 426 2 1886 2 1366 2 1037 4 1661 4 171 2 28 4 1887 2 570 2 1499 4 6 2 400 2 7 2 1833 10 332 3 401 3 1133 2 1780 3 953 2 1444 2 151 2 1755 2 1142 3 1082 2 1674 2 310 2 1019 4 1294 4 1873 2 42 4 1790 2 1518 2 1580 6 1327 2 1875 2 1207 2 194 4 136 4 283 2 
287 2 1362 2 628 2 426 2 1886 2 1366 2 1688 2 1037 4 1661 4 171 2 28 4 1887 2 570 2 1499 4 6 2 400 2 7 2 1833 10 332 2 401 2 1133 2 1780 2 953 2 1444 2 151 2 1755 2 1142 2 1082 2 1674 2 310 2 1019 4 1294 4 1873 2 42 4 1790 2 1518 2 1580 6 1327 2 1875 2 1207 2 194 4 136 4 283 2 
287 2 1362 2 628 2 426 2 1886 2 1366 2 1688 2 1037 4 1661 4 171 2 28 4 1887 2 570 2 1499 4 6 2 400 2 7 2 1833 10 332 2 401 2 1133 2 1780 2 953 2 1444 2 151 2 1755 2 1142 2 1082 2 1674 2 310 2 1019 4 1294 4 1873 2 42 4 1790 2 1518 2 1580 6 1327 2 1875 2 1207 2 194 4 136 4 283 2 
287 2 1362 2 628 2 426 2 1886 2 1366 2 1688 2 1037 4 1661 4 171 2 28 4 1887 2 570 2 1499 4 6 2 400 2 7 2 1833 10 332 2 401 2 1133 2 1780 2 953 2 1444 2 151 2 1755 2 1142 2 1082 2 1674 2 310 2 1019 4 1294 4 1873 2 42 4 1790 2 1518 2 1580 6 1327 2 1875 2 1207 2 194 4 136 4 283 2 
287 4 1362 4 628 2 426 2 1886 2 1366 2 1688 4 1037 4 1661 4 171 2 28 4 1887 2 570 2 1499 4 6 2 400 2 7 2 1833 10 332 2 401 2 1133 2 1780 2 953 2 1444 2 151 2 1755 2 1142 2 1082 2 1674 2 310 2 1019 4 1294 4 1873 2 42 4 1790 2 1518 2 1580 6 1327 2 1875 2 1207 2 194 4 136 4 283 2 
342 2 1619 2 1852 2 1297 2 1714 2 1804 2 
1035 2 342 2 372 2 926 2 308 2 120 2 1395 2 
1120 1 1849 2 1416 2 699 2 28 8 1889 2 950 1 1833 10 1539 2 1724 2 180 2 601 2 578 2 821 2 449 2 878 2 1867 1 344 1 16 2 881 2 1897 2 350 1 552 2 1652 2 1182 2 884 2 
1211 2 287 3 1562 2 1362 4 1366 6 1394 2 1688 2 1661 12 28 6 171 6 805 2 1887 6 1499 4 209 1 400 2 505 2 1833 6 1373 2 438 2 953 6 1444 6 242 2 1642 2 1755 6 1866 2 42 15 723 2 1116 2 1327 6 1209 4 226 4 
1289 2 1839 2 1075 2 206 2 846 6 584 2 1019 2 28 1 1294 2 868 2 1442 4 1569 2 1833 1 1219 2 136 2 121 1 1098 2 1639 2 
1289 4 1839 2 1075 2 206 4 846 6 584 2 1019 2 1294 2 868 4 1442 4 1569 2 1219 2 136 2 1098 2 1639 2 
1289 8 1839 6 1075 2 206 8 846 10 584 2 1019 2 28 1 1294 2 868 8 1442 4 1569 2 1833 1 1219 2 136 2 121 1 1098 8 1639 2 
1289 2 1075 2 206 2 846 2 584 2 1019 2 1294 2 868 2 1442 2 1569 2 1219 2 136 2 1639 2 
112 8 996 6 761 8 1463 2 365 3 629 6 500 2 2 4 762 2 3 4 1470 4 1476 30 1135 4 1136 4 1264 4 1017 16 15 2 642 14 1700 4 646 2 1814 2 17 4 1819 8 133 24 138 4 253 2 1273 2 1491 8 1492 24 1036 4 1155 4 1277 10 667 10 398 6 28 70 530 2 1833 78 913 4 266 44 1283 4 1285 2 1166 2 1402 2 154 2 820 1 1173 1 1291 24 1175 15 545 4 681 4 1844 10 549 29 279 4 164 4 281 1 1186 32 1188 2 421 4 1191 4 828 4 1851 4 698 4 1533 4 1745 2 435 11 1311 10 1067 4 1420 4 1749 10 951 4 69 4 710 2 446 4 1076 4 1077 4 448 27 1078 8 1864 6 80 4 82 103 1551 8 961 2 849 4 191 10 464 16 465 4 200 4 857 4 1773 36 736 2 1776 4 1092 2 334 2 1095 4 743 4 977 4 600 2 747 4 1445 10 602 16 340 2 1574 6 483 4 1111 8 1452 4 221 4 360 4 108 2 1792 8 1117 4 
996 2 828 2 629 4 365 2 55 2 2 4 762 2 698 4 1745 2 1311 6 1067 2 435 2 1420 2 1476 6 124 2 1136 4 1750 2 1076 4 448 12 1078 5 243 1 1864 2 82 40 961 2 646 2 849 4 191 2 135 2 134 2 1273 2 592 2 1773 14 736 2 667 6 1776 2 28 26 398 2 530 2 1833 28 266 14 1283 4 743 2 813 2 1166 2 1445 6 1169 1 154 2 1402 2 272 9 1173 2 1175 14 1291 8 1574 2 681 4 549 12 687 1 360 2 108 2 1737 2 
112 50 996 10 629 8 365 6 2 6 762 8 3 4 1250 24 1470 6 767 4 1476 34 379 18 1135 4 508 2 1136 6 1264 4 1593 4 241 4 779 4 243 7 1013 4 642 12 1700 6 646 2 1814 2 17 6 1483 90 1819 42 19 10 133 92 134 2 135 2 253 2 1273 8 1491 24 1492 84 1494 8 1036 6 257 26 667 16 398 14 28 134 530 2 1833 150 913 6 1283 6 266 112 1725 6 813 2 814 6 1166 8 404 2 1169 2 1402 2 820 4 272 22 1173 4 1175 28 1291 124 545 6 919 26 681 6 549 58 279 6 687 11 1408 24 1737 4 693 2 1191 4 1526 24 828 4 1851 5 55 4 698 6 1745 4 435 16 1067 10 1311 16 1420 10 951 4 1542 4 1750 2 446 6 1076 8 1077 4 448 58 1078 15 1864 14 1756 8 848 4 80 6 82 248 457 8 961 2 849 6 84 4 314 4 191 18 1649 2 465 4 592 2 200 6 857 4 1884 2 1773 88 736 8 90 10 1776 10 331 90 334 2 1095 6 743 4 977 6 1445 16 602 42 1224 24 340 2 1107 12 608 24 1574 36 483 4 1232 10 1452 4 221 6 360 10 108 2 1117 6 
996 2 1526 2 498 2 1850 2 365 2 629 6 500 2 289 2 2 2 762 2 631 6 1468 2 698 2 1532 4 1005 2 1799 2 767 2 1689 2 1473 2 435 2 1067 2 177 2 176 4 436 2 1311 4 1420 2 888 2 1749 2 297 2 1803 2 1134 2 1426 2 124 2 1136 2 1750 2 71 2 1139 4 448 6 1864 2 454 2 583 4 82 48 457 2 961 2 849 2 646 2 191 2 898 2 1706 2 131 2 19 2 657 2 733 2 1273 2 1277 2 861 2 1773 20 736 2 667 4 1776 2 90 2 28 44 398 2 530 2 1833 46 266 20 1283 2 1166 2 1445 4 1168 2 1402 2 154 2 155 2 1785 2 100 2 1172 2 1173 2 608 2 1175 36 1291 6 1574 2 681 2 219 2 1232 2 348 2 1844 2 549 6 360 2 108 2 1408 2 1188 2 
1392 2 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 
1386 1 1764 1 781 1 1063 1 1404 1 271 1 

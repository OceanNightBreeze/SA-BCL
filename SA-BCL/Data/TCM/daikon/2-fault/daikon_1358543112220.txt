#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 3 3 110 110 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 1339 1339 1415 1415 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 (284,1709) (877,1839) (877,1839) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 (284,1709) (877,1839) (877,1839) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 (284,1709) (877,1839) (877,1839) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 (284,1709) (877,1839) (877,1839) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 (284,1709) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 (284,1709) (284,1709) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 (284,1709) 
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 381 1516 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 381 1516 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParser:jj_3R_110()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:backup(I)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:has_typeof()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.Quant:subsetOf([D[D)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:FillBuff()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:intersection([I[I)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaCharStream:getBeginLine()I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_format_exists(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_88()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName:hasTypeOf()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_10()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Debug:logDetail()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_62()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:getConfidence()D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptName:isEnterPoint()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_30()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:gte(II)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONDITION | 128308 | if (x) -> if (!x)
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.visitor.FormatCommand:getCommand()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3_35()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3_13()Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariant:is_false()Z
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.ModBitTracker:num_sets()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsGT([II)Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_104()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:split(I)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptName:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3R_100()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:isPseudoArray()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.PptName:getSignature()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_14()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_57()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_2_17(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_4()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_169()Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptSlice2:arity()I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.ProglangType:baseIsString()Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeList:NodeList()V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_86()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_72()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_17()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_60()Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.PptSlice3:arity()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lt(II)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.ModBitTracker:num_vars()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:isDerived()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Ppt:Ppt()V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.Quant:gt(II)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:memberOf(F[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.ProglangType:isPointerFileRep()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaCharStream:getEndColumn()I
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isString()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1504 4 1004 2 447 2 770 2 1046 2 1144 2 672 2 634 2 1160 2 
1658 6 1066 2 731 2 365 2 915 2 1460 6 1129 2 725 6 1464 2 927 2 728 2 
142 2 270 6 907 2 599 6 1589 2 1160 2 1507 2 1752 6 1451 4 1225 4 634 2 1599 6 1858 2 
143 16 1329 2 1659 8 1431 16 1544 4 4 2 947 4 27 4 1160 6 454 2 312 8 1300 10 996 2 59 10 258 2 837 8 740 2 536 16 32 29 538 2 1098 6 1308 10 491 10 759 10 1679 4 389 26 1287 6 1081 12 634 6 1455 8 
750 6 196 4 
1696 2 
143 2 113 2 1431 2 991 2 1 2 914 2 364 2 947 2 1300 2 59 2 866 2 837 2 1461 2 536 2 1376 2 427 2 32 6 1098 2 1308 4 491 2 759 2 389 4 1081 2 
407 4 143 8 80 6 1431 8 491 4 895 6 27 2 1300 4 59 4 964 4 759 4 536 8 389 12 829 2 1081 5 32 15 1208 2 
330 2 667 4 891 2 971 4 1294 4 175 10 993 4 288 2 769 2 224 62 1056 2 401 2 1240 2 457 2 807 2 1337 4 262 4 1025 4 268 2 1345 4 1729 4 97 2 1118 2 812 2 539 4 321 2 217 14 1313 2 619 2 1217 4 1315 4 1260 2 1853 6 687 2 688 2 855 10 1767 8 1712 2 726 4 1539 2 
581 2 1751 2 1696 2 956 2 343 2 782 2 1822 2 1500 2 279 2 281 2 
330 2 1394 2 667 4 1399 2 454 2 119 2 1577 4 1196 2 1197 2 1338 2 1639 4 64 2 1204 2 746 2 66 2 67 2 470 2 244 2 572 2 626 2 73 2 1767 2 1714 2 634 4 1768 2 1360 2 144 2 1720 2 1160 4 1298 2 896 2 1841 2 262 2 1001 2 1727 2 708 2 159 2 1004 2 439 2 1626 2 499 2 1744 4 910 2 1186 2 
143 32 80 6 1429 8 1659 6 1431 32 1835 2 4 2 947 2 895 6 1160 4 1300 16 59 16 837 18 869 4 536 32 1373 2 209 6 1728 4 32 54 125 2 1850 4 1098 4 407 4 1212 6 1308 6 491 16 325 2 759 16 498 4 964 4 280 6 443 2 389 48 1287 4 761 6 1081 22 1569 4 634 4 763 2 
891 2 1767 2 1853 2 
127 2 1632 10 1758 2 1332 2 906 22 569 2 836 2 1354 2 742 2 417 2 1061 2 1096 2 1204 2 830 2 
447 2 453 6 673 1 1520 6 6 2 1528 2 1411 6 1139 2 350 2 1141 4 241 1 1283 1 934 2 1763 2 1420 2 827 1 473 2 22 1 1424 1 828 1 1044 2 941 2 1543 2 150 11 1160 30 1163 2 260 1 952 4 1440 2 838 4 1304 2 1666 2 1307 2 1786 2 1172 1 1067 2 846 2 1309 5 1316 6 1073 1 1074 2 1675 6 1800 1 1565 1 1806 5 174 4 1086 4 48 2 1190 2 1195 2 1688 1 865 1 868 2 1199 2 1695 4 293 2 1579 1 512 5 875 2 1210 2 300 2 1703 2 72 2 1588 2 414 1 634 32 1229 3 1602 3 1234 2 533 2 1607 2 642 2 1242 2 425 2 644 1 899 2 1495 2 99 2 1255 1 1384 2 1261 2 1262 2 1741 2 220 1 1387 2 1392 1 1514 2 1748 2 
1661 2 
1198 2 634 2 
1560 2 1045 2 634 4 
450 198 451 336 1402 2 920 2 456 2 8 6 7 92 459 2 461 8 925 2 924 204 462 64 11 2 465 4 1407 2 930 4 15 6 1412 2 931 2 1413 6 16 244 18 6 1419 16 19 2 1420 2 20 6 939 60 1426 182 1427 4 25 4 943 12 1433 4 1434 2 1435 2 1436 74 483 26 951 30 29 6 30 2 486 6 953 2 487 6 1442 112 33 2 34 2 962 2 1446 8 40 6 496 4 497 26 41 132 42 6 500 2 1453 6 967 2 503 6 49 2 504 6 972 4 973 4 506 2 54 4 974 2 62 2 61 2 63 2 510 2 979 86 980 2 1466 2 514 2 65 2 516 4 1470 8 1472 2 518 6 68 2 985 4 69 228 1479 2 75 6 1480 2 522 6 524 204 78 2 1486 198 527 2 992 6 529 20 83 20 86 2 997 28 90 2 535 10 92 4 93 2 1498 2 540 2 1499 10 542 4 545 192 547 18 104 2 1009 8 1008 2 548 2 549 60 107 2 1505 2 1506 160 1511 8 1012 386 553 6 112 6 1015 8 1017 6 555 6 1518 2 1020 2 120 8 1522 4 1022 2 1523 244 560 24 561 4 1027 4 562 12 1030 4 128 2 1032 198 567 2 1530 2 1036 4 568 30 1531 2 1038 30 571 2 135 2 1039 14 573 6 1041 12 1533 2 575 2 1537 28 141 6 140 118 1048 14 1051 20 582 2 1052 12 152 2 584 2 1054 4 1053 2 1057 26 1058 2 585 2 1550 112 587 4 1060 2 1551 2 1062 198 1064 6 591 60 1065 4 1068 2 1559 2 1069 20 598 2 1071 6 1070 2 1561 26 162 2 163 2 1562 2 1076 6 166 2 1563 4 1566 2 167 6 1080 4 604 46 605 6 1082 2 1572 20 1088 2 1089 30 178 140 609 2 1575 6 181 112 182 18 1094 48 1581 6 185 4 1100 4 186 10 617 290 190 2 1104 2 1591 4 625 26 627 6 193 2 195 18 630 2 1105 2 1106 182 632 30 634 10 1600 2 1107 4 200 6 637 4 1108 6 638 4 1605 2 1603 6 205 2 1609 84 208 12 1612 2 646 2 1614 6 1615 30 1115 2 647 2 649 26 1617 6 1618 4 1619 2 1620 112 216 2 1621 4 1120 6 1622 26 1623 8 1624 6 1122 26 655 8 654 8 1123 2 658 2 663 6 1628 2 1126 2 668 2 669 2 1633 4 670 2 225 8 1634 46 1635 2 226 4 1127 2 1128 6 677 328 1638 4 232 4 234 566 1135 6 236 198 237 4 1643 2 680 4 681 2 1644 6 682 48 1645 2 1143 22 1647 2 246 2 1649 2 1146 2 1147 6 1652 4 1653 2 247 2 689 244 1152 2 250 20 1154 12 691 2 1656 8 692 4 693 4 1156 2 254 2 694 2 695 14 696 198 697 4 255 2 700 32 701 64 702 2 257 2 1160 10 1161 30 1664 224 1168 2 266 14 1667 4 269 2 710 6 713 54 716 46 717 98 1670 4 272 30 1674 2 1676 4 1177 2 722 66 1677 4 1178 12 1681 4 1683 2 1684 2 1686 2 1687 4 1192 2 287 6 1689 2 289 4 291 28 736 6 1200 4 1698 432 1697 2 738 8 739 132 1699 88 1203 2 295 6 748 2 297 2 298 14 299 16 751 2 1214 2 1704 6 1218 10 303 4 754 4 1221 4 757 2 304 2 760 52 1710 8 1226 2 307 16 1713 6 1227 46 1228 2 1231 106 765 4 310 4 771 46 1237 4 1239 6 773 2 1241 2 1721 6 776 2 1723 2 777 328 778 82 317 4 1246 4 1731 4 783 4 784 4 1734 14 1736 2 1738 2 1257 4 1740 4 787 2 788 6 1743 192 1742 28 1263 2 1264 2 1265 12 329 12 331 6 1268 6 798 2 1269 2 799 2 333 6 801 2 334 2 1270 2 1271 2 802 2 803 2 1273 2 805 6 336 2 806 2 808 2 342 70 1754 2 1755 30 1281 2 1280 20 813 2 814 4 1759 198 356 2 821 2 820 12 1771 198 1292 8 833 2 1297 4 834 2 367 4 1774 2 1776 2 1780 68 839 8 1303 2 1305 6 843 12 374 6 375 4 844 2 1787 6 849 2 848 106 1310 20 380 6 1789 26 850 2 1793 6 382 2 383 2 852 16 384 26 1799 4 1798 2 1802 4 1803 10 1323 2 1805 6 1809 2 1330 2 860 432 1812 2 400 6 1336 2 870 30 871 6 1343 6 1818 28 874 376 1347 94 876 2 410 2 1352 4 884 2 416 50 1355 4 890 4 1361 2 419 24 1363 8 1364 2 893 10 1832 4 422 2 1836 4 423 6 1837 22 1368 2 897 2 1372 22 1843 2 1844 4 898 2 1374 26 1849 2 901 2 433 12 432 30 903 4 1381 6 1854 22 440 2 1386 2 1390 8 444 6 1389 60 1393 2 1857 14 912 2 
199 1 732 2 530 2 707 2 
1340 2 530 2 
194 2 1765 2 1475 2 1767 2 530 2 1679 2 636 2 
1475 2 530 2 779 2 
1475 2 530 2 1769 2 
563 2 732 2 231 2 
1475 2 530 2 
563 2 1185 2 
1410 2 530 2 
563 2 732 2 1794 2 
732 2 479 2 404 2 
732 2 1693 2 1367 2 
862 2 732 2 911 2 
1573 2 732 2 134 2 
563 2 1598 2 
1608 2 530 2 
955 2 479 2 
1409 2 1693 2 
862 2 678 2 
1573 2 478 2 
563 2 124 2 
1573 2 1574 2 
862 2 1580 2 
1732 2 1693 2 
184 2 479 2 
563 2 732 2 1794 2 968 2 
563 2 732 2 56 2 1794 2 968 2 
563 2 732 2 603 2 
563 2 732 2 1726 2 
1121 2 1317 2 1113 2 1011 2 
563 2 709 2 
1428 2 214 2 332 2 82 2 132 2 906 6 1691 4 180 2 1319 2 1371 4 1797 2 1148 2 550 2 1846 2 1701 2 1641 2 1467 2 1556 2 
1276 2 732 2 
845 2 1765 2 1767 2 411 2 
845 2 674 2 1765 2 1767 2 411 2 636 2 
1765 2 1475 2 1767 2 530 2 1679 2 1103 2 
1197 2 1448 2 
1765 2 1767 2 1679 2 631 2 
610 2 862 2 
1033 2 1573 2 
479 2 744 2 
1542 2 1693 2 
611 2 1573 2 1693 2 
1573 2 883 2 1693 2 
1573 2 58 2 1693 2 
1778 2 1573 2 1693 2 
115 2 1834 2 922 2 1028 6 1592 2 1650 6 1765 2 1767 2 
1588 2 
222 2 447 2 1397 2 1272 2 3 2 453 4 919 4 1520 6 6 2 12 2 1528 2 344 2 1411 2 1139 2 1141 6 1284 2 819 2 934 2 471 2 1763 2 824 2 1420 2 473 6 1044 2 150 4 1160 22 1163 2 952 4 1440 2 838 4 1666 2 1307 2 1786 2 1172 2 1443 2 1316 2 1074 2 1675 6 724 2 1083 2 174 4 1086 4 1190 2 1335 2 509 2 868 2 1462 2 294 2 406 4 1210 2 1703 2 758 2 634 22 197 2 1232 4 1235 2 204 2 533 2 642 2 1845 2 644 2 645 2 648 2 319 2 99 2 1379 2 218 2 1384 2 1261 2 1262 2 1741 2 1387 2 110 2 1125 2 1630 2 
222 2 447 2 1397 2 1272 2 453 6 919 4 1520 6 6 2 12 2 1528 2 1411 2 1139 2 1141 6 1415 2 1284 2 819 2 934 2 471 2 823 2 1763 2 824 2 1420 2 473 6 1044 2 150 4 1160 22 1163 2 952 4 1440 2 838 4 1666 2 1307 2 1786 2 1172 2 1443 2 1316 2 1074 2 1675 6 724 2 1083 2 174 4 1086 4 1190 2 1335 2 509 2 868 2 1462 2 1339 2 294 2 406 4 1210 2 1703 2 758 2 634 22 197 2 1232 4 1235 2 204 2 533 2 642 2 1242 2 1845 2 644 2 645 2 648 2 319 2 99 2 218 2 1384 2 1261 2 1262 2 1741 2 1387 2 1125 2 1514 2 1630 2 
460 2 1378 2 
421 2 
114 2 731 4 223 4 556 2 1460 6 121 2 6 2 10 2 1464 2 403 2 928 2 1210 2 877 2 1139 2 1703 2 409 8 352 2 70 2 1219 2 756 4 1763 2 1420 2 360 8 1042 4 634 12 1485 10 1658 6 767 2 201 4 365 4 946 4 583 2 151 2 1160 6 1839 2 1165 2 1722 2 952 2 838 2 210 2 590 2 428 2 1066 2 544 2 1790 2 1447 2 1672 4 1074 2 1675 4 441 2 1509 2 387 2 388 2 1745 2 725 6 606 2 727 2 284 2 1571 2 1570 2 
114 2 731 4 223 4 556 2 1460 8 121 2 6 2 10 2 1464 2 403 2 928 2 1210 2 1139 2 877 2 1703 2 409 8 352 2 70 2 1142 4 1219 2 756 4 1763 2 1420 2 360 8 1042 4 634 12 937 2 1485 10 1658 8 1109 2 767 2 201 4 365 4 946 4 1160 6 583 2 151 2 1839 2 1165 2 1722 2 952 2 838 2 210 2 590 2 1066 2 544 2 1790 2 1447 2 1672 4 1074 2 1675 4 441 2 1509 2 387 2 388 2 725 6 606 2 727 2 284 2 1571 2 728 2 1570 2 
114 2 877 2 201 4 731 2 365 2 1219 2 1672 2 583 2 556 2 1460 2 1839 2 1722 2 1042 4 10 2 725 2 727 2 928 2 284 2 
114 2 731 4 223 4 556 2 1460 6 121 2 6 2 10 2 403 2 928 2 1210 2 877 2 1139 2 1703 2 409 4 352 2 70 2 1219 2 756 4 1763 2 1420 2 360 4 1042 4 634 12 1485 6 1658 6 767 2 201 4 365 4 946 4 583 2 151 2 1160 6 1839 2 1165 2 1722 2 952 2 838 2 210 2 590 2 428 2 1066 2 544 2 1790 2 1447 2 1672 4 1074 2 1675 4 441 2 1509 2 387 2 388 2 1745 2 725 4 606 2 727 2 284 2 1571 2 728 2 1570 2 
114 2 731 4 223 4 556 2 1460 4 121 2 1129 2 6 2 10 2 403 2 928 2 1210 2 877 2 1139 2 1703 2 409 4 352 2 70 2 1219 2 756 4 1763 2 1420 2 360 4 1042 4 634 12 1485 6 1658 6 767 2 201 4 365 4 946 4 583 2 151 2 1160 6 1839 2 1165 2 1722 2 952 2 838 2 210 2 590 2 428 2 1066 2 544 2 1790 2 1447 2 1672 4 1074 2 1675 4 441 2 1509 2 387 2 388 2 1745 2 725 6 606 2 727 2 284 2 1571 2 1570 2 
114 2 731 4 223 4 556 2 1460 6 121 2 6 2 10 2 1464 2 403 2 928 2 1210 2 877 2 1139 2 1703 2 409 8 352 2 70 2 1219 2 756 4 1763 2 1420 2 360 4 1042 4 634 12 1485 6 1658 6 767 2 201 4 365 4 946 4 583 2 151 2 1160 6 1839 2 1165 2 1722 2 952 2 838 2 210 2 590 2 428 2 1066 2 544 2 1790 2 1447 2 1672 4 1074 2 1675 4 441 2 1509 2 387 2 388 2 1745 2 725 6 606 2 727 2 284 2 1571 2 1570 2 
114 2 731 4 223 4 556 2 1460 6 121 2 1129 2 6 2 10 2 1464 2 403 2 928 2 1210 2 877 2 1139 2 1703 2 409 8 352 2 70 2 1219 2 756 4 1763 2 1420 2 360 8 1042 4 634 12 1485 10 1658 8 767 2 201 4 365 4 946 4 583 2 151 2 1160 6 1839 2 1165 2 1722 2 952 2 838 2 210 2 590 2 428 2 1066 2 544 2 1790 2 1447 2 1672 4 1074 2 1675 4 441 2 1509 2 387 2 388 2 1745 2 725 8 606 2 727 2 284 2 1571 2 1570 2 
114 2 731 4 223 4 556 2 1460 6 121 2 6 2 10 2 1464 2 403 2 928 2 1210 2 877 2 1139 2 1703 2 409 8 352 2 70 2 1219 2 756 4 1763 2 1420 2 360 8 1042 4 634 12 1485 10 1658 6 767 2 201 4 365 4 946 4 583 2 151 2 1160 6 1839 2 1165 2 1722 2 952 2 838 2 210 2 590 2 428 2 1066 2 544 2 1790 2 1447 2 1672 4 1074 2 1675 4 441 2 1509 2 387 2 388 2 1745 2 725 6 606 2 727 2 284 2 1571 2 1570 2 
1658 4 1190 2 767 2 201 2 731 2 223 2 365 2 151 2 583 2 1460 2 1839 2 1059 2 1722 2 121 2 1129 2 10 2 428 2 403 2 928 2 1066 2 877 2 409 2 544 2 352 2 1790 2 756 2 1262 2 1042 2 388 2 725 4 606 2 1044 2 634 4 1570 2 1571 2 284 2 
1658 4 1190 2 767 2 201 2 731 2 223 2 365 2 151 2 583 2 1460 4 1839 2 1059 2 1722 2 121 2 10 2 1464 2 428 2 403 2 928 2 1066 2 877 2 409 6 544 2 352 2 1790 2 756 2 1262 2 1042 2 388 2 725 4 606 2 1044 2 634 4 1570 2 1571 2 284 2 
1658 4 1485 4 1190 2 767 2 201 2 731 2 223 2 365 2 151 2 583 2 1460 4 1839 2 1059 2 1722 2 121 2 10 2 1464 2 428 2 403 2 928 2 1066 2 877 2 409 6 544 2 352 2 1790 2 756 2 1262 2 360 4 1042 2 388 2 725 4 606 2 1044 2 634 4 1570 2 1571 2 284 2 
1658 4 1485 4 1190 2 767 2 201 2 731 2 223 2 365 2 151 2 583 2 1460 4 1839 2 1059 2 1722 2 121 2 10 2 1464 2 428 2 403 2 928 2 1066 2 877 2 409 6 544 2 352 2 1790 2 756 2 1262 2 360 4 1042 2 388 2 725 4 606 2 1044 2 634 4 1570 2 1571 2 284 2 
1658 4 1485 4 767 2 201 2 731 4 946 2 223 2 365 4 151 2 583 2 1460 6 1839 2 1722 2 121 2 10 2 1464 2 428 2 403 2 928 2 1066 2 877 2 409 6 544 2 352 2 1790 2 756 2 360 4 1042 2 388 2 725 6 606 2 634 4 1570 2 1571 2 284 2 
447 2 223 2 453 6 1520 8 121 2 6 2 10 2 1528 2 928 2 1411 3 13 2 1139 2 352 2 1141 6 819 2 934 2 1763 2 1420 2 1042 2 473 6 1535 2 1658 4 946 2 365 4 150 3 151 2 1160 24 583 2 1163 2 952 4 1440 2 838 4 1666 2 1307 2 1786 4 1066 2 1067 2 1790 2 1316 3 1675 6 1074 2 165 2 388 2 725 6 606 2 1083 2 1570 2 284 2 1571 2 1086 4 174 4 1195 2 731 4 1460 6 868 2 1199 2 1464 2 403 2 1582 2 406 4 1469 2 1210 2 1471 2 877 2 1703 2 409 6 70 2 1588 2 756 2 758 2 889 3 634 28 1485 2 767 2 201 2 1839 2 533 2 642 2 1242 2 1722 2 428 2 99 2 544 2 1384 2 1261 2 1741 2 1855 2 1387 2 1514 2 
480 2 1570 2 1571 2 
480 2 1570 2 1571 2 
666 2 447 2 223 2 453 6 1520 2 6 2 10 2 1528 2 1757 2 129 2 1139 2 1141 2 819 2 934 2 1763 2 1420 2 360 2 473 2 1042 2 1044 2 1658 4 365 2 150 2 1160 14 151 2 1163 2 259 2 952 4 1440 2 838 4 1666 2 1307 2 1786 2 1066 2 1074 2 1675 6 725 4 606 2 1083 2 1571 2 284 2 1570 2 174 4 1086 4 1190 2 731 2 1460 4 509 2 868 2 1464 2 1210 2 1703 2 409 6 756 2 987 2 758 2 634 18 1485 2 201 2 1833 2 533 2 642 2 1242 2 1722 2 99 2 1384 2 1262 2 1741 2 1387 2 794 2 1514 2 
13 2 729 2 1139 2 188 2 730 2 437 2 57 2 1160 2 556 2 1838 2 314 2 402 2 1131 2 909 2 460 2 634 4 1786 2 
666 2 447 2 223 2 453 6 1520 2 6 2 10 2 1528 2 1757 4 129 2 1139 2 1141 2 819 2 934 2 1763 2 1420 2 360 2 473 2 1042 2 251 2 1044 2 1658 4 365 2 150 4 1160 14 151 2 1163 2 259 2 952 4 1440 2 838 4 1666 2 1307 2 1786 2 1066 2 1074 2 1675 6 725 4 606 2 1083 2 1570 2 1571 2 284 2 174 4 1086 4 1190 2 731 2 1460 4 509 2 868 2 1464 2 1210 2 1703 2 409 6 756 2 987 2 758 2 1709 2 634 18 1485 2 201 2 1833 2 533 2 642 2 1242 2 1722 2 99 2 1384 2 1262 2 1741 2 1387 2 794 2 1514 2 
666 2 447 2 223 2 453 6 1520 2 6 2 10 2 1528 2 1757 2 129 2 1139 2 1141 2 819 2 934 2 1763 2 1420 2 360 2 473 2 1042 2 1044 2 1658 4 365 2 150 2 1160 14 151 2 1163 2 259 2 952 4 1440 2 838 4 1666 2 1307 2 1786 2 1066 2 1074 2 1675 6 725 4 606 2 1083 2 1571 2 284 2 1570 2 174 4 1086 4 1190 2 731 2 1460 4 509 2 868 2 1464 2 1210 2 1703 2 409 6 756 2 987 2 758 2 634 18 1485 2 201 2 1833 2 533 2 642 2 1242 2 1722 2 99 2 1384 2 1262 2 1741 2 1387 2 794 2 1514 2 
0 1 913 2 2 2 916 2 4 2 918 2 5 2 919 183 6 2 921 2 923 20 9 2 12 2 14 2 13 2 17 4 932 10 933 2 934 82 936 12 21 2 23 2 941 14 940 2 942 4 944 2 945 4 26 54 948 80 949 2 950 2 952 8 954 2 31 4 32 24 957 2 959 24 35 38 36 1 961 4 37 4 38 2 963 38 39 2 964 4 44 2 965 2 966 3 46 3 970 2 969 2 971 2 53 2 52 26 55 2 975 2 976 2 977 2 59 6 60 2 982 1 983 2 984 2 71 4 986 2 989 2 988 2 76 2 77 80 990 2 79 22 81 2 84 2 85 2 995 8 87 2 998 2 88 8 89 6 1000 2 999 2 91 2 94 6 95 2 96 2 98 2 99 2 1005 8 1006 2 102 2 103 2 1007 3 105 2 106 2 1010 2 108 2 109 2 1013 2 111 2 1014 2 1016 2 117 2 116 106 118 2 1019 2 1021 2 1024 2 122 2 1026 60 123 3 1029 2 126 2 1031 2 1034 2 1035 18 131 38 1037 2 137 2 136 2 1040 2 138 3 1043 2 139 83 1047 2 143 12 1049 76 145 2 146 2 147 2 148 76 149 2 150 114 153 558 154 2 158 4 160 2 161 1 1072 2 164 4 165 2 1074 2 1075 158 1077 2 1078 2 168 2 170 12 169 2 1081 10 1083 2 171 78 1084 38 172 2 1085 2 173 6 174 480 1086 402 1087 2 1090 2 177 2 176 2 1091 2 179 2 1092 8 1097 4 1099 2 187 2 1101 2 189 2 1102 38 191 4 192 16 198 60 197 18 202 2 203 2 206 8 1111 2 207 2 1112 76 1114 2 1116 2 212 2 211 66 1117 6 213 2 215 2 1119 2 219 26 220 15 1124 20 221 2 1125 46 228 2 229 3 1130 2 230 2 1132 4 1133 2 1134 2 233 2 1136 2 235 20 1138 234 238 4 1139 2 239 20 1141 32 240 2 241 3 242 104 243 2 245 78 1145 2 1149 2 1151 2 1150 3 248 2 1153 1 249 112 252 36 1155 38 253 158 1157 2 256 6 1158 38 1160 966 1162 3 1163 2 1164 78 260 1 261 3 1166 4 263 3 1167 11 265 10 1169 80 264 38 267 2 1171 20 1172 2 271 3 1174 2 273 22 1176 2 275 2 276 2 277 2 278 80 1180 78 1179 2 1181 14 282 3 1183 3 1184 2 1186 2 1187 2 1188 2 285 80 286 2 1189 10 1191 2 1194 3 1193 12 290 2 292 2 293 14 1201 2 1202 34 1205 10 1206 2 1207 2 296 2 1209 2 1211 2 1210 2 300 2 301 2 1213 3 1215 78 1216 3 302 2 1217 2 1220 3 1223 2 305 78 306 20 1224 24 308 4 1232 178 309 40 1234 2 1235 86 311 2 1238 10 313 2 1242 324 316 22 1243 22 1245 2 1247 2 1248 2 1249 2 1250 2 1252 2 318 14 319 2 1255 2 1254 2 1256 2 322 2 323 2 324 12 325 4 1259 2 326 2 1261 2 327 78 1266 4 1267 2 1272 2 335 3 1274 38 337 38 1275 4 338 2 1277 2 339 78 341 2 340 158 344 3 345 2 1278 2 346 2 347 3 350 100 349 8 351 66 354 22 353 2 355 2 357 1 359 2 1285 3 1287 4 1288 4 362 78 1290 2 363 38 1291 2 1293 2 1296 2 366 2 368 16 369 2 1299 2 1300 6 370 2 371 4 372 4 1302 2 1304 14 373 2 1307 2 376 4 377 2 378 2 1311 2 1312 4 379 8 1314 2 1316 16 1318 2 1320 2 1321 2 385 2 1322 16 389 18 390 2 1324 2 1325 6 1327 2 392 2 1326 2 391 2 393 2 1328 2 394 4 1333 2 395 2 396 2 398 2 1344 120 1345 2 405 2 1346 36 406 12 408 3 1348 10 1349 2 1353 2 412 2 414 1 415 3 1356 2 1357 4 1359 4 418 2 1362 2 1365 40 1366 8 420 4 1369 2 424 9 425 16 1375 2 426 2 1377 2 429 112 435 2 1380 2 436 3 1382 2 1384 2 1385 2 1387 2 1388 2 442 2 443 2 1391 2 1392 1 446 2 1395 2 1396 2 447 8 448 2 1398 2 449 80 452 22 453 1112 455 3 1403 14 458 4 463 2 466 8 464 2 467 8 1404 2 1406 1 1405 2 1408 2 468 2 1411 46 469 6 1414 2 1416 2 1418 2 1417 2 471 2 1420 2 1421 6 472 38 1422 170 1423 2 473 18 1425 2 474 78 1429 8 476 95 1431 12 1432 6 477 78 481 2 1438 2 1439 2 1440 2 484 2 485 2 488 2 489 2 1444 2 1445 3 491 6 493 3 494 2 495 2 1449 14 1450 2 498 4 502 3 501 24 1454 2 505 2 507 2 1457 2 1459 2 1458 2 508 38 1462 2 1463 2 511 2 1465 2 512 65 515 80 1469 2 1471 2 517 166 1473 2 1474 2 519 2 1476 2 1477 2 1478 2 520 3 521 1 1482 2 1481 36 1483 2 523 24 1484 4 525 2 528 3 1487 2 531 2 1489 2 532 4 533 84 534 2 1491 2 1490 24 536 12 1492 2 1493 2 1495 2 537 2 1496 2 1497 22 539 2 543 2 546 2 1502 2 1503 2 1508 2 551 2 1510 10 552 2 1512 4 1514 314 1515 124 554 2 1517 1 557 2 1519 2 1520 126 1521 80 558 4 559 2 1524 16 1525 3 1526 2 1528 4 564 2 1529 14 566 2 1532 9 570 2 574 2 1534 6 1536 24 576 2 578 1 579 2 1543 52 1545 2 1546 48 1547 2 1548 2 1549 2 586 2 588 6 1552 2 589 2 1554 10 1555 2 1557 3 592 10 1558 2 593 2 594 34 596 2 595 10 597 38 600 2 601 2 602 2 1564 2 1565 1 1568 2 1567 2 608 2 1576 2 1578 2 613 2 614 2 615 8 1582 2 616 2 618 2 1583 38 1585 8 1586 2 1587 2 620 2 621 10 622 2 624 2 1590 2 1593 2 628 2 1594 2 1595 2 629 2 1596 3 1597 3 633 2 634 1174 635 4 1601 2 1602 3 639 2 640 2 1604 2 1606 32 641 2 642 2 1610 2 643 2 1611 12 644 3 645 2 1613 2 650 3 651 2 652 2 653 38 656 78 657 2 659 3 660 2 661 2 662 2 664 2 1629 3 1631 2 665 18 671 2 675 2 1636 2 676 2 1640 2 1642 2 679 2 683 2 684 2 685 2 1646 2 1648 4 686 2 1651 2 690 2 1655 2 1654 6 1657 2 1659 6 1660 2 699 2 698 2 1662 2 1663 3 705 2 1665 7 1666 2 706 78 711 80 714 2 715 2 1668 2 1669 156 718 2 719 80 1671 38 1673 2 720 2 1675 10 721 80 723 3 724 84 1680 10 1682 6 726 2 1685 78 733 2 734 3 1690 2 1692 60 735 2 1694 3 1695 32 743 14 745 2 1702 2 747 16 1703 2 752 2 1705 2 755 2 1707 3 1706 2 759 6 1708 38 761 6 1711 16 1715 156 762 2 1717 2 1718 78 764 38 768 6 1719 18 766 2 772 2 1725 2 1724 38 781 2 780 40 1730 80 1733 4 1735 8 786 3 1737 2 785 3 1739 2 1741 2 789 18 791 2 1746 80 792 38 793 38 795 2 1747 4 796 2 1749 2 800 3 1750 2 804 234 1753 38 809 2 810 2 1756 2 811 78 817 24 1760 4 818 78 819 2 822 2 1761 10 1762 102 825 2 1763 2 824 4 826 2 827 2 1764 78 1766 2 828 13 1770 2 831 4 1773 3 835 3 1775 3 1777 22 837 6 1779 2 1782 2 838 8 1783 2 840 2 1784 2 841 3 842 2 1785 2 1786 10 846 2 1788 82 847 2 851 2 853 3 854 2 1800 1 1801 3 1804 2 1806 19 1807 2 1808 2 857 2 859 2 1810 2 1811 10 863 3 864 2 1813 20 865 2 868 8 872 2 1814 2 1816 60 873 2 1817 2 1819 2 1820 2 1821 80 878 2 879 156 1823 2 881 4 882 2 1824 2 885 2 1825 2 887 4 1826 80 886 2 888 34 889 2 1829 2 1830 3 892 2 1831 4 894 2 895 6 1840 4 1842 2 1847 8 1848 4 1851 2 1852 20 902 4 904 2 905 2 906 6 908 2 1856 80 
608 2 1663 2 1604 2 150 2 1091 2 1160 2 1520 2 1781 2 1783 2 341 2 1205 2 406 2 468 2 1411 2 1141 2 595 4 1316 2 1261 2 473 2 1423 2 108 2 1680 2 1125 6 634 2 
608 2 1663 2 1604 2 150 2 1091 2 1160 2 1520 2 1781 2 1783 2 341 2 1205 2 406 2 468 2 1411 2 1141 2 595 4 1316 2 1261 2 473 2 1423 2 108 2 1680 2 1125 6 634 2 
608 2 1663 2 1604 2 150 2 1091 2 1160 2 1520 2 1781 2 1783 2 341 2 1205 2 406 2 468 2 1411 2 1141 2 595 4 1316 2 1261 2 473 2 1423 2 108 2 1680 2 1125 6 634 2 
608 2 47 2 143 2 831 2 1659 4 1431 2 1295 2 1543 2 150 3 1813 4 1160 4 1300 2 59 2 1520 2 1023 2 536 2 1170 2 235 4 32 4 1468 4 1411 3 239 4 101 2 491 2 350 2 815 2 880 2 1383 3 623 2 1261 2 1762 6 759 2 523 3 1124 4 389 4 170 2 1287 2 501 3 634 10 1289 2 
608 2 47 2 1813 4 4 2 59 2 1520 2 1023 2 235 4 1468 4 1411 2 239 4 350 2 815 2 880 2 623 2 1762 6 759 2 523 2 1287 2 634 10 1289 2 143 2 831 2 1431 2 1659 4 1543 2 1295 2 150 2 1160 4 1300 2 837 2 536 2 1170 2 32 4 491 2 101 2 1383 2 1261 2 1124 4 170 2 389 4 1081 2 501 2 
608 2 47 2 1813 4 4 2 59 2 1520 2 1023 2 235 4 1468 4 1411 2 239 4 350 2 815 2 880 2 623 2 1762 6 759 2 523 2 1287 2 634 10 1289 2 143 2 831 2 1431 2 1659 4 1543 2 1295 2 150 2 1160 4 1300 2 837 2 536 2 1170 2 32 4 491 2 101 2 1383 2 1261 2 1124 4 170 2 389 4 1081 2 501 2 
608 2 47 2 1813 4 4 2 59 2 1520 2 1023 2 235 4 1468 4 1411 2 239 4 350 2 815 2 880 2 623 2 1762 6 759 2 523 2 1287 2 634 10 1289 2 143 2 831 2 1431 2 1659 4 1543 2 1295 2 150 2 1160 4 1300 2 837 2 536 2 1170 2 32 4 491 2 101 2 1383 2 1261 2 1124 4 170 2 389 4 1081 2 501 2 
608 2 47 2 1813 4 4 4 59 2 1520 2 1023 2 235 4 1468 4 1411 2 239 4 350 2 815 2 880 2 623 2 1762 6 759 2 523 2 1287 2 634 10 1289 2 143 2 831 2 1431 2 1659 4 1543 2 1295 2 150 2 1160 4 1300 2 837 4 536 2 1170 2 32 4 491 2 101 2 1383 2 1261 2 1124 4 170 2 389 4 1081 4 501 2 
1601 2 1430 2 800 2 1457 2 1682 2 24 2 
475 2 825 2 800 2 484 2 1235 2 881 2 267 2 
526 2 1541 2 858 2 1233 2 1160 8 978 2 183 1 1441 1 1553 2 1527 2 1137 2 268 1 749 2 812 1 1616 2 565 2 1253 1 1210 2 1501 2 133 2 1678 2 1079 2 1827 2 577 2 45 2 634 10 
1188 2 143 6 1429 2 1431 6 1659 4 895 4 4 2 1160 6 1300 6 59 6 704 2 534 2 837 3 458 2 536 6 1373 1 32 15 491 6 1739 2 243 2 439 2 498 2 964 2 759 6 389 12 761 4 1287 2 1081 4 1768 2 634 6 607 2 
1456 2 1331 2 239 2 1018 2 492 2 994 2 1813 2 1792 4 917 6 227 2 1160 1 737 1 1124 2 1700 2 1359 2 1513 2 981 2 634 1 
1456 4 1331 2 239 2 1018 2 492 2 994 4 1813 2 1792 4 917 6 227 2 1124 2 1700 2 1513 2 1359 4 981 2 
1456 8 1331 2 239 2 1018 2 492 8 994 8 1813 2 1792 4 917 10 227 6 1160 1 737 1 1124 2 1700 2 1513 2 1359 8 981 2 634 1 
1456 2 1331 2 239 2 1018 2 994 2 1813 2 1792 2 917 2 1124 2 1700 2 1513 2 1359 2 981 2 
1515 14 116 16 449 4 804 24 453 103 1516 2 1401 32 919 15 337 4 339 4 340 10 1528 2 123 1 344 1 1138 24 1282 1 816 4 818 4 242 8 932 2 245 4 934 6 1150 2 1422 30 1764 4 361 10 1654 2 139 6 1155 4 362 4 938 4 474 4 253 10 363 4 948 4 1160 70 703 2 28 4 153 24 1164 4 156 16 264 4 1169 4 706 4 958 2 592 4 490 4 960 2 381 2 1669 6 719 4 1175 4 274 2 1075 10 386 8 1180 4 1084 4 174 44 1086 36 285 4 861 8 1334 8 399 4 1694 2 508 4 867 2 872 2 1815 2 1095 10 1341 10 515 4 1821 4 517 8 1583 4 1102 4 879 11 1215 4 1587 2 413 8 1220 3 74 2 305 4 1708 4 1826 8 1358 2 77 4 1715 10 634 78 1718 4 85 2 533 6 424 4 775 2 1242 29 1243 8 1848 4 1494 2 1730 4 434 2 541 2 438 16 656 4 1856 4 790 2 1627 4 1746 4 1512 4 793 4 327 6 1514 27 
1086 14 174 14 285 4 449 4 1516 2 453 40 919 14 872 2 340 6 1528 2 344 2 811 2 929 2 1821 4 879 2 1587 2 934 2 1220 2 74 2 1422 6 1654 2 139 4 1715 2 634 28 253 6 1718 2 476 9 85 2 703 2 1160 26 153 8 533 2 1242 12 1167 1 1243 5 1848 2 706 2 94 2 1251 2 1730 4 592 4 271 1 541 2 381 2 1669 2 324 1 785 2 719 4 274 2 1075 6 656 2 1796 2 1856 4 1801 2 1180 2 1512 2 1452 2 327 2 1514 12 
1515 12 116 42 449 6 804 92 453 248 1516 2 919 28 337 4 339 6 340 16 123 4 1528 8 344 4 1138 84 811 4 929 2 1279 6 130 24 818 6 242 42 245 6 934 14 1150 2 1534 2 1422 34 1764 6 1286 8 1654 4 139 8 1155 4 362 6 474 6 253 16 476 22 363 4 1772 4 477 24 948 6 1160 134 703 2 153 124 1055 8 1164 6 155 10 157 12 1167 11 264 4 1169 6 706 10 1063 4 1306 26 592 8 271 2 712 4 1173 90 381 2 1669 36 719 6 274 2 1075 16 721 6 1796 2 1801 2 1180 10 1452 2 283 4 1084 4 174 112 1086 88 285 6 1685 24 1093 8 1694 2 508 4 872 8 612 4 741 90 515 6 1821 6 517 50 1583 4 1102 4 879 16 1351 2 1215 6 1587 8 1220 6 1222 4 74 2 305 6 1708 4 1826 24 77 6 1715 18 634 150 1718 10 1365 2 1488 26 1110 4 1236 2 85 8 533 14 1242 58 424 5 775 2 315 24 1002 24 1243 15 1848 4 1494 2 94 4 900 2 430 4 1730 6 320 18 100 4 324 7 785 2 1258 10 1625 10 656 10 1856 6 1746 6 793 4 1512 4 327 10 1514 58 
856 2 1086 20 174 20 285 2 50 2 51 2 397 2 449 2 1400 2 1516 2 453 48 919 36 867 2 872 2 1637 2 1815 2 1095 2 340 4 1341 2 1528 2 926 2 344 2 513 2 1821 2 130 2 348 4 1350 2 1140 2 1584 2 879 2 1587 2 1220 2 934 2 935 2 74 2 1286 2 361 2 1828 2 139 6 1715 2 1538 4 634 46 1540 2 1718 2 1230 2 253 4 580 2 1050 2 703 2 1160 44 1437 2 85 2 482 4 153 6 774 2 1370 2 533 2 1242 6 155 2 315 2 1301 2 1002 2 706 2 1003 2 1244 2 1251 2 431 2 1730 2 541 2 712 2 381 2 1669 2 1791 2 719 2 1258 2 1795 2 274 2 1075 4 1625 2 1796 2 656 2 43 2 278 6 1856 2 1180 2 445 2 327 2 328 2 1514 6 797 2 1325 4 
832 2 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 
358 1 1342 1 1182 1 753 1 1159 1 1716 1 

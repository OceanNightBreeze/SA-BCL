#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 1595 1595 1770 1770 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 512 512 620 620 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 1367 (456,1075) (1082,1792) (1082,1792) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 1367 (456,1075) (1082,1792) (1082,1792) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 1367 (456,1075) (1082,1792) (1082,1792) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 1367 (456,1075) (1082,1792) (1082,1792) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 1367 (456,1075) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 1367 (456,1075) (456,1075) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 1367 (456,1075) 
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.ArraysMDE:sum([I)I
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:size()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_118()Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([[D)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_137()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 54234 | = null
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:setEqual([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_61()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:is_false()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.PptSlice3:arity()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:negate(I)I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLT([I[I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_56()Z
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_29()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_57()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:new_ppt()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:lt(II)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_134()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_22()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:ne(II)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:isReverse([I[I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaCharStream:FillBuff()V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_80()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:noDups([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_89()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_108()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:toString()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:intersection([I[I)[I
utilMDE.Intern:intern([I)[I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_21()Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_105()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.ProglangType:baseIsFloat()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_13(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_125()Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_115()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:isPointer()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:hashCode()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.ProglangType:isString()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_85()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_16()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_81()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3_14()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:eq(II)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_100()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_116()Z
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_13()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.ProglangType:isArray()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.Node:Node()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice1:arity()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3_36()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:slice([III)[I
utilMDE.MathMDE:sign(I)I
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:jj_3_35()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:hasTypeOf()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern:numIntArrays()I
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfo:isIOAArray()Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(II)I | CONDITION | 4310 | if (x) -> if (!x)
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:eltsLTE([II)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isIOASet()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
847 2 957 2 1255 2 862 2 1170 4 152 2 1378 2 237 2 1497 2 
654 2 1517 6 582 2 1140 6 1213 6 1160 2 1475 2 987 2 1230 2 77 2 64 2 
641 2 1184 4 527 6 1699 2 152 2 1374 2 588 4 558 2 495 2 237 2 350 6 669 6 136 6 
1210 10 53 10 1021 8 800 10 1245 2 334 2 1815 16 152 6 1324 2 1490 10 805 4 1248 29 1520 2 1081 8 1549 16 1526 16 579 2 1366 2 357 12 553 10 416 4 20 8 480 4 829 6 1749 4 482 2 738 26 237 6 668 6 563 8 
171 6 1226 4 
768 2 
1210 2 53 2 269 2 800 2 1577 2 1815 2 1490 2 1248 6 1646 2 1276 2 1760 2 1549 2 1526 2 1733 2 1682 2 357 2 553 4 416 2 657 2 829 2 1568 2 738 4 563 2 
1210 4 1341 4 53 4 800 4 357 5 1815 8 1490 4 805 2 1248 15 1146 6 1432 2 1549 8 80 6 1526 8 738 12 1089 2 1681 4 
1562 2 190 2 404 2 1774 2 301 2 739 2 
213 2 768 2 1700 2 603 2 682 2 535 2 207 2 1484 2 688 2 1070 2 
1784 2 1107 2 801 2 1114 2 1388 2 496 2 68 2 443 2 1684 2 143 2 1798 2 16 2 1504 2 1506 2 147 2 24 2 203 2 957 2 1511 2 564 4 1211 2 1022 2 152 4 1080 2 1520 2 571 4 339 2 975 2 1086 4 1330 2 1032 4 1658 2 781 2 732 2 789 2 733 2 1099 2 1477 2 1231 2 1782 2 120 2 237 4 1294 2 298 2 
1210 16 866 4 1341 4 53 16 1021 6 800 16 1110 6 1815 32 152 4 1490 16 1248 54 131 6 813 4 1146 6 1549 32 1466 2 1526 32 347 4 1681 4 579 2 38 2 138 2 73 2 357 22 1828 4 553 6 416 2 1660 4 1505 2 202 6 933 6 829 4 80 6 738 48 237 4 209 8 668 4 563 18 509 2 
13 2 952 2 1330 2 
1740 10 742 22 1019 2 850 2 1212 2 1415 2 1080 2 685 2 1533 2 702 2 468 2 1737 2 679 2 629 2 
940 1 1042 1 802 2 491 1 818 2 1305 1 382 1 712 2 23 1 1200 1 956 2 390 2 505 2 1632 5 1313 2 611 2 716 2 1510 2 27 1 1636 2 30 2 615 3 1413 2 152 30 1416 2 1078 1 405 2 839 1 841 2 1654 2 730 4 979 2 40 2 981 2 1431 1 862 2 179 2 50 2 1104 1 863 2 1542 2 433 2 999 1 1346 2 1790 2 540 2 1437 2 1003 11 189 1 646 2 1673 6 192 2 1551 1 545 2 1680 1 1253 2 1447 2 200 2 891 2 758 2 759 2 1456 2 560 5 326 6 1807 1 670 5 1694 6 566 4 219 1 917 2 1819 2 463 3 774 2 1582 2 467 2 576 4 921 6 471 6 1149 2 585 2 1479 2 1601 2 366 2 938 2 119 4 237 32 1379 1 368 4 1175 4 1606 1 
153 2 
1608 2 237 2 
1178 2 237 4 1789 2 
1 2 1382 60 484 2 1383 4 3 6 485 4 487 6 1387 8 5 4 943 4 1390 2 7 4 11 2 12 4 1393 8 949 6 1397 2 15 2 499 2 1401 8 1402 4 19 60 1404 6 1407 6 1405 2 25 2 503 8 959 198 960 2 961 46 506 2 962 6 28 2 1409 198 508 2 510 204 968 4 969 2 970 14 29 4 971 2 972 26 513 52 1418 30 1420 2 515 10 1422 2 34 432 35 2 976 2 518 2 521 2 978 4 523 24 980 290 1427 4 982 14 45 2 528 4 984 8 531 4 532 6 48 2 1433 4 536 2 995 2 996 2 997 2 56 28 59 30 1002 2 58 6 60 2 1006 20 1007 4 65 2 1445 60 1446 6 548 2 549 26 552 2 74 16 1009 2 1451 4 1013 244 76 2 79 2 1015 2 1016 198 1458 6 561 88 84 16 87 2 85 22 1018 2 1020 198 91 2 565 6 1024 10 570 4 1026 4 94 2 1463 2 95 2 573 6 1028 4 96 4 1469 2 574 2 1470 2 577 2 1471 198 103 2 105 2 107 2 1474 2 1476 2 586 4 112 2 113 26 590 12 122 6 594 2 125 2 1046 2 595 4 129 182 1491 4 597 4 133 6 1051 6 1493 6 1052 10 1057 4 140 2 600 2 144 6 1503 6 1061 46 1065 8 606 2 608 160 149 6 1509 26 612 2 613 2 152 10 151 2 616 6 154 2 619 4 160 26 1521 4 161 86 624 2 1088 112 625 2 1090 2 1529 6 631 8 630 2 165 4 166 6 1094 2 1095 24 170 2 1096 6 1531 2 172 2 633 6 176 2 1532 2 178 2 180 12 1535 2 1101 2 1538 112 1106 10 1539 2 1108 2 639 112 640 2 642 328 185 2 186 30 645 14 1115 2 1544 6 1546 328 1117 2 1120 4 650 82 1553 2 1552 30 194 106 1124 4 195 46 197 2 1557 30 1126 6 1128 46 1564 2 1563 198 1565 30 1135 30 666 6 1570 20 210 6 212 2 216 2 1575 224 1574 4 1141 28 1576 2 218 6 673 2 1578 14 1580 60 677 4 1147 6 1583 50 1150 140 1152 2 1154 204 226 2 681 2 1159 6 1163 4 1164 30 684 2 233 2 1602 2 235 2 236 4 237 10 238 4 239 8 1605 2 1173 8 1607 2 1177 6 1176 6 692 2 1609 2 1610 4 1185 4 696 112 1186 4 1189 4 698 2 699 14 248 132 701 2 250 22 1614 4 1616 2 1619 2 255 2 257 2 256 2 707 2 258 6 1620 2 1197 2 1624 8 711 2 713 12 1203 4 1206 2 1205 12 264 6 1635 6 266 2 265 2 1208 4 719 566 1214 68 275 6 1216 54 1643 6 1645 2 1647 4 280 4 1650 2 1651 26 281 6 725 2 1652 228 726 16 1221 2 1657 2 1224 6 1659 30 1661 2 1662 2 1227 2 1228 2 1229 2 734 2 1232 6 290 6 291 198 292 132 1666 2 1235 8 740 2 300 28 1241 22 1242 2 743 2 1671 2 747 14 1672 2 748 8 1674 2 753 2 1254 4 755 26 316 2 1261 2 1689 2 324 6 762 2 1264 4 1693 12 1265 6 329 2 331 2 763 6 765 2 1268 244 1269 182 332 92 1272 64 1273 2 771 2 1274 4 1701 48 336 106 337 6 338 12 340 4 773 2 1277 2 1702 198 1703 2 343 12 1279 6 1280 2 345 2 346 6 349 2 1704 2 1281 70 352 2 1707 64 1284 20 782 244 1285 2 1711 26 786 4 359 6 1287 8 790 8 360 18 792 6 1716 30 1295 4 797 22 798 4 1296 6 1720 6 803 26 373 2 1298 2 1299 4 1722 14 1723 16 808 2 1727 12 1726 6 814 2 1729 20 1731 2 816 6 378 4 1734 2 1735 2 819 4 1738 2 1304 6 1306 48 384 6 1742 386 386 10 385 26 1307 26 1308 2 821 2 823 2 826 4 1310 4 1748 2 1313 2 1751 4 1316 2 1318 6 832 192 1319 28 393 2 834 192 394 6 1321 4 398 4 401 4 1326 46 837 30 1328 2 1765 2 1766 4 846 2 409 118 410 6 852 18 1333 2 1768 2 411 8 854 20 1772 376 856 84 417 2 418 432 1776 2 1777 6 860 12 861 4 419 2 420 10 421 4 423 6 1337 4 1338 4 1783 18 865 2 429 2 428 74 431 6 867 2 868 4 1786 2 870 2 873 4 875 336 878 4 439 12 883 12 444 2 1349 8 886 20 887 4 888 8 1800 4 1352 8 449 2 896 28 1804 6 1805 2 1356 6 898 2 899 6 1357 2 901 2 450 4 451 2 1811 20 1812 6 1358 12 1813 66 908 2 455 4 1814 2 457 2 1359 6 911 98 458 32 1816 4 912 4 460 2 915 2 466 2 925 2 927 2 1370 94 478 20 479 4 930 6 935 2 937 2 1377 2 
572 2 678 1 1394 2 903 2 
55 2 1394 2 
1389 2 480 2 1796 2 828 2 1330 2 845 2 1394 2 
199 2 845 2 1394 2 
845 2 475 2 1394 2 
660 2 516 2 903 2 
845 2 1394 2 
1240 2 516 2 
1195 2 1394 2 
516 2 1450 2 903 2 
1043 2 964 2 903 2 
705 2 643 2 903 2 
1518 2 1744 2 903 2 
469 2 903 2 985 2 
1548 2 516 2 
1554 2 1394 2 
1043 2 101 2 
643 2 750 2 
1744 2 1103 2 
581 2 469 2 
1373 2 516 2 
1761 2 469 2 
1744 2 1488 2 
1728 2 643 2 
1627 2 1043 2 
1424 2 516 2 1450 2 903 2 
1424 2 516 2 727 2 1450 2 903 2 
516 2 304 2 903 2 
516 2 117 2 903 2 
1077 2 822 2 895 2 1392 2 
516 2 1653 2 
731 2 638 4 1155 2 742 6 311 2 1697 2 1773 2 476 2 146 2 155 2 700 2 533 2 815 4 361 2 1204 2 305 2 966 2 351 2 
741 2 903 2 
1389 2 1398 2 1157 2 1330 2 
1389 2 1398 2 1157 2 1796 2 502 2 1330 2 
1389 2 480 2 1330 2 845 2 1617 2 1394 2 
703 2 789 2 
1389 2 480 2 1330 2 1561 2 
1744 2 817 2 
704 2 469 2 
1043 2 526 2 
1820 2 643 2 
643 2 313 2 469 2 
643 2 793 2 469 2 
643 2 469 2 388 2 
643 2 1291 2 469 2 
93 6 1389 2 1330 2 1705 6 69 2 71 2 1771 2 1035 2 
1437 2 
796 2 1487 2 488 2 491 2 492 2 818 2 1196 2 605 2 712 6 824 2 956 6 505 2 1313 2 611 2 1510 2 507 2 1636 2 1637 2 1413 2 152 22 1416 2 405 2 841 2 1527 2 979 2 1332 2 524 2 167 2 1770 2 981 2 285 2 286 2 992 2 862 2 179 2 1346 2 1790 2 744 2 1003 4 1673 6 1551 2 1444 4 1793 2 314 2 200 2 758 2 759 2 1456 2 326 4 1460 2 1694 2 914 2 566 4 917 2 1362 2 1582 2 467 2 576 6 1364 2 921 2 471 6 1149 2 1588 2 355 2 683 2 1037 2 1595 2 1479 2 1601 6 938 2 119 4 237 22 1175 4 368 4 1174 2 
796 2 1487 2 488 2 491 2 492 2 1194 2 818 2 1196 2 605 2 712 6 824 2 956 6 505 2 1313 2 611 2 1510 2 507 2 1636 2 1637 2 1413 2 512 2 152 22 1416 2 620 2 405 2 841 2 1654 2 1527 2 979 2 1332 2 524 2 167 2 981 2 286 2 992 2 862 2 179 2 1346 2 1790 2 744 2 1003 4 1673 6 192 2 1551 2 1444 4 1793 2 314 2 200 2 758 2 759 2 1456 2 326 6 1460 2 1694 2 914 2 566 4 917 2 1362 2 1582 2 467 2 576 6 1364 2 921 2 471 6 1149 2 355 2 683 2 1037 2 1479 2 1601 6 938 2 119 4 237 22 1175 4 368 4 1174 2 
1073 2 1270 2 
787 2 
483 2 123 2 6 2 246 2 303 4 10 2 1440 4 1121 2 1792 2 1498 4 599 2 546 2 654 2 381 2 310 2 1621 2 198 2 1063 2 200 2 1406 2 958 2 1508 2 1313 2 208 2 1510 2 1636 2 1069 4 327 2 328 2 86 2 1515 8 1517 6 1140 6 614 2 909 2 1412 2 1213 6 1075 2 152 6 566 2 1579 2 1082 2 917 2 341 2 1363 2 283 8 470 4 471 4 1149 2 1367 2 1160 4 1475 2 1230 4 938 2 237 12 1236 2 1833 2 427 10 1237 4 368 2 
123 2 6 2 246 2 303 4 10 2 1440 4 1121 2 881 2 1792 2 599 2 1498 4 546 2 654 2 381 2 310 2 1621 2 198 2 1063 2 1799 4 200 2 1406 2 958 2 1508 2 1313 2 1691 2 208 2 1510 2 1636 2 1069 4 327 2 86 2 328 2 1515 8 1517 8 1140 8 614 2 909 2 1412 2 1213 6 152 6 1075 2 566 2 1579 2 1082 2 917 2 1363 2 283 8 470 4 1149 2 471 4 1367 2 1160 4 1475 2 987 2 1230 4 938 2 237 12 1236 2 1833 2 427 10 1237 4 368 2 
86 2 328 2 381 2 1517 2 310 2 909 2 198 2 1213 2 1160 2 1075 2 1082 2 1230 2 1508 2 470 2 1792 2 599 2 1069 4 1498 4 
483 2 123 2 6 2 246 2 303 4 10 2 1440 4 1121 2 1792 2 1498 4 599 2 546 2 654 2 381 2 310 2 1621 2 198 2 1063 2 200 2 1406 2 958 2 1508 2 1313 2 208 2 1510 2 1636 2 1069 4 327 2 328 2 86 2 1515 4 1517 6 1140 6 614 2 909 2 1412 2 1213 4 1075 2 152 6 566 2 1579 2 1082 2 917 2 341 2 1363 2 283 4 470 4 471 4 1149 2 1367 2 1160 4 987 2 1230 4 938 2 237 12 1236 2 1833 2 427 6 1237 4 368 2 
483 2 123 2 6 2 246 2 303 4 10 2 1440 4 1121 2 1792 2 1498 4 599 2 546 2 654 2 381 2 310 2 1621 2 198 2 1063 2 200 2 1406 2 958 2 77 2 1508 2 1313 2 208 2 1510 2 1636 2 1069 4 327 2 328 2 86 2 1515 4 1517 4 1140 6 614 2 909 2 1412 2 1213 6 1075 2 152 6 566 2 1579 2 1082 2 917 2 341 2 1363 2 283 4 470 4 471 4 1149 2 1367 2 1160 4 1230 4 938 2 237 12 1236 2 1833 2 427 6 1237 4 368 2 
483 2 123 2 6 2 246 2 303 4 10 2 1440 4 1121 2 1792 2 1498 4 599 2 546 2 654 2 381 2 310 2 1621 2 198 2 1063 2 200 2 1406 2 958 2 1508 2 1313 2 208 2 1510 2 1636 2 1069 4 327 2 328 2 86 2 1515 4 1517 6 1140 6 614 2 909 2 1412 2 1213 6 1075 2 152 6 566 2 1579 2 1082 2 917 2 341 2 1363 2 283 8 470 4 471 4 1149 2 1367 2 1160 4 1475 2 1230 4 938 2 237 12 1236 2 1833 2 427 6 1237 4 368 2 
483 2 123 2 6 2 246 2 303 4 10 2 1440 4 1121 2 1792 2 1498 4 599 2 546 2 654 2 381 2 310 2 1621 2 198 2 1063 2 200 2 1406 2 958 2 77 2 1508 2 1313 2 208 2 1510 2 1636 2 1069 4 327 2 328 2 86 2 1515 8 1517 6 1140 8 614 2 909 2 1412 2 1213 8 1075 2 152 6 566 2 1579 2 1082 2 917 2 341 2 1363 2 283 8 470 4 471 4 1149 2 1367 2 1160 4 1475 2 1230 4 938 2 237 12 1236 2 1833 2 427 10 1237 4 368 2 
483 2 123 2 6 2 246 2 303 4 10 2 1440 4 1121 2 1792 2 1498 4 599 2 546 2 654 2 381 2 310 2 1621 2 198 2 1063 2 200 2 1406 2 958 2 1508 2 1313 2 208 2 1510 2 1636 2 1069 4 327 2 328 2 86 2 1515 8 1517 6 1140 6 614 2 909 2 1412 2 1213 6 1075 2 152 6 566 2 1579 2 1082 2 917 2 341 2 1363 2 283 8 470 4 471 4 1149 2 1367 2 1160 4 1475 2 1230 4 938 2 237 12 1236 2 1833 2 427 10 1237 4 368 2 
86 2 328 2 1517 2 123 2 1140 4 1412 2 1213 4 1075 2 1579 2 1082 2 341 2 1440 2 1363 2 1121 2 283 2 1792 2 599 2 1498 2 654 2 1367 2 1588 1 1621 2 981 2 198 2 1160 2 1063 2 587 2 956 2 1230 2 77 2 1601 2 758 2 179 2 208 2 237 4 1236 2 1237 2 1833 2 1069 2 
86 2 328 2 1517 4 123 2 1140 4 1412 2 1213 4 1075 2 1579 2 1082 2 341 2 1440 2 1363 2 1121 2 283 6 1792 2 599 2 1498 2 654 2 1367 2 1621 2 981 2 198 2 1475 2 1160 2 1063 2 587 2 956 2 1230 2 1601 2 758 2 179 2 208 2 237 4 1236 2 1237 2 1833 2 1069 2 
86 2 328 2 1515 4 1517 4 123 2 1140 4 1412 2 1213 4 1075 2 1579 2 1082 2 341 2 1440 2 1363 2 1121 2 283 6 1792 2 599 2 1498 2 654 2 1367 2 1621 2 981 2 198 2 1475 2 1160 2 1063 2 587 2 956 2 1230 2 1601 2 758 2 179 2 208 2 237 4 1236 2 1237 2 427 4 1833 2 1069 2 
86 2 328 2 1515 4 1517 4 123 2 1140 4 1412 2 1213 4 1075 2 1579 2 1082 2 341 2 1440 2 1363 2 1121 2 283 6 1792 2 599 2 1498 2 654 2 1367 2 1621 2 981 2 198 2 1475 2 1160 2 1063 2 587 2 956 2 1230 2 1601 2 758 2 179 2 208 2 237 4 1236 2 1237 2 427 4 1833 2 1069 2 
86 2 328 2 1515 4 1517 6 123 2 1140 4 1412 2 1213 6 1075 2 1579 2 1082 2 303 2 341 2 1440 2 1363 2 1121 2 283 6 1792 2 599 2 1498 2 654 2 1367 2 1621 2 198 2 1475 2 1160 4 1063 2 1230 4 208 2 237 4 1236 2 1237 2 427 4 1833 2 1069 2 
123 2 1048 2 249 3 818 2 1498 2 599 2 1621 2 1063 2 605 2 712 6 505 2 1313 2 611 2 1510 2 716 2 1069 2 1636 2 1517 6 614 2 1413 2 1412 2 1213 6 1075 2 152 24 1416 2 1082 2 405 2 163 2 841 2 1654 2 283 6 1527 2 979 2 43 2 1230 4 992 2 862 2 50 2 1236 2 1237 2 427 2 430 2 1346 2 1790 2 1436 2 1437 2 1003 3 303 2 1440 2 1673 8 1121 2 192 2 1792 2 1444 4 654 2 198 2 200 2 759 2 1456 4 208 2 326 6 328 2 86 2 1694 3 1140 4 566 4 1579 2 917 2 341 2 1363 2 1582 2 467 2 576 6 921 3 1149 2 471 6 1367 2 108 2 1475 2 1160 4 1479 2 366 2 938 2 119 4 237 28 1833 2 1604 2 368 4 1175 4 
123 2 228 2 1121 2 
123 2 228 2 1121 2 
123 2 1183 2 818 2 1498 2 1063 2 605 2 712 2 148 2 956 2 505 2 1313 2 611 2 1510 2 1636 2 1069 2 1515 2 1517 4 1413 2 1213 4 152 14 1075 2 1416 2 1417 2 405 2 841 2 1654 2 283 6 1527 2 979 2 981 2 1230 2 992 2 862 2 179 2 427 2 1237 2 1790 2 877 2 1003 2 1673 2 1440 2 192 2 1121 2 654 2 309 2 200 2 758 2 759 2 1456 2 326 6 86 2 328 2 1267 2 1140 4 566 4 917 2 1582 2 1467 2 467 2 576 2 1364 2 471 6 1149 2 1367 2 1160 2 1475 2 1479 2 1601 2 938 2 119 4 237 18 1175 4 368 4 
1073 2 1149 2 1485 2 168 2 710 2 43 2 909 2 926 2 152 2 1011 2 247 2 1456 2 717 2 237 4 1340 2 778 2 1794 2 
123 2 1183 4 818 2 1498 2 1063 2 605 2 712 2 148 2 956 2 505 2 1313 2 611 2 1510 2 1636 2 1069 2 1515 2 1517 4 1413 2 1213 4 152 14 1075 2 1416 2 1417 2 405 2 841 2 1654 2 283 6 1527 2 979 2 981 2 1230 2 992 2 862 2 179 2 427 2 1237 2 1790 2 877 2 1003 4 1673 2 1440 2 192 2 1121 2 752 2 654 2 309 2 200 2 758 2 759 2 1456 2 326 6 86 2 328 2 1267 2 1140 4 456 2 566 4 917 2 1582 2 1467 2 467 2 576 2 1364 2 471 6 1149 2 1367 2 1160 2 1475 2 1479 2 1601 2 938 2 119 4 237 18 1175 4 368 4 
123 2 1183 2 818 2 1498 2 1063 2 605 2 712 2 148 2 956 2 505 2 1313 2 611 2 1510 2 1636 2 1069 2 1515 2 1517 4 1413 2 1213 4 152 14 1075 2 1416 2 1417 2 405 2 841 2 1654 2 283 6 1527 2 979 2 981 2 1230 2 992 2 862 2 179 2 427 2 1237 2 1790 2 877 2 1003 2 1673 2 1440 2 192 2 1121 2 654 2 309 2 200 2 758 2 759 2 1456 2 326 6 86 2 328 2 1267 2 1140 4 566 4 917 2 1582 2 1467 2 467 2 576 2 1364 2 471 6 1149 2 1367 2 1160 2 1475 2 1479 2 1601 2 938 2 119 4 237 18 1175 4 368 4 
940 2 0 3 2 3 4 2 941 2 8 2 9 2 946 2 947 2 948 2 950 2 951 1 14 2 953 2 954 2 17 2 18 38 21 22 22 2 23 13 955 2 956 178 26 158 963 4 967 4 30 14 31 2 973 120 974 3 33 16 977 80 36 16 979 2 40 16 41 2 43 2 44 3 46 2 983 10 47 2 986 2 988 4 989 2 990 2 991 2 49 22 992 2 993 3 994 2 52 2 53 6 999 1 57 2 1000 2 1003 114 1004 78 61 16 62 2 1005 2 63 2 66 2 67 112 70 6 72 2 1008 38 1010 78 75 80 1012 24 78 2 82 2 83 8 1017 10 88 16 1021 6 89 3 90 7 1023 2 92 2 1025 2 1027 2 98 2 1031 8 97 26 99 24 100 2 102 2 104 20 1033 2 108 2 109 2 1034 2 111 3 1036 2 114 2 116 2 115 2 1038 10 119 402 1040 95 121 2 1041 4 124 2 1044 2 1045 2 128 2 127 2 126 2 1047 16 130 2 132 2 1049 38 1050 2 134 2 135 38 1053 2 1055 2 1054 10 137 2 1056 3 138 2 139 2 1059 8 141 2 142 2 1062 2 145 2 1064 2 1066 156 1067 8 1071 2 1072 2 152 966 1076 78 1078 1 156 2 1079 2 158 76 157 4 1084 2 159 2 1083 78 1085 2 162 2 163 2 1087 82 1091 2 164 2 1093 2 169 2 1097 10 174 2 175 38 1098 60 177 12 1100 78 1102 2 1104 2 181 2 1105 2 183 22 1109 4 1111 2 1112 2 187 2 188 20 1116 2 191 2 1118 12 1119 2 192 324 193 2 1122 3 1123 38 1125 2 196 158 1127 14 1129 3 200 2 201 2 202 6 1131 1 205 40 1133 2 206 2 1134 80 1136 2 209 8 1137 78 211 2 215 2 217 3 1139 2 1142 32 1144 2 1145 2 219 15 1146 6 220 2 222 124 223 2 1148 2 224 2 1149 2 1151 2 1156 2 1153 11 225 4 1158 3 227 4 229 2 230 3 1161 2 1162 80 232 2 231 6 1165 4 1166 18 234 2 1167 3 1168 80 1169 2 1171 2 1172 2 237 1174 240 3 1175 480 1179 2 1180 2 1182 1 1181 38 241 10 242 2 243 2 244 106 1187 2 245 14 249 2 1191 6 1192 2 1193 2 251 2 252 2 253 2 254 2 1196 46 259 2 1198 2 1200 1 1201 1 260 2 261 2 1202 34 262 2 1207 2 263 2 1209 2 267 2 1210 6 268 2 270 6 271 2 272 38 273 2 276 1 1217 3 279 83 1218 2 282 8 1219 4 1220 2 1222 78 1223 2 284 38 286 86 287 8 288 2 289 2 1233 2 1234 2 293 2 295 2 296 2 297 36 299 2 1244 3 1243 38 1247 2 1246 2 1248 24 302 38 1249 3 1250 4 1252 2 307 2 1253 2 308 2 1256 2 1258 2 1257 2 312 2 1259 2 1260 4 315 80 318 2 317 76 319 2 320 1 321 2 322 3 323 2 1262 2 1263 2 326 1112 330 2 1266 4 1271 78 335 2 1275 2 344 2 348 2 1282 2 1283 2 354 2 355 2 356 2 357 10 358 4 1286 2 1288 234 1289 2 365 2 363 24 364 2 1290 3 367 112 1293 2 1292 80 368 8 370 2 372 2 371 2 1297 2 374 8 1300 2 1301 6 376 24 1303 3 379 3 380 2 1305 1 382 2 383 2 387 2 1309 2 389 2 390 2 1311 2 1312 4 1313 2 1314 2 1315 2 391 38 1317 3 392 4 395 1 396 2 397 2 399 66 400 80 1323 2 1325 12 1327 48 403 2 1329 4 405 82 406 3 407 2 1331 80 1332 2 412 6 1334 4 1335 2 413 2 414 6 415 2 1336 2 422 2 424 2 425 2 426 36 1339 2 430 2 1342 2 432 2 1343 102 434 104 435 38 1344 24 1345 38 1346 2 436 10 437 3 438 2 441 2 1348 2 445 12 446 2 1350 16 1351 2 447 2 448 2 1353 3 1354 20 452 2 454 2 453 8 461 558 459 4 462 2 463 3 1361 2 464 2 1362 18 465 2 467 2 471 10 1365 80 1368 78 1369 2 472 2 473 2 1371 2 474 2 481 4 1375 80 1379 1 1380 2 1381 78 1384 2 1385 2 1386 4 489 14 491 2 1391 2 494 10 497 2 1396 2 1399 2 1400 2 500 156 501 2 1403 4 504 6 505 2 1408 4 507 2 1410 2 1411 2 1413 8 1416 2 1421 2 517 2 519 2 1423 2 520 2 1425 2 1426 10 524 84 525 80 529 2 530 2 1429 2 1430 4 534 2 1434 2 539 2 1435 2 541 2 1438 4 1439 3 542 2 543 2 545 2 544 38 1441 2 1443 2 1444 12 547 2 1447 100 1449 2 554 38 555 2 1452 20 1453 60 556 18 557 2 1454 2 1455 2 1456 10 1457 2 560 65 563 6 562 4 1460 2 1461 2 566 8 568 2 569 8 1462 4 1464 2 1468 2 575 2 576 32 578 2 579 2 580 2 1473 2 583 2 589 2 1479 2 1480 2 1481 2 1483 4 1482 2 591 2 592 2 593 2 1487 2 1486 38 1490 6 1489 2 596 2 598 2 1495 2 1496 54 1499 38 1501 2 602 2 1502 3 604 2 1505 4 1507 22 607 78 609 2 611 4 1510 2 1514 20 1513 2 1516 2 1519 2 617 2 618 3 621 2 622 2 1522 2 623 2 1524 22 1523 38 1525 2 1526 12 1528 8 1527 2 626 4 627 2 628 3 1530 2 634 2 635 2 1534 2 636 2 637 2 1540 78 1541 2 1543 3 644 3 1545 2 1547 2 646 14 1549 12 648 60 1550 2 647 4 1551 3 652 2 651 2 653 2 1555 2 655 2 1558 24 656 8 1559 2 658 2 659 2 1566 78 1567 78 663 166 665 2 667 38 668 4 1569 2 670 19 671 2 1572 2 1573 2 672 2 675 2 1581 22 1582 2 1587 2 680 2 1588 3 1590 10 1591 2 1592 2 1593 2 1594 2 1596 2 1599 8 1598 2 686 2 1601 183 687 2 1603 3 689 2 690 6 691 2 1604 2 693 156 695 6 1611 2 1612 10 697 4 1613 2 1618 22 708 3 709 22 1622 2 1623 10 712 18 1625 2 1626 4 1628 4 1629 2 1631 2 1630 8 714 2 715 2 1633 2 1636 2 718 6 1638 2 720 2 1640 2 721 2 1642 2 722 80 1644 2 723 2 1648 2 1649 6 729 2 1654 314 1655 2 1656 80 730 32 1660 4 1663 3 735 2 736 2 737 2 1665 3 738 18 1667 3 1668 2 1669 2 742 6 745 2 1670 2 1673 126 1675 2 1676 2 749 2 751 3 1678 2 1681 4 1679 2 754 10 1683 158 1685 14 756 80 1687 34 1688 2 757 2 1690 24 759 2 1692 2 761 34 1694 46 764 3 1696 38 766 2 1698 2 770 4 769 4 775 2 776 2 777 2 779 78 783 2 1708 2 784 2 1710 2 788 234 1712 40 1713 14 794 2 795 4 1715 2 1717 2 796 4 1718 20 799 2 1719 2 800 6 802 14 804 3 806 2 807 2 1725 2 809 2 810 2 812 2 1730 18 1732 20 1736 2 818 84 1739 60 1741 2 1743 38 1745 2 1746 18 820 2 825 2 827 78 830 2 1750 2 831 2 833 2 1753 12 1754 4 1755 2 835 2 1758 1 1757 2 1759 2 836 2 1762 40 838 2 1763 2 840 2 1764 2 841 2 842 10 843 3 1767 3 844 3 848 3 849 2 851 3 853 2 1769 2 855 2 1775 1 857 3 859 2 1779 2 1780 2 862 8 1781 2 864 78 1785 4 1787 8 871 80 1790 2 874 2 876 4 879 9 1791 2 880 3 882 2 1793 2 1795 9 884 2 885 76 1797 4 1798 2 889 2 890 2 1802 2 1803 6 891 2 892 2 893 2 894 1 897 2 1806 3 900 2 1807 3 1808 78 902 26 1809 4 1810 3 904 2 905 38 906 2 907 20 1815 12 910 3 913 3 916 4 1817 2 917 2 1818 2 1819 52 1821 2 1822 2 918 2 919 2 920 2 921 16 922 2 1824 2 1825 2 923 2 924 2 1826 66 1827 2 1829 14 928 3 929 6 931 2 932 170 1830 36 1831 2 934 2 936 4 938 2 939 2 1832 2 
1694 2 452 2 1045 2 92 2 273 2 126 2 941 2 152 2 1612 2 1346 2 1249 2 1003 2 1673 2 576 2 1444 2 1823 2 921 2 1196 6 1623 2 288 2 712 2 389 2 1038 4 237 2 
1694 2 452 2 1045 2 92 2 273 2 126 2 941 2 152 2 1612 2 1346 2 1249 2 1003 2 1673 2 576 2 1444 2 1823 2 921 2 1196 6 1623 2 288 2 712 2 389 2 1038 4 237 2 
1694 2 452 2 1045 2 92 2 273 2 126 2 941 2 152 2 1612 2 1346 2 1249 2 1003 2 1673 2 576 2 1444 2 1823 2 921 2 1196 6 1623 2 288 2 712 2 389 2 1038 4 237 2 
1210 2 1694 3 53 2 1718 4 184 2 1021 4 511 2 800 2 126 2 1343 6 1815 2 152 4 1490 2 1344 3 872 2 1346 2 1248 4 1003 3 1819 2 1673 2 1118 2 342 2 1549 2 1526 2 99 3 1585 2 104 4 1447 2 1589 2 1428 2 1709 4 477 2 1452 4 1354 4 1312 2 738 4 1537 3 237 10 1459 2 668 2 
53 2 1718 4 184 2 800 2 1343 6 126 2 872 2 1344 2 1490 2 1346 2 1248 4 1003 2 1118 2 1673 2 1549 2 1447 2 1354 4 1452 4 1312 2 668 2 563 2 1459 2 1210 2 1694 2 511 2 1021 4 1815 2 152 4 1819 2 342 2 1526 2 99 2 1585 2 579 2 104 4 1428 2 1589 2 357 2 1709 4 477 2 237 10 1537 2 738 4 
53 2 1718 4 184 2 800 2 1343 6 126 2 872 2 1344 2 1490 2 1346 2 1248 4 1003 2 1118 2 1673 2 1549 2 1447 2 1354 4 1452 4 1312 2 668 2 563 2 1459 2 1210 2 1694 2 511 2 1021 4 1815 2 152 4 1819 2 342 2 1526 2 99 2 1585 2 579 2 104 4 1428 2 1589 2 357 2 1709 4 477 2 237 10 1537 2 738 4 
53 2 1718 4 184 2 800 2 1343 6 126 2 872 2 1344 2 1490 2 1346 2 1248 4 1003 2 1118 2 1673 2 1549 2 1447 2 1354 4 1452 4 1312 2 668 2 563 2 1459 2 1210 2 1694 2 511 2 1021 4 1815 2 152 4 1819 2 342 2 1526 2 99 2 1585 2 579 2 104 4 1428 2 1589 2 357 2 1709 4 477 2 237 10 1537 2 738 4 
53 2 1718 4 184 2 800 2 1343 6 126 2 872 2 1344 2 1490 2 1346 2 1248 4 1003 2 1118 2 1673 2 1549 2 1447 2 1354 4 1452 4 1312 2 668 2 563 4 1459 2 1210 2 1694 2 511 2 1021 4 1815 2 152 4 1819 2 342 2 1526 2 99 2 1585 2 579 4 104 4 1428 2 1589 2 357 4 1709 4 477 2 237 10 1537 2 738 4 
1353 2 234 2 54 2 1023 2 690 2 182 2 
481 2 1353 2 1218 2 286 2 82 2 1372 2 211 2 
869 2 1641 2 1143 2 152 8 32 2 1788 2 1419 2 278 1 1251 2 404 1 39 2 1448 2 42 2 1560 1 173 2 1130 2 1014 2 1597 2 1714 2 610 2 1039 1 938 2 965 2 237 10 739 1 325 2 
1210 6 53 6 1752 2 1021 4 800 6 1815 6 152 6 1490 6 1248 15 916 2 1146 4 1549 6 517 2 1466 1 1526 6 598 2 1681 2 522 2 579 2 781 2 1530 2 357 4 1660 2 1625 2 202 4 1782 2 237 6 209 2 738 12 668 2 563 3 
104 2 780 2 1092 4 1718 2 694 2 550 1 1797 2 551 2 486 2 152 1 1801 6 1452 2 746 2 1465 2 649 2 81 2 237 1 306 2 
104 2 780 2 1092 4 1718 2 694 4 1797 4 551 4 486 2 1801 6 1452 2 746 2 1465 2 649 2 81 2 306 2 
104 2 780 6 1092 4 1718 2 694 8 550 1 1797 8 551 8 486 2 152 1 1801 10 1452 2 746 2 1465 2 649 2 81 2 237 1 306 8 
104 2 1092 2 1718 2 694 2 1797 2 551 2 486 2 1801 2 1452 2 746 2 1465 2 649 2 81 2 
693 6 1381 4 1386 4 244 16 806 2 1724 2 1188 10 1190 2 1492 2 1615 2 945 10 377 4 135 4 818 6 950 2 1395 8 1499 4 1500 2 500 11 607 4 1066 10 26 10 611 2 391 4 1074 10 1754 4 1414 2 1322 2 152 70 1076 4 722 4 279 6 1083 4 1523 4 405 6 842 2 1654 27 1767 1 1331 4 628 3 632 4 525 4 414 2 175 4 1778 2 49 8 1100 4 294 4 864 6 1239 16 1243 4 998 4 537 8 434 8 871 8 435 4 1113 2 1439 2 1004 4 437 2 192 29 1347 2 1795 4 442 32 754 4 196 10 1683 10 1010 4 756 4 447 2 315 4 75 4 1686 4 1566 4 662 2 1567 4 663 8 1134 4 1355 4 664 8 667 4 1137 4 326 103 1808 4 905 4 214 4 1696 4 1271 4 333 2 461 24 772 2 222 14 1706 2 1472 1 779 4 1365 4 106 8 1588 1 785 2 788 24 1162 4 1288 24 932 30 1375 4 1168 4 1601 15 1376 16 119 36 237 78 1175 44 
693 2 1386 2 806 2 1001 2 1004 2 192 12 1494 2 1347 2 818 2 950 2 1500 2 706 2 445 1 196 6 754 4 1683 6 1010 2 447 2 500 2 75 4 1566 2 662 2 1066 2 26 6 504 2 1134 4 611 2 326 40 1754 2 1414 2 1271 2 1322 2 152 26 722 4 461 8 279 4 772 2 406 1 405 2 1654 12 844 2 37 2 628 2 1222 2 1153 1 1588 2 525 4 414 2 44 2 1162 4 932 6 49 5 1168 4 1601 14 119 14 1040 9 237 28 1175 14 864 2 
693 36 1381 6 1386 4 244 42 942 4 806 8 490 4 1190 2 1302 4 493 2 1494 2 818 14 135 4 950 8 1499 4 1500 2 706 2 1058 10 1060 2 500 16 607 6 827 24 1066 18 26 16 504 4 611 8 391 4 1068 4 1634 26 1512 2 718 2 1639 12 1320 24 1754 4 1756 10 1414 2 1322 2 152 134 400 6 1076 6 722 6 1215 4 277 24 514 90 279 8 1083 6 406 2 1523 4 405 14 1767 4 1654 58 844 2 1331 6 408 8 628 6 1222 4 525 6 44 2 414 4 1225 24 175 4 49 15 1100 6 1536 8 864 10 1243 4 538 8 434 42 871 24 435 4 1001 2 1439 2 1004 10 437 2 192 58 1677 4 1347 2 1795 5 445 7 196 16 754 8 1683 16 1556 90 1010 10 756 6 447 8 315 6 75 6 1566 10 205 2 1567 6 559 4 1134 6 663 50 667 4 1137 6 326 248 1808 6 905 4 1695 10 1696 4 1271 10 767 4 461 124 567 26 772 2 1029 4 222 12 1278 18 1706 2 779 6 1365 6 1153 11 1588 4 1368 24 788 84 1162 6 1288 92 932 34 1375 6 1168 6 1601 28 118 6 119 88 1040 22 237 150 1175 112 
51 2 693 2 369 2 1721 2 806 2 944 2 375 2 1188 2 811 2 1004 2 1492 2 1191 4 945 2 192 6 1677 2 1347 2 818 2 1442 2 950 2 1500 2 706 2 1058 2 601 2 196 4 498 2 1683 4 1010 2 500 2 447 2 75 2 1747 2 1199 2 204 2 1566 2 1132 4 1066 2 662 2 26 4 1134 2 760 2 611 2 326 48 1074 2 1571 2 1695 2 1320 2 1271 2 1756 2 1414 2 333 2 274 2 1322 2 150 2 152 44 722 2 1360 2 461 6 277 2 724 2 674 2 279 6 676 2 772 2 402 2 221 4 405 2 977 6 728 2 1654 6 37 2 1584 2 628 2 1586 2 1588 2 525 2 584 2 1225 2 110 2 1162 2 858 4 1664 2 1478 2 1168 2 362 2 791 2 1601 36 119 20 1536 2 237 46 864 2 1175 20 
1600 2 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 
1238 1 353 1 661 1 1138 1 440 1 1030 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 582 311 441 1036 1037 800 251 365 607 207 1433 165 731 616 1550 440 687 86 698 391 810 1324 662 1500 456 1136 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 227 1483 1164 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfo:isPrestate()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:elementIsIntegral()Z
daikon.ProglangType:baseIsString()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.ProglangType:dimensions()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(FF)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:subsetOf([F[D)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_73()Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isIOASet()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3_5()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3_36()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3_19()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_3R_69()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:getToken(I)Ljtb.Token; | ASSIGN | 214210 | = null
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:element_range([I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_51()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:subsetOf([B[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_75()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaCharStream:getBeginLine()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3_22()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_12(I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_72()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:slice([III)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:memberOf(D[F)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice3:arity()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_61()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([J)[J
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_119()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3_15()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3_28()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.Invariant:is_false()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_1()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.ProglangType:isString()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.ProglangType:isFloat()Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:lte(II)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3_29()Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eq(II)Z
daikon.ProglangType:isIntegral()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.MathMDE:pow(II)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:memberOf(F[D)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple; | RETURN | 10267 | return null
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaCharStream:readChar()C
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.ProglangType:isArray()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_118()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.PptSlice0:arity()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:sum([I)I
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Ppt:Ppt()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:isReverse([I[I)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:eltsGT([II)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:has_typeof()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_14()Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 2 981 2 444 2 1649 2 814 2 1374 2 1653 4 958 2 1216 2 
610 2 1186 2 697 2 379 2 910 2 399 2 692 6 534 2 1599 6 1054 2 418 6 
981 2 444 2 198 6 1105 2 89 2 1400 2 836 6 1646 6 781 2 522 4 1307 6 651 2 474 4 
1630 16 222 10 444 6 0 2 1511 2 1214 16 1215 10 1028 4 63 4 1370 10 35 26 234 6 235 2 161 8 939 10 981 6 9 2 432 8 376 10 1352 2 244 13 1156 30 596 2 824 4 246 2 581 8 1652 8 856 6 535 4 880 16 
1439 6 908 4 
1019 2 
0 2 56 2 775 2 1259 2 1262 2 568 2 3 2 1007 2 1065 2 1010 4 1067 4 69 2 1524 2 1071 2 1384 2 1423 2 1534 2 1422 2 444 4 965 2 26 2 696 2 491 2 1633 4 745 2 905 2 1475 2 1030 2 274 2 1100 2 87 2 1601 2 282 2 130 2 981 4 817 2 187 2 1112 2 92 2 667 2 988 2 1256 4 1209 2 609 2 
222 16 1630 32 444 4 516 2 492 4 906 6 1214 32 972 4 1453 6 1215 6 63 2 1542 4 720 6 1370 16 35 48 234 4 429 2 161 6 259 2 260 6 939 16 918 2 981 4 132 4 376 16 1352 2 1156 56 244 22 1076 2 263 4 726 4 116 2 1561 8 556 6 1652 18 856 4 52 6 714 4 880 32 
1115 2 799 2 1209 2 
133 2 1428 22 289 2 841 2 568 2 17 2 228 10 978 2 1504 2 1484 2 117 2 1617 2 314 2 205 2 
222 2 1630 2 1214 2 1264 2 1215 4 63 2 158 2 1370 2 35 4 234 2 887 2 317 2 980 2 939 2 376 2 244 2 1156 6 1418 2 1652 2 1507 2 880 2 219 2 963 2 
222 4 1630 8 286 2 376 4 906 6 244 4 1156 16 1214 8 726 4 1542 4 720 6 824 2 1370 4 35 12 938 2 880 8 939 4 
26 2 716 4 774 2 83 10 1094 2 1213 14 907 62 834 4 1061 4 1217 4 1543 2 1218 2 748 2 1479 4 916 4 867 2 7 2 1010 4 1345 2 1175 2 1201 4 1154 2 1108 2 759 2 598 4 481 2 15 2 794 2 1559 10 329 2 1625 2 1330 2 927 4 878 4 1115 6 443 4 386 2 799 2 609 4 1209 8 
495 2 1365 2 1129 2 1517 2 1019 2 1281 2 277 2 1066 2 1295 2 54 2 
420 2 99 2 1260 1 200 1 1265 2 1455 12 1062 6 428 1 1374 2 618 2 315 2 107 1 208 2 209 2 723 4 319 2 839 2 944 3 321 2 1378 2 323 1 14 3 1277 2 325 2 1465 6 1181 2 1079 2 1081 1 732 2 733 16 851 2 627 2 1182 2 1469 2 737 2 1185 16 739 2 444 32 27 2 1472 2 1286 2 858 1 1589 2 447 2 30 6 1591 2 1096 2 1097 2 1189 2 124 2 1389 2 975 2 862 1 642 2 641 2 1480 2 452 3 1101 1 1492 2 981 34 546 2 756 3 872 2 1606 2 242 2 658 3 1497 2 48 2 663 32 142 2 1401 4 143 4 1304 12 764 2 147 2 249 2 670 2 51 2 1117 4 770 2 671 2 464 1 675 3 564 24 466 2 1404 3 999 2 1000 3 60 8 469 4 1615 2 782 6 258 1 473 2 1011 2 371 3 1127 2 1525 1 70 2 895 2 480 2 1018 2 899 2 171 3 693 2 268 24 798 16 584 1 1137 2 1629 1 1023 8 1427 2 1141 2 180 4 1429 2 1430 1 1026 1 1541 2 1146 5 395 2 396 32 1341 16 701 2 1432 2 275 2 1342 2 499 2 1237 2 88 4 1548 2 186 2 285 2 592 8 407 2 408 3 1242 4 1440 2 1355 2 509 2 295 2 1251 2 603 2 1158 2 1159 1 1651 2 513 3 96 2 299 2 197 2 
981 2 498 2 
981 4 864 2 1449 2 
253 2 
827 4 829 4 423 6 613 4 1456 2 1266 2 616 2 1458 24 1459 2 1069 2 207 2 1073 2 840 2 1075 48 1462 8 211 18 1279 2 846 4 1082 4 1467 4 629 4 440 2 441 2 218 2 857 2 1090 22 1285 2 1093 2 448 48 1476 2 450 2 451 8 866 8 37 14 645 22 1292 146 1490 36 40 2 653 2 41 2 1104 2 657 2 45 2 1496 2 659 2 1109 14 1111 2 662 2 455 2 1500 2 456 2 1505 2 1302 14 876 8 877 2 460 48 1510 2 677 4 678 2 1314 14 883 4 251 2 885 2 471 4 472 2 1519 2 889 4 684 48 890 4 1526 2 1324 2 893 8 687 2 74 48 1533 4 694 2 1136 2 80 20 903 4 695 28 1335 14 698 2 1142 2 1145 48 1147 2 911 2 86 2 1151 2 278 2 1153 36 917 8 1346 8 1550 2 1551 2 1350 42 507 2 711 2 1157 2 712 4 924 2 1359 4 929 8 1166 6 932 4 1168 2 1169 2 518 4 519 10 308 2 1171 2 311 2 313 2 937 2 521 2 1174 6 1578 2 1579 2 1581 6 324 2 946 48 1582 2 113 2 949 6 1382 2 731 2 734 4 1383 26 736 2 951 2 332 2 961 16 122 2 740 2 335 2 336 2 968 2 970 4 971 2 744 48 536 2 340 2 1190 2 538 2 342 2 125 4 343 192 345 48 1598 4 547 2 350 2 754 36 1605 2 549 48 1394 2 982 2 138 4 140 8 760 2 145 2 146 26 765 2 1207 4 359 2 766 2 360 16 989 10 1402 2 1403 2 151 4 364 2 1001 2 1002 2 365 2 1004 4 776 2 1407 2 368 4 1222 8 1225 4 1412 2 1618 48 163 48 1012 146 1013 6 1014 2 165 2 789 2 791 2 574 4 1624 4 1421 4 1420 8 1626 146 797 48 582 2 800 2 801 2 806 4 391 2 392 2 182 2 1634 8 810 2 397 4 1031 20 1433 2 1036 2 1037 2 405 2 1239 4 1643 20 1644 2 1246 4 597 2 823 8 414 2 1044 2 1249 2 1250 2 1445 4 1645 2 1447 2 1048 2 1047 2 1052 4 825 2 1448 2 194 26 416 2 607 2 1255 22 
1184 2 1390 1 530 2 220 2 
783 2 1184 2 
900 2 1572 2 298 2 1184 2 1028 2 1209 2 1348 2 
925 2 1184 2 1348 2 
38 2 1184 2 1348 2 
1515 2 552 2 220 2 
1184 2 1348 2 
446 2 552 2 
78 2 1184 2 
384 2 552 2 220 2 
358 2 1356 2 220 2 
1414 2 650 2 220 2 
761 2 1068 2 220 2 
572 2 220 2 1091 2 
803 2 552 2 
1184 2 524 2 
1356 2 272 2 
1414 2 1637 2 
1068 2 333 2 
572 2 1340 2 
1130 2 552 2 
572 2 33 2 
1068 2 845 2 
1414 2 838 2 
58 2 1356 2 
384 2 751 2 552 2 220 2 
384 2 1560 2 751 2 552 2 220 2 
301 2 552 2 220 2 
1200 2 552 2 220 2 
478 2 1289 2 1396 2 1523 2 
1253 2 298 2 1191 2 1209 2 
1273 2 900 2 1253 2 298 2 1191 2 1209 2 
298 2 1184 2 1028 2 1209 2 1348 2 1233 2 
965 2 1602 2 
787 2 298 2 1028 2 1209 2 
1552 2 1068 2 
415 2 572 2 
1356 2 576 2 
1414 2 1098 2 
1414 2 1 2 572 2 
1414 2 1194 2 572 2 
1414 2 1092 2 572 2 
1414 2 572 2 514 2 
1284 6 1022 2 501 2 1327 2 1131 2 298 2 1183 6 1209 2 
458 2 552 2 
1139 4 818 2 1059 2 1428 6 595 2 389 2 973 4 730 2 1179 2 1291 2 1234 2 193 2 203 2 1501 2 1221 2 1518 2 647 2 162 2 
220 2 1176 2 
701 2 
99 2 1571 2 833 2 1455 8 1265 2 426 2 1062 2 1374 2 619 2 315 2 106 4 107 2 208 2 723 2 319 2 110 2 1378 2 1465 6 1181 2 1081 2 1182 2 1085 2 1469 2 737 2 1185 6 959 4 444 26 1286 2 30 2 1591 2 861 2 1480 2 1487 2 981 26 242 6 663 6 142 2 143 4 1401 4 1611 2 764 2 1304 8 1506 2 670 2 558 2 466 4 60 2 469 4 1615 2 782 4 257 2 1413 2 1011 2 1018 2 899 2 1629 4 1141 2 180 2 1024 2 395 2 396 4 275 2 499 2 88 2 186 2 407 2 1242 4 1642 2 1440 2 1355 2 509 2 295 2 1251 2 601 2 96 2 197 2 
99 2 833 2 1455 8 1265 2 426 2 1062 2 1374 2 619 2 315 2 106 4 107 2 318 2 208 2 723 2 319 2 321 2 110 2 1378 2 1465 6 1181 2 1081 2 628 2 1182 2 1085 2 1469 2 737 2 1185 6 959 4 444 26 1286 2 30 2 1591 2 861 2 1480 2 1487 2 981 26 242 6 663 6 142 2 143 4 1401 4 764 2 1304 8 1506 2 670 2 558 2 563 2 466 4 60 2 469 4 1615 2 782 6 257 2 1413 2 1011 2 1018 2 899 2 1629 1 1141 2 180 2 1024 2 395 2 396 4 275 2 499 2 88 2 186 2 407 2 1242 4 1642 2 1440 2 1355 2 509 2 295 2 1251 2 1158 2 96 2 299 2 197 2 
1280 2 
454 2 1193 2 
610 2 1118 2 995 2 1364 2 1513 2 303 2 1219 2 1064 2 1128 2 319 2 1072 4 685 2 942 2 1378 2 13 2 1018 2 1228 2 1465 4 1466 2 692 6 1132 2 630 2 1469 2 442 8 902 2 1536 2 444 6 1286 2 969 4 697 2 1027 2 1480 2 399 4 499 2 1482 2 400 2 1599 6 1546 2 1293 10 1638 2 502 2 705 2 981 12 1438 4 1241 2 1553 2 656 4 820 4 411 4 1202 8 600 2 354 2 143 2 1401 2 1049 2 1162 2 1565 2 195 2 1054 4 418 6 
610 2 1118 2 995 2 1364 2 1513 2 567 4 1219 2 1064 2 1128 2 319 2 1072 4 685 2 942 2 379 2 1378 2 13 2 71 2 1018 2 1228 2 1465 4 847 2 1466 2 692 8 1132 2 630 2 1469 2 442 8 902 2 444 6 1286 2 969 4 697 2 1027 2 1480 2 399 4 499 2 1482 2 400 2 1599 8 1546 2 1293 10 1638 2 502 2 705 2 981 12 1438 4 1241 2 1553 2 656 4 820 4 411 4 1202 8 600 2 354 2 1401 2 143 2 1049 2 1162 2 1565 2 195 2 1054 4 418 6 
705 2 1072 2 1241 2 685 2 942 2 656 4 820 4 1513 2 1027 2 1049 2 399 2 1162 2 1599 2 1546 2 1054 2 195 2 418 2 502 2 
1118 2 995 2 1364 2 1513 2 303 2 1219 2 1064 2 1128 2 319 2 1072 4 685 2 942 2 379 2 1378 2 13 2 1018 2 1228 2 1465 4 1466 2 692 6 1132 2 630 2 1469 2 442 4 902 2 1536 2 444 6 1286 2 969 4 697 2 1027 2 1480 2 399 4 499 2 1482 2 400 2 1599 6 1546 2 1293 6 1638 2 502 2 705 2 981 12 1438 4 1241 2 1553 2 656 4 820 4 411 4 1202 4 600 2 354 2 143 2 1401 2 1049 2 1162 2 1565 2 195 2 1054 4 418 4 
1118 2 995 2 1364 2 1513 2 303 2 1219 2 1064 2 1128 2 319 2 1072 4 685 2 942 2 1378 2 13 2 1018 2 1228 2 1465 4 1466 2 692 6 1132 2 630 2 1469 2 442 4 902 2 1536 2 444 6 1286 2 1186 2 969 4 697 2 1027 2 1480 2 399 4 499 2 1482 2 400 2 1599 4 1546 2 1293 6 1638 2 502 2 705 2 981 12 1438 4 1241 2 1553 2 656 4 820 4 411 4 1202 4 600 2 354 2 143 2 1401 2 1049 2 1162 2 1565 2 195 2 1054 4 418 6 
610 2 1118 2 995 2 1364 2 1513 2 303 2 1219 2 1064 2 1128 2 319 2 1072 4 685 2 942 2 1378 2 13 2 1018 2 1228 2 1465 4 1466 2 692 6 1132 2 630 2 1469 2 442 8 902 2 1536 2 444 6 1286 2 969 4 697 2 1027 2 1480 2 399 4 499 2 1482 2 400 2 1599 6 1546 2 1293 6 1638 2 502 2 705 2 981 12 1438 4 1241 2 1553 2 656 4 820 4 411 4 1202 4 600 2 354 2 143 2 1401 2 1049 2 1162 2 1565 2 195 2 1054 4 418 6 
610 2 1118 2 995 2 1364 2 1513 2 303 2 1219 2 1064 2 1128 2 319 2 1072 4 685 2 942 2 1378 2 13 2 1018 2 1228 2 1465 4 1466 2 692 8 1132 2 630 2 1469 2 442 8 902 2 1536 2 444 6 1286 2 1186 2 969 4 697 2 1027 2 1480 2 399 4 499 2 1482 2 400 2 1599 6 1546 2 1293 10 1638 2 502 2 705 2 981 12 1438 4 1241 2 1553 2 656 4 820 4 411 4 1202 8 600 2 354 2 1401 2 143 2 1049 2 1162 2 1565 2 195 2 1054 4 418 8 
610 2 1118 2 995 2 1364 2 1513 2 303 2 1219 2 1064 2 1128 2 319 2 1072 4 685 2 942 2 1378 2 13 2 1018 2 1228 2 1465 4 1466 2 692 6 1132 2 630 2 1469 2 442 8 902 2 1536 2 444 6 1286 2 969 4 697 2 1027 2 1480 2 399 4 499 2 1482 2 400 2 1599 6 1546 2 1293 10 1638 2 502 2 705 2 981 12 1438 4 1241 2 1553 2 656 4 820 4 411 4 1202 8 600 2 354 2 143 2 1401 2 1049 2 1162 2 1565 2 195 2 1054 4 418 6 
1058 6 611 2 1455 4 426 4 1062 2 1064 2 1072 4 13 2 212 1 1463 2 1464 6 1465 6 1080 6 1466 2 1084 2 630 2 1469 2 1085 2 442 2 444 24 25 6 1286 2 1287 2 30 2 864 6 865 6 1480 2 1482 2 868 2 1489 2 1293 2 648 2 656 4 1107 6 242 6 1110 2 663 8 1304 4 1506 2 670 2 1509 2 1118 2 1513 2 60 2 250 2 468 2 469 4 253 6 1128 4 477 2 685 2 1530 1 76 2 692 12 899 2 1132 2 486 2 902 2 81 2 697 4 85 1 1141 12 498 6 275 2 276 6 499 2 88 2 1546 2 502 2 705 2 1553 2 1554 2 295 2 1158 2 922 6 297 2 1162 2 1562 1 1565 2 1570 6 99 2 1364 2 303 2 936 2 1374 2 106 4 319 2 723 2 942 2 943 1 321 2 1378 2 1381 8 1181 2 1584 4 1182 2 737 2 1185 6 964 2 1186 4 334 6 969 8 1593 2 1192 6 1599 4 981 46 548 2 351 2 983 2 1395 2 139 1 550 4 142 2 1205 2 354 2 1401 4 143 4 764 2 1208 2 995 2 154 2 1219 2 1406 1 782 6 1224 1 164 6 166 2 1018 2 1228 2 795 10 796 6 1020 2 1230 2 180 2 808 1 1027 2 395 2 396 2 399 4 400 2 1238 2 1638 4 1437 2 1438 6 1241 2 407 2 1242 4 1642 2 820 4 411 4 1440 2 1441 7 600 2 1251 2 1049 2 606 7 195 2 1054 4 418 8 197 2 
610 4 99 2 1058 6 1364 2 611 2 303 2 1455 8 426 4 1062 2 936 2 1374 2 1064 2 106 4 723 4 319 2 1072 4 942 2 321 2 1378 2 13 2 1463 2 1381 8 1464 6 1465 6 1181 2 1466 2 1080 6 1084 2 1182 2 1584 4 630 2 1085 2 1469 2 442 6 737 2 1185 6 964 2 25 6 444 26 334 6 1286 2 969 8 1287 2 30 2 1593 2 1192 6 864 6 865 6 1480 2 1482 2 1599 8 1293 2 1489 2 868 2 648 2 981 48 548 2 351 2 656 4 1107 6 983 2 242 6 1395 2 550 4 1110 2 142 2 663 8 1205 2 354 2 143 4 1401 4 1304 8 764 2 1506 2 670 2 1208 2 1509 2 1118 2 995 2 466 2 1513 2 60 2 468 2 250 2 154 2 469 4 253 6 1219 2 782 6 164 6 1128 4 477 2 685 2 166 2 1018 2 1228 2 795 10 76 2 796 6 692 12 899 2 1132 2 1020 2 486 2 1230 2 902 2 81 2 697 4 1141 12 180 4 1027 2 396 2 395 2 498 6 276 6 399 4 275 2 499 2 400 2 88 4 1238 2 1546 2 1638 4 502 2 1437 2 705 2 1438 6 407 2 1241 2 1242 4 1642 2 1553 2 1440 2 411 4 820 4 1554 2 1155 2 295 2 600 2 1251 2 1049 2 922 6 1158 2 1160 2 297 2 1162 2 1565 2 1570 6 1054 4 195 2 418 8 197 2 
610 4 99 2 1058 6 1364 2 611 2 303 2 1455 8 426 4 1062 2 936 2 1374 2 1064 2 106 4 723 4 319 2 1072 4 942 2 321 2 1378 2 13 2 1463 2 1381 8 1464 6 1181 2 1465 6 1466 2 1080 6 1084 2 1584 4 630 2 1182 2 1085 2 1469 2 442 6 737 2 1185 6 964 2 25 6 444 26 334 6 1286 2 969 8 1287 2 30 2 1593 2 1192 6 864 6 865 6 1480 2 1482 2 1599 8 1489 2 868 2 1293 6 648 2 981 48 548 2 351 2 656 4 1107 6 983 2 242 6 1395 2 550 4 1202 4 1110 2 142 2 663 8 1205 2 354 2 143 4 1401 4 1304 8 764 2 1506 2 670 2 1208 2 1509 2 1118 2 995 2 466 2 1513 2 60 2 468 2 250 2 154 2 469 4 253 6 1219 2 782 6 164 6 1128 4 477 2 685 2 166 2 1018 2 1228 2 795 10 76 2 796 6 692 12 899 2 1132 2 1020 2 486 2 1230 2 902 2 81 2 697 4 1141 12 180 4 1027 2 396 2 395 2 498 6 276 6 399 4 275 2 499 2 400 2 88 4 1238 2 1546 2 1638 4 502 2 1437 2 705 2 1438 6 1241 2 407 2 1242 4 1642 2 1553 2 1440 2 411 4 820 4 1554 2 1155 2 295 2 600 2 1251 2 1049 2 922 6 1158 2 1160 2 297 2 1162 2 1565 2 1570 6 1054 4 195 2 418 8 197 2 
610 4 1058 6 611 2 1455 10 426 4 1062 4 1064 2 1072 4 13 2 1464 6 1465 6 1466 2 1080 12 1084 2 630 2 1469 2 1085 2 1470 6 442 6 444 24 25 6 1286 2 1287 2 30 4 864 12 865 6 1480 2 1482 2 1293 6 868 2 1489 2 648 2 44 6 656 4 1107 6 242 8 1110 2 663 12 1304 10 1506 4 670 2 1509 2 1118 2 466 2 1513 2 60 4 250 2 468 2 469 4 1125 2 253 12 1128 4 477 2 685 2 76 2 692 16 899 2 1132 2 486 2 902 2 81 2 697 4 1141 10 1339 2 498 12 275 2 276 6 499 2 88 4 1546 2 502 2 705 2 1553 2 1554 2 1155 2 1557 6 292 2 1357 6 295 2 1158 2 922 12 1160 2 297 2 1162 2 1565 2 1570 6 99 2 1364 2 931 2 303 2 719 2 936 2 1374 2 106 6 319 2 723 4 942 2 321 2 1378 2 1381 8 1181 2 1182 2 1584 4 737 2 1185 8 964 2 1186 2 334 6 969 8 1593 2 1192 6 1599 10 981 52 548 2 351 2 983 2 1395 2 1202 4 550 4 142 2 1205 2 354 2 1401 4 143 4 764 2 1208 2 995 2 154 2 1219 2 782 6 1220 2 1223 6 164 12 166 2 379 2 1623 6 1018 2 1228 2 795 8 796 6 1020 2 1230 2 175 2 180 4 1027 2 395 2 396 4 399 4 400 2 1238 2 1638 4 1437 2 1438 6 407 2 1241 2 1242 4 1642 2 820 4 411 4 1440 2 1045 6 600 2 1251 2 1049 2 1650 6 417 2 195 2 1054 4 418 10 608 6 197 2 
610 2 969 2 1364 2 303 2 697 2 1513 2 1027 2 1219 2 399 4 1482 2 1064 2 400 2 1599 6 1293 4 1546 2 502 2 1438 2 981 4 1241 2 942 2 656 2 411 2 820 2 13 2 1202 4 354 2 692 4 1132 2 630 2 1565 2 442 6 195 2 1054 4 902 2 418 6 
610 2 99 2 1364 2 303 2 426 2 1062 3 1374 2 1064 2 106 4 319 2 942 2 321 2 1378 2 13 2 1463 2 1465 6 1181 2 626 2 1182 2 630 2 1469 2 1085 2 737 2 442 6 1185 6 444 24 1286 2 969 2 30 3 641 2 1480 2 1482 2 1599 6 1293 2 981 28 656 2 872 2 242 6 663 8 142 2 554 2 354 2 1401 4 143 4 1610 3 764 2 670 2 990 2 1513 2 469 4 1219 2 782 6 1018 2 795 2 692 4 899 2 1132 2 1535 2 902 2 697 2 1141 4 1027 2 395 2 396 3 701 2 399 4 275 2 499 2 1342 2 400 2 1546 2 502 2 1438 2 1241 2 407 2 1242 4 1642 2 411 2 820 2 1440 2 600 2 295 2 1158 2 1565 2 512 2 1054 4 195 2 418 6 197 2 
410 2 1482 2 1219 2 
410 2 1482 2 1219 2 
99 2 610 4 1362 2 1364 2 422 2 1455 4 612 2 426 6 1457 2 1374 2 108 2 723 4 319 2 1072 4 321 2 1378 2 210 2 1465 6 1181 2 1466 2 1584 2 1182 2 217 2 1085 2 1469 2 737 2 442 6 1185 2 444 16 334 2 1286 2 1186 4 969 4 1480 2 1482 4 1599 12 1487 4 1488 2 1489 2 868 2 1293 6 981 24 755 4 656 2 242 2 550 2 353 2 1202 4 663 2 142 2 354 2 143 4 1401 4 1304 4 764 2 670 2 769 2 1118 2 1513 2 154 2 469 4 1219 6 782 6 1410 4 1411 2 683 2 1128 4 1227 2 685 2 379 4 1018 2 1228 2 795 2 692 16 901 2 1629 1 697 4 1141 4 180 4 395 2 396 2 275 2 399 4 499 2 401 2 88 4 1638 2 705 2 1438 4 407 2 1241 2 1242 4 1642 2 410 2 1440 2 820 2 411 2 295 2 191 2 1251 4 1158 2 1569 2 195 4 1054 4 418 12 197 2 
444 2 981 4 334 2 1227 2 422 2 1141 2 1378 2 550 2 1290 2 1110 2 1193 2 229 2 795 2 1162 2 1226 2 683 2 964 2 
99 2 610 4 1362 2 1364 2 422 2 1455 4 612 2 426 6 1457 4 1374 2 108 2 723 4 319 2 1072 4 321 2 1378 2 210 2 1465 6 1181 2 1466 2 1584 2 1182 2 217 2 1085 2 1469 2 737 2 442 6 1185 2 444 16 334 2 1286 2 1186 4 969 4 339 2 1480 2 1482 4 1599 12 1487 4 1488 2 1489 2 868 2 1293 6 981 24 755 4 656 2 242 2 353 2 1202 4 663 2 142 2 354 2 143 4 1401 4 1304 4 764 2 670 2 1118 2 1311 2 1513 2 154 2 469 4 1219 6 782 6 1410 4 1411 2 683 2 1128 4 1227 2 685 2 379 4 1018 2 1228 2 692 16 1332 2 1629 1 697 4 1141 2 180 4 395 2 396 4 398 2 275 2 399 4 499 2 88 4 1638 4 705 2 1438 4 407 2 1241 2 1242 4 1641 2 1642 2 410 2 1553 2 411 2 1440 2 820 2 295 2 191 2 1251 4 1158 2 195 4 1054 4 418 12 197 2 
99 2 610 4 1362 2 1364 2 422 2 1455 4 612 2 426 6 1457 2 1374 2 108 2 723 4 319 2 1072 4 321 2 1378 2 210 2 1465 6 1181 2 1466 2 1584 2 1182 2 217 2 1085 2 1469 2 737 2 442 6 1185 2 444 16 334 2 1286 2 1186 4 969 4 445 2 1480 2 1482 4 1599 12 1487 4 1488 2 1489 2 868 2 1293 6 237 2 981 24 755 4 656 2 242 2 550 2 353 2 1202 4 663 2 142 2 354 2 143 4 1401 4 1304 4 764 2 670 2 1118 2 1513 2 154 2 469 4 254 2 1219 6 782 6 1410 4 1411 2 683 2 1128 4 1227 2 685 2 379 4 1018 2 1228 2 795 2 692 16 1629 1 697 4 1141 4 180 4 395 2 396 2 275 2 399 4 499 2 88 4 1638 4 705 2 1438 4 407 2 1241 2 1242 4 1642 2 410 2 1553 2 1440 2 820 2 411 2 1043 2 1556 2 295 2 191 2 1251 4 1158 2 195 4 1054 4 418 12 197 2 
828 2 831 38 2 2 832 2 833 2 834 2 4 2 5 10 837 2 8 3 839 2 11 2 842 4 14 3 843 2 844 80 16 2 18 2 19 2 20 3 848 20 849 38 21 2 851 2 852 3 853 2 854 3 22 3 856 4 855 2 23 2 24 6 27 2 859 2 860 2 30 16 31 2 32 2 863 2 861 2 35 18 36 2 39 38 869 2 870 2 42 80 871 38 43 3 46 6 874 80 875 2 49 2 50 2 878 2 879 2 51 2 880 12 881 4 55 2 57 2 882 3 59 2 60 84 61 3 62 2 884 2 886 2 64 2 65 2 68 2 66 2 891 22 70 2 894 2 895 2 896 2 897 4 75 2 898 2 76 8 77 2 899 2 79 2 81 4 82 4 84 38 909 3 913 2 912 156 914 2 915 2 918 4 919 2 920 2 90 2 921 2 923 8 926 78 93 2 94 2 95 2 97 78 930 78 99 2 100 16 931 2 101 10 933 1 102 4 103 2 104 4 935 2 936 8 105 2 106 12 107 3 939 6 940 2 941 10 109 1 944 3 110 2 111 2 945 2 112 2 947 558 950 2 114 2 115 5 952 2 954 2 953 2 955 2 118 76 956 3 957 4 120 2 960 2 121 2 962 2 123 4 972 4 124 2 974 78 975 2 126 2 127 2 979 2 128 2 129 2 981 1174 134 2 135 2 136 2 137 2 984 2 141 2 985 20 142 2 143 8 986 4 144 2 987 12 147 2 148 2 990 2 150 78 991 2 992 2 993 2 996 2 994 78 998 2 999 2 152 4 1000 2 155 12 1003 24 156 2 157 2 1005 2 159 2 1006 15 1008 2 1009 38 160 20 161 6 1015 22 1016 10 1017 2 167 1 1018 2 168 2 169 2 171 2 1021 38 173 54 174 3 175 2 1023 14 176 182 178 4 177 2 179 2 1024 2 1025 38 181 2 1026 15 1029 20 183 2 1032 2 184 12 1033 2 1034 2 1035 2 185 2 1038 2 1039 2 1040 4 1041 2 188 2 189 2 190 2 1051 2 1053 3 1055 2 196 2 197 8 1057 2 1056 4 199 2 1060 8 200 1 201 2 202 24 1061 2 1062 46 204 20 1063 8 206 2 1070 2 1074 156 1076 2 1077 2 213 2 1078 2 215 2 1081 2 1083 2 1084 16 1086 2 1087 2 1088 22 1089 2 222 6 221 2 223 2 224 101 225 2 1095 10 226 12 1096 2 1099 2 230 2 231 38 233 2 232 26 236 60 1103 2 1102 2 238 10 239 4 241 3 240 2 1106 9 242 18 244 10 245 2 247 2 1113 8 1114 2 248 34 249 16 1116 2 1117 32 1119 12 1120 10 1122 2 1121 6 1123 3 250 2 1124 16 252 10 1126 2 255 2 256 3 257 4 258 1 261 2 1127 14 262 7 265 112 267 2 1133 9 268 61 1134 2 1135 60 1138 2 269 2 1140 2 1141 10 271 2 1144 38 273 2 275 2 1149 2 1148 24 1152 4 1150 2 279 2 281 18 283 2 284 60 287 4 288 2 1156 24 291 3 292 2 290 3 293 78 295 2 296 2 1159 1 1158 302 297 2 1161 2 1163 3 1165 2 300 24 1167 80 302 10 305 2 304 82 307 2 1170 2 309 156 310 2 312 4 1172 120 316 2 319 2 320 4 321 312 1177 2 323 1 322 10 1178 106 325 2 1181 2 1180 2 328 14 330 80 1182 2 331 2 1185 32 1187 158 338 2 337 2 1188 80 1189 2 341 2 344 2 1195 234 1196 2 1197 8 348 2 1199 80 347 38 349 2 352 2 1201 2 1203 3 355 2 356 2 357 166 1206 6 361 2 1208 2 1210 2 1212 2 362 18 363 2 1214 12 366 2 1220 2 369 2 371 2 374 2 375 38 376 6 378 6 377 38 381 38 385 2 1229 2 1231 2 387 2 1232 2 388 2 390 2 394 18 396 110 395 82 1235 8 1236 2 1237 2 1238 2 403 2 402 80 404 2 406 2 1240 2 407 2 409 3 1242 402 1243 2 1244 3 1245 2 1248 3 413 2 412 4 1251 18 1252 2 1254 2 417 2 1257 20 1258 2 419 6 420 2 421 102 1261 3 424 2 425 2 1263 8 426 2 427 4 428 13 1267 8 1269 4 1270 3 1271 2 430 78 1272 2 1274 2 1276 2 434 2 1277 2 1278 2 435 22 436 2 438 3 437 7 439 2 1283 2 444 966 1286 2 1287 2 1288 2 447 2 449 2 452 2 1294 8 453 2 1296 36 1299 2 1301 158 1304 178 1306 24 1305 2 459 2 462 2 1308 2 463 2 1310 3 1309 20 1312 2 1313 1 467 78 468 22 469 480 1315 2 1316 34 1317 2 1318 2 470 2 1319 2 473 2 1320 38 1321 26 1322 2 475 2 476 2 1323 2 479 80 480 2 482 24 483 4 1329 2 484 40 487 124 1331 2 488 78 1333 2 489 76 1334 2 490 36 494 1 496 2 1336 2 1337 2 1339 4 1341 100 500 2 499 2 1343 158 1344 16 1347 2 503 14 1349 2 1352 2 1353 2 505 2 1354 2 508 2 511 4 1358 2 512 2 515 2 1360 2 1363 2 1366 6 1367 2 1368 78 1369 60 1370 6 1371 3 1372 2 1374 8 1375 2 523 2 525 2 526 8 1376 78 527 2 1377 2 528 4 529 2 1378 2 1379 80 1380 2 532 38 1384 2 533 3 1385 2 1386 10 1387 4 1388 2 537 2 1389 2 539 22 541 2 540 2 543 2 542 4 544 2 545 2 1392 3 548 8 1393 2 1398 2 551 3 553 2 554 2 1401 8 556 6 558 2 559 2 560 2 561 2 562 80 564 15 565 2 1404 2 566 2 1405 80 569 2 570 2 1408 2 571 4 1409 2 1413 2 573 78 1415 2 1416 40 575 2 578 2 577 86 1419 2 579 2 580 2 1424 2 586 10 585 2 1425 38 1426 2 1427 2 588 234 1428 6 1430 1 1431 2 589 14 1432 2 590 76 1434 2 1436 3 591 38 592 14 593 3 1440 2 594 30 598 2 599 2 1443 2 1444 1 1446 2 603 2 604 2 605 2 1451 2 1452 3 1455 183 614 2 615 2 618 2 619 86 620 2 621 2 622 2 623 4 1460 2 1461 2 624 38 625 24 1465 10 626 2 627 14 1468 2 1469 2 632 2 633 2 634 2 1473 2 1471 2 1472 2 1474 2 635 2 636 2 637 2 638 80 639 2 1477 2 640 3 1478 2 642 2 1480 2 643 2 644 3 1481 2 1485 80 649 2 652 2 654 10 1493 2 655 2 658 2 1495 2 1497 2 1498 2 661 3 663 126 1499 2 1502 2 664 16 1503 38 665 2 1506 46 668 6 670 84 672 80 673 2 1508 4 674 2 675 2 1512 3 676 2 1514 4 1516 34 680 78 681 2 1520 2 1521 78 1522 48 1527 8 1528 2 1529 2 686 2 688 15 689 2 690 66 1532 6 693 2 1537 2 1538 4 699 2 1540 2 1541 2 700 2 1544 2 1545 1 702 38 703 2 704 2 1547 2 1548 2 1549 2 1554 2 1555 2 706 2 707 104 708 3 1558 2 709 3 710 2 1561 8 1564 2 1566 4 1563 2 1567 5 713 80 717 4 718 2 720 6 719 2 721 18 1575 2 1576 6 1577 1 722 2 1580 38 724 2 725 36 726 4 727 2 729 2 733 52 732 2 735 2 1583 22 737 2 1585 11 1586 2 1587 3 739 2 741 6 1588 2 743 78 1590 2 746 8 1592 14 747 3 1594 112 1595 2 1597 2 1600 2 749 2 750 2 1604 6 752 2 753 4 756 2 757 38 1607 2 1609 2 1610 2 762 2 763 2 764 4 771 2 768 2 770 2 772 4 773 78 1613 40 1614 2 777 78 779 4 780 2 782 1100 784 2 1616 2 785 2 1620 1 1619 2 788 2 1621 2 1622 16 790 3 792 2 793 2 795 2 798 14 1627 2 1628 20 802 1 804 4 1629 4 1630 12 1631 4 1632 2 805 2 807 2 809 32 811 66 1635 2 812 2 813 2 1636 6 815 2 816 2 1640 3 1639 7 1642 2 821 2 819 2 1647 2 1648 14 1652 6 1654 2 826 4 
444 2 223 2 30 2 32 2 252 2 396 2 1062 2 5 4 1408 2 106 2 238 2 981 2 476 2 242 2 1354 2 709 2 663 2 689 2 899 2 266 2 605 2 1506 6 1185 2 673 2 
444 2 223 2 30 2 32 2 252 2 396 2 1062 2 5 4 1408 2 106 2 238 2 981 2 476 2 242 2 1354 2 709 2 663 2 689 2 899 2 266 2 605 2 1506 6 1185 2 673 2 
444 2 223 2 30 2 32 2 252 2 396 2 1062 2 5 4 1408 2 106 2 238 2 981 2 476 2 242 2 1354 2 709 2 663 2 689 2 899 2 266 2 605 2 1506 6 1185 2 673 2 
222 2 444 4 1630 2 587 2 421 6 28 2 153 2 1514 2 1214 2 1338 2 1003 3 1029 4 1574 3 396 3 1370 2 1062 3 1341 2 35 4 184 2 160 4 161 4 939 2 131 2 67 2 981 10 376 2 1156 5 433 2 1354 2 985 4 663 2 327 2 733 2 899 2 216 2 1306 3 856 2 1628 4 53 4 880 2 
421 6 153 2 1514 2 1214 2 1003 2 1574 2 1062 2 1370 2 160 4 161 4 939 2 67 2 376 2 433 2 327 2 733 2 899 2 216 2 856 2 1628 4 1630 2 444 4 222 2 587 2 28 2 1338 2 1029 4 396 2 1341 2 35 4 184 2 131 2 981 10 1352 2 1156 4 244 2 1354 2 985 4 663 2 1306 2 1652 2 880 2 53 4 
421 6 153 2 1514 2 1214 2 1003 2 1574 2 1062 2 1370 2 160 4 161 4 939 2 67 2 376 2 433 2 327 2 733 2 899 2 216 2 856 2 1628 4 1630 2 444 4 222 2 587 2 28 2 1338 2 1029 4 396 2 1341 2 35 4 184 2 131 2 981 10 1352 2 1156 4 244 2 1354 2 985 4 663 2 1306 2 1652 2 880 2 53 4 
421 6 153 2 1514 2 1214 2 1003 2 1574 2 1062 2 1370 2 160 4 161 4 939 2 67 2 376 2 433 2 327 2 733 2 899 2 216 2 856 2 1628 4 1630 2 444 4 222 2 587 2 28 2 1338 2 1029 4 396 2 1341 2 35 4 184 2 131 2 981 10 1352 2 1156 4 244 2 1354 2 985 4 663 2 1306 2 1652 2 880 2 53 4 
421 6 153 2 1514 2 1214 2 1003 2 1574 2 1062 2 1370 2 160 4 161 4 939 2 67 2 376 2 433 2 327 2 733 2 899 2 216 2 856 2 1628 4 1630 2 444 4 222 2 587 2 28 2 1338 2 1029 4 396 2 1341 2 35 4 184 2 131 2 981 10 1352 4 1156 4 244 4 1354 2 985 4 663 2 1306 2 1652 4 880 2 53 4 
349 2 241 2 1636 2 873 2 545 2 383 2 
374 2 580 2 241 2 542 2 619 2 1547 2 767 2 
981 2 444 2 1286 2 520 2 774 1 742 1 1483 2 1042 2 1326 2 1164 2 227 2 1247 2 119 1 1218 1 73 1 
444 6 1630 6 222 6 967 2 1214 6 972 2 832 2 1030 2 720 4 1370 6 35 12 161 4 939 6 1198 2 981 6 376 6 352 2 1352 4 1156 13 244 4 413 2 726 2 412 2 21 2 1561 2 556 4 92 2 1652 4 856 2 880 6 
981 1 444 1 1631 2 1325 7 892 2 29 2 660 4 393 1 985 2 1029 2 977 2 6 2 1435 2 160 2 1568 2 669 2 715 2 786 2 
1631 4 1325 6 892 4 29 2 660 4 985 2 1029 2 977 2 6 2 1435 2 160 2 1568 2 669 2 715 4 786 2 
981 1 444 1 1631 8 1325 10 892 8 29 2 660 4 393 1 985 2 1029 2 977 6 6 8 1435 2 160 2 1568 2 669 2 715 8 786 2 
1631 2 1325 2 892 2 29 2 660 2 985 2 1029 2 1435 2 160 2 1568 2 669 2 715 2 786 2 
930 6 830 24 306 4 309 36 1455 28 1454 24 1368 24 430 4 526 4 1376 6 10 4 1580 4 321 58 12 4 1275 6 1074 17 1379 6 624 4 1178 42 844 6 948 8 947 124 326 2 532 4 531 2 115 2 330 6 437 4 631 2 1585 4 24 2 444 134 224 22 1187 16 743 6 1188 6 638 6 1592 10 974 24 1596 26 233 8 1195 84 1485 24 646 2 346 4 1603 4 981 150 1199 6 1106 1 47 10 1298 26 874 6 1397 2 1399 2 1301 16 457 2 764 8 357 50 557 90 461 10 670 14 149 4 672 6 1613 2 150 10 773 10 994 10 562 6 997 90 1121 2 1405 6 467 10 469 112 155 6 680 6 782 248 1006 6 256 4 682 2 1521 6 573 6 373 2 375 4 377 4 382 4 381 4 72 24 688 8 170 8 577 8 1021 4 487 12 488 6 1629 4 270 2 176 34 1539 2 588 92 1025 4 1144 4 395 14 912 18 1343 16 702 4 402 6 406 8 1639 4 1242 88 1244 2 1351 18 594 14 822 4 707 42 506 10 290 6 293 10 192 12 921 8 294 2 1050 1 602 4 1158 58 510 8 1567 2 926 6 713 6 928 2 97 6 
1361 2 994 2 465 2 830 2 517 2 1405 2 467 2 469 20 309 2 679 2 778 2 1454 2 1573 2 1455 37 835 2 782 46 617 4 256 1 1373 2 682 2 1268 2 888 4 1173 2 372 2 431 2 321 4 1074 2 1417 2 1531 2 844 2 72 2 728 2 264 2 948 2 947 6 531 2 214 2 1328 2 577 6 330 2 631 2 172 2 583 2 1282 2 966 2 1629 2 444 44 904 4 1539 2 1187 4 1188 2 1143 2 34 2 395 2 912 2 976 2 233 2 1343 4 646 2 1486 2 280 2 346 2 1494 2 406 2 981 46 42 6 1199 2 1297 2 1242 20 504 2 243 2 47 2 874 2 506 2 290 3 293 2 1399 2 921 2 91 2 1301 4 1158 4 555 2 764 2 1303 2 666 2 668 4 461 2 670 2 1612 2 150 2 773 2 98 2 
930 4 1361 2 309 6 934 2 1455 14 1376 4 431 10 1580 4 321 30 1074 10 624 4 1379 4 1178 16 844 4 326 2 947 24 532 4 850 2 330 4 437 3 631 2 738 4 1585 1 24 1 966 10 444 70 1187 10 1095 2 743 4 1188 4 638 4 1391 4 233 2 1195 24 1485 8 646 2 1486 2 1491 16 981 78 1199 4 758 4 1397 2 874 4 1608 8 1204 4 1399 2 1300 8 1301 10 764 2 357 8 670 6 672 4 773 4 150 4 994 6 562 4 1211 16 1121 1 1405 4 467 4 155 3 469 44 680 4 367 8 782 104 682 2 1521 4 370 2 372 10 573 4 375 4 377 4 380 8 381 4 688 3 577 5 691 2 485 32 1021 4 487 14 488 4 176 26 493 4 1539 2 588 24 1025 4 497 4 1144 4 395 6 912 10 1343 10 702 4 406 2 1639 3 1242 36 504 2 594 7 707 8 290 2 293 4 1046 2 921 2 1158 28 926 4 713 4 1450 4 97 4 
1361 2 994 2 1405 4 467 2 469 14 309 2 1455 14 1006 1 782 40 682 2 526 2 430 2 373 2 321 12 1074 2 844 4 947 8 531 2 688 4 577 4 115 1 330 4 437 2 631 2 1585 1 1629 2 444 26 176 6 224 7 1539 2 1187 6 1188 4 1143 2 1592 1 395 2 912 2 233 2 1343 6 646 2 406 2 1639 2 981 28 1199 4 1242 14 1244 1 594 5 874 4 290 2 293 2 1399 2 294 2 921 2 1301 6 1158 12 764 2 1567 1 670 2 773 2 150 2 
1442 2 

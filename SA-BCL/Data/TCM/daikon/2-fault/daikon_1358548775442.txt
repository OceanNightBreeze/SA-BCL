#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1014 894 1279 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (982,1144) (982,1144) (576,653) (576,653) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_vars()I
daikon.ProglangType:isString()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_2_21(I)Z
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_56()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_70()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern([D)[D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_2_25(I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_149()Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_101()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43258 | 32 -> 33
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaCharStream:ReadByte()C
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:lexEqual([I[I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:lexGT([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_17()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Assert:assertTrue(Z)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_30()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_120()Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_67()Z
daikon.ModBitTracker:num_samples()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:memberOf(S[S)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isScalar()Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_104()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_162()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:isIOAArray()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:noDups([I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_122()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_55()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_28()Z
daikon.Quant:subsetOf([D[D)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptSlice0:arity()I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3R_96()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quant:memberOf(J[J)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:sign(I)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.PptName:isEnterPoint()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3_29()Z
jtb.JavaParserTokenManager:jjCheckNAddTwoStates(II)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:slice([III)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_136()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_27()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaCharStream:getEndColumn()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.ProglangType:isFloat()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:modulus([I)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_117()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:has_typeof()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_13()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_161()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_164()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3_35()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:baseIsString()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaCharStream:readChar()C
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.Invariant:justified()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_105()Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:negate(I)I
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_12()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_36()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([J)[J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_110()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3_21()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:relate_var()V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_125()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_108()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_103()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:Node()V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_169()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_68()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eltsLTE([II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:lt(II)Z
daikon.Quant:sameLength([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:lte(II)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_58()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_97()Z
daikon.inv.Invariants:Invariants()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjCheckNAddStates(II)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_135()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptSlice1:num_samples()I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.LowerBoundCore:calc_range()J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
155 2 791 2 356 2 754 2 675 4 1157 2 1337 2 1029 2 226 2 9 6 1208 2 1469 2 144 2 1210 2 494 2 914 2 128 2 1063 2 1043 2 770 2 535 4 727 2 626 2 
144 4 494 5 791 8 554 2 914 4 356 4 462 2 1157 8 1454 4 423 6 1337 4 535 12 207 4 685 6 9 15 185 2 1469 8 
627 4 1228 2 1020 2 1021 10 751 2 1348 2 485 4 1441 2 544 2 379 4 647 4 1402 2 710 2 29 4 546 4 1275 2 33 2 1446 8 38 2 915 2 916 2 1345 4 963 2 433 6 1060 10 370 4 530 4 825 2 1102 2 1126 2 846 2 847 2 1364 4 697 14 1365 4 1457 2 413 62 871 2 328 4 1019 4 
1437 2 610 2 399 2 1184 2 161 2 616 2 1117 2 89 2 1236 2 195 2 
1107 4 1242 2 198 2 1200 2 815 2 1397 2 1074 2 253 2 546 2 1403 2 780 2 1446 2 1406 2 891 2 126 2 637 2 269 2 72 4 600 2 1125 2 602 2 318 2 19 2 508 2 375 2 996 2 953 2 829 4 131 2 1418 2 834 2 379 4 86 2 1091 2 33 2 383 4 1190 2 187 2 663 4 45 2 768 2 242 2 845 2 848 2 
999 2 1107 4 791 32 356 16 1070 4 1025 2 754 4 675 6 1157 32 933 6 423 6 1337 16 1142 2 983 2 207 4 685 6 9 53 1012 6 1469 32 144 16 1210 18 1253 6 1343 4 383 4 494 22 914 16 68 8 555 4 125 4 189 2 432 2 44 2 1454 4 1063 2 129 6 174 4 535 48 1328 4 510 6 
825 2 1446 2 433 2 
439 2 1034 22 636 2 945 2 281 2 388 2 1193 2 1112 2 664 2 318 2 176 2 105 10 1367 2 165 2 
679 4 1107 2 383 2 198 2 48 2 720 2 519 2 1458 2 1282 2 
511 6 883 2 1379 2 1131 2 1041 6 477 6 562 2 164 2 583 2 1304 2 1167 2 
1209 2 1107 2 383 2 1269 4 1080 6 707 2 934 6 800 6 1077 4 1116 2 737 6 6 2 117 2 
1107 6 791 16 299 2 356 10 1070 6 754 6 675 10 898 4 1157 16 901 2 489 8 1337 10 1142 2 404 4 9 28 823 2 1469 16 1210 8 144 10 494 12 383 6 1035 8 914 10 554 4 1448 2 768 2 1063 4 535 26 510 8 607 2 
350 6 382 4 
1437 2 
170 2 
1107 2 346 2 
1107 4 436 2 237 2 
852 16 585 2 1107 34 1295 2 1 3 1399 2 1027 2 488 2 3 1 5 3 856 2 206 2 782 2 596 3 943 1 1309 32 859 2 1310 3 120 1 11 2 1037 4 124 2 785 2 597 2 213 2 215 12 13 2 410 2 947 2 1323 2 603 2 412 3 1324 2 698 2 1325 2 1129 4 1047 1 1225 2 325 3 415 3 1048 8 1227 2 514 2 795 16 135 2 796 1 421 1 330 2 1135 16 1420 4 801 2 30 2 1143 2 333 2 230 2 1055 2 519 2 231 6 1340 6 335 2 717 2 338 2 719 2 233 5 341 2 962 2 431 1 41 1 721 2 1233 2 809 2 810 2 725 2 811 1 965 2 881 24 534 2 351 3 1430 2 49 2 628 2 1243 3 251 2 1350 2 1158 1 1159 4 361 2 545 6 1246 8 547 1 1444 2 549 2 60 2 984 2 62 2 63 2 261 2 890 2 744 2 1257 2 993 2 178 32 79 8 1460 2 1081 4 749 4 998 2 565 3 750 2 1266 16 458 4 1177 2 80 2 378 2 1180 2 1004 2 1270 2 645 1 753 1 280 3 758 2 464 2 1006 4 1274 1 650 2 467 2 1276 2 183 2 909 24 287 2 762 2 1468 2 575 1 383 32 841 2 580 12 661 2 843 2 766 2 1287 2 100 2 476 2 1386 2 1197 3 298 1 672 2 1393 1 393 2 481 6 
1106 4 394 2 776 2 200 4 1111 2 1113 2 590 2 398 2 1299 10 594 2 204 2 936 16 939 4 208 2 1305 2 406 14 1307 4 942 2 1121 2 212 304 1123 2 408 4 598 2 1315 2 946 2 1318 4 1317 6 14 2 787 2 1320 4 601 14 217 2 788 2 1326 2 1329 2 605 2 416 2 954 2 419 2 609 74 1333 74 23 2 420 2 25 2 223 74 27 2 1134 4 612 2 1136 2 797 2 1138 2 422 56 225 4 799 60 424 2 228 14 229 2 426 2 804 2 35 4 427 2 620 4 428 4 806 4 236 2 429 2 43 2 808 2 239 86 1146 2 812 2 1148 2 47 4 1150 2 813 4 622 2 966 2 248 4 969 2 629 2 971 20 814 2 973 2 249 4 1154 2 631 4 53 2 816 2 441 14 56 2 442 2 57 2 821 2 822 4 259 2 61 2 1164 2 1353 2 260 2 262 2 266 60 988 12 71 2 1169 2 451 14 640 2 452 32 274 8 827 2 994 206 275 204 456 2 828 2 77 2 277 2 831 2 833 2 1372 4 84 2 835 2 1376 2 648 2 1007 2 1009 2 466 74 1186 4 1187 2 839 2 1188 2 654 2 289 26 1378 8 473 2 95 2 1191 2 96 2 97 20 660 10 659 2 1194 2 294 2 99 44 666 2 667 2 1383 4 102 2 1384 4 1015 4 668 4 1385 10 104 4 1016 4 1388 4 671 2 1391 4 849 6 107 2 108 2 850 48 479 2 483 4 1022 74 1024 10 677 2 112 16 1028 2 1207 2 113 2 680 2 490 2 491 2 114 2 858 48 683 2 115 2 116 2 307 2 308 36 119 74 1033 4 861 2 1407 2 123 16 313 2 1409 2 1410 2 862 2 1040 2 127 2 691 2 502 2 866 2 1219 2 696 4 1221 22 1413 4 322 2 869 4 1223 74 700 2 323 2 870 2 130 2 324 2 1416 2 702 2 872 4 1050 2 136 12 137 4 1419 10 708 2 709 2 138 2 518 20 141 4 713 14 1054 2 877 2 878 2 336 8 337 2 340 32 1058 2 879 74 1234 2 1235 2 1062 74 532 14 347 2 1237 38 348 2 151 2 1065 2 352 2 353 2 882 42 153 2 1436 2 1241 2 154 4 729 2 731 46 537 2 885 2 542 2 158 4 160 2 1249 2 738 8 739 2 1447 4 742 2 167 2 743 2 553 4 1255 4 552 4 364 2 171 2 366 4 1451 8 745 34 1453 2 1260 14 173 2 372 6 177 2 1263 4 566 2 567 22 1462 4 1271 2 1085 2 1272 74 903 2 756 2 1087 2 759 32 760 20 1090 2 184 2 1093 2 763 2 1471 74 1094 2 913 4 764 204 186 4 1100 2 1280 42 919 14 1283 4 921 2 190 34 1285 48 582 16 389 2 925 2 924 2 1103 2 1291 2 1293 2 392 2 773 6 
319 2 961 2 465 2 1262 2 404 2 1132 1 1446 2 270 2 
460 2 1262 2 270 2 
1262 2 270 2 1056 2 
1332 2 1089 2 564 2 
1262 2 270 2 
147 2 1089 2 
15 2 270 2 
1332 2 1089 2 493 2 
1332 2 604 2 1251 2 
1332 2 381 2 911 2 
1332 2 1349 2 98 2 
1331 2 1332 2 1008 2 
1089 2 454 2 
569 2 270 2 
180 2 604 2 
1374 2 911 2 
581 2 1349 2 
1331 2 146 2 
1089 2 509 2 
1331 2 757 2 
1349 2 1119 2 
864 2 911 2 
1346 2 604 2 
1332 2 1089 2 305 2 493 2 
1332 2 1089 2 305 2 1398 2 493 2 
1332 2 1089 2 314 2 
1332 2 1089 2 152 2 
65 2 1449 2 1427 2 706 2 
0 2 221 2 1034 6 635 2 342 2 589 2 632 2 570 2 692 2 543 2 678 2 1218 2 1301 2 1261 4 446 2 276 2 623 2 830 4 
1332 2 1039 2 
319 2 908 2 1446 2 1286 2 
319 2 961 2 227 2 908 2 1446 2 1286 2 
319 2 689 2 1262 2 404 2 1446 2 270 2 
1125 2 541 2 
319 2 792 2 404 2 1446 2 
1349 2 875 2 
1331 2 980 2 
604 2 886 2 
1303 2 911 2 
1331 2 863 2 911 2 
1331 2 1371 2 911 2 
1331 2 315 2 911 2 
1331 2 499 2 911 2 
674 2 440 2 957 2 1446 2 10 6 1170 2 506 6 319 2 
1089 2 430 2 
1332 2 789 2 270 2 
270 2 714 2 
1295 2 
852 6 1107 26 1202 2 1298 2 1027 2 1400 2 488 2 3 2 856 2 206 2 782 2 1306 2 1309 4 310 2 11 2 1037 2 785 2 597 2 213 4 215 8 947 2 505 2 1412 2 603 2 1325 2 1129 2 326 2 1048 2 135 2 1420 4 801 2 1143 2 1055 2 519 2 231 5 1340 2 717 2 431 4 1233 2 809 2 725 2 531 4 965 2 534 2 1430 2 628 2 975 2 1350 1 1158 2 1159 4 545 6 162 2 60 2 63 2 986 2 551 2 178 6 1081 4 749 4 998 2 750 2 377 2 1180 2 1005 2 283 2 464 6 1006 2 1276 2 183 2 467 2 469 2 383 26 580 8 661 2 843 2 1287 1 1392 4 481 2 
852 6 1107 26 1202 2 1298 2 1027 2 488 2 3 2 856 2 206 2 782 2 1306 2 1309 4 310 2 11 2 1037 2 783 2 785 2 597 2 213 4 215 8 947 2 1412 2 603 2 1325 2 1129 2 326 2 1048 2 135 2 1420 4 801 2 1143 2 1055 2 519 2 231 6 1340 2 717 2 431 2 1233 2 809 2 725 2 531 4 965 2 534 2 1430 2 628 2 975 2 1350 2 254 2 1158 2 1159 4 545 6 162 2 60 2 63 2 986 2 551 2 178 6 1081 4 749 4 998 2 750 2 377 2 1180 2 283 2 464 6 1006 2 1276 2 183 2 467 2 469 2 383 26 580 8 920 2 661 2 843 2 766 2 1287 2 1392 4 481 2 
907 2 
1217 2 1127 2 
511 2 1079 2 1201 4 557 2 526 2 540 2 1230 4 1041 2 798 2 1421 2 363 2 803 2 1377 2 1304 2 437 2 1167 2 1165 2 438 2 
628 2 1107 12 1201 4 1244 2 1071 2 1156 4 540 2 111 2 545 4 363 2 1304 4 1165 2 1405 2 1167 4 941 2 495 4 1079 2 944 2 1212 2 11 2 1357 2 365 4 784 2 557 2 786 2 992 2 1041 6 320 2 562 2 749 2 997 2 511 4 1370 2 1131 2 135 2 611 4 1230 4 798 2 1420 2 613 2 1421 2 803 2 1377 2 652 2 619 2 715 2 717 2 383 6 661 2 526 2 724 4 725 2 192 6 1288 2 243 2 244 2 477 6 1430 2 437 2 438 4 
883 2 628 2 1107 12 1201 4 1244 2 1071 2 1156 4 540 2 111 2 545 4 363 2 1304 4 1165 2 1405 2 1167 4 941 2 495 4 1079 2 944 2 1212 2 11 2 1357 2 365 4 784 2 557 2 786 2 992 2 1041 4 320 2 562 2 749 2 997 2 511 6 1370 2 135 2 611 4 1230 4 798 2 1420 2 613 2 1421 2 803 2 1377 2 652 2 619 2 715 2 717 2 383 6 661 2 526 2 724 4 725 2 192 6 1288 2 243 2 244 2 477 6 1430 2 437 2 438 4 
628 2 1107 12 1201 4 1244 2 1071 2 1156 4 540 2 111 2 545 4 363 2 1304 4 1165 2 1405 2 1167 4 941 2 495 4 1079 2 944 2 1212 2 11 2 1357 2 365 8 784 2 557 2 786 2 992 2 1041 6 320 2 562 2 749 2 997 2 511 6 1370 2 135 2 611 4 1230 4 798 2 1420 2 613 2 1421 2 803 2 1377 2 652 2 619 2 715 2 717 2 383 6 661 2 526 2 724 4 725 2 192 6 1288 2 243 2 244 2 477 6 1430 2 583 2 437 2 438 4 
883 2 628 2 1107 12 1201 4 1244 2 1071 2 1156 4 540 2 111 2 545 4 363 2 1304 4 1165 2 1405 2 1167 4 941 2 495 8 1079 2 944 2 1212 2 11 2 1357 2 365 8 784 2 557 2 786 2 992 2 1041 6 320 2 562 2 749 2 997 2 511 8 1370 2 135 2 611 4 1230 4 798 2 1420 2 613 2 1421 2 803 2 1377 2 652 2 619 2 715 2 717 2 383 6 661 2 526 2 724 4 725 2 192 10 1288 2 243 2 244 2 477 8 1430 2 583 2 437 2 438 4 
628 2 1107 12 1201 4 1244 2 1071 2 1156 4 540 2 111 2 545 4 363 2 1304 4 1165 2 1405 2 1167 4 941 2 495 8 1079 2 944 2 1212 2 11 2 1357 2 365 8 784 2 557 2 786 2 992 2 1041 6 320 2 562 2 749 2 997 2 511 6 1370 2 135 2 611 4 1230 4 798 2 1420 2 613 2 1421 2 803 2 1377 2 652 2 619 2 715 2 717 2 383 6 661 2 526 2 724 4 725 2 192 10 1288 2 243 2 244 2 477 6 1430 2 583 2 437 2 438 4 
1107 46 1108 6 1296 2 1114 2 1115 2 403 2 1304 4 7 2 209 10 782 2 1306 4 941 2 1309 2 944 2 11 2 784 2 1313 4 786 4 215 4 1129 2 608 6 220 2 222 7 611 8 224 2 1137 1 798 2 801 2 613 2 958 1 1143 2 803 2 231 6 1340 2 619 2 964 2 809 2 243 2 965 12 436 6 1149 2 437 2 246 2 438 4 628 2 50 2 974 2 1156 4 1350 2 1159 4 445 1 60 2 63 2 1165 2 1167 4 1357 2 992 2 641 6 1172 6 997 2 1176 8 644 2 1002 4 1370 2 1180 2 282 6 463 2 1183 1 464 6 1006 2 1377 2 652 4 840 2 656 2 661 2 843 2 665 1 1195 2 1381 1 1196 2 477 12 296 6 1392 4 481 2 852 6 482 2 1201 4 111 2 1027 2 488 2 856 2 1405 2 310 2 1212 2 1037 2 1041 4 1412 2 320 2 867 2 699 6 321 2 1048 2 511 8 701 2 134 2 135 2 1230 4 1420 4 1421 2 1055 2 519 2 715 2 717 2 526 2 527 2 725 2 724 6 346 6 534 2 1430 2 354 2 883 4 1244 2 1071 2 540 2 545 6 162 2 1078 2 363 2 1250 2 740 2 1254 6 1079 2 365 2 170 6 557 2 558 1 369 6 172 6 371 2 562 4 178 8 749 4 1081 4 1268 2 1465 2 904 1 1466 6 1276 2 183 2 383 24 188 1 387 6 917 2 580 4 1287 2 192 2 1288 2 193 7 1475 6 
482 2 852 6 1107 48 1108 6 1201 4 1296 2 1114 2 111 2 1115 2 1027 2 403 2 488 2 856 2 7 2 1304 4 1405 2 209 10 782 2 941 2 1306 4 310 2 1309 2 1212 2 944 2 11 2 1037 4 784 2 1313 4 786 4 213 2 215 8 1041 8 216 2 1412 2 320 2 867 2 699 6 321 2 1129 4 608 6 1048 2 701 2 511 8 220 2 134 2 135 2 611 8 1230 4 224 2 798 2 1420 4 613 2 801 2 1421 2 1143 2 1055 2 803 2 519 2 1340 2 231 6 619 2 715 2 717 2 964 2 527 2 526 2 809 2 724 6 725 2 346 6 436 6 965 12 243 2 1149 2 534 2 1430 2 437 2 354 2 246 2 438 4 628 2 50 2 974 2 1244 2 1071 2 1156 4 540 2 1350 2 1159 4 545 6 162 2 1078 2 363 2 60 2 1250 2 1167 4 1165 2 63 2 740 2 1254 6 1079 2 1357 2 170 6 365 6 557 2 641 6 992 2 369 6 172 6 371 2 562 4 1172 6 178 8 1081 4 749 4 997 2 1176 8 644 2 1002 4 1268 2 1370 2 1180 2 282 6 463 2 1465 2 464 6 1006 4 1466 6 183 2 1377 2 1276 2 652 4 1278 2 840 2 383 26 656 2 917 2 387 6 580 8 661 2 843 2 1195 2 192 2 1287 2 1288 2 1196 2 477 12 1475 6 296 6 583 4 1392 4 481 2 
482 2 852 6 1107 48 1108 6 1201 4 1296 2 1114 2 111 2 1115 2 1027 2 403 2 488 2 856 2 7 2 1304 4 1405 2 209 10 782 2 941 2 1306 4 310 2 1309 2 495 4 1212 2 944 2 11 2 1037 4 784 2 1313 4 786 4 213 2 215 8 1041 8 216 2 1412 2 320 2 867 2 699 6 321 2 1129 4 608 6 1048 2 701 2 511 8 220 2 134 2 135 2 611 8 1230 4 224 2 798 2 1420 4 613 2 801 2 1421 2 1143 2 1055 2 803 2 519 2 1340 2 231 6 619 2 715 2 717 2 964 2 527 2 526 2 809 2 724 6 725 2 346 6 436 6 965 12 243 2 1149 2 534 2 1430 2 437 2 354 2 246 2 438 4 628 2 50 2 974 2 1244 2 1071 2 1156 4 540 2 1350 2 1159 4 545 6 162 2 1078 2 363 2 60 2 1250 2 1167 4 1165 2 63 2 740 2 1254 6 1079 2 1357 2 170 6 365 6 557 2 641 6 992 2 369 6 172 6 371 2 562 4 1172 6 178 8 1081 4 749 4 997 2 1176 8 644 2 1002 4 1268 2 1370 2 1180 2 282 6 463 2 1465 2 464 6 1006 4 1466 6 1377 2 183 2 1276 2 652 4 1278 2 840 2 383 26 656 2 917 2 387 6 580 8 661 2 843 2 1195 2 192 6 1287 2 1288 2 1196 2 477 12 1475 6 296 6 583 4 1392 4 481 2 
1107 52 1108 6 1296 2 1114 2 1115 2 403 2 1304 4 7 2 209 8 782 2 1306 4 941 2 1309 4 944 2 11 2 784 2 1313 4 786 4 213 2 215 10 216 2 1327 2 1129 4 608 12 220 2 1131 2 611 8 224 2 798 2 801 2 613 2 1143 2 803 2 231 6 1340 4 619 2 964 2 238 6 434 2 809 2 243 2 965 10 436 12 1149 2 437 2 246 2 438 4 628 2 50 2 974 2 1156 4 1350 2 1159 4 60 2 63 2 1165 2 1167 4 1357 2 1358 6 992 2 641 12 453 6 1172 6 1175 2 997 2 1176 8 644 2 832 6 1002 4 1370 2 1180 2 282 6 463 2 464 8 1006 4 285 6 1377 2 652 4 840 2 656 2 661 2 843 2 1195 2 101 2 1196 2 477 16 296 6 1392 6 481 4 852 8 482 2 1201 4 111 2 1027 2 488 2 856 2 1405 2 495 4 310 4 1212 2 1037 4 690 6 1041 10 1412 2 320 2 867 2 699 6 321 2 1048 4 511 10 701 2 134 2 135 2 1230 4 1420 4 139 2 1421 2 1055 2 519 2 715 2 717 2 1426 6 526 2 527 2 725 2 724 6 346 12 534 2 1430 2 354 2 883 2 1244 2 733 2 1071 2 538 2 540 2 545 6 162 2 1078 2 363 2 1250 2 740 2 741 6 1254 6 1079 2 365 6 170 12 557 2 369 6 172 6 371 2 562 4 178 12 749 4 1081 4 1083 2 897 6 1465 2 1466 12 1276 2 183 2 1278 2 383 24 387 6 917 2 580 10 1287 2 192 6 1288 2 1475 6 583 4 
511 6 1107 4 1370 2 1244 2 1201 2 1071 2 1156 2 611 2 540 2 1230 2 1421 2 1377 2 1304 4 715 2 1405 2 1165 2 1167 4 495 4 1079 2 1212 2 944 2 1357 2 784 2 365 6 526 2 992 2 1041 6 724 2 192 4 1288 2 243 2 477 4 562 2 583 2 437 2 
852 6 1107 28 1201 2 1295 2 110 3 303 2 1027 2 488 2 856 2 857 2 1304 4 1405 2 209 2 782 2 1306 2 1309 3 1212 2 944 2 11 2 784 2 1041 6 1412 2 511 6 1417 2 135 2 611 2 1230 2 1420 4 801 2 1421 2 1143 2 1055 2 519 2 231 6 1340 3 715 2 717 2 719 2 526 2 809 2 724 2 725 2 810 2 243 2 965 4 534 2 1239 2 1430 2 437 2 628 2 1244 2 1071 2 1156 2 1350 2 540 2 817 2 1159 4 545 6 162 2 60 2 1167 4 63 2 1165 2 1079 2 1357 2 365 6 992 2 562 2 178 8 749 4 1081 4 997 2 1268 2 1370 2 1180 2 464 6 1377 2 1276 2 183 2 383 24 661 2 1287 2 192 2 1288 2 476 2 477 4 583 2 1392 4 481 3 
628 2 1107 12 1201 4 1244 2 1071 2 1156 4 540 2 111 2 545 4 363 2 1304 4 1165 2 1405 2 1167 4 941 2 495 8 1079 2 944 2 1212 2 11 2 1357 2 365 8 784 2 557 2 786 2 992 2 1041 6 320 2 562 2 749 2 997 2 511 6 1370 2 135 2 611 4 1230 4 798 2 1420 2 613 2 1421 2 803 2 1377 2 652 2 619 2 715 2 717 2 383 6 661 2 526 2 724 4 725 2 192 10 1288 2 243 2 244 2 477 6 1430 2 583 2 437 2 438 4 
628 2 1107 12 1244 2 1201 4 1071 2 1156 4 540 2 111 2 159 2 545 4 363 2 1304 4 1165 2 1405 2 1167 4 941 2 495 8 1079 2 944 2 1212 2 11 2 1357 2 365 8 557 2 786 2 992 2 316 4 1041 8 320 2 562 2 1414 2 749 2 997 2 511 6 1370 2 1131 2 135 2 611 4 1230 4 798 2 1420 2 613 2 1421 2 803 2 1377 2 652 2 619 2 715 2 717 2 383 6 661 2 526 2 724 4 725 2 192 10 1288 2 243 2 477 8 1430 2 583 2 437 2 438 4 
1288 2 243 2 1049 2 
1288 2 243 2 1049 2 
852 2 1107 24 1201 2 395 2 1027 2 488 2 856 2 1304 4 209 2 782 2 941 2 1306 6 1309 2 495 4 1212 2 11 2 1037 4 1313 2 1038 2 786 2 215 4 1041 12 1412 2 320 2 1129 4 511 12 1049 2 1131 4 135 2 611 4 1230 2 1420 4 613 2 801 2 1143 2 140 2 1055 2 803 2 519 2 231 6 1424 2 717 2 1344 2 235 4 431 2 525 2 1061 2 724 4 725 2 965 4 243 4 534 2 1430 2 967 4 437 2 438 4 628 2 883 4 975 4 358 2 1071 2 1156 2 1350 2 1159 4 545 6 162 2 1078 2 363 2 1162 2 60 2 63 2 1165 4 1167 4 365 6 369 2 562 4 995 2 178 2 1081 4 749 4 644 2 1002 2 459 2 1180 2 1464 2 464 2 571 2 1006 4 1276 2 183 2 1377 2 652 4 840 2 383 16 472 2 580 4 1192 2 662 2 661 2 843 4 1287 2 192 6 1288 6 477 16 583 4 1104 2 
628 2 383 2 1107 4 1002 2 472 2 917 2 662 2 932 2 463 2 369 2 798 2 965 2 571 2 76 2 614 2 1127 2 209 2 
852 2 1107 24 1201 2 395 2 111 2 1027 2 488 2 856 2 937 2 1304 4 782 2 941 2 1306 6 1309 4 495 4 1212 2 11 2 1037 4 1313 2 1038 4 786 4 215 4 1041 12 1412 2 320 2 1129 4 868 2 511 12 1049 2 1131 4 135 2 611 4 1230 2 1420 4 613 2 801 2 1143 2 140 2 1055 2 803 2 519 2 231 6 1424 2 717 2 1344 2 235 4 431 1 525 2 1061 2 724 4 725 2 965 2 243 4 534 2 1430 2 967 4 437 2 438 4 628 2 883 4 975 4 1071 2 1156 2 1350 2 1159 4 545 6 162 2 1078 2 363 2 1162 2 447 2 60 2 63 2 1165 4 1167 4 365 6 369 2 562 4 642 2 175 2 995 2 178 2 1081 4 749 4 644 2 459 2 1180 2 464 2 571 2 1006 4 1276 2 183 2 1377 2 652 4 840 2 383 16 472 2 580 4 662 2 661 2 843 4 1287 2 192 6 1288 6 477 16 583 4 
852 2 1107 24 1201 2 395 2 111 2 1027 2 488 2 856 2 492 2 1304 4 209 2 782 2 941 2 1306 6 1309 2 495 4 1122 2 1311 2 1212 2 11 2 1037 4 1313 2 1038 2 786 4 215 4 1041 12 1412 2 320 2 1129 4 511 12 1049 2 1131 4 135 2 611 4 1230 2 1420 4 613 2 801 2 1143 2 140 2 1055 2 803 2 519 2 231 6 1424 2 717 2 1344 2 235 4 431 1 525 2 1061 2 724 4 725 2 621 2 965 4 243 4 534 2 1430 2 967 4 437 2 438 4 628 2 883 4 975 4 1071 2 1245 2 1156 2 1350 2 1159 4 545 6 162 2 1078 2 363 2 1162 2 60 2 63 2 1165 4 1167 4 365 6 369 2 562 4 995 2 178 2 1081 4 749 4 644 2 1002 2 459 2 1180 2 464 2 571 2 1006 4 1276 2 183 2 1377 2 652 4 840 2 383 16 472 2 580 4 662 2 661 2 843 4 1287 2 192 6 1288 6 477 16 583 4 
1105 1 1107 510 775 2 1109 2 1110 2 777 2 778 2 396 2 1114 2 397 2 400 3 401 16 402 2 779 3 3 2 2 2 1118 2 8 38 781 2 9 23 782 2 1120 14 11 2 12 18 1124 6 409 32 411 6 16 18 17 14 790 4 1128 2 414 3 22 2 791 12 795 38 1133 32 26 10 28 2 1135 16 1139 6 1140 32 1141 14 801 36 802 2 1142 2 1143 2 31 32 32 24 805 32 34 2 36 2 37 4 1145 2 807 2 431 2 42 6 434 2 809 2 1147 2 435 2 46 2 1152 32 51 14 52 2 1155 32 55 8 1157 12 443 16 1158 2 818 4 444 64 1159 200 820 4 819 2 1160 18 59 64 60 2 1166 2 63 36 449 18 450 18 64 2 67 24 68 8 69 12 1168 3 824 2 75 32 826 32 1171 2 455 2 1174 32 1175 2 79 2 1178 20 1179 2 81 4 1180 2 82 2 83 14 1182 42 85 2 464 14 836 2 837 34 88 4 90 32 838 2 468 2 469 2 470 18 1189 2 471 16 93 2 94 4 842 2 843 10 475 32 844 2 103 2 478 24 106 16 481 46 109 10 1198 3 852 14 1199 2 486 2 853 2 110 2 1202 38 1204 6 854 4 1205 18 855 2 488 4 857 2 856 2 118 64 1210 6 494 10 496 4 497 64 498 2 500 2 1211 3 501 2 122 2 1215 10 1216 4 865 2 503 18 1222 32 1224 2 1225 2 510 6 1226 24 513 1 512 2 132 2 873 18 133 2 874 2 134 2 135 2 1229 2 515 2 516 5 139 2 517 2 1231 2 142 12 519 8 876 2 1232 2 520 2 143 14 521 4 144 6 522 2 523 36 528 18 527 2 529 2 148 2 530 2 533 14 880 2 881 2 1239 2 534 8 535 18 1240 4 536 2 884 32 156 2 538 2 539 14 545 8 1246 2 887 2 1247 3 1248 2 548 2 888 36 550 2 166 5 889 2 1252 4 551 2 1256 2 555 4 168 14 556 17 1257 2 560 2 1258 2 561 62 563 32 894 2 178 56 1265 2 1266 4 1267 2 896 14 895 232 568 8 900 10 181 32 902 20 1273 2 905 2 906 4 572 2 183 2 1276 2 909 2 910 18 573 32 574 2 1277 10 1279 2 577 2 914 6 578 2 579 2 580 89 918 3 1281 2 1284 2 1287 126 1289 4 1290 2 194 2 927 2 929 2 928 2 930 18 197 8 1294 4 586 8 587 2 199 72 1296 2 201 18 588 2 202 3 1298 2 591 2 203 1 592 2 1300 2 1302 2 935 2 938 2 207 4 940 16 210 2 595 20 1306 2 596 2 211 2 1309 48 1308 18 1312 2 1314 3 215 86 599 2 948 2 1319 2 1321 16 949 20 1322 2 950 4 1323 2 951 34 1327 2 219 2 606 14 1334 3 955 2 956 2 1336 6 1337 6 959 32 1339 2 231 456 1340 16 618 20 1342 2 960 32 1345 2 964 2 240 64 241 2 965 4 245 2 1347 2 625 32 968 20 628 2 972 18 630 2 250 2 976 2 977 2 252 10 979 2 978 4 1350 126 255 2 981 3 257 2 258 2 984 2 985 28 986 2 1354 32 263 8 1355 3 1356 2 265 7 987 2 989 14 268 2 267 12 1360 36 639 2 991 4 271 2 272 2 1362 32 1364 2 1366 2 1368 12 643 4 1369 2 999 4 1001 2 1003 2 1375 14 646 2 283 2 284 2 649 4 1010 4 1011 2 651 2 286 10 1012 6 655 2 288 32 657 2 292 2 293 2 1013 74 658 32 661 2 1014 2 295 2 1382 32 669 1 670 2 1387 14 1390 2 1389 2 1392 12 1018 2 1394 49 1019 2 673 4 1023 4 1396 2 1025 2 300 32 676 18 302 2 301 2 1026 2 303 2 1027 2 1401 4 1404 34 304 102 681 6 684 2 685 6 1032 2 686 2 688 2 311 32 310 46 1408 2 317 32 1411 2 1042 2 1412 2 694 2 698 2 321 4 1045 4 326 2 1048 42 328 2 701 4 1417 2 703 2 704 2 1051 2 331 32 1052 2 1420 6 712 2 332 32 1053 2 1422 3 1423 2 1055 2 334 18 716 84 717 2 339 18 1059 14 1425 2 343 6 722 4 725 2 1429 2 726 2 1064 18 351 2 1430 2 1431 2 1432 2 1433 2 728 4 1066 2 1435 2 1067 2 1068 16 356 6 1069 2 733 4 1438 2 1070 4 1439 2 1072 2 1440 32 1073 84 734 62 1075 2 360 2 1076 64 1442 4 1443 9 362 2 1445 4 740 2 367 18 1450 2 1452 4 1455 4 371 4 748 2 374 22 373 2 1456 3 1459 3 1460 2 749 6 1081 168 376 18 1082 2 1461 14 1083 2 377 2 752 2 1084 1 1463 2 1088 3 1092 10 380 2 761 2 1469 12 1470 2 383 408 1096 2 1097 36 385 20 386 5 1098 2 1099 4 767 35 1101 2 1474 20 769 2 390 2 391 2 772 2 771 2 
355 2 852 2 1107 2 26 4 900 2 819 2 464 2 935 2 362 2 761 2 1340 2 286 2 1309 2 383 2 310 6 842 2 809 2 694 2 272 2 1456 2 1433 2 1392 2 178 2 481 2 
355 2 852 2 1107 2 26 4 900 2 819 2 464 2 935 2 362 2 761 2 1340 2 286 2 1309 2 383 2 310 6 842 2 809 2 694 2 272 2 1456 2 1433 2 1392 2 178 2 481 2 
355 2 852 2 1107 2 26 4 900 2 819 2 464 2 935 2 362 2 761 2 1340 2 286 2 1309 2 383 2 310 6 842 2 809 2 694 2 272 2 1456 2 1433 2 1392 2 178 2 481 2 
1226 3 1107 10 1178 4 791 2 356 2 1070 2 795 2 1157 2 1135 2 819 2 1337 2 1442 2 1206 2 304 6 1185 2 736 2 9 4 595 4 1469 2 144 2 145 2 1309 3 383 4 121 2 67 3 914 2 69 2 1316 2 809 2 1474 4 349 2 535 4 1173 2 1046 2 1151 3 178 2 510 4 968 4 851 4 481 3 
1107 10 356 2 1070 2 1157 2 819 2 1442 2 1206 2 304 6 736 2 9 4 595 4 1210 2 1309 2 494 2 67 2 121 2 69 2 1316 2 1173 2 1046 2 178 2 510 4 1226 2 791 2 1178 4 795 2 1135 2 1337 2 1142 2 1185 2 1469 2 144 2 383 4 145 2 914 2 809 2 1474 4 349 2 535 4 1151 2 481 2 851 4 968 4 
1107 10 356 2 1070 2 1157 2 819 2 1442 2 1206 2 304 6 736 2 9 4 595 4 1210 2 1309 2 494 2 67 2 121 2 69 2 1316 2 1173 2 1046 2 178 2 510 4 1226 2 791 2 1178 4 795 2 1135 2 1337 2 1142 2 1185 2 1469 2 144 2 383 4 145 2 914 2 809 2 1474 4 349 2 535 4 1151 2 481 2 851 4 968 4 
1107 10 356 2 1070 2 1157 2 819 2 1442 2 1206 2 304 6 736 2 9 4 595 4 1210 2 1309 2 494 2 67 2 121 2 69 2 1316 2 1173 2 1046 2 178 2 510 4 1226 2 791 2 1178 4 795 2 1135 2 1337 2 1142 2 1185 2 1469 2 144 2 383 4 145 2 914 2 809 2 1474 4 349 2 535 4 1151 2 481 2 851 4 968 4 
1107 10 356 2 1070 2 1157 2 819 2 1442 2 1206 2 304 6 736 2 9 4 595 4 1210 4 1309 2 494 4 67 2 121 2 69 2 1316 2 1173 2 1046 2 178 2 510 4 1226 2 791 2 1178 4 795 2 1135 2 1337 2 1142 4 1185 2 1469 2 144 2 383 4 145 2 914 2 809 2 1474 4 349 2 535 4 1151 2 481 2 851 4 968 4 
1153 2 893 2 122 2 1031 2 357 2 480 2 
912 2 893 2 730 2 926 2 297 2 1202 2 1415 2 
970 2 1107 10 278 2 24 2 359 2 205 1 1163 2 407 2 383 8 66 2 290 1 38 1 92 2 915 1 524 2 474 2 990 2 765 2 723 2 747 2 18 2 273 2 1430 2 624 1 417 2 608 2 
1107 6 791 6 356 6 587 2 1070 2 1157 6 1401 2 517 2 1302 2 1337 6 1142 2 207 2 685 4 634 2 9 15 1012 4 1469 6 1342 2 144 6 1210 3 383 6 494 5 384 2 68 2 914 6 555 2 189 1 600 2 535 12 848 2 510 4 
1107 1 383 1 329 2 1178 2 793 2 1297 1 978 2 504 2 256 4 746 2 1474 2 693 6 615 2 1161 2 617 2 1330 2 327 2 968 2 
329 2 1178 2 793 2 978 4 504 4 256 4 746 2 1474 2 693 6 615 2 1161 2 617 2 1330 2 327 4 968 2 
1107 1 383 1 329 2 1178 2 793 2 1297 1 978 8 504 8 256 4 746 8 1474 2 693 10 615 2 1161 6 617 2 1330 2 327 8 968 2 
329 2 1178 2 793 2 978 2 504 2 256 2 1474 2 693 2 615 2 617 2 1330 2 327 2 968 2 
1105 1 1107 78 484 2 199 8 1395 2 300 4 302 2 400 2 488 2 405 1 118 6 309 8 1120 4 311 4 497 10 860 2 312 2 1214 4 409 4 317 4 1411 2 1220 4 507 4 1222 8 606 4 952 16 1130 4 418 2 513 3 705 2 1133 4 331 8 516 4 1141 4 801 6 332 4 1422 2 959 4 31 4 231 103 1341 2 716 24 805 4 960 4 1059 4 431 1 42 2 345 2 240 10 1428 2 149 2 625 4 1152 4 51 4 884 4 1155 4 1440 4 1073 24 1350 29 1076 11 444 10 1159 44 735 4 1351 2 1443 4 58 32 163 8 59 10 63 6 1354 4 168 4 556 8 70 10 892 10 169 2 989 4 1361 4 559 16 75 4 1362 4 826 4 1174 4 1081 36 1000 8 279 10 895 24 83 4 1375 4 1182 14 181 4 755 2 87 2 573 6 91 8 1277 4 288 16 383 70 291 4 386 4 1013 30 580 15 658 4 475 4 922 2 767 6 1287 27 1382 4 1290 2 1387 4 1017 2 
1198 2 1107 28 484 2 884 4 1440 4 300 4 302 2 1350 12 444 6 1159 14 1076 2 488 2 59 6 63 2 166 2 118 2 311 2 1036 2 497 6 860 2 265 1 312 2 556 5 317 2 1411 2 826 4 695 2 414 2 1081 14 418 2 513 2 895 8 1336 1 516 2 801 2 425 2 959 4 1467 2 231 40 805 4 573 2 1277 4 383 26 1097 2 386 2 431 2 580 14 1013 6 42 2 658 2 240 2 767 4 1287 12 435 1 149 2 1382 2 1290 2 1017 2 1394 9 
1198 2 1105 6 1107 150 931 10 484 2 199 50 300 6 302 8 400 2 488 8 682 4 118 36 1120 4 311 10 497 16 860 2 312 2 409 6 214 2 317 10 1411 8 16 2 218 24 695 2 414 2 1222 42 606 4 418 2 513 8 1335 4 1336 11 1133 6 331 24 516 6 1140 24 1141 4 425 2 1338 8 801 14 332 6 1422 2 959 6 31 6 231 248 805 6 716 92 37 2 960 6 1059 4 234 4 39 26 431 4 40 4 42 4 344 24 240 18 345 2 435 4 150 4 1434 4 625 6 247 8 1152 6 51 4 884 6 1155 6 157 6 1440 6 1073 84 54 90 1350 58 1076 16 1159 112 444 16 1443 6 1352 8 59 16 63 14 166 6 1354 6 265 7 168 4 1359 18 556 19 368 4 989 4 75 6 1259 4 1362 6 826 6 563 24 1174 6 78 12 1081 88 457 24 895 124 1373 10 83 4 1375 4 1182 12 181 6 755 2 182 26 1467 2 90 6 573 10 1277 12 288 42 383 134 1097 4 386 6 1013 38 580 30 1380 2 658 10 475 6 191 4 767 8 1287 58 1382 10 1290 8 1387 4 1292 2 1017 2 584 10 1394 26 196 90 
1105 1 774 2 1107 46 931 2 484 2 884 2 732 2 1440 2 300 2 1350 4 302 2 1203 4 633 2 487 2 1076 2 1159 20 444 4 593 2 488 2 4 2 1030 2 59 4 63 2 448 2 118 2 687 2 311 2 1036 2 264 2 497 4 860 2 1213 2 312 2 70 2 892 2 169 2 638 2 73 2 317 2 74 2 1411 2 218 2 826 2 1363 2 20 2 1044 2 1081 20 457 2 179 2 21 2 418 2 513 3 1335 2 279 2 895 6 1181 4 461 2 794 2 1373 2 1086 2 711 2 425 2 1338 2 801 2 959 2 231 46 573 2 805 2 1057 4 718 2 232 2 383 44 1095 2 523 6 94 4 1472 2 431 2 580 37 658 2 344 2 1473 2 240 2 1428 2 767 6 1287 4 1382 2 923 2 149 2 1238 2 1290 2 1017 2 584 2 
899 2 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 
982 1 576 1 306 1 1144 1 1264 1 653 1 

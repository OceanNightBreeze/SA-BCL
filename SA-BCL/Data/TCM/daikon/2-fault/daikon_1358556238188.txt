#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1813 422 (241,1725) (241,1725) 952 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (1611,1654) 913 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_117()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:noDups([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3_35()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ProglangType:elementIsIntegral()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_21()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3_27()Z
daikon.Quant:eq(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:hasTypeOf()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_15()Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eltsGTE([II)Z
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_60()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_77()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3_19()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:lte(II)Z
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.VarInfo:isDerived()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_105()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.string.OneOfString:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_86()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_25()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_29()Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.Quant:intersection([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_118()Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_163()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isString()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:logOn()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:isReverse([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_96()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:slice([III)[I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3R_119()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.MathMDE:pow(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_137()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([D)D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:is_false()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_122()Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_106()Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfo:isIOAArray()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:ne(II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:eq(JJ)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gte(II)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ModBitTracker:num_samples()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_10()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:gcd(JJ)J
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.FormatCommand:getNumCommands()I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_109()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_87()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_161()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_89()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_136()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_68()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:isScalar()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice3:arity()I
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Debug:logDetail()Z
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z | ASSIGN | 7265 | = null
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.PptName:isEnterPoint()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.ProglangType:baseIsFloat()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_14()Z
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_149()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.Invariant:getConfidence()D
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:max([I)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ValueTuple:size()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ModBitTracker:num_vars()I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
817 2 1384 2 228 2 122 4 219 2 417 2 88 2 945 2 26 2 
1365 2 1770 2 639 6 1436 6 385 6 342 2 528 2 1834 2 1889 2 832 2 76 2 
959 6 1810 2 101 6 1288 6 945 2 1817 4 549 6 318 2 357 4 219 2 1787 2 1351 2 325 2 
166 2 962 2 1909 8 561 4 33 8 1913 2 146 2 338 4 65 10 1298 10 219 6 657 10 529 16 1722 10 221 16 718 6 1639 2 1794 26 1921 16 849 2 661 4 729 8 945 6 1361 28 1116 8 1763 10 1281 12 1681 6 24 2 1566 4 
1357 6 329 4 
871 2 
1744 2 1574 2 1578 4 1025 2 841 2 340 2 216 2 1098 2 219 4 531 2 1158 2 1038 4 539 2 1528 2 730 2 545 2 1837 2 1370 2 21 2 1477 2 1120 2 1654 2 916 2 79 2 24 2 1180 2 1182 2 424 4 1194 2 1324 2 1611 2 1067 2 998 2 1863 2 817 2 1493 4 1135 2 1555 2 945 4 1074 2 1801 2 1279 2 1738 2 1019 2 
1808 4 1909 6 423 6 146 2 1665 4 1252 4 653 8 65 15 1298 15 1788 5 219 4 529 32 657 6 1722 15 221 32 718 4 261 2 1794 47 1921 32 406 2 661 2 1495 4 729 19 1269 4 945 4 1361 52 638 6 1170 4 882 6 796 3 481 6 1763 15 207 6 1281 22 1681 4 78 2 1314 2 1244 4 919 2 
795 2 620 2 1611 2 
1771 2 941 2 471 10 515 2 521 22 4 2 1078 2 912 2 53 2 429 2 222 2 1654 2 154 2 1919 2 
619 2 147 2 565 2 65 2 192 2 1298 2 529 2 657 4 1722 2 221 2 1794 4 1921 2 661 2 729 2 1361 6 947 2 506 2 671 2 830 2 1838 2 1763 2 1281 2 1681 2 
1794 12 1921 8 561 2 1495 4 1361 16 638 6 1170 4 6 2 65 4 1298 4 1763 4 529 8 207 6 1722 4 1281 4 221 8 80 2 
1507 2 31 4 804 2 620 6 964 2 60 4 90 4 340 2 776 10 1064 4 220 2 66 2 1516 2 1611 8 1157 4 260 2 814 14 345 62 1069 2 1493 4 1831 2 537 2 233 4 1645 4 787 10 1007 2 351 2 764 2 1473 2 238 2 1339 2 587 2 795 2 1564 4 1874 2 181 4 82 2 1083 4 421 4 1182 4 
1317 2 1289 2 623 2 871 2 1824 2 1356 2 1175 2 1142 2 1082 2 363 2 
455 2 1086 2 1345 1 1689 2 713 2 965 2 215 2 119 1 1462 2 219 34 1222 3 1823 4 970 1 1349 2 1102 2 1105 3 1350 1 465 2 1467 1 974 2 1108 2 229 2 349 4 727 3 1359 2 1835 2 1109 3 1588 2 473 2 476 2 128 16 355 6 734 4 18 1 615 3 129 2 614 5 130 1 1706 2 1711 2 618 3 1240 2 1598 12 248 2 1600 2 856 2 1712 2 739 2 1847 1 141 2 254 16 987 4 371 16 988 8 626 2 992 2 1384 2 1488 2 373 2 1858 2 496 2 376 2 156 32 1731 2 163 2 54 4 1011 1 884 2 1622 2 1623 2 1015 2 1017 3 393 2 1506 2 1629 1 165 1 1745 2 397 2 285 24 891 2 1514 2 1749 2 523 8 399 2 1294 2 291 2 895 3 62 1 168 2 402 2 1635 2 1029 2 1033 2 293 2 1034 4 1893 2 534 2 408 6 177 2 1420 2 1531 2 1902 2 414 2 302 2 1173 2 908 2 1053 2 416 1 797 1 1311 2 1762 2 1310 1 1537 3 552 24 1767 4 917 2 1769 12 310 2 920 2 1187 3 1059 6 682 32 1062 3 684 2 1321 6 567 2 1430 4 1546 3 574 2 693 2 1671 2 327 2 1796 2 695 2 1073 2 825 2 827 2 945 32 946 2 200 2 1442 1 1925 8 1561 2 1079 16 204 2 1927 2 702 2 594 1 833 2 
219 2 1241 2 
32 2 219 4 843 2 
1558 2 
1453 6 960 26 451 2 1454 350 0 6 456 6 1 10 2 2 460 4 5 6 1461 2 968 2 464 396 1463 2 1464 2 10 18 466 2 467 2 971 208 1466 2 468 2 973 2 976 2 472 2 17 2 1476 2 482 2 484 194 982 2 23 10 1478 2 985 2 486 4 28 4 986 6 30 28 488 2 35 2 37 4 491 2 490 2 1483 22 1485 330 39 12 1487 66 493 6 996 4 494 10 997 344 44 82 999 208 1000 10 1003 4 1492 2 1494 6 47 6 1005 62 48 2 1006 4 1008 6 1497 24 50 2 1499 22 51 6 507 6 509 6 1500 2 1013 8 1012 2 1505 44 1018 2 514 2 58 4 1509 2 1510 322 1512 4 1022 8 1023 2 61 4 525 2 1030 126 1032 8 68 90 530 2 1035 286 1520 28 1522 8 1039 2 540 2 543 2 74 2 1530 2 544 2 75 2 547 24 1535 8 1054 28 554 4 1055 2 555 2 556 2 558 6 559 18 1058 18 86 2 1060 6 1061 4 1544 104 93 58 569 2 96 4 572 8 1066 2 1068 2 97 26 1551 8 1553 4 100 28 577 2 102 6 578 6 579 4 1072 6 581 4 583 2 1075 4 1562 10 1565 2 1081 6 110 2 1570 16 1571 10 1572 180 1579 160 606 78 1580 2 1095 10 118 4 121 16 608 6 1099 2 1100 2 1582 24 1583 2 1107 6 126 4 1110 2 1591 4 1112 2 1111 48 1593 10 1115 2 129 2 616 6 132 18 1119 8 1118 2 1597 2 135 2 1601 2 1122 2 143 2 1125 2 145 6 625 2 1606 28 631 12 1130 6 1607 6 1610 2 1131 6 1615 4 159 8 1619 2 160 28 1139 10 1141 46 1628 6 647 6 1151 6 648 6 169 4 170 2 656 2 658 2 1154 2 1638 6 1159 4 1641 4 174 4 1643 4 660 8 176 8 1164 52 663 28 1167 2 1169 104 1171 4 1650 6 669 4 1649 2 670 6 178 2 179 2 673 4 1176 84 1653 2 1655 2 676 2 1181 10 677 8 182 6 1184 4 1659 4 678 4 680 2 188 4 681 540 1663 2 1193 4 1195 2 1667 102 191 2 1668 4 691 180 1670 194 1202 2 197 2 198 6 1206 2 1674 2 699 170 201 2 1677 8 1209 2 1210 48 206 2 1682 2 1683 2 209 2 210 20 1214 72 1691 2 1692 4 219 10 1696 2 1697 2 720 6 721 2 724 2 231 10 728 2 1703 4 731 396 235 4 733 8 1704 104 241 2 735 6 243 36 245 6 1238 180 736 4 1243 6 250 4 251 4 740 6 1245 2 743 2 1716 2 1247 2 1248 66 745 6 1717 62 1251 16 1255 6 1253 6 258 2 1256 180 1720 2 1721 322 1725 2 757 4 759 2 1728 2 1264 16 1266 12 1267 4 1265 22 267 214 765 6 1271 2 269 26 1273 4 274 4 1732 4 1276 2 1734 14 275 24 1736 4 278 6 1280 2 1737 6 769 180 1741 4 281 94 1746 2 287 2 1748 2 1293 2 1295 4 1299 2 1751 2 1302 2 780 2 782 2 294 2 297 12 786 2 1754 2 1755 2 788 6 1756 30 303 26 1307 4 792 52 1759 4 1309 2 799 2 308 2 1768 4 801 2 1773 58 802 44 803 2 805 26 1778 2 807 18 1780 6 1782 4 1323 4 1786 2 319 10 320 2 811 6 810 12 812 2 1335 2 1337 2 328 2 1795 2 822 6 821 4 824 24 330 2 1799 108 828 2 829 8 332 4 1338 2 1803 4 831 2 1340 2 1804 22 335 4 836 6 1809 180 336 2 1813 2 839 104 1816 8 842 28 339 8 341 16 1820 2 1821 28 344 2 846 24 1828 126 847 44 1832 2 1358 28 850 18 851 6 353 8 852 24 1367 6 1839 6 1368 6 1840 4 1841 12 1369 6 1372 42 855 4 1844 2 1373 2 1845 2 858 2 362 4 361 14 859 2 369 2 366 2 1377 2 1850 2 1378 20 862 16 1382 6 1385 180 372 2 1857 42 1859 2 1862 2 1391 6 1393 2 874 2 1869 180 1399 6 878 2 1400 4 1875 6 389 12 392 2 1881 2 1406 104 889 2 394 2 395 2 396 2 1408 6 1409 4 1885 4 1886 18 1412 2 401 4 1413 4 403 70 1415 10 1414 44 1417 6 1418 26 900 2 901 6 902 2 1896 6 905 2 1900 2 410 2 906 28 412 198 907 24 413 10 415 28 1903 2 915 64 1906 14 420 2 1908 188 1427 160 924 18 422 2 1429 2 1912 208 927 2 928 4 929 2 930 2 932 2 425 2 1431 2 427 4 1916 2 937 146 1917 2 430 6 1920 2 943 14 435 70 1922 6 945 10 1440 6 438 2 441 2 442 2 1444 4 443 2 1445 2 1446 4 952 2 1447 4 447 4 1929 4 958 6 1448 6 1451 2 1933 4 1932 52 
180 2 1735 2 1177 2 775 1 
1404 2 180 2 
1523 2 1308 2 180 2 630 2 913 2 1611 2 338 2 
1818 2 1308 2 180 2 
1308 2 909 2 180 2 
1735 2 751 2 1178 2 
1308 2 180 2 
1178 2 1044 2 
180 2 1354 2 
1735 2 1178 2 1812 2 
1220 2 1735 2 480 2 
899 2 1735 2 108 2 
1735 2 1904 2 439 2 
1735 2 1631 2 359 2 
1178 2 1637 2 
180 2 1341 2 
1220 2 1605 2 
108 2 939 2 
1887 2 439 2 
359 2 914 2 
1178 2 1662 2 
526 2 359 2 
1924 2 439 2 
1087 2 108 2 
1220 2 1227 2 
1735 2 205 2 1178 2 1812 2 
1735 2 205 2 1178 2 1812 2 918 2 
1735 2 1178 2 398 2 
1735 2 1178 2 1726 2 
744 2 1123 2 1910 2 279 2 
817 2 913 2 134 2 1611 2 705 2 
149 2 134 2 705 2 
1308 2 180 2 913 2 662 2 1611 2 338 2 
45 2 916 2 
913 2 896 2 1611 2 338 2 
880 2 439 2 
307 2 359 2 
1220 2 1148 2 
108 2 541 2 
712 2 108 2 359 2 
108 2 359 2 1519 2 
524 2 108 2 359 2 
590 2 108 2 359 2 
771 2 1379 6 1608 2 1611 2 1260 2 14 2 913 2 596 6 
1178 2 1117 2 
1437 2 659 2 848 2 1630 4 1729 2 978 2 1188 2 1215 2 772 2 298 2 521 6 1346 4 1460 2 1113 2 246 2 1262 2 1907 2 347 2 
1735 2 270 2 
567 2 
1093 2 119 4 219 26 1823 4 1825 2 1108 2 229 2 349 2 1359 2 1588 2 1230 2 355 4 734 2 18 2 129 2 358 2 1240 2 1239 2 1598 8 1600 2 1480 2 987 2 492 2 371 6 988 2 626 2 1384 2 994 2 1488 2 496 2 376 2 156 6 54 4 1622 2 1623 6 393 4 1745 2 1884 2 1514 2 1294 2 291 2 652 4 1888 2 1034 4 1304 2 1893 2 534 2 536 2 1165 2 408 2 177 2 73 2 548 2 1902 2 302 2 414 2 1173 2 908 2 1053 2 797 2 917 2 1769 8 85 2 1059 2 682 4 1321 6 1430 4 693 2 1671 2 327 2 695 2 825 2 945 26 946 2 1927 2 1450 4 
215 2 1093 2 119 1 219 26 1823 4 1108 2 229 2 349 2 1359 2 1588 2 1230 2 355 6 734 2 18 2 129 2 358 2 1240 2 1239 2 1598 8 1374 2 1600 2 1480 2 987 2 371 6 988 2 626 2 1384 2 994 2 1488 2 496 2 376 2 156 6 163 2 54 4 1622 2 1623 6 393 4 1745 2 1884 2 1514 2 1294 2 291 2 652 4 402 2 1888 2 897 2 1034 4 1304 2 1893 2 534 2 536 2 1165 2 408 2 177 2 73 2 548 2 1902 2 302 2 414 2 1173 2 908 2 1053 2 797 2 917 2 1313 2 1769 8 1059 2 682 4 1321 6 1430 4 693 2 1671 2 327 2 695 2 825 2 945 26 946 2 1927 2 1450 4 
1602 2 
36 2 1106 2 
164 2 1287 2 774 2 1458 2 1459 2 714 2 1149 10 1814 2 1294 2 117 4 291 2 1296 8 219 12 528 4 1889 2 1636 2 1034 2 346 2 1160 2 229 2 1647 2 1042 2 1045 2 302 2 1365 2 129 2 1761 2 1842 2 1242 8 557 2 917 2 1905 2 1846 2 922 2 34 2 316 4 1320 2 1321 4 865 2 1430 2 1387 2 750 2 935 2 1855 4 1198 2 495 4 1918 2 99 2 1436 6 1617 2 158 4 945 6 1498 4 1923 2 639 6 385 6 1733 2 1277 2 1622 2 832 4 
164 2 1343 4 1287 2 774 2 1458 2 1459 2 714 2 1149 10 1814 2 1294 2 117 4 291 2 1296 8 219 12 528 4 1889 2 1636 2 1034 2 346 2 1160 2 229 2 1647 2 1042 2 1045 2 76 2 302 2 1365 2 129 2 1761 2 1842 2 1242 8 917 2 1905 2 1846 2 922 2 34 2 315 2 316 4 1320 2 1321 4 1430 2 865 2 1387 2 750 2 935 2 1855 4 1198 2 495 4 1918 2 99 2 1436 6 1617 2 158 4 945 6 1498 4 875 2 1923 2 639 8 385 8 1277 2 1622 2 832 4 
1436 2 1287 2 34 2 1045 2 1498 4 1459 2 714 2 1320 2 117 4 639 2 865 2 1761 2 1277 2 935 2 528 2 495 2 832 2 1905 2 
164 2 1287 2 774 2 1458 2 1459 2 714 2 1149 6 1814 2 1294 2 117 4 291 2 1296 4 219 12 528 4 1636 2 1034 2 346 2 1160 2 229 2 1647 2 1042 2 1045 2 76 2 302 2 1365 2 129 2 1761 2 1842 2 1242 4 557 2 917 2 1905 2 1846 2 922 2 34 2 316 4 1320 2 1321 4 865 2 1430 2 1387 2 750 2 935 2 1855 4 1198 2 495 4 1918 2 99 2 1436 4 1617 2 158 4 945 6 1498 4 1923 2 639 6 385 6 1733 2 1277 2 1622 2 832 4 
164 2 1287 2 774 2 1458 2 1459 2 714 2 1149 6 1814 2 1294 2 117 4 291 2 1296 4 342 2 219 12 528 4 1636 2 1034 2 346 2 1160 2 229 2 1647 2 1042 2 1045 2 302 2 1365 2 129 2 1761 2 1842 2 1242 4 557 2 917 2 1905 2 1846 2 922 2 34 2 316 4 1320 2 1321 4 865 2 1430 2 1387 2 750 2 935 2 1855 4 1198 2 495 4 1918 2 99 2 1436 6 1617 2 158 4 945 6 1498 4 1923 2 639 4 385 6 1733 2 1277 2 1622 2 832 4 
164 2 1287 2 774 2 1458 2 1459 2 714 2 1149 6 1814 2 1294 2 117 4 291 2 1296 4 219 12 528 4 1889 2 1636 2 1034 2 346 2 1160 2 229 2 1647 2 1042 2 1045 2 302 2 1365 2 129 2 1761 2 1842 2 1242 8 557 2 917 2 1905 2 1846 2 922 2 34 2 316 4 1320 2 1321 4 865 2 1430 2 1387 2 750 2 935 2 1855 4 1198 2 495 4 1918 2 99 2 1436 6 1617 2 158 4 945 6 1498 4 1923 2 639 6 385 6 1733 2 1277 2 1622 2 832 4 
164 2 1287 2 774 2 1458 2 1459 2 714 2 1149 10 1814 2 1294 2 117 4 291 2 1296 8 342 2 219 12 528 4 1889 2 1636 2 1034 2 346 2 1160 2 229 2 1647 2 1042 2 1045 2 302 2 1365 2 129 2 1761 2 1842 2 1242 8 557 2 917 2 1905 2 1846 2 922 2 34 2 316 4 1320 2 1321 4 865 2 1430 2 1387 2 750 2 935 2 1855 4 1198 2 495 4 1918 2 99 2 1436 8 1617 2 158 4 945 6 1498 4 1923 2 639 6 385 8 1733 2 1277 2 1622 2 832 4 
164 2 1287 2 774 2 1458 2 1459 2 714 2 1149 10 1814 2 1294 2 117 4 291 2 1296 8 219 12 528 4 1889 2 1636 2 1034 2 346 2 1160 2 229 2 1647 2 1042 2 1045 2 302 2 1365 2 129 2 1761 2 1842 2 1242 8 557 2 917 2 1905 2 1846 2 922 2 34 2 316 4 1320 2 1321 4 865 2 1430 2 1387 2 750 2 935 2 1855 4 1198 2 495 4 1918 2 99 2 1436 6 1617 2 158 4 945 6 1498 4 1923 2 639 6 385 6 1733 2 1277 2 1622 2 832 4 
454 7 1458 2 1459 2 714 2 215 2 715 2 219 46 1225 6 226 2 229 2 13 6 1701 2 734 2 980 6 237 6 1237 2 1240 2 1241 6 1242 2 1715 2 34 2 987 2 988 2 750 2 754 10 495 4 496 2 497 2 1727 6 1498 4 1733 2 1277 2 54 4 1014 2 1504 2 1287 2 774 2 1294 2 291 2 528 4 1034 4 534 2 784 6 536 2 72 1 1042 2 1045 2 1046 1 302 2 1049 2 1053 2 1761 2 306 1 553 2 1538 2 1769 4 1059 2 562 1 316 6 808 2 1320 2 1321 6 99 2 823 2 333 6 1558 6 1559 2 832 4 595 4 1811 2 838 1 604 2 1814 2 117 4 1093 4 342 4 1823 4 843 6 346 2 1108 2 349 2 1359 2 1588 2 355 6 1365 4 129 2 1842 2 1598 4 1846 2 1848 2 622 2 371 6 1384 2 865 2 1387 2 1855 8 1856 6 1390 2 873 7 376 2 1864 1 381 2 156 8 1617 2 158 4 636 2 637 6 639 4 1620 6 385 12 386 1 388 2 1622 2 885 6 1623 6 1144 6 164 4 1884 2 1632 2 1149 2 652 4 402 2 1888 2 1155 4 404 2 1890 2 1636 2 1893 2 1160 2 1892 2 408 2 177 2 1647 2 1902 2 414 2 908 2 917 2 1905 2 1185 2 922 2 682 2 1430 4 690 2 1198 2 935 2 1201 8 1918 4 1436 8 693 12 695 2 1673 2 436 1 946 2 945 24 700 1 1923 2 948 6 1211 2 1930 2 709 2 
1811 2 1458 2 714 2 1459 2 1814 2 604 2 116 2 117 4 215 2 1093 4 715 2 219 48 1823 4 843 6 346 2 1225 6 226 2 1108 2 229 2 349 4 1701 2 13 6 1359 2 1588 2 1365 4 355 6 237 6 980 6 734 4 129 2 1237 2 1241 6 1240 2 1842 2 1598 8 1242 6 1846 2 1715 2 1848 2 34 2 987 4 622 2 371 6 988 2 1384 2 865 2 1387 2 750 2 1855 8 1856 6 1390 2 754 10 495 4 496 2 497 2 376 2 1727 6 381 2 156 8 1617 2 158 4 1268 2 636 2 1498 4 637 6 639 8 1620 6 385 12 1733 2 1277 2 388 2 54 4 1504 2 1014 2 885 6 1622 2 1623 6 1144 6 164 4 393 2 1287 2 774 2 1632 2 1884 2 1149 2 1294 2 291 2 652 4 402 2 1888 2 528 4 1889 4 1155 4 404 2 1890 2 1636 2 1034 4 1892 2 534 2 1160 2 1893 2 784 6 536 2 408 2 1647 2 177 2 1042 2 1045 2 1902 2 414 2 302 2 1049 2 908 2 1053 2 1761 2 553 2 1538 2 917 2 1905 2 1769 8 1185 2 922 2 1059 2 682 2 808 2 316 6 1320 2 1321 6 1430 4 690 2 935 2 1198 2 1201 8 1918 4 99 2 693 12 1436 8 695 2 1673 2 823 2 945 26 946 2 948 6 1923 2 1559 2 1558 6 333 6 1211 2 1930 2 832 4 595 4 709 2 
1811 2 1458 2 714 2 1459 2 1814 2 604 2 116 2 117 4 215 2 1093 4 715 2 219 48 1823 4 843 6 346 2 1225 6 226 2 1108 2 229 2 349 4 1701 2 13 6 1359 2 1588 2 1365 4 355 6 237 6 980 6 734 4 129 2 1237 2 1241 6 1240 2 1842 2 1598 8 1242 6 1846 2 1715 2 1848 2 34 2 987 4 622 2 371 6 988 2 1384 2 865 2 1387 2 750 2 1855 8 1856 6 1390 2 754 10 495 4 496 2 497 2 376 2 1727 6 381 2 156 8 1617 2 158 4 1268 2 636 2 1498 4 637 6 639 8 1620 6 385 12 1733 2 1277 2 388 2 54 4 1504 2 1014 2 885 6 1622 2 1623 6 1144 6 164 4 393 2 1287 2 774 2 1632 2 1884 2 1149 6 1294 2 291 2 652 4 1296 4 402 2 1888 2 528 4 1889 4 1155 4 404 2 1890 2 1636 2 1034 4 1892 2 534 2 1160 2 1893 2 784 6 536 2 408 2 1647 2 177 2 1042 2 1045 2 1902 2 414 2 302 2 1049 2 908 2 1053 2 1761 2 553 2 1538 2 917 2 1905 2 1769 8 1185 2 922 2 1059 2 682 2 808 2 316 6 1320 2 1321 6 1430 4 690 2 935 2 1198 2 1201 8 1918 4 99 2 693 12 1436 8 695 2 1673 2 823 2 946 2 945 26 948 6 1923 2 1559 2 1558 6 333 6 1211 2 1930 2 832 4 595 4 709 2 
1688 2 1458 2 1459 2 714 2 215 2 715 2 219 52 1225 6 226 2 229 2 13 6 1701 2 734 4 980 6 237 12 1237 2 1240 2 1241 12 1242 6 25 2 1715 2 34 2 987 4 988 4 750 2 1489 2 754 8 495 4 496 2 498 6 497 2 1727 6 1268 2 1498 4 273 2 1733 2 1277 2 54 4 1014 2 1504 2 1287 2 774 2 1294 2 291 2 1296 4 292 6 528 4 1034 4 534 2 784 6 536 2 295 2 1042 2 1045 2 76 2 302 2 1049 2 1051 2 1053 2 1761 2 553 2 1538 2 1769 10 1059 4 316 6 808 2 1320 2 1321 6 1784 6 99 2 816 6 333 12 1558 12 1559 2 832 4 595 4 1811 2 1814 2 604 2 116 2 117 4 1093 4 1347 6 342 2 1823 4 843 12 346 2 1108 2 349 4 1359 2 1588 2 355 6 1365 4 129 2 1842 2 1598 10 1846 2 1848 2 622 2 860 6 371 8 1851 6 1384 2 865 2 1387 2 1855 8 1856 6 1390 2 376 2 381 2 156 12 1617 2 158 4 383 2 636 2 637 12 1870 6 639 10 1620 6 385 16 388 2 1622 2 885 6 1623 8 1144 6 164 4 393 2 1884 2 1632 2 1149 6 652 6 402 2 1888 4 1889 4 1155 4 404 2 1890 2 1636 2 1893 2 1160 2 1892 2 408 4 1647 2 177 2 1902 2 414 2 908 2 917 2 1905 2 1185 2 922 2 925 2 682 4 1430 4 690 2 1198 2 935 2 1201 8 1918 4 1436 10 693 10 695 2 1673 2 945 24 946 2 1923 2 948 6 1211 2 1930 2 707 6 709 2 
1846 2 922 2 1287 2 316 2 1458 2 1149 4 714 2 1459 2 117 2 865 2 1296 4 1387 2 750 2 219 4 1855 2 528 4 1889 2 99 2 1160 2 1436 6 1617 2 158 2 1042 2 1045 2 1498 2 1923 2 1365 2 639 6 385 4 1733 2 1277 2 832 4 1842 2 1242 6 1905 2 
1458 2 1459 2 714 2 117 2 215 2 1093 2 219 28 1823 4 229 2 1108 2 726 2 1359 2 1588 2 1365 2 355 6 129 2 1240 2 1842 2 248 2 1242 6 857 3 1846 2 141 2 371 6 1384 2 865 2 1387 2 750 2 1855 2 754 2 496 2 376 2 1613 2 156 8 1617 2 158 2 762 2 1498 2 639 6 1731 2 385 4 1733 2 1277 2 54 4 1622 2 1623 6 1287 2 1884 2 1149 2 1294 2 291 2 652 4 402 2 528 4 1889 2 1034 4 1160 2 1893 2 534 2 536 2 408 3 177 2 1042 2 1045 2 1902 2 302 2 908 2 1053 2 917 2 1905 2 313 2 922 2 1059 3 682 3 316 2 1321 6 567 2 1430 4 1328 2 1198 2 99 2 1436 6 693 4 695 2 823 2 945 24 946 2 1923 2 832 4 
323 2 1923 2 1160 2 
323 2 1923 2 1160 2 
1807 2 215 2 117 2 1093 6 119 2 342 4 219 24 1823 4 346 2 469 2 1108 2 229 2 349 4 1359 2 1588 2 355 6 1365 4 734 4 129 2 19 2 1240 2 1598 4 1242 6 137 2 987 4 371 2 1384 2 994 4 1855 4 1856 2 150 2 754 2 495 4 496 2 376 2 500 2 156 2 1617 2 158 2 1498 2 876 2 639 12 385 16 1277 4 54 4 1504 2 1622 2 1624 2 1623 2 770 2 886 2 164 2 1287 2 774 2 1632 2 1884 2 283 2 1149 6 1294 2 1152 2 291 2 402 2 1296 4 528 4 1889 4 1155 2 1034 4 535 2 1160 6 1893 2 534 2 536 2 70 2 1647 2 1042 2 1902 2 76 4 414 4 302 2 908 2 1053 2 1761 2 917 2 1905 2 1769 4 682 2 1191 2 316 4 1542 2 1321 6 568 2 1430 4 935 2 323 2 1918 4 693 4 1436 12 695 2 945 16 946 2 1923 4 1077 4 832 4 595 2 1931 4 709 2 
693 2 34 2 36 2 622 2 945 2 1852 2 291 2 131 2 219 4 1856 2 754 2 1237 2 1624 2 375 2 595 2 770 2 469 2 
1569 2 1807 2 1690 2 1814 2 215 2 117 2 1093 6 342 4 219 24 1823 4 346 2 469 2 1108 2 229 2 349 4 1359 2 1588 2 355 6 1365 4 734 4 1234 2 129 2 1240 2 1598 4 1242 6 987 4 371 2 1384 2 994 4 1855 4 1856 2 150 2 495 4 496 2 376 2 500 2 156 2 1617 2 1136 2 158 2 1498 2 876 2 639 12 385 16 1277 4 54 4 1504 2 1622 2 1624 2 1623 2 770 2 886 4 164 4 1287 2 774 2 1632 2 1884 2 1149 6 1294 2 1152 2 291 2 402 2 1296 4 528 4 1889 4 1155 2 1034 4 535 2 1160 6 1893 2 534 2 536 2 1647 2 1042 2 1902 2 76 4 414 4 302 2 908 2 1053 2 1761 2 917 2 1905 2 1769 4 682 4 1191 2 316 4 1542 2 1321 6 568 2 1430 4 935 2 323 2 1918 4 693 2 1436 12 695 2 1797 2 945 16 946 2 1923 4 1077 4 832 4 1931 4 709 2 
1807 2 1814 2 215 2 117 2 1093 6 119 1 342 4 219 24 1823 4 346 2 469 2 1108 2 229 2 349 4 1359 2 1588 2 1362 2 474 2 355 6 1365 4 734 4 129 2 1240 2 1598 4 1242 6 368 2 987 4 371 2 1384 2 994 4 1855 4 1856 2 150 2 754 2 495 4 496 2 376 2 500 2 156 2 1617 2 158 2 1498 2 876 2 639 12 385 16 1277 4 54 4 1504 2 1622 2 1624 2 1623 2 770 2 886 2 164 4 1287 2 774 2 1632 2 1884 2 1149 6 1294 2 1152 2 291 2 402 2 1296 4 528 4 1889 4 1155 2 1034 4 535 2 1160 6 1893 2 534 2 536 2 1647 2 1042 2 1902 2 76 4 414 4 302 2 908 2 1053 2 1761 2 917 2 1905 2 1769 4 1315 2 560 2 682 2 1191 2 316 4 1542 2 1321 6 568 2 1430 4 935 2 323 2 1918 4 693 4 1436 12 695 2 945 16 946 2 1923 4 1077 4 832 4 595 2 1931 4 709 2 
961 2 963 80 966 2 3 158 967 38 7 38 8 18 970 13 969 2 9 4 11 2 974 2 977 24 12 2 15 2 16 2 979 10 18 3 981 3 20 4 983 4 22 2 25 2 27 2 38 3 988 84 989 10 991 2 40 2 990 2 993 3 41 2 42 2 43 2 1001 2 1002 2 1004 2 46 2 1009 2 1011 1 54 480 1017 2 1016 66 55 2 56 10 57 2 1021 2 59 78 60 2 1024 104 1027 12 64 112 63 26 65 6 1029 2 67 16 1031 80 1033 2 1034 8 69 2 1037 2 71 2 1040 38 73 2 1041 4 1047 34 1049 2 1050 2 77 60 1052 2 1053 2 81 2 83 2 84 2 1056 2 1059 46 87 2 1062 2 89 2 91 2 1063 2 92 2 95 10 1065 8 98 2 1070 3 1071 8 103 2 1076 2 105 38 106 2 1079 52 107 3 1080 38 109 2 1083 2 1084 2 1085 7 111 8 112 2 1088 11 113 2 1089 2 1091 60 115 2 1092 2 1093 2 119 2 120 2 1097 2 1096 20 1102 2 1101 4 1104 2 1105 2 1103 2 123 2 124 2 1108 2 125 2 127 2 128 14 1114 2 129 2 133 2 136 2 138 6 139 2 1121 2 142 2 1124 2 146 2 148 2 1127 38 1129 2 151 3 152 2 1132 2 153 2 1134 40 155 2 156 126 157 3 1138 80 161 2 1140 80 1143 2 1145 170 165 1 1146 3 1147 2 167 2 1150 3 1153 2 168 2 1156 2 173 2 1161 2 175 4 1162 78 1165 2 1166 4 177 2 1168 2 1172 2 1174 2 1179 2 181 2 1183 2 184 2 186 2 185 20 1186 4 1187 2 1189 78 189 6 1192 2 190 3 1196 2 1197 2 1199 2 1200 8 193 2 194 82 195 20 1204 2 199 2 1207 2 200 2 202 2 203 2 204 2 208 2 1212 2 1213 2 212 2 213 2 1217 2 214 2 1216 2 1218 2 215 328 1221 2 217 18 218 21 219 1174 1222 2 1223 38 221 12 223 2 224 2 1224 36 225 2 227 2 1226 2 229 2 230 2 233 2 1228 2 1229 2 1230 86 234 2 1231 24 1232 156 1233 14 236 2 239 22 240 34 242 2 244 3 1236 66 1240 8 1239 2 247 3 249 80 1244 4 253 2 252 2 254 100 1249 2 1250 1 256 2 257 2 1254 10 1258 2 259 2 261 4 1261 38 262 124 263 80 1263 2 264 10 266 1 1270 2 268 4 271 2 1272 2 272 36 273 2 1274 2 1275 2 276 2 277 32 1278 2 1281 10 1283 2 1285 78 280 2 1290 3 285 15 284 2 286 38 1291 2 1292 78 288 2 1294 2 289 558 291 2 1297 22 1298 6 1300 4 293 2 1303 2 1304 2 1305 2 295 2 296 2 300 2 301 3 302 2 304 2 305 2 1311 2 309 2 1312 2 311 38 313 2 1316 2 314 8 1318 6 1319 2 1321 10 1322 2 317 2 1326 2 1325 78 1328 2 1329 2 1330 2 321 2 1331 2 1332 2 324 2 1333 2 1334 2 1336 3 331 4 334 2 1345 1 1348 2 343 2 1349 2 1353 4 1355 2 348 2 1359 2 350 2 1360 2 1361 24 1363 2 1364 2 355 1116 1366 2 356 2 358 4 1371 10 360 2 1375 76 1376 4 364 2 365 2 367 2 1380 22 370 3 371 32 1381 2 1383 12 1384 8 1386 3 1388 38 1392 2 376 84 1394 2 378 2 377 38 1396 2 1395 3 379 6 380 80 382 10 1397 2 384 2 383 2 1398 2 388 2 1401 2 1403 2 391 2 1405 3 1407 3 397 2 1410 2 1411 2 399 2 400 2 402 318 404 2 1416 2 405 4 406 2 407 20 408 16 1420 14 411 2 414 18 1422 2 1423 2 1424 3 1425 2 1426 2 1428 2 426 76 1430 8 1432 3 428 2 1434 2 1433 95 431 80 432 6 1438 1 433 2 434 18 1439 2 437 2 440 2 1441 2 1443 4 444 2 445 8 446 2 448 2 449 20 1449 2 1452 2 452 2 453 2 455 2 1455 2 457 78 458 1 1456 2 1457 2 459 38 462 3 463 38 1462 2 465 2 1465 234 1467 1 470 2 1468 2 1472 2 473 2 1474 2 475 2 477 38 478 80 479 2 1475 4 483 2 1479 3 1481 2 1480 2 487 2 489 2 1482 16 1484 34 1486 8 1489 2 1491 2 496 2 499 4 502 2 501 80 1495 4 1496 106 503 12 504 2 505 24 508 2 1501 2 1502 2 510 2 1503 3 511 2 1506 2 512 2 513 3 1508 2 517 1 1511 2 519 2 521 6 522 2 523 14 1515 2 529 12 533 2 1518 3 1517 2 534 2 1521 2 1524 40 536 2 1527 2 1529 2 542 2 1531 2 545 2 548 2 1532 2 1533 2 1534 4 1536 4 551 2 552 61 1537 2 1538 2 1539 2 1540 2 1541 3 563 2 564 2 566 2 1545 4 1546 2 570 10 1547 2 571 10 1548 3 1550 2 573 2 574 2 1552 2 1554 16 575 4 576 18 580 80 582 38 586 9 1560 2 1559 8 1563 2 589 2 592 166 591 2 594 1 593 38 597 2 598 3 1567 2 1568 4 599 78 1575 8 601 2 1573 36 602 2 603 78 1576 2 1577 38 604 4 607 3 1581 2 609 2 610 2 612 120 611 2 613 2 1584 2 1586 2 1585 2 1587 2 1588 2 1590 3 1592 2 1594 10 615 3 1595 2 1596 2 617 2 1598 178 1604 112 1603 48 624 22 628 3 627 2 629 24 1609 2 1613 2 632 80 633 2 634 2 635 2 1616 2 638 6 1618 2 640 4 641 4 643 2 1621 2 1622 2 1623 18 1625 76 1627 2 1626 2 644 3 645 3 1629 15 646 2 649 8 651 54 650 16 652 12 653 8 655 2 654 2 1635 2 1640 2 1642 4 1644 2 1645 2 1646 2 1648 24 666 78 668 2 667 2 672 2 674 4 1651 2 1656 1 675 4 1657 4 1658 2 1660 22 679 16 1661 2 682 110 683 2 684 2 685 2 686 158 688 2 689 2 692 2 1669 2 693 10 1672 2 695 82 697 2 1673 8 1676 22 698 2 1675 2 1678 3 701 4 1679 20 1680 78 703 2 704 6 708 2 1684 2 710 80 1686 2 1687 78 1688 2 1689 16 713 2 1693 2 1694 2 715 2 1695 2 716 8 717 2 718 4 1698 2 719 4 722 4 1699 12 1700 2 725 2 726 2 727 2 1701 22 729 6 1702 2 732 2 1705 2 1707 3 1708 3 1711 14 1709 2 1710 2 1712 2 1714 102 1713 2 741 6 1715 8 742 2 746 38 747 3 748 3 749 6 1719 2 752 2 1722 6 754 2 753 2 1723 2 755 1 1724 2 756 10 758 2 760 2 761 8 763 38 1730 2 766 1 767 5 1740 2 1739 2 1742 2 1743 2 773 2 1750 2 1749 2 777 78 781 4 1752 3 783 10 785 2 1753 2 789 4 790 6 791 2 1757 4 794 80 1760 4 797 2 1762 2 1763 6 1764 38 798 2 1765 78 1767 32 1766 38 1769 183 1772 2 800 2 1774 10 1775 2 1777 60 1779 3 808 16 1781 2 1785 2 809 234 1788 6 1789 2 813 2 1790 2 1791 2 1793 78 1792 6 815 4 1794 18 820 2 1796 2 819 2 1798 14 826 8 827 2 1800 2 1802 2 833 2 834 2 1805 2 1806 4 835 40 1811 2 837 10 840 80 1815 2 1819 80 1822 2 1823 402 844 2 845 2 1826 2 1827 2 1829 2 1830 2 1833 78 1835 2 854 1 1843 2 856 2 857 2 1849 156 861 2 1854 4 863 2 864 158 866 24 867 4 868 6 870 2 872 2 1860 2 1861 156 1867 14 1868 2 1871 20 877 83 881 2 1876 26 884 2 1878 2 887 2 1879 2 888 2 1882 2 1883 1 890 2 891 2 893 3 895 3 1888 46 898 2 1891 2 1893 4 1895 2 1894 2 1897 3 903 2 1899 2 1901 2 1902 2 908 2 911 78 917 2 920 2 921 2 923 3 1909 6 925 4 926 2 1911 20 1914 3 1915 14 931 2 933 3 934 38 936 2 938 6 1921 12 940 4 942 24 944 2 946 2 945 966 949 2 1925 14 950 6 953 2 1928 78 955 4 954 2 957 60 956 2 
1059 2 1428 2 682 2 837 4 1290 2 371 2 989 2 652 2 1129 2 1888 6 219 2 1723 2 898 2 1491 2 756 2 156 2 1525 2 408 2 177 2 945 2 1272 2 1501 2 444 2 1623 2 
1059 2 1428 2 682 2 837 4 1290 2 371 2 989 2 652 2 1129 2 1888 6 219 2 1723 2 898 2 1491 2 756 2 156 2 1525 2 408 2 177 2 945 2 1272 2 1501 2 444 2 1623 2 
1059 2 1428 2 682 2 837 4 1290 2 371 2 989 2 652 2 1129 2 1888 6 219 2 1723 2 898 2 1491 2 756 2 156 2 1525 2 408 2 177 2 945 2 1272 2 1501 2 444 2 1623 2 
185 4 187 2 1286 2 1909 4 1059 3 1911 4 254 2 682 3 1027 2 866 3 65 2 1096 4 1298 2 219 10 529 2 1722 2 1389 2 221 2 718 2 172 2 532 2 1794 4 405 2 1921 2 977 3 156 2 1306 2 177 2 945 4 1361 5 1557 2 1872 4 642 2 1501 2 550 2 1079 2 1679 4 1763 2 418 3 1714 6 
185 4 187 2 1286 2 1909 4 1059 2 1911 4 254 2 682 2 146 2 1027 2 866 2 65 2 1096 4 1298 2 219 10 529 2 1722 2 1389 2 221 2 718 2 172 2 532 2 1794 4 405 2 1921 2 977 2 156 2 1306 2 729 2 177 2 945 4 1361 4 1557 2 1872 4 642 2 1501 2 550 2 1079 2 1679 4 1763 2 418 2 1281 2 1714 6 
185 4 187 2 1286 2 1909 4 1059 2 1911 4 254 2 682 2 146 2 1027 2 866 2 65 2 1096 4 1298 2 219 10 529 2 1722 2 1389 2 221 2 718 2 172 2 532 2 1794 4 405 2 1921 2 977 2 156 2 1306 2 729 2 177 2 945 4 1361 4 1557 2 1872 4 642 2 1501 2 550 2 1079 2 1679 4 1763 2 418 2 1281 2 1714 6 
185 4 187 2 1286 2 1909 4 1059 2 1911 4 254 2 682 2 146 2 1027 2 866 2 65 2 1096 4 1298 2 219 10 529 2 1722 2 1389 2 221 2 718 2 172 2 532 2 1794 4 405 2 1921 2 977 2 156 2 1306 2 729 2 177 2 945 4 1361 4 1557 2 1872 4 642 2 1501 2 550 2 1079 2 1679 4 1763 2 418 2 1281 2 1714 6 
185 4 187 2 1286 2 1909 4 1059 2 1911 4 254 2 682 2 146 4 1027 2 866 2 65 2 1096 4 1298 2 219 10 529 2 1722 2 1389 2 221 2 718 2 172 2 532 2 1794 4 405 2 1921 2 977 2 156 2 1306 2 729 4 177 2 945 4 1361 4 1557 2 1872 4 642 2 1501 2 550 2 1079 2 1679 4 1763 2 418 2 1281 4 1714 6 
1753 2 869 2 384 2 1318 2 370 2 1026 2 
364 2 1052 2 232 2 1472 2 1230 2 370 2 499 2 
1880 2 29 1 1246 2 1020 1 1190 2 282 2 520 1 1028 2 219 10 778 2 1257 2 1516 1 322 2 694 2 1470 2 1007 1 945 8 664 2 584 2 546 2 637 2 302 2 1926 2 853 2 450 2 183 2 
1909 4 146 2 113 2 1089 2 216 2 653 2 65 6 219 6 1788 4 1298 6 529 6 1722 6 221 6 718 2 11 2 1794 12 1921 6 1495 2 729 2 1168 2 945 6 1361 16 638 4 951 2 1370 2 674 2 1763 6 1281 5 1342 2 1244 2 
326 2 1036 2 711 2 185 2 312 4 140 2 904 1 144 2 1911 2 945 1 1090 2 52 2 1853 2 1475 2 219 1 1679 2 419 2 1352 6 
326 4 1036 2 711 2 185 2 312 4 140 2 144 4 1911 2 1090 2 52 2 1853 2 1475 4 1679 2 419 2 1352 6 
326 8 1036 2 711 2 185 2 312 4 140 8 904 1 144 8 1911 2 945 1 1090 2 52 2 1853 6 1475 8 219 1 1679 2 419 2 1352 10 
326 2 1036 2 711 2 185 2 312 2 144 2 1911 2 1090 2 52 2 1475 2 1679 2 419 2 1352 2 
835 2 710 6 211 4 599 24 600 24 337 24 1687 6 963 6 457 6 1088 7 603 4 1577 4 3 16 461 2 114 10 215 58 1094 4 605 2 1819 6 119 4 7 4 218 15 219 150 1823 88 1465 84 972 10 1830 8 1469 8 1833 10 1590 6 1232 17 355 248 478 6 984 4 1371 8 485 4 249 6 1849 36 1386 2 864 16 867 4 1718 2 1388 4 1490 4 868 4 1259 6 1612 8 1861 18 1133 12 376 14 632 6 262 12 1001 8 380 6 1865 2 263 6 264 11 763 4 1496 42 1866 90 1138 6 1010 4 877 8 1873 1 883 2 1140 6 54 112 767 2 1282 26 390 2 1145 34 1285 10 890 8 286 4 1747 10 59 6 1633 24 1292 6 649 7 1024 42 290 2 289 124 402 58 777 6 1634 2 1301 2 1893 8 1162 6 1163 90 665 4 1758 2 1421 18 793 8 794 6 910 4 911 6 1652 4 1765 6 1769 28 311 4 1186 4 1057 2 1189 10 1914 2 686 16 1664 26 190 4 1325 10 934 4 1432 2 809 92 1433 22 1792 4 1793 6 431 24 1435 2 1336 2 695 14 580 6 582 4 945 134 105 4 1208 2 1928 10 107 2 1680 24 592 50 593 4 
1285 2 600 2 337 2 1685 2 516 2 518 2 963 2 890 2 1513 2 1747 2 1633 2 461 2 3 4 114 2 892 2 215 2 289 6 894 2 1819 2 119 2 402 2 527 2 219 46 1823 20 972 2 1893 2 1830 2 975 2 1833 2 538 2 1526 2 1898 2 1471 2 409 2 1836 2 1232 2 1043 2 1590 4 352 2 1758 2 1048 4 354 2 793 2 355 44 478 2 910 2 1235 2 1599 2 249 2 738 2 1769 38 741 4 1776 2 621 2 1189 2 1849 2 255 2 1126 2 687 2 686 4 1783 2 1325 2 190 2 864 4 94 2 1128 2 1327 2 374 2 1861 2 1614 2 376 2 1001 2 1435 2 818 2 380 2 1865 2 501 6 696 2 695 2 1205 2 945 44 585 4 877 6 879 2 1208 2 1928 2 1140 2 387 2 54 20 1877 4 706 2 390 2 
710 4 1344 2 1687 4 457 4 963 4 1577 4 3 10 461 2 215 30 1819 4 1219 2 7 4 218 8 219 78 1823 36 1465 24 1830 2 723 4 1833 4 1590 2 1232 10 352 2 355 104 478 4 1371 4 737 8 249 4 255 10 1126 10 1849 6 1386 2 864 10 867 4 1388 4 995 2 1861 10 376 6 632 4 262 14 1001 2 1865 2 263 4 380 4 265 4 49 16 763 4 1496 16 1137 2 877 6 1140 4 54 44 768 2 1284 4 390 2 1145 30 56 2 1285 4 890 2 286 4 1292 4 59 4 649 4 1024 8 289 24 402 28 777 4 1634 2 779 8 1893 2 1162 4 538 2 1419 8 1898 2 299 16 794 4 911 4 1765 4 1769 14 311 4 1186 4 1057 2 1189 4 1914 2 1543 4 686 10 1666 4 934 4 1325 6 809 24 1792 2 431 8 1793 4 1435 2 818 10 1203 4 196 4 695 6 580 4 582 4 945 70 104 32 105 4 588 8 1208 2 1928 4 592 8 593 4 
1285 2 963 4 890 2 1088 2 603 2 461 2 3 6 215 12 289 8 290 2 1819 4 119 2 402 12 218 6 219 28 1823 14 1893 2 1830 2 1833 2 1836 2 1232 2 1590 2 352 2 1758 2 355 40 478 4 1371 4 249 4 1769 14 1186 2 1189 2 1849 2 686 6 864 6 1325 2 1718 2 867 2 1432 2 868 2 1433 10 1861 2 1792 2 376 2 1001 2 1435 2 380 4 1865 2 264 2 1336 2 695 2 945 26 877 4 1208 2 1928 2 1140 4 54 14 107 2 390 2 1145 6 
162 2 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 
1549 1 1589 1 1556 1 806 1 1402 1 171 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 63 1260 783 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant:logOn()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eq(II)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfo:isDerived()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern:intern([D)[D
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE:pow(II)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Debug:logOn()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.VarInfo:isIOASet()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.Node:Node()V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfo:is_typeof()Z
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Constant:Constant(I)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isArray()Z
daikon.ModBitTracker:num_vars()I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.VarInfo:has_typeof()Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:relate_var()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptSlice3:arity()I
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:gt(II)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:logDetail()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:lexGT([I[I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:union([I[I)[I
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:is_false()Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.Ppt:Ppt()V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(S[S)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.Quant:setDiff([I[I)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:split(I)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isPointer()Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:setEqual([I[I)Z
jtb.JavaCharStream:readChar()C | CONDITION | 5637 | if (x) -> if (!x)
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.diff.RootNode:RootNode()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:noDups([I)Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:isIOAArray()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isString()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Stopwatch:Stopwatch(Z)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:size()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1249 2 1396 2 433 2 1368 4 230 2 587 2 312 2 1284 2 202 2 
977 2 486 6 1019 2 98 2 243 2 704 6 952 2 111 2 1002 2 708 2 75 6 
361 6 1396 2 362 4 242 2 1310 2 1340 6 1162 6 1284 2 804 2 1037 6 556 2 1270 2 1144 4 
292 8 1017 4 188 8 429 16 1070 16 1284 6 851 12 1005 2 541 29 52 10 771 2 317 4 231 2 35 10 368 6 1029 8 1008 10 961 2 1396 6 1203 10 1257 6 1366 4 681 2 618 10 1343 16 418 8 1186 2 1449 4 1246 2 26 26 
1160 6 406 4 
1043 2 
654 2 1383 2 735 2 1116 2 509 2 932 2 1284 4 340 2 1117 2 743 2 1432 4 1256 2 203 2 1396 4 754 2 349 2 1294 2 668 2 389 2 1448 4 1231 2 164 2 69 2 1193 2 171 2 1311 2 129 4 450 4 955 2 280 2 870 2 492 2 455 2 1314 2 230 2 771 2 318 2 283 2 963 2 325 2 1464 2 684 2 732 2 839 2 
1351 6 293 4 429 32 1070 32 1217 6 930 4 1284 4 609 6 103 4 1143 4 851 22 1408 2 541 54 52 6 317 2 720 2 35 16 1459 6 614 2 368 4 1029 6 57 6 1008 16 961 2 1396 4 680 8 1203 16 1257 4 618 16 1343 32 1038 2 306 4 418 18 1210 2 670 2 1155 6 394 4 1245 4 26 48 
907 2 963 2 1341 2 
1394 2 854 22 1103 2 632 10 96 2 349 2 950 2 798 2 1130 2 1220 2 800 2 90 2 119 2 761 2 
1191 2 1070 2 429 2 742 2 851 2 541 6 52 4 317 2 35 2 201 2 1008 2 157 2 1203 2 304 2 1257 2 618 2 16 2 1370 2 1343 2 479 2 418 2 577 2 26 4 
1008 4 1203 4 1366 2 1070 8 429 8 930 4 618 4 1011 2 1343 8 851 4 1264 2 541 16 1155 6 394 4 1459 6 35 4 26 12 
168 2 928 14 1194 4 815 4 635 2 338 2 1163 62 102 4 129 4 795 10 1046 2 1027 4 9 10 1436 4 1256 4 936 2 519 2 1337 2 347 4 549 2 984 2 963 8 574 4 1341 6 601 4 109 4 212 2 288 4 1013 2 266 2 989 2 860 2 907 2 463 4 115 2 370 2 116 2 924 2 1231 2 483 2 
1405 2 1033 2 221 2 1043 2 257 2 1128 2 835 2 464 2 788 2 1393 2 
1214 1 189 2 656 1 471 2 1386 32 848 2 380 8 1284 34 473 1 1024 2 1286 2 1026 2 105 2 8 4 935 3 749 1 1392 4 937 2 853 2 1221 2 1396 32 302 2 856 2 755 6 939 2 1293 6 942 2 1125 2 113 2 308 4 391 1 216 2 117 2 863 6 585 2 487 2 226 3 312 2 868 3 128 2 314 2 767 2 768 2 131 2 132 2 229 2 874 8 316 2 495 2 233 2 879 2 415 4 324 4 778 1 1064 2 419 16 784 24 785 2 41 3 144 2 1156 2 1416 32 427 1 968 2 607 2 690 8 1072 2 432 2 430 3 1251 2 1420 2 1423 1 259 1 794 12 1073 2 1167 2 1255 1 695 2 1077 2 1169 2 1435 2 611 6 54 2 53 2 155 2 1174 5 261 2 700 2 975 2 978 2 1258 2 1083 1 803 1 443 3 265 2 1184 4 355 2 806 1 64 2 905 3 808 2 629 3 1451 2 166 16 1350 2 630 2 273 2 360 2 712 1 538 3 444 3 633 3 1096 2 1099 3 449 2 539 2 1356 2 818 16 363 1 279 2 823 2 1100 2 1457 2 177 2 916 2 827 2 543 2 459 2 724 4 545 2 547 4 1104 2 1105 2 285 2 1277 2 917 2 1372 2 82 2 1376 2 921 2 1467 2 840 16 87 2 1380 2 1468 1 185 2 562 24 
1006 2 1284 2 
481 2 395 2 1284 4 
1288 2 
484 2 1325 2 1121 2 1397 2 634 2 889 2 1260 2 602 2 941 2 783 2 757 2 1391 2 436 2 912 2 63 2 717 2 671 2 799 2 787 2 11 2 1102 4 
27 2 249 2 650 1 558 2 
27 2 315 2 
653 2 511 2 27 2 963 2 1449 2 589 2 12 2 
27 2 1101 2 12 2 
27 2 289 2 12 2 
628 2 558 2 1112 2 
27 2 12 2 
502 2 1112 2 
27 2 247 2 
1447 2 558 2 1112 2 
844 2 558 2 458 2 
240 2 558 2 456 2 
558 2 772 2 246 2 
915 2 558 2 832 2 
709 2 1112 2 
27 2 624 2 
844 2 99 2 
642 2 456 2 
376 2 772 2 
86 2 832 2 
1333 2 1112 2 
1271 2 832 2 
772 2 779 2 
1431 2 456 2 
237 2 844 2 
1447 2 558 2 826 2 1112 2 
1149 2 1447 2 558 2 826 2 1112 2 
558 2 1190 2 1112 2 
877 2 558 2 1112 2 
565 2 990 2 421 2 1302 2 
963 2 218 2 1202 2 589 2 
653 2 522 2 963 2 218 2 1202 2 589 2 
987 2 27 2 963 2 1449 2 589 2 12 2 
754 2 1247 2 
764 2 963 2 1449 2 589 2 
962 2 772 2 
369 2 832 2 
1003 2 844 2 
1375 2 456 2 
1461 2 832 2 456 2 
548 2 832 2 456 2 
456 2 832 2 517 2 
456 2 832 2 34 2 
47 2 589 2 1253 6 983 6 963 2 1087 2 807 2 503 2 
477 2 1112 2 
253 2 854 6 641 2 1355 2 174 2 888 2 1151 2 1344 2 1429 2 1241 2 956 4 130 2 494 4 993 2 66 2 1360 2 179 2 320 2 
106 2 558 2 
177 2 
927 2 656 2 1386 4 1284 26 1024 6 8 4 107 2 1034 2 1396 26 302 2 856 2 755 2 478 2 388 2 1293 2 113 2 308 2 117 2 863 6 25 2 585 2 224 2 312 2 128 2 314 2 768 2 132 2 229 2 592 2 959 4 322 2 879 2 415 2 324 4 1064 2 1416 6 146 2 690 2 432 2 1251 2 1420 2 794 8 1167 2 1077 4 611 4 155 2 54 2 700 2 261 2 978 2 265 2 1184 4 806 2 64 2 531 2 811 2 166 6 630 2 1350 2 449 2 910 2 539 2 279 2 74 2 1273 2 543 2 724 4 459 2 545 2 80 4 547 2 461 2 1376 2 1380 2 
927 2 656 2 1386 4 1284 26 1024 6 8 4 107 2 1396 26 302 2 856 2 755 2 478 2 388 2 1293 2 113 2 308 2 117 2 310 2 863 6 25 2 585 2 946 2 224 2 312 2 128 2 314 2 768 2 132 2 229 2 592 2 959 4 1060 2 322 2 879 2 415 2 324 4 1064 2 1416 6 146 2 690 2 432 2 1251 2 1420 2 794 8 1167 2 1077 4 611 6 155 2 54 2 700 2 261 2 978 2 265 2 1184 4 806 2 64 2 531 2 166 6 630 2 1350 2 449 2 910 2 539 2 279 2 74 2 916 2 543 2 724 4 459 2 545 2 80 4 547 2 1105 2 461 2 1376 2 87 2 1380 2 
405 2 
342 2 789 2 
1417 2 147 2 1018 2 1019 2 1251 2 98 4 258 2 1164 2 1388 2 1284 12 1219 2 969 2 1287 2 974 2 1028 2 345 2 200 2 204 4 977 2 1396 6 704 6 756 2 988 2 1184 2 579 2 708 4 1129 2 1091 4 1348 8 117 2 482 2 760 4 863 4 1041 8 585 2 1134 4 486 6 820 2 314 2 279 2 75 6 1050 2 229 2 404 10 1365 2 1152 2 551 2 879 2 1369 2 1319 2 324 2 834 2 920 2 250 2 688 2 425 4 1016 2 1157 2 1113 4 884 2 
1417 2 147 2 1018 2 1019 2 1251 2 98 4 1164 2 1388 2 1284 12 1219 2 969 2 1287 2 974 2 1028 2 345 2 200 2 204 4 977 2 1396 6 704 6 756 2 988 2 1184 2 579 2 1089 2 708 4 1402 2 1129 2 1091 4 1348 8 117 2 482 2 760 4 863 4 1041 8 585 2 1134 4 486 8 763 4 820 2 314 2 279 2 75 8 229 2 1050 2 404 10 1365 2 1152 2 551 2 243 2 879 2 1369 2 324 2 1319 2 834 2 250 2 688 2 425 4 1016 2 1157 2 884 2 1113 4 
204 4 98 2 704 2 834 2 969 2 988 2 579 2 708 2 1129 2 75 2 250 2 688 2 425 2 1028 2 345 2 200 2 1157 2 1113 4 
1417 2 147 2 1018 2 1019 2 1251 2 98 4 258 2 1164 2 1388 2 1284 12 1219 2 969 2 1287 2 974 2 1028 2 345 2 200 2 204 4 1396 6 704 4 756 2 988 2 1184 2 579 2 708 4 1129 2 1091 4 1348 4 117 2 482 2 760 4 863 4 1041 4 585 2 1134 4 486 6 820 2 314 2 279 2 75 6 1050 2 229 2 404 6 1365 2 1152 2 551 2 243 2 879 2 1369 2 1319 2 324 2 834 2 920 2 250 2 688 2 425 4 1016 2 1157 2 1113 4 884 2 
1417 2 147 2 1018 2 1019 2 1251 2 98 4 258 2 1164 2 1388 2 1284 12 1219 2 969 2 1287 2 974 2 1028 2 345 2 200 2 204 4 1396 6 704 6 756 2 988 2 1184 2 579 2 708 4 1129 2 1091 4 1348 4 117 2 482 2 760 4 863 4 1041 4 585 2 1134 4 486 6 1002 2 820 2 314 2 279 2 75 4 1050 2 229 2 404 6 1365 2 1152 2 551 2 879 2 1369 2 1319 2 324 2 834 2 920 2 250 2 688 2 425 4 1016 2 1157 2 1113 4 884 2 
1417 2 147 2 1018 2 1019 2 1251 2 98 4 258 2 1164 2 1388 2 1284 12 1219 2 969 2 1287 2 974 2 1028 2 345 2 200 2 204 4 977 2 1396 6 704 6 756 2 988 2 1184 2 579 2 708 4 1129 2 1091 4 1348 8 117 2 482 2 760 4 863 4 1041 4 585 2 1134 4 486 6 820 2 314 2 279 2 75 6 1050 2 229 2 404 6 1365 2 1152 2 551 2 879 2 1369 2 1319 2 324 2 834 2 920 2 250 2 688 2 425 4 1016 2 1157 2 1113 4 884 2 
1417 2 147 2 1018 2 1019 2 1251 2 98 4 258 2 1164 2 1388 2 1284 12 1219 2 969 2 1287 2 974 2 1028 2 345 2 200 2 204 4 977 2 1396 6 704 8 756 2 988 2 1184 2 579 2 708 4 1129 2 1091 4 1348 8 117 2 482 2 760 4 863 4 1041 8 585 2 1134 4 486 8 1002 2 820 2 314 2 279 2 75 6 1050 2 229 2 404 10 1365 2 1152 2 551 2 879 2 1369 2 1319 2 324 2 834 2 920 2 250 2 688 2 425 4 1016 2 1157 2 1113 4 884 2 
1417 2 147 2 1018 2 1019 2 1251 2 98 4 258 2 1164 2 1388 2 1284 12 1219 2 969 2 1287 2 974 2 1028 2 345 2 200 2 204 4 977 2 1396 6 704 6 756 2 988 2 1184 2 579 2 708 4 1129 2 1091 4 1348 8 117 2 482 2 760 4 863 4 1041 8 585 2 1134 4 486 6 820 2 314 2 279 2 75 6 1050 2 229 2 404 10 1365 2 1152 2 551 2 879 2 1369 2 1319 2 324 2 834 2 920 2 250 2 688 2 425 4 1016 2 1157 2 1113 4 884 2 
927 2 1284 46 1285 2 381 2 196 2 8 4 1287 2 200 2 938 2 13 10 1288 6 204 4 206 2 755 2 1293 2 756 2 20 2 579 2 1129 2 759 6 1301 6 760 8 585 2 1134 6 224 2 588 2 590 2 768 2 229 2 404 2 407 2 411 6 1152 2 600 6 1319 2 415 2 38 2 965 4 250 2 425 4 1157 2 255 2 258 2 794 4 1164 2 969 2 1167 2 611 6 54 2 974 4 55 2 262 1 980 6 1182 2 59 6 1184 4 988 2 1348 2 630 2 996 1 449 2 1002 4 73 8 820 2 279 2 75 4 1006 6 1362 6 640 7 1365 2 459 2 80 4 1369 2 645 2 834 2 1376 2 1212 2 85 6 87 2 88 2 1016 2 1380 2 1019 4 1018 2 98 4 1386 2 100 6 1388 2 1219 2 1024 6 1028 2 107 4 1396 24 856 2 1398 2 478 2 1399 2 308 2 481 6 117 2 672 2 673 4 863 6 482 4 1233 2 486 12 312 2 128 2 314 2 1238 2 869 6 132 2 493 2 1050 2 136 1 1057 2 879 2 324 4 499 2 500 2 688 2 1065 1 884 2 1416 8 1417 2 147 2 690 2 1251 2 1420 2 1074 1 1076 2 894 1 895 2 341 2 155 12 698 6 345 2 518 1 700 2 701 2 901 2 903 1 704 8 527 7 708 4 1091 4 357 1 166 6 711 2 1098 6 539 2 719 2 916 2 543 2 724 4 547 2 551 2 182 6 1113 4 
927 2 1018 2 1019 4 98 4 1386 2 100 6 1388 2 1284 48 1219 2 1285 2 381 2 1024 6 196 2 8 4 1287 2 1028 2 200 2 938 2 107 4 1288 6 13 10 204 4 206 2 1396 26 856 2 755 2 1398 2 478 2 1293 2 1399 2 756 2 20 2 579 2 308 4 1129 2 481 6 1301 6 759 6 117 2 672 2 673 4 1233 2 482 4 760 8 863 6 585 2 1134 6 486 12 224 2 588 2 312 2 128 2 590 2 314 2 1238 2 869 6 768 2 493 2 132 2 1050 2 229 2 404 2 407 2 1057 2 411 6 600 6 1152 2 879 2 415 4 1319 2 324 4 499 2 500 2 38 2 965 4 250 2 688 2 425 4 1157 2 1416 8 884 2 1417 2 255 2 147 2 690 2 1251 2 1420 2 258 2 1164 2 794 8 969 2 1167 2 1076 2 341 2 895 2 1077 2 611 6 54 2 155 12 698 6 974 4 345 2 55 2 700 2 977 4 701 2 980 6 901 2 704 8 58 2 1182 2 59 6 988 2 1184 4 708 4 1091 4 1348 6 166 6 630 2 711 2 1098 6 449 2 539 2 73 8 820 2 279 2 75 8 1006 6 719 2 916 2 1362 6 543 2 459 2 1365 2 724 4 80 4 547 4 181 2 551 2 645 2 1369 2 182 6 834 2 1376 2 85 6 1212 2 88 2 87 2 1016 2 1380 2 1113 4 
927 2 1018 2 1019 4 98 4 1386 2 100 6 1388 2 1284 48 1219 2 1285 2 381 2 1024 6 196 2 8 4 1287 2 1028 2 200 2 938 2 107 4 1288 6 13 10 204 4 206 2 1396 26 856 2 755 2 1398 2 478 2 1293 2 1399 2 756 2 20 2 579 2 308 4 1129 2 481 6 1301 6 759 6 117 2 672 2 673 4 1233 2 482 4 760 8 863 6 1041 4 585 2 1134 6 486 12 224 2 588 2 312 2 128 2 590 2 314 2 1238 2 869 6 768 2 493 2 132 2 1050 2 229 2 404 6 407 2 1057 2 411 6 600 6 1152 2 879 2 415 4 1319 2 324 4 499 2 500 2 38 2 965 4 250 2 688 2 425 4 1157 2 1416 8 884 2 1417 2 255 2 147 2 690 2 1251 2 1420 2 258 2 1164 2 794 8 969 2 1167 2 1076 2 341 2 895 2 1077 2 611 6 54 2 155 12 698 6 974 4 345 2 55 2 700 2 977 4 701 2 980 6 901 2 704 8 58 2 1182 2 59 6 988 2 1184 4 708 4 1091 4 1348 6 166 6 630 2 711 2 1098 6 449 2 539 2 73 8 820 2 279 2 75 8 1006 6 719 2 916 2 1362 6 543 2 459 2 1365 2 724 4 80 4 547 4 181 2 551 2 645 2 1369 2 182 6 834 2 1376 2 85 6 1212 2 88 2 87 2 1016 2 1380 2 1113 4 
927 2 190 2 192 2 1284 52 1285 2 381 2 383 2 196 2 8 4 1287 2 200 2 938 2 1288 12 13 8 204 4 206 2 755 4 1293 4 756 2 20 2 579 2 1129 2 759 6 1301 6 760 8 585 2 1134 6 224 4 1137 6 588 2 590 2 768 2 229 2 595 2 404 6 407 2 598 2 411 6 243 2 1152 2 600 12 1319 2 415 4 38 2 965 4 250 2 425 4 1157 2 255 2 258 2 794 10 1164 2 969 2 1167 2 611 6 54 2 974 4 977 4 980 6 1179 6 620 2 621 6 58 2 1182 2 59 6 1184 4 988 2 991 2 1348 6 630 2 449 2 1002 2 73 8 820 2 279 2 75 10 1006 12 1362 6 639 6 1365 2 459 2 80 6 1369 2 645 2 834 2 1376 2 83 6 837 6 1212 2 85 6 87 2 88 2 1016 2 1380 2 1019 4 1018 2 98 4 1386 4 100 12 1388 2 1219 2 1024 8 1028 2 107 4 1396 24 856 2 1398 2 478 2 1399 2 308 4 481 12 117 2 672 2 673 4 863 6 482 4 1233 2 1041 4 486 16 312 2 676 2 128 2 314 2 1238 2 869 6 132 2 493 2 1050 2 1057 2 879 2 324 4 499 2 500 2 1243 6 688 2 884 2 1416 12 1417 2 1069 6 147 2 690 4 1251 2 1420 2 1076 2 895 2 341 2 1077 2 155 10 698 6 345 2 700 2 701 2 901 2 704 10 708 4 1091 4 166 8 711 2 1098 6 539 2 719 2 916 2 543 2 724 4 547 4 181 2 551 2 182 12 559 6 1113 4 
1134 2 1417 2 486 4 1019 2 98 4 258 2 1388 2 1284 4 969 2 820 2 75 6 1050 2 1287 2 404 4 1028 2 200 2 1365 2 204 2 977 2 551 2 1369 2 704 6 756 2 834 2 708 4 1129 2 1091 2 688 2 1348 6 1016 2 1157 2 760 2 1041 4 884 2 1113 2 
927 2 1019 2 98 4 1386 3 1388 2 1284 28 1024 6 8 4 1287 2 1028 2 200 2 107 2 13 2 204 2 1396 24 856 2 755 3 478 2 1293 3 756 2 1129 2 309 2 117 2 760 2 863 6 585 2 1134 2 486 4 312 2 128 2 314 2 768 2 132 2 1050 2 229 2 404 2 233 2 1240 2 879 2 324 4 1319 2 688 2 1157 2 1416 8 884 2 1417 2 607 2 1251 2 1420 2 258 2 1425 2 969 2 1167 2 611 6 343 2 155 4 55 2 700 2 977 2 981 3 704 6 1184 4 708 4 1091 2 1348 6 166 6 630 2 449 2 539 2 820 2 279 2 75 6 177 2 916 2 543 2 1365 2 724 4 459 2 80 4 551 2 1369 2 834 2 1376 2 82 2 87 2 1016 2 466 2 1380 2 1113 2 
1050 2 1369 2 2 2 
1050 2 1369 2 2 2 
927 2 843 2 1019 4 98 4 1386 2 2 2 1284 24 1285 2 1024 2 8 4 107 6 13 2 204 2 1396 16 856 2 1223 2 478 2 1123 2 307 2 579 2 215 2 114 2 308 4 117 2 672 2 673 2 482 4 863 6 121 2 760 4 585 2 1041 4 1134 4 486 16 1235 2 1309 4 1045 4 312 2 128 2 954 2 314 2 768 2 132 2 229 2 1050 4 404 6 1152 2 243 4 879 2 415 4 324 4 965 2 688 2 425 4 1157 2 1416 2 1417 2 147 2 1251 2 1420 2 510 2 150 2 1164 2 794 4 692 2 49 2 969 4 1167 2 611 6 54 4 155 4 974 2 698 2 1437 2 345 2 700 2 520 2 977 4 704 12 1182 2 528 2 1184 4 708 4 1091 2 1348 6 166 2 630 2 449 2 910 4 539 2 1002 4 820 2 279 2 75 12 1201 2 916 2 543 2 724 4 547 4 1369 6 1376 2 87 2 1380 2 1113 2 
13 2 616 2 206 2 1396 2 274 2 1223 2 1123 2 1085 2 1284 4 528 2 381 2 988 2 965 2 229 2 155 2 698 2 789 2 
927 2 843 2 1019 4 98 4 1386 4 2 2 1284 24 1285 2 1219 2 1024 2 8 4 107 6 204 2 1396 16 856 2 1223 2 478 2 1123 2 1036 2 213 2 307 4 579 2 215 2 114 2 308 4 117 2 672 2 673 2 482 4 760 4 863 6 121 2 585 2 1041 4 1134 4 486 16 1309 4 1045 4 312 2 128 2 954 2 314 2 768 2 132 2 229 2 1050 4 404 6 1152 2 243 4 879 2 415 4 324 4 688 2 425 4 1157 2 1416 2 1417 2 147 2 1251 2 1420 2 510 2 150 2 1164 2 794 4 1427 2 969 4 1167 2 611 6 54 4 155 2 698 2 974 4 1437 2 345 2 439 2 700 2 977 4 704 12 1182 2 528 2 1184 4 708 4 1091 2 1348 6 166 2 630 2 816 2 449 2 910 4 539 2 1002 4 820 2 279 2 75 12 1201 2 916 2 543 2 724 4 547 4 1369 6 1376 2 87 2 1380 2 1113 2 
927 2 843 2 1019 4 98 4 1386 2 2 2 1284 24 1285 2 1219 2 1024 2 8 4 107 6 13 2 204 2 1396 16 856 2 1223 2 478 2 1123 2 19 2 307 2 579 2 215 2 114 2 308 4 117 2 672 2 673 2 482 4 863 6 121 2 760 4 585 2 1041 4 1134 4 486 16 1309 4 1045 4 312 2 128 2 954 2 314 2 768 2 132 2 229 2 1050 4 404 6 1152 2 243 4 879 2 415 4 324 4 965 2 688 2 425 4 1157 2 1415 2 1416 2 1417 2 147 2 1251 2 1420 2 510 2 150 2 1164 2 794 4 969 4 1167 2 437 2 611 6 54 4 155 4 974 4 698 2 1437 2 345 2 700 2 1079 2 977 4 704 12 1182 2 528 2 1184 4 708 4 1091 2 1348 6 1450 2 166 2 630 2 449 2 910 4 539 2 1002 4 820 2 279 2 75 12 1201 2 916 2 543 2 724 4 547 4 1369 6 1376 2 87 2 1380 2 1113 2 
734 10 0 22 736 2 737 2 738 2 1 2 739 2 741 2 4 20 8 6 746 2 747 2 748 2 10 2 750 2 751 2 13 2 752 3 753 2 755 46 18 1 22 2 24 2 758 2 25 2 26 18 762 2 765 2 28 2 29 2 766 6 767 2 768 4 769 162 770 2 30 2 31 318 33 2 35 6 36 2 774 10 775 2 776 3 777 2 37 2 780 22 781 2 39 2 782 2 784 15 786 8 41 2 42 2 790 2 43 86 791 2 792 2 44 2 793 2 46 112 794 298 48 2 50 34 796 2 797 2 51 2 54 18 56 2 803 13 805 2 806 2 808 2 65 16 812 2 68 2 813 38 71 2 817 2 72 2 818 52 819 2 74 86 821 2 823 2 824 4 825 2 828 2 78 3 829 4 79 2 80 12 831 2 833 8 84 2 838 2 87 6 840 14 842 2 91 162 92 4 93 2 95 2 97 2 845 80 848 2 104 2 850 2 851 10 105 2 107 2 853 2 854 6 108 4 855 2 109 2 110 2 862 2 117 2 118 118 863 10 120 2 864 40 122 2 865 2 123 3 866 2 125 2 867 2 128 8 127 2 131 2 132 2 873 2 874 14 876 2 135 2 137 8 878 2 879 2 139 2 140 2 141 2 142 40 145 4 146 2 885 2 886 2 887 2 149 2 148 2 152 2 153 76 151 2 890 14 893 3 895 2 155 10 154 80 156 4 158 2 900 2 159 2 160 2 904 2 162 3 906 3 905 3 908 2 163 2 909 2 166 32 165 2 167 2 169 82 170 14 173 1 172 16 913 2 914 24 911 8 916 6 178 4 180 3 917 2 918 4 919 10 921 14 922 1 923 2 185 2 186 2 187 18 189 2 929 2 930 4 931 4 190 2 191 2 192 4 933 2 193 2 934 2 194 2 935 2 197 3 198 3 937 2 939 2 208 2 210 2 209 2 940 2 211 2 942 2 214 2 216 2 217 2 943 2 219 4 220 2 944 9 222 2 224 46 951 2 225 2 226 2 227 3 228 22 229 2 957 2 958 7 960 2 232 78 961 2 234 2 236 2 235 3 239 2 238 10 244 20 248 2 251 2 252 2 967 2 968 2 254 2 255 22 259 15 970 2 260 22 971 2 973 2 981 2 979 2 982 4 263 2 264 2 985 2 986 3 267 66 991 2 268 2 270 54 271 2 272 2 273 2 994 2 997 2 276 4 998 2 999 2 278 2 279 2 1004 60 1008 6 1009 2 1010 2 285 2 284 14 286 2 287 60 288 2 290 2 1015 2 291 2 294 3 1020 3 296 3 297 2 1024 18 298 2 1023 2 1025 2 1026 2 1027 2 300 60 1029 6 1030 76 1031 2 301 4 1032 6 1035 2 303 2 305 4 1039 2 1040 2 309 2 1042 2 1044 1 312 8 1047 2 314 2 1048 2 1049 2 1051 8 316 2 1052 18 319 1 1053 2 1054 38 321 2 1055 2 1057 2 1056 2 1059 2 322 2 1061 16 323 2 1062 2 324 8 326 2 327 2 329 2 1066 2 331 2 1067 2 332 2 1068 2 333 2 1070 12 1072 2 334 2 335 38 336 2 339 2 1073 2 1075 3 1076 2 343 2 1078 2 344 24 1080 2 346 2 347 2 350 2 1082 2 351 80 1084 2 1086 2 352 2 353 14 354 2 1088 2 356 2 1092 2 1093 36 1094 38 358 3 360 2 1095 4 1099 2 364 1 1100 14 367 2 368 4 1104 2 1107 3 1109 2 1108 2 1110 80 371 3 372 2 1111 3 373 2 375 2 374 80 378 2 1115 2 379 2 380 14 383 2 382 2 384 3 385 2 1120 12 386 2 387 2 388 2 1122 20 1127 2 1125 16 390 2 392 2 1131 2 1132 4 396 2 397 42 1133 12 398 2 1135 2 399 2 1136 2 400 2 1139 2 1140 2 1141 2 401 2 403 2 1145 38 1146 34 1147 2 408 2 410 2 1150 2 412 2 414 2 1153 2 417 3 418 6 419 194 422 20 424 2 1154 40 1155 6 1156 2 1158 2 1159 6 428 2 429 12 430 2 431 38 434 82 435 38 1166 2 1167 2 1165 2 1168 10 438 2 1169 2 1170 2 1171 10 1173 2 1175 2 440 2 1176 2 1177 2 441 4 1178 4 1180 2 442 2 443 3 1183 2 1184 8 1185 2 1187 2 1188 2 1189 2 1192 22 444 2 445 2 446 22 1195 2 1197 4 449 2 1198 2 1199 360 451 2 452 2 1200 10 453 80 454 10 459 2 1203 6 1204 4 1205 2 461 2 460 2 1206 10 462 1 1209 2 1211 8 1212 2 466 2 1213 2 469 2 1214 1 470 132 471 2 1218 2 473 1 475 16 1222 2 1224 3 1225 2 478 2 1227 4 1228 2 480 40 1230 2 1232 2 1234 3 485 3 491 2 1237 10 493 8 1239 2 496 2 497 2 498 22 499 16 500 8 501 2 1244 42 1245 4 504 2 506 2 505 4 1248 4 1250 2 1251 2 1252 2 512 2 1254 2 1255 1 514 42 516 2 515 2 521 18 523 78 1259 2 1261 2 524 2 525 4 526 4 1262 102 1263 2 529 2 531 4 532 2 534 38 1265 4 533 2 537 38 538 2 1266 2 1267 2 1268 2 539 4 1269 2 540 18 541 24 542 3 1274 80 1275 6 543 2 544 2 546 2 1276 120 550 2 1277 2 1278 2 555 2 554 2 1279 2 557 2 561 4 560 2 562 61 563 2 1281 40 1282 188 564 2 1283 3 1284 154 566 2 570 2 569 2 571 2 572 2 1290 8 573 2 1292 4 1291 2 1293 16 575 2 1296 2 1295 2 1297 2 1298 2 578 2 1299 2 1300 2 580 2 581 2 582 2 583 66 584 1 1304 2 585 2 1305 3 1306 2 1307 3 1308 76 1312 2 588 4 590 8 594 2 592 2 593 228 1315 10 1316 2 597 4 598 2 1318 2 599 2 1320 2 1321 2 603 2 1323 2 605 38 606 2 1324 2 1326 38 608 2 609 6 1330 2 1331 2 610 48 1332 3 611 14 1335 2 1334 10 612 2 615 2 1336 2 617 38 1338 26 1339 2 618 6 1342 3 620 2 1343 12 622 4 1345 2 623 2 625 2 1347 2 627 3 626 2 1349 2 630 4 1352 2 1354 80 633 2 1356 2 1357 3 636 2 1358 2 637 2 1363 8 1361 2 1364 2 1367 3 644 2 645 2 1371 2 1372 2 646 172 1374 2 649 6 1378 2 1379 2 651 2 652 60 1381 2 655 2 654 2 1384 2 1385 12 656 3 657 8 1386 110 658 2 660 2 661 3 662 2 1389 2 663 2 1390 2 664 2 1392 32 1395 2 1396 100 667 3 669 2 1400 2 1404 24 674 22 1406 4 676 2 1407 2 1408 2 677 2 678 3 1409 16 1410 2 679 24 1411 2 680 8 682 2 1412 12 685 2 1414 2 1416 126 690 84 1418 2 691 2 1422 2 1424 2 1425 2 1428 2 693 2 1430 8 1433 2 1434 4 1435 2 1436 2 697 2 699 3 700 2 1438 1 702 2 1440 2 1442 6 1444 2 706 2 705 2 1445 4 707 4 1446 40 1451 2 1452 2 1455 3 1454 2 711 2 712 1 713 2 714 2 1456 2 715 2 1457 2 718 2 720 4 722 2 1460 2 723 2 724 6 726 2 725 38 727 4 1462 2 728 2 1463 26 729 1 730 2 1465 4 1466 4 1467 2 1468 1 733 34 
459 2 222 2 1396 2 80 2 224 6 1224 2 755 2 1386 2 1261 2 1293 2 739 2 998 2 1206 4 1284 2 919 2 781 2 1024 2 882 2 838 2 454 2 943 2 166 2 36 2 1416 2 
459 2 222 2 1396 2 80 2 224 6 1224 2 755 2 1386 2 1261 2 1293 2 739 2 998 2 1206 4 1284 2 919 2 781 2 1024 2 882 2 838 2 454 2 943 2 166 2 36 2 1416 2 
459 2 222 2 1396 2 80 2 224 6 1224 2 755 2 1386 2 1261 2 1293 2 739 2 998 2 1206 4 1284 2 919 2 781 2 1024 2 882 2 838 2 454 2 943 2 166 2 36 2 1416 2 
0 4 949 2 1192 4 1216 2 1070 2 429 2 124 4 1386 3 1387 2 1000 2 1284 10 818 2 1359 2 541 6 344 3 613 2 35 2 368 2 1029 4 1008 2 459 2 1396 4 1203 2 618 2 755 3 498 4 703 3 1412 2 1343 2 880 2 780 4 419 2 1262 6 1403 2 530 2 943 2 561 2 1404 3 26 4 1416 2 
0 4 429 2 1070 2 1216 2 1386 2 1387 2 1284 10 851 2 344 2 613 2 1029 4 1396 4 755 2 618 2 703 2 1343 2 1262 6 1403 2 530 2 943 2 1404 2 26 4 949 2 1192 4 124 4 1000 2 818 2 1359 2 541 4 35 2 368 2 459 2 1008 2 961 2 1203 2 498 4 1412 2 880 2 780 4 418 2 419 2 561 2 1416 2 
0 4 429 2 1070 2 1216 2 1386 2 1387 2 1284 10 851 2 344 2 613 2 1029 4 1396 4 755 2 618 2 703 2 1343 2 1262 6 1403 2 530 2 943 2 1404 2 26 4 949 2 1192 4 124 4 1000 2 818 2 1359 2 541 4 35 2 368 2 459 2 1008 2 961 2 1203 2 498 4 1412 2 880 2 780 4 418 2 419 2 561 2 1416 2 
0 4 429 2 1070 2 1216 2 1386 2 1387 2 1284 10 851 2 344 2 613 2 1029 4 1396 4 755 2 618 2 703 2 1343 2 1262 6 1403 2 530 2 943 2 1404 2 26 4 949 2 1192 4 124 4 1000 2 818 2 1359 2 541 4 35 2 368 2 459 2 1008 2 961 2 1203 2 498 4 1412 2 880 2 780 4 418 2 419 2 561 2 1416 2 
0 4 429 2 1070 2 1216 2 1386 2 1387 2 1284 10 851 4 344 2 613 2 1029 4 1396 4 755 2 618 2 703 2 1343 2 1262 6 1403 2 530 2 943 2 1404 2 26 4 949 2 1192 4 124 4 1000 2 818 2 1359 2 541 4 35 2 368 2 459 2 1008 2 961 4 1203 2 498 4 1412 2 880 2 780 4 418 4 419 2 561 2 1416 2 
766 2 398 2 606 2 123 2 1280 2 710 2 
74 2 108 2 123 2 1042 2 1181 2 751 2 555 2 
675 1 447 2 1327 2 1284 10 313 2 279 2 591 2 1119 2 872 1 366 2 134 2 32 2 14 2 1289 2 1396 8 15 2 552 2 182 2 1413 2 1401 2 420 2 860 1 992 2 116 1 925 1 184 2 
359 2 945 2 1384 2 429 6 1070 6 930 2 1284 6 609 4 851 3 516 2 541 16 35 6 368 2 1029 4 1008 6 283 2 961 2 1396 6 680 2 1204 2 1203 6 618 6 325 2 1278 2 1343 6 352 2 418 2 1155 4 1245 2 26 12 
597 2 1396 1 1114 2 0 2 508 2 223 2 1192 2 1071 2 898 7 643 2 498 2 245 2 857 4 1284 1 849 2 972 1 89 2 1453 2 
597 4 1114 2 0 2 508 4 223 2 1192 2 1071 2 898 6 643 2 498 2 245 2 857 4 849 4 89 2 1453 2 
597 8 1396 1 1114 6 0 2 508 8 223 2 1192 2 1071 2 898 10 643 8 498 2 245 2 857 4 1284 1 849 8 972 1 89 2 1453 2 
597 2 0 2 508 2 223 2 1192 2 1071 2 898 2 498 2 245 2 857 2 849 2 89 2 1453 2 
94 4 377 10 472 6 295 4 1021 20 1022 6 1284 150 740 4 567 17 5 6 101 90 474 5 6 2 7 10 299 11 568 6 476 6 195 4 8 112 665 6 852 26 205 84 1396 134 207 2 17 6 1226 38 112 30 1124 18 1126 16 858 10 859 10 393 24 861 2 1303 2 948 4 586 2 311 2 488 6 1236 2 953 16 126 26 1142 2 402 10 768 14 871 8 133 4 773 4 409 6 1148 4 1058 6 410 8 413 36 138 8 416 6 1063 4 966 6 1242 50 40 6 687 2 143 6 883 2 604 6 426 24 689 2 1322 4 507 2 1161 10 256 2 1419 10 45 42 149 8 337 8 1328 6 892 6 694 2 611 248 696 10 801 4 802 6 976 6 897 6 348 1 1439 24 1443 4 60 4 161 16 62 6 1346 6 809 8 1090 4 810 2 67 6 630 14 1353 4 814 4 713 8 995 2 275 8 1196 6 70 18 448 90 539 8 175 24 365 42 1272 124 1007 92 1458 2 916 58 638 8 76 24 457 12 721 4 77 2 724 88 81 24 1106 4 553 4 1373 26 1012 4 1208 8 731 6 1377 2 648 6 841 4 87 58 926 12 467 4 468 12 
1382 2 377 2 1161 2 1215 2 1419 2 1421 6 149 2 891 2 1329 2 1284 46 3 2 567 2 744 2 513 2 474 2 6 2 7 2 8 20 611 45 696 2 1172 2 199 2 802 2 896 2 666 2 1396 44 1081 2 207 2 619 2 899 4 1439 2 576 2 1441 2 1124 2 112 38 1126 4 858 2 161 4 859 2 1229 2 1346 2 269 2 1303 2 630 2 535 2 947 2 631 2 586 2 713 2 1138 2 1196 2 488 2 275 6 489 4 490 2 953 4 539 2 402 2 1313 2 175 2 768 2 871 2 716 2 1272 6 875 2 176 2 916 3 724 20 1058 2 1317 2 410 2 241 2 413 2 964 4 1207 2 1208 4 731 2 1377 2 686 4 836 2 881 2 1014 2 183 2 423 2 604 2 841 2 328 2 87 3 330 2 465 2 426 2 507 2 
377 6 472 4 659 4 846 2 1021 8 847 8 1022 4 1284 78 567 10 744 10 6 2 7 4 476 4 1118 8 568 4 195 4 745 2 8 44 205 24 1396 70 207 2 1226 30 576 2 1124 10 112 14 1126 10 21 2 23 4 1229 10 1303 2 948 4 586 2 488 4 953 10 402 4 768 6 773 4 409 4 596 16 1058 4 410 2 241 10 138 4 413 6 683 2 416 4 1063 2 966 4 1242 8 40 4 687 2 143 4 604 4 1322 4 45 16 1419 4 149 2 1328 4 892 4 611 104 696 4 802 4 976 4 897 4 902 8 60 4 61 2 62 4 161 10 269 2 1090 4 810 2 67 4 630 6 536 4 713 2 995 2 1097 4 1196 4 275 6 277 2 1001 4 539 2 822 16 281 4 365 8 1272 24 282 32 1007 24 916 28 76 8 457 14 721 4 77 2 724 36 830 8 1106 4 647 4 1207 2 1012 4 1208 2 731 4 1377 2 648 4 87 30 926 4 467 4 
377 2 1419 2 295 2 149 2 1021 6 1284 28 567 2 474 2 6 2 299 2 7 2 476 2 8 14 611 40 696 2 802 4 1396 26 207 2 17 2 1226 6 112 14 1124 2 1126 6 161 6 62 2 269 2 861 2 1303 2 630 2 947 2 1353 2 586 2 713 2 311 2 275 4 1196 4 488 4 1236 2 126 10 953 6 539 2 402 2 768 2 1272 8 638 2 916 12 724 14 1058 4 410 2 413 2 1208 2 1063 2 731 4 1377 2 604 4 87 12 926 4 689 2 507 2 
1426 2 

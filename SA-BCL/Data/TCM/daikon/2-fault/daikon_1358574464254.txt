#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (1328,1421) (1328,1421) 668 1327 998 203 601 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 591 547 1055 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfo:isIOASet()Z
jtb.JavaParser:jj_3R_210()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:noDups([I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_180()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_116()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_164()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([D[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:arity()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3_22()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Ppt:Ppt()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_101()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3_17()Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ValueTuple:size()I
daikon.Quant:eq(JJ)Z
jtb.visitor.FormatCommand:getCommand()I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eltsLT([II)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexEqual([I[I)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:intern([D)[D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_88()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_114()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_89()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsScalar()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_75()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_126()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:setnext1()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_86()Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.ArraysMDE:sum([I)I
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.RootNode:RootNode()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_3_12()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2805 | return null
daikon.ProglangType:isArray()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltwiseGT([I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_76()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:slice([III)[I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3_35()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfo:new_ppt()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ModBitTracker:split(I)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:eq(DD)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ModBitTracker:num_vars()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_70()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Node:Node()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_27()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:modulus([I)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaCharStream:readChar()C
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:arity()I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.VarInfo:isDerived()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsGTE([II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice1:num_samples()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_118()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:concat([I[I)[I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissing(I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_5()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3_10()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_4()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParser:jj_3R_62()Z
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_30()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfo:isIOAArray()Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
utilMDE.Intern:intern([J)[J
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_149()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_ntk()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3_15()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ProglangType:baseIsIntegral()Z
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParser:jj_3_36()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_25()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:isIntegral()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_60()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_135()Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3R_109()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3_16()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_102()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:subsetOf([S[S)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1345 2 723 4 1421 2 250 2 1328 2 1108 2 971 2 693 2 909 2 
1037 2 611 6 531 2 733 6 1476 2 1515 2 419 6 581 2 256 2 969 2 456 2 
596 4 414 6 1365 2 1421 2 1078 2 315 4 678 2 406 2 771 6 440 2 1328 2 294 6 1034 6 
208 10 49 4 925 10 660 2 1421 6 975 10 1583 4 259 26 754 16 514 4 926 16 786 2 109 8 1237 6 306 16 1263 10 1493 2 117 28 172 2 961 12 66 4 380 2 885 2 1168 2 802 10 273 8 1018 6 1277 8 1070 8 1328 6 
95 4 794 6 
1139 2 
436 2 1233 2 1131 4 927 4 112 2 593 2 791 4 648 2 1240 4 171 2 266 2 599 2 1085 2 1346 2 797 2 452 2 881 2 603 2 1147 2 939 2 885 2 701 2 182 2 73 2 1155 2 327 2 1421 4 280 2 1425 2 1207 2 1208 2 1006 2 421 2 909 2 1593 2 378 2 1104 2 1065 2 768 2 477 2 863 2 536 2 1328 4 538 2 
208 15 513 4 925 6 994 6 1421 4 996 2 975 15 4 2 1371 4 259 47 754 32 978 6 926 32 786 2 109 6 1237 4 787 8 169 2 306 32 1263 15 671 6 264 4 117 52 1350 4 402 2 961 22 66 2 963 2 244 6 507 4 1482 5 802 15 273 19 1018 4 887 4 126 6 1328 4 98 4 1394 3 
1325 2 1577 2 1207 2 
1084 22 1418 2 378 2 766 2 1077 2 1296 2 1370 2 135 2 1323 10 340 2 409 2 1264 2 1410 2 684 2 
156 2 208 2 925 4 944 2 975 2 107 2 259 4 754 2 260 2 926 2 306 2 1008 2 1263 2 548 2 263 2 117 6 961 2 66 2 552 2 699 2 802 2 273 2 1018 2 
208 4 513 4 961 4 975 4 259 12 514 2 396 2 754 8 978 6 926 8 802 4 222 2 887 4 306 8 126 6 1263 4 117 16 
1280 4 893 4 1581 4 583 2 159 4 1469 2 1079 4 665 2 1027 14 1308 2 1131 4 1207 8 848 2 348 4 1081 62 59 4 168 4 421 4 1085 2 597 2 1318 2 451 2 1536 4 1299 2 1146 2 529 10 339 2 272 2 1325 2 1092 4 578 2 1227 2 1508 2 323 2 537 2 1510 10 1200 4 681 2 1392 2 1577 6 
1139 2 1017 2 707 2 1149 2 153 2 33 2 195 2 500 2 774 2 1136 2 
1282 8 297 4 1397 4 777 4 105 2 394 2 780 2 1489 3 212 3 1488 3 1491 2 1293 2 1292 1 1183 2 502 2 1411 2 1497 2 122 2 695 4 1297 8 318 2 319 2 1194 2 221 2 15 1 800 3 700 2 990 2 1511 4 1512 6 20 2 1095 2 23 2 1419 2 1513 32 512 2 1304 1 616 2 24 2 896 2 617 3 1421 34 900 12 134 2 1000 2 333 2 1430 2 1527 3 516 2 139 3 238 1 424 24 1532 5 141 2 36 12 1317 2 1533 1 427 2 914 1 631 1 1319 2 633 2 41 2 1538 2 432 2 1322 2 915 2 635 2 1115 2 250 2 919 1 1328 32 920 1 1546 2 717 2 1443 2 1229 1 720 2 344 3 157 6 923 2 721 2 1025 2 724 2 1026 4 821 2 1128 2 55 1 1333 2 1558 2 823 2 1560 2 1335 2 1447 2 167 2 1562 2 1337 32 1339 3 60 6 261 1 350 2 1566 2 1452 16 1453 2 1342 2 1239 4 646 2 647 1 445 2 447 3 1140 24 449 2 1571 1 450 2 1349 2 1351 16 1352 3 1148 4 1466 2 1050 1 941 2 1252 2 838 2 187 2 746 2 841 2 751 1 366 16 1158 2 82 2 668 2 1588 2 1589 6 672 2 89 2 1592 2 471 16 858 2 574 2 198 8 1385 2 1068 3 478 2 381 2 577 2 967 2 206 2 868 2 970 1 
803 2 1421 2 
1421 4 976 2 1539 2 
1435 2 
1172 4 1 2 775 30 1176 2 391 4 1177 4 1178 2 393 2 781 4 784 2 5 4 788 2 1180 4 398 2 789 6 1182 6 793 2 8 2 795 60 1186 6 1187 6 10 2 12 4 798 30 14 198 1189 244 1193 6 405 86 16 2 408 8 1198 8 1199 160 410 2 411 4 1201 46 22 94 804 6 805 2 413 2 25 6 26 6 27 224 1206 328 29 6 30 10 1209 2 32 14 420 6 422 112 423 566 1212 336 425 28 1215 2 1213 2 1214 2 426 2 37 6 1216 12 427 2 428 2 1220 2 1222 2 43 8 44 2 1224 6 1225 28 45 2 48 2 819 6 435 2 437 4 54 16 1234 74 1236 4 825 2 1238 4 61 82 827 4 828 2 829 18 62 2 831 12 1241 14 1242 290 448 6 833 2 834 6 835 198 836 14 65 2 67 30 68 16 71 106 453 2 455 32 74 2 1253 68 458 2 839 2 75 2 840 4 76 4 77 4 460 6 1256 26 1257 2 1258 198 78 2 79 26 80 26 464 2 463 2 81 2 847 2 465 10 83 2 466 4 849 6 850 2 1259 2 1262 28 853 4 87 2 854 2 1266 4 472 26 1269 16 1270 16 857 2 1272 14 474 198 859 2 860 328 864 6 866 2 1275 2 481 48 482 4 1278 8 484 2 485 30 97 6 493 2 102 2 1285 4 495 60 106 2 875 2 497 2 111 4 1289 4 1290 4 877 2 113 4 114 2 1291 2 878 2 1294 14 501 30 115 4 116 22 120 10 503 4 1298 6 879 2 880 4 884 2 505 14 506 2 1303 2 888 26 128 10 889 192 890 6 891 386 1305 6 132 60 1307 6 899 2 1310 6 137 4 138 2 904 2 907 4 518 6 908 8 1314 46 143 66 144 12 519 8 911 2 522 2 145 4 1316 2 148 6 149 10 525 4 527 4 528 6 1324 2 533 6 151 6 152 2 917 2 1326 4 1328 10 1329 2 1331 6 1332 198 161 2 163 2 1334 6 1336 12 928 18 931 4 1340 2 551 4 935 244 936 2 174 4 1348 6 938 2 177 20 178 2 554 4 1354 2 1355 2 181 106 1357 2 1356 2 1358 46 557 2 942 2 1359 20 183 198 184 2 186 6 561 6 190 4 191 2 566 4 948 4 951 8 954 2 1381 2 1383 6 1386 2 959 8 575 2 964 8 965 14 202 2 1388 4 966 12 204 2 582 6 1393 2 209 4 210 2 584 4 1399 4 1401 4 1402 2 213 4 979 12 1406 2 980 2 1407 2 594 2 981 4 214 12 1412 6 983 8 598 2 216 2 985 30 986 30 219 2 1415 6 989 4 606 2 991 6 608 6 225 2 227 4 613 20 1421 10 1423 6 1422 2 995 182 1424 2 231 2 1426 198 232 4 622 2 1004 22 235 92 1005 2 626 2 1009 2 1010 2 239 2 240 2 241 4 242 2 630 2 1015 22 1019 2 1020 4 636 4 1440 4 1024 198 252 6 254 2 253 64 1444 2 639 6 258 70 641 2 1446 6 1448 2 1449 8 262 20 1033 6 1035 192 265 2 1459 30 649 2 1460 2 1038 46 1041 6 268 2 1042 112 650 118 269 2 1044 60 651 4 1461 8 1045 2 1048 182 1049 20 274 2 275 204 656 4 1467 244 277 2 1468 6 658 26 659 28 279 2 1470 8 1471 2 1054 6 282 2 669 2 283 48 1058 6 1477 4 1479 6 1067 4 288 2 1069 2 1481 24 1072 2 1484 2 682 2 296 2 1074 12 1486 4 686 8 1076 2 1487 6 687 12 689 4 301 2 1080 8 690 2 303 2 305 8 1082 12 1492 4 691 64 1498 2 1499 4 696 2 697 2 313 30 1503 6 1501 54 1504 2 698 12 1505 2 1091 50 1093 2 324 2 1506 88 1507 2 326 8 1096 2 704 4 1514 4 1099 4 328 10 706 432 1520 6 1521 2 1525 6 1523 2 331 4 1524 2 1101 2 708 2 1528 2 334 6 335 8 1529 6 336 2 1534 20 1105 2 1535 2 1107 20 1537 6 1540 140 714 30 1111 6 1113 22 1542 30 1114 432 715 2 1545 376 1117 6 341 6 343 2 1120 52 1122 12 722 2 1121 26 1552 2 1551 2 1126 18 1125 2 1127 132 1555 2 1129 112 1130 46 347 24 728 2 729 2 349 84 1134 2 730 2 351 98 731 2 353 6 1135 4 732 132 1568 2 734 2 1141 6 735 2 1572 2 356 26 738 26 357 6 1574 2 1150 26 362 2 1576 4 744 6 745 4 1156 4 749 4 1582 2 365 6 752 4 369 28 1586 2 753 2 755 112 372 2 1160 2 758 4 1162 2 761 228 762 2 375 4 764 20 1166 2 1597 2 767 6 379 2 382 6 385 4 1170 2 1602 2 387 204 1171 26 1603 6 388 2 
1473 2 1133 2 1434 2 205 1 
1133 2 1364 2 
146 2 1133 2 49 2 600 2 1474 2 1207 2 1436 2 
1133 2 1526 2 1474 2 
1133 2 1474 2 570 2 
1473 2 615 2 1119 2 
1133 2 1474 2 
1014 2 1119 2 
1133 2 468 2 
1473 2 1442 2 1119 2 
727 2 1473 2 962 2 
1473 2 1284 2 1088 2 
1473 2 826 2 1563 2 
1473 2 1247 2 1161 2 
299 2 1119 2 
1133 2 568 2 
727 2 1420 2 
1284 2 1409 2 
826 2 475 2 
1161 2 70 2 
521 2 1119 2 
1161 2 873 2 
826 2 897 2 
820 2 1284 2 
727 2 1462 2 
1473 2 1442 2 224 2 1119 2 
1473 2 685 2 1442 2 224 2 1119 2 
1473 2 1260 2 1119 2 
1473 2 246 2 1119 2 
1413 2 52 2 58 2 933 2 
1084 6 1315 2 1496 2 189 2 543 4 229 2 1016 2 359 2 1196 2 345 4 1169 2 1030 2 292 2 136 2 96 2 1601 2 950 2 1118 2 
1473 2 1516 2 
1001 2 600 2 150 2 1207 2 
1001 2 146 2 600 2 312 2 150 2 1207 2 
1133 2 49 2 600 2 688 2 1474 2 1207 2 
599 2 57 2 
49 2 600 2 490 2 1207 2 
826 2 664 2 
1161 2 955 2 
727 2 194 2 
1284 2 1578 2 
1161 2 1284 2 1191 2 
1161 2 1284 2 974 2 
1161 2 193 2 1284 2 
1161 2 1284 2 488 2 
1207 2 370 2 1181 6 1036 2 600 2 673 2 799 2 679 6 
13 2 1119 2 
1447 2 
297 4 1282 2 1397 4 777 2 780 2 1404 2 1491 2 307 2 1293 2 1411 6 1194 2 1511 2 1512 4 23 2 1202 2 1419 2 1513 4 512 2 896 2 1421 26 134 2 900 8 1000 2 333 2 709 2 516 2 238 2 36 8 1012 2 427 2 432 2 1322 2 1226 2 250 2 1328 26 47 2 1546 2 717 2 157 6 721 2 923 2 821 2 1026 4 1128 2 1560 2 1335 2 1562 2 167 2 1337 6 60 2 261 2 1452 6 1239 2 1342 4 550 2 267 4 450 2 1148 4 1252 2 187 2 747 2 1255 4 751 4 1053 2 1158 2 1587 2 668 2 1589 2 672 2 763 2 572 2 858 2 199 2 861 2 1598 2 381 2 
101 2 297 4 1282 2 1397 4 777 2 780 2 1404 2 1491 2 307 2 1293 2 1411 6 1194 2 321 2 1511 2 1512 6 23 2 1419 2 1513 4 512 2 896 2 1421 26 134 2 900 8 999 2 1000 2 333 2 709 2 516 2 238 2 36 8 1012 2 427 2 1319 2 432 2 1322 2 1226 2 250 2 1328 26 47 2 1546 2 717 2 157 6 721 2 923 2 821 2 1026 4 1128 2 1560 2 1335 2 1562 2 167 2 1337 6 60 2 261 2 1452 6 1239 2 1342 4 550 2 267 4 450 2 1349 2 1148 4 1466 2 1252 2 187 2 747 2 1255 4 751 2 1053 2 1158 2 1587 2 668 2 1589 2 672 2 763 2 572 2 858 2 861 2 381 2 
164 2 
808 2 192 2 
1268 2 1037 2 412 2 733 2 1273 2 1167 2 725 2 666 4 822 2 531 2 1490 2 419 2 249 2 439 4 88 2 1116 2 1279 2 694 2 
157 4 721 2 158 2 1174 2 256 2 542 2 1026 2 725 2 1128 2 822 2 1490 2 1338 2 439 4 692 2 694 2 1037 4 1184 2 733 6 450 2 1148 2 407 2 1090 4 1573 4 1575 2 1094 2 456 2 226 4 412 2 611 6 459 2 894 6 1421 12 666 4 134 2 811 2 419 4 1102 2 1061 2 88 2 672 2 35 2 813 2 1268 2 765 2 473 2 427 2 858 2 1273 2 712 4 1167 2 430 2 431 2 1387 4 247 2 531 4 1110 2 249 4 1328 6 1116 2 1279 2 
157 4 721 2 158 2 1174 2 256 2 542 2 1026 2 725 2 1128 2 822 2 1490 2 1338 2 439 4 692 2 694 2 1037 4 1184 2 733 4 450 2 1148 2 407 2 1090 4 1573 4 1575 2 1094 2 226 4 412 2 611 6 459 2 894 6 1515 2 1421 12 666 4 134 2 811 2 419 6 1102 2 1061 2 88 2 672 2 35 2 813 2 1268 2 765 2 473 2 427 2 858 2 1273 2 712 4 1167 2 430 2 431 2 1387 4 247 2 531 4 1110 2 249 4 1328 6 1116 2 1279 2 
157 4 721 2 158 2 1174 2 256 2 542 2 1026 2 725 2 1128 2 822 2 1490 2 1338 2 439 4 692 2 694 2 1037 4 1184 2 733 6 450 2 1148 2 407 2 1090 4 1573 4 1575 2 1094 2 226 8 412 2 611 6 459 2 894 6 1421 12 666 4 134 2 811 2 419 6 1102 2 1061 2 88 2 672 2 35 2 813 2 1268 2 765 2 473 2 427 2 1476 2 858 2 1273 2 712 4 1167 2 430 2 431 2 1387 4 247 2 531 4 1110 2 249 4 1328 6 1116 2 1279 2 
157 4 721 2 158 2 1174 2 256 2 542 2 1026 2 725 2 1128 2 822 2 1490 2 1338 2 439 4 692 2 694 2 1037 4 1184 2 733 6 450 2 1148 2 407 2 1090 4 1573 4 1575 2 1094 2 226 8 412 2 611 8 459 2 894 10 1515 2 1421 12 666 4 134 2 811 2 419 8 1102 2 1061 2 88 2 672 2 35 2 813 2 1268 2 765 2 473 2 427 2 1476 2 858 2 1273 2 712 4 1167 2 430 2 431 2 1387 8 247 2 531 4 1110 2 249 4 1328 6 1116 2 1279 2 
157 4 721 2 158 2 1174 2 256 2 542 2 1026 2 725 2 1128 2 822 2 1490 2 1338 2 439 4 692 2 694 2 1037 4 1184 2 733 6 450 2 1148 2 407 2 1090 4 1573 4 1575 2 1094 2 226 8 412 2 611 6 459 2 894 10 1421 12 666 4 134 2 811 2 419 6 1102 2 1061 2 88 2 672 2 35 2 813 2 1268 2 765 2 473 2 427 2 1476 2 858 2 1273 2 712 4 1167 2 430 2 431 2 1387 8 247 2 531 4 1110 2 249 4 1328 6 1116 2 1279 2 
1397 4 777 2 1174 2 780 2 976 6 1405 2 1411 6 1184 2 401 2 1194 2 801 6 803 6 407 2 1197 7 223 2 226 2 611 12 412 2 1419 2 1421 46 618 6 997 1 28 6 416 2 621 2 1427 6 419 8 811 2 1431 2 237 1 35 2 813 2 36 4 427 2 1435 6 431 2 430 2 432 2 247 2 1226 2 249 4 250 2 46 2 47 2 50 2 51 6 256 4 1026 4 821 2 257 2 822 2 56 2 643 2 60 2 439 4 1452 6 1239 2 1037 4 450 2 652 6 654 2 1252 2 459 2 657 6 278 2 1255 4 661 2 666 4 668 2 670 1 1061 2 88 2 672 2 1268 2 473 2 858 2 1273 2 289 6 861 4 291 2 486 1 487 2 680 2 1279 2 100 2 297 4 1282 2 104 2 1490 2 876 1 692 4 694 2 1086 2 1500 2 1087 6 883 2 1089 2 1301 2 886 1 1090 6 1509 10 1511 2 1512 6 1094 2 1097 1 1513 2 512 2 1515 4 894 2 896 2 1517 4 134 2 900 4 1102 2 523 2 1319 2 712 4 338 2 1322 12 531 4 532 4 1110 2 535 6 154 2 1328 24 1116 2 717 2 718 2 157 6 721 2 158 2 1128 2 725 2 1335 2 1562 2 1337 8 1338 2 1569 2 733 4 175 1 1349 2 1148 4 1573 8 1575 2 1151 7 1153 2 743 6 185 2 187 2 747 2 1366 2 367 6 1158 2 1589 2 765 4 1167 2 381 2 384 8 386 1 972 6 
1282 2 297 4 1397 4 777 4 1174 2 104 2 976 6 780 2 1405 2 1490 2 692 4 1495 2 1411 6 694 2 1184 2 1086 2 1500 2 1087 6 401 2 1194 2 883 2 1089 2 1301 2 801 6 803 6 1090 6 407 2 223 2 1509 10 1511 4 1094 2 1512 6 226 6 412 2 611 12 1513 2 1419 2 512 2 894 2 896 2 1517 4 1421 48 618 6 28 6 621 2 416 2 900 8 134 2 1427 6 811 2 419 8 1431 2 1102 2 35 2 813 2 36 8 427 2 523 2 1435 6 712 4 1319 2 430 2 431 2 338 2 1322 12 432 2 247 2 532 4 531 4 1110 2 535 6 249 4 1226 2 46 2 250 2 154 2 47 2 1328 26 1116 2 717 2 718 2 50 2 157 6 721 2 158 2 51 6 256 4 257 2 821 2 1026 4 725 2 1128 2 822 2 1335 2 56 2 643 2 1562 2 1337 8 60 2 1338 2 1452 6 439 4 1342 2 1239 4 1569 2 1037 4 733 8 450 2 1349 2 652 6 1148 4 654 2 1573 8 1575 2 1252 2 1153 2 185 2 743 6 187 2 657 6 459 2 278 2 747 2 1366 2 661 2 1255 4 367 6 666 4 1158 2 668 2 1057 2 1589 2 1061 2 88 2 672 2 1268 2 765 4 473 2 1476 4 858 2 1273 2 289 6 1167 2 861 4 291 2 381 2 384 8 487 2 680 2 1279 2 100 2 972 6 
1282 2 297 4 1397 4 777 4 1174 2 104 2 976 6 780 2 1405 2 1490 2 692 4 1495 2 1411 6 694 2 1184 2 1086 2 1500 2 1087 6 401 2 1194 2 883 2 1089 2 1301 2 801 6 803 6 1090 6 407 2 223 2 1509 10 1511 4 1094 2 1512 6 226 6 412 2 611 12 1513 2 1419 2 512 2 894 6 896 2 1517 4 1421 48 618 6 28 6 621 2 416 2 900 8 134 2 1427 6 811 2 419 8 1431 2 1102 2 35 2 813 2 36 8 427 2 523 2 1435 6 712 4 1319 2 430 2 431 2 338 2 1322 12 432 2 247 2 532 4 531 4 1110 2 535 6 249 4 1226 2 46 2 250 2 154 2 47 2 1328 26 1116 2 717 2 718 2 50 2 157 6 721 2 158 2 51 6 256 4 257 2 821 2 1026 4 725 2 1128 2 822 2 1335 2 56 2 643 2 1562 2 1337 8 60 2 1338 2 1452 6 439 4 1342 2 1239 4 1569 2 1037 4 733 8 450 2 1349 2 652 6 1148 4 654 2 1573 8 1575 2 1252 2 1153 2 185 2 743 6 187 2 657 6 459 2 278 2 747 2 1366 2 661 2 1255 4 367 6 666 4 1158 2 668 2 1057 2 1589 2 1061 2 88 2 672 2 1268 2 765 4 473 2 1476 4 858 2 1273 2 289 6 1167 2 861 4 291 2 1387 4 381 2 384 8 487 2 680 2 1279 2 100 2 972 6 
1397 4 777 4 1174 2 780 2 976 12 1405 2 1411 8 1184 2 401 2 1194 2 801 6 803 12 407 2 223 2 609 6 226 6 611 16 412 2 1419 2 1421 52 618 6 28 6 621 2 416 2 809 6 1427 6 811 2 419 10 1431 2 35 2 813 2 36 10 427 2 1435 12 431 2 430 2 432 2 247 2 1226 2 249 4 250 2 46 2 47 4 50 2 51 12 256 4 1026 4 821 2 257 2 1029 6 822 2 56 2 643 2 60 4 439 4 1452 8 1239 4 1037 4 450 2 1046 2 652 6 1463 2 654 2 1252 2 456 2 459 2 657 6 278 2 1255 6 661 2 666 4 668 2 1057 2 1061 2 88 2 672 2 1268 2 1476 4 473 2 858 2 1273 2 289 6 861 4 291 2 487 2 680 2 1279 2 100 2 297 4 1282 4 104 2 874 2 1490 2 692 4 1495 2 694 2 1086 2 1500 2 1087 6 316 6 883 2 1301 2 1090 6 127 6 1509 8 1511 4 1512 6 1094 2 1513 4 512 2 705 6 894 6 1515 2 896 2 1517 4 134 2 900 10 1102 2 523 2 1319 2 712 4 338 2 1322 10 531 4 532 4 1110 2 916 6 535 6 154 2 1328 24 1116 2 717 2 718 2 157 6 721 2 158 2 1128 2 725 2 1335 2 1562 2 1337 12 1338 2 1342 2 1569 2 733 10 1349 2 1148 4 1353 6 741 2 1573 8 1575 2 1153 2 743 6 185 2 187 2 747 2 1366 2 367 12 1158 2 757 2 1375 6 1589 4 953 2 765 4 1167 2 769 2 1387 4 381 2 1599 2 384 8 972 12 
226 6 611 4 459 2 894 4 1174 2 1421 4 256 2 725 2 666 2 822 2 1338 2 1490 2 419 6 439 2 1061 2 88 2 1184 2 1268 2 1037 4 733 6 1476 2 1273 2 712 2 430 2 431 2 1387 4 247 2 531 4 1110 2 1090 2 407 2 1573 2 1575 2 1116 2 1094 2 
297 4 1397 4 1174 2 780 2 1490 2 1411 6 1184 2 1194 2 1089 2 1090 2 407 2 125 3 1509 2 1094 2 1512 6 226 6 611 4 1419 2 1513 3 512 2 894 2 896 2 1421 28 134 2 419 6 813 2 427 2 712 2 1319 2 431 2 430 2 432 2 1322 4 247 2 531 4 1110 2 1226 2 250 2 1328 24 1116 2 717 2 157 6 721 2 256 2 1026 4 821 2 1128 2 725 2 822 2 1447 2 1335 2 1562 2 1337 8 1338 2 60 3 439 2 1452 6 1037 4 1343 2 733 6 450 2 1349 2 1148 4 1573 2 1575 2 1252 2 1251 2 187 2 1363 2 459 2 747 2 841 2 1255 4 666 2 668 2 1588 2 1589 3 1061 2 374 2 88 2 672 2 1268 2 1476 2 858 2 1273 2 861 2 381 2 1389 2 206 2 
157 4 721 2 158 2 1174 2 256 2 542 2 1026 2 725 2 1128 2 822 2 1490 2 1338 2 439 4 692 2 694 2 1037 4 1184 2 733 6 450 2 1148 2 407 2 1090 4 1573 4 1575 2 1094 2 226 8 412 2 611 6 459 2 894 10 1421 12 666 4 134 2 811 2 419 6 1102 2 1061 2 88 2 672 2 35 2 813 2 1268 2 765 2 473 2 427 2 1476 2 858 2 1273 2 712 4 1167 2 430 2 431 2 1387 8 247 2 531 4 1110 2 249 4 1328 6 1116 2 1279 2 
157 4 721 2 158 2 1174 2 256 2 1026 2 725 2 1128 2 822 2 1490 2 439 4 692 2 694 2 1184 2 1037 4 733 8 450 2 1148 2 407 2 1090 4 1573 4 1575 2 1094 2 456 2 560 4 226 8 412 2 611 8 459 2 894 10 1421 12 666 4 134 2 371 2 811 2 419 6 1102 2 1061 2 88 2 672 2 35 2 813 2 1268 2 765 2 473 2 427 2 1476 2 858 2 1273 2 712 4 1167 2 430 2 431 2 1387 8 247 2 531 4 1110 2 249 4 1328 6 1116 2 1279 2 99 2 
407 2 614 2 1094 2 
407 2 614 2 1094 2 
297 4 1397 4 777 4 1174 2 780 2 692 2 1083 2 1411 2 694 2 119 2 1086 2 1194 2 801 2 1090 4 407 6 1509 2 1511 4 1512 6 1094 4 226 6 412 2 611 16 1419 2 1513 2 512 2 614 2 894 6 1515 4 896 2 1517 2 1421 24 900 4 134 2 811 2 419 12 35 2 36 4 814 2 427 2 1319 2 712 2 432 2 1322 4 532 2 531 4 1223 2 433 2 1543 2 249 4 1226 2 250 2 1328 16 1116 2 717 2 718 2 157 6 721 2 256 4 257 2 821 2 1026 4 1128 2 640 2 822 4 1335 2 1562 2 1337 2 1451 2 1452 2 439 2 1239 4 1037 4 733 12 63 2 450 2 737 2 1349 2 1148 4 361 4 1573 4 1575 2 1252 2 456 4 1361 2 187 2 747 2 364 2 1052 2 751 2 666 2 1158 4 1590 2 672 2 956 4 765 4 473 2 572 4 1476 4 573 2 858 2 1273 2 960 2 861 6 1387 4 381 2 867 2 
400 2 1382 2 119 2 573 2 1517 2 1421 4 737 2 808 2 1322 2 134 2 1301 2 801 2 223 2 790 2 1509 2 1328 2 1279 2 
297 4 1397 4 777 4 1174 2 780 2 692 4 1083 4 1411 2 694 2 119 2 1086 2 1194 2 801 2 1090 4 407 6 1511 4 1512 6 1094 4 226 6 412 2 611 16 1419 2 1513 4 512 2 614 2 894 6 1515 4 896 2 1421 24 900 4 134 2 811 2 419 12 35 2 36 4 814 2 427 2 1106 2 712 2 1319 2 432 2 1322 2 532 2 531 4 1223 2 433 2 249 4 1226 2 250 2 1328 16 1116 2 717 2 718 2 1330 2 157 6 721 2 158 2 256 4 257 2 821 2 1026 4 1128 2 1445 2 822 4 1335 2 1562 2 1337 2 1451 2 1452 2 439 2 1239 4 1454 2 1037 4 733 12 63 2 450 2 737 2 1349 2 1148 4 361 4 1573 4 1575 2 1252 2 456 4 187 2 747 2 364 2 1052 2 666 2 1158 4 672 2 956 4 765 4 473 2 572 4 1476 4 573 2 1384 2 858 2 1273 2 960 2 861 6 1387 4 381 2 867 2 
297 4 1397 4 777 4 1174 2 585 2 780 2 692 4 1083 2 1411 2 694 2 119 2 1086 2 1194 2 801 2 1090 4 407 6 1509 2 1511 4 1512 6 1094 4 226 6 412 2 611 16 1419 2 1513 2 512 2 614 2 894 6 1515 4 896 2 1517 2 1421 24 900 4 134 2 1003 2 811 2 419 12 35 2 36 4 814 2 427 2 1319 2 712 2 432 2 1322 4 532 2 531 4 1223 2 433 2 249 4 1226 2 250 2 1328 16 1116 2 717 2 718 2 157 6 721 2 158 2 541 2 256 4 257 2 821 2 1026 4 1128 2 822 4 1335 2 1562 2 1337 2 1451 2 1452 2 439 2 1239 4 1037 4 733 12 63 2 450 2 737 2 1349 2 1148 4 361 4 1573 4 1249 2 1575 2 1252 2 456 4 187 2 747 2 364 2 1052 2 751 1 666 2 1158 4 946 2 672 2 956 4 765 4 473 2 572 4 1476 4 573 2 858 2 1273 2 960 2 861 6 1387 4 381 2 867 2 
0 2 1173 2 389 2 2 1 390 2 776 24 3 2 1175 24 780 2 4 4 779 2 1179 1 783 2 785 1 397 3 399 2 6 2 7 28 1185 2 796 48 1188 10 11 20 401 2 402 2 1192 2 1194 2 1195 2 802 4 17 2 18 24 19 2 21 2 1203 24 415 48 807 4 1204 2 1205 24 416 2 810 4 31 2 1210 1 1211 2 34 10 812 24 36 66 427 2 39 2 1219 2 429 10 42 2 432 4 816 6 434 4 815 10 47 46 818 2 50 4 1231 2 53 2 821 2 1232 3 1235 14 824 2 1237 4 60 16 442 2 443 2 444 2 1243 2 1244 2 1246 2 450 2 837 8 69 14 72 2 454 2 1252 2 1251 2 1254 6 843 14 461 14 1255 12 462 1 844 2 845 16 846 14 85 8 467 2 1261 24 851 6 86 2 852 2 1263 4 1265 2 469 2 470 2 1267 4 855 48 471 28 856 10 90 2 858 2 1274 2 91 2 861 2 862 30 865 16 479 4 1276 2 93 26 92 24 483 2 491 6 869 170 870 5 871 2 1282 32 1280 2 1283 2 103 2 104 2 494 2 874 2 1286 3 496 2 108 2 109 6 1288 2 1295 90 117 16 118 2 121 2 504 12 1300 2 123 2 124 2 1302 12 126 6 125 2 508 2 509 10 510 2 129 30 130 22 131 2 511 2 512 2 513 4 896 28 895 2 898 2 134 2 900 67 903 48 906 2 1312 24 1313 14 142 2 912 2 913 2 523 2 524 2 147 2 1319 98 1320 28 1321 2 526 2 1322 2 530 2 1327 2 1328 300 921 2 540 12 922 14 157 6 160 2 159 2 544 10 162 24 1335 2 165 1 926 8 166 2 1337 52 929 2 930 2 1341 2 932 2 170 24 550 2 1343 2 1344 24 173 2 934 3 1347 2 937 2 1349 98 179 2 180 4 940 24 556 2 1360 50 559 4 1362 2 187 2 562 2 945 4 563 1 1368 2 1372 16 564 2 1373 2 1374 2 565 2 567 10 947 2 949 2 1376 2 1379 2 1378 12 1377 2 952 2 1380 22 953 2 961 6 200 24 201 2 203 2 579 24 580 4 1389 2 1390 2 1391 12 207 2 208 4 1397 128 973 2 1398 2 975 4 1400 4 586 2 587 2 211 14 1403 48 590 4 589 2 1404 2 1408 2 1411 14 595 2 215 24 984 14 601 2 218 2 602 2 604 2 605 2 1416 24 607 2 992 20 1417 4 993 2 612 2 1419 2 228 2 1421 380 998 2 620 24 1002 20 1428 2 623 14 1429 2 624 24 625 2 234 3 1431 2 1007 24 236 2 238 2 1433 2 628 2 629 24 1012 2 1013 2 243 10 1438 2 248 14 1021 4 250 4 1023 26 1441 24 255 2 1026 4 259 12 642 2 1450 2 261 2 644 2 1452 14 645 2 1455 48 1457 4 1456 14 1039 1 1040 16 1046 2 1047 4 653 10 271 3 270 3 1464 2 273 4 1465 24 655 3 276 3 281 6 663 24 1053 2 668 2 1059 2 672 2 1063 4 285 2 1475 2 1066 48 287 2 290 4 674 10 675 2 676 2 677 2 293 24 1071 2 1073 2 1485 2 683 2 297 152 1075 2 1079 2 302 8 306 8 307 26 1494 4 308 14 309 2 310 4 311 2 1500 2 314 2 1502 2 1092 2 702 11 322 10 1512 348 703 20 1513 38 329 10 1100 2 1522 28 709 2 710 4 1536 2 1109 2 338 2 713 2 1112 3 1541 25 717 2 716 16 1549 8 1548 8 1547 10 719 2 1550 24 721 2 1553 2 1124 2 1556 1 1557 4 1554 2 1128 2 726 24 1559 14 1132 2 346 2 1561 2 1562 28 352 2 1569 2 1570 2 1138 2 1137 24 1142 48 1144 22 1145 37 1148 4 739 2 360 48 740 2 741 4 363 2 1152 30 1579 2 1580 1 747 2 748 2 366 12 1158 6 1584 26 1585 4 1587 2 1159 2 754 8 373 10 757 2 1163 2 1589 38 374 2 759 2 1165 24 1591 4 763 2 1594 28 377 10 376 14 1595 2 1596 10 769 2 381 4 772 2 1599 2 383 24 773 4 
1513 2 1421 2 1255 2 329 2 668 2 84 2 1337 2 60 2 1589 2 1452 2 1411 2 1433 2 628 2 595 2 1570 2 218 2 674 4 739 2 653 2 270 2 483 2 1328 2 47 6 21 2 
1513 2 1421 2 1255 2 329 2 668 2 84 2 1337 2 60 2 1589 2 1452 2 1411 2 1433 2 628 2 595 2 1570 2 218 2 674 4 739 2 653 2 270 2 483 2 1328 2 47 6 21 2 
1513 2 1421 2 1255 2 329 2 668 2 84 2 1337 2 60 2 1589 2 1452 2 1411 2 1433 2 628 2 595 2 1570 2 218 2 674 4 739 2 653 2 270 2 483 2 1328 2 47 6 21 2 
703 4 637 2 208 2 1513 3 924 4 842 2 1421 10 662 2 366 2 975 2 133 2 259 4 1002 4 417 2 668 2 754 2 926 2 109 4 1337 2 1237 2 306 2 1589 3 284 2 1263 2 1062 2 1378 2 1295 6 117 5 1380 3 628 2 520 2 471 2 11 4 1013 2 1144 3 1043 3 1190 2 802 2 1328 4 992 4 
703 4 637 2 208 2 1513 2 924 4 842 2 1421 10 662 2 366 2 975 2 133 2 259 4 1002 4 417 2 668 2 754 2 926 2 786 2 109 4 1337 2 1237 2 306 2 1589 2 284 2 1263 2 1062 2 1378 2 1295 6 117 4 1380 2 628 2 520 2 471 2 11 4 1013 2 1144 2 1043 2 961 2 1190 2 802 2 273 2 1328 4 992 4 
703 4 637 2 208 2 1513 2 924 4 842 2 1421 10 662 2 366 2 975 2 133 2 259 4 1002 4 417 2 668 2 754 2 926 2 786 2 109 4 1337 2 1237 2 306 2 1589 2 284 2 1263 2 1062 2 1378 2 1295 6 117 4 1380 2 628 2 520 2 471 2 11 4 1013 2 1144 2 1043 2 961 2 1190 2 802 2 273 2 1328 4 992 4 
703 4 637 2 208 2 1513 2 924 4 842 2 1421 10 662 2 366 2 975 2 133 2 259 4 1002 4 417 2 668 2 754 2 926 2 786 2 109 4 1337 2 1237 2 306 2 1589 2 284 2 1263 2 1062 2 1378 2 1295 6 117 4 1380 2 628 2 520 2 471 2 11 4 1013 2 1144 2 1043 2 961 2 1190 2 802 2 273 2 1328 4 992 4 
703 4 637 2 208 2 1513 2 924 4 842 2 1421 10 662 2 366 2 975 2 133 2 259 4 1002 4 417 2 668 2 754 2 926 2 786 4 109 4 1337 2 1237 2 306 2 1589 2 284 2 1263 2 1062 2 1378 2 1295 6 117 4 1380 2 628 2 520 2 471 2 11 4 1013 2 1144 2 1043 2 961 4 1190 2 802 2 273 4 1328 4 992 4 
1429 2 1217 2 1031 2 968 2 1103 2 782 2 
1309 2 918 2 905 2 1031 2 307 2 882 2 588 2 
892 2 1281 2 188 2 1051 2 51 2 1421 10 1469 1 667 2 1056 2 515 2 1564 2 1458 2 1478 2 1271 2 1218 2 1245 2 450 2 480 1 534 2 988 2 1248 1 1544 1 1328 8 558 2 1392 1 610 2 
208 6 298 2 513 2 1421 6 975 6 259 12 754 6 926 6 31 2 1374 2 109 4 786 2 787 2 1237 2 306 6 1263 6 648 2 171 2 117 16 910 2 1457 2 64 2 1350 2 961 5 1482 4 802 6 273 2 742 2 126 4 1328 6 
703 2 11 2 1157 2 476 2 632 2 317 2 987 2 404 2 553 2 418 2 155 2 992 2 1063 2 
982 2 703 2 11 2 1157 2 1421 1 476 2 632 2 317 2 987 2 404 6 553 4 418 2 110 1 1328 1 155 2 760 2 1063 2 992 2 
982 2 703 2 11 2 1157 2 476 4 632 2 317 2 987 4 404 6 553 4 418 2 760 2 155 2 992 2 1063 4 
982 6 703 2 11 2 1157 2 1421 1 476 8 632 2 317 2 987 8 404 10 553 4 418 2 110 1 1328 1 760 8 155 2 992 2 1063 8 
869 24 297 44 1397 36 776 4 1175 4 778 10 395 4 591 2 499 4 304 8 215 4 1188 4 796 6 121 4 1416 4 320 2 702 8 18 4 509 4 1512 102 510 2 1098 16 896 6 1421 78 1306 16 1518 8 230 2 619 2 1205 4 900 16 620 4 901 4 902 2 624 4 903 10 1210 2 1007 4 1312 4 34 4 517 8 812 4 629 8 38 2 1319 26 429 4 1437 2 245 2 815 4 1541 6 817 10 1228 2 1328 70 1441 4 1547 4 1550 4 1556 2 726 4 1028 4 545 8 162 4 438 2 1132 4 165 4 1562 6 547 2 441 10 1455 10 354 16 1137 4 832 8 1142 11 736 2 1349 28 940 4 360 30 1465 4 1360 8 1154 2 945 5 750 4 462 2 751 2 663 4 1055 2 567 4 1261 6 467 2 851 4 1164 2 949 2 1165 4 469 2 855 10 197 32 377 4 957 1 571 4 856 4 1596 4 1066 10 286 16 200 4 770 8 862 14 381 2 92 4 1600 4 293 4 383 4 295 2 
869 8 870 2 297 14 872 2 1397 14 1557 2 1179 2 590 2 1132 2 591 2 165 2 1562 2 547 2 1455 2 355 2 215 2 796 2 121 2 1142 2 1349 12 1145 10 360 6 1465 4 320 2 702 6 18 4 1512 40 510 2 1152 2 1580 2 896 2 1421 28 563 2 751 2 663 2 620 2 900 14 624 4 1055 2 903 6 332 2 467 2 1261 2 851 4 949 2 1164 2 1165 4 469 2 855 6 1066 6 1319 12 245 2 381 2 92 2 1483 2 1541 4 383 4 1328 26 1441 4 
869 116 1395 4 870 4 297 100 492 2 1397 76 776 6 1175 6 1179 2 590 8 498 20 591 2 1287 20 215 6 1188 4 796 32 121 2 984 2 1416 6 702 8 18 6 509 4 1512 216 510 6 1098 2 1203 24 896 14 1421 130 230 2 1205 6 900 16 620 6 624 6 903 12 1311 2 1210 2 1007 6 1312 6 34 4 1530 10 140 20 812 6 629 24 1011 18 711 26 1319 54 337 2 429 4 634 54 1437 2 815 4 1541 8 1022 2 1328 118 539 26 1441 6 1547 4 251 8 342 2 1550 6 1230 4 638 2 1123 54 1557 2 1556 2 1232 2 726 6 162 6 1132 2 165 2 1562 14 547 2 1455 14 355 2 446 10 1137 6 1344 24 1142 12 1143 4 1349 54 176 2 1145 20 358 10 940 6 360 30 1465 6 1250 4 1360 50 1152 4 1580 2 945 1 1367 4 563 2 462 2 663 6 1055 2 567 4 467 6 1261 6 851 4 1060 6 1164 2 949 6 1165 6 469 4 855 12 377 4 1064 2 856 4 1596 4 1066 12 958 4 200 6 862 12 576 12 381 8 1483 2 92 6 293 6 579 6 383 6 
1395 2 869 6 1396 2 297 20 872 2 1397 20 778 2 392 2 977 2 546 2 498 2 165 2 1287 2 592 2 591 2 1562 2 547 2 1032 4 1565 2 441 2 792 2 1567 2 549 2 830 2 1455 2 9 2 215 2 446 2 796 2 1142 2 1414 2 217 2 314 4 1349 6 220 2 358 2 403 2 555 2 1465 2 320 2 325 2 18 2 1250 2 1512 48 943 2 510 2 1154 2 806 2 896 2 1421 46 751 2 663 2 368 4 330 4 233 2 620 2 900 36 1472 2 1522 6 756 2 624 2 1055 2 332 2 903 4 1261 2 467 2 1432 2 1164 2 949 2 1530 2 1531 2 1165 2 140 2 196 2 569 2 855 4 1066 4 1221 2 1319 6 245 2 381 2 92 2 1439 2 94 2 1541 6 817 2 383 2 1228 2 1328 44 1441 2 489 2 
457 2 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 
1480 1 40 1 627 1 1519 1 300 1 1369 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 40 30 138 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:memberOf(D[F)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:noDups([I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:intersection([I[I)[I
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_75()Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_70()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:present()Z
daikon.Quant:lt(II)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_103()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern:intern([I)[I
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_77()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_97()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfo:new_ppt()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_120()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ValueTuple:size()I
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:dimensions()I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3_12()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_149()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_35()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.Invariant:logDetail()Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_164()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_22()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3_25()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Quant:gt(II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_57()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_17()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_21()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:modulus([I)[I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3_28()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_109()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_5()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:jj_3R_60()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_98()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_68()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaCharStream:ReadByte()C
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_110()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_2_25(I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:jj_3R_124()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_53()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lexGT([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_73()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_2_17(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:getSignature()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.Invariants:Invariants()V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_118()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaCharStream:getBeginColumn()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_2_16(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:gte(II)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.NodeList:NodeList()V
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaCharStream:BeginToken()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_102()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaCharStream:readChar()C
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3_14()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_20()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_99()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
utilMDE.MathMDE:gcd([I)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_101()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_163()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Debug:logOn()Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltsLT([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfo:relate_var()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isScalar()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptSlice1:arity()I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.visitor.FormatCommand:getCommand()I
utilMDE.FuzzyFloat:ne(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_107()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.Quant:ne(II)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.PptSlice2:arity()I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_115()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Node:Node()V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1343 | if (x) -> if (!x)
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_117()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_72()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_137()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_96()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3_15()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:union([I[I)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_29()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakHasherMap:size()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_136()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Debug:logDetail()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_105()Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 2 467 2 1386 2 566 4 133 2 1172 2 570 2 782 2 333 2 
1299 6 1323 2 341 2 756 2 1366 2 348 2 121 6 545 2 385 6 1309 2 192 2 
800 2 977 2 50 4 1079 2 930 6 570 2 153 6 1012 6 314 2 1172 2 1143 2 975 6 1212 4 
654 10 110 6 454 4 904 16 1032 16 684 10 843 2 952 26 631 4 980 4 177 8 395 10 958 2 1172 6 436 2 567 2 1006 12 1229 8 570 6 39 2 417 2 1382 4 972 16 598 8 64 28 128 2 1256 6 1209 8 561 10 507 10 
862 6 382 4 
56 2 
927 4 467 2 425 2 729 2 343 2 92 2 1106 4 892 2 1172 4 353 2 1021 2 355 2 703 2 1272 2 446 2 230 2 1125 2 231 2 1360 2 600 2 106 2 486 2 236 2 323 2 1031 2 490 2 196 2 525 2 1369 2 872 4 331 2 1146 2 35 2 570 4 77 2 166 2 1098 2 670 2 920 4 1292 2 1206 2 128 2 1255 2 506 2 
214 2 654 15 110 4 454 2 1215 6 904 32 1032 32 684 15 579 4 5 6 1136 6 952 47 197 4 395 15 958 2 1172 4 940 3 351 4 589 4 263 8 532 4 1006 22 533 6 1229 6 1095 2 570 4 1231 4 972 32 598 19 64 52 504 2 105 2 83 2 234 4 1256 4 1274 6 507 15 1390 5 561 6 
1292 2 751 2 1085 2 
512 2 720 22 739 2 888 2 196 2 143 2 1025 2 1358 2 1152 2 1110 10 43 2 650 2 749 2 109 2 
654 2 110 2 454 2 904 2 1032 2 684 2 952 4 1367 2 54 2 156 2 395 2 457 2 136 2 1006 2 836 2 1312 2 972 2 598 2 64 6 604 2 507 2 1157 2 561 4 
654 4 1365 2 904 8 1032 8 533 6 1006 4 684 4 579 4 1136 6 952 12 197 4 1382 2 972 8 64 16 1205 2 395 4 507 4 
386 2 994 2 69 2 562 2 683 4 217 2 1134 2 1163 2 218 4 1085 6 1106 4 732 4 867 4 830 14 475 2 690 2 476 4 120 2 528 2 14 2 801 2 1270 62 397 10 896 2 943 2 1248 2 1067 4 724 4 1381 2 1272 2 802 4 600 4 292 2 707 4 1292 8 1234 4 709 4 233 2 1338 10 751 2 
469 2 779 2 56 2 718 2 636 2 261 2 959 2 480 2 170 2 190 2 
86 2 1 2 0 3 685 2 686 2 174 1 258 2 433 4 691 3 850 2 180 8 782 2 852 2 13 2 99 1 783 2 588 1 853 2 1226 2 184 2 100 2 593 2 1121 1 706 2 599 2 24 24 1319 2 1127 2 107 32 108 2 950 2 1239 2 517 8 452 2 863 12 523 2 865 1 607 2 716 12 278 2 280 32 1034 2 1328 2 1140 2 116 1 1330 2 283 2 1142 2 1332 2 1035 16 1037 1 1038 16 458 2 1245 2 1246 2 529 2 961 2 967 2 616 1 288 2 875 2 1150 4 381 2 464 2 540 2 466 4 626 3 298 4 468 2 884 3 1052 2 1051 1 887 1 1164 1 1263 2 57 16 1168 2 1057 2 474 2 734 3 1172 34 637 2 396 2 638 1 477 3 1173 2 1060 4 223 3 58 2 1062 2 983 2 894 2 478 2 1175 2 895 2 546 2 984 3 1064 3 1176 2 815 5 549 2 309 2 818 16 225 3 820 2 554 2 227 2 648 6 824 4 748 4 651 2 1074 2 402 2 400 2 827 2 903 3 1078 2 655 2 906 2 324 2 563 2 996 6 1191 2 661 3 326 1 761 2 1284 2 1002 1 244 1 1285 2 766 6 164 8 75 2 568 2 569 2 570 32 78 2 917 2 418 2 1201 2 1291 1 1202 24 770 1 423 6 1015 2 1208 2 339 2 925 2 85 4 
838 2 1172 2 
1385 2 897 2 1172 4 
413 2 
1016 20 681 88 2 2 345 6 344 2 6 28 7 2 1019 290 10 2 689 4 1020 18 11 4 350 2 352 4 697 4 15 6 698 26 1022 4 700 4 19 6 17 2 18 6 701 6 702 2 20 4 1024 4 357 4 358 6 359 2 360 132 705 4 361 6 710 6 711 160 713 2 712 14 29 6 365 2 366 12 368 4 371 4 1036 2 33 10 719 12 374 2 1039 106 721 2 723 376 38 4 378 336 42 4 44 2 45 20 727 2 383 6 1049 6 51 2 1053 6 388 4 730 12 389 2 731 6 390 2 52 2 392 18 55 2 733 2 1059 2 1063 8 738 2 59 2 60 12 740 4 741 12 743 2 744 6 746 2 63 4 747 2 1069 2 65 20 1072 8 1073 30 67 328 399 2 1075 2 1077 244 1076 54 403 8 753 2 755 6 71 6 754 30 1080 28 1081 2 1082 2 757 98 73 2 1084 4 405 192 758 2 1086 8 1089 2 760 198 1090 6 411 2 764 8 763 6 414 2 1093 2 767 204 415 4 416 30 79 6 1096 2 81 4 419 2 82 2 1100 2 421 60 771 6 1101 2 773 2 84 22 774 6 775 4 776 22 89 224 426 2 777 4 1104 6 778 4 91 10 431 6 430 2 1109 4 781 64 1111 6 1112 10 95 2 435 2 98 2 1114 6 437 6 438 46 784 20 440 30 441 6 442 2 443 8 444 4 788 4 1118 2 102 6 448 2 789 6 449 48 104 198 450 84 1129 16 111 8 453 2 793 64 1131 30 1132 4 113 2 1135 2 795 2 1137 6 1138 20 1139 2 118 244 119 6 1144 30 1145 28 459 2 460 6 122 4 123 6 803 2 804 2 126 6 808 2 463 2 807 140 464 2 1155 2 1156 2 1159 228 131 328 132 112 472 2 134 22 1169 2 812 6 1171 6 1172 10 814 6 137 14 1177 2 139 2 817 20 140 6 481 60 141 2 1179 2 1181 2 482 2 823 4 1182 2 484 2 144 2 145 106 826 2 149 4 150 2 487 20 151 4 488 4 829 4 1188 2 1190 2 1189 2 1192 2 154 2 155 2 491 2 492 18 1194 198 493 6 831 198 494 2 1196 2 832 52 497 8 833 74 834 2 163 4 498 12 162 28 165 2 501 2 168 2 502 2 503 2 841 48 1210 2 1211 4 842 12 508 50 1213 4 1214 2 175 26 845 2 176 6 846 2 1217 8 847 2 1218 204 1220 10 178 6 1222 30 179 2 510 4 1225 26 513 118 854 6 514 4 855 2 185 4 186 6 515 4 187 4 516 30 189 2 859 4 1236 2 1237 26 860 12 518 22 193 2 1240 6 522 6 521 2 864 10 194 566 527 2 870 2 1244 2 871 8 530 2 1247 2 204 30 874 6 536 2 206 6 207 2 208 2 1252 2 1254 4 211 2 538 112 1257 244 212 2 881 2 213 2 1258 6 215 2 542 46 543 6 1261 26 889 432 220 2 1264 2 222 4 1265 2 893 60 1266 2 1268 2 547 2 550 4 551 2 553 2 224 4 226 2 228 6 229 2 556 2 557 2 900 94 1275 14 901 2 235 24 902 2 1277 4 1276 386 238 6 905 2 239 2 1280 2 242 112 1281 26 1282 16 243 4 565 6 1283 2 908 4 909 2 911 2 245 6 912 2 570 10 1289 2 916 4 248 30 1290 14 572 2 1293 2 250 46 574 4 1294 192 1296 2 1297 4 1298 82 253 4 578 2 577 6 1302 198 1300 8 928 2 254 4 929 10 255 60 931 12 256 8 581 14 1304 198 936 14 584 2 586 16 587 4 941 24 590 2 262 6 945 2 591 2 592 2 1311 6 264 4 947 2 596 2 597 26 1314 198 1315 6 601 2 948 182 603 6 269 12 949 8 1321 26 1322 4 274 32 951 4 1324 12 606 2 277 46 279 14 281 28 1327 2 609 6 611 68 954 2 1331 4 956 2 1334 4 960 112 964 4 968 4 286 2 287 2 617 4 289 6 970 4 971 8 621 6 974 2 622 4 293 2 1337 2 625 92 295 4 296 4 297 2 627 70 628 4 632 12 301 2 1345 2 635 2 1347 2 981 6 1351 4 640 2 305 4 1352 4 642 46 643 432 986 2 310 6 1355 4 1357 8 645 2 988 30 989 2 1359 26 990 198 1361 4 1362 2 649 26 1363 2 315 4 317 2 319 6 318 8 992 2 321 6 993 2 322 2 658 2 657 2 999 2 1370 2 1371 8 1372 6 1373 16 328 2 1001 2 662 2 1003 86 1374 26 1004 20 664 6 1005 132 1376 66 1007 4 1008 6 668 2 1380 2 669 2 1009 2 1383 2 673 2 334 2 675 8 677 2 1389 182 678 2 680 2 1391 2 
1243 2 379 2 1388 2 524 1 
1243 2 46 2 
1243 2 259 2 1292 2 1260 2 998 2 631 2 41 2 
1243 2 259 2 742 2 
1243 2 259 2 995 2 
1154 2 1388 2 505 2 
1243 2 259 2 
1154 2 1088 2 
1243 2 752 2 
1329 2 1154 2 1388 2 
791 2 240 2 1388 2 
1017 2 1388 2 346 2 
805 2 1388 2 25 2 
249 2 90 2 1388 2 
1092 2 1154 2 
1243 2 1162 2 
1070 2 791 2 
851 2 346 2 
805 2 80 2 
519 2 90 2 
1154 2 356 2 
708 2 90 2 
646 2 805 2 
500 2 346 2 
985 2 791 2 
1329 2 1154 2 615 2 1388 2 
1329 2 1154 2 615 2 1388 2 559 2 
1154 2 1388 2 391 2 
1154 2 127 2 1388 2 
915 2 898 2 1014 2 907 2 
252 4 34 2 1375 2 857 2 720 6 439 2 1303 2 31 2 1097 2 555 2 1011 4 300 2 1056 2 839 2 652 2 1048 2 924 2 926 2 
1271 2 1388 2 
94 2 1292 2 998 2 183 2 
94 2 1353 2 1292 2 1260 2 998 2 183 2 
1243 2 259 2 1292 2 979 2 998 2 631 2 
37 2 703 2 
1292 2 998 2 631 2 47 2 
198 2 805 2 
90 2 251 2 
791 2 1054 2 
27 2 346 2 
1028 2 90 2 346 2 
722 2 90 2 346 2 
714 2 90 2 346 2 
428 2 90 2 346 2 
1278 6 580 2 998 2 1228 2 1317 6 1292 2 362 2 923 2 
1154 2 387 2 
549 2 
1103 2 86 2 1 2 685 2 258 2 433 4 180 2 782 2 588 2 184 2 1226 2 785 2 100 2 704 2 599 2 107 6 863 8 523 2 716 8 280 4 1034 2 1140 2 1332 2 1037 4 529 2 1147 2 963 2 965 2 969 2 875 2 1150 2 728 2 464 2 381 2 466 4 298 4 885 2 1051 2 1052 2 57 6 1168 2 1057 2 135 2 396 2 1172 26 1349 2 478 2 1175 2 309 2 554 2 648 4 824 2 748 4 991 2 402 4 401 2 1078 6 655 2 906 2 996 2 761 2 157 2 495 4 1285 2 766 2 568 2 569 2 570 26 78 2 917 2 1201 2 769 2 671 4 423 6 1207 2 85 2 
1103 2 86 2 1 2 685 2 1305 2 258 2 433 4 180 2 782 2 852 2 588 2 184 2 1226 2 100 2 704 2 599 2 1127 2 107 6 863 8 523 2 716 8 280 4 1034 2 1140 2 1332 2 1037 2 529 2 1147 2 963 2 965 2 969 2 875 2 1150 2 728 2 464 2 381 2 466 4 298 4 885 2 1051 2 1052 2 57 6 1168 2 1057 2 135 2 1172 26 637 2 396 2 478 2 1175 2 309 2 554 2 648 6 824 2 1184 2 748 4 991 2 402 4 401 2 1078 6 655 2 906 2 656 2 996 2 761 2 157 2 495 4 1285 2 766 2 568 2 569 2 570 26 78 2 917 2 1201 2 769 2 671 4 423 6 85 2 
182 2 
1058 2 1262 2 
298 2 1299 6 341 2 1301 2 173 2 473 2 53 10 890 2 1306 2 432 2 434 4 735 2 349 2 396 2 1172 12 545 4 1175 2 787 2 21 2 594 2 1313 2 599 2 364 2 748 2 146 8 320 2 275 2 1323 2 756 4 489 2 715 2 1187 4 796 2 406 2 1325 2 1368 2 526 2 612 2 121 6 663 4 372 4 665 2 373 2 1377 8 1249 4 1379 2 246 2 570 6 290 2 78 2 1149 2 125 2 1201 2 423 4 129 4 464 2 381 2 922 2 338 2 385 6 
298 2 1299 8 341 2 1301 2 173 2 473 2 53 10 890 2 1306 2 432 2 434 4 735 2 349 2 396 2 1172 12 1175 2 545 4 787 2 21 2 594 2 1313 2 599 2 364 2 748 2 146 8 320 2 192 2 275 2 1323 2 1185 2 756 4 489 2 715 2 1187 4 796 2 406 2 1325 2 1368 2 526 2 612 2 121 8 663 4 372 4 665 2 373 2 1377 8 1249 4 1379 2 570 6 246 2 290 2 78 2 205 2 1149 2 125 2 1201 2 619 4 423 4 129 4 464 2 381 2 385 6 
275 2 1299 2 756 2 489 2 21 2 1379 2 715 2 1187 4 290 2 796 2 406 2 473 2 1325 2 434 4 129 2 545 2 320 2 385 2 
298 2 1299 6 1301 2 173 2 473 2 53 6 890 2 1306 2 432 2 434 4 735 2 349 2 396 2 1172 12 545 4 1175 2 787 2 21 2 594 2 1313 2 599 2 364 2 748 2 146 4 320 2 192 2 275 2 1323 2 756 4 489 2 715 2 1187 4 796 2 406 2 1325 2 1368 2 526 2 612 2 121 6 663 4 372 4 665 2 373 2 1377 4 1249 4 1379 2 246 2 570 6 290 2 78 2 1149 2 125 2 1201 2 423 4 129 4 464 2 381 2 922 2 338 2 385 4 
298 2 1299 4 1301 2 173 2 473 2 53 6 890 2 1306 2 432 2 434 4 735 2 349 2 396 2 1172 12 545 4 1175 2 1309 2 787 2 21 2 594 2 1313 2 599 2 364 2 748 2 146 4 320 2 275 2 1323 2 756 4 489 2 715 2 1187 4 796 2 406 2 1325 2 1368 2 526 2 612 2 121 6 663 4 372 4 665 2 373 2 1377 4 1249 4 1379 2 246 2 570 6 290 2 78 2 1149 2 125 2 1201 2 423 4 129 4 464 2 381 2 922 2 338 2 385 6 
298 2 1299 6 341 2 1301 2 173 2 473 2 53 6 890 2 1306 2 432 2 434 4 735 2 349 2 396 2 1172 12 545 4 1175 2 787 2 21 2 594 2 1313 2 599 2 364 2 748 2 146 4 320 2 275 2 1323 2 756 4 489 2 715 2 1187 4 796 2 406 2 1325 2 1368 2 526 2 612 2 121 6 663 4 372 4 665 2 373 2 1377 8 1249 4 1379 2 246 2 570 6 290 2 78 2 1149 2 125 2 1201 2 423 4 129 4 464 2 381 2 922 2 338 2 385 6 
298 2 1299 6 341 2 1301 2 173 2 473 2 53 10 890 2 1306 2 432 2 434 4 735 2 349 2 396 2 1172 12 545 4 1175 2 1309 2 787 2 21 2 594 2 1313 2 599 2 364 2 748 2 146 8 320 2 275 2 1323 2 756 4 489 2 715 2 1187 4 796 2 406 2 1325 2 1368 2 526 2 612 2 121 8 663 4 372 4 665 2 373 2 1377 8 1249 4 1379 2 246 2 570 6 290 2 78 2 1149 2 125 2 1201 2 423 4 129 4 464 2 381 2 922 2 338 2 385 8 
298 2 1299 6 341 2 1301 2 173 2 473 2 53 10 890 2 1306 2 432 2 434 4 735 2 349 2 396 2 1172 12 545 4 1175 2 787 2 21 2 594 2 1313 2 599 2 364 2 748 2 146 8 320 2 275 2 1323 2 756 4 489 2 715 2 1187 4 796 2 406 2 1325 2 1368 2 526 2 612 2 121 6 663 4 372 4 665 2 373 2 1377 8 1249 4 1379 2 246 2 570 6 290 2 78 2 1149 2 125 2 1201 2 423 4 129 4 464 2 381 2 922 2 338 2 385 6 
682 2 173 2 685 2 342 6 848 2 12 6 349 2 180 2 1224 2 511 1 184 2 856 4 354 6 21 2 1230 6 858 2 1027 2 364 2 863 4 715 2 716 4 717 6 1034 12 526 2 200 2 529 2 372 4 201 2 373 2 203 2 1249 8 875 2 1251 2 377 2 879 1 381 2 384 2 385 8 1052 2 886 2 53 2 57 6 890 2 1057 2 221 7 393 2 735 2 396 2 1061 1 737 1 545 4 398 6 61 6 899 7 748 4 560 2 1078 6 756 4 906 2 406 2 1285 2 766 2 74 2 1287 2 413 6 1288 6 568 2 569 2 570 24 246 2 78 2 769 2 422 2 573 1 423 6 922 2 85 2 1103 4 1299 4 1301 4 257 6 1306 2 432 2 433 4 434 4 260 1 782 2 942 2 1309 4 787 4 946 2 1117 2 594 2 1120 10 1313 2 265 2 599 2 1127 2 107 8 605 6 275 2 1323 4 796 2 280 2 1325 2 1140 2 114 2 282 2 612 2 798 1 1332 2 121 12 962 6 969 2 290 2 1149 2 125 2 291 2 1150 2 1151 1 623 8 806 2 462 2 464 2 129 4 466 4 298 4 473 2 1168 2 135 2 633 6 1170 4 637 2 1172 46 639 2 1175 2 478 2 309 2 142 6 648 6 824 2 485 2 320 2 489 2 1186 2 1187 4 996 2 1368 2 1000 2 663 6 665 2 835 1 1377 2 1378 2 1379 2 1201 2 671 4 1385 6 838 6 679 2 
1103 4 682 2 341 4 1299 8 1301 4 173 2 685 2 342 6 257 6 1306 2 848 2 432 2 433 4 12 6 434 4 349 2 180 2 1224 2 782 2 942 2 184 2 787 4 856 4 354 6 946 2 1117 2 21 2 594 2 1230 6 1120 10 1313 2 858 2 265 2 1027 2 599 2 1127 2 364 2 107 8 605 6 275 2 863 8 1323 4 715 2 716 8 280 2 796 2 717 6 1325 2 1034 12 526 2 114 2 1140 2 282 2 612 2 1332 2 285 2 121 12 200 2 529 2 372 4 201 2 962 6 373 2 203 2 1249 8 969 2 290 2 1251 2 875 2 1149 2 291 2 125 2 1150 4 377 2 623 8 806 2 462 2 129 4 381 2 464 2 466 4 384 2 385 8 298 4 1052 2 886 2 473 2 53 2 890 2 57 6 1057 2 1168 2 633 6 135 2 393 2 1170 4 735 2 394 2 639 2 1172 48 637 2 396 2 545 4 478 2 1175 2 398 6 142 6 309 2 61 6 648 6 824 4 485 2 748 4 560 2 320 2 402 2 1078 6 756 4 1186 2 906 2 489 2 1187 4 996 2 406 2 1368 2 1000 2 1285 2 74 2 766 2 663 6 1287 2 413 6 665 2 1288 6 1377 6 568 2 569 2 1378 2 1379 2 246 2 570 26 78 2 1201 2 671 4 769 2 1385 6 422 2 838 6 423 6 922 2 679 2 85 4 
1103 4 682 2 341 4 1299 8 1301 4 173 2 685 2 342 6 257 6 1306 2 848 2 432 2 433 4 12 6 434 4 349 2 180 2 1224 2 782 2 942 2 184 2 787 4 856 4 354 6 946 2 1117 2 21 2 594 2 1230 6 1120 10 1313 2 858 2 265 2 1027 2 599 2 1127 2 364 2 107 8 605 6 275 2 863 8 1323 4 715 2 716 8 280 2 796 2 717 6 1325 2 1034 12 526 2 114 2 1140 2 282 2 612 2 1332 2 285 2 121 12 200 2 529 2 372 4 201 2 962 6 373 2 203 2 1249 8 969 2 290 2 1251 2 875 2 1149 2 291 2 125 2 1150 4 377 2 623 8 806 2 462 2 129 4 381 2 464 2 466 4 384 2 385 8 298 4 1052 2 886 2 473 2 53 6 890 2 57 6 1057 2 1168 2 633 6 135 2 393 2 1170 4 735 2 394 2 639 2 1172 48 637 2 396 2 545 4 478 2 1175 2 398 6 142 6 309 2 61 6 648 6 824 4 485 2 748 4 146 4 560 2 320 2 402 2 1078 6 756 4 1186 2 489 2 906 2 1187 4 996 2 406 2 1368 2 1000 2 1285 2 74 2 766 2 663 6 1287 2 413 6 665 2 1288 6 1377 6 568 2 569 2 1378 2 1379 2 246 2 570 26 78 2 1201 2 671 4 769 2 1385 6 422 2 838 6 423 6 922 2 679 2 85 4 
682 2 341 4 173 2 4 6 685 2 342 6 848 2 12 6 349 2 180 4 1224 2 184 2 856 4 354 6 21 2 1230 6 858 2 188 2 364 2 192 2 863 10 195 2 715 2 716 10 717 12 1034 10 526 2 200 2 529 2 372 4 201 2 373 2 375 2 203 2 1249 8 875 2 1251 2 377 2 381 2 384 2 385 10 1052 2 886 2 53 6 57 8 890 2 1057 2 393 2 735 2 394 2 396 2 545 4 398 12 61 12 1071 2 748 4 560 2 402 2 1078 8 756 4 906 2 406 2 1285 2 766 4 74 2 1287 2 413 12 1288 6 568 2 569 2 570 24 246 2 78 2 769 2 422 2 423 6 922 2 85 4 1103 4 1299 10 1301 4 427 6 257 6 1306 2 432 2 433 4 434 4 782 2 942 2 1309 2 787 4 101 6 946 2 1117 2 594 2 1120 8 1313 2 265 2 1124 6 599 2 1127 2 268 6 107 12 605 6 275 2 1323 4 796 2 280 4 953 6 1325 2 1140 2 114 2 282 2 612 2 1332 2 285 2 121 16 962 6 969 2 290 2 1149 2 125 2 291 2 1150 4 623 8 806 2 462 2 464 2 129 4 466 4 976 2 298 4 130 2 473 2 1168 2 135 4 633 6 1170 4 637 2 1172 52 639 2 1175 2 478 2 479 2 816 6 309 2 142 6 648 6 824 4 485 2 146 4 320 2 489 2 1186 2 1187 4 996 4 1368 2 1000 2 160 6 663 6 665 2 1377 6 1378 2 1379 2 332 2 1201 2 671 6 1385 12 838 12 337 6 679 2 
275 2 341 2 1323 2 1299 6 173 2 756 4 489 2 1187 2 406 2 796 2 53 4 1325 2 1306 2 612 2 432 2 434 2 1172 4 121 4 545 4 663 2 372 2 665 2 373 2 1377 6 1249 2 21 2 246 2 594 2 1149 2 1313 2 125 2 922 2 146 4 320 2 385 6 
1103 2 341 2 1299 6 173 2 685 2 1105 2 1306 2 432 2 433 4 434 2 782 2 184 2 593 2 21 2 594 2 1120 2 1313 2 1027 2 599 2 706 2 1127 2 107 8 275 2 1323 2 280 3 796 2 1325 2 1034 4 1140 2 612 2 1332 2 121 4 529 2 961 2 372 2 373 2 1249 2 969 2 875 2 1149 2 125 2 381 2 464 2 880 2 466 4 541 2 385 6 298 4 53 2 57 6 1168 2 1057 2 735 2 1172 28 637 2 396 2 545 4 1175 2 478 2 1348 3 304 2 549 2 309 2 648 6 748 4 320 2 1078 6 756 4 906 2 489 2 1187 2 996 3 406 2 1285 2 663 2 766 3 665 2 1377 6 568 2 569 2 570 24 246 2 78 2 667 2 1201 2 769 2 671 4 423 6 922 2 
1306 2 173 2 412 2 
1306 2 173 2 412 2 
1103 6 87 2 1299 12 341 4 1301 2 173 4 685 2 934 2 583 2 1306 6 433 4 434 2 96 2 1223 2 782 2 184 2 1309 4 787 4 856 2 21 2 1120 2 1313 2 266 2 599 2 1127 2 364 2 107 2 605 2 861 4 192 4 863 4 1323 4 715 2 716 4 280 2 1325 2 1034 4 1140 2 955 2 1332 2 1037 2 121 16 529 2 372 2 614 2 202 2 873 2 1249 4 1250 2 969 2 1150 4 377 2 129 4 728 4 464 2 381 2 466 4 385 12 298 4 1052 4 53 6 810 2 890 2 57 2 1168 2 1057 2 1170 2 1172 24 637 2 396 2 478 2 1175 2 545 4 309 2 1356 2 648 6 824 4 1183 2 1364 2 748 4 68 2 146 4 1078 2 756 4 906 2 489 4 1187 2 1368 2 412 2 1285 2 74 2 663 4 665 2 1377 6 568 2 569 2 1379 2 570 16 78 2 1201 2 769 2 422 2 1384 4 423 6 424 2 85 4 
202 2 944 2 570 2 290 2 1356 2 1120 2 1026 2 1251 2 1034 2 919 2 1058 2 1170 2 462 2 1172 4 1364 2 605 2 1175 2 
1103 6 1299 12 341 4 1301 4 173 4 685 2 934 2 1306 6 433 4 434 2 349 2 96 2 1223 4 782 2 184 2 1309 4 787 4 856 2 21 2 1313 2 599 2 1127 2 364 2 107 2 605 2 861 4 1128 2 192 4 863 4 1323 4 715 2 716 4 280 4 1033 2 32 2 1325 2 1034 2 1140 2 955 2 1332 2 1333 2 121 16 529 2 372 2 614 2 202 2 1249 4 873 2 969 2 1150 4 377 2 129 4 728 4 464 2 381 2 466 4 385 12 298 4 1052 4 53 6 810 2 890 2 57 2 1168 2 1057 2 1172 24 637 2 396 2 478 2 1175 2 545 4 309 2 1356 2 648 6 824 4 1183 2 1364 2 748 4 68 2 146 4 750 2 1078 2 756 4 906 2 489 4 1187 2 1368 2 412 2 1285 2 74 2 663 4 665 2 1377 6 568 2 569 2 1379 2 570 16 78 2 1201 2 769 2 422 2 1384 4 423 6 424 2 85 4 
1103 6 1299 12 341 4 1301 4 173 4 685 2 934 2 1306 6 433 4 434 2 349 2 96 2 1223 2 782 2 184 2 1309 4 787 4 856 2 21 2 1120 2 1313 2 1316 2 599 2 1127 2 364 2 107 2 191 2 605 2 861 4 192 4 863 4 1323 4 715 2 716 4 280 2 1325 2 1034 4 1140 2 955 2 1332 2 1037 1 121 16 529 2 372 2 614 2 202 2 873 2 1249 4 969 2 1150 4 377 2 129 4 728 4 464 2 381 2 466 4 809 2 385 12 298 4 1052 4 1259 2 53 6 810 2 890 2 57 2 1168 2 1057 2 1170 2 1172 24 637 2 396 2 478 2 1175 2 545 4 309 2 1356 2 648 6 824 4 1183 2 1364 2 748 4 68 2 146 4 1078 2 756 4 906 2 489 4 1187 2 1368 2 412 2 1285 2 74 2 663 4 665 2 1377 6 568 2 569 2 1379 2 570 16 78 2 1201 2 420 2 769 2 422 2 1384 4 423 6 424 2 85 4 
1103 2 298 4 685 2 933 2 57 6 1057 2 1168 2 433 4 692 4 1113 2 396 2 1172 24 637 2 782 2 694 2 478 2 1175 2 184 2 138 2 309 2 1119 2 1232 2 599 2 648 6 1127 2 485 2 107 8 748 4 272 2 455 2 1078 6 906 2 30 2 112 2 996 2 280 2 1034 2 866 2 1140 2 282 2 1000 2 1332 2 613 2 1285 2 529 2 766 2 201 2 568 2 569 2 570 18 78 2 40 2 875 2 768 2 1201 2 671 4 769 2 1204 2 423 6 806 2 464 2 381 2 465 2 466 4 384 2 575 2 
28 3 1078 2 1161 2 996 3 280 3 844 4 347 1 57 2 1167 2 135 6 327 2 1172 2 766 3 1116 2 306 2 570 2 875 2 987 2 671 2 169 2 1387 2 1102 2 107 2 66 2 840 2 
1116 2 766 2 28 2 1078 2 306 2 1161 2 570 2 996 2 280 2 875 2 987 2 844 4 169 2 1167 2 671 2 57 2 135 6 1102 2 1387 2 327 2 1172 2 66 2 107 2 840 2 
1116 2 766 2 28 2 1078 2 306 2 1161 2 570 2 996 2 280 2 875 2 987 2 844 4 169 2 1167 2 671 2 57 2 135 6 1102 2 1387 2 327 2 1172 2 66 2 107 2 840 2 
654 2 904 2 1032 2 684 2 404 2 1083 2 952 4 280 3 660 4 93 2 395 2 1195 2 369 2 1172 10 1035 2 330 2 766 3 641 2 1229 4 1023 2 570 4 725 4 818 2 1068 3 726 3 875 2 822 2 972 2 918 2 1273 4 64 6 672 6 647 3 1320 2 792 4 107 2 1256 2 270 4 840 2 507 2 
654 2 904 2 1032 2 684 2 404 2 1083 2 952 4 280 2 660 4 93 2 395 2 1195 2 958 2 369 2 1172 10 1035 2 330 2 766 2 641 2 1006 2 1229 4 1023 2 570 4 725 4 818 2 1068 2 726 2 875 2 822 2 972 2 598 2 918 2 1273 4 64 4 672 6 647 2 1320 2 792 4 107 2 1256 2 270 4 840 2 507 2 
654 2 904 2 1032 2 684 2 404 2 1083 2 952 4 280 2 660 4 93 2 395 2 1195 2 958 2 369 2 1172 10 1035 2 330 2 766 2 641 2 1006 2 1229 4 1023 2 570 4 725 4 818 2 1068 2 726 2 875 2 822 2 972 2 598 2 918 2 1273 4 64 4 672 6 647 2 1320 2 792 4 107 2 1256 2 270 4 840 2 507 2 
654 2 904 2 1032 2 684 2 404 2 1083 2 952 4 280 2 660 4 93 2 395 2 1195 2 958 2 369 2 1172 10 1035 2 330 2 766 2 641 2 1006 2 1229 4 1023 2 570 4 725 4 818 2 1068 2 726 2 875 2 822 2 972 2 598 2 918 2 1273 4 64 4 672 6 647 2 1320 2 792 4 107 2 1256 2 270 4 840 2 507 2 
654 2 904 2 1032 2 684 2 404 2 1083 2 952 4 280 2 660 4 93 2 395 2 1195 2 958 4 369 2 1172 10 1035 2 330 2 766 2 641 2 1006 4 1229 4 1023 2 570 4 725 4 818 2 1068 2 726 2 875 2 822 2 972 2 598 4 918 2 1273 4 64 4 672 6 647 2 1320 2 792 4 107 2 1256 2 270 4 840 2 507 2 
759 2 70 2 181 2 687 2 247 2 659 2 
401 2 88 2 564 2 329 2 659 2 1238 2 1055 2 
3 2 72 2 1341 2 938 2 869 2 1172 10 370 2 765 2 1269 1 896 1 1354 2 570 8 78 2 445 2 837 2 618 2 61 2 167 2 447 2 1013 2 558 2 292 1 210 2 1235 1 267 2 1295 1 
654 6 904 6 1032 6 684 6 579 2 952 12 92 2 367 2 395 6 958 2 1172 6 97 2 351 2 263 2 533 4 1006 4 1229 4 644 2 570 6 124 2 166 2 1099 2 972 6 598 2 64 16 1318 2 1256 2 1390 4 1158 2 507 6 
570 1 725 2 456 2 1342 2 241 6 1148 1 23 2 660 2 1018 2 688 2 1108 4 1107 2 117 2 674 2 736 2 1172 1 294 2 270 2 
725 2 456 2 241 6 1342 4 23 2 660 2 1018 2 688 2 1107 2 1108 4 117 4 674 4 736 2 294 2 270 2 
570 1 725 2 456 2 241 10 1342 8 1148 1 23 2 660 2 1018 6 688 2 1107 8 1108 4 117 8 674 8 736 2 1172 1 294 2 270 2 
725 2 456 2 241 2 1342 2 23 2 660 2 688 2 1108 2 117 2 674 2 736 2 294 2 270 2 
172 4 932 18 429 10 1216 4 935 11 8 2 9 34 937 2 780 42 1219 16 433 88 509 50 1307 6 585 26 849 6 693 6 16 1 699 2 595 6 1122 6 1123 24 602 2 1029 4 1126 6 790 2 1127 58 451 6 1030 4 26 6 273 84 1242 4 1241 8 276 22 794 36 520 10 716 28 608 24 1326 124 610 10 199 4 868 16 284 2 957 2 1332 14 1037 4 966 8 535 4 1041 6 1042 6 461 4 876 10 620 2 973 8 1043 16 877 6 1045 10 537 92 1253 6 1336 4 1046 2 624 6 380 2 466 112 48 16 882 90 1160 4 49 4 1050 4 883 2 470 8 978 24 1340 8 629 24 811 4 1166 18 302 2 634 4 1346 8 1172 150 637 58 544 10 813 24 982 8 303 6 1065 90 548 6 307 2 1178 2 819 2 311 6 312 12 821 8 62 4 648 248 483 6 313 4 825 4 232 2 147 4 653 4 1279 8 997 24 407 42 408 2 1087 4 762 2 158 4 159 10 496 2 1285 14 910 8 1286 4 499 10 1197 6 1198 26 76 4 666 6 568 8 913 17 1094 6 570 134 1199 6 1200 2 1203 6 336 4 171 6 921 12 1392 4 
49 2 470 2 978 2 1340 2 216 2 471 4 630 2 932 2 429 2 219 2 8 2 582 2 1344 2 939 2 1219 4 1307 2 433 20 637 2 1172 46 544 2 813 2 982 6 695 2 696 2 303 2 1350 2 1174 2 786 2 1227 2 1310 4 1066 2 308 2 22 4 1180 2 745 2 1233 2 103 2 648 44 790 2 1127 2 363 2 232 2 316 2 26 2 271 2 1133 2 794 2 520 2 1279 2 716 38 997 2 1193 2 1326 6 325 2 610 2 409 2 868 4 410 2 1332 2 159 2 1037 2 161 2 1285 2 499 2 531 2 568 2 913 2 36 2 914 4 376 2 1040 2 570 44 1199 4 1200 2 876 2 620 2 973 2 1335 2 1043 4 877 2 1203 2 1044 2 1045 2 335 2 171 2 1046 2 1336 2 878 2 1047 6 676 2 340 2 466 20 
576 2 172 4 932 10 429 4 1216 4 8 2 9 30 780 16 1219 10 433 36 509 8 1307 4 1308 4 849 4 693 4 1115 8 595 4 1122 4 1123 8 1029 4 602 2 1126 4 790 2 1127 30 451 4 1030 4 26 4 1130 4 273 24 794 6 520 4 716 14 1326 24 610 4 797 4 1141 16 868 10 957 2 1332 6 376 10 534 4 1042 4 620 2 973 2 209 4 1043 10 877 4 537 24 1253 4 1046 2 624 4 539 2 466 44 48 8 1160 4 1339 2 1050 4 470 2 1165 2 811 2 1343 2 1346 4 1172 78 637 28 544 4 982 6 1267 8 303 4 548 4 308 2 552 4 311 4 1180 2 821 4 62 4 648 104 483 4 313 4 825 4 653 4 237 8 1279 2 152 2 1193 10 407 8 408 2 1087 4 410 10 1091 8 496 2 1285 6 1286 4 499 6 666 4 568 2 1094 4 913 10 570 70 571 16 1199 2 1200 2 1010 4 1203 4 171 4 921 14 772 32 340 2 
470 2 932 2 429 2 935 2 8 2 811 2 9 6 937 2 1219 6 1346 4 433 14 1307 4 637 12 1172 28 544 2 982 4 695 2 303 4 699 2 308 2 819 2 648 40 790 2 1127 12 232 2 1030 2 26 4 1241 2 276 10 520 2 794 2 1279 2 716 14 1326 8 1087 2 199 2 610 2 868 6 284 2 762 2 1332 2 1037 2 1285 2 499 2 568 2 913 2 570 26 1199 2 1200 2 973 2 620 2 1043 6 877 4 1203 4 171 4 1046 2 466 14 1392 2 48 6 
1221 2 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 
1153 1 891 1 799 1 828 1 299 1 148 1 

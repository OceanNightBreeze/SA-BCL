#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 255 567 1488 1361 1586 482 221 214 1280 1465 1314 1510 610 1037 929 371 1401 1370 1409 987 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 661 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:isIOAArray()Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice3:arity()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3_18()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_87()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_75()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression; | STATEMENT | 68469 | stmt -> ;
daikon.ProglangType:isPointerFileRep()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3R_61()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_125()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.Quant:noDups([I)Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfo:new_ppt()V
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_126()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_49()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoString.StringEqual:enabled()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_10()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.FormatTestCase:passes()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_72()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_96()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:lte(II)Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_74()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.PptSlice1:arity()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:has_typeof()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:lexGT([I[I)Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.string.OneOfString:sort_rep()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3_19()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3_12()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:hasTypeOf()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:is_false()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3_20()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3_36()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
utilMDE.MathMDE:pow(II)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_77()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_121()Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariant:logOn()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_115()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_114()Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3_27()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.ProglangType:dimensions()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:isSubarray([J[JI)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfo:isIOASet()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_58()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([I)[I
daikon.Quant:eq(FF)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfo:isDerived()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:baseIsScalar()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.PptSlice1:num_samples()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_2_18(I)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isString()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:baseIsFloat()Z
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_2_21(I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 2 903 2 1029 2 850 2 175 2 1337 2 650 4 1132 2 1440 2 
476 6 587 2 851 2 1485 2 1657 2 745 2 45 2 1372 2 1420 2 193 6 865 6 
780 2 903 2 1052 2 1470 6 1543 4 456 2 859 6 776 6 1337 2 913 6 357 4 358 2 1155 2 
544 4 480 4 829 2 28 2 144 2 1517 6 1259 4 1621 12 1072 10 554 10 1337 6 684 16 862 2 297 6 423 16 811 8 903 6 813 26 532 29 871 8 44 4 793 2 1220 2 1531 16 796 8 754 10 914 10 309 8 334 10 496 2 
1173 6 465 4 
1095 2 
915 4 337 2 850 2 1616 2 706 2 645 2 1462 2 709 2 176 2 864 2 1320 2 656 2 242 2 180 2 1217 2 1573 2 1279 2 432 2 1060 2 722 2 675 2 141 2 829 2 1540 2 1644 2 733 2 389 2 582 2 1337 4 1295 2 1431 4 209 2 583 2 152 2 903 4 1076 2 1549 2 792 2 948 2 458 2 1138 2 1610 4 164 2 595 4 
640 4 346 2 1620 2 1258 4 1517 4 1621 22 765 2 1072 16 1489 2 1490 4 554 16 1337 4 684 32 297 4 767 6 64 6 423 32 624 6 903 4 10 4 1568 4 813 48 1434 2 363 2 532 57 871 6 301 6 1437 4 44 2 1554 8 793 2 1531 32 1632 4 796 18 1393 6 754 16 914 16 952 6 334 6 
1555 2 164 2 157 2 
870 10 370 2 1290 2 630 2 447 2 665 2 734 2 974 2 1100 2 719 2 209 2 1083 2 251 2 38 22 
386 2 1096 2 1517 2 581 2 1621 2 1122 2 1072 2 554 2 684 2 423 2 813 4 532 6 41 2 426 2 992 2 44 2 1531 2 248 2 796 2 754 2 914 2 334 4 847 2 
10 4 544 2 813 12 532 16 640 4 1629 2 1503 2 1621 4 1531 8 1072 4 554 4 684 8 754 4 914 4 64 6 423 8 624 6 
697 10 1198 4 724 2 1330 2 1200 4 87 62 1204 2 89 4 1002 2 1291 2 1207 2 60 2 321 2 524 4 833 14 1099 4 1295 2 1431 4 1463 2 1363 4 359 2 1126 4 557 2 1216 2 487 2 1602 4 842 10 1604 2 1217 4 157 6 1502 2 75 2 1575 2 161 2 1555 2 911 4 693 4 818 2 164 8 53 4 
1379 2 887 2 1539 2 1095 2 1454 2 900 2 285 2 1664 2 1168 2 633 2 
1449 3 336 16 543 2 547 16 1041 1 1452 2 1044 2 1147 2 1262 3 1264 2 1048 16 866 1 968 2 468 2 1051 2 1467 2 1158 3 1275 1 124 1 1160 2 874 2 772 4 1056 2 132 2 1473 2 877 2 1167 2 1059 2 135 2 375 3 376 1 977 2 1283 2 253 1 1285 2 980 2 1374 8 1172 4 1377 1 1486 2 986 32 481 2 680 2 889 2 891 3 1293 2 391 2 683 2 1384 1 894 2 785 2 278 2 1597 2 903 34 284 2 1603 16 1185 2 1302 2 1497 2 790 2 1303 2 1190 32 1192 2 1506 2 995 2 1609 8 494 1 288 2 594 2 163 2 998 2 799 2 414 1 801 2 1617 2 601 2 1206 5 803 3 804 2 419 24 169 2 171 4 173 3 920 6 422 24 1210 2 175 2 1405 2 710 8 506 12 1624 4 178 2 507 2 1007 2 1408 2 926 2 73 1 611 2 1011 1 717 2 514 3 307 2 820 2 1419 4 1634 2 1422 2 1423 2 822 2 1018 2 1636 12 516 2 1536 3 202 6 1331 2 1642 3 520 1 832 2 1649 2 1335 4 1337 32 1022 2 449 2 211 2 943 2 526 2 1025 3 324 2 529 2 1245 2 1552 2 534 3 1247 2 1346 6 216 2 747 2 1347 2 104 4 631 2 329 1 1663 2 330 1 1139 2 1032 2 1254 1 332 2 1447 4 758 2 1256 6 1448 1 
903 2 498 2 
903 4 399 2 260 2 
310 2 
221 2 849 2 223 2 1 2 463 4 1037 2 1039 8 642 4 2 2 643 2 1260 2 4 2 1459 2 860 2 7 2 237 2 652 8 867 36 1270 4 868 48 869 6 1465 2 13 8 658 4 872 2 243 48 1055 48 1278 4 1280 2 1058 2 1474 4 671 4 879 8 1477 2 21 2 881 2 672 146 250 2 1479 10 1480 2 252 2 1482 4 255 2 884 2 885 192 1286 2 1065 48 1066 28 477 42 478 2 24 2 258 2 259 4 1070 4 679 4 30 4 267 2 890 2 1488 2 482 2 276 2 895 4 898 48 897 6 281 2 1078 8 1496 2 907 48 908 2 691 2 48 2 1509 2 1510 2 1088 22 502 2 1515 146 1314 2 62 4 505 48 1318 14 711 6 298 8 65 22 508 28 1524 2 69 14 1104 2 714 2 1106 36 929 2 512 2 306 8 1109 48 1110 4 80 2 721 2 1112 2 81 4 725 2 85 4 726 2 727 2 1537 14 936 2 938 2 318 2 90 16 1333 2 1120 2 735 4 523 2 1336 2 1339 8 1544 20 1546 2 527 2 323 2 528 2 328 2 1133 2 103 48 751 2 1350 2 107 2 539 2 108 18 109 2 111 2 1142 146 541 8 1143 2 1352 4 1145 4 115 4 762 2 349 2 350 4 959 14 1148 4 117 8 1359 8 1564 2 1361 2 1153 6 120 2 1567 8 1570 24 366 4 371 2 970 2 129 2 127 4 128 2 1370 2 373 2 1371 4 564 48 138 2 1581 2 567 2 1584 2 1378 4 1586 2 574 2 388 4 579 2 580 6 145 2 1383 2 987 2 787 48 151 2 786 2 150 2 155 2 397 2 1191 2 400 2 1193 2 590 2 592 2 404 4 1397 48 410 2 1000 4 1401 2 1209 2 805 4 1006 2 1409 2 181 2 610 2 1010 22 431 2 183 4 1411 2 816 4 613 2 1415 2 1631 4 1225 4 825 2 828 48 200 4 198 2 1643 2 1233 16 203 2 204 20 618 4 1646 2 205 2 831 8 1238 26 834 2 1240 20 1651 2 1242 14 207 2 208 2 623 2 452 2 1026 2 214 2 1028 2 1661 36 1660 2 1662 2 632 6 220 10 635 2 459 4 1255 26 638 2 1668 2 
488 2 365 2 188 2 333 1 
1626 2 188 2 
607 2 817 2 599 2 164 2 
607 2 817 2 819 2 599 2 164 2 761 2 
817 2 718 2 188 2 480 2 588 2 164 2 
1279 2 313 2 
817 2 480 2 271 2 164 2 
676 2 74 2 
1087 2 383 2 
1271 2 451 2 
295 2 1432 2 
1087 2 295 2 1529 2 
1181 2 1087 2 295 2 
1087 2 784 2 295 2 
1087 2 295 2 1034 2 
338 2 925 2 1365 2 1304 6 817 2 1015 6 1252 2 164 2 
906 2 1230 2 
817 2 188 2 480 2 588 2 43 2 164 2 761 2 
188 2 588 2 1265 2 
12 2 188 2 588 2 
488 2 1230 2 814 2 
188 2 588 2 
886 2 1230 2 
167 2 188 2 
488 2 1230 2 437 2 
661 2 
858 2 295 2 488 2 
1487 2 676 2 488 2 
1087 2 846 2 488 2 
325 2 1230 2 
188 2 808 2 
1271 2 1184 2 
295 2 102 2 
676 2 1043 2 
1087 2 49 2 
1230 2 1248 2 
1087 2 1532 2 
676 2 634 2 
1137 2 295 2 
1271 2 1385 2 
488 2 1230 2 437 2 130 2 
0 2 488 2 1230 2 437 2 130 2 
824 2 488 2 1230 2 
488 2 1230 2 716 2 
561 2 362 2 957 2 1101 2 
1287 2 1009 4 1571 2 1276 2 1038 2 345 2 1176 2 605 2 1528 2 304 2 1518 2 1166 2 1062 2 951 4 119 2 378 2 405 2 38 6 
488 2 1324 2 
1293 2 
336 6 1452 2 1147 2 968 2 866 4 121 2 1467 2 771 2 1056 2 877 2 1059 2 973 2 977 2 1283 2 1172 4 1377 2 1486 2 986 6 1071 2 894 2 785 2 394 2 1597 2 1300 2 903 26 1185 2 1303 2 1190 4 1192 2 163 2 288 2 596 2 998 2 797 2 804 2 57 2 169 2 171 4 920 2 175 2 1405 2 506 8 710 2 1624 2 1007 2 1008 2 926 2 611 2 1419 2 1634 2 1636 8 827 2 202 2 1331 2 91 4 1649 2 1335 4 1337 26 99 2 1654 4 324 2 529 2 741 2 531 2 1552 6 1247 2 1346 6 216 2 1347 2 104 2 329 2 753 2 1447 4 335 2 1256 4 758 4 
336 6 1452 2 1147 2 866 1 968 2 769 2 1467 2 771 2 1056 2 877 2 1059 2 973 2 977 2 1283 2 1172 4 1377 2 1486 2 986 6 481 2 1071 2 894 2 785 2 394 2 1597 2 1300 2 903 26 1185 2 1303 2 1190 4 1192 2 492 2 995 2 163 2 288 2 596 2 998 2 797 2 917 2 804 2 169 2 171 4 920 2 175 2 1405 2 506 8 710 2 1624 2 1007 2 1008 2 926 2 611 2 1419 2 1634 2 1636 8 827 2 202 2 1331 2 91 4 1649 2 1335 4 1337 26 99 2 1654 4 324 2 529 2 741 2 531 2 1552 6 1247 2 1346 6 216 2 1347 2 104 2 329 2 1139 2 753 2 1447 4 1256 6 758 4 
1667 2 
1577 2 273 2 
351 4 171 2 764 2 1045 2 352 4 1405 2 1521 2 712 2 1215 2 1625 2 865 6 1102 2 471 2 611 2 930 2 133 2 1012 2 1414 2 189 2 193 6 1114 10 476 6 1375 2 1485 4 1067 2 1486 2 262 4 444 2 1594 2 93 2 32 2 1335 2 1294 2 1337 6 1340 2 785 2 686 2 277 2 838 2 322 4 280 2 1598 2 903 12 990 2 1131 4 1185 2 1657 4 453 2 1247 2 745 2 1346 4 455 8 45 2 1134 8 162 2 46 2 1082 2 163 2 1308 2 759 4 
1144 4 351 4 171 2 764 2 1045 2 352 4 1405 2 1521 2 712 2 1215 2 1625 2 865 8 1102 2 471 2 611 2 930 2 133 2 1414 2 1372 2 189 2 193 6 1114 10 476 8 1375 2 1485 4 1067 2 1486 2 262 4 444 2 1236 2 1594 2 93 2 32 2 1335 2 1294 2 1337 6 1340 2 785 2 686 2 277 2 838 2 322 4 280 2 1598 2 903 12 1131 4 1185 2 1657 4 453 2 1247 2 745 2 1346 4 455 8 45 2 1134 8 538 2 162 2 46 2 1082 2 163 2 1308 2 759 4 
1102 2 1485 2 1657 2 453 2 262 4 351 2 930 2 133 2 1045 2 1414 2 162 2 46 2 1521 2 1082 2 193 2 1308 2 865 2 759 4 
351 4 171 2 764 2 1045 2 352 4 1405 2 1521 2 712 2 1215 2 1625 2 865 6 1102 2 471 2 611 2 930 2 133 2 1012 2 1414 2 1372 2 189 2 193 4 1114 6 476 6 1375 2 1485 4 1067 2 1486 2 262 4 444 2 1594 2 93 2 32 2 1335 2 1294 2 1337 6 1340 2 785 2 686 2 277 2 838 2 322 4 280 2 1598 2 903 12 990 2 1131 4 1185 2 1657 4 453 2 1247 2 1346 4 455 4 45 2 1134 4 162 2 46 2 1082 2 163 2 1308 2 759 4 
851 2 351 4 171 2 764 2 1045 2 352 4 1405 2 1521 2 712 2 1215 2 1625 2 865 4 1102 2 471 2 611 2 930 2 133 2 1012 2 1414 2 189 2 193 6 1114 6 476 6 1375 2 1485 4 1067 2 1486 2 262 4 444 2 1594 2 93 2 32 2 1335 2 1294 2 1337 6 1340 2 785 2 686 2 277 2 838 2 322 4 280 2 1598 2 903 12 990 2 1131 4 1185 2 1657 4 453 2 1247 2 1346 4 455 4 45 2 1134 4 162 2 46 2 1082 2 163 2 1308 2 759 4 
351 4 171 2 764 2 1045 2 352 4 1405 2 1521 2 712 2 1215 2 1625 2 865 6 1102 2 471 2 611 2 930 2 133 2 1012 2 1414 2 189 2 193 6 1114 6 476 6 1375 2 1485 4 1067 2 1486 2 262 4 444 2 1594 2 93 2 32 2 1335 2 1294 2 1337 6 1340 2 785 2 686 2 277 2 838 2 322 4 280 2 1598 2 903 12 990 2 1131 4 1185 2 1657 4 453 2 1247 2 745 2 1346 4 455 4 45 2 1134 8 162 2 46 2 1082 2 163 2 1308 2 759 4 
851 2 351 4 171 2 764 2 1045 2 352 4 1405 2 1521 2 712 2 1215 2 1625 2 865 6 1102 2 471 2 611 2 930 2 133 2 1012 2 1414 2 189 2 193 8 1114 10 476 8 1375 2 1485 4 1067 2 1486 2 262 4 444 2 1594 2 93 2 32 2 1335 2 1294 2 1337 6 1340 2 785 2 686 2 277 2 838 2 322 4 280 2 1598 2 903 12 990 2 1131 4 1185 2 1657 4 453 2 1247 2 745 2 1346 4 455 8 45 2 1134 8 162 2 46 2 1082 2 163 2 1308 2 759 4 
351 4 171 2 764 2 1045 2 352 4 1405 2 1521 2 712 2 1215 2 1625 2 865 6 1102 2 471 2 611 2 930 2 133 2 1012 2 1414 2 189 2 193 6 1114 10 476 6 1375 2 1485 4 1067 2 1486 2 262 4 444 2 1594 2 93 2 32 2 1335 2 1294 2 1337 6 1340 2 785 2 686 2 277 2 838 2 322 4 280 2 1598 2 903 12 990 2 1131 4 1185 2 1657 4 453 2 1247 2 745 2 1346 4 455 8 45 2 1134 8 162 2 46 2 1082 2 163 2 1308 2 759 4 
460 2 851 4 1040 2 1452 2 1455 2 230 2 1045 2 865 4 1268 4 1467 2 1469 2 1056 2 471 2 472 1 877 2 23 6 476 12 1485 4 1486 2 1067 4 260 6 481 2 262 4 682 1 681 2 32 4 1294 2 270 2 894 2 1073 6 686 2 1298 2 277 2 280 2 903 46 901 6 1303 2 45 4 1504 7 46 2 1082 2 1308 2 1086 2 916 6 498 6 1311 2 503 2 920 2 506 4 710 2 1521 2 712 2 1523 2 1322 2 926 2 1102 2 930 2 78 2 1326 2 310 6 1113 10 1114 2 517 2 732 1 91 4 93 2 1335 4 736 2 1337 24 1340 2 322 6 324 2 530 1 529 2 741 2 326 2 1131 4 1552 6 1346 6 1347 2 104 2 1134 2 753 4 759 4 336 6 113 4 1354 1 351 4 764 2 352 8 968 2 1572 6 126 2 1161 1 133 2 1578 2 976 2 977 2 1172 4 1375 2 140 6 986 8 1594 2 1178 6 785 2 394 2 1598 2 1386 2 990 2 1185 2 1190 2 162 2 995 2 163 2 1196 2 596 2 998 2 1202 2 1614 6 804 12 171 4 1003 6 175 2 1404 6 1405 2 1624 2 1625 2 1215 2 810 6 424 7 611 2 1412 2 1414 2 1419 2 189 2 1634 2 193 8 1424 6 1636 4 1425 2 1426 1 202 2 1234 2 444 2 619 2 1239 8 622 1 838 2 1433 2 213 2 1657 4 1247 2 843 2 453 2 216 2 218 1 1033 2 1447 4 1256 6 848 6 
460 2 336 6 113 4 1040 2 1452 2 230 2 1455 2 351 4 764 2 1045 2 352 8 1047 2 865 8 968 2 1268 4 1467 2 1469 2 126 2 1572 6 471 2 1056 2 133 2 1578 2 877 2 976 2 977 2 23 6 476 12 1172 4 1375 2 140 6 1485 4 1067 4 1486 2 986 8 260 6 481 2 262 4 681 2 1594 2 1178 6 32 4 1294 2 270 2 1073 6 894 2 785 2 1298 2 686 2 394 2 277 2 280 2 901 6 903 48 1598 2 1386 2 990 2 1185 2 1303 2 1190 2 45 4 162 2 46 2 995 2 1082 2 163 2 1086 2 1196 2 1308 2 998 2 596 2 916 6 498 6 1311 2 1614 6 1202 2 804 12 503 2 171 4 1003 6 920 2 1404 6 175 2 1405 2 710 2 506 8 1521 2 712 2 1624 4 1215 2 1625 2 1523 2 810 6 1322 2 1102 2 926 2 611 2 1412 2 930 2 1414 2 78 2 1326 2 1419 4 189 2 1634 2 310 6 193 8 1424 6 1113 10 1114 2 1636 8 1425 2 517 2 202 2 519 2 1234 2 91 4 444 2 619 2 93 2 736 2 1239 8 1335 4 1337 26 1340 2 322 6 838 2 213 2 1433 2 324 2 741 2 529 2 326 2 1131 4 1552 6 1657 4 453 2 843 2 1247 2 745 4 1346 6 216 2 1347 2 104 4 1134 6 1033 2 753 4 1447 4 758 2 759 4 1256 6 848 6 
460 2 336 6 113 4 1040 2 1452 2 230 2 1455 2 351 4 764 2 1045 2 352 8 1047 2 865 8 968 2 1268 4 1467 2 1469 2 126 2 1572 6 471 2 1056 2 133 2 1578 2 877 2 976 2 977 2 23 6 476 12 1172 4 1375 2 140 6 1485 4 1067 4 1486 2 986 8 260 6 481 2 262 4 681 2 1594 2 1178 6 32 4 1294 2 270 2 1073 6 894 2 785 2 1298 2 686 2 394 2 277 2 280 2 901 6 903 48 1598 2 1386 2 990 2 1185 2 1303 2 1190 2 45 4 162 2 46 2 995 2 1082 2 163 2 1086 2 1196 2 1308 2 998 2 596 2 916 6 498 6 1311 2 1614 6 1202 2 804 12 503 2 171 4 1003 6 920 2 1404 6 175 2 1405 2 710 2 506 8 1521 2 712 2 1624 4 1215 2 1625 2 1523 2 810 6 1322 2 1102 2 926 2 611 2 1412 2 930 2 1414 2 78 2 1326 2 1419 4 189 2 1634 2 310 6 193 8 1424 6 1113 10 1114 6 1636 8 1425 2 517 2 202 2 519 2 1234 2 91 4 444 2 619 2 93 2 736 2 1239 8 1335 4 1337 26 1340 2 322 6 838 2 213 2 1433 2 324 2 741 2 529 2 326 2 1131 4 1552 6 1657 4 453 2 843 2 1247 2 745 4 1346 6 216 2 1347 2 104 4 455 4 1134 6 1033 2 753 4 1447 4 758 2 759 4 1256 6 848 6 
460 2 851 2 1040 2 1452 2 1455 2 230 2 1045 2 1047 2 865 10 1268 4 1272 2 1467 2 1469 2 1056 2 471 2 877 2 1475 6 23 6 476 16 1485 4 1486 2 1067 4 260 12 481 2 262 4 681 2 32 4 1294 2 270 2 34 2 894 2 1073 6 686 2 1298 2 277 2 280 2 903 52 901 6 1303 2 45 4 46 2 1082 2 1308 2 1086 2 916 6 498 12 1311 2 1312 6 503 2 920 4 506 10 710 4 1521 2 712 2 1523 2 1322 2 926 2 1102 2 930 2 513 6 78 2 1326 2 310 12 1113 8 1114 6 517 2 519 2 91 6 92 6 93 2 1335 4 736 2 1337 24 1340 2 322 6 324 2 947 2 529 2 741 4 326 2 1131 4 1552 8 1346 6 745 4 1347 2 104 4 1134 6 753 4 758 2 759 4 336 8 113 4 351 4 764 2 552 6 352 8 968 2 1572 6 126 2 133 2 1578 2 1372 2 976 2 977 2 1172 4 1375 2 140 6 986 12 1594 2 1178 6 785 2 394 2 1598 2 1386 2 990 2 1185 2 396 2 1190 4 158 6 162 2 995 2 1195 6 163 2 1196 2 596 2 998 2 413 6 1202 2 1614 12 804 10 418 6 171 4 1003 12 175 2 1404 6 1405 2 1624 4 1625 2 1215 2 810 6 611 2 1412 2 1414 2 1416 2 1418 2 1222 2 1419 4 189 2 1634 2 193 10 1424 12 1636 10 1425 2 202 4 1234 2 444 2 619 2 1239 8 838 2 1433 2 213 2 1657 4 843 2 1247 2 453 2 216 2 455 4 1447 4 636 2 1256 6 848 6 
476 4 1375 2 1485 4 262 2 444 2 1045 2 352 2 1594 2 93 2 1521 2 1625 2 686 2 865 6 322 2 838 2 280 2 903 4 1598 2 990 2 1131 2 1657 4 745 2 471 2 455 4 45 2 133 2 930 2 1134 6 1414 2 162 2 189 2 193 6 1308 2 1114 4 759 2 
336 6 225 3 854 2 1452 2 1045 2 352 2 865 6 968 2 1051 2 1467 2 471 2 1056 2 133 2 877 2 977 2 476 4 1172 4 1375 2 1485 4 1486 2 986 8 481 2 262 2 1594 2 1293 2 1179 2 683 2 785 2 686 2 394 2 277 2 280 2 1598 2 903 28 990 2 789 2 1185 2 1303 2 1190 3 45 2 162 2 995 2 163 2 1308 2 596 2 998 2 804 4 171 4 920 3 175 2 1405 2 1521 2 1625 2 926 2 611 2 930 2 1414 2 307 2 189 2 1634 2 193 6 1113 2 1114 2 202 3 91 4 444 2 93 2 1335 4 1337 24 1243 2 322 2 838 2 324 2 529 2 1131 2 1657 4 1552 6 1247 2 745 2 1346 6 216 2 1347 2 750 2 1134 6 1033 2 753 2 1447 4 759 2 1256 6 
1594 2 1140 2 189 2 
1594 2 1140 2 189 2 
336 2 113 2 851 4 1452 2 351 4 764 2 352 4 1151 2 865 12 866 2 968 2 1268 2 1467 2 1572 2 563 4 1056 2 471 2 133 4 877 2 775 2 1372 4 977 2 1172 4 476 16 1485 4 1067 2 1486 2 986 2 481 2 262 2 1594 4 32 4 1595 2 1296 2 894 4 785 2 394 2 280 2 1300 4 903 24 690 2 1185 2 1303 2 1190 2 45 4 162 2 994 2 995 2 1082 2 163 2 596 2 998 2 1202 2 704 2 804 4 1097 2 171 4 175 2 1405 2 506 4 1521 2 1624 4 1215 2 1102 2 926 2 1323 2 428 2 611 2 78 2 435 2 1419 4 189 6 1634 2 193 12 1113 2 1328 2 1114 6 1636 4 84 2 728 2 830 2 939 4 1335 4 1337 16 835 2 1340 2 322 4 213 2 324 2 529 2 1131 2 1552 2 1657 4 1247 2 1346 6 745 4 1347 2 104 4 1439 2 455 4 1134 6 1140 2 753 6 1447 4 1256 6 759 2 
903 4 84 2 326 2 113 2 156 2 1119 2 1572 2 804 2 1412 2 1417 2 994 2 46 2 1337 2 1296 2 785 2 273 2 1113 2 
336 2 851 4 1452 2 351 4 764 2 352 4 966 2 865 12 866 1 968 2 1268 2 1467 2 1572 2 563 4 1056 2 471 2 133 4 877 2 775 2 1372 4 977 2 981 2 1172 4 476 16 1485 4 1067 4 1486 2 986 2 481 2 262 2 1594 4 32 4 1296 2 894 4 785 2 394 2 280 2 1300 4 903 24 1185 2 1303 2 1190 4 45 4 1607 2 162 2 994 2 995 2 1082 2 163 2 596 2 998 2 1202 2 1205 2 704 2 804 2 1097 4 171 4 175 2 1405 2 506 4 1521 2 712 2 1624 4 1215 2 1102 2 926 2 1323 2 428 2 611 2 78 2 435 2 1419 4 189 6 1634 2 193 12 1328 2 1114 6 1636 4 84 2 728 2 830 2 939 4 1335 4 1337 16 1340 2 322 4 213 2 324 2 529 2 1131 2 1552 2 1657 4 1247 2 1346 6 745 4 1347 2 104 4 1439 2 455 4 1134 6 457 2 1140 2 753 6 1447 4 1256 6 759 2 
336 2 113 2 851 4 1452 2 351 4 764 2 352 4 865 12 866 1 968 2 1268 2 1467 2 1572 2 563 4 1056 2 471 2 133 4 877 2 775 2 1372 4 1580 2 977 2 1172 4 476 16 1485 4 1067 4 1486 2 986 2 481 2 262 2 1592 2 1594 4 32 4 1296 2 894 4 785 2 394 2 280 2 1300 4 903 24 1301 2 1185 2 1303 2 1190 2 45 4 162 2 994 2 995 2 1082 2 163 2 291 2 596 2 998 2 1202 2 704 2 804 4 1097 2 171 4 708 2 175 2 1405 2 506 4 1521 2 712 2 1624 4 1215 2 1102 2 926 2 1323 2 428 2 611 2 78 2 435 2 1419 4 189 6 1634 2 193 12 1113 2 1328 2 1114 6 1636 4 84 2 728 2 830 2 939 4 1335 4 1337 16 1340 2 322 4 213 2 324 2 529 2 1131 2 1552 2 1657 4 1247 2 1346 6 745 4 1347 2 104 4 1439 2 455 4 1134 6 1140 2 753 6 1447 4 1256 6 759 2 
852 2 853 2 854 2 855 78 856 3 3 2 857 2 6 3 5 2 8 2 861 2 863 4 9 2 866 5 11 40 871 6 873 22 15 2 14 80 874 16 876 2 17 2 877 82 18 4 878 80 19 2 22 4 883 2 25 6 26 3 888 40 27 1 29 4 31 2 892 2 893 2 34 2 894 18 35 2 36 36 37 10 38 6 896 2 899 2 902 2 903 1174 904 36 905 2 42 3 909 20 47 24 912 3 50 2 914 6 51 78 52 156 53 2 54 2 55 112 918 2 58 10 59 10 919 2 61 2 920 16 921 2 922 3 923 2 924 78 63 3 926 84 70 2 71 8 932 2 931 3 77 2 934 80 82 2 86 18 937 2 91 12 94 38 95 38 96 2 941 2 97 2 98 14 943 2 99 4 944 2 946 3 947 2 100 184 101 4 105 2 106 2 949 2 950 2 952 6 953 104 954 2 110 2 955 2 114 2 116 2 958 20 960 2 118 2 962 36 961 38 963 2 965 2 967 2 968 2 969 3 123 2 122 2 125 2 971 2 131 2 132 2 134 6 135 2 973 86 136 3 975 4 137 66 977 2 978 8 979 2 139 2 980 2 982 78 983 2 984 78 986 126 143 48 146 8 148 3 147 2 149 4 988 2 989 24 153 2 154 2 991 12 159 2 993 10 995 312 996 34 163 2 165 2 998 2 997 2 166 1 999 2 168 2 1001 1 170 2 171 8 172 6 173 2 175 8 1004 10 1005 2 177 2 178 2 1008 2 179 2 182 2 1011 1 185 2 184 38 1014 2 1013 2 186 2 187 2 1016 2 1017 2 190 2 192 78 1018 2 194 2 195 2 196 2 197 38 201 2 202 46 1019 3 1021 2 206 3 1022 2 1023 2 210 2 1024 2 211 2 1025 2 212 2 215 2 1027 2 216 2 1030 22 219 2 1031 24 1035 2 224 2 1036 2 225 2 226 2 227 2 1041 1 228 2 229 2 1042 158 230 22 1044 2 231 38 232 2 1046 2 233 2 234 2 235 2 238 10 239 2 1049 22 1048 14 1050 2 240 2 241 2 1053 2 1054 2 244 2 1056 2 245 2 246 8 1057 2 247 2 1061 22 1063 2 254 4 256 18 1068 2 1069 40 261 2 263 2 265 2 266 38 1071 2 268 3 1072 6 269 2 1074 12 275 78 279 2 282 2 283 2 1079 2 1080 6 286 10 1081 2 287 2 1085 2 1084 2 289 2 1086 2 290 2 1089 2 1090 2 1093 2 1092 2 1091 2 1094 2 293 78 294 2 1098 2 296 2 297 4 1103 2 300 4 299 4 302 2 1107 10 305 2 1108 2 308 2 311 1 1113 2 312 2 1115 4 1116 38 314 2 1117 2 315 10 317 2 316 2 1118 2 319 6 320 2 1121 2 1125 2 324 2 327 2 1130 16 329 2 1136 2 1135 2 330 1 331 2 332 2 1141 2 336 32 339 3 340 78 341 78 342 80 343 4 347 2 348 2 353 2 354 2 355 2 1150 24 356 2 360 2 1154 2 1156 4 1157 2 361 2 363 2 364 2 1158 2 367 2 369 2 1159 80 1160 2 1162 4 372 3 374 2 375 2 1169 2 377 2 379 2 1170 2 380 24 1172 402 381 2 382 2 1174 2 384 2 385 2 1175 2 387 2 390 38 391 2 1179 2 392 2 393 2 1180 2 394 2 1182 2 395 15 1183 22 1185 2 1186 38 396 4 1189 2 1188 4 1187 2 1190 110 401 2 402 38 403 82 1194 2 406 8 1196 2 1197 3 407 2 408 2 1199 2 411 6 412 16 1201 2 414 15 416 2 415 16 417 2 419 15 420 2 1208 4 421 2 1210 2 422 61 1211 66 1212 4 1214 2 1213 2 423 12 425 4 427 80 429 2 1218 2 1219 2 432 2 433 2 1223 16 1222 2 1221 102 434 120 1224 2 436 106 439 2 1226 14 440 2 441 8 1227 80 1229 2 442 2 1231 9 1232 26 1234 16 443 2 446 10 1235 2 445 2 1237 2 448 2 1241 4 449 2 1243 2 1244 4 1245 2 1246 76 1247 2 454 2 1249 2 1250 158 1256 1100 461 2 460 8 462 2 1257 2 1258 4 1261 2 1262 2 1263 2 464 2 1264 2 1266 2 466 2 467 2 468 2 1269 2 1274 2 1273 3 1272 2 1275 1 469 2 470 2 1277 2 1281 20 473 2 474 3 1282 3 1284 2 1285 2 475 2 1289 4 479 2 481 302 1292 2 483 2 1297 2 484 2 1298 2 485 2 1299 6 486 80 489 2 1302 2 1303 2 1305 3 1306 2 491 2 1307 156 493 2 494 1 495 2 497 2 1309 158 499 8 1311 2 500 2 1313 2 1315 3 503 8 1316 2 1317 14 506 184 507 2 1319 2 1321 156 1322 2 509 24 1325 2 510 2 511 2 514 2 1327 2 515 234 516 2 1329 2 518 4 1332 2 520 13 521 31 522 2 1335 8 1334 2 524 2 1337 966 1338 2 525 20 1341 2 1343 18 1342 4 526 2 529 2 1344 2 531 2 532 24 533 2 534 2 1346 10 1348 2 1347 2 1349 2 535 2 536 3 537 8 540 38 542 2 543 2 1351 2 546 2 547 100 1353 14 1355 558 548 4 551 20 1358 78 554 6 553 2 555 2 556 2 1364 2 1363 2 558 10 1366 2 560 2 1368 14 1369 4 1373 2 565 3 566 2 1374 14 568 2 571 38 572 3 1376 2 1377 3 573 2 575 2 576 2 578 2 577 2 1380 38 1381 2 1382 124 585 2 586 60 1388 78 1389 2 589 2 1390 60 1391 2 1392 2 591 6 1394 76 1395 2 593 2 1396 4 594 2 597 2 1399 4 1400 2 598 3 602 2 603 2 604 38 1402 104 1403 2 606 2 1405 2 1407 2 608 2 609 2 1410 2 611 2 612 16 1413 16 1418 2 1421 2 1422 2 1423 2 1425 4 615 2 1427 10 1429 2 619 8 1430 76 620 2 621 2 625 2 624 6 1433 2 626 1 1435 2 1436 2 627 4 1438 24 629 38 631 2 1442 2 1441 80 1444 78 1446 2 636 2 1447 480 637 4 1450 60 1449 2 639 4 1451 2 640 4 641 2 1452 4 644 1 1456 2 646 2 1460 2 647 2 1461 2 648 2 649 6 653 2 1464 2 654 2 655 78 657 2 1466 2 659 4 1467 8 660 2 1468 3 662 12 1471 2 663 234 664 20 666 8 667 2 1473 2 668 78 669 80 670 13 1478 4 673 2 1481 2 1483 32 674 2 1484 2 677 1 678 2 1486 2 680 2 684 12 1491 78 685 26 1492 2 688 2 687 4 689 3 1493 2 1494 2 1495 18 1497 2 1499 2 1500 9 1501 2 692 2 1505 2 693 2 694 2 695 2 1507 2 696 78 1511 2 698 4 700 12 703 2 1513 2 705 2 1516 2 1519 3 710 84 1522 4 1525 2 1526 4 713 2 1527 2 717 14 1530 4 1531 12 1533 2 720 80 1534 2 723 2 1536 3 1538 2 1541 78 1542 38 737 2 738 2 1545 80 739 8 740 2 1547 2 1548 3 741 46 742 80 743 2 744 2 1550 12 1551 2 1552 18 746 3 749 166 748 2 1553 2 1554 8 752 2 753 2 754 6 755 2 756 2 1557 2 1558 4 1559 38 760 1 1560 80 1561 2 763 2 1562 4 1563 2 1565 86 766 2 1566 3 768 112 771 2 772 32 773 2 774 80 1576 4 1579 8 777 2 778 7 1582 2 779 8 1583 2 1585 1 781 3 1587 20 782 22 1590 1 783 2 785 2 1596 8 1600 6 1601 6 789 2 1602 2 1603 52 1605 6 791 2 793 2 796 6 795 2 1608 60 1609 14 1611 6 797 2 1612 38 798 2 800 38 1613 38 801 14 1615 3 1617 2 804 10 1618 38 1620 4 1619 38 1621 10 1622 3 807 20 1623 2 809 80 812 10 813 18 1627 2 1628 6 1630 4 1634 2 1635 2 822 2 823 3 1636 178 826 3 827 2 1637 2 1640 2 1639 3 1642 3 1641 2 1645 2 1647 2 1650 54 1652 2 836 34 1653 2 839 3 1655 2 840 8 1656 34 844 2 1658 4 1659 2 1663 2 1665 2 1666 6 
336 2 226 2 1094 2 315 2 202 2 986 2 91 2 1645 2 920 2 232 2 1337 2 238 2 279 2 946 2 903 2 741 6 1552 2 454 2 216 2 791 2 1190 2 1136 2 993 4 794 2 
336 2 226 2 1094 2 315 2 202 2 986 2 91 2 1645 2 920 2 232 2 1337 2 238 2 279 2 946 2 903 2 741 6 1552 2 454 2 216 2 791 2 1190 2 1136 2 993 4 794 2 
336 2 226 2 1094 2 315 2 202 2 986 2 91 2 1645 2 920 2 232 2 1337 2 238 2 279 2 946 2 903 2 741 6 1552 2 454 2 216 2 791 2 1190 2 1136 2 993 4 794 2 
1512 2 1171 2 547 2 1146 2 142 2 986 2 202 3 56 2 958 4 551 4 1124 3 1072 2 554 2 1337 4 684 2 272 4 297 2 450 2 423 2 837 2 1075 2 903 10 813 4 532 5 871 4 991 2 1603 2 454 2 216 2 664 4 1438 3 1190 3 1281 4 1630 2 1531 2 1221 6 1031 3 79 2 754 2 914 2 
1512 2 547 2 1146 2 56 2 958 4 551 4 1621 2 554 2 297 2 423 2 813 4 871 4 664 4 1281 4 1531 2 1630 2 1221 6 79 2 1171 2 202 2 986 2 142 2 1124 2 1072 2 1337 4 684 2 272 4 450 2 837 2 1075 2 903 10 532 4 991 2 1603 2 454 2 216 2 1438 2 1190 2 793 2 1031 2 796 2 754 2 914 2 
1512 2 547 2 1146 2 56 2 958 4 551 4 1621 2 554 2 297 2 423 2 813 4 871 4 664 4 1281 4 1531 2 1630 2 1221 6 79 2 1171 2 202 2 986 2 142 2 1124 2 1072 2 1337 4 684 2 272 4 450 2 837 2 1075 2 903 10 532 4 991 2 1603 2 454 2 216 2 1438 2 1190 2 793 2 1031 2 796 2 754 2 914 2 
1512 2 547 2 1146 2 56 2 958 4 551 4 1621 2 554 2 297 2 423 2 813 4 871 4 664 4 1281 4 1531 2 1630 2 1221 6 79 2 1171 2 202 2 986 2 142 2 1124 2 1072 2 1337 4 684 2 272 4 450 2 837 2 1075 2 903 10 532 4 991 2 1603 2 454 2 216 2 1438 2 1190 2 793 2 1031 2 796 2 754 2 914 2 
1512 2 547 2 1146 2 56 2 958 4 551 4 1621 4 554 2 297 2 423 2 813 4 871 4 664 4 1281 4 1531 2 1630 2 1221 6 79 2 1171 2 202 2 986 2 142 2 1124 2 1072 2 1337 4 684 2 272 4 450 2 837 2 1075 2 903 10 532 4 991 2 1603 2 454 2 216 2 1438 2 1190 2 793 4 1031 2 796 4 754 2 914 2 
1530 2 1519 2 973 2 1360 2 892 2 1319 2 495 2 
1519 2 1105 2 941 2 319 2 1589 2 783 2 
1330 1 616 2 257 2 802 2 1002 1 1514 2 731 2 1428 2 264 2 1003 2 174 2 1177 2 940 2 1337 8 1405 2 1362 2 1267 1 1127 2 903 10 770 1 368 2 490 2 430 2 910 2 249 2 614 1 
1557 2 985 2 1616 2 640 2 548 2 1258 2 1621 3 421 2 1072 6 554 6 709 2 1337 6 684 6 297 2 423 6 624 4 903 6 813 12 532 16 609 2 871 4 1554 2 793 2 1531 6 796 2 754 6 1141 2 914 6 821 2 952 4 
903 1 1599 2 1558 2 1638 2 16 2 664 2 504 2 1251 4 549 2 551 2 1281 2 972 2 1648 2 1337 1 806 7 438 2 1535 1 584 2 
1599 2 1638 2 1558 4 16 4 664 2 504 2 1251 4 549 2 551 2 972 2 1281 2 1648 2 806 6 438 4 584 2 
903 1 1599 6 1638 2 1558 8 16 8 664 2 504 2 1251 4 549 2 551 2 972 8 1281 2 1648 2 1337 1 806 10 438 8 1535 1 584 2 
1638 2 1558 2 16 2 664 2 504 2 1251 2 549 2 551 2 1281 2 1648 2 806 2 438 2 584 2 
112 4 222 8 341 24 1559 4 342 6 855 6 1355 124 1560 6 1452 8 1356 2 1042 16 550 26 1457 4 231 4 1358 10 1458 2 649 2 961 4 1565 8 655 6 866 4 559 10 659 2 1159 6 14 6 662 4 1574 8 663 92 1164 6 774 6 666 4 877 14 668 6 669 6 670 7 878 6 880 8 20 2 982 6 1064 26 1172 88 984 4 1069 2 481 58 1588 24 1591 2 266 4 1382 12 146 4 33 24 1491 10 275 6 788 2 39 2 687 6 903 150 395 7 1601 2 486 24 1498 2 1500 2 1606 4 1388 6 589 8 1307 17 995 58 591 2 402 4 51 6 696 10 52 18 408 8 698 4 1612 4 1309 16 411 2 1310 2 1203 4 293 10 600 12 1618 4 707 4 1402 42 506 28 924 10 1321 36 66 18 67 4 926 14 72 4 303 24 427 6 715 10 76 90 1413 8 515 84 436 42 934 6 192 24 191 90 1226 11 83 2 199 2 201 8 730 10 729 2 1541 6 1020 2 521 15 1337 134 94 4 95 4 1545 6 942 1 742 6 100 34 629 4 628 4 1250 16 749 50 217 2 1441 6 537 4 1253 4 1444 6 953 22 1447 112 1256 248 
408 2 699 2 698 2 1398 2 1309 4 1310 2 701 2 545 2 702 2 956 2 293 2 342 2 1355 6 501 2 1560 2 344 2 1452 2 1453 2 1042 4 1358 2 1458 2 1149 2 964 2 1565 6 1406 2 506 38 236 2 924 2 651 4 1321 2 866 2 559 2 562 2 68 2 926 2 927 2 303 2 14 2 715 2 815 2 1163 2 1472 2 877 2 669 2 933 2 880 2 720 6 882 2 935 2 83 2 1172 20 569 2 570 2 1288 2 1228 2 201 2 730 2 729 2 1588 2 481 2 1593 2 1123 2 1337 44 33 2 1491 2 1545 2 274 4 788 2 1128 2 1129 4 903 46 687 4 1077 2 1345 2 1498 2 1605 4 398 2 628 2 1250 4 1441 2 589 2 1307 2 1443 2 1508 2 995 2 696 2 1556 2 52 2 1447 20 292 2 757 2 1256 44 
1559 4 342 4 1355 24 855 4 1560 4 1356 2 1452 2 1042 10 1357 2 231 4 1358 4 961 4 1152 2 1565 6 655 4 1569 8 1159 4 14 4 662 2 875 16 663 24 774 4 666 4 1472 2 1165 2 877 6 668 4 669 4 670 4 878 4 1476 2 982 4 1172 36 569 2 481 28 1591 2 266 4 1382 14 146 4 1491 4 275 4 788 2 687 2 903 78 40 4 486 8 1387 4 1498 2 286 2 1388 4 589 2 1307 10 995 30 591 2 402 4 51 4 696 6 52 10 292 10 408 2 409 8 1612 4 1309 10 411 2 1310 2 702 2 293 4 1618 4 1402 8 506 14 1520 4 924 4 1321 6 926 6 427 4 928 16 1413 4 1633 4 515 24 436 16 1111 4 934 4 83 2 201 2 88 4 729 2 617 4 1541 4 521 8 1337 70 95 4 94 4 1545 4 945 8 100 30 841 2 629 4 1250 10 749 8 1441 4 845 8 1443 10 1444 4 1445 32 1556 10 1447 44 1256 104 
408 2 1309 6 1310 2 701 2 342 4 293 2 1355 8 1560 4 1452 2 1042 6 1358 2 1458 2 649 2 1565 4 506 14 924 2 1321 2 866 2 926 2 659 2 14 4 662 2 1472 2 666 2 877 2 1413 4 669 4 20 2 1226 2 83 2 1172 14 201 2 984 2 729 2 481 12 1020 2 521 6 146 2 1337 26 1491 2 1545 4 788 2 903 28 687 2 395 2 1601 2 100 6 1498 2 1250 6 537 2 1441 4 589 2 1307 2 995 12 696 2 953 10 1447 14 52 2 1256 40 
1367 2 

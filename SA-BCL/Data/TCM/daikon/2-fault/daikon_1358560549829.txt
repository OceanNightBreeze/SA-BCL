#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 147 623 1225 227 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3_19()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.Quant:memberOf(F[F)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_21(I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3R_73()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_169()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_115()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_88()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:BeginToken()C
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24199 | = null
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_80()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_76()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_87()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_2_1(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltwiseGT([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_135()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_61()Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3_13()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ProglangType:dimensions()I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_124()Z
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_25(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_86()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3_5()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_69()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:arity()I
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:FillBuff()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:lte(II)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_35()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_133()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:subsetOf([J[J)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_3_28()Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_108()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptSlice1:arity()I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsGTE([II)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:getConfidence()D
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3_17()Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3_14()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3_15()Z
daikon.Quant:slice([III)[I
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.NodeOptional:present()Z
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_89()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eq(JJ)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_54()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_67()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3_27()Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:lt(II)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.MathMDE:sign(I)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_57()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.Intern:internSubsequence([JII)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.visitor.FormatCommand:getCommand()I
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern:numIntArrays()I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:logDetail()Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_3_20()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3R_137()Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:isArray()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexGTE([I[I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:isScalar()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_98()Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_58()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_110()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:gt(II)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_123()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:ne(II)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Invariant:justified()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_48()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_134()Z
daikon.diff.InvMap:InvMap()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:getEndColumn()I
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:readChar()C
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_1()Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:noDups([I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:size()I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eq(DD)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltsEqual([II)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptName:isEnterPoint()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:eltsLTE([II)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_101()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLTE([I[I)Z
daikon.PptSlice0:arity()I
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:toString()Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_96()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
150 2 682 2 1221 2 870 2 1123 2 1144 2 488 2 306 4 431 2 
1082 6 308 2 1159 2 404 2 1137 6 1234 6 1163 2 947 2 1035 2 1274 2 1330 2 
150 2 774 2 724 6 789 2 953 6 1108 2 639 4 12 2 231 4 864 6 1123 2 772 6 25 2 
150 6 518 8 951 4 434 30 217 8 562 2 728 8 1203 10 19 10 1244 10 332 4 442 10 44 6 1123 6 643 16 609 26 1228 16 420 12 568 16 1231 4 764 2 359 6 784 4 143 2 272 10 119 2 992 2 576 2 651 2 1304 8 
236 4 1252 6 
642 2 
327 2 913 2 434 6 1020 2 1203 4 19 2 1204 2 1244 2 332 2 442 2 756 2 44 2 643 2 1228 2 609 4 420 2 568 2 738 2 1351 2 927 2 272 2 810 2 1304 2 
421 6 420 5 951 2 384 4 568 8 434 14 1277 2 357 4 19 4 1244 4 442 4 1287 2 272 4 643 8 1228 8 609 12 981 6 
370 2 460 2 1337 2 37 4 974 10 374 2 600 4 729 2 731 2 902 4 604 2 1246 2 157 4 21 2 1140 2 795 4 1023 4 43 4 416 4 1025 2 940 2 1124 10 138 2 1268 4 185 2 1032 2 387 62 1352 4 1060 2 189 2 667 2 694 2 141 6 114 4 1065 2 167 4 1038 8 930 4 325 2 213 14 
463 2 65 2 1266 2 642 2 798 2 1029 2 1300 2 510 2 898 2 496 2 
309 2 1221 2 43 4 417 2 181 2 505 2 1298 2 1270 2 318 2 319 2 1063 2 594 2 809 2 895 2 1238 2 1014 2 430 2 1152 2 370 2 150 4 1276 2 970 2 1201 2 1242 2 1307 2 677 4 977 4 1023 2 1284 2 24 2 1123 4 446 2 980 4 1081 2 1083 2 1211 2 696 2 828 2 1038 2 1289 2 576 2 458 2 1041 2 1093 2 
150 4 434 54 703 2 1094 2 217 6 405 6 346 4 582 4 1279 4 1203 6 19 16 1244 16 332 2 1310 8 1363 2 442 16 44 4 1123 4 643 32 609 48 1228 32 981 6 204 4 420 22 421 6 567 2 568 32 384 4 569 6 357 4 666 4 359 4 272 16 253 6 191 6 992 2 274 2 539 2 1304 18 
1038 2 374 2 141 2 
777 2 371 2 107 2 529 2 727 10 1116 2 1243 2 1214 22 544 2 396 2 939 2 786 2 417 2 473 2 
0 3 702 2 704 1 78 2 256 1 793 2 954 2 1220 8 707 2 83 3 259 2 180 2 546 2 548 1 85 2 799 1 183 1 1230 2 5 2 1054 2 91 2 961 2 892 2 1062 6 270 2 1147 2 963 1 1148 2 719 2 721 3 367 5 273 2 558 3 559 2 811 2 1155 8 14 4 18 2 100 2 285 2 1165 4 379 2 978 2 1313 2 1247 2 823 4 1170 2 903 2 1171 4 383 2 1317 2 1248 32 1249 2 906 3 109 2 827 2 739 3 1321 2 388 2 488 2 741 1 984 2 389 2 390 2 299 2 746 2 909 2 1178 2 990 3 301 2 1256 12 1257 2 831 2 1089 6 1331 6 121 2 1332 1 1335 2 497 2 912 1 36 2 499 2 655 2 1261 2 581 2 131 2 916 1 840 16 1262 2 413 2 1263 6 220 2 313 3 918 16 221 2 47 2 1345 2 662 4 850 4 316 2 854 4 762 1 924 2 1005 2 665 2 512 2 668 2 1196 2 1356 2 769 2 1272 2 1111 2 144 2 929 3 1012 2 934 8 1275 1 597 16 150 34 60 2 235 2 152 24 331 12 603 32 1282 1 679 1 156 2 862 3 444 3 1123 32 159 2 608 3 941 2 1206 2 686 2 689 4 1127 1 945 2 1030 2 1209 1 531 2 163 2 1368 2 337 2 454 2 74 24 1134 2 1290 16 618 2 
125 2 
150 2 1340 2 
150 4 1174 2 208 2 
1043 12 1044 26 705 132 347 6 1 2 349 4 1047 112 2 2 350 2 4 244 708 6 352 2 709 8 353 204 1050 2 355 4 711 192 1053 4 7 28 1059 2 1061 2 717 4 10 2 361 2 718 28 362 2 1064 2 1066 2 364 2 366 8 1071 2 723 16 1073 4 1076 2 725 6 372 6 1078 6 373 6 730 4 376 24 733 28 20 2 23 22 378 2 1080 328 734 92 381 2 735 6 382 2 737 2 385 2 386 60 28 6 1084 2 742 4 391 20 31 4 393 2 34 2 1088 2 1090 2 398 4 750 2 1095 2 751 2 752 4 1096 566 408 2 409 6 40 2 410 6 411 2 412 4 414 2 41 22 1099 20 757 4 415 2 758 4 46 4 45 2 760 12 1103 32 1104 2 49 26 50 20 423 30 763 2 425 84 765 6 766 10 52 4 53 6 54 12 55 2 1112 6 1113 4 57 2 432 2 59 2 433 2 435 4 62 12 1117 198 775 2 438 2 1120 12 1121 432 445 2 1123 10 66 2 776 4 1125 20 67 2 1126 46 448 290 1128 228 1129 8 450 2 68 2 1130 2 1132 6 782 20 783 14 71 2 453 6 75 2 787 4 456 2 1135 2 77 2 462 2 790 88 791 6 464 2 465 2 466 6 1138 198 468 4 81 14 1139 26 469 46 797 2 1142 198 800 198 474 8 475 26 88 2 801 6 802 6 90 106 92 4 808 4 811 2 1149 6 1150 432 1153 4 478 2 812 6 94 2 1154 2 479 336 480 2 1157 4 481 2 1160 386 1161 4 482 26 96 2 483 2 1164 64 819 2 820 2 103 2 104 2 1167 18 1168 68 822 4 105 6 485 6 824 14 106 48 825 2 1173 2 110 4 1176 30 1177 8 487 94 111 4 112 198 491 2 115 2 116 2 1180 54 118 6 830 4 494 30 832 4 122 10 123 2 124 30 498 2 835 2 1185 6 129 6 130 4 132 2 838 6 839 2 841 2 1186 26 842 6 133 4 134 2 135 46 843 2 846 8 845 2 848 2 849 2 1190 2 1191 14 506 4 507 2 508 30 856 4 509 6 1193 6 513 2 142 6 1198 2 145 2 148 6 857 2 150 10 520 30 859 2 521 160 151 16 860 2 861 4 155 2 526 2 161 4 527 2 162 2 1208 6 1210 6 530 6 866 2 867 30 164 2 166 4 868 6 535 244 168 30 537 2 872 2 171 6 540 26 172 4 541 60 875 328 1219 2 175 50 880 6 881 2 178 4 179 4 1222 6 1223 2 883 2 885 6 547 2 549 18 886 8 182 6 1229 4 888 4 184 22 889 132 553 8 186 46 188 2 190 4 554 2 893 106 557 2 896 4 1237 2 900 4 901 2 195 6 196 4 199 4 201 60 563 118 203 6 565 2 905 24 1250 2 570 12 205 4 1253 8 209 66 1255 8 211 2 574 2 1258 2 575 4 212 14 911 2 214 2 578 198 579 2 1259 2 914 12 216 2 917 2 218 6 583 4 919 140 920 4 223 10 1265 12 922 18 224 4 225 2 1267 6 587 14 226 2 589 6 926 4 228 2 229 60 928 12 230 2 595 2 233 2 234 6 596 224 935 2 237 48 238 64 598 2 937 86 1280 6 1281 2 599 2 239 2 1283 4 1285 2 242 182 1286 82 245 112 944 4 611 2 946 14 612 20 247 4 248 4 948 4 249 2 251 112 614 4 615 2 616 6 617 30 1292 10 952 2 619 182 1293 2 620 2 621 26 257 2 1295 6 955 10 1296 198 622 98 956 6 261 2 262 2 264 6 624 2 959 2 627 4 1299 376 960 2 268 2 269 2 628 28 962 4 271 2 1302 6 965 12 630 4 967 2 633 2 1303 2 275 244 968 2 276 2 277 2 278 2 972 4 636 6 279 2 280 16 281 12 640 30 282 26 284 4 288 8 641 52 289 2 979 2 1314 4 290 74 1315 2 644 8 647 4 983 2 1320 2 1322 4 294 2 296 4 1323 2 295 2 1324 2 297 2 298 16 986 2 988 6 649 4 302 4 991 2 303 4 996 2 305 2 1333 2 1334 2 307 6 997 6 1338 12 312 28 1341 6 1342 2 659 6 658 8 1000 2 315 70 1002 30 1344 26 1347 2 1348 2 664 2 1007 198 1008 2 320 112 1354 6 1009 46 669 20 1010 22 1011 6 1013 4 324 4 670 2 1015 2 1357 2 672 8 328 8 675 6 1359 6 1360 8 1019 2 1018 2 678 4 681 4 683 6 1024 10 1364 2 685 6 1365 204 1366 2 334 2 690 2 336 2 1031 2 1369 2 695 6 1370 6 339 8 698 2 1372 2 1374 8 1036 192 1037 6 1040 20 1377 26 
1022 2 834 2 169 1 1306 2 
1306 2 459 2 
452 2 1187 2 784 2 1350 2 1038 2 1306 2 1183 2 
1306 2 998 2 1183 2 
70 2 1306 2 1183 2 
1022 2 8 2 1004 2 
1306 2 1183 2 
1004 2 1232 2 
788 2 1306 2 
1195 2 1022 2 1004 2 
222 2 1022 2 1091 2 
86 2 1022 2 958 2 
1022 2 330 2 1098 2 
701 2 1022 2 1162 2 
1336 2 1004 2 
61 2 1306 2 
222 2 833 2 
1092 2 958 2 
194 2 330 2 
701 2 748 2 
335 2 1004 2 
1309 2 701 2 
200 2 330 2 
773 2 958 2 
222 2 1301 2 
1195 2 1022 2 699 2 1004 2 
1195 2 1022 2 699 2 1004 2 206 2 
1022 2 461 2 1004 2 
1022 2 1004 2 1192 2 
551 2 476 2 605 2 26 2 
653 2 528 2 1218 4 403 4 635 2 936 2 1325 2 51 2 1214 6 441 2 755 2 514 2 202 2 1087 2 1182 2 950 2 957 2 577 2 
1022 2 177 2 
523 2 1350 2 1038 2 907 2 
452 2 523 2 1350 2 1038 2 815 2 907 2 
784 2 1350 2 1038 2 1306 2 1183 2 1079 2 
1202 2 1014 2 
784 2 1350 2 588 2 1038 2 
673 2 330 2 
701 2 489 2 
222 2 1227 2 
1273 2 958 2 
701 2 726 2 958 2 
701 2 1312 2 958 2 
701 2 522 2 958 2 
701 2 921 2 958 2 
794 6 1350 2 693 6 394 2 768 2 989 2 1068 2 1038 2 
1004 2 796 2 
285 2 
702 2 78 2 879 2 882 2 1052 2 799 2 6 2 625 2 1057 2 1062 6 270 2 1148 2 719 2 811 2 477 2 14 2 15 2 100 2 1165 4 102 2 379 2 1313 2 1247 2 823 4 566 2 1171 4 903 2 1248 6 109 4 488 2 388 2 301 2 1256 8 1329 4 1089 2 1331 4 121 2 1335 2 912 2 36 2 581 2 406 2 39 2 840 6 1262 2 1263 2 220 2 662 2 854 4 1005 2 512 2 668 2 1356 2 769 2 1111 2 1012 2 934 2 150 26 603 4 331 8 439 2 1123 26 941 6 1206 2 686 4 689 2 945 2 1030 2 163 2 337 2 692 4 1371 2 536 2 341 2 1134 2 618 2 
702 2 78 2 348 2 882 2 546 1 85 1 1052 2 799 2 6 2 625 2 1057 2 1062 6 270 2 1148 2 719 2 273 2 811 2 477 2 14 2 15 2 100 2 1165 4 379 2 1313 2 1247 2 823 4 1171 4 903 2 1248 6 109 2 488 2 388 2 301 2 1256 8 1329 4 1089 2 1331 5 121 2 1335 2 912 2 36 2 1260 2 581 2 406 2 39 2 840 6 1262 2 1263 2 220 2 662 2 854 4 1005 2 1006 2 512 2 668 2 1356 2 769 2 1111 2 1012 2 934 2 150 26 603 4 331 8 439 2 1123 26 941 6 1206 2 686 4 689 2 945 2 1030 2 163 2 337 2 692 4 1371 2 536 2 341 2 1134 2 618 2 
187 2 
1145 2 400 2 
308 2 1217 2 1137 6 404 4 501 4 1097 4 1264 2 82 2 1003 2 1224 2 471 4 1051 2 663 2 1055 2 552 2 1234 6 1062 4 767 2 1356 2 1111 2 966 2 811 2 1074 2 517 2 899 4 58 10 150 12 16 2 1361 2 1021 2 638 4 1308 2 817 2 976 4 863 2 1165 2 606 2 1313 2 1123 6 1247 2 823 2 1027 8 291 2 486 2 942 8 687 2 1082 6 1207 2 691 2 108 2 1030 2 29 2 779 2 648 2 947 4 1035 2 1328 2 342 2 1134 2 399 2 
308 2 1217 2 404 4 1137 6 501 4 1097 4 82 2 1003 2 1224 2 471 4 1051 2 663 2 1055 2 552 2 1234 8 1062 4 321 2 767 2 1356 2 1111 2 1274 2 966 2 811 2 1074 2 517 2 58 10 899 4 150 12 16 2 1361 2 1021 2 638 4 1308 2 817 2 976 4 863 2 1165 2 606 2 1123 6 1313 2 1247 2 823 2 1027 8 291 2 486 2 942 8 687 2 1082 8 1207 2 691 2 108 2 1030 2 29 2 779 2 648 2 947 4 1035 2 573 2 493 4 342 2 1134 2 399 2 
687 2 899 4 16 2 404 2 1137 2 552 2 1361 2 501 2 29 2 648 2 1234 2 638 4 947 2 817 2 82 2 606 2 1003 2 1074 2 
1217 2 1137 4 404 4 501 4 1097 4 1264 2 82 2 1003 2 1224 2 471 4 1051 2 663 2 1055 2 552 2 1234 6 1062 4 767 2 1356 2 1111 2 1274 2 966 2 811 2 1074 2 517 2 899 4 58 6 150 12 16 2 1361 2 1021 2 638 4 1308 2 817 2 976 4 863 2 1165 2 606 2 1313 2 1123 6 1247 2 823 2 1027 4 291 2 486 2 942 4 687 2 1082 6 1207 2 691 2 108 2 1030 2 29 2 779 2 648 2 947 4 1035 2 1328 2 342 2 1134 2 399 2 
1217 2 1137 6 404 4 501 4 1097 4 1264 2 82 2 1003 2 1224 2 471 4 1051 2 663 2 1055 2 552 2 1234 4 1062 4 767 2 1356 2 1111 2 966 2 811 2 1074 2 517 2 899 4 58 6 150 12 1159 2 16 2 1361 2 1021 2 638 4 1308 2 817 2 976 4 863 2 1165 2 606 2 1313 2 1123 6 1247 2 823 2 1027 4 291 2 486 2 942 4 687 2 1082 6 1207 2 691 2 108 2 1030 2 29 2 779 2 648 2 947 4 1035 2 1328 2 342 2 1134 2 399 2 
308 2 1217 2 1137 6 404 4 501 4 1097 4 1264 2 82 2 1003 2 1224 2 471 4 1051 2 663 2 1055 2 552 2 1234 6 1062 4 767 2 1356 2 1111 2 966 2 811 2 1074 2 517 2 899 4 58 6 150 12 16 2 1361 2 1021 2 638 4 1308 2 817 2 976 4 863 2 1165 2 606 2 1313 2 1123 6 1247 2 823 2 1027 8 291 2 486 2 942 4 687 2 1082 6 1207 2 691 2 108 2 1030 2 29 2 779 2 648 2 947 4 1035 2 1328 2 342 2 1134 2 399 2 
308 2 1217 2 1137 8 404 4 501 4 1097 4 1264 2 82 2 1003 2 1224 2 471 4 1051 2 663 2 1055 2 552 2 1234 6 1062 4 767 2 1356 2 1111 2 966 2 811 2 1074 2 517 2 899 4 58 10 150 12 1159 2 16 2 1361 2 1021 2 638 4 1308 2 817 2 976 4 863 2 1165 2 606 2 1313 2 1123 6 1247 2 823 2 1027 8 291 2 486 2 942 8 687 2 1082 8 1207 2 691 2 108 2 1030 2 29 2 779 2 648 2 947 4 1035 2 1328 2 342 2 1134 2 399 2 
308 2 1217 2 1137 6 404 4 501 4 1097 4 1264 2 82 2 1003 2 1224 2 471 4 1051 2 663 2 1055 2 552 2 1234 6 1062 4 767 2 1356 2 1111 2 966 2 811 2 1074 2 517 2 899 4 58 10 150 12 16 2 1361 2 1021 2 638 4 1308 2 817 2 976 4 863 2 1165 2 606 2 1313 2 1123 6 1247 2 823 2 1027 8 291 2 486 2 942 8 687 2 1082 6 1207 2 691 2 108 2 1030 2 29 2 779 2 648 2 947 4 1035 2 1328 2 342 2 1134 2 399 2 
1216 8 874 7 1217 2 702 2 543 2 174 2 1046 4 877 2 1224 2 546 2 1051 2 887 6 1052 2 6 2 1055 2 552 2 9 6 1234 4 1062 6 360 2 894 2 719 2 1074 2 899 4 14 2 16 2 197 2 380 6 1247 2 1082 12 1248 8 904 6 1251 7 29 2 388 2 1086 2 32 2 1256 4 397 6 1089 2 399 2 402 1 581 2 404 4 1262 2 1097 4 1263 2 753 10 1264 2 1102 2 418 2 591 2 767 2 770 2 1111 2 771 2 934 2 56 2 58 2 1118 2 603 2 606 2 64 1 1123 24 941 6 945 12 69 6 779 2 947 4 1134 2 457 2 618 2 1136 2 1137 8 78 2 792 2 1294 6 82 2 471 8 85 2 266 2 1143 6 270 2 1148 2 966 2 811 2 477 4 95 2 1159 4 813 2 973 6 814 2 638 4 1308 2 817 2 976 6 1165 4 287 1 1313 2 823 4 291 2 486 2 1171 4 646 6 1174 6 108 2 982 2 488 2 648 2 985 2 492 6 301 2 1181 1 994 6 1331 6 121 2 125 6 1340 6 501 4 840 6 502 1 999 1 1003 2 136 2 662 2 663 2 853 2 854 4 1005 2 668 2 140 2 1356 2 1197 2 1012 2 1200 2 150 46 517 2 1017 1 519 1 329 6 1361 2 1021 2 331 4 863 2 524 2 1206 2 1027 2 687 2 689 2 1207 4 691 4 1030 2 1367 2 338 1 692 4 1035 4 536 2 1215 2 342 2 1039 4 
1216 8 1136 2 702 2 1217 2 1137 8 543 2 78 2 174 2 1046 4 792 2 1294 6 877 2 82 2 1224 2 546 2 471 8 1051 2 887 6 85 2 1052 2 266 2 6 2 1055 2 552 2 1143 6 9 6 1234 8 1062 6 360 2 270 2 894 2 719 2 1148 2 966 2 477 4 811 2 1074 2 14 4 899 4 95 2 813 2 16 2 973 6 814 2 97 2 638 4 1308 2 197 2 976 6 817 2 1165 4 380 6 1313 2 1247 2 823 4 291 2 486 2 1171 4 1082 12 1248 8 646 6 904 6 1174 6 108 2 982 2 388 2 29 2 488 2 648 2 985 2 1086 2 492 6 301 2 32 2 397 6 1256 8 994 6 1089 2 121 2 1331 6 399 2 125 6 308 4 404 4 581 2 1340 6 501 4 1262 2 840 6 1097 4 753 10 1263 2 1264 2 136 2 1003 2 662 4 1102 2 663 2 853 2 418 2 854 4 1005 2 591 2 140 2 668 2 767 2 1356 2 1197 2 770 2 1111 2 1012 2 1200 2 771 2 934 2 56 2 58 2 517 2 150 48 329 6 1021 2 1361 2 1118 2 603 2 331 8 863 2 606 2 524 2 1123 26 941 6 1027 6 1206 2 686 2 943 2 687 2 689 4 1207 4 945 12 691 4 1030 2 1367 2 69 6 779 2 692 4 1035 4 947 4 1215 2 536 2 342 2 1039 4 1134 2 457 2 618 2 
1216 8 1136 2 1217 2 702 2 1137 8 543 2 78 2 174 2 1046 4 792 2 1294 6 877 2 82 2 1224 2 546 2 471 8 1051 2 887 6 85 2 1052 2 266 2 6 2 1055 2 552 2 1143 6 9 6 1234 8 1062 6 360 2 270 2 894 2 719 2 1148 2 966 2 477 4 811 2 1074 2 14 4 899 4 95 2 813 2 16 2 973 6 814 2 97 2 638 4 1308 2 197 2 976 6 817 2 1165 4 380 6 1313 2 1247 2 823 4 291 2 486 2 1171 4 1082 12 1248 8 646 6 904 6 1174 6 108 2 982 2 388 2 29 2 488 2 648 2 985 2 1086 2 492 6 301 2 32 2 397 6 1256 8 994 6 1089 2 121 2 1331 6 399 2 125 6 308 4 404 4 581 2 1340 6 501 4 1262 2 840 6 1097 4 753 10 1263 2 1264 2 136 2 1003 2 662 4 1102 2 663 2 853 2 418 2 854 4 1005 2 591 2 140 2 668 2 767 2 1356 2 1197 2 770 2 1111 2 1012 2 1200 2 771 2 934 2 56 2 517 2 150 48 58 6 329 6 1021 2 1361 2 1118 2 603 2 331 8 863 2 606 2 524 2 1123 26 941 6 1027 6 1206 2 686 2 942 4 943 2 687 2 689 4 1207 4 945 12 691 4 1030 2 1367 2 69 6 779 2 692 4 1035 4 947 4 1215 2 536 2 342 2 1039 4 1134 2 457 2 618 2 
1216 8 702 2 1217 2 345 2 543 2 174 2 1046 4 877 2 1224 2 546 2 1051 2 887 6 1052 2 6 2 1055 2 552 2 9 6 1234 10 1062 6 360 2 894 2 719 2 720 6 897 2 1074 2 899 4 14 4 16 2 197 2 377 2 380 12 1247 2 1082 16 1248 12 904 6 29 2 388 2 392 2 32 2 1256 10 397 6 1089 4 399 2 581 2 404 4 1262 2 1097 4 1263 4 753 8 1264 2 1100 6 1102 2 418 2 591 2 593 6 767 2 770 2 1111 2 1274 2 771 2 934 4 56 2 58 6 1118 2 603 4 606 2 607 6 1123 24 941 8 942 4 943 2 945 10 69 12 779 2 947 4 252 6 1134 2 457 2 618 2 1136 2 1137 10 78 2 792 2 1294 6 82 2 471 8 84 2 85 2 266 2 1143 6 270 2 807 6 1148 2 966 2 811 2 477 4 969 2 95 2 1159 2 1158 6 813 2 973 12 814 2 97 2 638 4 1308 2 99 2 976 6 817 2 1165 4 1313 2 823 4 291 2 486 2 1171 4 646 6 1174 12 108 2 982 2 488 2 648 2 985 2 492 6 301 2 994 6 1331 6 121 2 125 12 308 4 1340 12 501 4 840 8 1003 2 136 2 662 4 663 2 853 2 854 4 1005 2 855 6 668 2 140 2 1355 6 1356 2 1197 2 1012 2 1200 2 517 2 150 52 674 2 329 6 1361 2 1021 2 331 10 863 2 524 2 1206 2 1027 6 686 2 687 2 689 4 1207 4 691 4 1030 2 1367 2 692 6 1035 4 536 4 1215 2 342 2 1039 4 
150 4 58 4 899 2 308 2 1217 2 404 4 1137 6 1021 2 1361 2 638 2 1097 2 1308 2 976 2 817 2 1264 2 82 2 606 2 1224 2 471 2 663 2 1051 2 1027 6 291 2 942 4 687 2 1082 4 108 2 648 2 1234 6 1035 2 947 4 342 2 966 2 399 2 1074 2 
702 2 1217 2 1137 6 78 2 82 2 259 2 1224 2 546 2 471 2 1051 2 85 2 1052 2 6 2 1054 2 1234 6 1062 6 270 2 1148 2 719 2 966 2 811 2 477 2 1074 2 899 2 638 2 975 2 1308 2 976 2 817 2 285 2 1165 4 1313 2 1247 2 823 4 291 2 1171 4 1082 4 1248 8 108 2 488 2 648 2 1086 2 301 2 1089 3 1331 6 121 2 399 2 308 2 404 4 581 2 840 6 1262 2 1097 2 1263 3 753 2 1001 2 1264 2 47 2 663 2 854 4 48 3 1005 2 668 2 1356 2 767 2 1111 2 1012 2 326 2 150 28 58 2 1361 2 1021 2 603 3 606 2 1123 24 941 6 1206 2 1027 6 687 2 945 4 1030 2 532 2 533 2 692 4 1035 2 947 4 342 2 1134 2 618 2 
342 2 1224 2 545 2 
342 2 1224 2 545 2 
702 2 1137 12 173 2 78 2 1046 2 467 2 545 2 1224 6 546 2 471 4 85 2 1052 2 6 2 1055 2 89 2 716 2 1234 12 1062 6 1148 2 719 2 811 2 477 6 1074 4 14 4 899 2 1159 4 638 2 197 2 976 4 1165 4 1313 2 1247 2 823 4 1316 4 1171 4 1082 16 1248 2 109 2 108 2 29 2 388 4 488 2 648 2 908 2 492 2 301 2 117 2 829 2 1256 4 1331 6 121 2 308 4 581 2 404 4 406 4 500 2 501 4 840 2 1262 2 1097 2 753 2 1003 2 662 4 851 2 663 2 854 4 1005 2 668 2 1356 2 770 2 1199 4 1111 2 1012 2 1274 4 931 2 149 2 517 2 150 24 58 6 331 4 603 2 606 2 158 2 524 2 1123 16 525 2 1205 2 941 2 1206 2 1027 6 942 4 689 4 1207 2 945 4 691 4 1030 2 165 2 779 2 947 4 1035 4 250 2 72 2 342 4 1039 2 1134 2 618 2 
150 4 971 2 95 2 945 2 813 2 552 2 590 2 1145 2 1046 2 113 2 753 2 467 2 492 2 117 2 931 2 1313 2 1123 2 
873 2 702 2 1137 12 173 2 78 2 467 2 260 2 545 2 1224 6 546 2 471 4 85 2 1052 2 6 2 1055 2 89 2 1234 12 1062 6 1148 2 719 2 811 2 477 6 1074 4 14 4 899 2 1159 4 638 2 197 2 976 4 1165 4 821 2 1313 2 1247 2 823 4 1316 4 1171 4 1082 16 1248 2 109 1 108 2 29 2 388 4 488 2 648 2 908 2 492 2 301 2 117 2 829 2 1256 4 1331 6 121 2 308 4 581 2 404 4 406 4 501 4 840 2 1262 2 1097 2 1003 2 661 2 662 4 851 2 663 2 854 4 1005 2 668 2 1356 2 770 2 1199 4 1111 2 1012 2 1274 4 931 2 517 2 150 24 58 6 331 4 603 4 863 2 606 2 158 2 524 2 1123 16 525 2 1205 2 941 2 1206 2 1027 6 942 4 689 4 1207 4 945 2 691 4 1030 2 779 2 947 4 1035 4 250 4 700 2 72 2 342 4 1039 2 1134 2 618 2 
702 2 1137 12 173 2 78 2 1046 2 467 2 545 2 1224 6 546 2 471 4 85 2 1052 2 6 2 1055 2 89 2 1234 12 1062 6 1148 2 719 2 811 2 477 6 1075 2 1074 4 14 4 899 2 1159 4 638 2 197 2 976 4 1165 4 1313 2 1247 2 823 4 1316 4 1171 4 1082 16 1248 2 109 1 108 2 29 2 388 4 488 2 648 2 908 2 490 2 492 2 301 2 117 2 829 2 1256 4 1331 6 121 2 308 4 310 2 581 2 404 4 406 4 38 2 501 4 840 2 1262 2 1097 2 753 2 1003 2 662 4 851 2 663 2 854 4 1005 2 668 2 1356 2 770 2 1199 4 1111 2 1012 2 1274 4 931 2 517 2 150 24 58 6 331 4 603 2 863 2 606 2 158 2 524 2 1123 16 525 2 1205 2 941 2 1206 2 1027 6 942 4 689 4 1207 4 945 4 691 4 1030 2 779 2 947 4 1035 4 250 2 72 2 342 4 1039 2 1134 2 344 2 618 2 
422 2 680 2 193 2 227 2 759 2 147 2 995 2 1225 2 623 2 
1291 2 150 2 127 2 676 2 436 2 840 2 603 3 1263 3 354 2 1123 2 710 2 1169 4 941 2 1248 2 292 3 692 2 1131 2 30 2 270 2 1373 2 536 6 556 2 538 2 1089 3 401 1 
1291 2 150 2 127 2 676 2 436 2 840 2 603 2 1263 2 354 2 1123 2 710 2 1169 4 941 2 1248 2 292 2 692 2 1131 2 30 2 270 2 1373 2 536 6 556 2 538 2 1089 2 
1291 2 150 2 127 2 676 2 436 2 840 2 603 2 1263 2 354 2 1123 2 710 2 1169 4 941 2 1248 2 292 2 692 2 1131 2 30 2 270 2 1373 2 536 6 556 2 538 2 1089 2 
217 4 915 2 219 2 1263 3 918 2 354 2 1228 2 714 2 1269 4 1058 2 11 2 359 2 270 2 804 4 322 4 629 2 365 2 272 2 631 6 369 2 93 2 597 2 150 10 434 5 153 3 603 3 19 2 1362 3 1244 2 442 2 101 2 1123 4 643 2 865 3 609 4 1248 2 568 2 744 2 1179 4 210 4 
150 10 434 4 217 4 153 2 915 2 19 2 603 2 219 2 1362 2 1244 2 1263 2 918 2 442 2 101 2 354 2 1123 4 643 2 865 2 609 4 1228 2 420 2 1248 2 568 2 1269 4 714 2 1058 2 11 2 744 2 359 2 322 4 804 4 270 2 629 2 365 2 1179 4 272 2 210 4 631 6 992 2 369 2 1304 2 597 2 93 2 
150 10 434 4 217 4 153 2 915 2 19 2 603 2 219 2 1362 2 1244 2 1263 2 918 2 442 2 101 2 354 2 1123 4 643 2 865 2 609 4 1228 2 420 2 1248 2 568 2 1269 4 714 2 1058 2 11 2 744 2 359 2 322 4 804 4 270 2 629 2 365 2 1179 4 272 2 210 4 631 6 992 2 369 2 1304 2 597 2 93 2 
150 10 434 4 217 4 153 2 915 2 19 2 603 2 219 2 1362 2 1244 2 1263 2 918 2 442 2 101 2 354 2 1123 4 643 2 865 2 609 4 1228 2 420 2 1248 2 568 2 1269 4 714 2 1058 2 11 2 744 2 359 2 322 4 804 4 270 2 629 2 365 2 1179 4 272 2 210 4 631 6 992 2 369 2 1304 2 597 2 93 2 
150 10 434 4 217 4 153 2 915 2 19 2 603 2 219 2 1362 2 1244 2 1263 2 918 2 442 2 101 2 354 2 1123 4 643 2 865 2 609 4 1228 2 420 4 1248 2 568 2 1269 4 714 2 1058 2 11 2 744 2 359 2 322 4 804 4 270 2 629 2 365 2 1179 4 272 2 210 4 631 6 992 4 369 2 1304 4 597 2 93 2 
484 2 470 2 443 2 1241 2 910 2 511 2 
1327 2 1067 2 858 2 341 2 736 2 781 2 511 2 
516 2 150 10 1240 1 1156 2 973 2 63 2 154 2 706 1 1278 2 3 1 240 2 818 2 42 2 844 2 884 2 1123 8 940 1 317 2 550 2 1175 2 1032 1 949 2 1111 2 428 2 232 2 1288 2 
150 6 434 15 405 4 217 4 1045 2 1279 2 19 6 1244 6 1048 2 1310 2 1363 1 442 6 1284 2 1123 6 472 2 643 6 609 12 1228 6 421 4 420 4 1349 2 568 6 890 2 357 2 359 2 828 2 272 6 368 2 992 2 1151 2 1304 3 
150 1 1106 2 634 2 586 2 713 2 1269 2 542 4 311 2 322 2 1109 2 323 2 210 2 1123 1 33 2 852 7 1114 1 76 2 13 2 
1106 4 634 4 586 2 713 2 1269 2 542 4 311 4 322 2 1109 2 323 2 210 2 33 2 852 6 76 2 13 2 
150 1 1106 8 634 8 586 8 713 2 1269 2 542 4 311 8 322 2 1109 2 323 6 210 2 1123 1 33 2 852 10 1114 1 76 2 13 2 
1106 2 634 2 713 2 1269 2 542 2 311 2 322 2 1109 2 210 2 33 2 852 2 76 2 13 2 
1042 2 254 24 255 26 876 6 80 6 878 90 176 4 351 4 258 4 546 58 1297 2 263 2 85 58 712 1 626 8 267 36 891 2 1233 2 715 4 358 124 1146 6 1235 2 806 2 363 6 1236 4 1069 6 192 4 1072 6 560 18 561 4 1077 16 637 8 17 84 98 10 816 24 732 2 283 4 1311 2 286 8 1166 2 564 24 1171 112 645 2 27 12 109 4 1319 6 571 6 740 6 207 2 572 16 300 2 1326 4 745 8 987 6 395 6 650 4 301 14 1254 6 1256 28 120 4 993 42 304 2 495 4 1331 248 652 18 1184 17 35 16 654 2 749 24 836 10 656 2 580 8 837 10 1339 8 407 10 754 24 314 4 503 6 1188 4 504 4 584 8 847 92 1101 10 137 6 761 11 923 6 419 6 854 88 1005 8 925 6 1271 24 424 2 1194 90 426 6 1012 14 427 4 933 4 146 12 932 50 429 42 1016 26 150 150 602 4 601 4 437 4 1119 4 440 10 241 6 1123 134 1122 6 160 2 447 4 610 4 333 22 246 6 778 4 1212 2 1033 6 534 6 451 10 1034 10 697 16 1213 8 340 2 785 34 871 4 343 8 170 8 
35 4 126 2 836 2 749 2 580 2 837 2 1339 6 407 2 657 2 754 2 660 2 1049 2 1188 2 1343 2 1189 2 584 2 1101 2 546 2 1226 4 356 2 85 2 585 4 265 2 854 20 1005 2 626 2 267 2 1107 2 1271 2 1233 2 1353 2 592 2 424 2 358 6 426 2 1146 2 363 2 964 2 1012 2 632 2 722 2 515 2 1239 2 150 46 1305 2 1077 4 1115 4 98 2 375 2 198 2 732 2 1245 2 283 2 938 2 440 2 1123 44 684 2 1026 2 160 2 243 2 1172 2 1171 20 688 2 244 2 449 6 826 2 109 2 293 2 740 2 613 2 534 4 1085 2 451 2 1034 2 743 2 780 2 300 2 697 4 869 2 987 2 1213 2 395 2 340 2 301 2 455 2 1256 38 1133 2 747 4 1331 44 652 2 1184 2 215 2 
79 2 876 4 80 4 1141 8 1297 2 546 28 85 30 87 8 267 6 1056 4 891 2 1233 2 715 4 358 24 555 16 803 16 1146 4 805 2 363 4 1069 4 1070 4 192 4 1072 4 1239 10 561 4 1077 10 17 24 98 6 198 2 732 2 22 8 564 8 1172 10 1171 44 645 2 1318 4 1319 4 571 4 740 4 572 8 300 2 745 4 987 4 650 4 395 4 301 6 1254 4 120 4 1256 14 993 8 1331 104 652 10 1184 10 215 2 35 10 654 2 836 4 128 2 580 2 837 4 1339 6 407 4 503 4 504 4 584 2 847 24 1101 4 137 4 923 4 419 4 1105 2 854 36 1005 2 139 32 925 4 424 2 426 4 1110 4 1012 6 933 2 146 14 429 16 932 8 1358 2 671 4 150 78 601 4 437 4 1119 4 1123 70 1122 4 447 4 610 4 244 2 778 4 1028 4 1033 4 534 2 697 10 1213 2 340 2 785 30 1375 8 455 10 73 2 1376 4 170 4 
35 6 1042 2 836 2 656 2 580 2 837 2 1339 4 407 2 657 2 584 2 1101 2 546 12 761 2 85 12 854 14 1005 2 267 2 1233 2 424 2 358 8 426 4 1146 4 363 4 427 2 1012 2 933 2 150 28 1077 6 637 2 98 2 732 2 1166 2 1123 26 160 2 333 10 244 2 1171 14 778 2 109 2 740 4 1212 2 534 2 572 6 300 2 697 6 987 4 1213 2 340 2 395 4 301 2 785 6 1256 14 120 2 304 2 495 2 1331 40 170 4 1184 2 652 2 
1346 2 

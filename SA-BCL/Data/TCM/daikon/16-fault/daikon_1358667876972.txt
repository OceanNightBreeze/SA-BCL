#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (599,1000) (599,1000) (40,84,648,934,989) (40,84,648,934,989) (40,84,648,934,989) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (599,1000) (105,943) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 594 826 156 824 370 818 348 820 623 424 9 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 96 403 242 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 96 403 242 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 902 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 974 986 515 595 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 730 880 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 717 118 995 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 717 118 995 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 717 118 995 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 717 118 995 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3_18()Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3_35()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE:sign(I)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3_17()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:eq(II)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3_28()Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
daikon.test.FormatTestCase:passes()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_70()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaCharStream:FillBuff()V
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_98()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:noDups([I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_47()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | RETURN | 100880 | return null
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern:numIntArrays()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_76()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_77()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaCharStream:getBeginLine()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:isFloat()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3_4()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:memberOf(F[D)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3R_69()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_97()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_74()Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
jtb.JavaCharStream:BeginToken()C
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3_10()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_116()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_210()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_2_35(I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3R_62()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_25()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:slice([III)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3_12()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_3()Z
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_126()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_27()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_106()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltsLtIndex([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3R_99()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_89()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments; | ASSIGN | 49480 | = null
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_2_12(I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:max([I)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_3R_103()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_100()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_21()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_104()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 915 | = null
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_88()Z
utilMDE.MathMDE:pow(II)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptSlice0:arity()I
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.ProglangType:dimensions()I
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_85()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3_36()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:intern([D)[D
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3R_58()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.PptSlice2:arity()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_80()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_86()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:concat([I[I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:subsetOf([F[D)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9684 | = null
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Ppt:Ppt()V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.PptSlice1:arity()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3R_110()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D | OPERATOR | 8959 | <= -> ==
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:memberOf(F[F)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ValueTuple:size()I
daikon.Quant:eltsGT([II)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_87()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2308 | = null
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_61()Z
utilMDE.Assert:assertTrue(Z)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsLTE([II)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
391 2 890 4 115 2 811 2 411 2 410 2 973 2 599 2 1000 2 
748 2 660 2 519 6 847 2 130 6 981 2 217 6 715 2 318 2 674 2 998 2 
124 2 744 4 800 2 564 6 308 6 503 6 599 2 451 6 346 4 350 2 474 2 417 2 1000 2 
745 2 306 2 843 4 483 8 846 10 449 26 63 2 66 2 315 6 288 4 135 2 459 29 418 6 107 4 689 8 15 10 1000 6 190 2 1009 8 361 8 1010 4 599 6 267 10 433 16 924 10 830 2 91 16 152 16 516 12 675 10 
425 4 680 6 
950 2 
305 2 63 2 65 2 12 2 790 2 589 2 386 2 859 2 74 2 139 2 77 2 658 2 599 4 90 2 807 2 546 2 479 2 338 2 613 2 95 2 28 2 208 2 679 4 157 2 344 2 619 2 35 2 278 2 992 2 214 2 164 2 1000 4 560 2 495 2 292 2 429 2 694 2 1013 4 365 2 829 2 115 2 371 4 641 2 838 4 
127 4 182 2 846 16 449 48 936 4 490 2 315 4 459 54 188 6 13 2 418 4 71 6 689 18 1000 4 15 6 43 4 111 8 1009 6 85 6 922 4 1010 2 599 4 471 4 267 16 433 32 924 16 830 2 91 32 175 2 152 32 772 4 773 4 119 6 441 6 444 2 516 22 237 2 675 16 302 6 
273 2 859 2 179 2 
292 2 573 2 392 2 616 2 343 2 468 2 553 2 876 2 88 2 524 22 909 2 256 2 548 10 723 2 
846 2 449 4 6 2 313 2 754 2 459 6 418 2 689 2 15 4 862 2 191 2 261 2 1010 2 267 2 433 2 924 2 91 2 152 2 952 2 516 2 984 2 675 2 776 2 
846 4 449 12 267 4 504 2 936 4 433 8 924 4 91 8 288 2 772 4 152 8 459 16 119 6 516 4 71 6 675 4 258 2 
376 4 900 2 549 2 574 2 990 4 618 10 273 6 711 2 212 2 412 2 556 4 60 4 453 4 755 2 353 4 720 2 859 8 495 4 140 2 77 2 78 2 142 4 192 10 19 2 359 4 562 62 659 4 499 4 664 2 597 14 330 2 300 2 49 2 949 2 93 2 151 2 371 4 303 4 122 2 179 2 
405 2 319 2 915 2 693 2 22 2 174 2 637 2 950 2 570 2 898 2 
958 2 310 2 452 2 903 2 648 2 649 2 966 2 136 2 860 2 262 2 20 4 264 4 146 2 84 2 600 4 599 22 804 2 400 2 399 2 476 2 740 2 743 2 30 2 874 2 810 2 811 2 877 2 32 4 103 2 886 2 621 6 688 2 355 2 40 2 1000 20 293 2 223 2 225 2 362 2 894 2 832 2 896 6 120 2 
407 2 599 2 
105 2 943 2 599 4 743 2 
252 2 
241 2 778 6 779 2 783 2 246 4 784 2 248 2 249 12 786 2 8 2 9 2 787 12 10 2 254 4 789 2 791 2 792 2 793 4 796 4 260 4 529 14 259 2 798 10 18 4 799 2 535 4 536 2 265 2 538 2 21 2 540 2 268 2 541 2 23 4 24 4 26 2 269 12 545 2 270 12 808 4 272 2 29 54 551 2 31 32 274 2 275 2 34 4 555 4 812 2 814 2 279 54 281 6 282 2 36 2 817 2 557 2 818 2 820 2 39 2 559 2 294 40 823 2 295 2 824 2 563 2 826 6 299 2 47 12 48 2 568 2 301 2 837 54 571 2 841 2 304 26 842 54 53 2 54 12 55 2 56 2 849 2 580 2 579 2 311 16 61 158 852 2 854 2 855 4 64 2 585 2 316 2 68 54 73 2 76 26 321 2 863 2 322 2 81 2 324 2 592 2 326 4 594 2 83 2 82 2 598 4 601 2 86 2 602 2 867 2 334 18 92 4 336 2 607 26 337 14 609 12 871 18 94 2 340 2 341 4 342 2 98 2 879 2 100 40 347 2 348 2 349 2 352 4 885 4 354 2 887 2 623 2 625 2 109 2 631 2 893 2 633 4 634 2 366 4 895 2 368 10 370 2 639 2 372 4 373 2 642 4 899 4 644 2 377 2 128 2 378 6 131 2 647 2 646 2 904 2 133 2 905 2 381 2 382 2 651 2 137 2 652 54 911 2 910 2 653 10 390 8 655 48 914 2 141 2 143 2 656 2 917 158 662 2 661 2 919 2 920 2 663 2 394 12 395 4 668 2 926 2 671 30 672 2 927 30 673 2 931 2 933 2 156 4 408 56 160 10 409 2 935 26 162 2 685 32 939 4 687 2 941 2 166 6 167 4 419 54 942 2 424 2 426 2 168 4 169 12 430 2 946 26 173 2 695 2 432 2 699 54 437 6 701 18 703 52 178 48 705 2 706 2 180 2 707 4 708 10 957 2 709 32 448 2 450 12 184 2 185 2 187 4 454 2 965 2 458 2 968 2 460 2 719 2 970 2 463 2 971 2 464 266 189 2 466 2 976 2 735 2 199 4 982 2 737 4 736 20 201 2 475 26 206 2 985 2 741 158 207 2 742 2 480 54 988 2 747 4 991 2 487 2 751 2 220 10 993 2 491 2 756 4 997 12 999 4 492 40 222 2 497 2 498 4 759 4 500 4 227 54 760 54 762 2 763 2 765 4 766 2 767 2 769 2 768 24 505 10 232 2 770 2 508 2 234 2 510 2 511 2 512 2 514 2 1017 2 238 2 777 2 240 2 
110 2 194 1 440 2 493 2 
110 2 581 2 
590 2 955 2 484 2 327 2 195 2 1011 2 881 2 683 2 62 2 283 2 524 6 857 2 805 2 951 2 640 2 443 4 72 4 374 2 
440 2 758 2 
506 2 916 2 865 2 859 2 
506 2 916 2 963 2 312 2 865 2 859 2 
506 2 110 2 753 2 165 2 859 2 107 2 
196 2 28 2 
506 2 502 2 859 2 107 2 
554 2 961 2 
606 2 250 2 
987 2 385 2 
1014 2 1002 2 
1014 2 250 2 821 2 
1014 2 125 2 250 2 
1014 2 996 2 250 2 
1014 2 126 2 250 2 
244 2 710 2 583 6 859 2 221 2 530 2 506 2 436 6 
506 2 650 2 110 2 963 2 753 2 859 2 107 2 
110 2 753 2 528 2 
110 2 753 2 25 2 
728 2 144 2 440 2 
110 2 753 2 
728 2 235 2 
110 2 636 2 
728 2 415 2 440 2 
987 2 440 2 172 2 
1014 2 440 2 565 2 
440 2 897 2 554 2 
215 2 440 2 250 2 
728 2 183 2 
110 2 932 2 
987 2 177 2 
1014 2 513 2 
726 2 554 2 
819 2 250 2 
728 2 170 2 
806 2 250 2 
527 2 554 2 
1014 2 489 2 
987 2 575 2 
728 2 415 2 526 2 440 2 
566 2 728 2 415 2 526 2 440 2 
134 2 728 2 440 2 
728 2 440 2 901 2 
501 2 113 2 582 2 116 2 
643 2 728 2 
355 2 
242 2 446 1 310 2 452 2 903 2 649 2 455 2 136 2 70 2 860 2 16 1 262 2 20 4 264 4 470 4 600 4 599 14 804 2 399 2 400 2 476 2 930 2 740 2 96 2 403 2 30 2 874 2 810 2 811 2 877 2 32 4 103 6 621 4 688 2 757 1 1000 14 293 6 223 2 225 2 1007 1 362 2 894 6 364 2 834 2 896 6 120 2 
242 2 958 2 310 2 452 2 903 2 649 2 455 2 966 2 136 2 70 2 860 2 262 2 20 4 264 4 470 4 600 4 599 14 804 2 399 2 400 2 476 2 930 2 740 2 96 2 403 2 30 2 874 2 810 2 811 2 877 2 32 4 103 6 621 6 688 2 1000 14 293 6 223 2 225 2 362 2 894 6 364 2 834 2 896 6 120 2 
861 2 
114 2 197 2 
181 2 3 4 519 6 130 6 57 2 452 2 379 2 853 2 715 4 383 2 969 2 318 2 860 2 17 2 864 2 20 2 660 4 534 4 266 2 539 2 396 2 147 2 599 12 600 2 328 4 603 8 869 2 400 2 738 2 478 2 476 2 872 10 740 2 209 2 677 4 614 2 748 2 217 6 289 2 38 8 688 2 558 2 1000 6 356 2 494 2 1001 2 627 4 629 2 691 2 45 2 892 2 431 2 362 2 367 4 702 2 439 2 896 4 50 2 1016 2 121 2 
0 4 181 2 3 4 519 8 130 6 57 2 452 2 379 2 853 2 383 2 715 4 969 2 318 2 860 2 17 2 20 2 864 2 660 4 534 4 593 2 266 2 539 2 396 2 600 2 599 12 328 4 603 8 869 2 400 2 738 2 478 2 476 2 872 10 740 2 209 2 677 4 614 2 748 2 217 8 37 2 289 2 38 8 688 2 558 2 998 2 1000 6 494 2 356 2 1001 2 627 4 629 2 691 2 45 2 431 2 362 2 367 4 702 2 439 2 896 4 50 2 1016 2 121 2 
629 2 677 4 691 2 864 2 660 2 181 2 3 4 519 2 130 2 57 2 328 2 715 2 50 2 1016 2 969 2 17 2 356 2 209 2 
181 2 3 4 519 6 130 4 57 2 452 2 379 2 853 2 715 4 383 2 969 2 318 2 860 2 17 2 864 2 20 2 660 4 534 4 266 2 539 2 396 2 147 2 599 12 600 2 328 4 603 4 869 2 400 2 738 2 478 2 476 2 872 6 740 2 209 2 677 4 614 2 217 6 289 2 38 4 688 2 558 2 998 2 1000 6 356 2 494 2 1001 2 627 4 629 2 691 2 45 2 892 2 431 2 362 2 367 4 702 2 439 2 896 4 50 2 1016 2 121 2 
181 2 3 4 519 4 130 6 57 2 452 2 379 2 853 2 715 4 383 2 969 2 318 2 860 2 17 2 864 2 20 2 660 4 534 4 266 2 539 2 396 2 147 2 599 12 600 2 328 4 603 4 869 2 400 2 738 2 478 2 476 2 872 6 674 2 740 2 209 2 677 4 614 2 217 6 289 2 38 4 688 2 558 2 1000 6 356 2 494 2 1001 2 627 4 629 2 691 2 45 2 892 2 431 2 362 2 367 4 702 2 439 2 896 4 50 2 1016 2 121 2 
181 2 3 4 519 6 130 6 57 2 452 2 379 2 853 2 715 4 383 2 969 2 318 2 860 2 17 2 864 2 20 2 660 4 534 4 266 2 539 2 396 2 147 2 599 12 600 2 328 4 603 8 869 2 400 2 738 2 478 2 476 2 872 6 740 2 209 2 677 4 614 2 748 2 217 6 289 2 38 4 688 2 558 2 1000 6 356 2 494 2 1001 2 627 4 629 2 691 2 45 2 892 2 431 2 362 2 367 4 702 2 439 2 896 4 50 2 1016 2 121 2 
181 2 3 4 519 6 130 8 57 2 452 2 379 2 853 2 715 4 383 2 969 2 318 2 860 2 17 2 20 2 864 2 660 4 534 4 266 2 539 2 396 2 147 2 599 12 600 2 328 4 603 8 869 2 400 2 738 2 478 2 476 2 872 10 674 2 740 2 209 2 677 4 614 2 748 2 217 8 289 2 38 8 688 2 558 2 1000 6 356 2 494 2 1001 2 627 4 629 2 691 2 45 2 892 2 431 2 362 2 367 4 702 2 439 2 896 4 50 2 1016 2 121 2 
181 2 3 4 519 6 130 6 57 2 452 2 379 2 853 2 715 4 383 2 969 2 318 2 860 2 17 2 864 2 20 2 660 4 534 4 266 2 539 2 396 2 147 2 599 12 600 2 328 4 603 8 869 2 400 2 738 2 478 2 476 2 872 10 740 2 209 2 677 4 614 2 748 2 217 6 289 2 38 8 688 2 558 2 1000 6 356 2 494 2 1001 2 627 4 629 2 691 2 45 2 892 2 431 2 362 2 367 4 702 2 439 2 896 4 50 2 1016 2 121 2 
242 2 3 4 519 4 247 2 521 2 523 6 252 6 253 1 525 2 17 2 16 2 531 2 20 4 262 2 264 4 534 6 266 2 539 4 803 7 804 2 27 2 30 2 810 2 811 2 32 4 289 2 558 2 293 6 296 6 45 2 569 2 834 2 50 2 307 2 310 2 57 2 853 2 856 2 586 4 858 2 318 4 317 4 860 2 75 2 864 2 80 8 591 2 866 1 600 4 599 46 603 2 328 4 604 2 869 2 872 2 610 1 614 2 874 2 877 12 99 2 102 2 882 2 103 6 622 1 621 6 105 6 106 2 108 2 356 2 627 8 628 6 629 2 889 2 892 2 362 2 894 8 363 6 367 4 369 2 896 6 638 2 120 2 121 2 645 6 130 8 132 2 903 2 379 2 649 2 383 2 384 2 136 2 387 4 389 2 660 4 396 2 397 2 400 2 399 2 401 2 674 4 930 4 677 4 406 2 407 6 681 1 682 2 938 1 940 2 688 2 691 2 692 1 171 2 431 2 948 1 435 2 702 2 439 4 445 2 446 2 956 1 181 2 958 2 959 6 452 2 712 4 715 4 455 2 966 2 969 2 721 1 469 6 470 4 980 2 734 6 738 2 983 6 476 2 478 2 740 2 209 2 481 6 217 12 218 7 757 2 1000 24 494 2 1001 2 1003 6 223 2 1005 2 1006 2 224 2 225 2 761 2 764 6 230 2 231 6 1016 2 774 10 775 2 
242 2 519 8 3 4 645 6 247 2 130 8 132 2 521 2 379 2 903 2 523 6 251 2 649 2 252 6 383 2 525 2 384 2 136 2 387 4 389 2 16 2 17 2 531 2 262 2 20 4 264 4 534 6 660 4 266 2 539 4 396 2 397 2 804 2 27 2 399 2 400 2 401 2 930 4 677 4 30 2 810 2 406 2 811 2 407 6 32 4 682 2 289 2 940 4 558 2 688 2 293 6 691 2 296 6 45 2 171 2 431 2 435 4 702 2 569 2 439 4 834 2 50 2 445 2 446 2 307 2 181 2 958 2 959 6 310 2 57 2 452 2 712 4 853 2 856 2 715 4 455 2 586 8 966 2 858 4 317 8 318 4 969 2 860 2 75 2 79 2 80 8 864 2 591 2 469 6 980 2 470 4 599 48 600 4 328 4 603 6 734 6 604 2 869 2 738 2 983 6 478 2 476 2 872 2 740 2 209 2 614 2 615 2 481 6 748 4 874 2 877 12 99 2 882 2 102 2 103 6 217 12 105 6 621 6 106 2 757 2 108 2 1000 26 494 2 356 2 628 6 627 8 1001 2 1003 6 629 2 1006 2 1005 2 889 2 223 2 224 2 225 2 761 2 892 2 764 6 362 2 230 2 363 6 894 8 231 6 367 4 369 2 896 6 638 2 1016 2 121 2 120 2 774 10 775 2 
242 2 519 8 3 4 645 6 247 2 130 8 132 2 521 2 379 2 903 2 523 6 251 2 649 2 252 6 383 2 525 2 384 2 136 2 387 4 389 2 16 2 17 2 531 2 262 2 20 4 264 4 534 6 660 4 266 2 539 4 396 2 397 2 804 2 27 2 399 2 400 2 401 2 930 4 677 4 30 2 810 2 406 2 811 2 407 6 32 4 682 2 289 2 38 4 940 4 688 2 558 2 293 6 691 2 296 6 45 2 171 2 431 2 435 4 702 2 569 2 439 4 834 2 50 2 445 2 446 2 307 2 181 2 958 2 959 6 310 2 57 2 452 2 712 4 853 2 856 2 715 4 455 2 586 8 966 2 858 4 317 8 318 4 969 2 860 2 75 2 79 2 80 8 864 2 591 2 469 6 980 2 470 4 599 48 600 4 328 4 603 6 734 6 604 2 869 2 738 2 983 6 478 2 476 2 872 6 740 2 209 2 614 2 615 2 481 6 748 4 874 2 877 12 99 2 882 2 102 2 103 6 217 12 105 6 621 6 106 2 757 2 108 2 1000 26 494 2 356 2 628 6 627 8 1001 2 1003 6 629 2 1006 2 1005 2 889 2 223 2 224 2 225 2 761 2 892 2 764 6 362 2 230 2 363 6 894 8 231 6 367 4 369 2 896 6 638 2 1016 2 121 2 120 2 774 10 775 2 
242 2 3 4 519 10 247 2 521 2 523 6 251 2 252 12 525 2 17 2 16 4 531 2 20 4 262 2 264 4 534 6 266 2 539 4 804 2 27 2 547 2 30 2 810 2 811 2 32 4 289 2 38 4 558 2 293 8 822 2 296 6 45 2 831 6 569 2 834 2 50 2 52 2 844 6 307 2 577 2 578 6 310 2 57 2 853 2 856 2 314 2 586 10 858 4 318 4 317 10 860 2 75 2 79 2 864 2 80 8 323 6 591 2 600 4 599 52 603 6 328 4 604 2 869 2 335 6 872 6 614 2 615 2 874 2 877 10 99 2 102 2 882 2 103 8 621 6 105 12 106 2 108 2 356 2 626 2 627 8 628 6 629 2 889 2 892 2 362 2 894 12 363 6 367 4 369 2 896 6 638 4 120 2 121 2 645 6 130 10 132 2 903 2 379 2 649 2 383 2 384 2 136 2 387 4 389 2 660 4 396 2 397 2 399 2 400 2 401 4 674 2 930 4 929 6 677 4 404 6 406 2 407 12 940 4 688 2 423 6 691 2 171 2 431 2 435 4 702 2 439 4 445 2 446 4 181 2 958 2 959 6 452 2 712 4 715 4 455 2 966 2 969 2 465 2 469 6 470 6 980 2 734 12 738 2 983 6 476 2 478 2 740 2 209 2 481 12 746 6 748 4 217 16 998 2 757 4 1000 24 494 2 1001 2 1003 12 223 2 1005 2 1006 2 224 2 225 2 226 2 761 2 764 6 230 2 231 6 1016 2 774 8 775 2 
614 2 677 2 748 2 181 2 3 2 519 6 130 6 379 2 217 4 383 2 715 4 38 4 318 2 969 2 558 2 17 2 494 2 356 2 627 2 1001 2 629 2 864 2 534 2 660 4 45 2 892 2 266 2 431 2 599 4 603 6 367 2 738 2 1016 2 478 2 872 4 
242 2 519 6 3 2 130 6 379 2 903 2 649 2 383 2 136 2 794 2 16 3 17 2 657 2 20 4 262 2 264 4 534 2 660 4 266 2 804 2 399 2 400 2 930 2 677 2 30 2 810 2 811 2 934 2 32 4 161 2 682 2 558 2 688 2 293 6 45 2 431 2 434 3 438 2 834 2 446 3 181 2 958 2 310 2 452 2 853 2 715 4 455 2 966 2 318 2 969 2 860 2 864 2 470 4 600 4 599 28 603 6 738 2 478 2 476 2 872 2 740 2 614 2 748 2 874 2 989 2 877 4 103 6 217 4 621 6 757 3 355 2 1000 24 356 2 494 2 627 2 1001 2 629 2 1004 2 223 2 225 2 892 2 362 2 894 8 367 2 896 6 1016 2 120 2 774 2 1019 2 
994 2 478 2 379 2 
994 2 478 2 379 2 
3 2 519 12 520 2 902 2 130 12 379 6 903 2 649 2 384 4 136 2 387 2 533 4 20 4 262 2 264 4 534 4 660 4 539 4 396 2 149 2 804 2 669 2 400 2 399 2 930 6 674 4 677 2 30 2 550 2 810 2 811 2 32 4 938 1 163 2 38 4 940 4 688 2 558 2 421 2 422 2 42 2 293 2 427 2 944 4 46 2 435 4 702 2 439 2 834 2 446 2 181 4 958 2 310 2 57 2 452 2 712 2 962 4 715 4 586 4 455 2 966 2 858 4 317 4 318 4 860 2 599 24 600 4 328 4 87 2 603 6 472 2 869 2 870 2 476 2 478 4 872 6 740 2 209 2 614 2 874 2 748 4 97 2 877 4 102 2 103 2 488 2 217 16 621 6 994 2 998 4 1000 16 356 2 627 4 629 2 223 2 225 2 764 2 362 2 230 2 894 2 367 2 369 2 896 6 120 2 774 2 1018 2 
691 2 678 2 97 2 877 2 46 2 764 2 802 2 750 2 599 4 114 2 472 2 525 2 106 2 387 2 774 2 740 2 1000 2 
3 2 519 12 520 2 902 2 130 12 379 6 903 2 649 2 384 4 136 2 533 4 20 4 262 2 264 4 534 4 660 4 539 2 396 2 804 2 400 2 399 2 930 6 674 4 677 2 30 2 550 4 810 2 811 2 32 4 163 2 289 2 38 4 940 4 688 2 558 2 690 2 422 2 42 2 293 2 427 2 944 4 435 4 702 2 439 4 834 2 176 2 446 4 181 4 958 2 310 2 57 2 452 2 712 2 713 2 962 4 715 4 586 4 455 2 966 2 858 4 317 4 318 4 860 2 599 20 600 4 328 4 87 2 603 6 472 2 869 2 473 2 870 2 476 2 478 4 872 6 740 2 209 2 614 2 874 2 748 4 97 2 877 2 103 2 488 2 217 16 621 6 994 2 998 4 1000 14 356 2 627 4 629 2 223 2 496 2 225 2 362 2 230 2 894 2 367 2 369 2 896 6 120 2 
3 2 519 12 520 2 902 2 130 12 379 6 903 2 649 2 384 4 136 2 387 2 533 4 20 4 262 2 264 4 534 4 660 4 539 4 396 2 804 2 400 2 399 2 930 6 674 4 271 2 677 2 30 2 550 2 810 2 811 2 32 4 938 1 163 2 289 2 38 4 940 4 688 2 558 2 561 2 422 2 42 2 293 2 427 2 944 4 46 2 435 4 702 2 439 4 834 2 446 2 845 2 181 4 958 2 310 2 57 2 452 2 712 2 962 4 715 4 586 4 455 2 966 2 858 4 317 4 318 4 860 2 599 24 600 4 328 4 87 2 603 6 472 2 869 2 870 2 476 2 478 4 872 6 740 2 209 2 614 2 874 2 748 4 97 2 877 4 102 2 486 2 103 2 488 2 217 16 621 6 994 2 998 4 1000 16 356 2 627 4 629 2 223 2 225 2 228 2 764 2 362 2 230 2 894 2 367 2 369 2 896 6 120 2 774 2 
242 2 780 2 781 2 518 2 247 2 4 2 5 2 522 2 788 2 794 2 16 6 795 4 797 1 531 2 262 2 20 4 264 4 801 2 537 2 267 2 804 2 30 2 809 2 810 2 811 2 32 4 286 4 291 6 293 12 827 2 567 4 569 2 833 4 834 2 835 4 836 2 303 2 51 6 840 2 576 6 846 2 848 6 310 2 584 2 586 14 69 2 317 14 70 2 860 2 75 2 325 6 595 2 596 8 599 28 600 4 604 2 332 2 333 2 868 2 91 4 608 2 339 2 96 2 873 6 874 2 877 2 103 12 621 6 889 2 359 2 891 2 362 2 894 18 364 2 635 2 896 6 119 6 638 10 120 2 123 2 375 2 903 2 649 2 384 4 136 2 388 6 912 2 138 2 142 2 657 2 659 2 397 2 924 2 670 2 400 2 399 2 152 4 401 10 930 2 675 2 676 6 153 4 403 2 159 2 161 2 413 10 938 1 684 2 686 24 688 2 689 4 428 8 947 2 433 4 434 2 698 10 700 2 704 10 442 2 446 6 958 2 182 4 449 6 452 2 716 2 714 2 966 2 459 7 457 2 456 2 972 6 974 2 724 4 975 2 725 6 978 2 727 6 729 2 732 2 470 10 200 6 739 4 203 2 476 2 204 6 205 2 740 2 986 2 749 2 213 2 216 4 757 6 1000 22 1004 2 223 2 225 2 499 2 771 2 1015 2 233 10 772 4 236 4 515 2 516 4 
242 2 210 2 482 2 446 3 878 4 58 2 103 2 351 2 908 2 757 3 1000 2 654 2 16 3 293 2 263 2 470 2 894 2 599 2 331 2 1012 2 202 3 953 2 638 6 239 2 
242 2 210 2 482 2 446 2 878 4 58 2 103 2 351 2 908 2 757 2 1000 2 654 2 16 2 293 2 263 2 470 2 894 2 599 2 331 2 1012 2 202 2 953 2 638 6 239 2 
242 2 210 2 482 2 446 2 878 4 58 2 103 2 351 2 908 2 757 2 1000 2 654 2 16 2 293 2 263 2 470 2 894 2 599 2 331 2 1012 2 202 2 953 2 638 6 239 2 
242 2 446 3 2 2 846 2 449 4 309 2 813 2 850 2 277 3 101 2 485 2 186 2 752 4 287 4 315 2 459 6 461 4 757 3 1000 4 913 2 420 4 467 4 977 3 918 2 731 6 733 3 1008 2 229 2 1009 4 297 2 894 2 599 10 267 2 923 2 433 2 924 2 91 2 152 2 953 2 675 2 
242 2 446 2 2 2 846 2 449 4 309 2 813 2 850 2 277 2 101 2 485 2 186 2 752 4 287 4 315 2 459 4 461 4 757 2 689 2 1000 4 913 2 420 4 467 4 977 2 918 2 731 6 733 2 1008 2 229 2 1009 4 297 2 894 2 599 10 267 2 923 2 433 2 924 2 830 2 91 2 152 2 953 2 516 2 675 2 
242 2 446 2 2 2 846 2 449 4 309 2 813 2 850 2 277 2 101 2 485 2 186 2 752 4 287 4 315 2 459 4 461 4 757 2 689 2 1000 4 913 2 420 4 467 4 977 2 918 2 731 6 733 2 1008 2 229 2 1009 4 297 2 894 2 599 10 267 2 923 2 433 2 924 2 830 2 91 2 152 2 953 2 516 2 675 2 
242 2 446 2 2 2 846 2 449 4 309 2 813 2 850 2 277 2 101 2 485 2 186 2 752 4 287 4 315 2 459 4 461 4 757 2 689 2 1000 4 913 2 420 4 467 4 977 2 918 2 731 6 733 2 1008 2 229 2 1009 4 297 2 894 2 599 10 267 2 923 2 433 2 924 2 830 2 91 2 152 2 953 2 516 2 675 2 
242 2 446 2 2 2 846 2 449 4 309 2 813 2 850 2 277 2 101 2 485 2 186 2 752 4 287 4 315 2 459 4 461 4 757 2 689 4 1000 4 913 2 420 4 467 4 977 2 918 2 731 6 733 2 1008 2 229 2 1009 4 297 2 894 2 599 10 267 2 923 2 433 2 924 2 830 4 91 2 152 2 953 2 516 4 675 2 
193 2 630 2 785 2 667 2 937 2 587 2 972 2 
605 2 667 2 285 2 732 2 245 2 552 2 
447 2 730 2 393 1 158 2 345 2 711 1 599 10 632 2 960 2 880 2 815 2 542 2 964 2 588 2 477 1 720 1 688 2 1000 8 517 1 722 2 402 2 
780 2 182 1 157 2 846 5 449 11 33 2 280 2 164 2 315 2 459 13 188 4 689 5 1000 6 43 2 111 2 145 2 1009 4 599 6 267 5 433 6 924 5 830 4 925 2 91 6 152 6 772 2 119 3 739 2 608 2 516 5 675 5 
467 2 155 4 1 1 112 2 782 2 921 7 599 1 59 2 666 2 414 2 7 2 752 2 11 2 255 2 461 2 1000 1 612 2 954 2 
467 2 155 4 112 2 782 4 921 6 59 2 666 2 414 2 7 2 752 2 11 4 255 2 461 2 612 4 954 2 
467 2 155 4 1 1 112 2 782 8 921 10 599 1 59 6 666 2 414 2 7 8 752 2 11 8 255 2 461 2 1000 1 612 8 954 2 
467 2 155 2 112 2 782 2 921 2 666 2 414 2 752 2 11 2 255 2 461 2 612 2 954 2 
243 2 129 2 522 1 380 4 903 6 649 6 906 5 907 2 257 2 14 2 532 2 264 18 665 2 148 1 150 2 544 2 543 2 398 2 928 2 154 2 32 16 816 2 284 4 416 4 290 2 41 4 825 2 44 2 298 2 945 4 696 2 828 2 698 2 697 2 836 1 839 2 572 2 958 4 851 2 67 2 586 4 966 4 967 2 717 2 718 2 462 2 320 4 325 2 979 2 599 38 198 2 329 2 89 4 203 1 205 1 611 2 874 4 875 4 211 2 617 2 620 2 104 2 884 2 621 32 219 2 995 2 624 2 1000 34 357 2 358 14 360 2 507 2 509 2 233 2 117 2 118 2 
888 2 874 2 264 2 958 2 32 2 665 2 599 8 903 2 883 2 649 2 938 2 200 2 586 2 621 4 966 2 995 2 118 2 717 2 138 2 1000 8 
888 2 874 2 264 2 958 2 32 2 665 2 599 6 903 2 649 2 586 2 621 4 966 2 995 2 118 2 717 2 1000 6 
888 2 874 2 264 2 958 2 32 2 665 2 599 6 903 2 649 2 586 2 621 4 966 2 995 2 118 2 717 2 1000 6 
276 2 

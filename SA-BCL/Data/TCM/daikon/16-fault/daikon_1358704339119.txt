#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 932 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 697 452 701 221 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 534 824 232 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (668,981) (668,981) 155 534 824 232 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_104()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltsGT([II)Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121036 | = null
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_169()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3_18()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | ASSIGN | 10728 | = null
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_134()Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaCharStream:FillBuff()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_87()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3_3()Z
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptSlice0:arity()I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:memberOf(D[F)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184894 | = null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_68()Z
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3R_164()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_36()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_3R_73()Z
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:split(I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_101()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_121()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3_17()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_125()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.Quant:gte(II)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3_22()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_36(I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | STATEMENT | 38468 | stmt -> ;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:gt(II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_vars()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.Quant:eltsLT([II)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration; | RETURN | 1735 | return null
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:hashCode()I
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_56()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3R_162()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:noDups([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3_30()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_108()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3R_88()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_124()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_105()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_4()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_135()Z
daikon.ValueTuple:isMissing(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3R_48()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_75()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.PptSlice1:arity()I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:slice([III)[I
jtb.JavaCharStream:getBeginColumn()I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eq(FF)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:lte(II)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_148()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3_29()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_18(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:intern([I)[I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.PptSlice2:arity()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3R_116()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:isArray()Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:max([I)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGTE([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String; | ASSIGN | 10463 | = null
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_96()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_sets()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_16(I)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_3R_115()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfo:new_ppt()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_98()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_114()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
970 2 997 2 553 2 493 2 936 2 981 2 473 2 668 2 240 4 
189 2 666 2 400 2 594 6 654 6 522 2 334 2 1022 2 270 6 320 2 1082 2 
981 2 470 4 918 4 668 2 432 6 702 2 831 2 669 2 439 2 211 2 297 6 823 6 396 6 
571 16 648 4 1050 2 303 2 43 10 3 10 1001 4 829 6 578 10 799 12 834 6 278 4 584 8 816 2 981 6 982 8 668 6 171 8 631 2 700 4 632 8 174 2 1107 2 958 26 600 16 498 2 292 10 180 28 269 10 73 16 
375 6 151 4 
339 2 
716 2 149 2 218 2 303 2 152 2 1002 2 583 2 16 2 944 2 586 2 446 2 447 2 86 2 376 2 814 2 453 2 24 2 668 4 458 2 954 2 820 2 262 2 263 2 467 4 963 2 548 4 405 2 406 2 1093 2 913 4 198 2 199 2 694 2 1036 2 981 4 493 2 1105 4 921 2 208 2 927 2 779 2 422 2 70 2 645 2 
571 32 356 4 514 4 39 6 40 8 358 6 3 15 43 6 791 4 578 15 829 4 795 5 799 22 834 4 584 19 806 4 125 2 764 6 486 4 948 4 693 3 628 2 59 2 981 4 982 6 89 2 668 4 700 2 139 2 1107 2 175 6 958 47 600 32 292 15 295 4 180 52 269 15 675 6 73 32 
716 2 460 2 465 2 
784 10 188 2 170 2 954 2 111 2 93 2 957 2 260 2 868 2 989 2 163 2 1080 2 423 2 281 22 
571 2 105 2 3 2 43 4 578 2 799 2 834 2 584 2 52 2 807 2 629 2 700 2 313 2 600 2 958 4 292 2 462 2 180 6 269 2 569 2 185 2 853 2 73 2 
486 4 571 8 39 6 514 4 3 4 578 4 225 2 799 4 600 8 958 12 926 2 292 4 278 2 180 16 269 4 675 6 73 8 
509 2 716 8 678 4 150 4 518 14 754 10 1002 2 360 10 405 4 967 2 46 2 1065 2 116 2 331 62 15 2 913 4 373 4 689 2 690 2 21 2 627 4 1035 4 1070 4 134 4 634 4 732 2 26 2 879 4 206 2 922 2 1017 2 350 2 735 2 1076 2 460 6 847 4 97 2 708 2 465 2 507 4 
22 2 768 2 60 2 
1004 2 7 2 796 4 580 2 438 2 940 2 82 2 808 2 873 2 664 2 668 14 90 6 729 2 596 6 250 4 884 2 539 2 1078 2 822 2 543 2 544 4 748 2 274 2 325 2 970 2 407 2 409 2 332 2 481 2 838 2 916 2 981 14 697 2 1104 2 1040 2 352 4 210 2 424 2 505 2 
668 2 682 2 
497 2 679 2 668 4 
1013 2 
570 2 572 2 4 2 575 4 576 4 577 2 5 4 6 4 8 42 581 2 11 6 14 2 585 2 588 2 20 2 593 2 597 2 598 12 29 2 30 4 601 2 32 2 33 52 34 2 603 50 605 2 608 4 613 2 617 2 47 2 615 2 616 2 618 54 48 4 50 4 619 18 620 2 53 2 624 2 625 2 54 2 56 2 57 2 58 4 630 2 61 50 633 2 64 2 637 2 66 2 638 22 639 2 642 4 644 2 71 2 647 2 74 2 75 2 651 2 652 4 659 4 76 2 77 2 661 2 662 2 81 44 663 2 85 2 665 2 667 2 87 2 88 2 670 4 94 2 96 2 672 4 98 2 99 2 673 2 674 52 102 2 676 2 677 2 104 6 107 2 108 2 109 2 110 4 112 2 113 2 114 88 115 94 118 2 119 246 685 96 686 2 121 2 688 2 126 4 691 2 124 42 692 2 129 2 130 2 132 12 131 2 698 18 135 2 137 94 704 2 142 2 709 20 143 2 713 94 144 44 714 2 145 6 717 2 154 4 718 2 156 62 159 2 162 2 164 4 166 4 165 2 722 2 168 2 167 4 724 8 730 2 172 2 173 2 734 2 736 2 739 2 738 2 176 12 178 2 179 2 183 48 184 2 742 2 187 4 745 18 744 12 746 8 747 22 190 2 751 2 755 100 192 2 756 2 758 2 196 2 759 2 760 2 766 4 200 2 770 2 201 2 772 2 202 12 204 18 205 2 774 2 207 2 776 4 777 2 778 6 780 2 215 4 783 2 217 2 786 16 785 2 787 2 790 12 219 36 224 2 794 16 797 4 226 94 798 2 800 2 227 88 230 18 231 2 235 2 236 18 237 104 234 58 239 2 242 2 243 2 812 8 813 2 815 4 244 2 246 2 245 2 249 2 247 2 251 4 254 14 252 2 256 94 257 8 258 4 818 2 261 6 819 2 821 4 272 2 275 14 826 8 276 2 277 2 279 2 836 2 282 2 285 2 283 2 840 2 289 46 843 6 294 4 848 4 296 2 298 2 850 22 299 2 854 2 855 30 304 2 858 2 305 6 859 16 306 6 867 2 866 2 308 2 871 2 872 2 874 8 875 2 876 2 309 2 314 2 881 4 317 16 882 56 883 4 321 6 322 2 893 4 324 2 891 88 894 2 326 2 897 2 898 4 327 2 899 2 903 18 902 2 905 18 328 4 907 62 330 4 908 4 912 2 336 44 335 2 337 12 915 2 340 42 341 4 342 2 344 4 919 2 348 2 923 4 354 2 928 2 930 2 931 2 932 2 934 28 937 2 362 2 939 2 365 4 367 2 366 2 368 2 941 14 942 2 371 2 943 2 372 2 945 2 949 36 377 2 950 2 952 74 378 18 955 2 956 6 380 2 381 74 383 94 384 4 385 58 387 4 960 30 390 2 393 2 394 2 962 4 403 2 402 246 404 2 965 2 968 4 969 2 410 2 411 2 973 2 974 2 975 2 413 2 976 2 415 4 416 2 980 12 983 4 419 2 986 2 987 4 988 2 421 2 990 2 994 2 427 2 426 2 998 4 433 2 1005 2 435 2 436 2 437 2 440 62 444 2 449 4 450 2 451 4 1009 2 454 2 455 2 457 94 456 30 1014 8 1015 2 1016 2 1018 4 461 6 463 2 1025 4 468 4 1026 2 1027 2 472 2 1028 2 1031 10 1033 8 1034 2 487 6 494 358 1038 4 1039 2 495 2 500 2 502 2 1043 2 1044 6 504 2 1046 2 506 4 510 4 512 2 513 2 1048 2 517 4 1052 4 520 2 519 2 1053 2 1054 4 521 6 1057 2 523 4 524 2 525 2 528 246 532 2 1069 6 1072 4 1074 4 535 2 1075 2 536 2 538 58 1081 2 542 94 1084 2 1085 50 545 2 1087 16 549 94 1089 94 1090 4 550 94 1092 2 1091 4 552 2 1095 2 555 2 1097 2 556 2 1098 4 557 4 1102 2 560 4 1106 2 1108 2 1109 90 566 2 1110 2 567 48 1112 4 1111 2 
966 1 865 2 1011 2 1032 2 
841 2 1032 2 
496 2 716 2 877 2 992 2 
496 2 716 2 877 2 136 2 992 2 886 2 
716 2 648 2 195 2 442 2 1032 2 992 2 
24 2 595 2 
716 2 648 2 992 2 712 2 
18 2 782 2 
62 2 929 2 
488 2 412 2 
703 2 459 2 
563 2 459 2 62 2 
459 2 357 2 62 2 
459 2 62 2 191 2 
459 2 441 2 62 2 
716 2 220 2 828 6 1006 2 720 2 775 2 705 6 992 2 
241 2 42 2 
716 2 648 2 316 2 195 2 1032 2 992 2 886 2 
195 2 2 2 1032 2 
511 2 195 2 1032 2 
241 2 1011 2 909 2 
195 2 1032 2 
241 2 888 2 
750 2 1032 2 
241 2 650 2 1011 2 
1047 2 1011 2 412 2 
459 2 1011 2 852 2 
845 2 1011 2 782 2 
1011 2 640 2 62 2 
241 2 482 2 
268 2 1032 2 
1008 2 412 2 
459 2 443 2 
323 2 782 2 
499 2 62 2 
241 2 805 2 
565 2 62 2 
782 2 484 2 
459 2 333 2 
412 2 579 2 
241 2 765 2 650 2 1011 2 
241 2 765 2 650 2 1011 2 417 2 
241 2 408 2 1011 2 
241 2 1011 2 623 2 
248 2 
146 4 546 2 961 2 607 2 222 2 25 2 359 2 861 2 737 2 386 2 80 2 803 4 541 2 602 2 1096 2 1113 2 530 2 281 6 
1011 2 177 2 
539 2 
7 2 1004 6 438 2 157 8 873 2 1010 4 596 4 729 2 880 2 318 8 37 2 748 2 325 2 753 4 611 2 478 2 477 2 479 2 49 1 332 2 481 2 761 1 916 2 626 2 343 2 63 2 347 2 209 2 352 4 1040 2 65 2 210 2 67 4 214 2 505 2 361 2 1056 3 1055 4 223 2 796 4 1060 2 1064 2 940 2 369 2 82 2 664 2 668 26 250 4 90 6 379 2 817 2 1078 6 543 2 1083 2 544 4 547 2 274 6 832 2 970 2 684 3 409 2 117 2 838 2 122 2 977 2 978 3 1099 2 695 2 1103 2 981 26 697 2 558 2 559 2 1104 2 564 5 138 2 711 2 424 2 
7 2 1004 6 580 2 864 2 438 2 157 8 873 2 1010 4 596 6 729 2 880 2 1019 2 318 8 37 2 748 2 325 2 753 4 611 2 478 2 477 2 479 2 332 2 481 2 916 2 626 2 343 2 63 2 347 2 209 2 352 4 1040 2 65 2 210 2 67 4 214 2 505 2 361 2 1056 2 1055 2 223 2 796 4 1060 2 1064 2 940 2 369 2 82 2 664 2 668 26 250 4 90 6 817 2 1078 6 822 2 543 2 1083 2 544 4 547 2 274 6 827 2 970 2 684 2 409 2 117 2 838 2 122 2 977 2 978 2 1099 2 695 2 696 2 1103 2 981 26 697 2 558 2 1104 2 564 4 138 2 711 2 424 2 
656 2 
95 2 1041 2 
1066 2 900 2 84 2 
1066 2 900 2 84 2 
996 2 1003 2 7 2 1004 2 580 2 438 2 157 4 873 2 594 12 728 2 310 4 596 6 729 2 318 4 1022 4 320 4 889 2 748 2 890 4 325 2 900 2 478 4 757 4 906 2 51 2 332 2 480 2 621 2 481 2 911 2 334 4 197 2 916 2 626 2 767 6 343 4 773 2 349 6 352 4 1040 2 210 2 69 2 505 2 508 4 649 2 789 2 653 2 792 2 654 12 361 4 1055 2 1058 2 796 4 522 4 228 2 1063 2 233 2 1066 6 238 2 940 4 1067 2 529 2 82 2 84 4 664 2 811 2 668 24 250 4 90 6 253 2 382 2 265 2 388 2 1078 2 391 2 822 2 270 16 543 2 1082 4 1083 4 544 4 1086 2 400 4 274 2 106 2 970 2 971 2 409 2 833 2 835 4 1094 4 120 2 838 2 122 2 128 4 695 6 981 16 697 2 558 4 1104 2 561 2 564 2 710 2 851 4 424 2 993 2 
0 2 811 2 1100 2 288 2 981 2 668 4 1058 2 253 2 1059 2 210 2 1041 2 233 2 480 2 940 2 36 2 993 2 604 2 
996 2 1003 2 7 2 1004 2 580 2 438 2 157 4 873 2 594 12 728 2 310 4 596 6 729 2 318 4 1022 4 320 4 606 2 748 2 890 4 325 2 895 2 900 2 478 4 757 4 906 2 51 2 332 2 480 2 621 2 481 2 911 2 334 4 197 2 916 2 626 2 767 6 343 4 773 2 349 6 352 4 1040 2 210 2 69 2 505 2 508 4 649 2 789 2 653 4 792 2 654 12 361 4 1058 2 796 4 522 4 228 2 1063 2 1066 6 238 2 940 2 1067 2 529 2 82 2 84 4 664 2 811 2 668 24 250 4 90 6 253 2 382 2 265 2 388 2 959 2 1078 2 822 2 270 16 543 2 1082 4 1083 4 544 4 1086 4 400 4 274 2 970 2 971 2 409 2 833 2 835 4 1094 4 120 2 837 2 838 2 122 2 687 2 286 2 128 4 695 6 981 16 697 2 558 4 1104 2 561 2 564 4 851 4 424 2 
996 2 1003 2 7 2 1004 2 580 2 438 2 157 4 873 2 594 12 728 2 310 4 596 6 729 2 731 2 318 4 1022 4 320 4 748 2 890 4 325 2 900 2 478 4 757 4 906 2 51 2 332 2 480 2 621 2 481 2 911 2 334 4 197 2 916 2 626 2 767 6 343 4 773 2 349 6 352 4 1040 2 210 2 69 2 646 2 505 2 508 4 649 2 789 2 653 2 792 2 654 12 361 4 1055 1 1058 2 796 4 522 4 228 2 1063 2 526 2 233 2 1066 6 238 2 940 4 1067 2 529 2 82 2 84 4 664 2 811 2 668 24 250 4 90 6 1073 2 253 2 382 2 265 2 388 2 959 2 1078 2 822 2 270 16 543 2 1082 4 1083 4 544 4 1086 4 400 4 274 2 970 2 971 2 409 2 833 2 835 4 1094 4 120 2 838 2 122 2 128 4 695 6 981 16 697 2 558 4 1104 2 561 2 564 2 706 2 851 4 424 2 993 2 
544 4 825 2 748 2 892 2 325 2 221 2 7 2 580 2 434 2 332 2 804 2 82 2 873 2 489 2 810 2 452 2 981 2 697 2 668 6 729 2 844 2 250 4 596 6 701 2 293 2 1042 2 822 2 505 2 
715 2 516 2 274 2 1000 2 1056 3 1004 2 477 2 684 3 582 2 551 2 79 1 483 2 370 2 979 2 769 3 1010 2 981 2 169 2 668 2 92 2 564 3 209 6 1020 2 1078 2 1021 4 
715 2 516 2 274 2 1000 2 1056 2 1004 2 477 2 684 2 582 2 551 2 483 2 370 2 979 2 769 2 1010 2 981 2 169 2 668 2 92 2 564 2 209 6 1020 2 1078 2 1021 4 
715 2 516 2 274 2 1000 2 1056 2 1004 2 477 2 684 2 582 2 551 2 483 2 370 2 979 2 769 2 1010 2 981 2 169 2 668 2 92 2 564 2 209 6 1020 2 1078 2 1021 4 
571 2 148 2 302 2 3 2 578 2 1056 3 1004 2 862 3 946 3 723 4 668 10 727 2 878 2 255 2 671 2 315 2 600 2 958 4 267 6 392 2 180 6 269 2 101 4 466 4 887 2 749 2 752 2 829 2 964 3 477 2 683 2 483 2 914 2 981 4 982 4 920 4 564 3 292 2 72 4 73 2 
887 2 571 2 148 2 749 2 302 2 752 2 3 2 578 2 964 2 829 2 1056 2 1004 2 477 2 683 2 799 2 862 2 584 2 483 2 914 2 946 2 723 4 981 4 982 4 727 2 668 10 920 4 878 2 255 2 564 2 315 2 671 2 1107 2 958 4 600 2 292 2 392 2 267 6 180 4 101 4 269 2 72 4 466 4 73 2 
887 2 571 2 148 2 749 2 302 2 752 2 3 2 578 2 964 2 829 2 1056 2 1004 2 477 2 683 2 799 2 862 2 584 2 483 2 914 2 946 2 723 4 981 4 982 4 727 2 668 10 920 4 878 2 255 2 564 2 315 2 671 2 1107 2 958 4 600 2 292 2 392 2 267 6 180 4 101 4 269 2 72 4 466 4 73 2 
887 2 571 2 148 2 749 2 302 2 752 2 3 2 578 2 964 2 829 2 1056 2 1004 2 477 2 683 2 799 2 862 2 584 2 483 2 914 2 946 2 723 4 981 4 982 4 727 2 668 10 920 4 878 2 255 2 564 2 315 2 671 2 1107 2 958 4 600 2 292 2 392 2 267 6 180 4 101 4 269 2 72 4 466 4 73 2 
887 2 571 2 148 2 749 2 302 2 752 2 3 2 578 2 964 2 829 2 1056 2 1004 2 477 2 683 2 799 4 862 2 584 4 483 2 914 2 946 2 723 4 981 4 982 4 727 2 668 10 920 4 878 2 255 2 564 2 315 2 671 2 1107 4 958 4 600 2 292 2 392 2 267 6 180 4 101 4 269 2 72 4 466 4 73 2 
399 2 771 2 203 2 476 2 599 2 369 2 743 2 
38 2 1062 2 771 2 610 2 781 2 10 2 
300 2 995 2 1051 2 194 2 160 1 19 2 338 2 1007 2 587 2 55 2 690 1 947 2 491 2 1071 2 981 8 668 10 732 1 420 2 213 2 740 2 35 1 643 2 464 2 424 2 186 2 398 1 
571 6 356 2 39 4 514 2 40 2 933 2 3 6 938 2 578 6 829 2 795 4 45 2 406 2 904 2 799 4 527 2 584 2 1012 2 981 6 982 4 668 6 1107 2 958 12 600 6 291 2 292 6 180 16 269 6 645 2 73 6 
809 2 590 2 515 2 951 2 1 2 153 2 609 2 920 2 158 2 641 2 101 2 17 2 72 2 
374 1 809 2 590 6 515 2 951 2 1 2 981 1 153 2 668 1 609 2 920 2 719 2 158 2 641 2 101 2 17 4 1045 2 72 2 
809 2 590 6 515 2 951 4 1 2 153 4 609 2 920 2 719 2 158 4 641 2 101 2 17 4 1045 2 72 2 
374 1 809 2 590 10 515 2 951 8 1 2 981 1 153 8 668 1 609 2 920 2 719 6 158 8 641 2 101 2 17 4 1045 8 72 2 
147 6 428 6 573 6 574 6 999 6 431 4 857 6 9 6 580 20 860 2 157 4 721 12 870 13 873 10 448 4 589 6 592 12 591 2 726 6 596 88 311 6 27 2 733 6 28 3 31 6 885 6 1023 6 182 2 741 6 1024 6 748 4 469 1 325 10 471 2 44 6 475 6 193 12 901 12 614 12 622 4 762 6 485 4 917 6 490 2 492 6 1037 2 345 2 635 12 924 2 351 12 925 6 636 8 353 6 503 2 68 6 788 6 935 4 657 4 363 2 364 2 1061 42 232 2 78 2 660 4 533 4 668 90 534 2 250 36 91 4 259 2 264 4 1077 2 266 12 389 6 100 4 822 20 1079 6 824 2 544 42 271 12 1088 6 680 6 401 6 830 2 972 4 284 4 123 4 127 22 133 6 981 78 699 2 985 6 846 2 849 2 568 2 
1049 2 430 2 655 2 1055 2 364 2 155 2 229 2 1061 2 863 2 157 16 232 2 307 2 721 2 445 2 873 2 725 2 534 2 668 24 250 10 596 20 953 2 312 2 537 2 1077 2 540 2 1079 2 824 2 544 10 271 2 748 2 325 2 471 2 681 2 474 2 896 2 612 4 614 2 329 2 910 2 280 2 839 2 287 4 1101 2 981 24 985 2 346 2 924 2 846 2 501 2 353 2 568 2 216 4 
147 4 301 10 428 16 429 8 573 4 574 4 856 16 999 4 431 4 857 4 9 4 580 30 860 2 12 4 157 14 13 32 869 10 721 10 870 10 448 4 873 6 589 4 591 4 592 8 726 4 596 104 311 4 31 4 885 8 319 4 181 4 1023 4 182 4 741 8 1024 4 41 2 748 2 471 2 325 6 44 4 193 14 901 24 614 10 622 4 485 4 763 2 917 4 492 8 345 2 635 24 351 10 924 2 925 4 636 6 353 4 212 8 68 4 355 4 788 4 935 4 364 2 229 2 801 2 1061 24 78 4 232 2 660 4 1068 2 531 4 533 4 668 78 534 2 250 36 91 4 1077 2 266 6 389 4 822 28 1079 4 395 2 824 2 397 2 103 10 544 44 271 10 1088 4 401 6 680 4 830 2 972 4 554 8 284 4 123 4 127 30 133 4 981 70 290 16 699 2 418 2 985 4 562 2 140 8 846 2 849 2 707 4 425 4 991 2 
147 2 788 4 574 4 999 2 793 2 657 2 658 2 1055 2 364 2 580 12 229 2 1061 8 157 14 232 2 78 4 802 2 1068 2 721 6 870 2 873 2 591 2 534 2 668 28 250 14 596 40 259 2 28 2 264 2 1077 2 266 2 100 10 822 12 1079 4 182 2 824 2 544 14 271 6 1024 2 748 2 44 4 325 2 680 2 401 2 471 2 1029 2 614 6 1030 2 127 6 490 2 492 6 981 26 699 2 985 4 924 2 351 2 636 4 846 2 353 4 141 2 
842 2 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 
414 1 23 1 273 1 161 1 83 1 984 1 

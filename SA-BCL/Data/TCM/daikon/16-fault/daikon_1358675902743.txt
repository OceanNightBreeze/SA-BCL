#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 801 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 434 174 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 221 800 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 547 724 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 603 603 790 (345,637) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 603 603 790 (345,637) (345,637) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 603 603 790 (345,637) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 529 76 153 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V FAILED junit.framework.AssertionFailedError 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException (532,704) (532,704) (532,704) (532,704) 416 99 535 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (21,245) (21,245) 416 99 535 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 416 99 535 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:union([I[I)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName; | RETURN | 62448 | return null
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 30667 | return null
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:memberOf(J[J)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:memberOf(D[F)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration; | RETURN | 7701 | return null
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsLT([II)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([I)[I
daikon.Quant:eq(II)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z | CONSTANT | 1896 | 0 -> -1
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 12352 | stmt -> ;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:sameLength([I[I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:intern([D)[D
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String; | CONDITION | 29684 | if (x) -> if (!x)
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltsGT([II)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:arity()I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ModBitTracker:num_vars()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfo:relate_var()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:subarray([III)[I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf([I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_16()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([B[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexGTE([I[I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:passes()Z
daikon.ProglangType:baseIsScalar()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isPointer()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z | CONDITION | 4936 | if (x) -> if (!x)
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.RootNode:RootNode()V
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptName:isEnterPoint()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGTE([II)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ValueTuple:isMissing(I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eq(FF)Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.Debug:logOn()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ProglangType:isScalar()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([D)D
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107780 | = null
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 2 624 2 771 2 858 2 682 2 245 2 560 2 24 2 274 4 
711 6 75 6 603 2 440 2 211 2 942 2 273 2 95 2 723 6 105 2 737 2 
399 6 252 2 172 6 910 2 546 2 55 4 731 6 349 6 863 2 21 2 928 4 245 2 904 2 
140 10 329 2 53 16 83 2 844 10 299 8 3 2 814 10 656 2 688 2 715 2 817 16 562 2 87 8 245 6 451 4 726 8 601 26 424 10 765 4 767 6 486 16 666 12 21 6 287 8 736 30 555 10 202 6 645 4 291 4 
801 2 
680 2 
110 2 174 2 612 2 434 2 
601 12 423 4 140 4 861 2 53 8 188 4 844 4 765 2 814 4 523 2 486 8 666 5 817 8 736 14 304 6 555 4 201 6 
108 2 937 10 649 2 939 2 335 2 621 14 498 4 212 2 945 4 745 4 302 4 627 8 118 2 913 2 456 2 630 4 11 2 253 2 152 10 346 2 542 2 856 2 281 4 544 4 425 2 797 2 575 4 834 2 802 4 45 4 312 2 285 2 927 62 71 4 528 2 956 4 705 2 323 4 616 2 677 6 
47 2 680 2 747 2 912 2 117 2 305 2 163 2 548 2 379 2 192 2 
627 2 11 2 677 2 
775 2 357 2 906 2 651 2 67 2 946 2 722 22 406 2 263 2 865 2 89 2 932 2 961 10 107 2 
905 2 712 2 1 2 778 2 909 2 714 2 115 2 715 2 5 2 245 4 725 2 129 2 663 2 21 4 610 2 430 2 432 2 865 2 385 4 614 2 616 2 556 2 437 2 80 2 33 2 689 2 36 2 624 2 339 2 745 2 626 2 627 2 628 2 692 2 454 2 38 2 219 4 890 2 575 4 226 2 167 4 701 2 642 2 290 2 
293 4 557 6 777 2 140 16 53 32 844 16 334 2 814 16 176 2 336 4 817 32 341 2 562 2 87 18 246 4 245 4 120 6 453 8 59 2 304 6 279 2 827 6 662 6 601 48 423 4 761 4 424 6 188 4 767 4 486 32 666 22 21 4 287 6 805 4 736 56 555 16 645 2 201 6 202 4 
355 6 234 3 365 2 846 2 239 2 4 2 241 2 243 22 245 32 249 2 248 2 125 1 480 2 376 2 604 2 729 2 485 16 21 30 386 2 136 1 137 2 138 2 615 2 26 2 388 1 620 2 275 1 145 2 622 2 35 3 500 1 503 1 746 1 504 2 509 4 39 16 41 2 278 3 280 2 151 1 757 2 282 2 519 4 517 2 634 2 522 2 766 6 768 6 894 2 895 1 897 2 640 4 900 2 530 12 903 2 774 22 173 3 52 4 781 2 533 2 300 1 655 2 56 1 301 2 537 2 303 4 792 1 539 12 63 2 540 1 186 12 800 2 427 2 549 2 70 3 667 1 803 10 428 2 194 2 551 2 322 2 676 2 808 2 681 1 204 2 559 2 938 2 78 1 560 2 813 2 330 2 445 2 446 2 452 2 693 1 217 2 824 6 826 2 91 2 221 2 347 3 93 3 462 2 576 2 836 1 581 2 700 5 465 2 104 2 353 2 962 3 
508 2 
245 2 65 2 
400 2 245 4 121 2 
647 12 360 12 362 4 908 2 413 6 590 2 650 2 845 6 472 4 720 38 242 2 6 2 850 2 852 16 724 2 62 12 124 2 183 2 64 4 185 10 374 12 15 2 547 6 257 8 426 6 18 12 20 4 190 8 668 2 609 2 318 4 191 8 382 8 133 12 672 2 196 2 554 6 435 8 387 2 267 14 617 6 205 38 441 12 208 2 209 2 30 12 494 8 333 12 338 38 90 4 220 2 950 4 828 4 758 4 402 12 224 8 763 2 227 2 165 8 770 4 525 2 289 12 106 2 
203 2 254 2 327 2 193 1 
203 2 473 2 
867 2 203 2 168 2 
867 2 203 2 463 2 
793 2 254 2 925 2 
867 2 203 2 
793 2 595 2 
203 2 784 2 
793 2 254 2 394 2 
776 2 254 2 832 2 
12 2 254 2 665 2 
254 2 436 2 631 2 
566 2 254 2 749 2 
793 2 716 2 
203 2 315 2 
277 2 832 2 
742 2 665 2 
436 2 896 2 
566 2 261 2 
793 2 931 2 
566 2 250 2 
436 2 764 2 
131 2 665 2 
891 2 832 2 
793 2 254 2 384 2 394 2 
793 2 49 2 254 2 384 2 394 2 
793 2 254 2 769 2 
793 2 254 2 573 2 
17 2 407 2 477 2 773 2 
326 2 50 2 748 2 627 2 
326 2 412 2 50 2 748 2 627 2 7 2 
867 2 203 2 359 2 50 2 627 2 451 2 
378 2 725 2 
50 2 627 2 451 2 753 2 
436 2 363 2 
566 2 820 2 
832 2 162 2 
665 2 843 2 
566 2 455 2 665 2 
566 2 283 2 665 2 
566 2 79 2 665 2 
566 2 665 2 496 2 
50 2 236 2 178 6 627 2 948 2 251 2 632 2 585 6 
793 2 158 2 
867 2 203 2 412 2 50 2 627 2 451 2 25 2 
868 2 618 2 951 4 77 2 952 2 187 2 113 2 521 2 493 2 623 2 96 2 849 2 476 2 722 6 396 2 706 2 458 4 397 2 
254 2 518 2 
462 2 
355 2 589 4 361 2 364 4 474 2 4 8 848 2 243 4 245 26 248 2 481 2 259 2 21 26 134 2 386 2 138 2 615 2 27 4 388 4 143 2 622 2 503 2 504 2 509 4 757 2 282 2 515 2 519 4 517 2 634 2 766 4 522 2 768 2 894 2 897 2 900 2 903 6 774 6 409 2 52 4 781 2 783 2 533 2 301 2 303 4 540 2 541 2 800 2 427 2 311 2 803 6 428 2 673 2 675 2 676 2 933 2 808 2 204 2 560 2 943 2 446 8 819 2 821 2 88 2 343 2 217 2 824 6 698 2 839 2 578 2 97 2 350 2 702 2 352 2 104 2 467 2 
355 2 589 4 361 2 364 4 474 2 4 8 848 2 243 4 245 26 248 2 481 2 259 2 21 26 134 2 386 2 138 2 615 2 738 2 27 4 388 2 143 2 622 2 497 2 503 2 504 2 509 4 757 2 282 2 515 2 519 4 517 2 634 2 161 2 766 6 522 2 768 2 894 2 897 2 900 2 903 6 774 6 409 2 52 4 781 2 783 2 533 2 301 2 303 4 540 2 541 2 800 2 427 2 311 2 803 6 428 2 673 2 675 2 807 2 933 2 676 2 808 2 204 2 938 2 560 2 943 2 446 8 819 2 88 2 343 2 217 2 824 6 839 2 578 2 97 2 350 2 702 2 352 2 104 2 353 2 
739 2 
297 2 881 2 
646 4 270 2 711 2 375 2 860 2 444 2 95 2 637 2 699 2 563 2 505 4 723 2 60 2 216 2 916 2 737 2 306 2 678 2 
646 4 711 4 468 2 52 2 654 2 179 2 657 2 367 4 723 6 245 12 248 2 790 2 60 2 916 2 306 2 727 2 126 2 375 2 603 2 860 4 728 2 798 2 66 2 427 2 21 6 929 2 386 2 199 4 676 2 737 4 678 2 269 2 270 2 75 6 444 2 942 2 332 2 744 2 37 2 392 2 561 4 563 2 505 4 149 4 695 2 216 2 509 2 824 4 947 2 513 2 156 2 517 2 95 4 637 2 579 2 699 2 894 2 840 6 900 2 102 4 
646 4 711 6 468 2 52 2 654 2 179 2 657 2 367 4 723 4 245 12 248 2 790 2 60 2 916 2 306 2 727 2 126 2 375 2 603 2 860 4 728 2 798 2 66 2 427 2 21 6 929 2 386 2 199 4 676 2 737 4 678 2 269 2 270 2 75 6 444 2 273 2 332 2 744 2 37 2 392 2 561 4 563 2 505 4 149 4 695 2 216 2 509 2 824 4 947 2 513 2 156 2 517 2 95 4 637 2 579 2 699 2 894 2 840 6 900 2 102 4 
646 4 711 6 468 2 52 2 654 2 179 2 657 2 367 8 723 6 245 12 248 2 790 2 60 2 916 2 306 2 727 2 126 2 375 2 603 2 860 4 728 2 798 2 66 2 427 2 21 6 929 2 386 2 199 4 676 2 737 4 678 2 269 2 270 2 75 6 444 2 211 2 332 2 744 2 37 2 392 2 561 4 563 2 505 4 149 4 695 2 216 2 509 2 824 4 947 2 513 2 156 2 517 2 95 4 637 2 579 2 699 2 894 2 840 6 900 2 102 4 
646 4 711 8 468 2 52 2 654 2 179 2 657 2 367 8 723 6 245 12 248 2 790 2 60 2 916 2 306 2 727 2 126 2 375 2 603 2 860 4 728 2 798 2 66 2 427 2 21 6 929 2 386 2 199 4 676 2 737 4 678 2 269 2 270 2 75 8 444 2 211 2 273 2 332 2 744 2 37 2 392 2 561 4 563 2 505 4 149 4 695 2 216 2 509 2 824 4 947 2 513 2 156 2 517 2 95 4 637 2 579 2 699 2 894 2 840 10 900 2 102 8 
646 4 711 6 468 2 52 2 654 2 179 2 657 2 367 8 723 6 245 12 248 2 790 2 60 2 916 2 306 2 727 2 126 2 375 2 603 2 860 4 728 2 798 2 66 2 427 2 21 6 929 2 386 2 199 4 676 2 737 4 678 2 269 2 270 2 75 6 444 2 211 2 332 2 744 2 37 2 392 2 561 4 563 2 505 4 149 4 695 2 216 2 509 2 824 4 947 2 513 2 156 2 517 2 95 4 637 2 579 2 699 2 894 2 840 10 900 2 102 8 
711 8 468 2 237 2 4 4 719 1 723 4 243 2 245 46 248 2 727 2 255 8 481 2 728 2 484 6 258 2 260 2 21 24 737 4 269 4 270 2 29 2 492 2 273 4 744 4 37 2 505 4 504 2 752 6 507 2 508 6 754 2 509 4 757 2 43 1 513 2 282 2 515 4 517 2 519 4 766 6 522 2 768 2 774 8 294 1 52 4 781 2 54 1 533 2 301 2 303 4 787 4 788 6 790 2 60 2 306 2 309 7 545 6 798 2 65 6 800 2 66 2 803 6 553 2 324 6 808 2 809 2 74 6 75 12 560 2 332 2 819 2 818 2 561 8 340 2 563 2 342 2 822 6 824 6 835 2 95 4 579 2 839 2 98 2 840 2 582 2 104 2 353 2 355 2 589 4 591 2 367 2 368 2 594 2 122 6 853 6 855 2 600 2 375 2 603 4 860 4 128 2 605 2 386 2 138 2 615 2 388 1 389 6 879 2 622 2 392 2 884 2 149 4 400 6 156 2 159 6 633 1 634 2 637 2 894 2 897 12 900 2 903 6 409 2 646 4 648 10 653 2 654 2 179 2 177 2 657 2 914 2 916 2 915 2 420 7 422 6 922 2 427 2 428 2 929 2 195 4 674 1 199 6 676 2 933 2 678 2 204 2 938 2 442 2 444 2 685 1 446 4 691 1 450 6 695 2 217 2 216 2 696 2 947 2 218 1 699 2 960 2 
355 2 589 4 711 8 468 2 364 2 237 2 591 2 4 8 368 2 243 2 723 8 367 6 245 48 594 2 248 2 122 6 853 6 727 2 855 2 255 8 600 2 481 2 603 4 375 2 128 2 860 4 728 2 605 2 484 6 258 2 260 2 21 26 386 2 138 2 615 2 737 4 269 4 270 2 389 6 29 2 879 2 492 2 744 4 622 2 392 2 37 2 884 2 504 4 505 4 149 4 507 2 752 6 508 6 754 2 509 4 757 2 400 6 513 2 156 2 515 4 282 2 519 4 517 2 159 6 634 4 522 2 766 6 768 2 637 2 894 2 897 12 900 2 774 8 903 6 409 2 646 4 648 10 52 4 781 4 653 2 654 2 533 2 177 2 179 2 301 2 657 2 787 4 303 4 788 6 790 2 914 2 60 2 915 2 916 2 306 2 422 6 545 6 65 6 798 2 800 2 66 2 922 2 427 2 428 2 803 6 929 2 195 4 553 2 199 6 933 2 676 2 678 2 324 6 74 6 809 2 808 2 75 12 204 2 938 2 442 2 560 2 444 2 210 2 211 4 446 8 332 2 818 2 819 2 340 2 561 8 342 2 563 2 450 6 822 6 695 2 696 2 216 2 217 2 824 6 947 2 835 2 95 4 839 2 579 2 699 2 840 2 98 2 582 2 957 2 104 2 960 2 353 2 
355 2 589 4 711 8 468 2 364 2 237 2 591 2 4 8 368 2 243 2 723 8 367 6 245 48 594 2 248 2 122 6 853 6 727 2 855 2 255 8 600 2 481 2 603 4 375 2 128 2 860 4 728 2 605 2 484 6 258 2 260 2 21 26 386 2 138 2 615 2 737 4 269 4 270 2 389 6 29 2 879 2 492 2 744 4 622 2 392 2 37 2 884 2 504 4 505 4 149 4 507 2 752 6 508 6 754 2 509 4 757 2 400 6 513 2 156 2 515 4 282 2 519 4 517 2 159 6 634 4 522 2 766 6 768 2 637 2 894 2 897 12 900 2 774 8 903 6 409 2 646 4 648 10 52 4 781 4 653 2 654 2 533 2 177 2 179 2 301 2 657 2 787 4 303 4 788 6 790 2 914 2 60 2 915 2 916 2 306 2 422 6 545 6 65 6 798 2 800 2 66 2 922 2 427 2 428 2 803 6 929 2 195 4 553 2 199 6 676 2 933 2 678 2 324 6 74 6 809 2 808 2 75 12 204 2 938 2 442 2 560 2 444 2 210 2 211 4 446 8 332 2 818 2 819 2 340 2 561 8 342 2 563 2 450 6 822 6 695 2 696 2 216 2 217 2 824 6 947 2 835 2 95 4 839 2 579 2 699 2 98 2 840 6 582 2 957 2 102 4 104 2 960 2 353 2 
711 10 468 2 237 2 4 10 475 2 723 10 243 4 245 52 248 2 727 2 255 8 481 4 728 2 484 12 258 2 19 2 260 2 21 24 737 4 269 4 270 2 271 2 29 2 492 2 273 2 744 4 37 2 505 4 504 4 751 6 507 2 752 6 508 12 754 2 509 4 757 2 513 2 282 2 515 4 517 2 519 4 520 6 766 6 522 2 768 4 774 12 52 4 781 4 533 2 301 2 303 4 787 4 57 6 788 6 790 2 60 2 306 2 545 12 798 2 65 12 800 2 66 2 316 2 803 8 317 2 553 2 324 6 808 2 809 2 74 12 75 16 560 2 328 6 332 2 819 2 818 2 561 8 340 2 342 2 563 2 822 6 824 6 835 2 95 4 579 2 839 2 840 6 98 2 582 2 102 4 104 2 353 2 355 4 589 6 364 2 591 2 367 6 368 2 119 6 596 2 122 6 853 6 855 2 600 2 375 2 603 4 860 4 128 2 605 2 381 6 383 2 386 2 138 2 615 2 389 6 879 2 622 2 392 2 884 2 149 4 150 6 400 12 156 2 159 6 634 4 637 2 894 2 897 10 900 2 903 8 409 4 646 4 648 8 653 2 654 2 179 2 177 2 657 2 418 6 914 2 916 2 915 2 422 6 922 2 427 2 428 2 929 2 195 4 199 6 933 2 676 2 678 2 204 2 938 2 442 2 444 2 210 2 211 4 942 2 446 10 214 2 450 6 695 2 217 2 216 2 696 2 947 2 699 2 957 2 959 6 960 2 
646 2 75 4 270 2 711 6 468 2 211 2 654 2 332 2 179 2 392 2 37 2 561 2 367 6 505 2 723 6 245 4 149 2 790 2 695 2 216 2 306 2 727 2 603 2 375 2 798 2 66 2 95 4 579 2 637 2 699 2 840 4 102 4 199 2 737 4 678 2 
355 3 711 6 589 4 468 2 111 2 723 6 243 3 367 6 245 28 248 2 594 2 727 2 854 2 480 2 603 2 375 2 21 24 386 2 138 2 737 4 615 2 270 2 622 2 37 2 392 2 505 2 149 2 509 4 757 2 282 2 515 2 517 2 519 4 522 2 766 6 768 3 637 2 894 2 897 4 900 2 903 6 774 8 646 2 648 2 52 4 652 2 654 2 533 2 179 2 301 2 537 2 303 4 790 2 306 2 798 2 800 2 66 2 427 2 803 6 428 2 199 2 933 2 676 2 678 2 808 2 75 4 204 2 938 2 560 2 211 2 332 2 815 3 213 2 448 2 819 2 561 2 452 2 695 2 217 2 216 2 824 6 947 2 462 2 95 4 579 2 699 2 840 2 104 2 353 2 
646 4 711 6 468 2 52 2 654 2 179 2 657 2 367 8 723 6 245 12 248 2 790 2 60 2 916 2 306 2 727 2 126 2 375 2 603 2 860 4 728 2 798 2 66 2 427 2 21 6 929 2 386 2 199 4 676 2 737 4 678 2 269 2 270 2 75 6 444 2 211 2 332 2 744 2 37 2 392 2 561 4 563 2 505 4 149 4 695 2 216 2 509 2 824 4 947 2 513 2 156 2 517 2 95 4 637 2 579 2 699 2 894 2 840 10 900 2 102 8 
646 4 711 6 468 2 52 2 654 2 179 2 657 2 367 8 723 8 245 12 248 2 790 2 60 2 916 2 306 2 598 2 375 2 603 2 860 4 728 2 798 2 66 2 427 2 21 6 929 2 386 2 199 4 676 2 737 4 678 2 269 2 270 2 75 8 444 2 211 2 942 2 332 2 744 2 944 2 37 2 392 2 561 4 563 2 505 4 149 4 695 2 509 2 216 2 824 4 947 2 513 2 156 2 517 2 95 4 637 2 579 2 699 2 894 2 840 10 900 2 102 8 231 4 
798 2 461 2 332 2 
798 2 461 2 332 2 
711 8 4 4 243 2 367 6 723 8 245 24 248 2 10 2 603 4 21 16 386 2 264 2 138 2 265 2 615 2 866 2 737 4 740 2 388 2 622 2 504 4 505 2 506 2 149 2 509 4 757 2 760 2 282 2 515 2 519 4 517 2 634 4 766 6 522 2 637 2 894 2 897 4 900 2 903 2 774 2 646 2 648 2 52 4 781 4 533 2 301 2 787 2 303 4 58 2 790 2 791 2 422 2 798 2 427 2 313 2 803 2 428 2 195 2 675 4 199 2 933 2 676 2 678 2 808 2 75 8 204 2 938 2 560 2 211 4 446 4 332 2 819 2 561 4 695 2 217 2 457 2 824 6 95 4 839 2 699 2 840 2 102 2 104 2 708 2 353 2 
740 2 422 2 759 2 648 2 444 2 812 2 297 2 835 2 258 2 21 2 897 2 658 2 506 2 195 2 245 4 58 2 248 2 
711 8 4 4 243 4 367 6 723 8 245 20 248 2 10 2 603 4 21 14 386 2 264 4 138 2 265 2 615 2 866 2 737 4 622 2 504 4 505 2 506 2 149 2 509 4 757 2 760 2 282 2 515 2 519 4 517 2 634 4 766 6 522 2 637 2 894 2 897 2 900 2 903 2 774 2 646 2 52 4 781 4 533 2 301 2 787 2 303 4 58 2 790 2 791 2 798 2 427 2 313 2 803 2 428 2 675 4 199 2 933 2 676 2 678 2 808 2 75 8 204 2 938 2 560 2 211 4 687 2 446 4 332 2 819 2 561 4 695 2 217 2 457 2 824 6 345 2 95 4 839 2 699 2 840 2 102 2 104 2 708 2 353 2 
711 8 4 4 243 2 367 6 723 8 245 24 248 2 10 2 603 4 21 16 386 2 264 2 138 2 265 2 615 2 866 2 737 4 740 2 388 1 622 2 504 4 505 2 506 2 149 2 509 4 757 2 760 2 282 2 515 2 519 4 517 2 634 4 766 6 522 2 637 2 894 2 897 4 900 2 903 2 774 2 646 2 648 2 52 4 781 4 533 2 301 2 787 2 303 4 58 2 790 2 791 2 422 2 798 2 427 2 313 2 803 2 428 2 195 2 675 4 199 2 933 2 676 2 678 2 808 2 75 8 204 2 938 2 560 2 211 4 446 4 332 2 819 2 561 4 695 2 217 2 457 2 824 6 95 4 839 2 699 2 840 2 102 2 104 2 708 2 353 2 
710 2 232 2 713 2 470 2 237 2 238 2 240 2 717 2 475 2 4 24 718 1 243 19 244 2 245 60 248 2 481 46 14 2 482 2 483 2 730 2 16 2 486 8 19 2 487 2 259 2 21 48 732 2 733 4 734 2 22 2 736 16 491 2 266 2 268 2 28 2 271 2 29 2 272 4 741 2 495 2 32 2 743 16 499 3 502 2 503 2 754 2 509 4 756 2 510 14 42 4 279 2 757 4 514 2 281 2 515 2 282 2 44 14 519 16 517 2 284 2 766 29 522 6 45 2 768 16 767 4 524 4 286 4 287 6 527 2 288 6 529 2 46 3 530 4 774 28 48 4 292 10 532 16 296 2 52 4 53 8 782 12 298 2 785 2 533 4 534 10 301 2 786 12 303 14 789 2 304 6 61 2 539 4 541 14 540 2 307 2 544 2 796 4 799 2 800 2 310 2 311 2 68 2 69 2 314 4 316 2 803 14 319 12 806 2 552 3 72 2 555 4 809 2 808 2 558 2 76 2 560 4 81 1 82 2 331 4 814 4 815 2 816 2 817 8 819 2 87 4 88 2 823 2 344 10 825 12 824 6 567 2 570 4 569 2 92 2 571 2 830 6 831 3 348 4 94 6 574 2 577 2 838 2 578 2 839 4 350 2 580 2 582 2 100 2 352 2 104 2 586 2 353 7 355 19 109 2 589 12 358 2 112 2 844 4 114 2 847 2 593 1 369 1 370 2 851 2 596 2 123 2 854 2 373 10 859 2 601 12 602 4 606 2 862 2 608 2 130 10 383 2 864 4 386 2 139 4 138 2 615 2 870 16 874 2 871 2 619 2 388 1 875 2 876 2 140 4 142 2 390 1 880 2 882 4 622 2 886 2 885 2 887 2 630 2 888 2 153 2 155 2 635 12 404 2 166 6 638 24 894 2 639 2 897 2 641 2 898 16 900 2 901 1 169 2 643 3 902 2 644 2 903 14 409 20 410 2 907 2 175 4 652 2 176 4 177 4 911 2 181 2 917 2 660 2 918 10 920 2 188 4 921 2 923 2 427 2 924 2 666 6 926 2 428 2 669 12 429 2 671 2 676 2 679 2 934 2 204 2 439 2 938 7 207 2 206 2 684 2 940 2 686 2 943 2 446 25 447 4 945 2 213 2 448 2 690 2 449 2 214 2 694 4 217 6 696 2 697 12 460 2 953 4 955 14 228 2 229 1 703 4 704 16 958 2 466 2 707 2 230 2 963 2 
355 2 292 4 589 2 713 2 243 2 417 2 245 2 789 2 569 2 918 2 481 6 606 2 800 2 482 2 768 2 130 2 803 2 21 2 22 2 707 2 46 2 586 2 774 2 903 2 
355 2 292 4 589 2 713 2 243 2 417 2 245 2 789 2 569 2 918 2 481 6 606 2 800 2 482 2 768 2 130 2 803 2 21 2 22 2 707 2 46 2 586 2 774 2 903 2 
355 2 292 4 589 2 713 2 243 2 417 2 245 2 789 2 569 2 918 2 481 6 606 2 800 2 482 2 768 2 130 2 803 2 21 2 22 2 707 2 46 2 586 2 774 2 903 2 
355 3 713 2 140 2 53 2 844 2 814 2 499 3 817 2 86 2 243 3 245 4 419 3 539 2 601 4 602 2 831 3 225 2 800 2 833 2 767 2 486 2 166 2 21 2 380 2 611 2 287 4 736 4 555 2 198 2 530 2 774 2 
355 2 713 2 140 2 53 2 844 2 814 2 499 2 817 2 86 2 562 2 243 2 87 2 245 4 419 2 539 2 601 4 602 2 831 2 225 2 800 2 833 2 767 2 486 2 666 2 166 2 21 2 380 2 611 2 287 4 736 4 555 2 198 2 530 2 774 2 
355 2 713 2 140 2 53 2 844 2 814 2 499 2 817 2 86 2 562 2 243 2 87 2 245 4 419 2 539 2 601 4 602 2 831 2 225 2 800 2 833 2 767 2 486 2 666 2 166 2 21 2 380 2 611 2 287 4 736 4 555 2 198 2 530 2 774 2 
355 2 713 2 140 2 53 2 844 2 814 2 499 2 817 2 86 2 562 2 243 2 87 2 245 4 419 2 539 2 601 4 602 2 831 2 225 2 800 2 833 2 767 2 486 2 666 2 166 2 21 2 380 2 611 2 287 4 736 4 555 2 198 2 530 2 774 2 
355 2 713 2 140 2 53 2 844 2 814 2 499 2 817 2 86 2 562 4 243 2 87 4 245 4 419 2 539 2 601 4 602 2 831 2 225 2 800 2 833 2 767 2 486 2 666 4 166 2 21 2 380 2 611 2 287 4 736 4 555 2 198 2 530 2 774 2 
541 2 438 2 919 2 592 2 132 2 564 2 478 2 
888 2 592 2 101 2 31 2 372 2 935 2 
108 1 531 2 411 2 873 1 872 1 683 2 811 2 780 2 141 1 941 2 391 2 245 10 395 2 755 2 568 2 511 2 857 2 401 2 607 2 484 2 21 8 841 2 528 1 613 2 709 2 676 2 
170 2 557 4 777 1 470 2 140 6 53 6 844 6 814 6 911 2 817 6 562 2 87 3 245 6 453 2 304 4 459 2 601 12 890 2 157 2 761 2 188 2 486 6 767 2 666 5 488 2 524 2 21 6 287 4 736 15 555 6 614 2 
869 2 127 2 222 2 810 2 403 2 471 2 636 2 21 1 85 2 526 4 670 2 464 1 321 2 245 1 584 2 750 2 398 7 
869 2 127 2 222 2 810 2 403 2 471 2 636 2 85 2 526 4 670 2 321 2 584 2 398 4 
869 2 127 2 222 2 810 2 403 2 471 2 636 2 21 1 85 2 526 4 670 2 464 1 321 2 245 1 584 2 398 4 
869 2 127 2 222 2 810 2 403 2 471 2 636 2 85 2 526 2 670 2 321 2 584 2 398 2 
356 2 718 6 721 4 593 2 244 2 245 28 369 2 599 2 859 2 21 26 489 2 266 2 619 2 388 2 272 3 142 2 34 2 144 2 883 4 146 2 148 2 147 2 887 2 40 2 757 2 516 4 519 14 766 38 522 2 164 6 641 6 901 2 644 6 171 1 532 2 51 2 414 2 535 2 536 2 303 14 416 2 180 4 794 2 69 6 325 2 439 2 938 4 443 4 686 2 81 4 331 2 446 16 84 2 215 4 217 2 825 8 697 10 229 2 703 2 99 2 351 4 704 8 353 4 
710 2 410 2 109 2 358 2 532 2 535 2 536 2 717 2 718 1 416 2 303 12 244 2 593 2 245 34 369 1 794 2 917 2 660 2 659 2 859 2 14 2 923 2 68 2 69 2 314 4 21 30 262 2 72 2 266 2 619 2 439 2 871 2 875 2 938 4 272 4 142 2 684 2 686 2 880 2 81 2 495 2 331 4 446 4 887 2 217 6 825 12 697 2 40 2 757 4 519 14 284 2 953 4 522 6 766 24 838 2 286 4 580 2 229 1 527 2 703 4 99 2 641 2 704 2 901 1 902 2 230 2 353 4 644 2 
588 2 233 2 295 4 779 2 782 6 535 2 366 2 415 2 721 2 416 2 303 20 244 2 116 2 245 46 9 2 180 2 371 2 182 2 479 4 661 4 599 2 421 2 795 2 859 2 543 2 13 2 377 2 256 2 189 2 69 4 21 44 550 2 320 2 804 2 735 2 431 2 433 2 930 2 197 2 73 2 266 2 200 2 936 2 439 2 619 2 388 2 938 6 878 2 272 2 443 2 142 2 686 2 81 2 331 2 446 36 34 2 501 2 337 2 146 2 625 2 449 4 887 2 215 2 565 2 217 2 825 6 40 2 949 2 757 2 154 2 889 2 829 2 512 2 516 2 519 20 160 2 522 2 766 48 164 6 893 2 405 2 703 2 99 2 351 2 641 4 842 2 103 2 408 2 353 6 644 4 354 2 
587 2 109 2 0 2 358 2 469 2 235 2 2 8 366 2 717 2 718 2 244 2 245 44 247 2 369 3 597 2 859 4 14 2 21 40 262 2 735 6 23 8 135 2 490 2 266 2 619 2 871 2 877 2 272 6 142 2 880 2 495 4 146 2 276 2 393 2 887 2 629 8 40 2 757 2 762 4 519 20 284 2 766 40 522 4 892 2 286 6 772 2 641 4 899 2 902 2 644 4 410 2 535 2 303 18 416 2 538 2 917 2 308 2 659 2 660 2 184 2 664 2 923 2 69 4 314 2 72 2 936 6 439 2 938 6 684 2 686 2 81 2 331 4 446 14 217 4 825 10 697 6 223 2 572 2 953 6 954 2 837 2 838 2 703 6 99 2 583 2 842 6 353 6 230 2 354 2 
8 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 359 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 472 450 204 282 383 519 55 56 231 403 372 174 287 63 307 243 173 111 157 106 434 75 218 183 298 84 460 268 333 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (19,34,126,129,188,379,468,494) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 517 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 517 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 517 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 517 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 517 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 503 215 100 179 98 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 527 338 175 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 527 338 175 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 527 338 175 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 527 338 175 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_56()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:subsetOf([D[D)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltwiseGT([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I | RETURN | 23142 | return null
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_10()Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ModBitTracker:split(I)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_2_36(I)Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_118()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_88()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_162()Z
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ModBitTracker:num_sets()I
daikon.Quant:lexLT([I[I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([F[F)Z | OPERATOR | 118000 | ++ -> --
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3_5()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3R_48()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:lt(II)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:eq(II)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_75()Z
utilMDE.Assert:assertTrue(Z)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(FF)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:memberOf(F[F)Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
jtb.JavaParser:jj_3_35()Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:eltsGTE([II)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:intersection([I[I)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_87()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:ne(II)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern([D)[D
utilMDE.LimitedSizeIntSet:size()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaCharStream:backup(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:gt(II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_85()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3_1()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_60()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:setDiff([I[I)[I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_22()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:setEqual([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_4()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3_13()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral; | RETURN | 92129 | return null
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaCharStream:readChar()C
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(JJ)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaCharStream:getEndColumn()I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3R_161()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
230 2 439 2 325 4 240 2 116 2 97 2 125 2 201 2 120 2 
388 2 431 6 437 2 455 2 328 2 358 2 81 6 511 2 207 6 339 2 405 2 
192 2 31 6 5 2 195 6 235 4 435 2 453 6 351 2 439 2 240 2 443 2 332 4 245 6 
91 8 62 12 3 8 122 16 66 6 36 26 162 2 71 2 439 6 240 6 165 2 101 10 369 2 133 10 371 16 102 8 375 4 518 29 247 16 408 10 248 2 250 2 18 4 77 10 491 4 115 2 222 4 321 10 261 8 264 6 
313 4 337 6 
400 2 
62 2 153 2 303 2 122 2 470 2 36 4 509 2 396 2 101 2 280 2 133 4 208 2 371 2 166 2 375 2 518 6 247 2 408 2 77 2 459 2 321 2 261 2 264 2 
62 5 247 8 518 14 408 4 122 8 77 4 491 2 36 12 413 4 415 6 321 4 419 2 361 6 101 4 244 4 371 8 226 2 
92 8 504 2 428 2 197 2 304 2 236 10 471 2 97 2 395 6 306 2 329 2 40 36 130 2 441 2 334 4 14 2 484 2 344 4 407 2 110 4 21 2 141 2 352 2 355 2 414 6 291 2 295 2 385 2 27 2 61 2 189 2 227 2 426 2 152 2 
198 2 160 2 400 2 483 2 448 2 246 2 319 2 178 2 114 2 59 2 
104 2 228 2 92 2 288 2 347 2 141 2 306 4 397 2 294 2 60 2 445 2 513 2 
62 22 122 32 66 4 36 48 436 8 438 2 439 4 240 4 72 2 101 16 131 4 73 4 133 6 371 32 244 4 482 2 446 2 52 6 374 6 102 6 16 6 375 2 247 32 518 54 408 16 213 2 77 16 380 4 492 6 413 4 415 6 292 2 115 2 321 16 361 6 26 4 261 18 264 4 324 4 
414 2 92 2 189 2 
30 2 193 2 212 2 93 2 233 2 54 2 367 2 392 10 493 2 128 2 463 2 398 2 512 2 297 22 
359 2 378 2 187 2 29 2 
364 2 
439 2 67 2 
462 2 439 4 362 2 
0 46 2 2 267 2 4 2 268 2 269 20 270 22 273 14 275 26 278 2 8 4 279 4 281 2 15 4 282 2 283 2 284 2 17 46 285 2 287 2 289 2 22 4 293 2 25 2 299 36 298 2 300 2 32 10 33 6 35 6 305 2 307 2 39 2 41 2 45 176 49 4 48 8 50 8 51 46 315 2 55 2 56 2 317 2 57 6 58 6 323 2 63 2 65 8 331 4 335 46 333 2 75 2 343 2 346 4 78 2 348 14 79 4 350 4 353 2 80 2 360 2 82 12 84 2 85 2 87 2 90 4 89 4 366 2 95 4 96 2 368 20 372 2 107 24 106 2 109 4 108 2 377 2 111 2 113 8 382 4 383 2 384 8 117 8 118 2 119 4 387 48 389 14 391 48 124 2 393 2 132 2 399 10 401 8 134 8 403 2 135 4 137 20 138 46 139 46 406 36 140 2 409 2 410 2 412 4 411 2 142 4 144 2 146 2 418 146 420 6 421 4 422 24 148 8 423 2 424 4 432 4 433 2 434 2 157 2 159 4 163 2 440 4 444 2 170 4 171 4 449 2 450 2 172 146 173 2 174 2 451 2 454 4 457 16 460 2 461 6 181 2 182 4 183 2 184 2 186 8 464 8 466 22 190 4 469 4 191 40 472 2 200 2 473 4 202 2 474 2 204 2 475 4 206 4 479 2 480 2 210 146 211 16 487 2 488 2 489 2 490 2 216 4 218 2 220 46 495 8 221 2 498 46 499 46 223 8 224 2 225 14 232 2 231 2 505 36 238 2 239 2 510 10 243 2 514 2 515 4 519 2 251 2 253 2 255 2 522 20 521 28 258 2 259 14 523 46 260 2 524 4 525 4 263 46 526 2 265 4 266 2 
476 2 477 1 199 2 219 2 
257 2 219 2 
92 2 154 2 222 2 310 2 481 2 28 2 219 2 
481 2 363 2 219 2 
481 2 219 2 129 2 
314 2 318 2 199 2 
481 2 219 2 
103 2 318 2 
497 2 219 2 
53 2 318 2 199 2 
430 2 149 2 199 2 
13 2 199 2 340 2 
320 2 199 2 404 2 
217 2 199 2 127 2 
520 2 318 2 
99 2 219 2 
430 2 417 2 
180 2 340 2 
320 2 24 2 
381 2 217 2 
123 2 318 2 
217 2 452 2 
70 2 320 2 
340 2 290 2 
430 2 43 2 
53 2 11 2 318 2 199 2 
53 2 11 2 318 2 199 2 23 2 
229 2 318 2 199 2 
318 2 199 2 425 2 
176 2 20 2 112 2 322 2 
185 2 318 2 
92 2 154 2 345 2 151 2 
92 2 154 2 345 2 151 2 28 2 76 2 
92 2 356 2 154 2 222 2 481 2 219 2 
42 2 47 2 
92 2 154 2 222 2 349 2 
320 2 147 2 
301 2 217 2 
430 2 370 2 
478 2 340 2 
217 2 168 2 340 2 
217 2 340 2 136 2 
217 2 177 2 340 2 
83 2 217 2 340 2 
427 2 92 2 154 2 194 6 390 2 69 2 46 6 145 2 
19 2 249 2 252 2 271 2 34 2 379 2 494 2 126 4 330 2 9 2 12 2 297 4 402 2 188 2 468 2 447 2 
507 2 199 2 
311 2 
517 2 378 2 187 2 29 2 
517 2 378 2 187 2 29 2 
516 2 274 2 354 2 
516 2 274 2 354 2 
517 2 378 2 187 2 29 2 
517 2 378 2 187 2 29 2 
517 2 378 2 187 2 29 2 
429 2 302 2 64 2 506 2 38 2 98 2 439 4 205 2 100 2 483 1 485 2 169 2 486 2 448 1 215 2 179 2 503 2 
155 2 6 2 242 2 502 2 277 2 386 2 
164 2 10 2 296 2 501 2 150 2 254 2 386 2 
234 2 272 2 37 2 508 2 394 2 237 1 68 2 439 10 308 2 240 8 309 2 44 2 241 2 167 2 341 1 342 1 105 2 376 2 286 2 456 2 291 1 496 2 357 2 295 1 262 2 88 2 
62 1 122 6 156 2 94 2 436 2 36 12 66 2 276 2 7 2 161 2 439 6 240 6 101 6 371 6 74 2 482 1 312 2 102 4 518 15 247 6 408 6 77 6 380 2 492 4 413 2 415 4 500 2 321 6 261 1 465 2 
121 2 1 2 196 2 326 2 316 4 158 2 458 2 256 2 143 2 327 7 203 1 416 2 439 1 240 1 209 2 336 2 467 2 373 2 
121 2 1 2 196 4 326 2 316 4 158 4 458 2 256 2 143 2 327 6 416 4 209 2 336 2 467 2 373 2 
121 2 1 8 196 8 326 2 316 4 158 8 458 2 256 2 143 2 327 10 203 1 416 8 439 1 240 1 209 6 336 2 467 2 373 2 
121 2 196 2 326 2 316 2 158 2 458 2 256 2 143 2 327 2 416 2 336 2 467 2 373 2 
338 2 86 1 365 1 439 2 240 2 442 2 175 2 527 2 
439 2 240 2 175 2 442 2 338 2 527 2 
439 2 240 2 175 2 442 2 338 2 527 2 
439 2 240 2 175 2 442 2 338 2 527 2 
214 2 

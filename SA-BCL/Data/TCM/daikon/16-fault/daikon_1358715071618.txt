#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 211 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 37 305 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (429,442,457,543,1034) (429,442,457,543,1034) (429,442,457,543,1034) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 630 22 (42,833) (753,952) (753,952) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 630 22 (42,833) (753,952) (753,952) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 630 22 (42,833) (753,952) (753,952) 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 630 22 (42,833) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 630 22 (42,833) (42,833) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 630 22 (42,833) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 612 475 267 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 1013 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 1013 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 1013 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 1013 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 1013 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 1019 195 385 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1019 195 385 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | CONDITION | 26193 | if (x) -> if (!x)
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_108()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_67()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_29()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3_3()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:lexEqual([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3R_75()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Node:Node()V
daikon.PptSlice0:arity()I
daikon.Quant:isReverse([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_69()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:dimensions()I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(FF)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3_27()Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_163()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7816 | 80 -> 0
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_13()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_117()Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_106()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:hashCode()I
daikon.PptSlice2:arity()I
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_2_12(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V | ASSIGN | 58129 | = null
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow(II)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ModBitTracker:split(I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_22()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_61()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([D)D
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:union([I[I)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10782 | return null
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | STATEMENT | 14158 | stmt -> ;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_74()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_30()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_109()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eq(II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_77()Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_86()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:gt(II)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_121()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:noDups([I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:max([I)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:ne(II)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3_25()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern:numIntArrays()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6323 | = null
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:memberOf(S[S)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_100()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_119()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.Diff:findNormalPpt(Ldaikon.PptMap;Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE:sign(I)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:memberOf(F[D)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:concat([I[I)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_63()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_36()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3_16()Z
daikon.PptName:isEnterPoint()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern:intern([D)[D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3_4()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:isArray()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3R_73()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3_12()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Debug:logOn()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.InvMap:InvMap()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_68()Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_3R_123()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | RETURN | 123502 | return null
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_126()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(JJ)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_104()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoAux:hashCode()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 21165 | = null
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logDetail()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
376 4 731 2 871 2 664 2 83 2 466 2 514 2 544 2 768 2 
870 2 309 2 211 2 588 2 802 2 847 2 
606 2 194 2 731 2 842 2 713 6 738 4 363 4 87 2 926 6 308 2 664 2 176 6 623 6 
32 2 34 10 549 4 982 6 398 2 153 16 255 10 809 16 664 6 72 16 667 26 526 8 669 10 607 6 763 4 731 6 569 2 1023 8 445 4 323 2 142 8 25 12 110 30 880 2 481 2 542 4 216 8 545 10 358 2 517 10 
954 4 1030 6 
638 2 
34 4 549 2 426 2 628 2 153 2 255 2 809 2 990 2 72 2 667 4 669 2 607 2 271 2 609 2 643 2 905 2 324 2 25 2 110 6 216 2 545 2 517 2 548 2 
763 2 299 4 803 2 153 8 255 4 809 8 25 5 836 4 110 14 72 8 667 12 619 2 545 4 73 6 389 6 669 4 517 4 
147 2 120 4 251 2 521 8 686 2 654 2 557 2 397 2 589 4 460 6 984 2 658 2 985 14 1014 4 225 2 660 2 924 4 855 2 401 2 783 62 818 2 608 10 45 4 407 2 695 4 1000 2 764 2 671 4 900 4 82 4 873 2 447 2 478 4 741 4 205 2 939 2 614 2 647 4 183 4 359 10 
946 2 532 2 898 2 360 2 37 2 305 2 561 2 492 2 597 2 604 2 638 2 
521 2 981 2 589 2 5 2 400 2 8 2 64 2 991 2 664 4 725 2 345 2 266 2 75 2 530 2 868 2 731 4 871 2 671 4 199 2 202 2 743 2 941 2 210 2 212 2 294 2 217 4 31 2 297 2 557 2 362 2 631 2 756 2 888 2 494 2 366 2 639 2 819 2 821 4 170 2 51 2 449 2 323 2 513 2 246 4 
34 6 549 2 299 4 396 2 982 4 153 32 255 16 525 6 921 8 1015 4 809 32 338 2 664 4 72 32 263 4 667 48 15 2 73 6 669 16 761 6 607 4 731 4 474 4 732 4 1002 4 1023 6 278 6 904 2 835 2 25 22 414 2 771 6 110 54 836 4 481 2 216 18 545 16 517 16 389 6 
521 2 984 2 460 2 
422 2 76 2 947 2 967 2 571 2 877 2 64 2 11 2 923 10 23 2 232 2 977 22 118 2 348 2 
710 2 185 2 845 2 918 2 850 2 461 2 988 2 599 1 260 2 664 22 71 2 466 2 467 2 784 4 270 2 731 20 281 2 875 6 1005 2 204 1 742 2 1007 4 543 2 801 2 948 1 429 2 152 2 224 2 560 2 690 2 103 2 231 2 233 2 1020 2 822 2 164 2 1024 2 442 2 443 2 830 2 701 2 171 2 704 4 1033 1 177 4 178 2 179 6 
785 2 
129 2 664 2 
421 2 564 2 664 4 
0 2 250 4 777 2 2 2 254 2 524 2 7 2 9 4 257 4 262 48 264 2 782 2 528 2 16 2 274 2 788 2 533 14 19 16 20 4 280 2 21 2 535 2 283 8 285 2 536 48 796 4 537 2 538 2 288 4 539 2 289 2 798 36 799 2 27 2 800 2 30 2 296 6 35 2 300 2 553 2 805 2 804 16 559 2 40 6 304 2 810 2 811 4 563 2 307 2 41 2 813 36 311 2 815 2 314 2 319 24 52 2 53 2 574 2 577 22 838 26 839 6 580 2 57 2 326 2 327 4 59 2 583 2 60 4 843 2 331 2 61 146 846 2 62 4 848 2 849 2 851 48 335 4 593 2 854 4 592 8 337 4 595 2 856 2 857 2 858 6 860 4 859 48 343 2 342 14 346 4 864 4 605 8 867 2 78 2 77 2 79 2 350 2 352 2 874 4 84 48 878 2 879 2 90 2 615 22 617 2 616 2 881 8 354 2 92 2 621 2 356 2 622 2 94 2 886 42 625 4 97 8 626 4 629 48 98 2 364 2 889 4 101 2 633 4 367 2 635 216 368 2 369 2 371 8 372 146 106 10 894 2 895 2 374 2 897 2 378 2 899 2 903 2 380 2 109 2 644 2 645 6 907 2 908 2 649 22 912 2 390 2 916 4 392 48 122 2 655 2 399 2 919 2 128 2 920 48 922 2 130 4 132 2 927 2 663 10 402 2 403 4 928 2 666 8 404 4 406 2 670 146 933 2 134 2 932 28 409 4 674 2 137 48 412 2 675 2 139 2 676 36 140 2 413 48 677 16 678 4 940 2 417 4 418 2 944 20 150 2 687 2 430 2 432 6 431 2 433 2 691 2 434 2 159 8 955 2 959 2 963 2 163 8 437 4 965 2 439 2 440 2 441 2 172 2 700 2 702 2 970 2 971 2 972 2 451 2 976 2 453 2 180 2 181 4 706 4 705 26 182 2 455 2 456 2 980 2 714 2 983 2 459 2 718 14 719 2 720 4 989 2 462 2 189 2 723 4 470 8 191 2 995 2 472 2 196 22 998 2 476 44 197 2 1001 2 734 2 201 2 480 2 479 2 203 2 740 2 206 4 208 2 1009 2 215 2 213 2 485 20 484 8 1010 2 218 2 219 48 1011 4 486 2 747 2 221 48 220 2 222 2 749 4 752 2 754 2 496 2 230 2 498 2 497 2 499 2 1018 2 501 2 1021 2 503 4 1026 2 237 10 240 2 769 4 241 24 770 24 242 48 507 8 
133 2 791 2 446 2 317 1 
692 2 446 2 
96 2 779 2 521 2 680 2 108 2 445 2 446 2 
779 2 446 2 547 2 
779 2 1 2 446 2 
518 2 104 2 791 2 
779 2 446 2 
518 2 249 2 
157 2 446 2 
518 2 891 2 791 2 
318 2 791 2 234 2 
814 2 791 2 500 2 
17 2 791 2 39 2 
748 2 791 2 641 2 
518 2 287 2 
999 2 446 2 
336 2 318 2 
500 2 961 2 
469 2 39 2 
748 2 994 2 
518 2 624 2 
748 2 29 2 
156 2 39 2 
500 2 620 2 
775 2 318 2 
518 2 95 2 891 2 791 2 
518 2 95 2 711 2 891 2 791 2 
518 2 791 2 862 2 
518 2 901 2 791 2 
193 2 786 2 778 2 516 2 
709 2 776 2 123 2 50 2 790 2 697 2 570 2 558 2 282 4 986 2 340 2 88 2 679 2 957 2 977 6 546 4 960 2 420 2 
46 2 791 2 
521 2 680 2 568 2 681 2 
268 2 96 2 521 2 680 2 568 2 681 2 
779 2 521 2 175 2 680 2 445 2 446 2 
756 2 511 2 
521 2 680 2 445 2 127 2 
86 2 39 2 
748 2 410 2 
529 2 318 2 
452 2 500 2 
47 2 748 2 500 2 
748 2 115 2 500 2 
290 2 748 2 500 2 
748 2 500 2 316 2 
521 2 872 2 1004 6 138 6 244 2 680 2 113 2 112 2 
518 2 228 2 
152 2 
520 2 917 2 393 2 918 2 260 2 665 2 664 26 784 4 270 2 135 2 787 2 934 4 277 2 936 2 937 2 801 2 425 2 951 2 560 2 565 2 312 5 164 6 168 2 443 2 320 2 830 2 171 2 701 2 448 2 573 2 703 4 704 4 177 4 325 2 179 6 978 2 841 2 710 2 330 2 185 2 845 2 186 2 333 2 461 6 850 2 988 2 68 2 71 2 724 3 466 2 865 2 731 26 997 3 733 2 736 2 875 4 1005 2 742 6 1006 2 1007 4 882 2 488 3 224 2 1012 4 103 2 757 2 229 2 231 2 1020 2 640 2 1024 2 648 2 913 2 650 8 
520 2 917 2 393 2 918 2 256 2 260 2 664 26 784 4 270 2 135 2 787 2 934 4 277 2 281 2 936 2 937 2 801 2 425 2 951 2 560 2 312 4 164 6 168 2 443 2 320 2 830 2 171 2 701 2 448 2 573 2 703 4 704 4 177 4 325 2 837 2 179 6 978 2 184 2 841 2 710 2 330 2 185 2 845 2 186 2 333 2 461 6 850 2 988 2 68 2 463 2 71 2 724 2 466 2 865 2 731 26 997 2 733 2 736 2 875 6 1005 2 742 6 1006 2 1007 4 882 2 488 2 224 2 1012 4 103 2 757 2 231 2 233 2 1020 2 640 2 1024 2 648 2 913 2 650 8 
161 2 
887 2 114 2 
707 2 587 2 588 6 253 2 852 2 65 2 721 6 722 2 664 12 729 2 784 2 731 6 272 8 870 4 81 2 876 2 22 2 144 2 143 2 1007 2 292 2 682 4 214 2 683 2 295 2 550 2 36 2 552 2 428 10 627 2 556 2 802 6 753 2 808 2 952 2 226 2 365 2 102 4 103 2 42 2 231 2 309 4 43 2 160 2 370 2 566 4 1020 2 235 2 966 2 1024 2 379 2 766 4 443 2 830 2 701 2 381 2 575 4 508 8 179 4 910 4 
587 2 588 6 253 2 852 2 65 2 721 8 722 2 664 12 603 2 729 2 784 2 731 6 272 8 870 4 81 2 22 2 144 2 143 2 1007 2 292 2 1008 4 682 4 214 2 683 2 295 2 550 2 36 2 552 2 428 10 627 2 556 2 802 8 753 2 808 2 952 2 493 2 226 2 365 2 103 2 102 4 42 2 231 2 309 4 43 2 160 2 105 2 370 2 566 4 1020 2 235 2 966 2 1024 2 379 2 766 4 443 2 830 2 701 2 381 2 575 4 508 8 179 4 910 4 
550 2 870 2 552 2 587 2 588 2 766 2 802 2 753 2 852 2 808 2 952 2 381 2 102 4 42 2 309 2 214 2 910 4 295 2 
707 2 587 2 588 4 253 2 852 2 65 2 721 6 722 2 664 12 729 2 784 2 731 6 272 4 870 4 81 2 876 2 22 2 144 2 143 2 1007 2 292 2 682 4 214 2 683 2 295 2 550 2 36 2 552 2 428 6 627 2 556 2 802 6 753 2 808 2 952 2 226 2 102 4 103 2 42 2 231 2 309 4 43 2 160 2 105 2 370 2 566 4 1020 2 235 2 966 2 1024 2 379 2 766 4 443 2 830 2 701 2 381 2 575 4 508 4 179 4 910 4 
707 2 552 2 428 4 588 4 627 2 253 2 802 2 753 2 630 2 852 2 721 4 952 2 65 2 226 2 102 2 42 2 664 4 309 2 160 2 729 2 566 2 235 2 272 4 870 2 966 2 379 2 1029 2 22 2 143 2 381 2 508 4 682 2 214 2 910 2 683 2 
707 2 587 2 588 6 253 2 852 2 65 2 721 6 722 2 664 12 729 2 784 2 731 6 272 4 870 4 81 2 876 2 22 2 144 2 143 2 1007 2 292 2 682 4 214 2 683 2 295 2 550 2 36 2 552 2 428 6 627 2 556 2 802 6 753 2 808 2 952 2 226 2 365 2 102 4 103 2 42 2 231 2 309 4 43 2 160 2 370 2 566 4 1020 2 235 2 966 2 1024 2 379 2 766 4 443 2 830 2 701 2 381 2 575 4 508 8 179 4 910 4 
707 2 552 2 428 8 588 8 627 2 253 2 802 6 753 2 630 2 852 2 721 6 952 2 65 2 226 2 365 2 102 2 42 2 664 4 309 4 160 2 729 2 566 2 235 2 272 8 870 4 966 2 379 2 1029 2 22 2 876 2 575 2 143 2 381 2 508 8 682 2 214 2 910 2 683 2 
707 2 587 2 588 6 253 2 852 2 65 2 721 6 722 2 664 12 729 2 784 2 731 6 272 8 870 4 81 2 876 2 22 2 144 2 143 2 1007 2 292 2 682 4 214 2 683 2 295 2 550 2 36 2 552 2 428 10 627 2 556 2 802 6 753 2 808 2 952 2 226 2 365 2 102 4 103 2 42 2 231 2 309 4 43 2 160 2 370 2 566 4 1020 2 235 2 966 2 1024 2 379 2 766 4 443 2 830 2 701 2 381 2 575 4 508 8 179 4 910 4 
707 2 520 2 552 2 588 4 627 2 253 2 802 2 753 2 630 2 852 2 721 4 952 2 65 2 306 2 226 2 102 2 42 2 664 4 309 2 160 2 729 2 566 2 640 2 235 2 870 2 966 2 379 2 936 2 1029 2 22 2 143 2 381 2 508 2 682 2 214 2 910 2 650 2 683 2 
520 4 253 2 260 2 261 2 527 1 781 6 784 4 270 2 785 6 276 6 279 4 281 2 792 6 22 2 797 2 540 2 292 2 801 2 295 2 550 2 36 4 552 2 301 2 802 8 556 4 302 6 303 2 560 2 808 2 306 2 812 2 564 6 42 2 309 4 43 2 312 2 313 1 44 2 566 4 816 2 820 7 48 2 830 2 322 1 575 6 325 2 584 2 844 2 845 2 588 8 587 2 334 6 850 12 852 2 65 2 853 2 600 6 71 2 870 4 81 2 875 6 89 1 883 2 93 2 627 2 365 4 103 2 102 4 370 2 640 4 379 2 642 2 381 2 382 2 111 2 910 4 650 8 913 2 117 2 917 2 394 6 918 2 129 6 659 1 131 1 662 2 664 48 929 2 135 2 408 2 136 6 672 2 936 4 143 2 144 2 146 2 416 6 682 8 683 2 425 2 428 2 949 2 952 2 689 6 160 2 164 6 966 2 696 1 167 6 443 2 701 2 171 2 969 4 703 2 704 4 974 6 177 4 179 6 707 2 710 2 185 2 186 2 712 2 461 6 721 12 988 2 722 2 466 2 726 2 727 2 993 10 992 7 729 2 731 26 997 2 1005 2 739 2 742 8 1007 4 214 2 745 2 746 2 488 2 224 2 1012 4 753 2 226 4 757 4 758 2 231 2 233 2 1020 2 235 2 1022 1 1024 2 1025 6 766 4 1027 2 239 2 508 6 509 8 245 1 
520 4 917 2 394 6 918 2 253 2 129 6 260 2 261 2 662 2 664 48 929 2 781 6 784 4 270 2 272 4 408 2 785 6 135 2 276 6 136 6 672 2 279 4 281 2 792 6 936 4 22 2 144 2 797 2 143 2 540 2 146 2 292 2 416 6 682 8 801 2 683 2 295 2 425 2 550 2 36 4 552 2 428 6 301 2 556 4 802 8 949 2 302 6 303 2 689 6 808 2 560 2 952 2 306 2 812 2 564 6 42 2 309 4 43 2 160 2 312 2 44 2 816 2 566 4 48 2 164 6 966 2 167 6 443 2 830 2 171 2 701 2 969 4 575 6 703 2 704 4 974 6 325 2 177 4 179 6 707 2 584 2 710 2 844 2 185 2 712 2 186 2 845 2 587 2 588 8 334 6 850 12 461 6 852 2 853 2 988 2 721 12 65 2 722 2 600 6 71 2 726 2 466 2 727 2 993 10 729 2 997 2 731 26 870 4 81 2 1005 2 875 6 739 2 742 8 1007 4 214 2 93 2 883 2 745 2 746 2 488 2 627 2 224 2 1012 4 753 2 226 4 365 4 757 4 102 4 103 2 758 2 231 2 233 2 370 2 1020 2 640 4 235 2 1025 6 379 2 1024 2 766 4 1027 2 642 2 239 2 381 2 382 2 508 6 509 8 111 2 910 4 117 2 913 2 650 8 
520 4 253 2 260 2 261 2 781 12 784 4 270 2 272 4 785 12 276 6 279 4 281 2 792 6 22 2 797 2 540 2 292 2 801 2 295 2 550 2 36 4 552 2 301 2 802 10 556 4 302 6 303 2 560 2 808 2 306 2 812 2 564 12 42 2 309 4 43 2 312 4 44 2 566 4 816 2 48 2 830 2 575 6 325 2 581 2 584 2 844 2 845 2 588 10 587 2 334 6 850 10 852 2 65 2 853 2 600 6 71 2 870 4 351 6 81 2 875 6 883 2 93 2 627 2 365 4 103 2 102 4 890 6 105 2 370 2 637 6 640 4 379 2 642 2 381 2 382 2 111 2 910 4 913 2 650 10 911 6 917 4 394 6 918 2 129 12 662 2 664 52 929 2 135 2 408 2 136 6 672 2 936 4 144 2 143 2 146 2 416 6 682 8 683 2 148 2 425 2 428 6 151 2 949 2 154 2 952 2 689 6 160 2 162 2 164 8 966 2 968 2 167 6 166 6 443 2 444 6 701 2 171 2 969 4 703 2 704 4 974 12 177 4 179 6 707 2 979 2 710 2 185 2 186 4 712 2 461 8 721 16 988 2 722 2 726 2 466 2 727 2 993 8 729 2 731 24 997 4 1005 2 739 2 742 12 1007 4 214 2 745 2 746 2 488 4 224 2 1012 6 753 2 226 4 757 4 758 2 231 2 233 2 1020 2 235 2 502 6 1024 2 1025 12 766 4 765 6 1027 2 1029 2 238 2 239 2 1031 6 508 6 509 8 
707 2 552 2 428 4 588 6 627 2 253 2 802 6 753 2 852 2 721 4 952 2 65 2 226 2 365 2 102 2 42 2 664 4 309 4 160 2 729 2 566 2 235 2 272 4 870 4 966 2 379 2 22 2 575 2 143 2 381 2 508 6 682 2 214 2 910 2 683 2 
918 2 253 2 260 2 664 28 784 4 270 2 18 2 135 2 281 2 22 2 141 2 143 2 415 2 682 2 801 2 683 2 425 2 552 2 428 2 802 6 152 2 560 2 952 2 42 2 309 4 160 2 312 3 566 2 164 6 966 2 443 2 830 2 701 2 171 2 575 2 704 4 578 2 177 4 179 6 707 2 710 2 585 3 185 2 845 2 588 6 457 2 461 6 850 4 852 2 721 4 988 2 65 2 722 2 71 2 466 2 993 2 729 2 731 24 997 3 870 4 1005 2 875 6 742 8 1007 4 214 2 488 3 627 2 224 2 1012 4 753 2 100 2 226 2 365 2 102 2 103 2 757 2 231 2 233 2 373 2 1020 2 235 2 379 2 1024 2 381 2 508 6 910 2 1034 2 913 2 117 2 
807 2 966 2 379 2 
807 2 966 2 379 2 
520 4 918 2 260 2 664 24 784 4 270 2 272 4 279 2 281 2 936 4 22 2 284 2 416 2 682 4 801 2 425 2 688 2 428 4 555 2 802 10 560 2 42 2 309 4 312 2 566 2 164 2 966 2 443 2 699 2 829 2 828 2 830 2 171 2 701 2 969 2 173 2 575 4 704 4 325 2 177 4 179 6 710 2 185 2 845 2 588 12 461 2 850 4 852 2 988 2 721 14 339 2 71 2 601 2 466 2 993 2 865 4 731 16 870 4 875 6 1005 2 353 2 742 2 209 2 1007 4 627 2 224 2 630 2 226 4 365 4 103 2 757 4 102 2 231 2 105 2 233 2 1020 2 640 4 1024 2 379 2 1028 2 1029 4 381 2 508 6 910 2 650 4 913 2 
731 2 688 2 554 2 699 2 794 2 850 2 239 2 969 2 808 2 103 2 540 2 209 2 664 4 416 2 114 2 993 2 14 2 
520 4 918 2 260 2 664 20 784 4 270 2 272 4 279 2 281 2 936 4 22 2 284 2 682 4 801 2 425 2 688 2 428 4 555 2 802 10 560 2 42 2 309 4 312 4 566 2 164 2 966 2 443 2 699 2 829 4 828 2 830 2 171 2 701 2 173 2 833 2 575 4 704 4 325 2 177 4 179 6 710 2 185 2 845 2 588 12 461 2 850 2 852 2 988 2 721 14 339 2 71 2 601 2 466 2 865 4 731 14 870 4 875 6 1005 2 353 2 742 2 1007 4 627 2 224 2 630 2 226 4 365 4 103 2 757 4 102 2 231 2 105 2 233 2 1020 2 640 4 1024 2 379 2 1028 2 1029 4 381 2 508 6 910 2 650 4 913 2 388 2 
520 4 918 2 260 2 664 24 784 4 270 2 272 4 279 2 281 2 936 4 22 2 284 2 416 2 682 4 801 2 425 2 688 2 428 4 555 2 802 10 560 2 42 2 309 4 312 2 566 2 164 2 966 2 443 2 699 2 829 2 828 2 830 2 171 2 701 2 969 2 173 2 575 4 704 4 325 2 177 4 179 6 710 2 185 2 845 2 588 12 461 2 850 4 852 2 988 2 721 14 339 2 71 2 601 2 466 2 993 2 865 4 731 16 870 4 875 6 1005 2 353 2 742 2 209 2 1007 4 627 2 224 2 630 2 226 4 365 4 103 2 757 4 102 2 231 2 105 2 233 2 1020 2 640 4 1024 2 379 2 1028 2 1029 4 381 2 508 6 910 2 650 4 913 2 
248 2 185 2 124 2 845 2 918 2 332 2 850 2 461 6 988 2 987 2 260 2 662 2 190 2 664 24 71 2 466 2 863 1 267 2 269 2 349 2 784 4 997 2 270 2 731 18 475 2 135 2 80 2 935 2 612 2 875 2 200 2 742 8 1007 4 293 2 93 2 883 2 425 2 488 2 427 2 224 2 1012 4 560 2 562 2 757 2 103 2 758 2 231 2 312 2 44 2 1020 2 164 6 1024 2 169 1 443 2 830 2 642 2 701 2 834 2 510 2 704 2 177 2 579 2 179 6 247 2 774 2 
488 3 186 6 4 3 522 2 1012 2 461 2 10 2 590 2 664 2 312 3 997 3 731 2 135 2 531 2 438 4 164 2 673 2 825 2 506 2 742 2 576 1 383 2 91 2 909 2 773 2 
488 2 186 6 4 2 522 2 1012 2 461 2 10 2 590 2 664 2 312 2 997 2 731 2 135 2 531 2 438 4 164 2 673 2 825 2 506 2 742 2 383 2 91 2 909 2 773 2 
488 2 186 6 4 2 522 2 1012 2 461 2 10 2 590 2 664 2 312 2 997 2 731 2 135 2 531 2 438 4 164 2 673 2 825 2 506 2 742 2 383 2 91 2 909 2 773 2 
328 2 149 4 395 3 982 2 458 3 717 2 1013 2 153 2 255 2 755 4 809 2 632 4 67 2 780 2 664 10 693 2 72 2 667 4 312 3 669 2 962 2 997 3 731 4 135 2 1023 4 610 2 534 2 613 2 742 2 286 6 906 2 110 5 512 4 91 2 482 2 56 3 116 4 545 2 914 2 517 2 
328 2 149 4 395 2 982 2 458 2 717 2 1013 2 153 2 255 2 755 4 809 2 632 4 67 2 780 2 664 10 693 2 72 2 667 4 312 2 669 2 962 2 997 2 731 4 135 2 1023 4 610 2 534 2 613 2 742 2 286 6 25 2 906 2 110 4 512 4 481 2 91 2 482 2 216 2 56 2 116 4 545 2 914 2 517 2 
328 2 149 4 395 2 982 2 458 2 717 2 1013 2 153 2 255 2 755 4 809 2 632 4 67 2 780 2 664 10 693 2 72 2 667 4 312 2 669 2 962 2 997 2 731 4 135 2 1023 4 610 2 534 2 613 2 742 2 286 6 25 2 906 2 110 4 512 4 481 2 91 2 482 2 216 2 56 2 116 4 545 2 914 2 517 2 
328 2 149 4 395 2 982 2 458 2 717 2 1013 2 153 2 255 2 755 4 809 2 632 4 67 2 780 2 664 10 693 2 72 2 667 4 312 2 669 2 962 2 997 2 731 4 135 2 1023 4 610 2 534 2 613 2 742 2 286 6 25 2 906 2 110 4 512 4 481 2 91 2 482 2 216 2 56 2 116 4 545 2 914 2 517 2 
328 2 149 4 395 2 982 2 458 2 717 2 1013 2 153 2 255 2 755 4 809 2 632 4 67 2 780 2 664 10 693 2 72 2 667 4 312 2 669 2 962 2 997 2 731 4 135 2 1023 4 610 2 534 2 613 2 742 2 286 6 25 4 906 2 110 4 512 4 481 4 91 2 482 2 216 4 56 2 116 4 545 2 914 2 517 2 
258 2 12 2 598 2 541 2 902 2 698 2 
473 2 26 2 504 2 902 2 188 2 978 2 435 2 
840 2 915 2 582 2 298 2 58 2 685 1 657 2 806 2 225 1 401 1 661 2 227 2 664 10 602 2 1017 2 893 2 931 2 1020 2 731 8 823 1 827 1 450 2 24 2 974 2 384 2 942 2 
708 2 396 1 982 2 153 6 400 2 255 6 525 4 921 2 591 2 809 6 664 6 341 2 465 2 263 2 72 6 667 12 669 6 471 2 731 6 1023 4 826 2 25 4 110 15 836 2 941 2 481 2 386 2 216 3 545 6 389 4 517 6 
375 2 424 2 731 1 567 1 715 4 38 2 767 2 99 7 477 2 66 2 632 2 925 2 664 1 512 2 454 2 668 2 116 2 347 2 
375 2 424 2 715 4 38 2 767 2 99 6 477 2 66 2 632 2 925 4 512 2 454 4 668 4 116 2 347 2 
375 2 424 2 731 1 567 1 715 4 38 2 767 6 99 10 477 2 66 2 632 2 925 8 664 1 512 2 454 8 668 8 116 2 347 8 
375 2 424 2 715 2 38 2 99 2 477 2 66 2 632 2 925 2 512 2 454 2 668 2 116 2 
651 12 519 2 252 6 652 2 121 6 918 10 656 2 523 6 259 6 664 90 405 12 273 2 275 42 789 6 281 20 411 6 795 6 938 6 145 6 291 6 28 2 943 2 684 2 945 6 950 4 155 2 953 6 310 2 956 2 958 6 436 6 817 2 694 4 964 6 165 4 824 1 321 6 572 4 832 2 174 1 973 6 55 4 704 36 975 2 177 42 329 8 185 10 586 4 716 2 63 2 596 12 464 6 69 12 468 6 728 4 344 6 74 4 730 8 192 4 866 2 996 6 731 78 195 2 869 6 198 4 735 6 1003 4 611 4 875 88 207 3 744 6 483 4 618 2 355 6 357 2 884 2 487 12 223 6 490 13 224 4 491 4 750 6 751 6 495 6 634 2 636 4 233 20 759 22 892 6 760 2 1019 2 107 2 236 4 243 12 1032 12 646 6 772 12 385 2 387 12 119 12 
684 2 551 2 185 2 918 2 3 2 224 2 63 2 634 2 664 12 636 6 310 2 760 2 1019 2 762 2 731 12 195 2 793 2 875 6 174 2 704 4 177 4 385 2 28 2 419 2 
391 2 651 10 652 2 121 4 653 4 125 2 918 6 126 2 6 8 259 4 664 78 930 2 265 2 405 8 275 24 789 4 281 28 795 4 938 4 145 8 291 4 943 4 423 10 684 2 33 16 945 4 950 2 158 4 953 4 310 2 958 4 315 2 817 2 436 4 694 4 964 4 49 10 165 4 831 2 572 4 321 4 54 8 973 6 55 4 704 36 975 2 177 44 329 6 185 6 187 2 63 2 596 24 464 4 69 24 70 32 468 4 344 4 861 16 74 4 192 4 730 8 996 16 731 70 195 2 869 4 198 4 735 8 1003 4 611 4 875 104 737 8 85 2 744 4 483 4 355 4 357 4 885 4 489 4 223 4 490 10 491 4 224 2 750 4 751 4 361 8 495 4 634 2 636 14 759 30 1016 4 233 30 892 4 760 2 896 4 1019 2 107 2 762 2 236 4 505 4 1032 14 243 10 772 6 646 4 385 2 515 10 119 10 387 10 
651 6 329 4 121 4 185 2 187 2 586 2 918 2 656 2 63 2 464 2 259 2 13 2 664 28 728 2 730 6 866 2 195 2 731 26 273 2 869 4 275 8 281 12 875 40 938 2 207 2 943 2 357 2 684 2 487 10 223 4 490 2 224 2 750 4 950 2 751 4 155 2 634 2 636 14 956 2 310 2 233 12 958 2 759 6 760 2 1019 2 377 2 762 2 694 4 964 4 832 2 174 2 973 2 243 2 704 14 772 2 177 14 385 2 387 6 119 6 
594 2 

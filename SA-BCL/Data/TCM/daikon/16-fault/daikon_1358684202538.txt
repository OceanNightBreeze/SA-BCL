#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (166,274) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 265 506 79 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 24 526 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 548 338 210 350 241 132 482 94 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException 20 199 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (216,426) 47 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 460 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 24 526 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 24 526 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 24 526 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 24 526 
daikon.test.diff.XorVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 24 526 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 24 526 552 289 56 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR utilMDE.Assert$AssertionException (250,555) (250,555) 382 389 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.IllegalArgumentException 133 (296,438) (296,438) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.IllegalArgumentException 133 (296,438) (296,438) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.IllegalArgumentException 133 (296,438) (296,438) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.IllegalArgumentException 133 (296,438) (296,438) 
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaCharStream:readChar()C
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_2()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:numIntArrays()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONSTANT | 20467 | 32 -> 1
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_ntk()I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability; | CONDITION | 1674 | if (x) -> if (!x)
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaCharStream:GetSuffix(I)[C
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ModBitTracker:ModBitTracker(I)V | OPERATOR | 2283 | >= -> ==
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:dimensions()I
daikon.Quant:eltsLTE([II)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:slice([III)[I | RETURN | 160908 | return null
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakHasherMap:size()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3_16()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:arity()I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:pow(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:noDups([I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eq(II)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 45016 | if (x) -> if (!x)
daikon.Quant:lexGT([I[I)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13889 | = null
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
utilMDE.ArraysMDE:max([I)I
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:eq(FF)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.Ppt:Ppt()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:lt(II)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:ReadByte()C
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:memberOf(F[F)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:lte(II)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quant:subsetOf([F[D)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(Z)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:hashCode()I
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | CONSTANT | 122114 | 1 -> 0
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern:intern([J)[J
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 2 425 2 17 4 555 2 82 2 167 2 246 2 250 2 190 2 
485 6 386 2 0 6 256 2 161 2 53 2 497 6 111 2 448 2 450 2 459 2 
400 4 379 4 258 4 203 2 370 2 177 4 73 2 421 2 7 2 
555 4 269 4 20 4 363 2 387 4 250 4 323 2 95 6 3 2 219 6 274 2 395 2 583 4 237 4 348 10 568 2 109 4 531 6 228 12 278 4 261 6 333 4 380 4 554 6 573 2 
501 4 344 6 
104 2 
205 2 269 2 387 2 3 2 95 2 219 2 483 2 564 2 49 2 583 2 192 2 348 4 257 2 531 2 228 6 278 2 333 2 261 2 131 2 418 2 380 2 554 4 138 2 
128 4 348 12 269 4 531 5 387 4 228 14 471 2 261 8 95 8 333 4 569 6 219 8 534 2 380 4 14 6 431 4 573 2 
539 4 541 2 321 2 366 2 79 2 479 2 305 2 393 2 291 6 143 2 124 2 397 2 85 2 86 2 506 2 50 4 170 30 294 2 328 2 129 2 468 2 551 2 403 2 198 2 511 2 491 2 513 2 265 2 92 2 216 6 475 10 494 2 159 4 
104 2 602 2 326 2 243 2 90 2 369 2 222 2 484 2 584 2 413 2 
40 2 340 2 500 2 424 2 426 2 577 2 166 2 274 2 464 2 502 2 124 4 396 2 87 2 436 2 130 2 11 2 173 2 214 2 404 2 357 4 283 2 58 2 216 2 476 2 179 4 555 4 286 2 250 4 524 2 182 2 480 2 561 2 99 2 186 2 188 2 373 2 327 2 328 2 151 2 259 2 533 2 334 2 155 2 298 4 
555 4 269 16 140 6 387 16 388 4 77 4 250 4 21 2 3 2 95 32 219 32 209 4 428 2 431 4 583 18 28 2 225 6 128 4 348 48 601 4 486 6 531 22 228 53 278 4 469 4 333 16 261 32 10 2 569 6 55 4 230 6 202 8 419 6 380 16 263 2 14 6 554 6 493 2 337 2 
50 2 216 2 479 2 
317 2 239 2 453 2 509 22 588 2 377 2 589 2 426 2 312 2 528 2 297 2 57 10 314 2 449 2 
41 5 304 2 164 2 578 1 235 2 238 2 277 2 245 4 443 4 590 4 519 2 555 8 365 1 250 8 526 2 221 2 560 2 24 2 529 2 563 2 596 2 26 2 598 2 224 2 110 2 154 2 264 2 
462 2 
250 2 78 2 
107 2 250 4 146 2 
206 2 461 2 301 4 42 8 162 12 543 2 81 2 341 2 210 2 394 10 307 2 547 6 548 14 504 2 346 2 5 52 125 4 126 2 51 4 586 2 507 2 350 2 211 2 8 10 9 2 352 12 171 2 310 4 279 2 89 2 472 12 241 2 132 2 355 12 242 14 215 20 134 2 244 10 474 2 136 8 406 2 442 12 514 4 360 4 518 14 522 6 94 2 523 14 64 18 446 8 251 2 65 10 324 18 447 8 66 2 220 2 558 4 527 52 141 2 559 8 594 4 481 6 482 2 101 4 105 4 415 52 530 14 260 4 197 2 416 8 378 4 604 2 114 2 37 10 536 10 232 6 233 2 495 4 338 6 
319 2 371 2 178 2 267 1 
226 2 319 2 
191 4 19 2 508 2 509 6 401 2 72 4 542 2 434 2 163 2 165 2 4 2 593 2 456 2 537 2 492 2 158 2 236 2 414 2 
371 2 74 2 
440 2 47 2 216 2 516 2 
440 2 46 2 47 2 216 2 102 2 516 2 
199 2 20 2 
40 2 299 2 
334 2 253 2 47 2 216 2 
540 2 176 2 
525 2 411 2 
592 2 331 2 
248 2 349 2 
349 2 137 2 525 2 
349 2 120 2 525 2 
349 2 525 2 325 2 
349 2 463 2 525 2 
249 6 184 2 174 2 336 6 47 2 187 2 117 2 216 2 
27 2 309 2 
142 2 319 2 47 2 175 2 20 2 216 2 102 2 
319 2 175 2 1 2 
319 2 175 2 417 2 
405 2 27 2 371 2 
319 2 175 2 
281 2 27 2 
319 2 465 2 
512 2 27 2 371 2 
592 2 371 2 505 2 
349 2 532 2 371 2 
540 2 371 2 437 2 
113 2 525 2 371 2 
451 2 27 2 
319 2 285 2 
31 2 592 2 
349 2 408 2 
540 2 409 2 
229 2 525 2 
27 2 439 2 
520 2 525 2 
460 2 540 2 
349 2 410 2 
592 2 91 2 
318 2 512 2 27 2 371 2 
599 2 318 2 512 2 27 2 371 2 
27 2 371 2 60 2 
27 2 371 2 103 2 
444 2 587 2 546 2 168 2 
390 2 
41 4 304 2 164 2 235 2 238 2 277 2 245 4 443 4 590 4 519 2 555 8 250 8 526 2 221 2 560 2 24 2 529 2 563 2 26 2 598 2 224 2 148 2 110 2 154 2 264 2 
41 6 304 2 164 2 578 2 235 2 238 2 277 2 245 4 443 4 590 4 519 2 555 8 365 2 250 8 526 2 221 2 560 2 24 2 529 2 563 2 26 2 598 2 224 2 148 2 110 2 154 2 264 2 
271 2 196 2 488 2 
271 2 196 2 488 2 
41 5 304 2 164 2 578 1 235 2 238 2 277 2 245 4 443 4 590 4 519 2 555 8 365 1 250 8 526 2 221 2 560 2 24 2 529 2 563 2 26 2 598 2 224 2 148 2 110 2 154 2 264 2 
41 5 304 2 164 2 578 1 235 2 238 2 277 2 245 4 443 4 590 4 519 2 555 8 365 1 250 8 526 2 221 2 560 2 24 2 529 2 563 2 26 2 598 2 224 2 148 2 110 2 154 2 264 2 
41 5 304 2 164 2 578 1 235 2 238 2 277 2 245 4 443 4 590 4 519 2 555 8 365 1 250 8 526 2 221 2 560 2 24 2 529 2 563 2 26 2 598 2 224 2 148 2 110 2 154 2 264 2 
41 2 43 1 304 2 80 2 164 2 342 2 235 2 343 2 429 2 584 1 398 2 238 2 277 2 435 2 552 2 243 1 56 2 245 2 443 4 590 2 555 8 250 12 252 2 557 2 526 2 289 2 221 2 560 2 24 2 529 2 100 2 26 2 372 2 598 2 71 2 154 2 489 2 36 2 606 2 264 2 458 1 300 2 
306 2 67 2 115 2 467 2 275 2 591 2 295 2 
566 2 467 2 38 2 76 2 576 2 498 2 
555 2 574 2 235 2 221 2 250 2 389 2 382 2 284 2 
555 6 269 6 93 2 387 6 524 2 250 6 22 2 95 6 219 6 48 2 583 1 127 2 128 2 348 12 150 2 601 2 259 2 531 1 228 15 261 6 333 6 569 4 55 2 13 2 202 2 230 4 419 4 380 6 262 2 263 1 
133 2 35 2 296 2 32 2 345 2 247 2 438 2 
555 1 133 2 35 2 296 2 32 2 250 1 345 2 247 2 6 1 438 2 
133 2 35 2 296 2 32 2 345 2 247 2 438 2 
133 2 35 2 296 2 32 2 345 2 247 2 438 2 
538 2 234 84 2 2 304 8 164 14 544 6 391 2 545 34 392 4 83 4 169 18 308 24 549 92 399 28 466 4 550 16 88 4 402 24 311 24 12 4 553 2 407 8 245 88 313 8 315 6 316 17 555 134 18 90 477 8 180 26 478 8 320 4 556 2 250 150 322 8 23 4 185 4 562 2 254 6 25 26 189 10 412 16 255 4 565 2 329 10 193 4 330 4 195 8 108 12 33 2 34 2 200 4 112 90 201 8 571 2 335 8 572 6 118 6 266 6 204 6 39 4 339 4 119 4 41 247 121 6 270 24 575 11 207 6 208 16 44 4 427 4 123 6 578 57 579 10 272 4 580 4 351 10 353 22 354 6 433 4 213 4 280 8 356 1 441 6 282 4 358 2 359 2 517 10 590 112 61 6 62 2 139 6 63 6 521 2 287 10 217 6 288 6 364 5 365 57 290 6 368 4 144 24 529 14 595 42 69 10 223 2 597 12 145 2 70 8 147 2 452 6 600 6 374 50 152 2 375 10 153 36 454 2 376 4 603 4 457 18 535 24 455 42 607 16 75 6 383 124 381 6 384 2 157 6 
385 2 160 2 302 2 41 44 270 2 423 2 122 2 304 2 207 2 164 2 544 2 391 2 578 2 579 2 45 2 580 2 84 2 430 2 581 2 276 2 503 2 582 2 399 38 550 4 347 4 240 2 351 2 354 2 172 2 212 2 470 2 54 2 510 2 473 2 311 2 441 4 135 2 407 2 245 20 358 2 15 2 515 2 517 2 59 4 590 20 315 2 16 4 361 2 316 2 555 44 287 2 217 2 364 2 365 2 250 46 322 2 183 2 98 2 529 2 292 2 69 2 68 2 189 2 412 4 29 4 30 2 70 2 567 2 329 2 106 2 227 2 152 2 375 2 195 2 153 2 487 2 332 6 454 2 33 2 490 2 200 2 570 2 335 6 457 2 535 2 156 2 572 2 607 4 116 2 420 2 383 6 384 2 
234 24 303 4 304 2 164 6 544 4 391 2 545 30 83 4 308 8 549 24 399 14 466 4 550 10 88 4 473 10 12 4 407 2 245 36 315 4 316 10 555 70 477 4 320 4 250 78 322 2 181 2 183 2 96 4 97 32 185 4 254 4 412 10 255 4 565 2 30 10 194 2 195 2 33 2 34 2 201 4 570 10 335 6 572 4 266 4 118 4 39 2 496 8 268 4 41 104 121 4 422 2 499 16 207 4 208 8 44 4 427 4 123 4 578 28 272 4 273 4 581 2 276 2 432 16 351 6 52 2 354 4 433 4 441 2 282 4 590 44 517 4 61 4 63 4 362 4 445 2 287 4 217 4 365 30 288 4 218 4 367 8 290 4 529 6 595 8 69 4 223 2 597 14 293 8 147 2 149 2 452 4 600 4 374 8 152 2 375 4 153 6 454 2 231 8 457 10 455 16 605 4 607 10 75 4 383 24 381 4 384 2 157 4 
41 36 575 2 2 2 304 2 207 4 164 2 208 6 44 2 544 4 391 2 578 8 545 8 272 2 580 1 399 15 550 6 351 2 353 10 354 4 441 3 135 2 407 2 245 14 358 2 313 2 590 14 517 2 315 4 316 2 555 26 521 2 477 1 287 2 217 4 364 2 365 8 250 28 556 2 322 2 183 2 529 2 69 2 412 6 145 2 147 1 152 2 375 2 195 2 153 2 454 2 376 2 33 2 34 1 201 4 571 2 335 5 457 2 607 6 572 4 383 8 384 2 39 3 339 2 
585 2 

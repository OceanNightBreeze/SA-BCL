#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 22 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 93 23 382 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR utilMDE.Assert$AssertionException (817,1078) (817,1078) 1111 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR utilMDE.Assert$AssertionException (817,1078) (817,1078) 1111 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR utilMDE.Assert$AssertionException (817,1078) (817,1078) 1111 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR utilMDE.Assert$AssertionException (817,1078) (817,1078) 1111 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR utilMDE.Assert$AssertionException (817,1078) (817,1078) 1111 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 948 679 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 607 827 679 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 607 827 679 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 607 827 679 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant:logDetail()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:eq(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3_22()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_119()Z
daikon.test.FormatTestCase:passes()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_97()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:setDiff([I[I)[I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3_35()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_30(I)Z
daikon.Quant:eltsGTE([II)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfo:isDerived()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE:pow(II)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_2_25(I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20735 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.PptSlice1:num_samples()I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_27()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 17948 | return null
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:subsetOf([S[S)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | STATEMENT | 10508 | stmt -> ;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName:hashCode()I
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_2_29(I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.Node:Node()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.MathMDE:gcd([I)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_25()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Ppt:Ppt()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:gcd(JJ)J
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.ProglangType:baseIsFloat()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:PrimarySuffix()Ljtb.syntaxtree.PrimarySuffix;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10245 | = null
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ModBitTracker:num_vars()I
daikon.Quant:setEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3_5()Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Debug:logDetail()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:isReverse([I[I)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ProglangType:isArray()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:dimensions()I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.PptSlice1:arity()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:lt(II)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eq(FF)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 21385 | stmt -> ;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:slice([III)[I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_120()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:isPointer()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:memberOf(I[I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_53()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_118()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_122()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_148()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_27(I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_114()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_77()Z | STATEMENT | 172318 | stmt -> ;
daikon.Debug:logOn()Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_68()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn; | ASSIGN | 7573 | = null
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String; | OPERATOR | 57093 | < -> >
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3656 | return null
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_28(I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_116()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:sum([I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_28()Z
daikon.Quant:subsetOf([D[D)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_55()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ValueTuple:size()I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_13()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_162()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3R_88()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Quant:memberOf(S[S)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10682 | = null
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_2_21(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 956 | = null
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_29()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3R_135()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1139 2 574 2 1078 2 650 2 1032 2 817 2 993 2 331 2 198 4 
131 2 98 2 733 2 890 2 145 6 1093 6 374 2 43 2 647 6 938 2 1117 2 
983 6 711 2 912 2 1067 6 894 6 1098 4 1078 2 836 4 188 2 940 2 817 2 728 2 421 6 
1005 2 64 2 750 4 37 2 661 12 825 4 835 2 834 8 977 2 801 2 455 16 569 10 1136 10 637 2 730 8 175 6 685 16 257 26 777 10 1112 8 259 4 90 6 291 10 1078 6 925 16 470 4 1118 8 817 6 1149 29 747 10 
924 4 15 6 
678 2 
64 2 877 4 794 2 478 2 721 4 202 2 204 2 888 2 214 2 493 2 148 2 286 2 1034 2 958 2 898 2 817 4 360 2 659 2 364 2 227 2 36 4 1126 2 442 2 830 2 379 2 311 2 106 4 312 2 601 2 602 2 245 2 767 2 769 2 174 2 1065 2 393 2 993 2 57 2 1078 4 261 2 870 2 696 2 266 2 786 2 
228 8 661 22 414 6 625 6 757 4 835 2 834 6 74 4 1061 4 141 6 569 16 455 32 1136 16 946 4 1062 2 730 16 175 4 685 32 252 2 354 6 326 4 893 6 257 48 777 6 152 2 465 4 960 2 291 16 90 4 538 2 1078 4 470 2 925 32 221 4 817 4 1149 54 61 6 747 16 
22 2 202 2 389 2 
587 22 100 2 610 2 102 2 219 10 779 2 136 2 447 2 186 2 296 2 602 2 603 2 944 2 676 2 
661 2 666 2 976 2 838 2 569 2 455 2 1136 2 730 2 685 2 773 2 530 2 257 4 777 4 812 2 291 2 90 2 470 2 925 2 357 2 816 2 1149 6 583 2 747 2 
685 8 661 4 825 2 119 2 326 4 625 6 257 12 291 4 108 2 74 4 925 8 1149 16 61 6 455 8 569 4 1136 4 747 4 
22 2 495 2 389 2 880 2 83 2 882 2 906 2 202 2 541 2 189 2 385 2 350 6 763 2 190 2 908 2 620 4 
1088 2 1095 2 673 2 489 2 678 2 500 2 778 2 86 2 581 2 192 2 
704 2 1004 4 412 2 1006 2 551 2 552 3 553 2 271 2 6 3 1015 1 8 3 415 2 716 2 275 1 722 1 565 8 566 16 13 3 1024 2 1025 5 281 1 18 16 21 1 142 1 284 24 573 1 1032 2 734 1 151 2 290 2 25 2 154 2 897 2 292 2 295 8 299 1 748 2 436 2 437 6 903 2 305 2 440 1 752 2 755 2 444 2 168 1 41 4 170 2 594 3 1053 2 760 2 598 3 454 2 48 16 604 2 910 1 50 4 173 2 606 3 176 4 54 2 916 2 918 2 920 2 1074 2 466 2 1078 34 923 2 59 1 472 2 187 1 615 2 616 3 191 12 332 2 193 3 1087 2 930 2 1090 2 1092 4 796 2 340 2 70 2 1097 2 934 2 344 4 632 4 199 2 939 2 800 2 1100 2 634 2 207 2 1101 6 76 2 1103 2 492 2 949 2 639 24 640 2 215 2 496 3 1108 2 1111 2 88 2 811 2 961 12 814 2 1116 32 817 32 366 2 1125 2 515 2 226 2 662 2 1128 2 973 2 665 1 1129 2 831 6 381 2 975 2 833 3 522 2 523 2 672 2 1135 2 847 2 681 8 114 2 686 3 989 2 990 32 394 2 858 4 395 2 1143 1 1145 2 996 2 534 2 397 16 694 6 865 2 869 2 867 2 398 1 127 2 265 2 402 2 
562 2 1078 2 
65 2 1085 2 1078 4 
302 2 
0 48 2 2 556 4 557 22 273 14 274 4 885 4 12 2 16 8 279 4 568 2 19 14 283 2 571 2 891 48 892 10 288 2 577 4 579 2 580 14 297 2 900 48 300 2 301 4 585 2 303 2 304 36 588 4 306 4 590 14 308 2 592 2 316 2 317 2 321 2 325 8 913 2 613 2 919 4 922 2 926 8 618 2 928 2 68 4 628 4 343 2 633 2 349 4 943 2 635 2 636 4 352 48 638 146 641 2 644 2 952 2 954 2 84 4 355 2 85 2 91 4 92 8 962 2 94 146 359 2 655 6 656 48 657 8 660 2 968 4 368 16 99 6 370 2 971 42 974 4 380 2 670 4 383 2 384 4 674 2 677 48 982 2 683 2 387 12 115 2 116 2 120 2 392 2 693 4 695 4 399 2 697 2 404 2 702 48 408 4 410 4 703 20 1003 2 707 36 708 2 709 2 132 2 1013 2 133 2 712 2 713 2 715 16 714 2 717 2 718 8 416 2 723 2 725 22 418 4 419 2 422 2 144 2 731 2 1027 2 425 2 146 2 1033 28 1035 2 426 8 155 2 739 2 430 48 1039 2 1038 4 158 4 1040 2 159 2 164 26 753 10 441 2 165 38 1047 2 167 4 754 4 756 4 1051 48 446 2 1056 8 761 8 768 8 457 2 459 4 772 6 776 2 178 2 1071 2 463 2 181 26 182 6 1072 4 183 2 469 2 184 2 1080 2 1083 4 1089 2 477 2 195 48 480 2 484 2 203 2 486 2 488 4 212 2 803 24 804 2 805 8 806 2 1107 2 498 2 1109 22 501 2 502 2 810 2 509 8 1119 2 222 48 819 2 225 4 823 2 826 14 231 2 828 2 1127 48 232 2 517 4 234 2 242 2 839 16 243 20 840 2 246 146 842 2 841 6 844 186 247 2 1137 2 846 2 527 2 848 48 528 2 853 6 1142 2 859 4 860 2 537 4 539 2 263 20 264 2 873 2 1150 4 875 8 
202 2 216 2 658 1 491 2 1113 2 
967 2 202 2 216 2 149 2 491 2 1113 2 
259 2 202 2 109 2 82 2 491 2 737 2 
312 2 4 2 
259 2 202 2 688 2 491 2 
576 2 1044 2 
596 2 160 2 
600 2 766 2 
608 2 255 2 
596 2 555 2 255 2 
596 2 47 2 255 2 
596 2 255 2 843 2 
596 2 964 2 255 2 
629 6 799 6 202 2 491 2 121 2 955 2 896 2 507 2 
813 2 981 2 
82 2 784 2 736 2 
1023 2 82 2 
259 2 202 2 82 2 149 2 431 2 491 2 737 2 
82 2 513 2 737 2 
62 2 82 2 737 2 
563 2 784 2 981 2 
82 2 737 2 
981 2 788 2 
82 2 445 2 
224 2 784 2 981 2 
322 2 600 2 784 2 
542 2 784 2 255 2 
411 2 784 2 1044 2 
596 2 784 2 169 2 
428 2 981 2 
82 2 482 2 
448 2 600 2 
315 2 255 2 
9 2 1044 2 
596 2 45 2 
1020 2 981 2 
596 2 95 2 
589 2 1044 2 
345 2 255 2 
346 2 600 2 
224 2 751 2 784 2 981 2 
224 2 751 2 1132 2 784 2 981 2 
742 2 784 2 981 2 
815 2 784 2 981 2 
287 2 1055 2 211 2 1045 2 
969 2 587 6 793 2 878 4 147 2 807 4 324 2 609 2 338 2 337 2 914 2 959 2 1099 2 564 2 1058 2 358 2 1001 2 210 2 
163 2 784 2 
920 2 
1006 2 551 2 553 2 271 2 275 4 18 6 572 2 1032 2 292 2 299 2 748 2 437 6 752 2 305 4 444 2 168 2 41 2 1053 2 758 2 451 2 1059 2 1060 2 604 2 320 2 50 4 176 2 323 2 54 2 916 2 918 2 466 2 1074 2 1078 26 615 2 191 8 194 2 929 2 1087 2 930 2 335 2 1090 2 1092 4 340 2 197 2 70 2 344 4 632 2 199 2 800 2 1101 4 215 2 1108 2 499 4 1111 2 505 2 510 2 814 2 961 8 1116 4 653 2 817 26 226 2 372 4 371 2 1129 2 831 2 523 2 847 2 681 2 989 6 990 6 858 4 694 2 865 2 127 2 699 2 
1006 2 876 2 551 2 553 2 271 2 1019 2 275 2 18 6 572 2 1032 2 292 2 299 2 748 2 437 6 752 2 305 4 444 2 168 2 41 2 1053 2 758 2 451 2 1059 2 1060 2 604 2 320 2 50 4 176 2 323 2 54 2 916 2 918 2 466 2 1074 2 1078 26 923 2 615 2 191 8 194 2 1087 2 930 2 335 2 1090 2 1092 4 340 2 197 2 70 2 344 4 632 2 199 2 800 2 207 2 1101 6 215 2 1108 2 499 4 1111 2 505 2 814 2 961 8 1116 4 653 2 817 26 226 2 372 4 371 2 1129 2 831 2 523 2 672 2 244 2 847 2 681 2 989 6 990 6 858 4 694 2 865 2 127 2 
386 2 
196 2 744 2 
790 2 131 4 930 2 336 2 1010 10 554 2 1011 2 624 2 1092 2 339 2 1093 6 340 2 558 2 1022 2 936 2 886 2 889 2 890 2 145 6 89 4 156 2 647 6 1117 2 32 4 817 6 298 2 748 2 584 2 438 2 369 4 437 4 101 2 444 2 593 8 1053 2 43 4 978 2 1133 2 111 2 675 2 319 2 456 2 50 2 770 8 52 2 529 4 53 2 251 2 177 2 687 2 391 2 691 2 123 2 466 2 1078 12 782 2 127 2 700 4 329 4 270 2 
790 2 131 4 930 2 1010 10 554 2 1011 2 1092 2 624 2 339 2 1093 6 340 2 558 2 1022 2 936 2 886 2 140 4 889 2 890 2 145 8 89 4 156 2 647 8 1117 2 817 6 32 4 298 2 748 2 584 2 438 2 369 4 98 2 437 4 101 2 444 2 104 2 593 8 1053 2 43 4 978 2 1133 2 111 2 675 2 319 2 456 2 50 2 770 8 52 2 529 4 53 2 251 2 177 2 1069 2 391 2 691 2 123 2 466 2 1078 12 782 2 127 2 700 4 329 4 270 2 
790 2 131 2 369 4 529 2 53 2 101 2 554 2 1011 2 1093 2 558 2 43 2 1022 2 156 2 647 2 1133 2 32 4 319 2 889 2 
790 2 131 4 930 2 336 2 1010 6 554 2 1011 2 624 2 1092 2 339 2 1093 4 340 2 558 2 1022 2 936 2 886 2 889 2 890 2 145 6 89 4 156 2 647 6 32 4 817 6 298 2 748 2 584 2 438 2 369 4 98 2 437 4 101 2 444 2 593 4 1053 2 43 4 978 2 1133 2 111 2 675 2 319 2 456 2 50 2 770 4 52 2 529 4 53 2 251 2 177 2 687 2 391 2 691 2 123 2 466 2 1078 12 782 2 127 2 700 4 329 4 270 2 
790 2 131 4 930 2 336 2 1010 6 554 2 1011 2 624 2 1092 2 339 2 1093 6 340 2 558 2 1022 2 936 2 886 2 889 2 733 2 890 2 145 6 89 4 156 2 647 4 32 4 817 6 298 2 748 2 584 2 438 2 369 4 437 4 101 2 444 2 593 4 1053 2 43 4 978 2 1133 2 111 2 675 2 319 2 456 2 50 2 770 4 52 2 529 4 53 2 251 2 177 2 687 2 391 2 691 2 123 2 466 2 1078 12 782 2 127 2 700 4 329 4 270 2 
790 2 131 4 930 2 336 2 1010 6 554 2 1011 2 624 2 1092 2 339 2 1093 6 340 2 558 2 1022 2 936 2 886 2 889 2 890 2 145 6 89 4 156 2 647 6 1117 2 32 4 817 6 298 2 748 2 584 2 438 2 369 4 437 4 101 2 444 2 593 8 1053 2 43 4 978 2 1133 2 111 2 675 2 319 2 456 2 50 2 770 4 52 2 529 4 53 2 251 2 177 2 687 2 391 2 691 2 123 2 466 2 1078 12 782 2 127 2 700 4 329 4 270 2 
790 2 131 4 930 2 336 2 1010 10 554 2 1011 2 624 2 1092 2 339 2 1093 8 340 2 558 2 1022 2 936 2 886 2 889 2 733 2 890 2 145 8 89 4 156 2 647 6 1117 2 32 4 817 6 298 2 748 2 584 2 438 2 369 4 437 4 101 2 444 2 593 8 1053 2 43 4 978 2 1133 2 111 2 675 2 319 2 456 2 50 2 770 8 52 2 529 4 53 2 251 2 177 2 687 2 391 2 691 2 123 2 466 2 1078 12 782 2 127 2 700 4 329 4 270 2 
790 2 131 4 930 2 336 2 1010 10 554 2 1011 2 624 2 1092 2 339 2 1093 6 340 2 558 2 1022 2 936 2 886 2 889 2 890 2 145 6 89 4 156 2 647 6 1117 2 32 4 817 6 298 2 748 2 584 2 438 2 369 4 437 4 101 2 444 2 593 8 1053 2 43 4 978 2 1133 2 111 2 675 2 319 2 456 2 50 2 770 8 52 2 529 4 53 2 251 2 177 2 687 2 391 2 691 2 123 2 466 2 1078 12 782 2 127 2 700 4 329 4 270 2 
549 2 553 2 879 2 554 2 558 2 10 2 562 6 561 2 886 2 567 6 280 2 889 2 18 6 572 4 890 4 895 2 292 2 582 4 32 4 298 2 902 2 584 2 302 6 593 2 42 2 904 6 43 4 313 2 319 2 49 2 320 2 50 4 911 6 52 4 53 2 54 2 611 7 916 2 614 6 329 4 930 2 336 2 624 2 339 2 340 2 627 2 342 7 933 10 344 4 73 1 936 2 89 8 646 6 647 4 961 2 363 2 369 4 663 2 101 2 371 2 672 2 978 2 111 2 675 2 112 1 681 2 987 1 989 6 990 8 391 2 994 2 691 4 123 2 396 6 124 2 694 2 127 2 698 2 700 6 1002 1 1006 2 131 4 1008 1 1009 2 1010 2 1011 2 1022 2 139 2 733 4 145 12 1032 2 738 2 156 2 741 8 740 6 746 6 745 1 1042 2 748 2 437 6 438 2 752 2 444 2 1049 6 1050 6 1053 2 452 2 1059 2 456 2 460 2 177 2 775 2 466 2 468 2 1078 46 782 2 191 2 790 2 1085 6 1087 2 1092 4 1093 8 797 2 479 2 798 2 199 2 207 2 205 1 1101 6 490 1 494 6 215 2 499 4 1111 2 814 2 1116 2 817 24 1123 6 226 2 829 2 1129 2 831 2 233 2 523 2 1133 2 847 12 250 4 251 2 529 4 858 4 865 2 540 2 1147 1 267 6 1148 2 270 2 
549 2 131 4 1006 2 1010 2 1009 2 879 2 553 2 554 2 1011 2 10 2 558 2 561 2 562 6 1022 2 886 2 139 2 567 6 280 2 889 2 18 6 572 4 145 12 890 4 1032 2 895 2 738 2 156 2 292 2 740 6 741 8 582 4 32 4 746 6 298 2 1042 2 902 2 748 2 584 2 302 6 438 2 437 6 305 2 752 2 1049 6 444 2 1050 6 41 2 593 6 904 6 42 2 1053 2 43 4 452 2 313 2 1059 2 49 2 319 2 320 2 456 2 50 4 911 6 458 2 176 2 52 4 460 2 53 2 54 2 177 2 775 2 916 2 614 6 468 2 466 2 1078 48 782 2 329 4 191 6 790 2 1085 6 1087 2 930 2 336 2 624 2 1092 4 339 2 1093 8 340 2 479 2 797 2 627 2 933 10 798 2 344 4 631 2 632 2 936 2 199 2 207 2 1101 6 494 6 215 2 499 4 1111 2 89 8 646 6 647 8 961 6 814 2 1116 2 1117 4 817 26 363 2 1123 6 226 2 369 4 663 2 101 2 371 2 829 2 233 2 831 2 1129 2 523 2 672 2 978 2 1133 2 111 2 675 2 847 12 681 2 250 4 529 4 251 2 989 6 990 8 391 2 858 4 994 2 691 4 123 2 396 6 124 2 694 2 865 2 540 2 127 2 267 6 1148 2 698 2 700 6 270 2 
549 2 131 4 1006 2 1009 2 879 2 1010 6 553 2 554 2 1011 2 10 2 558 2 561 2 562 6 1022 2 886 2 139 2 567 6 280 2 889 2 18 6 572 4 145 12 890 4 1032 2 895 2 738 2 156 2 292 2 740 6 741 8 582 4 32 4 746 6 298 2 1042 2 902 2 748 2 584 2 302 6 438 2 437 6 305 2 752 2 1049 6 444 2 1050 6 41 2 593 6 904 6 42 2 1053 2 43 4 452 2 313 2 1059 2 49 2 319 2 320 2 456 2 50 4 911 6 770 4 458 2 176 2 52 4 460 2 53 2 54 2 177 2 775 2 916 2 614 6 468 2 466 2 1078 48 782 2 329 4 191 6 790 2 1085 6 1087 2 930 2 336 2 624 2 1092 4 339 2 1093 8 340 2 479 2 797 2 627 2 933 10 798 2 344 4 631 2 632 2 936 2 199 2 207 2 1101 6 494 6 215 2 499 4 1111 2 89 8 646 6 647 8 961 6 814 2 1116 2 1117 4 817 26 363 2 1123 6 226 2 369 4 663 2 101 2 371 2 829 2 233 2 831 2 1129 2 523 2 672 2 978 2 1133 2 111 2 675 2 847 12 681 2 250 4 529 4 251 2 989 6 990 8 391 2 858 4 994 2 691 4 123 2 396 6 124 2 694 2 865 2 540 2 127 2 267 6 1148 2 698 2 700 6 270 2 
549 2 553 2 879 2 554 2 558 2 10 2 562 12 561 2 276 2 886 2 887 6 14 6 567 6 280 2 889 2 282 6 18 8 572 4 890 4 895 2 292 2 582 4 32 4 298 2 902 2 584 2 302 12 305 2 307 6 310 6 593 6 41 2 42 2 904 6 43 4 907 2 313 2 319 2 49 2 320 2 50 4 911 6 52 4 53 2 54 2 916 2 614 6 329 4 333 2 930 2 336 2 624 2 339 2 340 2 627 2 933 8 344 4 631 2 936 2 632 2 89 8 646 6 647 8 961 8 363 2 369 4 663 2 101 2 371 4 672 2 978 2 979 2 111 2 675 2 681 4 989 8 990 12 391 2 994 2 691 4 123 2 396 6 124 2 694 4 126 2 127 2 698 2 700 6 1006 2 131 4 1010 6 1009 2 1011 2 1022 2 139 2 145 12 1032 2 738 2 156 2 741 8 740 6 746 6 1042 2 748 2 437 6 438 2 752 2 444 2 1049 12 1050 12 1053 2 452 2 1059 2 765 6 456 2 770 4 458 2 176 2 460 2 177 2 464 2 466 2 468 2 1075 2 1078 52 782 2 191 8 790 2 791 2 1085 12 1087 2 1092 4 1093 8 797 2 479 2 798 2 199 2 207 2 1101 6 494 6 215 2 499 6 1111 2 814 2 1116 4 1117 4 817 24 1123 6 226 2 829 2 1129 2 831 4 233 2 523 2 1133 2 847 10 250 4 251 2 529 4 855 6 858 4 865 2 540 2 267 12 268 6 1148 2 874 6 270 2 
131 4 369 2 336 2 1010 4 101 2 1011 2 624 2 1093 6 593 6 558 2 43 4 936 2 886 2 1133 2 111 2 675 2 319 2 889 2 456 2 770 4 251 2 145 4 890 2 53 2 177 2 391 2 89 2 1078 4 647 6 782 2 1117 2 32 2 700 2 298 2 329 2 
131 4 1006 2 553 2 1010 2 1011 2 558 2 886 2 1024 2 889 2 18 6 572 2 145 4 890 2 1032 2 292 2 32 2 298 2 748 2 437 6 752 2 444 2 593 6 1053 2 43 4 1059 2 319 2 320 2 456 2 50 4 53 2 177 2 775 2 916 2 920 2 466 2 1078 28 782 2 329 2 930 2 1087 2 336 2 623 2 1092 4 624 2 1093 6 340 2 933 2 344 4 936 2 199 2 207 2 1101 6 215 2 499 4 1111 2 1114 2 645 2 89 2 647 6 356 2 814 2 1116 3 1117 2 817 24 818 3 226 2 369 2 101 2 1129 2 831 3 975 2 523 2 237 2 672 2 1133 2 111 2 675 2 847 4 251 2 989 6 990 8 391 2 858 4 1145 2 694 3 865 2 127 2 700 2 270 2 
936 2 852 2 298 2 
936 2 852 2 298 2 
706 2 1006 2 131 4 879 2 553 2 1010 6 554 2 11 2 1022 2 275 2 417 2 889 2 18 2 1026 2 572 6 733 4 890 4 145 16 1032 2 26 4 292 2 582 2 32 2 298 4 748 2 438 2 437 6 752 2 166 2 444 2 41 4 593 6 1053 2 43 4 452 2 450 2 313 2 1059 2 762 2 319 2 320 2 50 4 770 4 176 4 52 2 53 4 54 4 916 2 466 2 1078 24 329 2 191 4 787 2 1087 2 930 2 1092 4 339 2 1093 12 340 2 626 2 1096 2 933 2 344 4 632 4 936 6 199 2 207 2 1101 6 215 2 642 2 89 4 646 2 647 12 961 4 814 2 1116 2 651 2 1117 4 653 4 817 16 226 2 369 2 98 4 1129 2 523 2 672 2 239 4 111 2 680 2 847 4 1138 2 250 2 529 4 251 2 852 2 989 2 990 2 858 4 691 4 123 2 861 2 535 2 865 2 127 2 403 2 700 4 
680 2 847 2 790 2 196 2 953 2 1096 2 933 2 272 2 124 2 450 2 646 2 1078 4 127 2 582 2 817 2 1151 2 1148 2 
706 2 1006 2 131 4 879 2 553 2 1010 6 554 2 1022 2 275 1 417 2 889 2 18 2 572 6 575 2 733 4 890 4 145 16 1032 2 26 4 292 2 32 2 298 4 748 2 438 2 437 6 752 2 166 2 444 2 41 4 593 6 1053 2 43 4 450 2 452 2 313 2 1059 2 762 2 319 2 320 2 50 4 770 4 1063 2 176 4 52 4 53 4 54 4 916 2 56 2 466 2 1078 24 329 2 191 4 787 4 1087 2 930 2 1092 4 339 2 1093 12 340 2 626 2 1096 2 344 4 632 4 936 6 199 2 207 2 1101 6 215 2 1110 2 89 4 646 2 647 12 961 4 814 2 1116 4 648 2 651 2 1117 4 653 4 817 16 226 2 369 2 98 4 1129 2 523 2 672 2 978 2 239 4 111 2 680 2 847 2 1138 2 250 2 529 4 251 2 852 2 989 2 990 2 858 4 691 4 123 2 861 2 535 2 865 2 127 2 700 4 
706 2 1006 2 131 4 879 2 553 2 1010 6 554 2 1016 2 1022 2 275 1 417 2 889 2 18 2 572 6 733 4 890 4 145 16 1031 2 1032 2 26 4 292 2 582 2 32 2 298 4 748 2 438 2 437 6 752 2 166 2 444 2 41 4 593 6 1053 2 43 4 450 2 313 2 1059 2 762 2 319 2 320 2 50 4 770 4 176 4 52 4 53 4 54 4 916 2 466 2 185 2 1078 24 329 2 191 4 787 2 1087 2 930 2 1092 4 339 2 1093 12 340 2 626 2 1096 2 933 2 344 4 632 4 936 6 199 2 207 2 1101 6 215 2 89 4 646 2 647 12 961 4 814 2 1116 2 651 2 1117 4 653 4 817 16 226 2 369 2 98 4 1129 2 518 2 523 2 672 2 978 2 239 4 1134 2 111 2 680 2 847 4 1138 2 250 2 529 4 251 2 852 2 989 2 990 2 858 4 691 2 123 2 861 2 535 2 865 2 127 2 700 4 
1 2 550 2 553 6 881 2 559 2 883 2 560 4 275 2 276 2 566 4 277 2 17 2 569 4 18 14 23 2 285 4 572 2 24 2 578 2 895 2 27 12 292 2 291 4 293 2 29 26 294 2 30 2 31 2 33 2 299 2 901 2 34 2 40 2 309 8 591 2 905 2 42 2 595 2 599 2 907 2 597 6 46 2 318 4 49 2 50 4 51 4 323 2 54 4 326 4 55 2 612 14 916 2 917 2 328 2 925 8 617 2 61 6 330 2 333 2 621 4 622 2 930 2 335 2 623 2 932 3 67 2 340 2 627 2 341 2 344 20 630 2 937 6 347 2 348 12 941 2 942 2 351 10 75 2 945 2 947 2 79 2 78 2 950 2 81 10 353 2 87 2 645 2 356 2 961 28 93 2 649 2 652 2 654 16 965 2 362 2 365 2 970 2 97 2 96 2 661 6 371 46 376 2 375 4 972 2 105 2 382 2 672 4 979 2 980 2 984 2 682 2 681 20 985 2 685 8 988 2 986 2 117 2 388 2 989 14 118 3 990 28 390 2 122 2 991 2 689 2 690 4 692 2 998 16 397 4 997 4 694 16 999 12 401 2 400 2 1000 10 127 2 128 2 698 2 129 2 130 4 405 2 406 4 701 2 407 4 409 2 705 2 1006 2 1007 2 710 2 413 2 1014 4 134 2 1017 2 1018 2 1021 2 720 4 137 4 724 2 138 12 420 2 143 2 729 2 730 4 423 14 424 6 1029 2 1028 3 1032 4 150 4 735 2 1036 2 1037 2 427 2 429 2 157 2 433 2 747 4 1043 6 748 2 434 2 1046 2 435 2 161 4 437 6 439 2 752 2 443 2 1048 2 444 2 168 2 1053 2 759 2 758 14 1057 2 451 2 453 2 1059 2 1060 2 455 8 1062 2 175 4 771 3 1064 2 460 4 462 10 774 2 1068 2 1066 14 1070 2 179 2 180 2 464 2 467 2 466 2 1076 2 1075 2 1077 2 1078 64 783 4 473 2 1081 2 785 2 1082 2 191 26 474 16 475 2 194 2 791 2 1086 5 1087 2 1092 4 197 2 481 2 199 2 201 3 487 2 485 4 206 2 207 4 1101 34 1102 2 208 2 209 2 802 16 213 2 1104 4 1106 2 215 2 497 2 499 12 809 4 1111 2 503 2 505 2 1114 2 814 6 1116 19 817 52 1120 24 818 2 1121 2 1124 2 821 2 226 4 824 2 829 2 831 19 1129 4 520 10 521 2 523 2 1131 2 834 6 241 2 1136 4 526 4 847 2 248 12 249 2 849 16 850 2 1140 14 1141 2 252 4 854 2 856 2 254 4 257 12 858 18 532 1 258 2 531 2 533 2 864 4 536 2 260 2 865 2 262 2 871 2 543 4 1149 16 546 2 269 2 548 4 1152 2 
371 6 831 2 883 2 520 2 241 2 172 2 208 2 18 2 771 2 462 4 989 2 81 2 990 2 499 2 390 2 1111 2 694 2 1078 2 1116 2 652 2 817 2 617 2 1121 2 901 2 
371 6 831 2 883 2 520 2 241 2 172 2 208 2 18 2 771 2 462 4 989 2 81 2 990 2 499 2 390 2 1111 2 694 2 1078 2 1116 2 652 2 817 2 617 2 1121 2 901 2 
371 6 831 2 883 2 520 2 241 2 172 2 208 2 18 2 771 2 462 4 989 2 81 2 990 2 499 2 390 2 1111 2 694 2 1078 2 1116 2 652 2 817 2 617 2 1121 2 901 2 
118 1 990 2 375 2 1111 2 831 1 378 2 397 2 449 2 1078 2 201 1 866 2 1116 1 566 2 220 1 60 2 817 2 901 2 
397 2 449 2 1078 2 866 2 566 2 990 2 817 2 60 2 375 2 1111 2 901 2 378 2 
397 2 449 2 1078 2 866 2 566 2 990 2 817 2 60 2 375 2 1111 2 901 2 378 2 
397 2 449 2 1078 2 866 2 566 2 990 2 817 2 60 2 375 2 1111 2 901 2 378 2 
397 2 449 2 1078 2 866 2 566 2 990 2 817 2 60 2 375 2 1111 2 901 2 378 2 
107 2 1130 2 758 2 35 2 732 2 951 2 373 2 
514 2 822 2 35 2 314 2 443 2 516 2 
39 2 1049 2 377 2 667 2 884 2 906 1 171 2 240 2 525 1 1105 2 80 2 643 2 253 2 218 2 466 2 508 2 921 2 1078 10 511 2 471 1 512 2 190 1 899 2 817 8 966 2 927 1 
705 2 223 2 661 1 228 2 236 2 834 4 764 2 245 2 141 4 455 6 569 6 1136 6 685 6 175 2 326 2 55 2 257 12 465 2 997 2 291 6 1078 6 925 6 872 2 817 6 1149 17 61 4 747 6 786 2 
931 2 664 2 857 2 957 2 69 2 153 2 72 2 719 2 780 2 58 2 1078 1 28 4 963 2 817 1 361 1 570 2 726 7 727 2 
931 2 664 4 857 2 69 2 957 4 153 2 72 2 719 2 780 4 58 2 28 4 963 2 570 2 726 6 727 2 
931 2 664 8 857 2 69 2 957 8 153 8 72 2 719 2 780 8 58 2 1078 1 28 4 963 2 817 1 361 1 570 2 726 10 727 6 
931 2 664 2 857 2 69 2 957 2 72 2 719 2 780 2 58 2 28 2 963 2 570 2 726 2 
1007 6 553 14 3 4 5 26 7 6 881 10 1017 4 135 2 559 6 560 16 275 4 724 11 17 4 420 10 729 42 285 18 1029 6 289 2 1036 6 1037 8 293 6 29 34 157 6 30 6 31 24 432 90 433 6 1041 90 1043 12 749 2 34 6 586 12 162 8 439 6 38 4 40 4 591 6 1054 24 44 2 318 16 605 4 607 2 774 6 1070 4 612 124 327 1 328 6 1076 4 1077 8 1078 150 781 4 783 17 473 4 1081 6 785 24 1084 24 330 6 475 4 63 10 621 36 1086 7 334 4 792 2 795 2 341 8 481 42 344 112 483 4 487 4 206 10 207 58 942 24 1101 248 948 2 1104 50 1106 6 808 10 809 92 956 10 504 2 1115 4 961 28 814 14 817 134 654 4 965 6 1124 2 365 8 226 8 970 4 97 10 229 2 827 2 376 2 105 4 519 2 668 4 671 2 672 58 238 4 837 2 526 16 679 2 682 6 684 2 985 8 850 4 117 4 851 26 122 6 254 16 256 2 689 6 858 88 531 4 258 6 1146 8 1144 4 995 24 998 22 863 2 536 6 868 18 401 10 128 4 543 84 545 8 407 8 
789 2 475 2 63 2 476 2 553 2 1091 2 1012 4 1094 2 66 2 1018 4 341 2 71 2 560 2 344 18 935 2 275 2 200 4 138 6 207 2 1101 38 278 2 20 2 77 2 1106 2 808 2 1030 4 956 2 217 2 1037 2 506 2 293 2 961 32 814 2 743 2 817 40 1122 2 820 2 367 2 34 2 226 2 162 2 230 2 827 2 103 2 1052 2 832 2 235 2 1054 2 669 2 672 2 110 2 524 2 318 2 909 2 845 2 526 2 679 2 113 2 684 2 607 2 461 2 122 2 915 2 689 2 858 18 612 2 992 2 1144 2 995 2 328 2 862 2 1073 2 1077 2 536 2 1078 40 544 2 547 2 1084 2 619 2 407 6 
226 2 684 2 607 2 553 2 827 2 341 2 858 4 1037 2 344 4 1077 2 1078 10 1079 2 961 4 672 4 814 2 207 4 743 2 1101 10 817 10 679 2 
226 2 684 2 607 2 553 2 827 2 341 2 858 4 1037 2 344 4 506 2 275 2 1077 2 1078 10 961 4 672 4 814 2 207 4 743 2 1101 10 817 10 679 2 
125 2 

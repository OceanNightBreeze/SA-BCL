#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (508,788) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (131,552) (131,552) 529 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 199 565 379 1003 1059 898 257 105 664 154 864 927 1090 2 560 315 192 65 764 1093 772 823 1019 936 115 73 1000 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 527 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 527 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 527 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 989 928 575 848 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 25 938 1042 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 25 938 1042 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I | RETURN | 61113 | return null
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_88()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGT([I[I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice1:arity()I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.inv.Invariants:Invariants()V
daikon.Quant:slice([III)[I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3_25()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_29()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:lte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakHasherMap:size()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.ValueTuple:size()I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:ne(II)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | CONDITION | 83870 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_58()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndColumn()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:new_ppt()V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern:numIntArrays()I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:isPointerFileRep()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_3()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_2_4(I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_56()Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE:negate(I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Ppt:Ppt()V
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_47()Z
daikon.PptSlice0:arity()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:hashCode()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String; | RETURN | 8576 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Node:Node()V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_120()Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_25(I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2763 | = null
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_55()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_67()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.InvMap:toString()Ljava.lang.String; | ASSIGN | 3056 | = null
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_80()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([III)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2425 | return null
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_162()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.ProglangType:dimensions()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_3R_52()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ModBitTracker:num_vars()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:gte(II)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:subsetOf([J[J)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfo:isPointer()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_57()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_77()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_48()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_85()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | RETURN | 128825 | return null
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE:min([I)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_89()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:concat([I[I)[I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:sum([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:sign(I)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_2_21(I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:eq(JJ)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.FormatTestCase:passes()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_163()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_28()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Debug:logDetail()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_81()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | STATEMENT | 27899 | stmt -> ;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_4()Z | CONSTANT | 185855 | 87 -> 0
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ProglangType:baseIsScalar()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_3_15()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE:gcd([I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
582 2 933 2 853 2 312 4 171 2 126 2 131 2 318 2 552 2 
470 2 355 2 1063 2 982 6 537 2 250 6 138 2 155 2 825 6 141 2 428 2 
241 6 962 6 387 2 929 2 391 6 541 2 585 2 465 4 131 2 101 4 552 2 923 6 487 2 
1039 2 204 2 167 2 768 6 6 10 1082 4 251 8 1015 4 440 8 77 10 12 10 113 2 55 8 849 26 222 10 915 8 574 2 576 2 59 6 981 16 449 16 258 4 27 2 120 16 950 10 758 29 499 4 306 12 131 6 552 6 
219 6 46 4 
431 2 
1 4 830 2 204 2 510 2 474 2 908 2 932 2 933 4 252 2 780 2 1052 2 353 2 977 2 814 2 679 2 717 2 17 2 420 2 490 2 917 2 890 2 579 4 788 2 860 2 1028 2 760 2 336 2 270 2 627 2 
1039 2 661 6 768 4 6 16 280 4 519 4 251 18 605 6 348 2 440 6 12 16 77 16 845 2 376 2 714 6 442 6 849 48 222 6 750 4 59 4 981 32 489 8 449 32 918 6 615 2 258 2 120 32 29 4 985 6 893 2 950 16 758 54 897 4 165 4 995 4 131 4 306 22 467 2 552 4 
673 2 788 2 789 2 
732 2 508 2 805 2 175 2 688 2 689 22 92 2 216 2 792 2 320 2 1017 2 1034 2 979 2 339 10 
246 2 768 2 106 2 173 2 6 2 251 2 777 2 12 2 77 2 571 2 849 4 222 4 981 2 818 2 449 2 258 2 120 2 187 2 423 2 950 2 758 6 306 2 900 2 
981 8 449 8 120 8 6 4 29 4 950 4 566 2 758 16 499 2 605 6 897 4 12 4 77 4 442 6 849 12 306 4 340 2 
958 2 511 4 370 2 137 4 563 4 633 4 906 4 210 2 517 2 706 2 673 2 1052 4 1053 2 813 4 881 2 114 62 748 4 978 2 753 2 117 2 330 2 334 10 1086 2 859 10 579 4 788 8 787 2 156 2 789 6 1028 2 264 4 461 2 862 2 36 2 70 4 363 14 272 4 273 2 38 4 310 2 
431 2 965 2 872 2 873 2 52 2 325 2 125 2 1068 2 543 2 99 2 
399 1 959 2 559 1 966 2 970 2 409 4 708 8 9 1 712 2 412 1 13 2 573 2 19 2 852 1 290 2 291 2 24 2 295 1 422 4 30 2 986 2 32 1 33 2 161 5 166 2 430 2 593 2 169 2 598 2 319 2 1012 1 50 2 51 2 879 1 323 6 441 2 1020 12 882 1 444 2 450 3 452 2 454 2 188 6 619 2 68 3 626 6 1035 6 899 2 198 2 468 2 203 2 632 2 345 6 214 2 910 2 638 2 485 1 1051 3 351 2 640 1 1057 1 643 1 916 2 81 4 229 2 91 2 921 3 794 4 654 6 501 1 96 2 503 2 1072 14 364 2 238 2 509 1 104 2 512 2 931 1 672 2 528 2 529 2 941 6 385 6 535 2 945 2 388 1 822 4 389 2 123 1 542 8 265 2 126 2 544 2 693 2 131 32 552 30 694 2 
74 2 131 2 
1004 2 781 2 131 4 
292 2 
2 2 5 4 835 4 558 2 560 2 561 36 565 2 279 2 842 2 285 2 570 2 14 146 850 2 289 2 572 2 21 2 854 2 20 4 28 48 298 2 34 22 586 2 861 2 302 20 864 2 37 2 39 2 592 20 595 6 596 2 868 16 314 190 42 146 597 6 315 2 871 2 599 4 875 2 602 2 47 4 322 2 54 6 56 8 327 4 608 24 609 8 889 16 65 2 614 2 617 4 623 20 337 2 898 2 71 4 73 2 631 2 76 2 904 2 635 2 909 2 347 2 636 14 911 2 350 4 641 2 80 2 84 2 920 8 359 4 651 4 653 2 100 2 656 48 924 4 657 4 660 4 662 28 105 2 927 2 663 2 664 2 668 4 666 42 934 2 936 2 374 2 675 2 379 2 676 2 939 4 382 48 115 2 681 2 944 2 947 4 684 4 949 2 687 2 953 2 690 2 396 2 955 2 696 2 133 8 398 12 960 146 136 8 139 2 703 2 705 48 410 2 973 2 975 8 415 4 416 6 418 10 151 14 719 36 720 4 154 2 987 2 158 48 157 26 159 4 992 48 427 2 731 22 997 48 999 2 168 2 1000 2 735 2 1003 2 435 8 1007 2 1011 14 436 48 741 4 745 4 1019 2 747 48 749 48 1021 4 1023 2 755 10 756 2 1025 2 453 2 455 8 457 2 192 2 763 2 764 2 1036 48 1037 2 199 2 200 4 767 14 770 4 772 2 209 2 775 2 478 2 212 2 1047 2 1048 4 481 8 218 24 482 2 483 4 484 6 1054 8 1056 2 223 14 225 4 226 2 488 36 1059 2 786 2 228 48 492 2 493 2 496 4 791 4 500 2 799 2 505 2 506 4 239 4 240 16 243 48 1078 8 1079 2 806 4 513 2 518 2 807 2 808 4 1083 6 254 8 256 2 817 22 820 4 257 2 539 2 821 4 540 2 823 2 824 2 1090 2 271 2 827 8 1093 2 
980 1 132 2 67 2 392 2 
1065 2 67 2 
367 2 1015 2 1050 2 700 2 788 2 811 2 67 2 
811 2 129 2 67 2 
545 2 811 2 67 2 
185 2 194 2 392 2 
811 2 67 2 
185 2 737 2 
215 2 67 2 
185 2 568 2 392 2 
743 2 60 2 392 2 
870 2 392 2 530 2 
331 2 145 2 392 2 
683 2 901 2 392 2 
185 2 761 2 
557 2 67 2 
935 2 743 2 
85 2 870 2 
408 2 145 2 
569 2 901 2 
185 2 1060 2 
305 2 901 2 
145 2 967 2 
870 2 316 2 
743 2 296 2 
185 2 568 2 392 2 644 2 
185 2 568 2 704 2 392 2 644 2 
185 2 392 2 1022 2 
185 2 622 2 392 2 
456 2 287 2 863 2 429 2 
367 2 793 2 855 2 788 2 
367 2 793 2 855 2 700 2 788 2 1080 2 
367 2 191 2 1015 2 788 2 811 2 67 2 
760 2 332 2 
82 2 367 2 1015 2 788 2 
301 2 145 2 
66 2 901 2 
743 2 255 2 
261 2 870 2 
189 2 870 2 901 2 
148 2 870 2 901 2 
49 2 870 2 901 2 
870 2 208 2 901 2 
367 2 838 2 739 6 1058 2 718 2 788 2 724 2 197 6 
185 2 276 2 
836 2 858 2 495 2 211 2 346 2 459 4 689 6 111 2 895 2 625 2 547 2 746 4 112 2 375 2 828 2 715 2 1075 2 677 2 
268 2 392 2 
966 2 
135 2 556 2 559 2 970 2 409 4 573 2 19 2 291 2 153 2 578 2 24 6 30 2 986 2 991 4 304 2 866 2 166 2 169 2 170 2 40 2 598 2 317 2 603 2 441 2 53 4 1020 6 61 2 452 2 188 4 619 2 626 2 899 2 203 2 902 2 769 2 1041 2 344 2 345 6 476 2 910 2 351 2 224 2 916 6 81 4 229 2 91 2 232 2 795 2 794 4 654 2 96 2 503 2 1072 4 364 2 238 2 242 2 368 2 372 2 515 2 373 4 521 2 672 2 526 2 529 2 1085 2 941 6 535 2 822 4 123 2 126 2 131 26 552 26 
135 2 556 2 559 2 970 2 409 4 573 2 19 2 291 2 153 2 24 6 30 2 986 2 726 2 991 4 304 2 309 2 866 2 166 2 169 2 170 2 40 2 598 2 603 2 606 2 441 2 53 4 1020 6 61 2 452 2 188 6 619 2 626 2 899 2 203 2 902 2 769 2 1041 2 344 2 207 2 345 6 476 2 910 2 351 2 224 2 916 6 81 4 229 2 91 2 232 2 795 2 794 4 654 2 96 2 503 2 1072 4 364 2 238 2 242 2 372 2 515 2 373 4 521 2 672 2 526 2 529 2 1085 2 941 6 535 2 822 4 123 2 126 2 544 2 131 26 552 26 694 2 
607 2 
839 2 1087 2 
629 2 964 10 75 2 345 4 138 4 281 4 405 2 477 2 475 2 283 2 844 2 284 2 486 2 351 2 81 2 83 4 783 2 1063 4 152 2 982 6 229 2 230 2 1066 2 30 2 986 2 583 2 727 2 426 4 35 2 794 2 588 2 993 2 798 2 428 2 590 2 591 2 659 2 926 8 1005 8 250 6 742 4 253 2 1016 4 1018 2 441 2 532 2 448 2 616 2 537 2 122 2 948 2 619 2 825 6 826 2 127 4 899 2 72 2 131 12 552 6 469 2 
342 4 472 2 964 10 75 2 345 4 138 4 281 4 405 2 477 2 475 2 283 2 844 2 284 2 486 2 351 2 81 2 355 2 83 4 783 2 1063 4 152 2 982 6 229 2 230 2 1066 2 30 2 986 2 583 2 426 4 727 2 35 2 794 2 588 2 993 2 798 2 428 2 590 2 591 2 659 2 926 8 1005 8 250 8 742 4 253 2 1018 2 1016 4 441 2 532 2 448 2 386 2 616 2 537 2 122 2 948 2 619 2 825 8 826 2 127 4 899 2 72 2 131 12 552 6 
591 2 448 2 783 2 1063 2 982 2 616 2 250 2 230 2 138 2 475 2 583 2 283 2 426 4 727 2 1016 4 127 2 72 2 590 2 
629 2 964 6 75 2 345 4 138 4 281 4 405 2 477 2 475 2 283 2 844 2 284 2 486 2 351 2 81 2 355 2 83 4 783 2 1063 4 152 2 982 4 229 2 230 2 1066 2 30 2 986 2 583 2 727 2 426 4 35 2 794 2 588 2 993 2 798 2 590 2 591 2 659 2 926 4 1005 4 250 6 742 4 253 2 1016 4 1018 2 441 2 532 2 448 2 616 2 537 2 122 2 948 2 619 2 825 6 826 2 127 4 899 2 72 2 131 12 552 6 469 2 
470 2 629 2 964 6 75 2 345 4 138 4 281 4 405 2 477 2 475 2 283 2 844 2 284 2 486 2 351 2 81 2 83 4 783 2 1063 4 152 2 982 6 229 2 230 2 1066 2 30 2 986 2 583 2 727 2 426 4 35 2 794 2 588 2 993 2 798 2 590 2 591 2 659 2 926 4 1005 4 250 4 742 4 253 2 1016 4 1018 2 441 2 532 2 448 2 616 2 537 2 122 2 948 2 619 2 825 6 826 2 127 4 899 2 72 2 131 12 552 6 469 2 
629 2 964 6 75 2 345 4 138 4 281 4 405 2 477 2 475 2 283 2 844 2 284 2 486 2 351 2 81 2 83 4 783 2 1063 4 152 2 982 6 229 2 230 2 1066 2 30 2 986 2 583 2 727 2 426 4 35 2 794 2 588 2 993 2 798 2 428 2 590 2 591 2 659 2 926 8 1005 4 250 6 742 4 253 2 1016 4 1018 2 441 2 532 2 448 2 616 2 537 2 122 2 948 2 619 2 825 6 826 2 127 4 899 2 72 2 131 12 552 6 469 2 
470 2 629 2 964 10 75 2 345 4 138 4 281 4 405 2 477 2 475 2 283 2 844 2 284 2 486 2 351 2 81 2 83 4 783 2 1063 4 152 2 982 8 229 2 230 2 1066 2 30 2 986 2 583 2 727 2 426 4 35 2 794 2 588 2 993 2 798 2 428 2 590 2 591 2 659 2 926 8 1005 8 250 6 742 4 253 2 1016 4 1018 2 441 2 532 2 448 2 616 2 537 2 122 2 948 2 619 2 825 8 826 2 127 4 899 2 72 2 131 12 552 6 469 2 
629 2 964 10 75 2 345 4 138 4 281 4 405 2 477 2 475 2 283 2 844 2 284 2 486 2 351 2 81 2 83 4 783 2 1063 4 152 2 982 6 229 2 230 2 1066 2 30 2 986 2 583 2 727 2 426 4 35 2 794 2 588 2 993 2 798 2 428 2 590 2 591 2 659 2 926 8 1005 8 250 6 742 4 253 2 1016 4 1018 2 441 2 532 2 448 2 616 2 537 2 122 2 948 2 619 2 825 6 826 2 127 4 899 2 72 2 131 12 552 6 469 2 
0 2 3 6 831 6 281 4 844 2 283 2 284 2 11 2 16 2 573 2 19 12 291 2 292 6 24 6 26 6 297 2 30 2 300 1 583 2 35 4 588 2 589 1 304 2 590 2 591 2 598 2 44 2 878 2 53 4 324 4 61 4 616 2 892 2 619 2 621 2 894 6 624 1 626 2 899 2 72 2 629 2 74 6 75 2 345 6 910 2 639 1 351 2 916 4 81 4 83 6 356 2 87 2 91 2 654 2 96 2 922 2 364 2 659 2 926 2 669 2 672 2 941 6 384 2 122 2 948 2 951 2 952 2 395 2 126 2 127 4 131 46 694 2 695 2 697 2 401 1 964 2 402 2 138 4 405 4 970 2 407 10 409 4 713 1 976 6 149 2 419 2 152 2 982 8 986 2 727 2 426 4 993 2 166 2 169 2 170 2 1006 2 1009 6 742 8 744 2 1016 4 1018 2 178 1 441 2 1020 8 181 6 184 1 754 1 448 2 1024 2 452 2 188 6 458 6 1032 6 464 8 765 7 470 4 203 2 769 2 774 2 477 2 475 2 778 2 217 2 781 6 486 2 1055 7 783 2 1063 4 785 6 229 2 1066 2 230 2 231 6 1067 4 794 4 798 2 503 2 1071 2 1072 2 238 2 245 2 247 2 249 2 250 4 514 2 253 2 1084 6 529 2 532 2 535 2 537 4 822 4 825 12 1088 6 544 2 266 2 826 2 269 2 552 24 
0 2 831 6 3 6 697 2 964 2 402 2 281 4 138 4 405 4 567 2 970 4 283 2 407 10 844 2 284 2 409 4 11 2 976 6 16 2 573 4 149 2 419 2 19 12 291 2 152 2 292 6 982 8 24 6 26 6 297 2 30 2 986 2 583 2 426 4 727 2 35 4 588 2 993 2 304 2 428 4 166 2 590 2 591 2 169 2 170 2 44 2 598 2 1006 2 1009 6 742 8 744 2 878 2 1018 2 1016 4 53 4 441 2 324 4 1020 8 181 6 61 4 448 2 1024 2 616 2 892 2 452 2 188 6 619 2 458 6 894 6 621 2 1032 6 464 8 626 2 899 2 72 2 203 2 629 2 769 2 74 6 75 2 345 6 774 2 475 2 477 2 778 2 217 2 910 2 486 2 781 6 351 2 916 8 81 4 83 6 783 2 785 6 1063 4 356 2 229 2 87 2 230 2 1066 2 231 6 91 2 1067 4 654 2 794 4 96 4 922 2 1071 2 503 2 798 2 1072 2 364 2 238 2 659 2 245 2 247 2 926 6 249 2 250 8 514 2 373 2 669 2 253 2 672 2 1084 6 529 2 531 2 941 6 532 2 384 2 535 2 537 4 122 2 822 4 948 2 951 2 952 2 825 12 395 2 1088 6 126 2 266 2 544 2 826 2 269 2 127 4 131 48 695 2 552 26 694 2 
0 2 831 6 3 6 697 2 964 6 402 2 281 4 138 4 405 4 567 2 970 4 283 2 407 10 844 2 284 2 409 4 11 2 976 6 16 2 573 4 149 2 419 2 19 12 291 2 152 2 292 6 24 6 982 8 26 6 297 2 30 2 986 2 583 2 426 4 727 2 35 4 588 2 993 2 304 2 428 4 166 2 590 2 591 2 169 2 170 2 44 2 598 2 1005 4 1006 2 1009 6 742 8 744 2 878 2 1018 2 1016 4 53 4 441 2 324 4 1020 8 181 6 61 4 448 2 1024 2 616 2 892 2 452 2 188 6 619 2 458 6 894 6 621 2 1032 6 464 8 626 2 899 2 72 2 203 2 629 2 769 2 74 6 75 2 345 6 774 2 475 2 477 2 778 2 217 2 910 2 486 2 781 6 351 2 916 8 81 4 83 6 783 2 785 6 1063 4 356 2 229 2 87 2 230 2 1066 2 231 6 91 2 1067 4 654 2 794 4 96 4 922 2 1071 2 503 2 798 2 1072 2 364 2 238 2 659 2 245 2 247 2 926 6 249 2 250 8 514 2 373 2 669 2 253 2 672 2 1084 6 529 2 531 2 941 6 532 2 384 2 535 2 537 4 122 2 822 4 948 2 951 2 952 2 825 12 395 2 1088 6 126 2 266 2 544 2 826 2 269 2 127 4 131 48 695 2 552 26 694 2 
0 2 553 6 3 6 831 12 281 4 841 2 567 2 844 2 283 2 284 2 11 2 16 2 573 4 19 10 291 2 292 12 24 8 26 6 297 2 30 2 583 2 35 4 588 2 304 2 590 2 591 2 313 6 598 2 43 2 44 2 878 2 53 6 324 4 61 4 616 2 892 2 619 2 894 6 626 4 899 2 72 2 628 2 629 2 74 12 75 2 345 6 910 2 351 2 916 10 81 4 355 2 83 6 356 2 87 2 91 2 654 4 96 4 922 2 364 2 365 2 659 2 369 6 926 6 373 2 669 4 672 2 941 8 384 2 118 6 122 2 948 2 951 2 952 2 395 2 126 2 127 4 131 52 694 2 695 2 697 2 964 6 402 2 138 4 405 4 968 6 970 4 407 8 409 4 976 6 149 2 419 2 150 6 152 2 982 10 986 2 727 2 426 4 993 2 428 4 998 2 166 2 169 2 170 2 738 6 1005 4 1006 2 1009 12 176 2 742 8 744 2 1016 4 1018 2 441 2 1020 12 181 6 445 6 448 2 1024 4 452 2 188 6 458 6 1031 2 1032 12 464 8 470 2 203 2 769 2 774 2 477 2 475 2 778 2 217 2 779 2 486 2 781 12 783 2 1063 4 785 6 229 2 1066 2 230 2 231 6 1067 4 794 4 503 2 798 2 1071 2 1072 4 238 2 245 2 247 2 249 2 250 10 514 2 253 2 524 6 1084 6 529 2 531 2 532 2 535 2 537 4 822 4 825 16 1088 6 544 2 266 2 826 2 269 2 552 24 
659 2 591 2 629 2 964 4 75 2 926 6 1005 4 250 6 281 2 138 4 475 2 477 2 742 2 1018 2 1016 2 532 2 83 2 783 2 152 2 1063 4 982 6 537 2 1066 2 122 2 583 2 825 4 426 2 727 2 588 2 993 2 798 2 131 4 72 2 428 2 590 2 
964 2 966 2 281 2 138 4 844 2 407 2 409 4 13 2 19 4 291 2 152 2 982 6 24 6 30 2 986 2 583 2 727 2 426 2 588 2 993 2 428 2 166 2 590 2 591 2 169 2 170 2 598 2 742 2 51 2 1016 2 1018 2 441 2 53 4 1020 8 885 2 61 2 452 2 454 2 188 6 619 2 621 2 626 3 899 2 72 2 203 2 629 2 769 2 75 2 345 6 477 2 475 2 910 2 351 2 81 4 83 2 1061 2 783 2 1063 4 229 2 1066 2 91 2 233 2 794 4 654 3 503 2 798 2 1072 3 364 2 238 2 659 2 926 6 250 6 525 3 672 2 529 2 532 2 941 6 535 2 537 2 122 2 822 4 825 4 126 2 691 2 544 2 131 28 552 24 694 2 397 2 
152 2 122 2 600 2 
152 2 122 2 600 2 
697 2 964 6 403 2 138 4 281 2 405 2 970 4 407 2 284 2 409 4 710 2 847 2 15 2 573 4 19 4 291 2 152 4 24 2 982 12 722 2 30 2 986 2 426 2 727 2 35 4 588 2 304 2 428 4 166 2 591 2 169 2 170 2 598 2 1005 4 600 2 438 2 604 2 742 4 744 2 878 2 1016 2 441 2 324 2 1020 2 61 4 616 2 452 2 188 6 619 2 335 2 896 2 899 2 1038 2 201 2 470 4 203 2 769 2 771 2 345 6 475 4 910 2 351 2 642 2 916 4 81 4 83 4 355 4 785 2 1063 4 229 2 230 2 91 2 1067 2 502 2 794 4 96 4 655 2 503 2 1072 2 364 2 238 2 242 4 926 6 250 12 253 2 672 2 377 2 527 2 116 2 941 2 532 2 535 2 537 4 822 4 122 4 390 2 825 16 126 2 544 2 826 2 127 4 131 24 552 16 694 2 
19 2 887 2 785 2 771 2 804 2 356 2 1087 2 407 2 283 2 394 2 922 2 655 2 351 2 324 2 642 2 131 4 552 2 
134 2 697 2 964 6 281 2 403 2 138 4 405 4 970 4 284 2 409 4 710 4 847 2 15 2 573 4 19 2 291 2 152 4 24 2 982 12 722 2 30 2 986 2 426 2 727 2 35 4 588 2 304 2 428 4 166 2 591 2 169 2 170 2 598 2 1005 4 740 2 600 2 742 4 744 2 878 2 1016 2 441 2 1020 2 61 4 451 2 616 2 452 2 188 6 619 2 1029 2 335 2 896 2 899 2 1038 2 470 4 203 2 769 2 771 2 345 6 1045 2 475 4 910 2 486 2 351 2 642 2 916 4 81 4 83 4 355 4 785 2 1063 4 229 2 230 2 91 2 1067 2 794 4 96 4 655 2 503 2 1072 4 364 2 238 2 242 4 926 6 250 12 253 2 672 2 377 2 527 2 116 2 941 2 532 2 535 2 537 4 822 4 122 4 390 2 825 16 126 2 544 2 826 2 127 4 131 24 552 16 694 2 
697 2 964 6 403 2 138 4 281 2 405 4 282 2 970 4 407 2 284 2 409 4 710 2 847 2 15 2 573 4 19 4 291 2 152 4 24 2 982 12 722 2 30 2 986 2 426 2 727 2 35 4 588 2 304 2 428 4 166 2 591 2 733 2 169 2 170 2 598 2 1005 4 600 2 742 4 744 2 878 2 1016 2 441 2 324 2 1020 2 61 4 616 2 452 2 188 6 619 2 335 2 896 2 899 2 1038 2 470 4 203 2 769 2 771 2 345 6 475 4 480 2 910 2 486 2 351 2 642 2 916 4 81 4 83 4 355 4 785 2 1063 4 229 2 230 2 91 2 1067 2 794 4 96 4 655 2 503 2 1072 2 364 2 238 2 242 4 926 6 250 12 253 2 672 2 377 2 527 2 116 2 941 2 532 2 535 2 537 4 822 4 122 4 390 2 825 16 126 2 544 2 546 2 826 2 127 4 131 24 957 2 552 16 694 2 
0 2 555 4 833 4 556 2 277 2 559 2 6 2 7 6 8 4 286 2 12 2 848 2 849 6 288 2 851 2 19 2 575 2 18 3 291 2 24 12 30 2 581 2 303 2 304 4 306 4 38 2 45 18 48 2 880 1 53 10 885 2 329 2 61 2 63 2 62 2 612 2 891 2 892 2 619 2 69 2 897 4 626 11 338 2 70 2 899 2 341 8 902 2 630 2 343 2 345 6 633 2 634 2 906 2 910 2 637 2 77 2 912 2 351 2 916 24 81 4 647 2 648 2 90 2 919 24 91 2 358 2 652 2 94 2 654 11 98 2 364 2 371 6 109 2 108 2 928 2 372 2 669 10 678 6 941 12 942 2 943 2 120 4 685 4 123 2 950 2 691 2 126 2 692 10 131 28 694 2 397 2 698 6 699 2 961 2 701 4 971 2 409 2 707 2 411 2 974 4 414 2 417 2 981 4 421 2 984 2 986 2 989 2 166 2 169 2 170 2 432 6 434 2 172 2 1008 2 1010 6 1013 2 1014 2 441 2 442 6 1020 18 446 2 449 4 1024 18 452 2 188 4 758 8 759 2 460 2 1030 2 467 4 202 18 203 2 205 2 773 2 1043 2 774 2 476 2 776 2 213 2 217 2 1064 4 229 2 232 2 498 6 790 2 233 2 794 4 504 2 1072 11 237 2 1073 4 238 2 245 2 802 6 803 2 511 2 248 2 514 2 516 2 515 2 521 2 251 4 525 2 809 2 529 2 1085 10 259 10 822 2 266 2 544 2 267 2 1091 2 548 4 550 2 551 2 552 22 829 4 
205 2 773 2 48 2 53 2 1020 2 529 2 18 2 941 2 647 2 942 2 24 2 1024 6 421 2 90 2 460 2 1030 4 654 2 626 2 338 2 1072 2 237 2 128 2 131 2 552 2 
205 2 773 2 48 2 53 2 1020 2 529 2 18 2 941 2 647 2 942 2 24 2 1024 6 421 2 90 2 460 2 1030 4 654 2 626 2 338 2 1072 2 237 2 128 2 131 2 552 2 
205 2 773 2 48 2 53 2 1020 2 529 2 18 2 941 2 647 2 942 2 24 2 1024 6 421 2 90 2 460 2 1030 4 654 2 626 2 338 2 1072 2 237 2 128 2 131 2 552 2 
554 2 6 2 564 2 1049 2 670 2 440 4 12 2 77 2 177 2 413 3 849 4 1020 2 381 2 645 4 529 2 328 2 354 3 611 4 59 2 981 2 449 2 385 2 534 6 723 2 421 2 120 2 950 2 758 6 654 3 796 4 162 4 164 2 1074 4 1072 3 549 2 1035 2 307 2 130 3 131 10 552 4 
1039 2 554 2 6 2 564 2 251 2 1049 2 670 2 440 4 12 2 77 2 177 2 413 2 849 4 1020 2 381 2 645 4 529 2 328 2 354 2 611 4 59 2 981 2 449 2 385 2 534 6 723 2 421 2 120 2 950 2 758 4 654 2 796 4 162 4 164 2 1074 4 1072 2 549 2 1035 2 307 2 306 2 130 2 131 10 552 4 
1039 2 554 2 6 2 564 2 251 2 1049 2 670 2 440 4 12 2 77 2 177 2 413 2 849 4 1020 2 381 2 645 4 529 2 328 2 354 2 611 4 59 2 981 2 449 2 385 2 534 6 723 2 421 2 120 2 950 2 758 4 654 2 796 4 162 4 164 2 1074 4 1072 2 549 2 1035 2 307 2 306 2 130 2 131 10 552 4 
1039 2 554 2 6 2 564 2 251 2 1049 2 670 2 440 4 12 2 77 2 177 2 413 2 849 4 1020 2 381 2 645 4 529 2 328 2 354 2 611 4 59 2 981 2 449 2 385 2 534 6 723 2 421 2 120 2 950 2 758 4 654 2 796 4 162 4 164 2 1074 4 1072 2 549 2 1035 2 307 2 306 2 130 2 131 10 552 4 
1039 4 554 2 6 2 564 2 251 4 1049 2 670 2 440 4 12 2 77 2 177 2 413 2 849 4 1020 2 381 2 645 4 529 2 328 2 354 2 611 4 59 2 981 2 449 2 385 2 534 6 723 2 421 2 120 2 950 2 758 4 654 2 796 4 162 4 164 2 1074 4 1072 2 549 2 1035 2 307 2 306 4 130 2 131 10 552 4 
988 2 262 2 343 2 86 2 580 2 146 2 
1085 2 425 2 1070 2 86 2 800 2 729 2 274 2 
366 1 831 2 206 2 370 1 905 2 110 1 706 1 972 2 441 2 221 2 326 2 182 2 914 1 752 2 888 2 22 2 649 2 357 2 88 2 725 2 797 2 728 2 1033 2 131 10 308 2 552 8 
1039 2 803 2 1044 2 634 2 6 6 519 2 251 2 522 2 8 2 10 2 440 4 77 6 12 6 714 4 442 4 849 12 59 2 489 2 981 6 856 2 449 6 120 6 950 6 758 16 190 2 393 2 897 2 131 6 306 4 552 6 
658 4 611 2 594 2 1040 2 963 2 869 2 174 2 193 1 796 2 144 2 937 2 1074 2 674 2 179 7 131 1 552 1 996 2 275 2 
658 4 611 2 594 2 1040 4 963 2 869 2 174 2 796 2 674 2 144 4 937 2 1074 2 179 6 996 2 275 4 
658 4 611 2 594 2 1040 8 963 2 869 2 174 2 193 1 796 2 674 8 144 8 937 2 1074 2 179 10 131 1 552 1 996 6 275 8 
658 2 611 2 594 2 1040 2 963 2 869 2 174 2 796 2 144 2 937 2 1074 2 179 2 275 2 
4 1 832 4 834 4 837 4 400 4 406 8 140 8 843 4 409 30 709 4 143 22 716 6 857 8 25 2 293 3 721 4 990 4 584 4 424 2 160 1 587 8 163 4 730 4 865 2 169 8 311 4 41 4 736 4 1002 2 443 2 57 8 180 4 884 1 58 2 183 4 447 4 186 4 452 4 188 60 1027 2 762 4 462 4 195 4 463 2 196 4 203 8 1042 2 473 4 903 2 907 4 479 2 352 2 79 12 913 8 782 4 1062 4 89 9 93 2 360 4 235 1 1069 4 361 4 236 4 97 4 1077 8 244 2 103 2 1081 2 930 2 667 4 520 4 523 2 378 4 938 2 380 8 815 28 680 4 383 2 819 4 536 4 538 4 121 4 822 26 260 2 686 4 954 4 1089 4 544 12 956 4 131 64 552 56 694 12 
471 2 203 2 832 2 834 2 837 38 1042 2 562 2 278 2 907 2 1046 2 140 4 409 20 709 2 846 2 78 2 220 2 352 2 913 4 716 6 147 2 646 4 491 2 577 2 784 2 23 2 983 6 25 2 294 2 494 2 89 2 497 2 31 2 299 4 584 2 587 2 1069 2 234 2 160 2 361 2 95 2 236 2 362 2 994 2 865 2 1077 2 507 2 867 2 801 2 244 2 734 2 169 2 1001 4 107 2 433 2 874 2 601 4 667 2 877 2 671 2 810 2 812 2 443 2 938 2 380 4 883 2 886 2 610 2 58 2 815 6 940 2 816 2 757 2 333 2 64 2 119 2 452 2 1026 2 946 2 822 20 686 2 188 42 260 4 620 2 124 2 466 2 956 2 131 46 766 2 552 44 1092 2 
400 4 837 14 404 16 406 12 840 4 140 6 843 4 409 32 142 2 711 4 143 20 147 2 857 4 25 2 721 4 293 6 990 4 424 2 584 6 587 6 163 4 730 4 865 2 734 10 169 6 41 4 736 4 1002 2 437 4 876 4 439 2 57 12 180 4 58 2 447 2 186 4 613 16 452 2 188 68 618 4 462 4 762 8 195 4 196 4 766 10 203 6 1042 2 903 2 1046 2 479 2 349 4 352 2 79 12 913 6 782 4 1062 4 227 4 89 10 650 2 360 4 1069 4 236 4 97 4 1076 4 102 2 1077 10 244 2 103 2 925 4 665 16 667 4 520 4 671 10 812 2 380 6 938 2 815 16 680 4 819 4 536 4 682 4 538 4 822 28 260 2 686 4 263 2 954 4 1089 4 544 14 131 70 552 62 694 14 
203 2 4 2 832 4 834 4 837 14 1042 2 702 2 903 2 1046 2 907 4 969 2 140 6 409 14 709 4 846 2 143 10 352 2 913 6 716 6 25 2 293 6 89 2 93 2 584 2 424 4 1069 2 160 2 587 2 361 4 236 2 865 2 1077 2 244 2 169 2 1002 2 1081 10 930 2 667 2 523 2 321 2 938 2 380 6 751 2 883 2 886 2 884 2 58 2 815 8 383 2 452 2 822 14 188 38 686 2 260 2 1027 4 544 10 463 2 956 4 131 28 694 10 552 26 
533 2 

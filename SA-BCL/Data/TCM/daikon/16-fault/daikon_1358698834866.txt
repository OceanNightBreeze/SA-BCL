#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 460 (237,290) 616 (45,96,178,600,712,781,876) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 573 573 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 460 (237,290) 616 (45,96,178,600,712,781,876) 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (234,376) (234,376) 531 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException 556 902 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 436 841 950 620 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 79 904 911 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 79 904 911 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:hashCode()I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoAux:hashCode()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:gte(II)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 4130 | = null
daikon.inv.ValueSet:ValueSet(I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ProglangType:isPointerFileRep()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.MathMDE:modulus([I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariants:Invariants()V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_vars()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.Quant:subsetOf([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2124 | return null
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern:numIntArrays()I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ModBitTracker:split(I)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | STATEMENT | 10508 | stmt -> ;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:eltsEqual([II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:pow(II)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptSlice1:arity()I
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfo:isIOAArray()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Debug:logDetail()Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltsLT([II)Z
daikon.Quantify.Constant:Constant(I)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token; | CONDITION | 213180 | if (x) -> if (!x)
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eltwiseLTE([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptSlice2:arity()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107829 | = null
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:noDups([I)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
jtb.JavaCharStream:readChar()C
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:relate_var()V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.Invariant:justified()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2322 | return null
daikon.test.FormatTestCase:passes()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:eq(FF)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 21115 | return null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:subsetOf([D[D)Z
daikon.ProglangType:isPseudoArray()Z
daikon.ValueTuple:isMissing(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:sameLength([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Node:Node()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:isReverse([I[I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ModBitTracker:num_sets()I
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 14085 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
495 2 376 2 662 2 803 2 234 2 224 2 247 4 961 2 730 2 
996 2 221 2 676 2 855 6 946 2 487 2 890 6 623 2 268 2 510 6 905 2 
553 2 459 2 421 2 471 4 373 2 838 2 915 6 637 6 376 2 197 6 234 2 681 4 596 6 
747 2 290 2 460 2 616 2 55 2 178 2 
573 4 
962 2 
340 4 941 2 279 2 73 2 816 2 754 2 518 2 210 2 348 2 523 2 642 2 524 2 12 2 578 2 832 2 645 4 834 4 897 2 97 2 652 2 234 4 969 2 903 2 481 2 534 2 852 2 177 2 659 2 542 2 376 4 325 2 726 2 669 2 44 2 495 2 871 2 387 4 559 2 1000 2 881 2 60 2 276 2 337 2 204 2 
600 2 876 2 
274 2 759 2 897 2 
16 2 536 22 170 2 190 2 519 2 771 2 659 2 434 2 25 10 543 2 377 2 426 2 512 2 350 2 
167 2 971 2 747 2 460 2 109 2 55 2 178 2 214 2 290 2 776 2 144 2 217 2 616 2 
749 2 237 4 747 8 781 4 460 12 517 2 819 4 315 6 388 4 539 4 96 4 290 8 616 8 667 6 848 2 260 5 683 14 
970 4 166 2 29 62 30 2 107 2 972 2 633 4 948 14 572 2 520 4 954 4 36 4 542 2 979 2 141 2 142 4 759 6 613 2 701 4 831 10 85 2 582 10 583 2 468 4 356 2 387 4 897 8 94 2 389 4 967 2 272 2 475 2 901 2 503 4 842 2 478 2 881 4 274 2 198 4 457 2 
780 2 432 2 8 2 670 2 962 2 328 2 474 2 506 2 884 2 136 2 
886 2 137 2 286 2 288 2 145 14 526 2 762 2 414 4 19 2 530 3 647 2 152 6 21 4 774 2 305 2 648 2 531 2 24 2 653 1 311 2 907 3 168 2 783 4 538 2 786 2 788 2 34 2 660 19 320 2 180 2 793 2 544 2 545 2 322 1 663 1 665 2 668 2 555 2 801 4 192 2 671 1 450 3 329 3 451 1 453 3 673 3 195 2 808 1 927 1 57 2 58 2 810 2 65 14 203 2 338 2 70 2 940 6 687 2 815 3 944 2 818 2 208 2 570 3 345 1 825 2 956 2 574 2 575 2 462 2 82 1 87 14 219 1 220 2 354 2 707 2 228 2 92 14 230 2 234 30 102 2 103 1 105 4 240 2 108 2 603 2 242 2 374 2 491 2 978 6 860 1 376 32 612 1 611 28 862 2 865 25 728 1 869 19 730 2 383 2 496 1 498 2 500 2 872 2 128 5 992 1 270 2 999 1 738 2 625 2 275 2 277 2 396 2 134 6 398 2 885 2 400 3 
376 2 605 2 
585 2 376 4 742 2 
381 2 
402 2 484 2 368 2 888 2 688 2 784 2 516 18 282 2 173 18 243 2 407 2 823 2 287 2 6 2 608 2 792 2 253 2 664 2 351 2 702 2 549 2 264 2 586 2 896 2 966 2 266 2 873 2 529 2 766 18 898 2 23 2 477 2 334 2 59 2 200 2 1003 2 458 2 202 2 104 2 938 2 716 2 66 2 67 2 
77 1 386 2 931 2 153 2 
153 2 906 2 
485 2 125 2 536 6 127 2 188 4 908 2 750 2 150 2 211 2 75 2 461 2 916 4 28 2 678 2 480 2 864 2 594 2 298 2 
931 2 248 2 
118 2 897 2 658 2 135 2 
535 2 231 2 118 2 897 2 658 2 135 2 
902 2 556 2 
764 2 832 2 
556 2 37 2 897 2 658 2 
880 2 27 2 
355 2 753 2 
587 2 53 2 
817 2 821 2 
261 2 753 2 817 2 
753 2 817 2 412 2 
817 2 753 2 281 2 
817 2 753 2 81 2 
0 2 599 2 658 2 693 6 546 6 897 2 307 2 163 2 
239 2 631 2 
988 2 231 2 556 2 897 2 658 2 153 2 711 2 
830 2 153 2 711 2 
119 2 153 2 711 2 
239 2 957 2 931 2 
153 2 711 2 
239 2 244 2 
883 2 153 2 
157 2 239 2 931 2 
435 2 931 2 53 2 
817 2 931 2 161 2 
880 2 931 2 690 2 
753 2 931 2 20 2 
239 2 63 2 
405 2 153 2 
646 2 53 2 
817 2 624 2 
880 2 147 2 
71 2 753 2 
239 2 636 2 
753 2 868 2 
880 2 735 2 
415 2 817 2 
563 2 53 2 
157 2 252 2 239 2 931 2 
157 2 252 2 239 2 931 2 856 2 
239 2 931 2 80 2 
239 2 931 2 443 2 
69 2 171 2 392 2 394 2 
58 2 
5 2 758 2 411 2 14 2 760 2 414 4 763 2 152 2 21 4 774 2 531 2 312 2 783 4 788 2 174 2 913 4 793 2 919 2 666 2 668 6 799 2 189 2 192 2 195 2 57 2 930 2 65 6 565 2 338 2 70 2 940 6 687 8 944 2 208 2 209 2 827 2 956 2 829 2 462 2 960 2 581 2 220 2 354 2 584 2 835 4 705 2 707 2 228 2 472 2 234 26 103 2 105 4 108 2 374 2 978 4 607 4 114 2 376 26 611 6 865 4 728 2 730 2 262 2 498 2 872 2 734 2 737 2 998 2 738 2 275 2 627 2 277 2 396 2 134 2 
5 2 286 2 411 2 291 2 14 2 760 2 296 2 414 4 763 2 152 2 21 4 774 2 531 2 312 2 783 4 788 2 174 2 913 4 793 2 919 2 666 2 668 6 189 2 192 2 195 2 57 2 930 2 65 6 565 2 338 2 70 2 940 6 687 8 944 2 208 2 209 2 692 2 827 2 956 2 829 2 462 2 960 2 581 2 220 2 354 2 963 2 584 2 835 4 707 2 228 2 472 2 234 26 102 2 103 2 105 4 108 2 374 2 978 6 607 4 114 2 376 26 611 6 865 4 728 2 730 2 262 2 498 2 872 2 734 2 737 2 998 2 738 2 275 2 627 2 277 2 396 2 134 2 
39 2 
88 2 52 2 
939 2 940 4 942 2 632 2 946 4 947 2 890 6 522 2 139 2 78 2 462 2 958 2 295 2 353 2 89 4 704 2 354 2 221 4 964 2 707 2 358 2 899 4 228 2 93 4 304 2 100 4 233 2 365 2 234 6 105 2 718 2 108 2 785 2 783 2 973 10 855 6 316 2 112 2 251 4 181 8 438 2 376 12 323 2 615 2 493 2 552 2 621 8 499 2 192 2 558 2 731 2 623 2 54 2 562 2 676 2 738 2 456 2 510 6 934 4 937 2 
939 2 940 4 942 2 632 2 946 4 947 2 890 8 139 2 78 2 462 2 958 2 295 2 353 2 89 4 704 2 354 2 467 2 221 4 964 2 707 2 357 4 358 2 899 4 228 2 93 4 304 2 100 4 233 2 234 6 365 2 593 2 105 2 718 2 108 2 785 2 783 2 973 10 855 8 316 2 112 2 251 4 181 8 438 2 376 12 323 2 615 2 493 2 552 2 621 8 499 2 192 2 558 2 623 2 54 2 996 2 562 2 676 2 738 2 456 2 510 6 934 4 937 2 
552 2 221 2 785 2 558 2 946 2 855 2 899 2 316 2 112 2 304 2 78 2 100 4 958 2 365 2 615 2 510 2 493 2 934 4 
939 2 940 4 942 2 632 2 946 4 947 2 890 6 522 2 139 2 78 2 462 2 958 2 295 2 353 2 89 4 704 2 354 2 221 4 964 2 707 2 358 2 899 4 228 2 93 4 304 2 100 4 233 2 365 2 234 6 105 2 718 2 108 2 785 2 783 2 973 6 855 6 316 2 112 2 251 4 181 4 438 2 376 12 323 2 615 2 493 2 552 2 621 4 499 2 192 2 558 2 731 2 623 2 54 2 996 2 562 2 738 2 456 2 510 4 934 4 937 2 
939 2 940 4 942 2 632 2 946 4 947 2 890 6 522 2 139 2 78 2 462 2 958 2 295 2 353 2 89 4 704 2 354 2 221 4 964 2 707 2 358 2 899 4 228 2 93 4 304 2 100 4 233 2 365 2 234 6 105 2 718 2 108 2 785 2 783 2 973 6 855 4 487 2 316 2 112 2 251 4 181 4 438 2 376 12 323 2 615 2 493 2 552 2 621 4 499 2 192 2 558 2 731 2 623 2 54 2 562 2 738 2 456 2 510 6 934 4 937 2 
939 2 940 4 942 2 632 2 946 4 947 2 890 6 522 2 139 2 78 2 462 2 958 2 295 2 353 2 89 4 704 2 354 2 221 4 964 2 707 2 358 2 899 4 228 2 93 4 304 2 100 4 233 2 365 2 234 6 105 2 718 2 108 2 785 2 783 2 973 6 855 6 316 2 112 2 251 4 181 4 438 2 376 12 323 2 615 2 493 2 552 2 621 8 499 2 192 2 558 2 731 2 623 2 54 2 562 2 676 2 738 2 456 2 510 6 934 4 937 2 
939 2 940 4 942 2 632 2 946 4 947 2 890 8 522 2 139 2 78 2 462 2 958 2 295 2 353 2 89 4 704 2 354 2 221 4 964 2 707 2 358 2 899 4 228 2 93 4 304 2 100 4 233 2 365 2 234 6 105 2 718 2 108 2 785 2 783 2 973 10 855 6 487 2 316 2 112 2 251 4 181 8 438 2 376 12 323 2 615 2 493 2 552 2 621 8 499 2 192 2 558 2 731 2 623 2 54 2 562 2 676 2 738 2 456 2 510 8 934 4 937 2 
939 2 940 4 942 2 632 2 946 4 947 2 890 6 522 2 139 2 78 2 462 2 958 2 295 2 353 2 89 4 704 2 354 2 221 4 964 2 707 2 358 2 899 4 228 2 93 4 304 2 100 4 233 2 365 2 234 6 105 2 718 2 108 2 785 2 783 2 973 10 855 6 316 2 112 2 251 4 181 8 438 2 376 12 323 2 615 2 493 2 552 2 621 8 499 2 192 2 558 2 731 2 623 2 54 2 562 2 676 2 738 2 456 2 510 6 934 4 937 2 
2 10 403 1 632 2 890 12 286 2 139 2 140 2 411 4 295 2 414 4 17 2 528 2 767 8 899 4 152 2 22 2 21 4 304 2 774 2 531 2 424 1 158 2 312 2 785 2 783 4 316 2 788 2 913 4 33 2 790 2 793 2 795 4 438 2 183 1 323 2 668 6 552 2 187 2 554 2 192 2 558 2 50 6 54 2 807 2 195 2 562 2 57 2 679 2 933 2 456 2 62 1 813 2 934 4 937 2 65 6 338 2 939 2 940 6 341 1 687 2 942 2 944 2 208 2 946 4 947 2 569 2 212 7 74 6 822 6 346 2 956 2 829 2 78 2 462 2 958 2 698 2 703 2 353 2 89 4 704 4 466 2 833 2 221 4 354 2 585 6 964 2 707 2 836 2 358 2 710 2 472 2 228 2 360 6 93 6 232 6 233 2 100 4 968 2 234 24 365 2 595 6 102 2 367 6 105 4 718 2 369 6 851 2 108 2 973 2 855 4 487 4 976 2 721 6 605 6 112 2 250 6 374 2 251 8 113 2 977 6 492 6 978 6 254 2 981 4 376 46 255 1 611 8 120 2 615 2 865 2 493 2 381 6 730 2 262 2 621 2 498 2 499 4 129 1 872 2 731 2 874 2 623 4 877 2 501 2 878 6 995 7 736 1 998 2 504 2 738 2 275 2 510 8 743 1 134 2 396 12 
2 10 632 2 890 12 286 2 139 2 140 2 411 4 295 2 414 4 17 2 528 2 767 8 899 4 152 2 22 2 21 4 304 2 774 2 531 2 158 2 312 2 785 2 783 4 316 2 788 2 913 4 33 2 790 2 321 2 793 2 795 4 438 2 323 2 668 6 550 2 552 2 187 2 554 2 192 2 558 2 50 6 54 2 807 2 195 2 562 2 57 2 676 4 679 2 933 2 456 2 813 2 934 4 937 2 65 6 338 2 70 2 939 2 940 6 687 6 942 2 944 2 208 2 946 4 947 2 569 2 74 6 822 6 346 2 956 2 829 2 78 2 462 2 958 2 698 2 703 2 353 2 220 2 89 4 704 4 466 2 833 2 221 4 354 2 585 6 835 2 964 2 707 2 836 2 358 2 710 2 472 2 228 2 360 6 93 6 232 6 233 2 100 4 968 2 365 2 234 26 595 6 102 2 367 6 105 4 718 2 369 6 851 2 108 2 973 2 855 8 976 2 721 6 605 6 112 2 250 6 374 2 251 8 113 2 977 6 492 6 978 6 254 2 981 4 376 48 611 8 120 2 615 2 865 2 493 2 381 6 730 2 262 2 621 6 498 2 499 4 872 2 731 2 874 2 623 4 877 2 501 2 878 6 998 2 504 2 738 2 275 2 510 8 134 2 396 12 277 2 
2 10 632 2 890 12 286 2 139 2 140 2 411 4 295 2 414 4 17 2 528 2 767 8 899 4 152 2 22 2 21 4 304 2 774 2 531 2 158 2 312 2 785 2 783 4 316 2 788 2 913 4 33 2 790 2 321 2 793 2 181 4 795 4 438 2 323 2 668 6 550 2 552 2 187 2 554 2 192 2 558 2 50 6 54 2 807 2 195 2 562 2 57 2 676 4 679 2 933 2 456 2 813 2 934 4 65 6 937 2 338 2 70 2 939 2 940 6 687 6 942 2 944 2 208 2 946 4 947 2 569 2 74 6 822 6 346 2 956 2 829 2 78 2 462 2 958 2 698 2 703 2 353 2 220 2 89 4 704 4 466 2 833 2 221 4 354 2 585 6 835 2 964 2 707 2 836 2 358 2 710 2 472 2 228 2 360 6 93 6 232 6 233 2 100 4 968 2 365 2 234 26 595 6 102 2 367 6 105 4 718 2 369 6 851 2 108 2 973 6 855 8 976 2 721 6 605 6 112 2 250 6 374 2 251 8 113 2 977 6 492 6 978 6 254 2 981 4 376 48 611 8 120 2 615 2 865 2 493 2 381 6 730 2 262 2 621 6 498 2 499 4 872 2 731 2 874 2 623 4 877 2 501 2 878 6 998 2 504 2 738 2 275 2 510 8 134 2 396 12 277 2 
2 8 284 2 286 2 525 2 295 2 17 2 528 2 767 8 21 4 22 2 774 2 304 2 531 2 775 2 312 4 783 4 785 2 788 2 316 2 33 2 790 2 321 2 793 2 795 4 323 2 326 6 550 2 552 2 554 2 557 2 558 2 50 12 54 2 807 2 562 2 57 2 812 2 813 2 65 8 338 2 339 6 70 2 342 6 569 2 822 6 74 6 346 2 829 2 78 2 353 2 89 4 354 2 833 2 585 12 835 2 358 2 836 2 360 6 93 6 100 4 365 2 102 2 595 6 367 6 105 4 369 6 851 2 108 2 855 8 112 2 605 12 374 2 113 2 116 2 376 52 611 12 380 2 615 2 865 4 381 12 621 6 872 2 623 4 874 2 877 2 878 6 393 6 396 10 134 4 404 6 632 2 890 12 638 6 139 2 140 2 411 4 414 4 899 4 152 4 158 2 913 6 181 4 438 2 668 8 187 2 192 2 195 2 676 4 679 2 933 2 456 2 934 4 935 6 937 2 940 6 939 2 942 2 687 8 944 2 208 2 946 4 947 2 956 2 462 2 958 2 698 2 218 2 703 2 220 2 466 2 704 4 221 4 707 2 964 2 222 6 710 2 228 2 472 2 232 12 233 2 234 24 968 2 718 2 973 6 721 6 976 2 250 6 251 8 977 6 978 6 492 12 981 4 254 2 493 2 984 6 730 2 262 2 498 2 499 4 731 2 501 2 998 4 738 2 504 2 275 2 510 8 277 2 
939 2 942 2 973 4 946 4 855 6 890 4 947 2 112 2 251 2 139 2 181 4 78 2 376 4 438 2 958 2 323 2 615 2 493 2 353 2 89 2 621 6 221 4 964 2 558 2 731 2 623 2 93 2 54 2 676 2 233 2 100 2 365 2 510 6 934 2 937 2 
2 2 890 4 286 2 139 2 411 2 413 2 414 4 149 2 152 3 21 4 774 2 531 2 783 4 788 2 913 4 320 2 793 2 438 2 323 2 668 6 555 2 192 2 558 2 54 2 195 2 676 2 57 2 58 2 934 2 65 6 937 2 338 2 939 2 940 6 942 2 944 2 208 2 567 2 946 4 947 2 956 2 829 2 78 2 462 2 958 2 353 2 89 2 221 4 354 2 707 2 964 2 358 2 228 2 93 2 233 2 100 2 234 24 365 2 102 2 105 4 850 2 238 2 108 2 973 2 855 6 112 2 374 2 251 2 978 6 376 28 611 8 615 2 120 2 865 3 493 2 730 2 262 2 621 6 498 2 872 2 731 2 623 2 270 2 738 2 740 3 275 2 510 6 396 4 134 3 
942 2 31 2 353 2 
942 2 31 2 353 2 
514 2 2 2 890 16 286 2 140 2 411 6 641 2 293 2 14 4 894 2 414 4 420 2 899 4 21 4 774 2 777 2 430 2 31 2 785 2 783 4 316 2 788 2 790 2 793 2 181 4 795 2 442 2 668 2 797 2 192 2 558 4 54 2 195 2 675 2 562 2 57 2 335 2 676 4 932 2 456 2 934 2 65 2 338 2 70 4 940 6 686 2 687 4 942 4 944 2 208 2 946 4 956 2 829 2 462 2 958 2 353 6 220 4 89 2 704 4 354 2 221 4 707 2 472 4 228 2 93 4 362 2 845 4 100 2 233 2 234 16 102 2 105 4 718 2 108 2 973 6 855 12 487 4 246 4 374 2 251 4 978 6 254 2 981 2 376 24 611 2 615 2 865 2 123 2 730 2 384 2 262 2 621 6 498 2 499 2 872 2 130 2 623 4 878 2 996 4 738 2 275 2 510 12 277 4 396 4 
401 2 2 2 430 2 554 2 192 2 769 2 52 2 878 2 304 2 113 2 641 2 795 2 376 4 234 2 396 2 744 2 797 2 
514 2 632 2 890 16 286 2 140 2 411 6 641 2 293 4 14 4 414 4 420 2 899 4 21 4 774 2 777 2 310 2 164 2 430 2 31 2 785 2 783 4 316 2 788 2 790 2 793 2 181 4 668 2 797 2 192 2 558 4 54 2 195 2 675 2 562 2 57 2 335 2 676 4 809 2 932 2 456 2 934 2 65 2 338 2 70 4 940 6 686 2 687 4 942 4 944 2 208 2 946 4 956 2 829 2 462 2 958 2 464 2 353 6 220 4 89 2 704 4 354 2 221 4 707 2 472 4 228 2 93 4 362 2 845 4 100 2 233 2 234 16 102 2 598 2 105 4 718 2 108 2 973 6 855 12 487 4 246 4 374 2 251 4 978 6 254 2 981 2 376 24 611 2 615 2 865 4 123 2 730 2 262 2 621 6 498 2 499 4 872 2 623 4 878 2 996 4 738 2 275 2 510 12 277 4 396 2 
514 2 2 2 632 2 890 16 286 2 140 2 411 6 641 2 293 2 14 4 414 4 420 2 899 4 21 4 774 2 777 2 430 2 31 2 785 2 783 4 316 2 788 2 790 2 793 2 181 4 795 2 668 2 797 2 192 2 558 4 54 2 195 2 675 2 562 2 57 2 335 2 676 4 932 2 456 2 934 2 65 2 338 2 70 4 940 6 686 2 687 4 942 4 944 2 208 2 946 4 949 2 956 2 829 2 462 2 958 2 696 2 352 2 353 6 220 4 89 2 704 4 354 2 221 4 707 2 472 4 228 2 93 4 362 2 845 4 100 2 233 2 234 16 102 2 105 4 718 2 108 2 973 6 855 12 487 4 246 4 374 2 251 4 978 6 982 2 254 2 981 2 376 24 611 2 615 2 865 2 123 2 494 2 730 2 262 2 621 6 498 2 499 4 872 2 623 4 878 2 996 4 738 2 275 2 510 12 277 4 396 4 
1 2 747 8 3 4 515 4 284 2 283 2 5 2 285 2 286 6 521 20 7 4 289 4 10 12 290 8 292 2 525 2 13 2 760 2 15 2 763 2 299 2 300 6 302 2 527 24 765 4 21 6 773 4 774 2 532 2 531 2 306 4 533 12 775 2 309 2 312 20 779 48 783 4 315 6 789 2 539 4 540 4 36 2 541 2 793 2 794 2 324 2 38 4 40 2 41 2 42 2 796 2 798 2 327 2 46 2 557 2 47 2 330 2 804 2 560 2 51 2 332 2 56 2 57 4 812 2 65 14 338 2 68 4 819 4 820 2 571 2 824 2 76 2 347 2 826 2 828 2 349 2 577 2 83 2 580 4 86 2 581 2 87 8 354 2 90 10 584 16 836 2 837 18 839 4 840 2 588 4 841 2 96 4 589 2 98 4 590 14 364 2 592 6 101 2 102 6 103 2 849 1 105 4 106 14 850 2 108 2 602 2 371 2 857 2 858 2 374 4 116 2 376 40 611 30 378 2 379 4 863 2 380 2 617 2 865 22 616 8 867 2 122 12 382 2 619 22 620 2 870 2 876 2 388 4 879 2 390 6 391 2 626 2 882 4 395 2 628 2 396 2 134 16 629 4 630 2 397 2 887 2 889 2 633 2 138 2 635 2 409 2 410 10 639 2 411 2 143 2 145 4 643 4 146 6 413 2 414 6 148 2 149 2 151 2 152 22 154 3 423 2 651 2 425 2 158 2 429 2 169 2 656 2 431 2 172 4 657 2 174 2 175 2 176 16 913 12 917 2 436 2 437 4 918 2 440 4 441 2 444 4 919 2 920 2 668 14 446 2 448 10 921 2 187 2 192 2 924 6 454 6 193 2 195 4 674 2 194 2 928 4 196 2 929 42 680 2 199 4 682 2 936 6 684 2 683 15 940 6 685 2 687 52 943 2 206 14 208 4 460 12 689 2 213 2 950 2 951 2 952 2 956 2 215 4 462 2 695 2 216 2 700 2 959 2 701 2 466 2 468 2 470 2 707 2 708 2 710 4 226 2 472 4 228 2 712 4 713 4 479 2 234 30 968 2 715 10 482 2 717 2 237 4 486 2 238 2 719 2 241 3 720 6 722 2 249 2 488 2 723 3 978 14 725 2 256 2 727 2 259 2 258 2 728 2 260 6 730 4 986 2 262 2 990 2 267 4 991 16 501 2 733 4 734 2 994 2 502 2 998 46 503 2 738 2 1001 3 505 2 741 2 740 2 275 2 511 4 513 2 1005 2 278 2 745 2 
887 2 602 2 913 2 410 4 723 2 917 2 376 2 611 2 668 2 865 2 448 2 870 2 90 2 152 2 772 2 994 2 193 2 531 2 674 2 998 6 234 2 134 2 630 2 65 2 
887 2 602 2 913 2 410 4 723 2 917 2 376 2 611 2 668 2 865 2 448 2 870 2 90 2 152 2 772 2 994 2 193 2 531 2 674 2 998 6 234 2 134 2 630 2 65 2 
887 2 602 2 913 2 410 4 723 2 917 2 376 2 611 2 668 2 865 2 448 2 870 2 90 2 152 2 772 2 994 2 193 2 531 2 674 2 998 6 234 2 134 2 630 2 65 2 
237 2 747 2 751 3 601 2 460 4 909 2 110 2 819 2 634 2 720 3 285 4 539 2 488 4 10 6 290 2 376 10 611 2 145 2 184 2 700 4 146 3 865 3 616 2 15 4 87 2 301 2 895 2 388 2 454 4 152 3 531 2 712 2 476 2 928 2 843 4 677 2 132 2 234 4 630 2 683 5 
747 2 751 2 460 4 819 2 634 2 285 4 290 2 10 6 145 2 146 2 700 4 15 4 87 2 301 2 895 2 152 2 712 2 531 2 476 2 843 4 234 4 237 2 601 2 909 2 110 2 720 2 539 2 488 4 376 10 611 2 38 2 184 2 616 2 865 2 260 2 388 2 454 4 928 2 273 2 677 2 132 2 630 2 683 4 
747 2 751 2 460 4 819 2 634 2 285 4 290 2 10 6 145 2 146 2 700 4 15 4 87 2 301 2 895 2 152 2 712 2 531 2 476 2 843 4 234 4 237 2 601 2 909 2 110 2 720 2 539 2 488 4 376 10 611 2 38 2 184 2 616 2 865 2 260 2 388 2 454 4 928 2 273 2 677 2 132 2 630 2 683 4 
747 2 751 2 460 4 819 2 634 2 285 4 290 2 10 6 145 2 146 2 700 4 15 4 87 2 301 2 895 2 152 2 712 2 531 2 476 2 843 4 234 4 237 2 601 2 909 2 110 2 720 2 539 2 488 4 376 10 611 2 38 2 184 2 616 2 865 2 260 2 388 2 454 4 928 2 273 2 677 2 132 2 630 2 683 4 
747 2 751 2 460 4 819 2 634 2 285 4 290 2 10 6 145 2 146 2 700 4 15 4 87 2 301 2 895 2 152 2 712 2 531 2 476 2 843 4 234 4 237 2 601 2 909 2 110 2 720 2 539 2 488 4 376 10 611 2 38 4 184 2 616 2 865 2 260 4 388 2 454 4 928 2 273 4 677 2 132 2 630 2 683 4 
428 2 179 2 584 2 9 2 509 2 805 2 35 2 
319 2 505 2 980 2 419 2 509 2 427 2 
108 2 537 2 756 1 853 2 314 2 910 2 111 2 245 2 691 2 376 10 891 2 613 1 893 1 447 2 548 2 987 2 356 1 385 2 802 2 622 1 49 2 50 2 234 8 162 2 654 2 746 2 
747 6 237 6 600 2 460 12 782 2 172 2 819 6 315 4 539 6 861 2 290 6 642 2 376 6 38 2 616 6 260 5 45 2 708 2 388 6 561 2 454 4 95 4 96 2 712 2 273 2 844 2 234 6 682 2 204 2 683 15 
186 2 236 4 72 2 755 7 271 2 488 2 997 2 308 2 376 1 234 1 699 2 84 1 700 2 614 2 564 2 618 2 729 2 15 2 
186 2 236 4 72 2 755 6 271 2 488 2 997 4 308 2 699 2 700 2 614 2 618 2 564 4 15 2 729 4 
186 2 236 4 72 2 755 10 271 2 488 2 997 8 308 6 376 1 234 1 699 2 84 1 700 2 614 2 618 8 564 8 15 2 729 8 
186 2 236 2 72 2 755 2 271 2 488 2 997 2 699 2 700 2 614 2 564 2 15 2 729 2 
752 2 280 2 757 4 286 4 640 2 892 2 761 2 414 16 416 2 303 1 18 2 770 2 21 18 650 2 649 2 155 2 159 2 904 2 165 2 655 2 313 2 911 2 317 2 914 2 318 2 661 2 441 2 547 2 43 2 185 4 551 2 191 2 331 2 806 2 925 2 195 4 332 2 333 2 336 2 201 2 684 2 814 2 205 2 208 6 566 4 343 2 344 2 955 4 79 2 576 2 463 2 579 2 706 1 223 2 227 14 591 2 99 2 234 34 235 2 847 4 102 4 854 1 974 2 975 4 374 6 859 2 489 3 978 32 115 2 375 1 609 4 610 2 376 38 866 2 989 1 265 2 875 2 993 2 739 6 1002 2 507 5 1004 4 
814 2 748 2 4 2 207 2 945 2 208 2 566 4 406 2 568 6 757 4 408 4 953 2 640 2 955 2 694 2 79 2 576 2 11 2 294 2 463 2 697 2 644 2 297 2 414 20 418 4 417 2 223 2 18 2 709 2 422 2 359 2 768 2 227 6 473 2 21 20 361 2 649 6 650 2 155 2 714 2 363 2 99 2 234 44 366 2 597 2 483 2 904 2 370 2 313 4 604 2 372 2 787 2 911 2 912 2 433 2 374 2 489 2 318 2 724 2 978 42 610 2 439 2 376 46 441 2 983 2 445 2 866 2 185 4 124 2 985 4 126 2 263 2 800 2 497 2 48 2 923 2 269 2 131 2 672 2 925 2 195 2 332 2 739 38 507 2 61 2 133 4 1004 2 64 2 399 2 684 2 
205 2 814 2 280 2 208 4 566 4 406 2 343 2 344 2 757 4 286 6 955 6 79 2 576 2 294 2 892 2 579 4 761 2 465 2 414 18 416 2 223 4 91 8 227 10 359 6 770 2 21 20 229 2 26 2 591 2 234 40 235 2 160 2 778 2 847 2 102 6 904 2 597 6 165 2 313 2 32 2 974 2 911 2 975 6 374 4 859 2 490 2 318 2 978 40 375 2 661 2 609 6 182 8 376 44 441 2 257 2 866 2 185 4 124 6 551 2 449 2 922 2 265 2 191 2 331 2 875 2 452 2 732 2 806 2 925 2 332 2 195 2 926 2 739 16 1002 2 811 8 507 6 508 2 336 2 1004 4 201 2 64 2 684 2 
814 2 752 2 208 2 566 6 757 6 286 10 640 4 955 2 79 2 576 2 294 2 463 4 414 14 303 2 706 2 965 2 223 2 18 4 225 2 900 2 227 8 21 14 649 6 155 4 156 2 99 4 846 2 234 26 102 10 904 2 313 2 911 2 317 10 606 4 914 10 374 2 489 2 978 38 318 2 791 4 115 2 117 2 610 4 375 6 439 2 376 28 441 2 121 2 866 2 43 2 185 6 126 2 989 2 925 2 332 2 195 2 739 14 455 2 507 2 1004 2 399 2 684 2 
469 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 814 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 787 787 601 601 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 44 (653,951) (240,247) (240,247) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 909 237 405 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ProglangType:isFloat()Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:noDups([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:baseIsFloat()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern([J)[J
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:eq(II)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONDITION | 19149 | if (x) -> if (!x)
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndLine()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:gt(II)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:ReadByte()C
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String; | ASSIGN | 5385 | = null
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf([D[F)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_53()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfo:isPointer()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Ppt:Ppt()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfo:new_ppt()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltsEqual([II)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eq(JJ)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice1:arity()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:pow(II)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | CONDITION | 18510 | if (x) -> if (!x)
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:slice([III)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoAux:hashCode()I
jtb.JavaParser:jj_3R_134()Z
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_49()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eltsLT([II)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice0:arity()I
daikon.ProglangType:isPointerFileRep()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ModBitTracker:num_vars()I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eq(FF)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:sign(I)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:size()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lte(II)Z
daikon.diff.InvMap:InvMap()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:gte(II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:lt(II)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.Invariant:getConfidence()D
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:logOn()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22110 | stmt -> ;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant:justified()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_2_1(I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
609 2 217 2 759 4 883 2 939 2 456 2 67 2 507 2 282 2 
842 2 877 2 769 2 304 6 183 2 463 2 43 6 370 2 395 6 35 2 101 2 
213 4 407 6 15 2 124 4 374 2 576 2 497 2 67 2 54 6 400 2 991 6 282 2 522 6 
525 10 267 2 452 6 33 29 66 8 67 6 966 16 311 4 699 16 229 2 230 26 282 6 541 8 919 10 289 10 81 6 982 2 922 2 380 8 516 2 830 10 87 4 891 8 519 4 711 16 482 2 656 2 25 10 57 4 30 12 
168 6 276 4 
112 2 
244 4 123 2 496 2 359 4 630 2 6 2 67 4 821 2 76 2 434 2 135 2 701 2 575 2 79 2 645 2 952 2 651 2 147 2 263 2 775 2 264 2 265 2 588 2 391 2 723 2 456 2 98 2 968 4 159 2 785 2 282 4 608 2 473 2 477 2 983 2 293 2 549 2 179 2 482 2 56 2 299 2 748 2 690 4 995 2 
182 2 525 16 452 4 495 2 33 54 594 4 155 4 127 4 67 4 336 2 966 32 250 6 311 2 699 32 72 8 230 48 945 6 826 2 282 4 607 4 437 2 734 6 919 16 78 6 289 16 887 4 81 4 200 6 982 2 380 6 830 16 23 2 891 18 711 32 25 6 556 4 806 4 30 22 841 6 
984 2 814 2 265 2 
233 2 258 2 176 2 965 2 459 2 551 2 654 22 710 10 163 2 713 2 181 2 748 2 93 2 210 2 
525 2 245 2 662 2 715 2 452 2 33 6 810 2 966 2 311 2 9 2 699 2 230 4 919 2 289 2 921 2 649 2 830 2 891 2 711 2 25 4 622 2 301 2 30 2 
525 4 919 4 289 4 33 16 155 4 200 6 127 4 830 4 966 8 552 2 519 2 711 8 957 2 699 8 230 12 30 4 841 6 
931 2 509 2 492 2 920 2 814 2 888 2 984 2 178 6 673 2 368 2 384 2 192 2 167 2 825 2 265 4 211 2 
717 2 696 2 606 2 915 2 112 2 796 2 21 2 261 2 88 2 486 2 
750 1 493 27 4 2 752 1 7 2 361 2 248 3 364 2 363 2 873 2 638 2 371 1 255 2 880 1 138 2 257 2 259 2 647 4 144 3 889 4 143 2 650 5 773 3 894 2 655 14 895 2 382 2 660 2 526 21 385 2 661 1 527 2 32 2 667 2 154 1 37 2 40 2 908 1 45 2 281 3 677 3 282 30 678 2 283 1 406 2 914 2 918 2 411 1 794 2 52 2 683 2 684 2 294 2 926 28 687 2 928 2 930 2 298 14 300 2 804 1 302 6 558 2 63 2 561 2 185 2 939 2 306 2 67 32 68 2 70 4 820 2 309 1 73 2 572 2 574 2 827 1 436 2 316 2 195 2 194 2 197 3 318 1 828 2 702 4 440 2 577 2 80 2 704 3 707 2 205 2 449 1 95 14 843 2 591 2 722 2 596 2 849 2 726 2 338 3 104 4 464 2 604 6 106 6 469 3 110 21 739 2 742 3 617 14 620 2 481 2 352 6 484 2 866 1 243 2 122 1 
296 2 67 2 
698 2 67 4 670 2 
375 2 
356 14 491 2 494 2 499 2 500 2 501 2 756 14 633 2 130 2 251 10 253 4 508 2 256 44 18 4 765 2 142 10 648 6 774 2 262 8 150 14 896 2 776 18 659 2 658 10 777 2 153 2 270 2 272 4 392 2 397 14 535 2 38 2 41 2 537 4 280 14 165 14 539 18 285 2 404 2 51 2 681 2 175 14 795 2 297 14 686 14 929 12 689 2 420 32 423 2 811 10 65 2 187 2 307 14 815 2 191 4 312 8 700 2 947 6 317 2 949 2 443 2 82 44 832 10 585 4 835 2 718 2 214 2 216 8 215 2 453 4 590 2 332 2 592 2 100 2 847 4 969 10 970 2 462 2 226 6 605 2 972 2 856 44 974 2 109 12 977 2 474 8 476 2 859 2 860 2 988 8 743 2 350 2 745 2 351 2 865 6 993 14 
625 2 115 2 417 2 357 1 
115 2 441 2 
115 2 365 2 439 2 824 2 57 2 265 2 107 2 
115 2 365 2 798 2 
115 2 365 2 657 2 
193 2 417 2 290 2 
115 2 365 2 
415 2 193 2 
115 2 232 2 
193 2 417 2 962 2 
417 2 340 2 844 2 
417 2 207 2 75 2 
788 2 417 2 86 2 
417 2 881 2 672 2 
193 2 461 2 
115 2 666 2 
844 2 291 2 
529 2 207 2 
788 2 941 2 
872 2 881 2 
193 2 705 2 
881 2 77 2 
788 2 366 2 
511 2 207 2 
844 2 992 2 
193 2 417 2 504 2 962 2 
193 2 417 2 800 2 504 2 962 2 
193 2 417 2 91 2 
193 2 417 2 644 2 
10 2 747 2 241 2 353 2 
439 2 521 2 265 2 315 2 
439 2 521 2 724 2 265 2 107 2 315 2 
115 2 365 2 439 2 57 2 840 2 265 2 
42 2 6 2 
439 2 57 2 265 2 534 2 
788 2 563 2 
881 2 744 2 
844 2 614 2 
207 2 950 2 
177 2 881 2 207 2 
881 2 643 2 207 2 
881 2 538 2 207 2 
470 2 881 2 207 2 
337 2 196 2 137 2 439 2 517 6 985 2 550 6 265 2 
871 2 193 2 
692 2 976 2 978 2 428 2 884 2 199 2 278 2 740 4 831 4 671 2 905 2 447 2 654 6 599 2 26 2 74 2 422 2 133 2 
417 2 367 2 
726 2 
750 2 493 4 870 2 5 2 249 2 761 2 638 2 255 2 138 2 257 2 141 2 647 4 889 4 143 2 24 2 894 8 895 2 660 2 527 2 667 2 781 2 46 2 787 2 282 26 678 2 403 2 406 2 543 4 918 2 794 2 52 2 294 2 53 2 926 6 687 2 302 2 691 2 939 2 306 2 67 26 70 4 820 2 571 2 827 2 436 2 316 2 80 2 89 2 451 2 208 2 959 2 595 2 97 2 457 2 849 2 104 4 600 4 601 2 464 2 604 4 106 2 108 2 236 2 612 2 981 2 478 2 617 6 618 2 620 2 481 6 352 6 485 2 994 4 243 2 
750 2 493 4 870 2 5 2 249 2 873 2 761 2 638 2 255 2 138 2 257 2 141 2 647 4 889 4 143 2 24 2 894 8 895 2 382 2 660 2 527 2 667 2 781 2 46 2 282 26 678 2 403 2 406 2 543 4 918 2 794 2 52 2 294 2 53 2 926 6 687 2 302 2 691 2 62 2 939 2 306 2 67 26 817 2 70 4 820 2 571 2 827 2 436 2 316 2 578 2 80 2 89 2 451 2 208 2 959 2 595 2 97 2 457 2 849 2 104 4 600 4 464 2 604 6 106 2 236 2 612 2 981 2 478 2 617 6 618 2 620 2 481 6 352 6 485 2 994 4 487 2 243 2 
587 2 
279 2 36 2 
304 6 934 4 125 2 628 8 754 2 247 2 67 12 757 2 820 2 430 4 131 2 943 2 12 2 435 2 14 4 877 2 257 2 580 2 377 2 951 2 889 2 954 2 520 2 839 2 719 2 390 2 963 2 395 6 964 2 35 4 845 10 34 2 223 2 848 2 101 4 849 2 598 2 104 2 43 6 463 2 464 2 467 4 44 2 282 6 911 4 171 2 789 2 173 2 794 2 611 2 858 4 547 2 987 2 989 8 620 2 802 2 120 2 240 2 352 4 243 2 
304 6 934 4 358 2 125 2 628 8 754 2 247 2 67 12 757 2 820 2 566 2 430 4 131 2 943 2 12 2 435 2 14 4 877 2 257 2 580 2 377 2 889 2 951 2 954 2 520 2 839 2 842 2 390 2 963 2 395 8 964 2 845 10 35 4 223 2 848 2 101 4 849 2 598 2 104 2 43 8 463 2 464 2 467 4 44 2 282 6 911 4 171 2 789 2 173 2 794 2 114 4 611 2 858 4 547 2 987 2 989 8 620 2 802 2 120 2 240 2 352 4 243 2 
14 2 304 2 789 2 390 2 247 2 35 2 101 2 951 2 757 2 520 2 43 2 131 2 802 2 467 4 120 2 943 2 240 2 911 4 
304 4 934 4 125 2 628 4 754 2 247 2 67 12 757 2 820 2 430 4 131 2 943 2 12 2 435 2 14 4 877 2 257 2 580 2 377 2 951 2 889 2 954 2 520 2 839 2 842 2 719 2 390 2 963 2 395 6 964 2 35 4 845 6 34 2 223 2 848 2 101 4 849 2 598 2 104 2 43 6 464 2 467 4 44 2 282 6 911 4 171 2 789 2 173 2 794 2 611 2 858 4 547 2 987 2 989 4 620 2 802 2 120 2 240 2 352 4 243 2 
304 6 934 4 125 2 628 4 754 2 247 2 67 12 757 2 820 2 430 4 131 2 943 2 370 2 12 2 435 2 14 4 877 2 257 2 580 2 377 2 951 2 889 2 954 2 520 2 839 2 719 2 390 2 963 2 395 6 964 2 35 4 845 6 34 2 223 2 848 2 101 4 849 2 598 2 104 2 43 4 464 2 467 4 44 2 282 6 911 4 171 2 789 2 173 2 794 2 611 2 858 4 547 2 987 2 989 4 620 2 802 2 120 2 240 2 352 4 243 2 
304 6 934 4 125 2 628 8 754 2 247 2 67 12 757 2 820 2 430 4 131 2 943 2 12 2 435 2 14 4 877 2 257 2 580 2 377 2 951 2 889 2 954 2 520 2 839 2 719 2 390 2 963 2 395 6 964 2 35 4 845 6 34 2 223 2 848 2 101 4 849 2 598 2 104 2 43 6 463 2 464 2 467 4 44 2 282 6 911 4 171 2 789 2 173 2 794 2 611 2 858 4 547 2 987 2 989 4 620 2 802 2 120 2 240 2 352 4 243 2 
304 8 934 4 125 2 628 8 754 2 247 2 67 12 757 2 820 2 430 4 131 2 943 2 370 2 12 2 435 2 14 4 877 2 257 2 580 2 377 2 889 2 951 2 954 2 520 2 839 2 719 2 390 2 963 2 395 8 964 2 35 4 845 10 34 2 223 2 848 2 101 4 849 2 598 2 104 2 43 6 463 2 464 2 467 4 44 2 282 6 911 4 171 2 789 2 173 2 794 2 611 2 858 4 547 2 987 2 989 8 620 2 802 2 120 2 240 2 352 4 243 2 
304 6 934 4 125 2 628 8 754 2 247 2 67 12 757 2 820 2 430 4 131 2 943 2 12 2 435 2 14 4 877 2 257 2 580 2 377 2 951 2 889 2 954 2 520 2 839 2 719 2 390 2 963 2 395 6 964 2 35 4 845 10 34 2 223 2 848 2 101 4 849 2 598 2 104 2 43 6 463 2 464 2 467 4 44 2 282 6 911 4 171 2 789 2 173 2 794 2 611 2 858 4 547 2 987 2 989 8 620 2 802 2 120 2 240 2 352 4 243 2 
489 7 751 1 493 2 3 6 753 2 754 4 247 2 5 2 757 2 8 2 761 2 506 6 12 2 14 4 255 2 257 2 766 1 768 1 770 2 520 2 29 2 527 2 528 2 531 2 35 4 277 2 43 4 44 2 540 2 786 4 282 24 284 2 543 4 789 2 790 6 794 2 547 2 52 2 294 2 295 2 53 2 296 6 802 2 302 2 60 2 304 8 809 1 562 2 306 2 67 46 70 4 820 2 316 2 80 2 580 2 579 6 322 6 90 2 839 2 845 2 848 2 101 4 849 2 598 2 339 6 104 4 604 6 853 2 343 2 106 2 611 2 612 2 858 8 617 6 117 2 620 2 119 2 120 2 352 6 125 2 628 2 629 2 873 2 131 2 370 4 875 2 638 2 877 4 375 6 138 2 377 2 647 4 889 4 143 2 381 2 892 2 893 6 894 4 382 2 895 2 660 2 897 8 898 2 667 2 390 2 395 12 158 7 904 6 906 10 162 1 674 2 166 2 678 12 911 4 406 2 918 2 171 2 173 2 923 2 926 8 687 2 927 4 934 4 933 6 935 1 429 6 939 2 190 2 430 6 698 6 943 2 435 4 436 2 442 6 951 2 954 2 202 2 448 1 204 1 209 2 719 2 218 1 721 2 963 2 455 2 964 2 223 2 460 6 464 2 467 4 975 2 234 2 236 2 478 4 987 2 481 6 239 6 240 2 243 2 
493 2 3 6 125 2 753 2 629 2 628 6 754 4 5 2 247 2 757 2 8 2 873 2 131 2 761 2 506 6 875 2 12 2 638 4 14 4 877 4 375 6 255 2 138 2 257 2 377 2 647 4 381 2 143 2 889 4 770 2 148 2 892 2 893 6 520 2 894 8 895 2 382 2 897 8 660 2 29 2 898 2 527 2 528 2 667 2 390 2 531 2 395 12 35 4 277 2 904 6 39 2 906 10 43 8 674 2 44 2 540 2 166 2 786 4 678 12 282 26 284 2 911 4 543 4 406 2 918 2 171 2 789 2 790 6 173 2 794 2 52 4 547 2 294 2 923 2 295 2 296 6 53 2 926 8 927 4 687 2 802 2 302 2 60 2 304 8 933 6 934 4 562 2 429 6 939 2 306 2 67 48 190 2 70 4 820 2 430 6 698 6 943 2 435 4 436 2 316 4 80 2 579 6 580 2 442 6 322 6 951 2 202 2 954 2 90 2 839 2 209 2 719 2 721 2 455 2 963 2 845 2 964 2 223 2 101 4 848 2 849 2 460 6 339 6 598 2 104 4 463 4 464 2 853 2 604 6 467 4 343 2 106 2 975 2 234 2 236 2 612 2 611 2 478 4 858 8 617 6 117 2 987 2 620 2 481 6 239 6 119 2 120 2 240 2 352 6 994 2 243 2 
493 2 3 6 125 2 753 2 629 2 628 6 754 4 5 2 247 2 757 2 8 2 873 2 131 2 761 2 506 6 875 2 12 2 638 4 14 4 877 4 375 6 255 2 138 2 257 2 377 2 647 4 381 2 143 2 889 4 770 2 148 2 892 2 893 6 520 2 894 8 895 2 382 2 897 8 660 2 29 2 898 2 527 2 528 2 667 2 390 2 531 2 395 12 35 4 277 2 904 6 39 2 906 10 43 8 674 2 44 2 540 2 166 2 786 4 678 12 282 26 284 2 911 4 543 4 406 2 918 2 171 2 789 2 790 6 173 2 794 2 52 4 547 2 294 2 923 2 295 2 296 6 53 2 926 8 927 4 687 2 802 2 302 2 60 2 304 8 933 6 934 4 562 2 429 6 939 2 306 2 67 48 190 2 70 4 820 2 430 6 698 6 943 2 435 4 436 2 316 4 80 2 579 6 580 2 442 6 322 6 951 2 202 2 954 2 90 2 839 2 209 2 719 2 721 2 455 2 963 2 964 2 845 6 223 2 101 4 848 2 849 2 460 6 339 6 598 2 104 4 463 4 464 2 853 2 604 6 467 4 343 2 106 2 975 2 234 2 236 2 612 2 611 2 478 4 858 8 617 6 117 2 987 2 989 4 620 2 481 6 239 6 119 2 120 2 240 2 352 6 994 2 243 2 
304 4 934 2 719 2 628 6 247 2 963 2 395 4 67 4 845 4 35 2 223 2 101 2 848 2 598 2 463 2 43 4 44 2 467 2 12 2 638 2 911 2 877 2 316 2 789 2 377 2 173 2 611 2 858 2 52 2 547 2 923 2 951 2 987 2 989 4 520 2 894 2 802 2 120 2 240 2 
304 6 934 2 719 2 628 6 247 2 963 2 395 4 67 4 845 4 35 4 223 2 848 2 101 4 598 2 430 2 463 2 43 6 44 2 467 2 12 2 911 2 877 2 789 2 377 2 173 2 611 2 858 2 547 2 951 2 987 2 989 4 520 2 802 2 120 2 240 2 
493 3 628 6 247 2 7 2 128 2 873 2 761 2 12 2 877 2 255 2 138 2 257 2 377 2 647 4 889 4 143 2 520 2 895 2 382 2 660 2 527 2 32 2 667 2 395 4 35 4 902 2 906 2 43 6 402 3 44 2 282 24 678 4 911 2 406 2 543 4 918 2 789 2 173 2 794 2 547 2 294 2 53 2 926 8 687 2 802 2 928 2 801 2 302 3 61 2 304 6 934 2 939 2 306 2 67 28 70 4 190 2 820 2 430 2 436 2 80 2 951 2 954 2 719 2 963 2 845 2 223 2 101 4 848 2 849 2 726 2 598 2 104 4 463 2 464 2 604 6 467 2 106 3 613 2 611 2 858 2 478 2 617 6 987 2 620 2 481 6 120 2 352 6 240 2 243 2 
709 2 987 2 547 2 
709 2 987 2 547 2 
488 2 493 2 125 2 629 2 628 6 754 4 757 2 873 2 505 4 761 2 370 4 12 2 638 4 876 2 14 4 877 4 16 2 255 2 138 2 257 2 646 4 140 2 647 4 889 4 143 2 894 4 895 2 382 2 383 2 152 2 523 2 527 2 667 2 395 16 35 4 277 2 904 2 906 2 43 12 44 2 786 2 676 2 49 2 282 16 678 4 911 2 406 2 918 2 410 2 171 2 789 4 794 2 52 4 547 6 548 2 294 2 53 2 926 2 927 2 687 2 802 2 304 12 934 2 939 2 306 2 67 24 70 4 820 2 430 4 569 2 313 2 943 2 435 2 436 2 316 4 80 2 580 2 951 2 708 2 709 2 89 4 842 4 845 6 101 4 849 2 104 4 729 2 463 4 464 2 604 6 467 2 346 2 236 4 478 6 858 4 617 2 987 4 989 4 619 2 620 2 481 2 119 2 352 6 243 2 
372 2 410 2 140 2 782 2 531 2 67 4 36 2 904 2 770 2 906 2 620 2 927 2 131 2 855 2 676 2 678 2 282 2 
493 4 125 2 629 2 628 6 754 4 757 2 873 2 505 4 761 2 370 4 12 2 638 4 876 2 14 4 877 4 255 2 138 2 257 2 646 4 140 2 647 4 889 4 143 2 653 2 894 4 895 2 382 2 383 4 152 2 523 2 527 2 667 2 395 16 35 4 277 2 904 2 43 12 44 2 786 2 676 2 910 2 49 2 282 16 678 2 911 2 406 2 918 2 410 2 171 2 789 4 794 2 52 4 547 6 548 2 294 2 53 2 926 2 687 2 802 2 304 12 934 2 939 2 306 2 67 24 70 4 820 2 430 4 569 2 942 2 432 2 313 2 943 2 435 4 436 2 316 4 80 2 580 2 951 2 709 2 89 4 839 2 842 4 716 2 845 6 101 4 849 2 104 4 729 2 463 4 464 2 604 6 467 2 346 2 236 4 858 4 478 6 617 2 987 4 989 4 620 2 481 2 119 2 352 6 243 2 
490 2 493 2 125 2 629 2 628 6 754 4 757 2 873 2 505 4 761 2 370 4 12 2 638 4 876 2 14 4 877 4 255 2 138 2 257 2 646 4 140 2 647 4 889 4 143 2 146 2 894 4 895 2 382 2 383 2 152 2 523 2 527 2 667 2 395 16 35 4 277 2 904 2 906 2 43 12 44 2 786 2 676 2 49 2 282 16 678 4 911 2 406 2 918 2 410 2 413 2 171 2 789 4 794 2 52 4 547 6 548 2 294 2 53 2 926 2 927 2 687 2 802 2 304 12 934 2 939 2 306 2 67 24 70 4 820 2 430 4 569 2 313 2 943 2 946 2 435 4 436 2 316 4 80 2 580 2 951 2 709 2 89 4 839 2 842 4 845 6 101 4 849 2 728 2 104 4 729 2 463 4 464 2 604 6 467 2 346 2 236 4 478 6 858 4 617 2 987 4 989 4 620 2 481 2 119 2 352 6 243 2 
750 2 493 11 246 4 5 18 760 2 252 2 13 4 255 2 17 10 19 2 510 24 513 2 257 2 514 2 767 6 260 2 24 2 29 2 30 4 266 2 525 2 527 2 33 8 269 8 271 2 780 4 282 22 284 2 543 10 289 2 791 2 794 2 294 2 295 2 53 2 797 6 55 4 302 11 303 2 559 2 60 2 61 2 807 8 808 8 812 4 306 2 67 28 564 2 308 2 70 2 69 2 820 2 310 2 71 2 571 2 573 2 826 4 827 2 829 2 581 2 84 2 323 2 830 2 838 2 94 2 589 2 331 2 333 2 334 2 846 24 849 2 102 2 104 4 341 2 604 4 853 2 106 11 111 8 113 12 613 2 347 2 612 12 348 6 615 2 617 12 349 2 618 2 861 2 862 4 620 2 621 2 864 2 352 6 869 2 128 2 129 2 873 2 369 2 136 2 138 2 641 4 378 3 139 2 379 2 141 2 886 2 647 2 143 2 889 4 891 4 894 28 382 2 660 2 898 2 899 2 665 2 155 4 156 6 901 2 396 2 398 2 902 2 906 2 907 2 401 2 402 2 675 2 909 2 678 4 403 2 405 2 406 2 916 2 918 2 919 2 172 2 682 2 924 2 925 4 416 2 926 18 180 2 425 4 694 2 693 2 939 2 938 2 697 12 699 4 436 2 198 2 200 6 445 2 953 24 446 2 711 4 451 2 220 2 457 2 224 2 966 4 967 6 971 2 464 2 230 6 731 2 231 2 973 1 472 2 234 2 736 4 980 2 236 4 981 10 478 2 237 2 481 12 242 2 243 2 
493 2 693 2 5 6 780 2 564 2 67 2 398 2 675 2 252 2 106 2 282 2 543 2 878 2 513 2 682 2 378 2 886 2 260 4 617 2 926 2 481 2 302 2 660 2 838 2 
493 2 693 2 5 6 780 2 564 2 67 2 398 2 675 2 252 2 106 2 282 2 543 2 878 2 513 2 682 2 378 2 886 2 260 4 617 2 926 2 481 2 302 2 660 2 838 2 
493 2 693 2 5 6 780 2 564 2 67 2 398 2 675 2 252 2 106 2 282 2 543 2 878 2 513 2 682 2 378 2 886 2 260 4 617 2 926 2 481 2 302 2 660 2 838 2 
525 2 663 4 960 3 386 4 493 3 95 2 560 6 900 2 33 6 67 10 818 2 966 2 568 2 227 2 699 2 230 4 874 3 106 3 47 3 282 4 468 2 319 4 919 2 289 2 545 2 512 2 235 2 682 2 792 4 444 2 81 2 380 4 22 2 830 2 926 2 655 2 711 2 660 2 557 4 31 2 
493 2 560 6 67 10 818 2 568 2 699 2 874 2 319 4 512 2 81 2 444 2 380 4 22 2 830 2 891 2 711 2 655 2 660 2 30 2 31 2 525 2 663 4 960 2 386 4 95 2 900 2 33 4 966 2 227 2 230 4 106 2 47 2 282 4 468 2 919 2 545 2 289 2 235 2 682 2 792 4 982 2 926 2 557 4 
493 2 560 6 67 10 818 2 568 2 699 2 874 2 319 4 512 2 81 2 444 2 380 4 22 2 830 2 891 2 711 2 655 2 660 2 30 2 31 2 525 2 663 4 960 2 386 4 95 2 900 2 33 4 966 2 227 2 230 4 106 2 47 2 282 4 468 2 919 2 545 2 289 2 235 2 682 2 792 4 982 2 926 2 557 4 
493 2 560 6 67 10 818 2 568 2 699 2 874 2 319 4 512 2 81 2 444 2 380 4 22 2 830 2 891 2 711 2 655 2 660 2 30 2 31 2 525 2 663 4 960 2 386 4 95 2 900 2 33 4 966 2 227 2 230 4 106 2 47 2 282 4 468 2 919 2 545 2 289 2 235 2 682 2 792 4 982 2 926 2 557 4 
493 2 560 6 67 10 818 2 568 2 699 2 874 2 319 4 512 2 81 2 444 2 380 4 22 2 830 2 891 4 711 2 655 2 660 2 30 4 31 2 525 2 663 4 960 2 386 4 95 2 900 2 33 4 966 2 227 2 230 4 106 2 47 2 282 4 468 2 919 2 545 2 289 2 235 2 682 2 792 4 982 4 926 2 557 4 
518 2 652 2 102 2 944 2 631 2 132 2 
287 2 652 2 376 2 161 2 483 2 981 2 867 2 
492 1 932 2 664 2 393 1 222 2 668 2 67 10 399 2 820 2 103 2 160 1 852 2 105 2 679 2 282 8 509 1 438 2 737 2 579 2 145 2 834 2 118 2 688 2 837 1 326 2 421 2 
1 2 525 6 33 16 219 2 155 2 67 6 565 2 966 6 250 4 72 2 699 6 230 12 369 2 282 6 607 2 919 6 641 2 289 6 791 2 477 2 200 4 81 2 982 2 380 4 830 6 891 2 990 2 711 6 30 4 995 2 
524 2 663 2 386 2 330 2 408 2 126 2 936 2 530 2 67 1 414 7 555 2 586 4 712 2 749 1 28 2 557 2 623 2 282 1 
524 2 663 2 386 2 408 2 330 4 126 2 936 2 530 2 414 6 555 4 586 4 712 4 28 2 557 2 623 2 
524 2 663 2 386 2 408 2 330 8 126 2 936 2 530 2 67 1 414 10 555 8 586 4 712 8 749 1 28 6 557 2 623 8 282 1 
524 2 663 2 386 2 408 2 330 2 126 2 936 2 530 2 414 2 555 2 586 2 712 2 557 2 
0 4 355 4 2 2 626 12 627 34 360 6 755 5 635 4 873 58 11 2 636 16 763 28 764 8 134 6 639 6 373 2 879 2 254 8 640 6 642 4 885 2 515 4 647 88 20 26 890 2 771 4 772 8 149 24 382 58 27 6 151 2 387 10 527 8 268 6 389 36 274 2 273 6 779 8 669 12 532 18 533 11 903 8 783 4 784 6 164 16 48 8 282 134 680 4 50 4 542 4 913 6 170 4 917 4 544 26 412 6 546 6 174 4 292 2 685 24 799 2 418 2 553 8 554 2 803 6 424 124 426 10 64 2 305 6 695 4 427 6 937 4 306 14 813 6 816 4 67 150 188 42 70 112 819 8 822 2 431 4 567 6 823 8 570 2 436 14 320 4 321 92 83 18 706 2 85 6 324 6 582 90 583 42 584 2 325 4 201 10 956 2 833 24 955 4 836 1 206 24 327 6 450 17 958 10 329 90 961 6 454 2 99 6 727 10 851 50 225 6 603 4 604 248 730 8 228 4 854 22 732 10 733 6 471 4 735 10 344 16 345 2 857 4 475 16 741 24 238 4 116 84 986 24 480 10 
0 2 868 2 426 2 305 2 184 2 186 2 306 2 755 2 67 46 189 4 502 2 70 20 819 6 634 2 503 2 822 2 940 2 873 2 823 2 570 2 636 4 762 2 763 38 314 2 764 2 436 2 254 2 948 2 703 4 706 2 647 20 324 2 201 2 772 2 956 2 833 2 203 2 382 2 27 2 206 2 328 2 327 4 714 2 450 2 958 2 212 2 387 2 778 2 720 2 527 2 268 2 388 2 389 2 593 2 273 2 221 2 275 2 394 2 96 2 532 2 335 2 725 2 597 2 727 2 342 2 602 2 604 44 465 2 164 4 466 2 282 44 732 2 912 2 169 2 735 2 917 2 288 4 412 2 738 2 793 6 292 2 475 4 610 2 616 4 685 2 479 2 418 2 480 2 58 2 624 2 59 2 424 6 
355 4 627 30 498 2 362 4 632 16 758 32 635 4 873 30 636 10 763 14 637 8 764 2 639 4 134 4 879 2 882 2 640 4 642 4 647 36 890 2 772 2 382 28 27 4 387 4 527 2 268 4 389 6 273 4 779 4 669 14 532 10 157 16 536 4 784 4 164 10 282 70 50 4 286 4 542 4 913 4 170 4 409 8 412 4 546 4 174 4 292 2 418 2 553 4 803 4 419 2 805 4 424 24 426 4 64 2 305 4 695 4 937 4 306 6 813 4 67 78 188 16 70 44 819 6 567 4 823 2 570 2 433 2 436 6 948 10 320 2 321 24 706 2 85 4 324 4 583 8 325 4 201 4 956 2 328 10 327 2 92 4 450 10 212 2 961 4 593 2 99 4 458 2 597 2 850 8 851 8 225 4 603 4 604 104 228 4 732 4 733 4 344 8 345 2 979 4 475 10 116 24 986 8 480 6 863 2 746 4 121 8 624 10 
426 2 305 4 627 6 937 2 306 2 755 2 67 28 70 14 819 4 822 2 873 12 823 2 11 2 636 6 570 2 763 14 764 2 436 2 320 2 706 2 647 14 324 4 201 2 772 2 956 2 382 12 27 4 327 2 450 2 151 2 778 2 387 2 527 2 268 4 454 2 274 2 389 2 273 4 779 4 532 2 533 2 597 2 730 2 604 40 164 6 854 10 680 2 282 26 732 2 471 2 170 2 344 6 412 4 292 2 475 6 799 2 418 2 480 2 424 8 
354 2 

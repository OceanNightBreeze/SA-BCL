#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 192 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 192 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 31 722 1014 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 200 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 48 565 762 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 48 565 762 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1002 48 565 762 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:setDiff([I[I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_114()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_49()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:lexGTE([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_121()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:sameLength([I[I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3_1()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_2_13(I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_21()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:intern([J)[J
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_148()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String; | RETURN | 9354 | return null
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_81()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_115()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:logDetail()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_52()Z
daikon.Debug:logOn()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3_36()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 38491 | return null
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_120()Z
jtb.JavaCharStream:BeginToken()C
daikon.ProglangType:baseIsFloat()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaCharStream:readChar()C
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_118()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3_15()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_24()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3_13()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_75()Z | CONDITION | 195429 | if (x) -> if (!x)
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_12()Z
daikon.PptSlice0:arity()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:subsetOf([B[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_60()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(FF)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfo:isPointer()Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_3R_87()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_56()Z
utilMDE.Intern:intern([D)[D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set; | RETURN | 92707 | return null
daikon.Quant:eq(DD)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3_4()Z
daikon.ProglangType:isIntegral()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_51()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_2_24(I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptSlice1:arity()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_96()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:gte(II)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:CastExpression()Ljtb.syntaxtree.CastExpression;
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_161()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_133()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3_10()Z
daikon.Quant:eltwiseGT([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_88()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice1:num_samples()I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet; | OPERATOR | 1556 | == -> !=
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariants:Invariants()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23606 | = null
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.ProglangType:isArray()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_119()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:memberOf(D[F)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eq(JJ)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_2_12(I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_50()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
646 2 1011 2 585 2 61 2 705 2 861 2 526 2 79 4 919 2 
370 2 1007 2 101 2 236 2 298 2 582 6 1035 6 39 6 176 2 1038 2 125 2 
839 6 65 2 247 6 1033 2 1036 6 773 2 496 4 625 2 585 2 1046 2 187 4 631 6 526 2 
486 4 810 16 66 6 978 10 155 4 435 4 783 2 258 26 915 29 15 2 121 2 468 2 526 6 162 10 528 2 126 16 232 2 771 10 953 16 1025 10 233 6 958 12 896 8 272 10 543 8 962 2 585 6 1090 8 741 8 745 4 
249 6 630 4 
206 2 
365 2 488 2 288 2 290 2 846 2 646 2 1044 2 913 4 860 2 655 2 166 2 921 2 383 2 446 2 20 4 508 2 514 2 246 2 178 2 681 2 1073 2 461 4 1016 2 690 2 463 2 760 2 696 2 761 2 883 2 120 2 766 2 342 2 344 2 539 2 1084 2 962 2 1027 2 63 2 1089 2 778 2 
486 2 810 32 1008 2 66 4 403 8 978 16 38 2 843 4 783 2 723 6 294 2 758 2 258 48 650 6 84 6 915 52 526 4 162 16 612 4 990 4 888 4 126 32 771 6 953 32 1025 16 233 4 958 22 577 6 896 18 272 16 961 4 543 6 585 4 1061 4 1001 2 275 2 589 4 973 6 517 6 
463 2 706 2 548 2 
379 10 227 2 382 2 430 2 53 2 506 2 437 2 541 22 102 2 854 2 1089 2 104 2 375 2 324 2 
245 2 92 2 491 2 668 2 1045 2 262 2 867 2 587 2 675 2 
126 8 810 8 978 4 953 8 598 2 1025 4 843 4 958 4 577 6 155 2 538 2 723 6 258 12 272 4 915 16 162 4 612 4 
779 2 369 2 1039 4 461 2 252 4 81 2 463 8 646 2 439 2 787 2 1049 2 984 2 860 2 987 2 945 4 469 2 568 2 730 2 416 34 992 2 21 2 770 2 892 2 951 4 662 4 1080 10 1026 2 706 2 930 6 425 2 548 6 1004 2 
42 2 408 2 83 2 412 2 89 2 304 2 99 2 579 2 540 2 206 2 
718 2 552 24 284 2 150 1 981 2 847 2 560 2 292 2 724 1 853 2 982 1 562 2 159 3 442 1 164 2 991 12 570 2 732 2 993 2 734 2 309 2 450 2 29 2 313 2 30 3 866 3 315 2 316 2 585 34 174 2 868 2 586 6 740 12 872 4 325 1 590 2 591 2 594 1 1012 2 327 2 37 2 596 4 1013 32 600 2 601 2 41 1 603 2 329 4 464 2 1019 2 884 4 190 2 887 4 613 2 198 2 615 3 341 2 343 2 472 1 55 2 348 2 480 2 626 6 904 2 628 2 777 32 905 1 207 3 1029 1 485 2 209 1 211 1 632 24 907 2 781 2 368 16 73 1 640 8 641 2 215 8 643 1 80 2 371 4 645 2 651 2 222 2 920 1 94 2 798 2 665 16 391 2 97 2 667 1 98 5 801 2 513 2 669 6 670 1 1062 2 239 2 398 2 676 2 516 3 400 4 934 3 241 2 677 2 109 2 678 2 402 3 1068 2 937 4 682 2 111 2 404 2 405 2 115 2 254 2 689 2 814 2 815 3 257 8 411 2 698 2 413 2 526 32 527 2 820 2 265 3 418 16 823 2 703 2 954 2 1079 2 705 2 532 2 959 3 134 2 828 2 960 16 544 2 142 2 546 2 837 2 966 2 716 3 1092 2 280 6 428 2 
585 2 105 2 
1086 2 585 4 845 2 
964 2 
3 2 4 2 841 4 553 2 555 10 289 2 10 2 850 22 11 4 295 2 856 2 563 2 16 4 566 2 302 2 567 2 863 2 311 4 310 2 312 4 32 2 583 2 584 2 318 20 319 2 588 4 34 4 321 2 871 2 322 2 874 2 36 2 40 2 878 2 879 46 602 2 331 2 44 16 882 36 45 34 46 4 49 4 339 146 50 2 52 2 616 2 894 46 347 2 895 2 619 2 351 2 354 46 899 2 60 4 355 2 357 2 62 4 363 2 68 22 67 2 70 2 635 46 71 2 637 4 639 14 76 10 644 2 372 8 648 24 912 12 910 20 652 14 917 4 373 46 88 8 922 2 385 4 93 2 390 40 664 2 96 28 393 2 394 16 671 46 933 2 683 4 114 14 407 146 697 2 414 2 947 4 702 46 704 2 132 2 956 2 133 2 420 2 422 8 138 4 709 2 963 20 710 2 715 8 965 8 719 2 975 2 152 4 434 8 156 4 436 2 438 2 983 46 727 2 988 2 163 4 165 2 445 2 167 4 448 12 733 2 449 8 995 46 169 2 171 2 170 8 737 4 172 8 1000 6 455 2 456 2 1005 2 750 6 458 2 179 2 1015 4 181 4 183 2 185 2 466 8 188 178 763 10 189 4 191 2 193 48 764 8 197 14 196 8 470 4 769 2 1023 2 205 4 775 4 1030 20 208 2 210 2 213 2 1032 4 490 2 493 46 782 2 785 2 784 2 217 2 1041 4 1042 2 786 146 1043 2 499 46 223 2 788 24 500 2 503 4 507 2 1056 24 802 4 803 2 1060 4 1063 34 805 2 244 6 811 4 1067 2 1069 8 519 46 250 6 255 4 524 2 818 2 531 2 1081 2 270 2 826 4 829 6 545 6 833 2 274 2 834 4 
881 2 112 2 735 2 303 1 
881 2 74 2 
936 2 463 2 881 2 328 2 870 2 433 2 435 2 
936 2 881 2 885 2 
936 2 881 2 806 2 
1051 2 1018 2 112 2 
936 2 881 2 
1051 2 317 2 
881 2 476 2 
1051 2 520 2 112 2 
835 2 112 2 755 2 
561 2 816 2 112 2 
238 2 112 2 812 2 
940 2 112 2 985 2 
1051 2 714 2 
881 2 204 2 
157 2 755 2 
816 2 268 2 
830 2 238 2 
1057 2 940 2 
1051 2 1083 2 
940 2 932 2 
661 2 238 2 
816 2 877 2 
580 2 755 2 
747 2 1051 2 520 2 112 2 
747 2 452 2 1051 2 520 2 112 2 
1051 2 112 2 728 2 
530 2 1051 2 112 2 
117 2 929 2 202 2 301 2 
463 2 564 2 870 2 401 2 
463 2 328 2 564 2 870 2 477 2 401 2 
936 2 463 2 12 2 881 2 870 2 435 2 
539 2 492 2 
463 2 360 2 870 2 435 2 
238 2 457 2 
940 2 77 2 
749 2 755 2 
816 2 361 2 
679 2 940 2 816 2 
940 2 816 2 556 2 
999 2 816 2 940 2 
816 2 940 2 82 2 
282 6 432 2 463 2 228 6 509 2 542 2 453 2 870 2 
1051 2 609 2 
840 2 809 2 364 2 748 2 243 2 891 2 660 4 772 2 521 4 578 2 1017 2 541 6 352 2 1058 2 337 2 123 2 549 2 1006 2 
112 2 75 2 
682 2 
146 2 284 2 979 2 980 2 724 2 560 2 18 2 991 8 571 4 309 2 313 2 738 2 315 2 585 26 586 6 740 8 872 4 590 2 591 2 37 2 327 2 596 4 1013 6 600 2 601 2 464 2 757 2 884 4 887 2 341 2 343 2 1024 2 345 2 475 2 482 2 626 4 904 2 628 2 777 4 907 2 366 2 73 2 371 2 645 2 920 4 90 2 505 2 665 6 391 2 801 2 669 2 1062 4 398 2 400 2 109 2 937 4 115 2 814 2 257 2 943 4 526 26 703 2 1079 2 954 2 705 2 708 2 134 6 828 2 142 2 546 2 712 2 837 2 966 2 1092 2 280 2 281 2 
146 2 284 2 979 2 980 2 724 2 560 2 18 2 991 8 571 4 309 2 997 2 313 2 738 2 315 2 585 26 174 2 586 6 740 8 872 4 590 2 591 2 37 2 327 2 596 4 1013 6 600 2 601 2 464 2 884 4 887 2 341 2 343 2 1024 2 345 2 482 2 626 6 904 2 628 2 777 4 907 2 366 2 73 2 371 2 645 2 908 2 920 2 90 2 665 6 666 2 391 2 801 2 669 2 1062 4 398 2 400 2 109 2 937 4 404 2 405 2 115 2 814 2 257 2 943 4 526 26 703 2 954 2 1079 2 705 2 708 2 134 6 828 2 142 2 546 2 712 2 837 2 966 2 1092 2 280 2 281 2 
673 2 
201 2 550 2 
875 2 765 2 1010 4 1034 2 307 4 39 2 844 2 346 2 350 2 259 2 298 2 273 2 582 2 141 2 424 2 221 2 713 2 125 2 
284 2 1034 2 1035 6 844 4 370 2 647 2 298 4 221 2 225 2 23 2 386 2 307 4 925 2 573 2 95 6 234 2 864 2 582 6 585 12 931 2 586 4 674 2 398 2 1064 2 326 2 1065 2 1007 2 875 2 592 4 1010 4 937 2 37 2 938 2 39 4 752 2 180 4 259 2 884 2 526 6 125 4 765 2 54 2 952 4 346 2 1079 2 954 2 533 4 57 2 350 2 623 4 139 2 273 2 141 2 424 2 546 2 904 2 713 2 836 2 838 2 
284 2 1034 2 1035 6 844 4 1038 2 647 2 298 4 221 2 225 2 23 2 386 2 307 4 925 2 573 2 95 4 234 2 864 2 582 4 585 12 931 2 586 4 674 2 398 2 1064 2 326 2 1065 2 1007 2 875 2 592 4 1010 4 937 2 37 2 938 2 39 6 752 2 180 4 259 2 884 2 526 6 125 4 765 2 54 2 952 4 346 2 1079 2 954 2 533 4 57 2 350 2 623 4 139 2 273 2 141 2 424 2 546 2 904 2 713 2 836 2 838 2 
284 2 1034 2 1035 6 844 4 647 2 298 4 221 2 225 2 23 2 386 2 307 4 925 2 573 2 95 6 234 2 864 2 582 6 236 2 585 12 931 2 586 4 674 2 398 2 1064 2 326 2 1065 2 1007 2 875 2 592 4 1010 4 937 2 37 2 938 2 39 6 752 2 180 8 259 2 884 2 526 6 125 4 765 2 54 2 952 4 346 2 1079 2 954 2 533 4 57 2 350 2 623 4 139 2 273 2 141 2 424 2 546 2 904 2 713 2 836 2 838 2 
284 2 1034 2 1035 8 844 4 1038 2 647 2 298 4 221 2 225 2 23 2 386 2 307 4 925 2 573 2 95 10 234 2 864 2 582 6 236 2 585 12 931 2 586 4 674 2 398 2 1064 2 326 2 1065 2 1007 2 875 2 592 4 937 2 1010 4 37 2 938 2 39 8 752 2 180 8 259 2 884 2 526 6 125 4 765 2 54 2 952 8 346 2 1079 2 954 2 533 4 57 2 350 2 623 4 139 2 273 2 141 2 424 2 546 2 904 2 713 2 836 2 838 2 
284 2 1034 2 1035 6 844 4 647 2 298 4 221 2 225 2 23 2 386 2 307 4 925 2 573 2 95 10 234 2 864 2 582 6 236 2 585 12 931 2 586 4 674 2 398 2 1064 2 326 2 1065 2 1007 2 875 2 592 4 1010 4 937 2 37 2 938 2 39 6 752 2 180 8 259 2 884 2 526 6 125 4 765 2 54 2 952 8 346 2 1079 2 954 2 533 4 57 2 350 2 623 4 139 2 273 2 141 2 424 2 546 2 904 2 713 2 836 2 838 2 
283 1 284 2 844 4 845 6 855 2 298 4 857 2 862 2 23 2 307 4 571 4 308 2 25 10 572 1 573 2 26 6 864 2 313 12 315 2 582 4 585 46 586 6 869 6 872 4 326 2 590 2 35 6 591 2 592 6 875 2 37 2 595 2 596 4 39 8 601 2 334 2 335 2 884 4 610 2 887 2 51 2 341 2 54 2 346 2 57 2 350 2 898 6 623 4 624 2 901 1 902 7 626 6 904 2 628 2 907 2 367 2 371 2 645 2 647 2 911 6 653 6 386 2 925 2 665 6 391 2 669 2 674 2 105 6 398 2 400 2 937 4 938 2 404 2 685 2 115 2 941 2 692 2 119 2 699 1 125 4 127 2 703 2 950 1 954 2 705 2 419 1 707 2 134 6 139 4 141 2 424 2 711 6 142 2 713 2 712 4 964 6 146 2 977 2 725 2 989 2 729 4 991 4 451 2 173 1 174 2 740 4 454 2 1007 4 1010 4 1013 8 752 2 180 2 1022 6 765 2 471 7 1024 2 203 6 482 2 1028 2 777 2 1031 6 1034 2 1035 12 1038 4 1040 2 497 6 219 6 221 2 220 2 1047 2 226 1 225 2 230 2 229 2 797 4 1053 2 234 2 801 2 804 6 1064 2 1065 2 257 2 259 2 526 24 1079 2 533 8 269 2 271 2 1085 1 831 2 273 2 546 2 837 2 836 2 277 2 278 8 838 2 1092 2 280 2 
146 2 284 2 977 2 844 4 845 6 725 2 855 2 298 4 857 2 989 2 862 2 729 4 991 8 23 2 308 2 571 4 307 4 25 10 26 6 573 2 996 2 451 2 313 12 864 2 315 2 582 8 585 48 174 2 869 6 586 6 740 8 454 2 326 2 872 4 35 6 590 2 1007 4 591 2 875 2 592 6 1010 4 595 2 37 2 1013 8 596 4 39 8 601 2 752 2 180 6 335 2 334 2 884 4 1022 6 610 2 887 4 51 2 765 2 341 2 54 2 1024 2 346 2 57 2 203 6 898 6 350 2 623 4 482 2 624 2 626 6 904 2 628 2 1028 2 777 2 1031 6 907 2 367 2 1035 12 1034 2 1040 2 371 4 645 2 647 2 219 6 497 6 911 6 1047 2 220 2 221 2 653 6 225 2 229 2 230 2 386 2 925 2 1053 2 797 4 95 2 665 6 234 2 391 2 801 2 669 2 236 4 1062 2 804 6 105 6 674 2 398 2 1064 2 400 4 1065 2 937 4 938 2 404 2 685 2 115 2 691 2 257 2 259 2 692 2 941 2 119 2 526 26 125 4 127 2 703 2 954 2 1079 2 705 2 533 8 269 2 707 2 271 2 134 6 831 2 139 4 273 2 711 6 424 2 141 2 142 2 546 2 712 4 713 2 836 2 837 2 277 2 964 6 278 8 280 2 1092 2 838 2 
146 2 284 2 977 2 844 4 845 6 725 2 855 2 298 4 857 2 989 2 862 2 729 4 991 8 23 2 308 2 571 4 307 4 25 10 26 6 573 2 996 2 451 2 313 12 864 2 315 2 582 8 585 48 174 2 869 6 586 6 740 8 454 2 326 2 872 4 35 6 590 2 1007 4 591 2 875 2 592 6 1010 4 595 2 37 2 1013 8 596 4 39 8 601 2 752 2 180 6 335 2 334 2 884 4 1022 6 610 2 887 4 51 2 765 2 341 2 54 2 1024 2 346 2 57 2 203 6 898 6 350 2 623 4 482 2 624 2 626 6 904 2 628 2 1028 2 777 2 1031 6 907 2 367 2 1035 12 1034 2 1040 2 371 4 645 2 647 2 219 6 497 6 911 6 1047 2 220 2 221 2 653 6 225 2 229 2 230 2 386 2 925 2 1053 2 797 4 95 6 665 6 234 2 391 2 801 2 669 2 236 4 1062 2 804 6 105 6 674 2 398 2 1064 2 400 4 1065 2 937 4 938 2 404 2 685 2 115 2 691 2 257 2 259 2 692 2 941 2 119 2 526 26 125 4 127 2 703 2 952 4 1079 2 954 2 705 2 533 8 269 2 707 2 271 2 134 6 831 2 139 4 273 2 711 6 424 2 141 2 142 2 546 2 712 4 713 2 836 2 837 2 277 2 964 6 278 8 280 2 838 2 1092 2 
284 2 844 4 845 12 291 6 855 2 298 4 857 2 14 6 862 2 23 2 307 4 571 6 308 2 25 8 573 2 26 6 574 6 864 2 313 10 315 2 582 10 585 52 586 6 869 12 326 2 872 4 590 2 35 12 591 2 592 6 875 2 37 2 595 2 596 4 39 10 601 2 880 6 334 2 335 2 884 4 610 2 887 4 51 2 341 2 54 2 346 2 57 2 350 2 898 6 623 4 624 2 626 6 359 2 904 2 628 2 907 2 370 2 371 4 645 2 647 2 911 6 653 6 656 2 918 6 386 2 925 2 95 6 665 8 391 2 669 4 674 2 105 12 398 2 400 4 937 4 938 2 404 2 685 2 115 2 691 2 941 2 692 2 119 2 125 4 127 2 703 2 952 4 954 2 705 2 707 2 134 8 137 6 423 2 139 4 141 2 424 2 711 6 142 2 713 2 712 4 964 12 972 6 146 4 977 2 725 2 989 2 729 4 991 10 996 2 451 2 174 2 740 10 454 2 1007 4 1010 4 1013 12 752 2 180 6 462 2 1022 6 765 2 767 2 1024 2 478 2 203 12 482 2 1028 2 777 4 1031 6 1034 2 1035 16 1038 2 1040 2 497 6 219 6 221 2 220 2 1047 2 225 2 230 2 229 2 504 2 797 4 1053 2 234 2 510 6 801 2 236 4 1062 2 804 6 240 6 1064 2 1065 2 1072 2 257 4 259 2 526 24 1079 2 533 8 269 2 271 2 831 2 273 2 546 2 837 2 836 2 277 2 278 8 1092 2 838 2 280 4 
1007 2 1065 2 592 2 1010 2 1035 4 1034 2 39 6 752 2 180 6 647 2 298 4 221 2 125 4 765 2 54 2 307 2 952 4 925 2 573 2 95 4 533 2 57 2 864 2 623 2 236 2 273 2 582 6 585 4 424 2 141 2 713 2 674 2 836 2 1064 2 838 2 
718 2 284 2 554 2 286 2 6 3 298 4 307 2 571 4 25 2 573 2 998 2 313 4 864 2 315 2 582 6 585 28 174 2 586 6 872 4 1007 2 590 2 591 2 592 2 1010 2 37 2 596 4 1013 8 39 6 752 2 180 6 884 4 765 2 341 2 54 2 1024 2 57 2 623 2 482 2 626 6 904 2 628 2 777 3 907 2 367 2 1035 4 1034 2 645 2 647 2 221 2 651 2 916 2 925 2 95 2 665 6 234 2 391 2 395 2 801 2 669 3 236 2 674 2 398 2 1064 2 1065 2 937 4 682 2 404 2 115 2 526 24 125 4 823 2 703 2 954 2 1079 2 705 2 533 2 134 6 273 2 141 2 424 2 546 2 142 2 712 2 713 2 836 2 837 2 1092 2 280 3 838 2 
284 2 1034 2 1035 6 844 4 647 2 298 4 221 2 225 2 23 2 386 2 307 4 925 2 573 2 95 10 234 2 864 2 582 6 236 2 585 12 931 2 586 4 674 2 398 2 1064 2 326 2 1065 2 1007 2 875 2 592 4 1010 4 937 2 37 2 938 2 39 6 752 2 180 8 259 2 884 2 526 6 125 4 765 2 54 2 952 8 346 2 1079 2 954 2 533 4 57 2 350 2 623 4 139 2 273 2 141 2 424 2 546 2 904 2 713 2 836 2 838 2 
284 2 1034 2 1035 8 844 4 370 2 298 4 221 2 225 2 384 2 23 2 386 2 307 4 925 2 573 2 95 10 234 2 864 2 582 8 236 2 585 12 586 4 674 2 398 2 1064 2 326 2 1065 2 1007 2 1066 4 875 2 592 4 937 2 1010 4 37 2 938 2 39 6 752 2 180 8 259 2 884 2 526 6 125 4 765 2 54 2 952 8 346 2 1079 2 954 2 533 4 57 2 350 2 479 2 623 4 139 2 273 2 141 2 424 2 546 2 904 2 713 2 836 2 838 2 
836 2 642 2 57 2 
836 2 642 2 57 2 
284 2 979 4 844 2 153 2 13 2 298 4 161 2 858 4 729 2 991 4 307 2 25 2 313 4 315 2 582 12 585 24 174 2 586 6 740 4 326 2 872 4 1007 4 591 2 592 4 1010 2 37 2 751 2 596 4 1013 2 39 12 601 4 752 2 180 6 884 4 1022 2 192 2 887 4 765 2 341 2 473 2 1024 2 57 4 350 2 623 2 482 2 626 6 904 2 628 2 484 2 629 2 777 2 906 2 907 2 1035 16 642 2 1038 4 370 4 371 4 645 2 221 2 654 2 225 2 920 2 797 2 95 6 665 2 928 2 391 2 801 2 236 4 674 2 398 2 400 4 937 4 404 2 115 2 253 2 259 2 260 2 526 16 125 4 703 2 952 4 1078 4 954 2 1079 2 705 2 533 4 134 2 141 4 142 2 546 2 712 6 837 2 836 2 1092 2 
729 2 229 2 473 2 25 2 346 2 201 2 926 2 313 2 852 2 831 2 585 4 467 2 546 2 161 2 654 2 1022 2 526 2 
284 2 979 4 844 4 153 2 293 2 725 2 298 4 161 2 858 4 991 4 23 2 307 2 313 2 315 2 582 12 585 24 174 2 586 6 740 4 454 2 326 2 872 4 1007 4 591 2 592 4 1010 2 595 2 37 2 596 4 1013 2 39 12 601 4 752 2 180 6 759 2 884 4 1022 2 192 2 887 4 765 2 341 2 473 2 1024 2 57 6 350 2 623 2 482 2 483 2 626 6 904 2 628 2 484 4 629 2 777 4 906 2 907 2 1035 16 642 2 1038 4 370 4 371 4 645 2 1047 2 221 2 87 2 654 2 225 2 91 2 386 2 388 2 797 2 95 6 665 2 928 2 391 2 801 2 236 4 674 2 398 2 400 4 937 4 404 2 115 2 253 2 259 2 260 2 526 16 125 4 703 2 952 4 1078 4 954 2 1079 2 705 2 533 4 134 2 139 4 141 4 142 2 546 2 712 6 837 2 836 4 547 2 1092 2 
284 2 979 4 844 4 153 2 293 2 725 2 298 4 161 2 858 4 729 2 991 4 23 2 307 2 25 2 313 4 315 2 582 12 585 24 174 2 586 6 740 4 454 2 326 2 872 4 1007 4 591 2 592 4 1010 2 595 2 37 2 596 4 1013 2 39 12 601 4 752 2 180 6 884 4 1022 2 192 2 887 4 765 2 341 2 473 2 1024 2 57 6 350 2 623 2 482 2 626 6 904 2 628 2 484 2 629 2 777 2 906 2 907 2 72 2 1035 16 642 2 1038 4 370 4 371 4 645 2 1047 2 221 2 654 2 225 2 920 1 231 2 386 2 388 2 797 2 95 6 665 2 928 2 391 2 801 2 103 2 236 4 674 2 398 2 400 4 937 4 110 2 404 2 115 2 253 2 259 2 260 2 526 16 125 4 703 2 952 4 1078 4 954 2 1079 2 957 2 705 2 533 4 134 2 139 4 141 4 142 2 546 2 712 6 837 2 836 4 1092 2 
2 2 1 3 284 2 285 2 286 2 554 2 5 2 6 2 7 1 8 2 9 2 848 2 557 2 558 2 296 2 299 2 300 6 18 2 19 14 569 2 306 2 24 4 571 12 575 4 576 4 577 6 27 2 313 2 314 2 865 4 315 4 581 4 31 2 585 46 586 6 320 2 872 10 323 2 590 2 591 2 593 2 37 2 596 8 601 4 604 2 332 2 333 2 607 1 884 4 338 2 886 2 612 4 51 2 890 2 340 12 617 4 341 4 345 2 896 4 897 1 58 2 621 2 622 6 59 14 353 2 900 4 903 1 358 2 626 17 627 3 359 2 904 2 628 4 64 2 633 2 907 2 634 10 69 2 366 14 73 2 78 12 645 2 649 2 915 16 86 4 85 12 374 4 656 2 377 2 920 1 378 2 659 2 381 24 90 2 923 2 387 2 663 2 665 14 927 2 391 2 395 2 669 19 396 2 397 2 398 2 935 16 108 3 937 4 680 2 404 5 685 2 686 2 115 2 688 2 409 2 410 2 941 2 694 2 942 2 124 2 126 8 700 2 418 4 948 2 703 2 130 2 953 8 954 2 705 4 958 6 707 2 708 2 134 14 136 3 423 2 960 4 140 2 142 4 712 2 143 1 144 10 426 2 970 12 147 6 146 46 720 2 974 2 717 2 721 4 978 4 980 2 722 2 431 2 724 2 158 6 441 2 440 2 162 4 443 16 991 25 447 2 994 2 168 4 998 2 451 2 738 2 174 5 175 2 1001 2 740 24 1002 12 1003 16 746 2 1008 4 1009 16 1013 28 1014 2 459 2 460 2 462 2 756 4 184 2 465 4 1020 12 195 2 767 2 768 2 1025 4 478 2 482 2 774 4 1028 2 777 19 780 2 212 16 1037 2 489 2 1039 2 216 2 220 4 1048 2 224 1 790 2 1050 2 791 10 793 2 501 2 1052 2 502 4 504 2 796 2 233 4 511 2 512 2 801 2 800 3 1059 2 237 2 807 2 808 4 810 8 248 2 1070 2 1071 2 251 2 522 2 256 14 525 2 258 12 257 20 819 2 526 38 821 10 822 2 264 2 529 4 266 1 1077 2 1079 2 267 2 535 10 827 4 272 4 543 6 1087 2 1088 2 546 2 837 2 276 2 279 2 281 2 280 16 1092 2 
821 2 590 2 146 6 634 2 69 2 700 2 924 2 571 2 1013 2 489 2 665 2 8 2 460 2 27 2 134 2 136 2 396 2 669 2 585 2 144 4 777 2 426 2 526 2 280 2 
821 2 590 2 146 6 634 2 69 2 700 2 924 2 571 2 1013 2 489 2 665 2 8 2 460 2 27 2 134 2 136 2 396 2 669 2 585 2 144 4 777 2 426 2 526 2 280 2 
821 2 590 2 146 6 634 2 69 2 700 2 924 2 571 2 1013 2 489 2 665 2 8 2 460 2 27 2 134 2 136 2 396 2 669 2 585 2 144 4 777 2 426 2 526 2 280 2 
242 4 590 2 1 3 810 2 149 2 69 2 976 4 151 2 978 2 1013 2 559 3 158 6 909 2 939 2 258 4 261 4 914 2 915 5 17 2 526 4 657 4 162 2 126 2 305 2 418 2 474 2 953 2 1025 2 233 2 56 2 537 2 272 2 800 3 960 2 543 4 900 2 669 3 585 10 743 4 777 3 
242 4 590 2 1 2 810 2 149 2 69 2 976 4 151 2 978 2 1013 2 783 2 559 2 158 6 909 2 939 2 258 4 261 4 914 2 915 4 17 2 526 4 657 4 162 2 126 2 305 2 418 2 474 2 953 2 1025 2 958 2 233 2 56 2 896 2 537 2 272 2 800 2 960 2 543 4 900 2 669 2 585 10 743 4 777 2 
242 4 590 2 1 2 810 2 149 2 69 2 976 4 151 2 978 2 1013 2 783 2 559 2 158 6 909 2 939 2 258 4 261 4 914 2 915 4 17 2 526 4 657 4 162 2 126 2 305 2 418 2 474 2 953 2 1025 2 958 2 233 2 56 2 896 2 537 2 272 2 800 2 960 2 543 4 900 2 669 2 585 10 743 4 777 2 
242 4 590 2 1 2 810 2 149 2 69 2 976 4 151 2 978 2 1013 2 783 2 559 2 158 6 909 2 939 2 258 4 261 4 914 2 915 4 17 2 526 4 657 4 162 2 126 2 305 2 418 2 474 2 953 2 1025 2 958 2 233 2 56 2 896 2 537 2 272 2 800 2 960 2 543 4 900 2 669 2 585 10 743 4 777 2 
242 4 590 2 1 2 810 2 149 2 69 2 976 4 151 2 978 2 1013 2 783 4 559 2 158 6 909 2 939 2 258 4 261 4 914 2 915 4 17 2 526 4 657 4 162 2 126 2 305 2 418 2 474 2 953 2 1025 2 958 4 233 2 56 2 896 4 537 2 272 2 800 2 960 2 543 4 900 2 669 2 585 10 743 4 777 2 
799 2 498 2 1075 2 175 2 199 2 392 2 
366 2 356 2 795 2 638 2 214 2 287 2 392 2 
0 2 35 2 369 1 599 2 684 2 605 2 687 2 330 2 1074 2 182 2 218 2 726 1 693 1 1049 1 526 8 380 2 417 2 389 1 131 2 1079 2 536 2 100 2 585 10 672 2 515 2 399 2 
810 6 487 2 488 2 876 2 248 2 978 6 1073 2 753 2 783 2 258 12 915 16 162 6 612 2 126 6 378 2 953 6 1025 6 200 2 168 2 233 2 958 5 577 4 896 2 272 6 543 4 1061 2 517 4 
194 2 128 2 842 2 893 2 113 2 1082 4 754 2 43 2 261 2 585 1 33 1 742 2 1091 6 776 2 743 2 526 1 971 2 657 2 
194 2 128 2 842 2 893 4 113 2 1082 4 754 2 43 2 261 2 776 2 742 4 1091 6 743 2 657 2 971 4 
194 2 128 2 842 2 893 8 113 2 1082 4 754 6 43 2 261 2 585 1 33 1 776 8 742 8 1091 10 743 2 526 1 657 2 971 8 
194 2 128 2 842 2 893 2 113 2 1082 2 43 2 261 2 742 2 1091 2 743 2 657 2 971 2 
148 2 429 2 551 2 5 2 431 2 297 2 299 2 565 2 991 16 447 2 24 2 575 6 28 2 315 2 739 2 585 26 174 2 177 2 872 10 596 8 756 6 333 2 465 6 186 2 762 2 336 2 48 2 611 2 614 2 341 2 620 4 897 4 481 2 353 2 626 18 636 2 216 2 1048 2 1050 2 920 2 659 2 794 2 235 2 106 2 1071 4 404 2 116 2 813 1 817 2 263 2 122 2 526 26 946 3 701 4 1076 4 266 2 135 2 1087 2 142 2 967 2 
5 2 154 2 849 2 851 2 297 6 160 4 1048 2 859 4 986 6 224 2 565 2 443 2 920 2 658 4 444 4 991 14 792 2 447 2 1054 2 315 2 739 2 174 8 585 28 177 6 107 2 872 14 873 2 1009 10 596 14 404 8 597 2 406 4 606 4 756 8 116 2 607 2 186 2 695 2 47 2 762 2 48 2 122 2 526 26 611 6 889 2 946 2 341 2 129 4 618 4 824 2 534 2 897 2 349 2 421 2 135 2 903 2 832 2 142 2 626 36 143 6 969 2 970 10 
5 2 431 2 216 2 1048 2 299 2 224 1 565 2 1050 2 443 2 659 2 991 4 447 2 1052 2 24 4 575 4 28 2 315 4 174 4 585 20 872 8 1009 2 596 6 1071 2 404 4 756 4 333 2 607 1 465 4 186 2 695 2 762 2 48 2 263 2 526 20 341 4 266 2 897 2 421 2 353 2 903 1 1087 2 142 4 626 14 143 1 970 2 
145 2 5 2 494 2 495 2 297 2 1048 2 565 2 789 2 376 2 920 2 444 2 731 2 991 14 447 2 22 2 1055 2 736 2 315 2 174 6 585 22 1002 2 177 2 872 10 518 2 596 10 404 6 406 2 756 2 523 2 118 2 186 2 608 2 762 2 1021 4 48 2 944 2 526 22 611 2 415 2 264 2 341 2 949 2 618 2 955 4 825 2 135 2 142 2 626 28 427 4 968 2 362 2 
744 2 

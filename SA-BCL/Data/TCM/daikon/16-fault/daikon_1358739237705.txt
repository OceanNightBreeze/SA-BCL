#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 899 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 827 195 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 578 868 396 132 564 847 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 49 709 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 49 709 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 550 (320,526) 697 (179,858) (320,526) 364 (179,858) 668 271 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 550 (320,526) 697 (179,858) (320,526) 364 (179,858) 668 271 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 154 
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 612 224 453 102 257 425 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 354 873 450 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 74 354 873 450 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 290 354 873 450 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 478 450 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Invariants:Invariants()V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3_1()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:gte(II)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([J[J)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37692 | = null
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Assert:assertTrue(Z)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.Invariant:prob_and(DD)D
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3371 | = null
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:dimensions()I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltwiseLT([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 49875 | if (x) -> if (!x)
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:concat([I[I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | STATEMENT | 14158 | stmt -> ;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant; | RETURN | 547 | return null
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Ppt:Ppt()V
daikon.Quant:memberOf(F[F)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseEqual([I)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.diff.RootNode:RootNode()V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:relate_var()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:sum([I)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:lexLT([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern([J)[J
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:setEqual([I[I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 2824 | if (x) -> if (!x)
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String; | RETURN | 69186 | return null
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:getEndColumn()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltsGT([II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:logDetail()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound; | ASSIGN | 23432 | = null
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3_13()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:logDetail()Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:ReadByte()C
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:noDups([I)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ValueTuple:size()I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:memberOf(J[J)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:pow(II)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ProglangType:isScalar()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:lte(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.ProglangType:isIntegral()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptSlice2:arity()I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:negate(I)I
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaCharStream:getEndLine()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20755 | = null
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 127014 | + -> /
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_48()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
256 2 803 2 525 4 67 2 357 2 630 2 131 2 694 2 739 2 
640 6 879 2 895 2 82 6 479 2 249 2 615 2 97 6 737 2 456 2 42 2 
874 2 768 2 492 4 513 2 105 4 465 4 694 2 18 6 899 2 67 2 39 2 452 4 326 2 
762 16 2 2 804 10 807 10 769 10 643 2 400 10 274 4 710 4 142 10 67 6 843 2 686 2 360 2 282 4 316 2 318 12 820 8 694 6 392 8 602 6 632 4 291 8 323 29 395 6 887 2 53 8 888 26 54 16 370 16 
423 6 40 4 
4 2 
856 2 735 2 433 2 494 2 169 2 64 2 171 2 438 2 498 2 67 4 813 2 440 2 682 2 228 2 506 2 11 2 69 2 690 2 509 2 185 2 694 4 234 4 516 2 239 2 823 4 757 2 131 2 702 2 583 2 707 4 466 2 356 2 305 2 843 2 716 2 413 2 152 2 45 2 368 2 422 2 670 2 215 4 485 2 672 2 
762 32 892 6 804 16 855 4 807 16 769 16 831 6 400 6 402 6 351 8 710 2 142 16 200 2 67 4 499 2 533 6 281 2 474 4 360 2 182 2 260 4 445 2 318 22 232 4 694 4 754 4 602 4 363 4 481 4 291 6 323 54 395 4 888 48 634 6 53 18 127 6 54 32 370 32 162 2 
414 2 305 2 652 2 
842 2 246 2 458 2 350 2 46 2 253 10 201 2 8 2 52 22 470 2 759 2 672 2 504 2 781 2 
762 2 804 2 807 2 372 2 769 2 551 2 400 4 710 2 334 2 142 2 383 2 318 2 721 2 602 2 698 2 266 2 323 6 343 2 53 2 520 2 888 4 54 2 370 2 
762 8 892 6 855 4 804 4 807 4 769 4 747 2 318 4 274 2 142 4 754 4 774 2 323 16 888 12 634 6 54 8 370 8 
57 2 273 2 429 2 707 4 248 4 298 4 708 4 374 4 276 14 34 2 436 2 303 2 352 4 593 2 9 2 902 2 305 8 652 6 473 2 181 10 384 62 12 4 509 4 414 2 663 2 151 4 416 2 93 2 720 4 187 4 753 4 573 2 604 2 20 2 757 2 269 2 371 10 329 2 853 2 29 4 
283 2 3 2 4 2 150 2 696 2 439 2 559 2 534 2 195 2 827 2 454 2 
0 4 805 16 331 2 808 6 554 1 333 2 556 2 107 2 678 1 679 2 111 2 680 1 560 16 10 2 113 2 562 4 339 2 229 6 340 5 687 2 689 2 819 32 233 2 695 2 694 34 448 2 235 8 572 2 821 2 126 12 22 2 242 2 28 2 703 2 705 3 828 2 135 2 829 24 457 2 347 2 459 4 460 2 32 1 709 2 464 2 833 2 590 2 144 2 145 2 355 2 357 2 255 2 596 3 149 2 361 2 258 4 845 2 259 1 599 2 477 2 47 2 482 2 365 3 49 2 726 2 51 2 160 1 606 2 728 1 729 2 491 3 611 1 612 2 59 1 614 2 373 1 277 1 736 6 495 1 173 2 67 32 864 2 620 1 279 3 176 2 178 2 505 2 870 2 875 2 876 3 880 2 284 1 748 2 628 2 883 2 289 8 72 2 290 12 517 2 886 2 190 3 758 2 193 3 521 2 296 3 894 2 79 1 198 2 83 3 772 3 401 2 898 2 646 2 86 2 304 2 773 16 89 2 776 2 405 2 777 2 532 2 903 1 203 2 406 4 407 32 90 2 313 2 91 2 314 2 661 4 665 2 907 3 417 2 543 2 544 2 322 6 96 2 911 2 796 2 799 2 324 2 671 2 100 2 424 24 914 4 915 4 800 8 673 16 916 2 
128 2 694 2 
95 2 717 2 694 4 
399 2 
6 20 676 2 335 2 811 28 681 2 814 12 685 14 684 2 564 2 116 6 818 20 14 4 237 10 236 2 19 2 575 2 451 2 23 8 700 2 24 2 578 2 25 12 129 2 345 26 582 2 132 2 704 2 706 10 830 2 463 26 139 2 588 82 36 4 37 2 837 8 38 2 839 2 840 2 841 2 718 2 43 2 719 2 155 2 847 2 159 2 267 14 484 16 607 2 268 82 730 20 733 2 857 26 168 2 62 2 861 10 170 2 617 8 65 4 501 6 175 2 619 26 868 2 869 2 871 4 744 2 627 4 386 2 389 4 514 26 756 36 191 26 73 26 635 10 75 12 890 4 765 6 767 2 396 2 197 26 77 10 397 2 523 10 531 2 651 2 409 4 410 4 782 26 656 2 535 2 659 2 411 2 660 2 906 2 784 26 538 2 315 2 540 6 94 26 910 2 421 82 797 2 545 26 546 2 547 2 917 2 
806 2 183 2 84 1 631 2 
183 2 881 2 
183 2 398 2 787 2 305 2 293 2 244 2 632 2 
183 2 293 2 426 2 
183 2 293 2 376 2 
848 2 806 2 595 2 
183 2 293 2 
595 2 156 2 
183 2 825 2 
297 2 806 2 595 2 
806 2 207 2 26 2 
806 2 280 2 589 2 
732 2 806 2 44 2 
764 2 806 2 570 2 
330 2 595 2 
468 2 183 2 
143 2 26 2 
117 2 280 2 
732 2 353 2 
764 2 822 2 
639 2 595 2 
764 2 265 2 
732 2 683 2 
280 2 581 2 
723 2 26 2 
449 2 297 2 806 2 595 2 
449 2 297 2 806 2 595 2 731 2 
806 2 877 2 595 2 
806 2 231 2 595 2 
658 2 569 2 467 2 206 2 
164 2 305 2 244 2 222 2 
199 2 164 2 787 2 305 2 244 2 222 2 
183 2 305 2 293 2 244 2 17 2 632 2 
438 2 603 2 
305 2 244 2 632 2 309 2 
536 2 732 2 
764 2 312 2 
78 2 26 2 
280 2 851 2 
764 2 280 2 391 2 
764 2 184 2 280 2 
764 2 846 2 280 2 
764 2 202 2 280 2 
305 2 621 6 359 2 785 2 745 2 788 6 789 2 244 2 
595 2 714 2 
230 2 854 2 385 4 412 2 341 2 31 2 552 2 586 2 33 2 699 2 836 2 52 6 904 2 852 2 654 2 381 2 41 4 563 2 
806 2 487 2 
521 2 
0 4 611 2 612 2 331 2 808 2 333 2 107 2 736 4 679 2 67 18 176 2 562 4 339 2 229 6 567 4 284 2 819 2 694 18 124 2 821 2 886 2 22 2 192 2 758 2 524 2 709 2 145 2 773 6 355 2 776 2 357 2 406 4 147 2 407 6 408 2 845 2 661 4 665 2 47 2 543 2 322 2 420 2 96 2 49 2 605 2 671 6 324 2 161 2 916 2 729 2 
0 4 611 2 612 2 331 2 808 2 333 2 107 2 736 5 679 2 864 1 67 18 176 2 562 4 339 2 229 6 567 4 284 2 819 2 694 18 124 2 821 2 886 2 22 2 192 2 758 2 28 1 524 2 709 2 145 2 773 6 355 2 776 2 357 2 406 4 147 2 407 6 408 2 845 2 661 4 665 2 47 2 543 2 322 2 420 2 96 2 49 2 605 2 671 6 324 2 161 2 916 2 729 2 
810 2 
669 2 826 2 
271 2 0 2 331 2 858 2 809 8 615 2 333 2 107 2 221 8 7 2 67 6 174 2 378 2 737 4 503 4 179 2 339 2 229 4 70 2 571 2 750 4 694 12 751 2 342 4 393 2 518 2 889 2 891 2 456 4 763 2 134 2 136 2 640 6 82 6 85 4 775 2 778 2 780 2 406 2 655 2 358 2 42 2 598 2 845 2 665 2 320 2 480 2 542 2 668 2 364 2 213 10 96 2 369 2 97 6 912 2 725 4 216 2 325 2 609 2 674 4 
271 2 0 2 331 2 858 2 859 4 809 8 615 2 333 2 107 2 221 8 7 2 67 6 174 2 378 2 737 4 503 4 179 2 339 2 229 4 70 2 571 2 750 4 694 12 751 2 342 4 393 2 518 2 891 2 456 4 763 2 134 2 136 2 640 8 895 2 82 6 85 4 591 2 775 2 780 2 406 2 655 2 358 2 42 2 598 2 845 2 665 2 320 2 480 2 262 2 542 2 668 2 364 2 213 10 96 2 369 2 97 8 912 2 725 4 216 2 325 2 609 2 674 4 
271 2 134 2 640 2 82 2 750 4 85 2 668 2 369 2 342 4 7 2 912 2 378 2 174 2 737 2 179 2 609 2 358 2 456 2 
271 2 0 2 331 2 858 2 809 4 333 2 107 2 221 4 7 2 67 6 174 2 378 2 737 4 503 4 179 2 339 2 229 4 70 2 571 2 750 4 694 12 751 2 342 4 393 2 518 2 889 2 891 2 456 4 763 2 134 2 136 2 640 6 895 2 82 4 85 4 775 2 778 2 780 2 406 2 655 2 358 2 42 2 598 2 845 2 665 2 320 2 480 2 542 2 668 2 364 2 213 6 96 2 369 2 97 6 912 2 725 4 216 2 325 2 609 2 674 4 
271 2 0 2 331 2 858 2 809 4 333 2 107 2 221 4 7 2 67 6 174 2 378 2 737 4 503 4 179 2 339 2 229 4 70 2 879 2 571 2 750 4 694 12 751 2 342 4 393 2 518 2 889 2 891 2 456 4 763 2 134 2 136 2 640 4 82 6 85 4 775 2 778 2 780 2 406 2 655 2 358 2 42 2 598 2 845 2 665 2 320 2 480 2 542 2 668 2 364 2 213 6 96 2 369 2 97 6 912 2 725 4 216 2 325 2 609 2 674 4 
271 2 0 2 331 2 858 2 809 8 615 2 333 2 107 2 221 4 7 2 67 6 174 2 378 2 737 4 503 4 179 2 339 2 229 4 70 2 571 2 750 4 694 12 751 2 342 4 393 2 518 2 889 2 891 2 456 4 763 2 134 2 136 2 640 6 82 6 85 4 775 2 778 2 780 2 406 2 655 2 358 2 42 2 598 2 845 2 665 2 320 2 480 2 542 2 668 2 364 2 213 6 96 2 369 2 97 6 912 2 725 4 216 2 325 2 609 2 674 4 
271 2 0 2 331 2 858 2 809 8 615 2 333 2 107 2 221 8 7 2 67 6 174 2 378 2 737 4 503 4 179 2 339 2 229 4 70 2 879 2 571 2 750 4 694 12 751 2 342 4 393 2 518 2 889 2 891 2 456 4 763 2 134 2 136 2 640 6 82 8 85 4 775 2 778 2 780 2 406 2 655 2 358 2 42 2 598 2 845 2 665 2 320 2 480 2 542 2 668 2 364 2 213 10 96 2 369 2 97 8 912 2 725 4 216 2 325 2 609 2 674 4 
271 2 0 2 331 2 858 2 809 8 615 2 333 2 107 2 221 8 7 2 67 6 174 2 378 2 737 4 503 4 179 2 339 2 229 4 70 2 571 2 750 4 694 12 751 2 342 4 393 2 518 2 889 2 891 2 456 4 763 2 134 2 136 2 640 6 82 6 85 4 775 2 778 2 780 2 406 2 655 2 358 2 42 2 598 2 845 2 665 2 320 2 480 2 542 2 668 2 364 2 213 10 96 2 369 2 97 6 912 2 725 4 216 2 325 2 609 2 674 4 
0 4 550 2 331 2 5 2 808 2 809 2 333 2 107 2 7 2 679 2 812 2 226 2 562 4 339 2 229 6 567 4 691 2 819 2 571 2 694 28 697 2 124 2 342 4 821 2 126 2 22 2 28 2 456 4 134 2 145 2 355 2 594 2 357 2 147 2 358 2 42 4 258 2 598 2 845 2 480 2 47 2 364 2 369 2 725 6 161 2 609 2 729 2 271 2 612 2 858 2 736 6 63 2 497 2 67 18 864 2 378 2 174 2 380 4 737 4 176 2 503 8 179 2 70 2 879 4 71 2 750 4 751 2 189 2 290 2 393 2 886 4 518 2 758 2 891 2 763 2 640 4 82 8 526 2 302 2 85 4 773 6 776 2 775 2 778 2 780 2 406 4 407 8 661 4 211 2 665 2 320 2 321 2 542 2 543 2 668 2 322 2 96 2 97 12 912 2 671 6 324 2 914 2 915 2 325 2 916 2 674 4 
0 4 5 2 431 1 7 2 679 2 226 2 225 7 229 6 13 2 691 2 692 2 694 46 697 2 22 2 28 2 701 2 245 6 456 4 462 1 472 6 42 4 258 4 480 2 47 2 263 2 725 6 729 2 55 2 271 2 734 1 275 6 736 6 63 10 496 2 497 2 67 24 737 4 503 8 741 4 70 2 510 2 71 8 286 2 750 4 751 2 288 1 290 6 518 2 758 2 294 2 295 6 763 2 766 1 81 6 82 8 526 2 302 2 85 4 773 6 775 2 776 2 777 2 778 2 779 6 780 2 321 2 320 2 791 2 543 2 542 2 322 2 96 2 95 6 97 12 798 2 324 2 325 2 800 2 549 6 550 2 331 2 808 2 333 2 809 6 107 2 557 2 812 2 562 4 339 2 567 4 819 2 571 2 342 4 124 2 821 2 126 6 576 7 128 6 134 2 136 2 585 2 587 2 145 2 355 2 357 2 594 2 358 2 147 4 148 2 845 2 598 2 600 2 157 6 364 2 369 2 367 1 161 2 609 2 163 6 612 2 613 1 858 2 615 4 862 2 864 2 174 2 378 2 380 4 866 2 176 2 179 2 180 6 625 6 626 1 189 2 393 2 886 12 891 4 640 8 642 6 399 6 647 1 406 4 407 8 655 2 661 4 665 2 211 2 418 2 667 2 668 2 213 2 214 6 912 2 671 6 914 4 915 4 216 2 916 2 674 4 
0 4 549 6 550 2 331 2 5 2 808 2 809 6 333 2 107 2 221 4 557 2 7 2 679 2 812 2 226 2 562 4 339 2 229 6 567 4 13 2 692 2 691 2 819 2 571 2 694 46 697 2 124 2 342 4 821 2 126 6 22 2 128 6 28 2 245 6 701 2 456 4 134 2 136 2 585 2 587 2 145 2 355 2 594 2 357 2 472 6 147 4 358 2 148 2 42 4 258 4 598 2 845 2 600 2 480 2 157 6 47 2 263 2 364 2 369 2 725 6 161 2 609 2 55 2 729 2 163 6 271 2 612 2 858 2 615 4 275 6 736 6 63 10 496 2 862 2 497 2 67 24 864 2 378 2 174 2 866 2 380 4 737 4 176 2 503 8 179 2 180 6 741 4 625 6 70 2 510 2 286 2 71 8 750 4 751 2 189 2 290 6 393 2 886 12 518 2 758 2 294 2 295 6 891 4 763 2 640 8 642 6 399 6 81 6 82 8 526 2 302 2 85 4 773 6 776 2 775 2 777 2 779 6 778 2 780 2 406 4 655 2 407 8 661 4 211 2 665 2 320 2 321 2 418 2 791 2 667 2 542 2 543 2 668 2 322 2 95 6 213 6 96 2 97 12 214 6 798 2 912 2 671 6 324 2 914 4 216 2 915 4 325 2 800 2 916 2 674 4 
0 4 549 6 550 2 331 2 5 2 808 4 809 6 333 2 107 2 221 4 557 2 7 2 679 2 812 2 226 2 562 4 339 2 229 6 444 2 567 6 13 2 692 2 819 4 571 2 121 2 694 44 697 2 124 2 342 4 821 2 126 6 22 2 128 6 28 2 245 6 701 2 456 4 134 2 348 2 585 2 587 2 145 2 355 2 594 2 357 2 713 2 472 6 147 4 358 2 148 2 42 4 258 4 598 2 845 2 600 2 480 2 157 6 47 2 263 2 364 2 369 2 725 6 161 2 609 2 55 2 729 2 163 6 271 2 612 2 858 2 615 4 275 6 860 2 736 6 63 8 496 2 862 2 497 2 67 22 864 2 378 2 174 2 866 2 380 4 737 4 176 2 503 8 179 2 180 6 741 4 625 6 70 2 879 2 510 2 286 2 71 8 750 4 751 2 189 2 290 6 755 2 393 2 886 10 518 2 758 2 294 2 295 6 891 2 763 2 640 10 642 6 399 6 81 6 895 2 82 10 526 2 302 2 85 4 773 8 776 2 775 2 777 2 779 6 778 2 780 2 406 4 407 12 661 4 211 2 665 2 320 2 321 2 418 2 791 2 667 2 542 2 543 2 668 2 322 4 95 6 213 4 96 2 97 16 214 6 798 2 912 2 671 8 324 2 914 4 915 4 325 2 800 2 916 2 674 4 
763 2 134 2 640 6 82 6 615 2 809 6 221 4 7 2 775 2 378 2 174 2 778 2 737 4 503 2 780 2 358 2 42 2 70 2 598 2 571 2 480 2 750 2 694 4 542 2 213 4 97 4 342 2 393 2 518 2 912 2 725 2 325 2 609 2 674 2 456 4 
0 4 331 2 808 3 333 2 809 6 556 2 107 2 223 2 7 2 679 2 442 2 562 4 339 2 229 6 567 4 691 2 819 3 571 2 233 2 694 28 342 2 124 2 821 2 22 2 28 2 456 4 134 2 145 2 355 2 357 2 254 2 147 2 358 2 42 2 598 2 845 2 480 2 47 2 483 2 725 2 161 2 609 2 729 2 612 2 615 2 736 6 63 2 67 24 864 2 174 2 378 2 737 4 503 2 176 2 70 2 750 2 751 2 393 2 886 4 518 2 758 2 521 2 763 2 640 6 82 6 773 6 89 2 776 2 775 2 778 2 780 2 406 4 307 2 407 8 661 4 665 2 543 2 794 3 542 2 322 3 96 2 213 2 97 4 912 2 324 2 671 6 325 2 916 2 674 2 
310 2 598 2 571 2 
310 2 598 2 571 2 
0 4 331 2 5 2 432 4 333 2 809 6 107 2 221 4 7 2 441 2 562 4 339 2 229 6 817 2 819 2 571 4 694 24 697 2 124 2 342 2 821 2 344 2 126 4 22 2 28 2 456 4 136 2 247 4 592 2 145 2 355 2 357 2 147 6 42 4 258 4 598 4 845 2 154 2 153 2 47 2 364 2 725 4 161 2 488 2 729 2 56 4 612 2 166 2 858 2 615 4 736 6 63 2 67 16 864 2 378 4 174 2 380 2 737 4 176 2 503 4 179 2 741 2 70 2 879 4 390 2 750 2 884 2 290 4 393 2 886 4 758 2 891 2 640 12 642 2 80 2 895 4 82 12 85 4 86 2 88 2 773 2 776 2 777 4 406 4 407 2 310 2 661 4 211 2 664 2 665 2 317 2 908 2 666 2 543 2 668 2 96 2 213 6 97 16 324 2 671 2 914 4 216 2 915 4 916 2 674 2 
741 2 550 2 461 2 331 2 692 2 166 2 642 2 104 2 908 2 694 4 63 2 669 2 369 2 886 2 344 2 724 2 67 2 
0 4 331 2 5 2 432 4 333 2 809 6 107 2 221 4 7 2 441 4 562 4 339 2 229 6 819 4 571 4 15 2 694 20 697 2 124 2 342 2 821 2 126 4 22 2 28 2 456 4 136 2 247 4 145 2 355 2 357 2 147 6 42 4 258 4 598 6 845 2 154 2 47 2 364 2 725 4 161 2 488 2 729 2 56 4 612 2 166 2 858 2 615 4 736 6 375 2 67 14 864 2 378 4 174 2 380 2 737 4 503 4 176 2 179 2 70 2 879 4 287 2 750 2 884 2 290 4 393 2 886 2 394 2 758 2 891 4 640 12 80 2 895 4 82 12 403 2 85 4 86 1 88 2 773 2 776 2 777 4 406 4 655 2 407 2 310 2 661 4 211 2 664 2 665 2 317 2 908 2 666 2 543 2 668 2 96 2 213 6 97 16 324 2 671 2 914 4 216 2 915 4 916 2 674 2 328 2 
0 4 331 2 5 2 432 4 333 2 809 6 107 2 221 4 7 2 441 2 562 4 339 2 229 6 819 2 571 4 694 24 697 2 124 2 342 2 821 2 344 2 126 4 22 2 28 2 456 4 136 2 247 4 145 2 355 2 357 2 147 6 42 4 258 4 598 6 845 2 154 2 47 2 364 2 725 4 161 2 488 2 729 2 56 4 58 2 612 2 166 2 858 2 615 4 736 6 63 2 67 16 864 2 378 4 174 2 380 2 737 4 176 2 503 4 179 2 741 2 70 2 879 4 750 2 884 2 290 4 393 2 886 4 758 2 891 4 196 2 640 12 522 2 641 2 642 2 80 2 895 4 82 12 403 2 85 4 86 1 88 2 773 2 776 2 777 4 406 4 655 2 407 2 310 2 661 4 211 2 664 2 665 2 317 2 908 2 666 2 543 2 668 2 96 2 213 6 97 16 324 2 671 2 914 4 216 2 915 4 427 2 916 2 674 2 
257 2 612 2 138 2 749 2 16 2 108 2 694 4 543 2 224 2 22 2 758 2 425 2 102 2 623 2 561 2 453 2 76 2 
584 2 808 3 896 2 530 1 437 2 773 2 679 2 67 2 838 2 867 2 407 2 816 4 567 2 508 2 882 2 120 2 819 3 694 2 322 3 850 2 671 2 99 2 346 3 701 6 760 2 
584 2 808 2 896 2 437 2 773 2 679 2 67 2 838 2 867 2 407 2 816 4 567 2 508 2 882 2 120 2 819 2 694 2 322 2 850 2 671 2 99 2 346 2 701 6 760 2 
584 2 808 2 896 2 437 2 773 2 679 2 67 2 838 2 867 2 407 2 816 4 567 2 508 2 882 2 120 2 819 2 694 2 322 2 850 2 671 2 99 2 346 2 701 6 760 2 
801 2 805 2 804 2 807 2 553 4 679 2 67 4 560 2 566 2 119 3 568 2 819 3 285 2 694 10 188 4 291 4 125 4 395 2 888 4 762 2 761 2 769 2 527 2 142 2 529 6 901 2 469 3 648 2 146 4 838 2 407 2 783 2 261 4 319 2 792 3 322 3 849 2 323 6 54 2 370 2 
761 2 762 2 801 2 804 2 805 2 807 2 769 2 553 4 527 2 142 2 901 2 529 6 469 2 679 2 146 4 648 2 67 4 560 2 838 2 407 2 783 2 360 2 566 2 568 2 119 2 819 2 285 2 261 4 318 2 319 2 792 2 694 10 188 4 322 2 125 4 323 4 291 4 849 2 395 2 53 2 888 4 54 2 370 2 
761 2 762 2 801 2 804 2 805 2 807 2 769 2 553 4 527 2 142 2 901 2 529 6 469 2 679 2 146 4 648 2 67 4 560 2 838 2 407 2 783 2 360 2 566 2 568 2 119 2 819 2 285 2 261 4 318 2 319 2 792 2 694 10 188 4 322 2 125 4 323 4 291 4 849 2 395 2 53 2 888 4 54 2 370 2 
761 2 762 2 801 2 804 2 805 2 807 2 769 2 553 4 527 2 142 2 901 2 529 6 469 2 679 2 146 4 648 2 67 4 560 2 838 2 407 2 783 2 360 2 566 2 568 2 119 2 819 2 285 2 261 4 318 2 319 2 792 2 694 10 188 4 322 2 125 4 323 4 291 4 849 2 395 2 53 2 888 4 54 2 370 2 
761 2 762 2 801 2 804 2 805 2 807 2 769 2 553 4 527 2 142 2 901 2 529 6 469 2 679 2 146 4 648 2 67 4 560 2 838 2 407 2 783 2 360 4 566 2 568 2 119 2 819 2 285 2 261 4 318 4 319 2 792 2 694 10 188 4 322 2 125 4 323 4 291 4 849 2 395 2 53 4 888 4 54 2 370 2 
238 2 574 2 165 2 167 2 738 2 419 2 
657 2 1 2 165 2 662 2 243 2 834 2 133 2 
802 2 137 2 675 2 301 2 303 1 404 2 67 8 711 2 500 1 653 2 338 2 622 2 180 2 565 2 68 1 663 1 511 2 665 2 629 2 541 1 694 10 362 2 98 2 636 2 428 2 130 2 
762 6 892 4 855 2 804 6 856 2 807 6 769 6 831 4 351 2 142 6 558 2 67 6 815 2 360 2 118 2 693 2 318 3 232 2 694 6 722 2 422 2 323 16 291 4 913 2 395 2 888 12 53 2 54 6 194 2 370 6 
844 2 893 7 219 2 537 2 92 2 694 1 188 2 644 2 264 2 125 2 66 1 618 2 67 1 146 2 502 2 608 4 905 2 204 2 
844 2 893 6 537 2 219 4 92 2 188 2 644 4 264 2 125 2 618 2 146 2 502 2 608 4 204 2 905 4 
844 2 893 10 537 2 219 8 92 2 694 1 188 2 644 8 264 2 125 2 66 1 618 6 67 1 146 2 502 2 608 4 204 8 905 8 
844 2 893 2 537 2 219 2 92 2 188 2 644 2 264 2 125 2 146 2 502 2 608 2 905 2 
430 2 332 2 555 4 106 2 110 2 336 2 227 4 443 5 562 16 446 2 447 2 694 38 122 4 123 2 821 6 450 2 824 1 28 4 27 2 455 4 579 2 580 2 30 2 832 2 250 10 140 2 251 4 252 2 354 2 835 2 471 1 597 2 475 4 48 2 50 2 727 2 489 2 729 6 610 4 612 4 60 2 616 2 736 32 377 2 863 2 67 34 864 4 865 2 278 2 177 2 382 2 740 1 873 2 872 2 507 2 624 2 878 4 387 2 388 14 746 2 752 2 885 2 515 2 290 4 519 1 637 2 638 2 299 2 770 4 528 2 87 2 900 2 645 2 649 2 308 4 661 18 539 2 210 2 212 2 790 2 793 2 795 2 101 4 548 2 327 2 
272 2 610 2 612 2 430 2 218 4 103 2 60 2 220 2 677 2 61 2 435 2 434 2 736 32 337 2 864 2 67 30 379 4 562 14 115 2 873 2 872 2 742 2 688 4 387 2 388 2 512 2 446 2 186 2 694 30 885 2 122 2 290 24 821 2 450 2 633 2 21 2 241 2 292 2 577 2 74 4 28 2 30 2 349 2 771 2 300 4 35 2 141 2 86 2 354 2 649 2 306 2 205 2 311 2 715 2 208 2 786 2 661 14 415 2 909 2 601 2 158 2 50 2 486 2 101 2 729 2 270 2 
610 2 612 2 349 2 430 2 493 2 555 2 140 2 736 16 354 2 172 2 67 14 864 4 649 2 443 2 562 6 873 2 475 2 476 2 661 6 388 4 446 2 694 14 122 2 290 6 366 2 821 2 450 2 50 2 240 2 101 2 28 4 729 2 
217 2 490 2 610 6 430 2 612 2 60 4 555 2 736 38 377 4 109 2 864 10 67 26 865 2 177 4 443 2 112 4 114 2 562 14 382 2 740 6 873 2 872 4 624 4 878 6 743 2 388 8 446 2 694 28 122 6 885 2 290 14 123 4 821 2 450 2 824 2 27 2 28 10 579 2 30 4 349 2 897 2 832 2 250 10 140 2 528 2 87 2 86 2 354 2 649 2 471 2 650 2 712 2 308 2 661 14 475 2 478 2 210 10 212 2 50 2 101 6 548 2 729 2 
209 2 

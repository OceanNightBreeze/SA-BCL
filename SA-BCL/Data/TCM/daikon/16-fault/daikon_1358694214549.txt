#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (248,726) (248,726) (165,249,465,576,764) (165,249,465,576,764) (165,249,465,576,764) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 271 768 653 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 90 121 542 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 90 121 542 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ProglangType:isScalar()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltsLT([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:concat([I[I)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaCharStream:readChar()C
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGT([II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:ne(II)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:eq(FF)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 12386 | = null
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Ppt:Ppt()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoAux:hashCode()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:hashCode()I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I | CONDITION | 23649 | if (x) -> if (!x)
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptSlice0:arity()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ModBitTracker:split(I)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Debug:logDetail()Z
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:isPseudoArray()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:noDups([I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eq(JJ)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Invariant:logOn()Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([D)[D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:FillBuff()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:union([I[I)[I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Debug:logOn()Z
daikon.ValueTuple:size()I
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:lexLT([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:getEndColumn()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:intersection([I[I)[I
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:dimensions()I
utilMDE.MathMDE:gcd(JJ)J
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:logDetail()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ModBitTracker:num_sets()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_samples()I
daikon.ProglangType:baseIsScalar()Z
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:getEndLine()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGTE([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:lt(II)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_ntk()I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:memberOf(F[F)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Invariant:justified()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:size()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 126289 | = null
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.InvMap:InvMap()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:lexLTE([I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:gte(II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:isSubset([D[D)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
706 2 248 2 408 2 0 2 97 2 726 2 208 4 815 2 6 2 
762 2 624 6 450 2 291 2 98 2 583 2 633 2 214 6 46 2 269 6 7 2 
282 4 248 2 394 2 741 2 1 6 181 2 209 2 268 2 224 6 726 2 501 4 278 6 625 6 
406 6 207 4 435 8 436 16 629 8 772 26 180 10 603 10 94 16 267 2 210 2 514 4 124 8 335 12 726 6 637 2 61 4 444 2 522 10 466 2 188 29 639 4 189 10 248 6 757 2 36 10 472 6 563 8 132 16 175 2 
840 6 701 4 
205 2 
408 2 796 4 748 2 573 4 361 2 637 2 248 4 418 2 803 2 471 2 373 2 425 2 587 2 649 2 429 2 534 2 111 2 596 2 260 2 598 2 22 4 327 2 817 2 818 2 272 2 122 2 76 2 30 2 726 4 213 2 783 2 338 2 445 2 80 2 785 2 733 2 346 2 737 2 833 2 557 4 562 2 500 2 739 2 842 2 
406 4 436 32 772 48 75 2 603 16 180 6 94 32 726 4 335 22 124 18 522 16 444 2 728 4 488 6 489 2 784 6 188 54 189 16 826 2 639 2 492 4 34 2 141 4 248 4 36 16 756 6 168 6 371 2 528 6 527 4 305 6 472 4 348 4 381 4 201 4 563 6 132 32 591 2 383 8 
690 2 739 2 414 2 
8 2 193 2 418 2 616 2 732 22 510 10 584 2 622 2 16 2 78 2 713 2 467 2 681 2 550 2 
409 2 436 2 772 4 603 2 774 2 180 4 94 2 328 2 660 2 124 2 335 2 522 2 781 2 579 2 188 6 189 2 639 2 36 2 802 2 472 2 132 2 740 2 592 2 
36 4 756 6 436 8 772 12 603 4 94 8 512 2 514 2 335 4 201 4 522 4 488 6 132 8 188 16 229 2 492 4 189 4 
566 2 294 2 22 4 411 2 263 2 264 2 569 10 458 2 388 2 134 2 689 2 361 4 299 2 690 6 240 4 58 4 519 4 127 4 366 2 138 2 414 2 218 2 525 2 786 4 675 4 789 4 169 4 452 2 530 2 346 2 454 62 760 2 705 4 14 10 313 2 678 4 69 14 108 2 109 4 739 8 
205 2 56 2 643 2 582 2 801 2 556 2 455 2 379 2 45 2 404 2 
505 1 0 2 742 2 743 2 752 2 520 2 524 1 641 1 417 2 416 1 526 1 422 1 314 1 110 6 430 2 19 2 323 6 658 2 326 2 27 2 332 2 442 1 443 4 667 2 340 4 670 2 342 1 39 2 788 2 349 4 231 2 355 2 357 3 133 5 574 2 575 1 576 2 62 2 364 2 465 2 464 1 365 2 64 1 248 24 249 2 702 1 146 1 473 1 475 2 150 1 378 2 812 2 717 4 719 1 822 2 606 2 726 22 825 6 279 2 284 4 283 5 83 2 396 1 397 1 170 1 836 2 498 2 839 2 292 2 
248 2 548 2 
248 4 499 2 645 2 
246 2 
506 30 410 2 686 2 745 4 234 6 511 2 460 2 182 4 235 2 183 2 4 4 96 2 237 2 301 8 135 6 137 2 697 2 415 2 700 6 140 2 105 6 644 2 758 6 253 2 707 6 312 2 256 6 199 2 763 2 380 2 18 2 318 6 152 2 154 2 112 2 594 2 204 2 433 30 322 2 600 2 541 4 439 2 26 6 211 6 544 2 274 2 123 2 125 6 276 2 547 6 79 4 129 2 32 4 162 6 35 2 81 30 669 4 449 2 286 4 617 6 220 2 832 2 558 8 351 6 400 2 
484 1 370 2 382 2 190 2 
219 2 370 2 
207 2 370 2 156 2 630 2 739 2 244 2 664 2 
370 2 156 2 438 2 
370 2 156 2 837 2 
139 2 382 2 345 2 
370 2 156 2 
139 2 399 2 
385 2 370 2 
139 2 382 2 329 2 
828 2 382 2 578 2 
382 2 387 2 106 2 
716 2 88 2 382 2 
674 2 382 2 724 2 
139 2 215 2 
13 2 370 2 
828 2 266 2 
89 2 106 2 
88 2 401 2 
309 2 724 2 
139 2 685 2 
724 2 33 2 
88 2 797 2 
72 2 106 2 
828 2 186 2 
139 2 377 2 382 2 329 2 
139 2 377 2 317 2 382 2 329 2 
139 2 113 2 382 2 
139 2 382 2 612 2 
145 2 68 2 225 2 448 2 
139 2 671 2 
47 2 739 2 244 2 92 2 
47 2 739 2 244 2 664 2 92 2 590 2 
172 2 207 2 370 2 156 2 739 2 244 2 
461 2 111 2 
207 2 608 2 739 2 244 2 
88 2 131 2 
203 2 724 2 
828 2 25 2 
106 2 638 2 
615 2 106 2 724 2 
813 2 106 2 724 2 
106 2 724 2 423 2 
106 2 724 2 704 2 
295 2 29 2 244 2 827 2 304 6 555 2 431 6 739 2 
683 2 595 4 770 2 321 2 507 2 771 2 631 2 262 2 233 2 732 6 179 2 93 4 571 2 570 2 775 2 605 2 336 2 293 2 
389 2 382 2 
788 2 
407 2 0 2 742 2 743 2 178 2 412 4 752 2 516 8 518 2 102 2 417 2 428 2 110 4 430 2 19 6 323 6 773 2 27 2 331 2 543 2 332 2 337 2 443 4 128 2 667 2 551 2 39 2 349 4 44 2 350 2 230 2 231 2 133 2 574 2 57 2 575 2 243 2 62 2 364 2 365 2 245 2 580 2 248 26 144 2 703 2 148 2 805 2 475 2 378 2 70 2 812 6 715 2 718 2 717 4 814 2 719 2 482 2 822 2 604 4 606 2 726 26 825 4 729 4 493 2 494 2 284 4 283 2 83 2 618 2 497 2 836 2 738 2 839 2 292 6 
407 2 0 2 742 2 743 2 178 2 412 4 752 2 516 8 518 2 102 2 417 2 110 6 430 2 19 6 323 6 658 2 773 2 27 2 331 2 543 2 332 2 337 2 443 4 128 2 667 2 551 2 670 2 39 2 349 4 44 2 350 2 230 2 231 2 133 2 574 2 57 2 575 2 62 2 364 2 365 2 245 2 580 2 248 26 144 2 67 2 251 2 148 2 805 2 475 2 378 2 70 2 812 6 715 2 718 2 717 4 814 2 719 2 482 2 822 2 604 4 77 2 606 2 726 26 825 4 729 4 493 2 494 2 284 4 283 2 83 2 618 2 497 2 836 2 738 2 839 2 504 2 292 6 
158 2 258 2 
502 2 
48 2 176 2 50 2 231 2 91 2 356 2 752 2 62 2 63 2 364 2 247 2 248 12 9 2 372 10 583 2 303 2 759 2 804 2 424 2 375 4 306 2 308 2 475 2 198 2 710 4 809 2 589 2 430 2 478 4 73 2 323 4 602 2 723 2 324 2 483 2 269 6 776 4 161 2 726 6 31 8 443 2 277 4 611 2 214 6 280 2 552 2 284 2 167 2 39 2 450 2 620 2 398 2 223 2 790 2 561 2 624 6 838 4 291 4 46 4 353 8 
48 2 2 4 176 2 50 2 231 2 232 2 633 2 91 2 356 2 752 2 62 2 63 2 364 2 247 2 248 12 9 2 372 10 583 2 303 2 759 2 804 2 424 2 375 4 306 2 308 2 475 2 198 2 710 4 809 2 589 2 430 2 478 4 21 2 73 2 323 4 602 2 324 2 483 2 269 8 776 4 161 2 726 6 31 8 443 2 277 4 611 2 214 6 280 2 552 2 284 2 167 2 39 2 450 2 398 2 223 2 790 2 561 2 624 8 838 4 291 4 46 4 353 8 
552 2 9 2 303 2 91 2 804 2 324 2 483 2 375 2 223 2 561 2 198 2 624 2 291 2 838 4 277 4 214 2 280 2 46 2 
48 2 176 2 50 2 231 2 633 2 91 2 356 2 752 2 62 2 63 2 364 2 247 2 248 12 9 2 372 6 583 2 303 2 759 2 804 2 424 2 375 4 306 2 308 2 475 2 198 2 710 4 809 2 589 2 430 2 478 4 73 2 323 4 602 2 723 2 324 2 483 2 269 6 776 4 161 2 726 6 31 4 443 2 277 4 611 2 214 4 280 2 552 2 284 2 167 2 39 2 620 2 398 2 223 2 790 2 561 2 624 6 838 4 291 4 46 4 353 4 
48 2 176 2 50 2 231 2 91 2 356 2 752 2 62 2 63 2 364 2 247 2 248 12 9 2 372 6 583 2 303 2 759 2 804 2 424 2 375 4 306 2 308 2 475 2 762 2 198 2 710 4 809 2 589 2 430 2 478 4 73 2 323 4 602 2 723 2 324 2 483 2 269 6 776 4 161 2 726 6 31 4 443 2 277 4 611 2 214 6 280 2 552 2 284 2 167 2 39 2 620 2 398 2 223 2 790 2 561 2 624 4 838 4 291 4 46 4 353 4 
48 2 176 2 50 2 231 2 91 2 356 2 752 2 62 2 63 2 364 2 247 2 248 12 9 2 372 6 583 2 303 2 759 2 804 2 424 2 375 4 306 2 308 2 475 2 198 2 710 4 809 2 589 2 430 2 478 4 73 2 323 4 602 2 723 2 324 2 483 2 269 6 776 4 161 2 726 6 31 4 443 2 277 4 611 2 214 6 280 2 552 2 284 2 167 2 39 2 450 2 620 2 398 2 223 2 790 2 561 2 624 6 838 4 291 4 46 4 353 8 
48 2 176 2 50 2 231 2 91 2 356 2 752 2 62 2 63 2 364 2 247 2 248 12 9 2 372 10 583 2 303 2 759 2 804 2 424 2 375 4 306 2 308 2 475 2 762 2 198 2 710 4 809 2 589 2 430 2 478 4 73 2 323 4 602 2 723 2 324 2 483 2 269 8 776 4 161 2 726 6 31 8 443 2 277 4 611 2 214 8 280 2 552 2 284 2 167 2 39 2 450 2 620 2 398 2 223 2 790 2 561 2 624 6 838 4 291 4 46 4 353 8 
48 2 176 2 50 2 231 2 91 2 356 2 752 2 62 2 63 2 364 2 247 2 248 12 9 2 372 10 583 2 303 2 759 2 804 2 424 2 375 4 306 2 308 2 475 2 198 2 710 4 809 2 589 2 430 2 478 4 73 2 323 4 602 2 723 2 324 2 483 2 269 6 776 4 161 2 726 6 31 8 443 2 277 4 611 2 214 6 280 2 552 2 284 2 167 2 39 2 450 2 620 2 398 2 223 2 790 2 561 2 624 6 838 4 291 4 46 4 353 8 
627 1 407 2 0 2 176 2 628 2 412 4 187 2 192 2 417 2 9 2 420 2 194 6 645 6 646 2 424 2 647 2 198 2 430 2 17 1 19 6 437 2 658 2 27 2 443 4 663 2 214 8 667 2 217 2 670 2 672 2 673 2 39 2 43 2 223 2 680 2 46 4 228 6 48 2 50 2 231 2 51 2 459 6 236 2 59 6 62 2 63 2 696 6 698 2 246 6 247 2 248 46 250 1 475 2 710 4 712 2 477 7 478 6 717 4 718 2 73 4 481 6 722 1 482 2 483 2 269 12 273 2 726 24 277 4 280 2 493 2 284 4 283 2 83 2 291 4 503 2 292 6 742 2 743 2 91 2 746 2 297 8 751 4 752 2 516 4 518 2 523 10 102 4 103 1 303 2 759 2 306 2 308 2 310 2 762 4 110 6 536 2 538 6 769 6 323 6 324 2 117 6 120 2 776 8 332 2 545 2 334 2 778 4 337 2 128 2 548 6 552 2 553 1 347 2 349 4 790 2 561 2 564 6 565 6 353 2 795 2 356 2 133 2 574 2 364 2 365 2 367 7 583 4 372 2 804 2 375 4 805 2 378 2 808 2 809 2 589 2 151 2 812 8 593 2 814 2 597 1 602 2 816 2 822 2 390 6 606 12 161 2 825 2 611 2 164 1 167 2 620 2 398 4 621 6 836 2 624 4 839 2 838 4 841 1 174 2 
407 4 0 2 628 2 742 2 176 2 743 2 91 2 746 2 297 8 412 4 751 4 516 8 752 2 518 2 187 2 523 10 192 2 102 4 9 2 417 2 420 2 645 6 194 6 303 2 759 2 646 2 424 2 647 2 306 2 308 2 310 2 198 2 110 6 430 2 536 2 538 6 19 6 769 6 437 2 323 6 658 2 117 6 324 2 27 2 120 2 776 8 332 2 545 2 334 2 778 4 128 2 337 2 443 4 663 2 548 6 214 8 667 2 217 2 552 2 670 2 673 2 672 2 39 2 450 4 347 2 222 2 43 2 349 4 223 2 790 2 561 2 680 2 564 6 46 4 565 6 228 6 353 6 795 2 48 2 50 2 51 2 231 2 459 6 133 2 356 2 236 2 574 2 59 6 62 2 696 6 63 2 364 2 698 2 365 2 246 6 247 2 368 2 248 48 372 2 583 4 804 2 375 4 805 2 475 2 378 2 808 2 710 4 809 2 589 2 151 2 712 2 478 6 812 8 593 2 718 4 717 4 814 2 73 4 602 2 481 6 816 2 482 2 269 12 483 2 822 2 273 2 390 6 606 12 161 2 825 2 726 26 277 4 611 2 729 2 280 2 493 4 283 2 284 4 167 2 83 2 620 2 398 4 621 6 836 2 624 8 291 4 838 4 839 2 174 2 503 2 292 6 
407 4 0 2 628 2 742 2 176 2 743 2 91 2 746 2 297 8 412 4 751 4 516 8 752 2 518 2 187 2 523 10 192 2 102 4 9 2 417 2 420 2 645 6 194 6 303 2 759 2 646 2 424 2 647 2 306 2 308 2 310 2 198 2 110 6 430 2 536 2 538 6 19 6 769 6 437 2 323 6 658 2 117 6 324 2 27 2 120 2 776 8 332 2 545 2 334 2 778 4 31 4 128 2 337 2 443 4 663 2 548 6 214 8 667 2 217 2 552 2 670 2 673 2 672 2 39 2 450 4 347 2 222 2 43 2 349 4 223 2 790 2 561 2 680 2 564 6 46 4 565 6 228 6 353 6 795 2 48 2 50 2 51 2 231 2 459 6 133 2 356 2 236 2 574 2 59 6 62 2 696 6 63 2 364 2 698 2 365 2 246 6 247 2 368 2 248 48 372 6 583 4 804 2 375 4 805 2 475 2 378 2 808 2 710 4 809 2 589 2 151 2 712 2 478 6 812 8 593 2 718 4 717 4 814 2 73 4 602 2 481 6 816 2 482 2 269 12 483 2 822 2 273 2 390 6 606 12 161 2 825 2 726 26 277 4 611 2 729 2 280 2 493 4 283 2 284 4 167 2 83 2 620 2 398 4 621 6 836 2 624 8 839 2 291 4 838 4 174 2 503 2 292 6 
407 4 0 2 176 2 628 2 633 2 412 6 635 2 636 6 187 2 192 2 417 2 9 2 420 2 194 6 645 12 646 2 424 2 647 2 198 2 430 2 432 6 19 8 437 2 658 2 27 2 31 4 443 4 663 2 214 10 667 2 217 2 670 2 37 2 672 2 673 2 39 2 450 4 221 2 222 2 43 2 223 2 680 2 46 4 228 6 48 2 50 2 231 2 51 2 459 12 236 2 59 6 62 2 63 2 696 12 698 2 246 12 247 2 248 52 252 6 475 2 710 4 712 2 478 6 717 4 718 4 73 4 481 6 482 2 483 2 269 16 273 2 726 24 277 4 729 2 280 2 493 4 284 4 283 4 83 2 290 2 291 4 503 2 292 8 742 2 743 2 91 2 746 2 297 8 751 4 752 2 516 10 518 2 523 8 102 4 303 2 759 2 529 2 306 2 308 2 310 2 762 2 316 6 110 6 536 2 538 6 769 12 323 6 324 2 117 6 120 2 776 8 332 2 545 2 333 2 334 2 778 4 337 2 128 4 339 2 548 12 549 6 552 2 349 4 790 2 561 2 564 6 792 6 565 6 353 6 795 2 354 2 356 2 133 4 574 2 364 2 365 2 368 2 583 4 372 6 804 2 375 4 374 6 805 4 378 2 808 2 809 2 589 2 151 2 812 12 593 2 814 2 602 2 816 2 822 2 390 6 824 6 606 10 161 2 825 4 611 2 167 2 620 2 398 4 621 6 836 2 624 10 838 4 839 2 174 2 402 6 
48 2 176 2 50 2 602 2 91 2 324 2 356 2 269 4 483 2 776 2 161 2 31 4 63 2 277 2 214 6 552 2 248 4 450 2 372 4 583 2 620 2 804 2 424 2 223 2 308 2 790 2 561 2 710 2 624 6 809 2 838 2 291 4 478 2 46 4 353 6 
0 2 742 2 176 2 743 2 91 2 412 4 752 2 518 2 99 2 523 2 102 2 417 2 11 2 424 2 308 2 764 2 430 2 110 6 19 6 323 6 658 2 324 2 27 2 776 2 332 2 443 4 337 2 214 6 667 2 552 2 670 2 788 2 39 2 450 2 347 2 349 4 223 2 790 2 561 2 46 4 353 6 48 2 50 2 231 2 687 2 356 2 133 3 574 2 238 3 62 2 364 2 63 2 365 2 248 28 583 2 372 2 804 2 585 2 475 2 378 2 710 2 809 2 478 2 812 8 717 4 814 2 721 2 602 2 269 4 483 2 822 2 606 4 161 2 726 24 825 3 277 2 165 2 284 4 283 3 167 2 83 2 831 2 620 2 836 2 624 6 291 4 838 2 839 2 292 6 
725 2 161 2 356 2 
725 2 161 2 356 2 
407 4 0 2 628 2 742 2 743 2 744 4 633 4 91 2 184 2 515 2 751 2 517 2 516 4 752 2 753 2 523 2 192 2 191 4 102 6 104 2 417 2 303 2 12 2 306 2 197 2 762 4 198 2 110 6 430 2 19 2 323 6 658 2 115 2 27 2 776 4 332 2 778 2 31 4 337 2 443 4 446 2 214 12 667 2 552 2 670 2 39 2 450 4 677 2 453 2 349 4 46 4 228 2 353 6 231 2 356 4 572 2 574 2 359 2 241 2 62 2 364 2 365 2 248 24 372 6 583 4 804 4 375 4 255 2 475 2 378 2 710 2 809 2 589 2 478 4 812 2 718 4 717 4 814 2 73 2 602 2 482 4 269 16 822 2 725 2 606 4 161 6 726 16 825 2 277 2 611 2 163 2 493 4 494 4 284 4 83 2 735 2 398 4 836 2 624 12 839 2 838 2 291 4 174 2 292 2 
248 4 9 2 673 2 143 2 158 2 40 2 677 2 115 2 816 2 12 2 606 2 456 2 778 2 726 2 430 2 523 2 228 2 
407 4 0 2 628 2 742 2 743 2 744 4 633 4 91 2 184 2 515 4 751 2 516 4 752 2 753 2 100 2 192 2 191 4 102 6 104 2 417 2 303 2 759 2 12 2 306 2 197 2 762 4 198 2 110 6 430 2 19 2 323 6 658 2 115 2 27 2 776 4 332 2 31 4 337 2 443 4 661 2 446 2 214 12 667 2 552 2 670 2 39 2 450 4 677 2 453 2 554 2 349 4 46 4 228 2 353 6 231 2 356 4 572 2 574 2 62 2 364 2 365 2 248 24 372 6 583 4 804 4 375 4 255 2 475 2 378 2 710 2 809 2 589 2 478 4 812 2 718 4 717 4 814 2 73 4 720 2 602 2 482 4 269 16 822 2 725 2 606 2 161 6 726 16 825 4 277 2 611 2 490 2 493 4 494 4 284 4 83 2 735 2 398 4 836 2 624 12 839 2 838 2 291 4 174 2 292 2 
407 4 0 2 628 2 742 2 743 2 744 4 633 4 91 2 184 2 515 2 751 2 516 4 752 2 753 2 523 2 192 2 191 4 102 6 104 2 417 2 303 2 759 2 195 2 12 2 306 2 197 2 762 4 198 2 110 6 430 2 19 2 323 6 658 2 115 2 27 2 776 4 332 2 778 2 31 4 337 2 443 4 446 2 214 12 667 2 552 2 670 2 39 2 450 4 677 2 453 2 349 4 352 2 46 4 228 2 353 6 231 2 356 4 572 2 574 2 62 2 364 2 365 2 248 24 372 6 583 4 804 4 375 4 255 2 475 2 378 2 710 2 809 2 589 2 811 2 478 4 812 2 718 4 717 4 814 2 73 4 602 2 482 4 269 16 823 2 822 2 725 2 606 4 161 6 726 16 825 2 277 2 611 2 493 4 494 4 284 4 285 2 83 2 735 2 398 4 836 2 624 12 839 2 838 2 291 4 174 2 292 2 
0 2 742 2 743 2 412 4 747 2 749 1 752 2 518 2 102 2 417 2 10 2 420 2 430 2 110 2 653 2 19 6 768 2 323 6 24 2 325 2 120 2 332 2 334 2 443 4 216 2 667 2 39 2 349 2 43 2 560 2 226 2 679 2 795 2 231 2 53 2 133 2 574 2 360 2 239 2 692 2 62 2 364 2 699 2 248 24 142 2 586 2 475 2 149 2 378 2 588 4 808 2 812 8 717 2 814 2 485 1 271 2 606 2 726 18 825 2 614 2 284 4 283 2 82 2 395 2 835 2 171 2 836 2 839 2 292 6 
19 2 206 2 632 2 133 3 412 2 3 3 750 2 28 4 300 1 518 2 825 3 726 2 662 2 128 6 666 2 491 2 640 2 642 2 248 2 283 3 15 2 559 2 812 2 292 2 654 2 
19 2 206 2 632 2 133 2 412 2 3 2 750 2 28 4 518 2 825 2 726 2 662 2 128 6 666 2 491 2 640 2 642 2 248 2 283 2 15 2 559 2 812 2 292 2 654 2 
19 2 206 2 632 2 133 2 412 2 3 2 750 2 28 4 518 2 825 2 726 2 662 2 128 6 666 2 491 2 640 2 642 2 248 2 283 2 15 2 559 2 812 2 292 2 654 2 
155 2 684 2 406 2 655 4 436 2 772 4 457 2 157 2 265 2 603 2 133 3 94 2 688 3 160 2 486 6 212 2 518 2 777 2 825 3 726 4 522 2 609 2 695 2 666 2 188 6 189 2 248 10 36 2 451 2 830 2 736 4 307 4 426 3 709 4 476 4 202 3 563 4 132 2 812 2 714 2 
155 2 684 2 406 2 655 4 436 2 772 4 457 2 157 2 265 2 603 2 133 2 94 2 688 2 160 2 486 6 212 2 518 2 124 2 335 2 777 2 825 2 726 4 522 2 444 2 609 2 695 2 666 2 188 4 189 2 248 10 36 2 451 2 830 2 736 4 307 4 426 2 709 4 476 4 202 2 563 4 132 2 812 2 714 2 
155 2 684 2 406 2 655 4 436 2 772 4 457 2 157 2 265 2 603 2 133 2 94 2 688 2 160 2 486 6 212 2 518 2 124 2 335 2 777 2 825 2 726 4 522 2 444 2 609 2 695 2 666 2 188 4 189 2 248 10 36 2 451 2 830 2 736 4 307 4 426 2 709 4 476 4 202 2 563 4 132 2 812 2 714 2 
155 2 684 2 406 2 655 4 436 2 772 4 457 2 157 2 265 2 603 2 133 2 94 2 688 2 160 2 486 6 212 2 518 2 124 2 335 2 777 2 825 2 726 4 522 2 444 2 609 2 695 2 666 2 188 4 189 2 248 10 36 2 451 2 830 2 736 4 307 4 426 2 709 4 476 4 202 2 563 4 132 2 812 2 714 2 
155 2 684 2 406 2 655 4 436 2 772 4 457 2 157 2 265 2 603 2 133 2 94 2 688 2 160 2 486 6 212 2 518 2 124 4 335 4 777 2 825 2 726 4 522 2 444 4 609 2 695 2 666 2 188 4 189 2 248 10 36 2 451 2 830 2 736 4 307 4 426 2 709 4 476 4 202 2 563 4 132 2 812 2 714 2 
289 2 668 2 656 2 810 2 413 2 392 2 
821 2 540 2 487 2 810 2 765 2 676 2 148 2 
405 1 20 2 479 2 434 2 261 2 114 2 657 2 458 1 459 2 358 2 299 1 691 2 607 2 726 8 694 2 665 1 731 2 248 10 787 2 39 2 41 2 257 1 793 2 682 2 227 2 403 2 
406 2 436 6 772 12 23 2 508 2 603 6 94 6 726 6 462 2 335 3 124 2 728 2 522 6 444 2 488 4 784 4 188 16 492 2 189 6 785 2 248 6 468 2 36 6 803 2 532 2 533 2 563 4 132 6 383 2 626 2 
281 7 755 2 248 1 599 2 655 2 38 2 84 2 509 2 52 2 648 1 315 2 242 2 709 2 726 1 476 2 650 4 521 2 782 2 
281 6 755 2 599 2 655 2 38 2 84 4 52 2 509 4 315 2 242 2 709 2 476 2 650 4 521 4 782 2 
281 10 755 2 248 1 599 6 655 2 38 2 84 8 52 2 509 8 648 1 315 2 242 2 709 2 726 1 476 2 650 4 521 8 782 8 
281 2 755 2 655 2 38 2 84 2 52 2 509 2 315 2 242 2 709 2 476 2 650 2 521 2 
567 3 743 2 177 2 90 2 634 2 693 2 800 2 302 2 248 20 421 2 761 2 376 2 254 2 196 2 427 2 708 2 807 2 110 16 535 2 651 2 652 2 320 2 259 2 717 8 658 2 116 2 542 2 121 2 330 2 391 2 440 4 726 20 780 2 447 16 667 2 730 2 670 2 166 2 495 2 829 2 619 2 496 1 288 2 85 4 349 8 836 2 
49 2 567 2 743 2 177 2 90 2 296 2 54 2 298 2 513 2 362 2 60 2 136 2 363 2 799 6 754 2 302 2 65 2 66 2 248 28 419 2 531 4 376 2 311 2 708 2 711 4 110 36 766 10 153 2 320 6 539 2 717 14 384 4 386 4 601 2 658 8 659 2 116 2 542 2 118 4 270 10 121 2 819 6 159 4 391 2 440 8 726 26 546 4 727 4 447 14 667 2 730 2 670 8 166 2 344 2 495 6 829 6 619 2 85 2 349 14 836 2 173 2 86 2 
539 1 259 2 717 6 743 4 90 2 658 4 659 1 542 2 330 2 270 2 121 2 513 2 391 2 726 14 799 1 667 4 447 4 800 2 65 1 248 14 670 4 421 2 619 2 85 2 349 6 376 2 836 4 311 2 173 2 708 2 807 2 110 12 766 2 652 2 
87 2 567 2 743 2 177 2 90 2 568 2 296 2 634 2 95 2 298 2 55 2 798 2 693 2 60 2 185 4 136 2 363 2 577 2 463 2 5 2 101 2 302 2 248 46 369 2 581 2 419 2 469 2 470 2 147 2 531 2 254 2 376 2 196 2 474 2 107 2 708 2 200 2 110 48 651 2 71 2 319 2 537 2 153 2 320 4 717 20 767 2 386 2 74 2 480 6 658 6 116 2 542 2 118 2 119 2 121 2 820 4 819 6 159 2 391 2 440 6 126 2 779 2 441 2 726 44 546 2 727 2 275 2 610 2 447 36 667 2 613 2 730 2 393 4 341 2 670 6 166 2 343 4 495 4 829 4 619 2 734 2 287 2 834 2 85 2 349 20 42 2 836 2 623 2 130 2 791 2 794 2 
806 2 

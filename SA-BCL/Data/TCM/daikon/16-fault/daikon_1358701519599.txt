#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V ERROR java.lang.NullPointerException 809 203 
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 606 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (417,512) (417,512) (295,357,523,1054,1117) (295,357,523,1054,1117) (295,357,523,1054,1117) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (131,241) 1098 88 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (131,241) 1098 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (131,241) 1098 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (131,241) 1098 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 652 1101 948 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 173 935 369 213 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 173 935 369 213 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 173 935 369 213 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 173 935 369 213 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:sameLength([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_47()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.InvMap:InvMap()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_123()Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:gte(II)Z
daikon.ProglangType:isArray()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:backup(I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:relate_var()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:eq(II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3_35()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3_14()Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3_36()Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoAux:hashCode()I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3_20()Z
daikon.Quant:noDups([I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE:sign(I)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ProglangType:isFloat()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3835 | + -> >>>
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V | ASSIGN | 45022 | = null
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_102()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfo:new_ppt()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_124()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:Node()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3_27()Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_104()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
utilMDE.MathMDE:pow(II)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_105()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3_25()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_72()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3_19()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName:hashCode()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V | STATEMENT | 8634 | stmt -> ;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaCharStream:getEndColumn()I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_17(I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_114()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:jj_3R_103()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Intern:intern([J)[J
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7816 | 80 -> 0
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3_15()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_133()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_119()Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quantify.Constant:Constant(I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_5(I)Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | RETURN | 19748 | return null
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_107()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:memberOf(J[J)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_50()Z
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:sorted([I)Z | CONSTANT | 53880 | 0 -> -1
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:ne(II)Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_106()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_2_3(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_110()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:isDerived()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
jtb.JavaParser:jj_3R_120()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.Invariant:getConfidence()D
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Debug:logDetail()Z
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:eq(FF)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptSlice2:arity()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
jtb.JavaParser:jj_3R_121()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_89()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_3_17()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ValueTuple:size()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:eltwiseLT([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGTE([I[I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:element_range([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3_30()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:gt(II)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:baseIsScalar()Z
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfo:isPrestate()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.InvariantFormatTester:execute()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Ppt:Ppt()V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22225 | = null
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_75()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107878 | = null
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_101()Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_3_3()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:lt(II)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
daikon.Quant:setEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
203 2 809 2 
543 2 293 2 486 2 841 6 306 2 623 2 588 6 390 6 479 2 916 2 867 2 
512 2 563 4 955 6 997 6 55 6 765 6 417 2 1097 2 434 2 555 2 776 2 358 4 370 2 
1032 8 1062 8 1063 29 797 2 107 4 72 4 502 8 537 2 741 16 398 6 1011 10 1108 6 1046 2 971 10 80 8 373 2 512 6 135 4 723 2 581 10 328 10 417 6 726 16 662 10 179 26 256 12 150 16 759 2 103 2 336 4 
248 6 895 4 
779 2 
403 2 456 2 318 2 192 2 815 2 619 2 682 2 915 2 412 2 657 2 536 4 1041 2 448 2 862 2 606 2 1106 2 731 2 759 2 666 2 559 2 153 2 
971 2 1090 6 512 4 693 2 1063 7 581 2 328 2 417 4 662 2 726 4 741 4 179 6 256 3 540 4 150 4 927 8 
444 2 448 2 257 2 
991 2 649 10 1092 2 275 2 796 2 721 22 477 2 703 2 979 2 739 2 819 2 678 2 538 2 558 2 
691 2 834 2 36 2 1063 6 107 2 161 2 502 2 741 2 1011 4 508 2 1108 2 971 2 894 2 581 2 136 2 655 2 328 2 662 2 726 2 179 4 256 2 334 2 150 2 
971 4 530 6 565 2 1063 14 581 4 72 2 328 4 431 2 662 4 1053 4 726 8 253 4 741 8 179 12 383 6 256 5 150 8 
339 2 529 2 261 10 235 2 39 4 535 4 5 4 567 2 156 2 840 4 536 4 1001 2 121 4 923 2 1042 2 884 4 439 2 367 4 166 2 889 4 719 2 929 2 615 2 577 14 815 4 654 2 940 2 1081 4 1084 2 444 6 254 4 448 8 522 62 224 10 1057 4 257 2 287 2 988 2 559 2 359 2 
779 2 375 2 795 2 1111 2 280 2 757 2 970 2 1089 2 527 2 152 2 
294 2 295 2 705 1 838 1 570 2 307 4 1004 2 1008 1 850 1 851 2 172 2 443 4 450 2 864 2 335 4 868 3 337 4 189 2 188 1 340 1 37 1 734 2 194 2 598 1 599 2 1038 2 198 2 740 2 603 2 202 1 212 2 892 2 1054 2 225 1 231 2 760 2 763 6 641 2 917 2 768 1 1071 5 643 2 366 1 777 2 512 24 1077 1 246 1 1079 1 656 1 380 2 91 2 381 1 949 2 523 2 667 6 113 2 391 2 265 2 802 2 966 2 397 1 407 1 978 6 416 4 549 1 417 22 284 5 420 2 288 2 
512 2 85 2 
891 2 405 2 512 4 
270 2 
290 2 831 2 832 4 561 8 833 24 296 2 6 48 569 2 302 146 303 22 304 14 15 4 17 2 571 4 308 2 848 6 849 2 18 4 311 4 573 2 314 4 19 2 575 48 22 2 852 2 23 48 319 2 853 2 579 2 321 2 322 2 856 2 580 2 324 48 327 2 860 2 332 2 586 4 33 20 591 2 593 2 35 2 597 2 878 2 342 4 344 24 880 2 41 2 604 2 607 4 605 4 44 10 347 4 608 2 610 2 890 48 350 2 47 2 613 4 616 2 617 4 621 2 625 8 896 2 353 48 57 2 58 8 897 2 898 2 61 2 899 2 901 2 63 2 906 2 634 2 633 2 907 24 635 2 639 2 640 2 362 2 363 2 76 4 78 6 646 2 928 2 930 2 372 2 82 48 650 4 84 2 83 36 374 2 934 48 377 2 938 2 379 2 660 2 942 4 661 4 947 2 93 2 95 2 99 2 100 2 101 4 102 2 385 2 386 2 387 2 669 2 106 26 110 2 111 2 958 2 959 22 392 2 119 2 118 2 964 2 394 2 123 146 679 2 125 2 967 2 128 8 400 4 130 2 406 28 974 216 681 2 975 6 132 8 683 2 415 48 413 48 140 4 139 2 143 2 686 2 985 2 147 2 987 2 687 2 692 2 993 2 695 8 697 4 428 48 995 6 699 2 998 4 700 26 704 2 429 8 706 2 432 2 712 2 433 2 1002 10 1005 2 715 2 716 2 1006 4 1007 2 1010 2 164 6 717 2 1015 2 441 2 720 2 1018 2 178 2 1022 48 1023 2 445 2 1024 22 449 2 451 2 452 2 180 4 181 2 1028 2 183 8 453 2 1030 2 186 2 187 2 190 2 733 4 1034 6 1035 2 193 2 1036 2 196 42 460 2 463 4 464 2 200 2 465 4 204 2 205 2 743 4 1044 2 468 20 745 2 746 36 1045 2 747 2 469 2 208 16 748 2 1047 2 210 2 472 8 216 2 1052 4 218 4 481 2 219 2 484 2 489 2 490 2 229 2 758 2 493 16 496 2 234 2 237 2 236 44 1064 2 498 146 766 2 501 4 769 8 1068 2 1070 2 240 2 775 2 774 8 507 2 242 2 778 2 510 2 1078 4 782 14 247 2 250 2 785 22 1083 4 517 2 519 4 252 2 520 2 521 2 255 2 789 2 791 16 792 2 793 2 533 2 532 4 798 2 1094 2 266 2 803 2 1100 48 1102 2 267 8 807 2 544 2 272 4 1110 2 1112 14 818 2 820 36 821 4 551 2 1116 4 826 10 
0 2 727 2 845 1 116 2 
817 2 116 2 
305 2 448 2 663 2 135 2 525 2 259 2 116 2 
1080 2 259 2 116 2 
620 2 259 2 116 2 
0 2 105 2 611 2 
259 2 116 2 
893 2 611 2 
38 2 116 2 
0 2 637 2 611 2 
64 2 0 2 786 2 
0 2 911 2 800 2 
0 2 185 2 184 2 
0 2 94 2 1067 2 
973 2 611 2 
435 2 116 2 
64 2 808 2 
911 2 175 2 
467 2 185 2 
589 2 1067 2 
1059 2 611 2 
1067 2 648 2 
855 2 185 2 
911 2 1043 2 
64 2 138 2 
0 2 513 2 637 2 611 2 
0 2 513 2 823 2 637 2 611 2 
0 2 1017 2 611 2 
0 2 618 2 611 2 
614 2 690 2 31 2 844 2 
448 2 49 2 663 2 146 2 
305 2 448 2 49 2 663 2 146 2 134 2 
448 2 144 2 663 2 135 2 259 2 116 2 
3 2 148 2 
448 2 663 2 333 2 135 2 
185 2 612 2 
524 2 1067 2 
64 2 542 2 
873 2 911 2 
345 2 911 2 1067 2 
1003 2 911 2 1067 2 
446 2 911 2 1067 2 
911 2 1067 2 811 2 
912 6 497 2 924 6 722 2 857 2 283 2 448 2 663 2 
674 2 611 2 
34 2 243 2 1033 4 596 4 476 2 4 2 721 6 566 2 976 2 278 2 40 2 430 2 859 2 221 2 1069 2 124 2 847 2 749 2 
0 2 1051 2 
734 2 
294 2 568 2 157 2 709 2 570 2 307 4 1014 4 315 2 25 2 172 2 443 4 30 2 864 2 335 4 337 4 189 2 594 2 194 2 598 2 599 6 1038 2 198 2 740 6 881 2 601 2 603 2 212 2 892 2 53 2 478 2 485 2 753 2 756 2 491 2 631 2 227 2 900 2 902 2 903 2 231 2 232 2 763 4 764 4 917 2 919 2 74 2 239 2 1071 2 644 2 645 4 777 2 244 2 651 2 512 26 656 2 380 2 91 2 949 2 952 2 384 2 667 4 113 2 391 6 802 2 1096 2 1103 2 966 2 269 8 812 2 978 6 417 26 284 2 420 2 288 2 
294 2 568 2 157 2 709 2 570 2 714 2 307 4 1004 2 1014 4 315 2 25 2 172 2 443 4 30 2 864 2 335 4 337 4 189 2 594 2 194 2 598 2 599 6 1038 2 198 2 740 6 601 2 603 2 212 2 892 2 478 2 485 2 753 2 756 2 491 2 631 2 900 2 902 2 903 2 231 2 232 2 763 6 764 4 917 2 919 2 74 2 239 2 1071 2 644 2 645 4 777 2 244 2 651 2 512 26 656 2 380 2 91 2 949 2 952 2 384 2 667 4 113 2 391 6 265 2 802 2 1096 2 1103 2 966 2 269 8 972 2 812 2 1114 2 978 6 417 26 284 2 420 2 421 2 288 2 
114 2 
944 2 50 2 
292 2 294 2 2 2 238 4 159 2 916 2 9 2 917 2 75 2 841 4 771 2 241 2 777 2 512 8 317 2 88 2 172 2 658 2 443 2 329 2 585 2 588 4 454 6 867 2 258 2 337 2 954 2 672 4 458 8 108 2 736 4 113 2 390 4 799 2 600 2 961 2 115 2 462 2 120 2 1040 6 1098 2 603 2 806 2 966 2 1105 2 813 2 48 2 131 2 52 2 751 2 408 4 623 2 479 2 978 4 417 6 553 2 492 2 990 2 
292 2 294 2 2 2 238 4 159 2 916 2 9 2 917 2 841 6 771 2 241 2 777 2 512 8 88 2 172 2 658 2 443 2 1085 2 329 2 585 2 588 6 454 6 258 2 867 2 337 2 954 2 672 4 458 8 108 2 736 4 113 2 390 4 799 2 600 2 961 2 115 2 462 2 120 2 1040 6 1098 2 603 2 806 2 966 2 1105 2 543 2 813 2 48 2 131 2 52 2 751 2 622 4 408 4 623 2 479 2 137 2 978 4 417 6 553 2 492 2 990 2 
2 2 88 2 52 2 672 2 623 2 408 4 238 4 390 2 799 2 120 2 329 2 1098 2 585 2 588 2 258 2 867 2 990 2 241 2 
292 2 294 2 2 2 238 4 159 2 916 2 9 2 917 2 75 2 841 4 771 2 241 2 777 2 512 8 317 2 88 2 172 2 658 2 443 2 329 2 585 2 588 4 454 4 867 2 258 2 337 2 954 2 672 4 458 6 108 2 736 4 113 2 390 2 799 2 600 2 961 2 115 2 462 2 120 2 1040 4 1098 2 603 2 806 2 966 2 1105 2 543 2 813 2 48 2 131 2 52 2 751 2 408 4 623 2 978 4 417 6 553 2 492 2 990 2 
292 2 294 2 2 2 238 4 159 2 916 2 9 2 917 2 75 2 841 4 306 2 771 2 241 2 777 2 512 8 317 2 88 2 172 2 658 2 443 2 329 2 585 2 588 2 454 4 867 2 258 2 337 2 954 2 672 4 458 6 108 2 736 4 113 2 390 4 799 2 600 2 961 2 115 2 462 2 120 2 1040 4 1098 2 603 2 806 2 966 2 1105 2 813 2 48 2 131 2 52 2 751 2 408 4 623 2 978 4 417 6 553 2 492 2 990 2 
292 2 294 2 2 2 238 4 159 2 916 2 9 2 917 2 75 2 841 4 771 2 241 2 777 2 512 8 317 2 88 2 172 2 658 2 443 2 329 2 585 2 588 4 454 4 867 2 258 2 337 2 954 2 672 4 458 6 108 2 736 4 113 2 390 4 799 2 600 2 961 2 115 2 462 2 120 2 1040 6 1098 2 603 2 806 2 966 2 1105 2 813 2 48 2 131 2 52 2 751 2 408 4 623 2 479 2 978 4 417 6 553 2 492 2 990 2 
292 2 294 2 2 2 238 4 159 2 916 2 9 2 917 2 75 2 841 6 306 2 771 2 241 2 777 2 512 8 317 2 88 2 172 2 658 2 443 2 329 2 585 2 588 4 454 6 867 2 258 2 337 2 954 2 672 4 458 8 108 2 736 4 113 2 390 6 799 2 600 2 961 2 115 2 462 2 120 2 1040 6 1098 2 603 2 806 2 966 2 1105 2 813 2 48 2 131 2 52 2 751 2 408 4 623 2 479 2 978 4 417 6 553 2 492 2 990 2 
292 2 294 2 2 2 238 4 159 2 916 2 9 2 917 2 75 2 841 4 771 2 241 2 777 2 512 8 317 2 88 2 172 2 658 2 443 2 329 2 585 2 588 4 454 6 867 2 258 2 337 2 954 2 672 4 458 8 108 2 736 4 113 2 390 4 799 2 600 2 961 2 115 2 462 2 120 2 1040 6 1098 2 603 2 806 2 966 2 1105 2 813 2 48 2 131 2 52 2 751 2 408 4 623 2 479 2 978 4 417 6 553 2 492 2 990 2 
425 6 292 2 294 2 154 6 2 2 696 2 158 2 297 2 300 2 159 4 9 2 160 2 839 1 1000 2 713 6 570 2 841 6 306 2 307 4 1004 2 313 2 718 2 1014 4 21 2 24 6 1019 2 171 2 172 2 174 1 326 6 443 4 724 2 329 2 29 7 728 6 861 2 30 2 729 2 585 2 732 2 588 2 864 2 1029 4 335 4 867 2 337 4 189 2 191 2 458 2 194 2 736 4 195 2 599 6 600 2 1038 12 1039 2 462 2 42 6 198 2 1040 2 740 8 603 2 43 2 886 7 48 2 212 2 892 2 52 2 751 2 623 2 631 2 226 2 492 2 903 2 761 2 231 2 233 1 66 1 763 6 238 4 916 2 917 2 919 4 74 2 75 2 922 1 770 8 1071 2 771 2 1072 1 506 6 371 2 241 2 777 2 244 2 512 40 86 1 85 6 937 6 88 2 90 6 518 6 251 2 658 2 380 2 91 2 92 1 949 2 950 2 97 6 98 2 258 2 668 1 667 2 954 4 672 4 671 2 108 2 113 2 390 4 799 2 391 6 1095 10 265 2 115 2 961 2 802 2 120 2 1098 2 126 2 1103 2 806 4 966 2 1105 2 270 6 269 2 541 2 810 2 401 6 405 6 813 2 131 2 408 4 978 6 284 2 417 24 420 2 286 2 553 2 986 2 557 2 829 2 990 2 288 2 
425 6 292 2 294 2 154 6 2 2 696 2 158 2 297 2 300 2 159 4 9 2 160 2 1000 2 713 6 570 2 841 6 307 4 1004 2 313 2 718 2 1014 4 21 2 24 6 1019 2 171 2 172 2 326 6 443 4 724 2 329 2 728 6 861 2 30 2 729 2 585 2 732 2 588 4 864 2 1029 4 335 4 867 2 337 4 189 2 191 2 458 2 194 2 736 4 195 2 599 6 600 2 1038 12 1039 2 462 2 42 6 198 2 1040 4 740 8 603 2 43 2 48 2 212 2 892 2 52 2 751 2 623 2 479 2 631 2 226 2 492 2 903 2 761 2 231 2 763 6 764 2 238 4 916 2 917 2 919 4 74 2 75 2 770 8 1071 2 771 2 506 6 371 2 241 2 777 2 244 2 512 42 85 6 937 6 88 2 783 2 90 6 518 6 251 2 658 2 380 2 91 2 949 2 950 2 97 6 98 2 258 2 667 2 954 4 672 4 671 2 108 2 113 2 390 4 799 2 391 6 1095 10 265 2 115 2 961 2 802 2 120 2 1098 2 126 2 1103 2 806 4 966 2 1105 2 270 6 269 4 541 2 810 2 401 6 405 6 813 2 131 2 408 4 978 6 142 2 284 2 417 26 420 2 286 2 553 2 986 2 557 2 829 2 990 2 288 2 
425 6 292 2 294 2 154 6 2 2 696 2 158 2 297 2 300 2 159 4 9 2 160 2 1000 2 713 6 570 2 841 6 307 4 1004 2 313 2 718 2 1014 4 21 2 24 6 1019 2 171 2 172 2 326 6 443 4 724 2 329 2 728 6 861 2 30 2 729 2 585 2 732 2 588 4 864 2 1029 4 454 2 335 4 867 2 337 4 189 2 191 2 458 4 194 2 736 4 195 2 599 6 600 2 1038 12 1039 2 462 2 42 6 198 2 1040 4 740 8 603 2 43 2 48 2 212 2 892 2 52 2 751 2 623 2 479 2 631 2 226 2 492 2 903 2 761 2 231 2 763 6 764 2 238 4 916 2 917 2 919 4 74 2 75 2 770 8 1071 2 771 2 506 6 371 2 241 2 777 2 244 2 512 42 85 6 937 6 88 2 783 2 90 6 518 6 251 2 658 2 380 2 91 2 949 2 950 2 97 6 98 2 258 2 667 2 954 4 672 4 671 2 108 2 113 2 390 4 799 2 391 6 1095 10 115 2 961 2 265 2 802 2 120 2 1098 2 126 2 1103 2 806 4 966 2 1105 2 270 6 269 4 541 2 810 2 401 6 405 6 813 2 131 2 408 4 978 6 142 2 284 2 417 26 420 2 286 2 553 2 986 2 557 2 829 2 990 2 288 2 
425 6 292 2 294 2 154 12 2 2 696 2 158 2 297 2 300 2 159 4 9 2 160 2 1000 2 713 6 14 2 570 2 841 6 307 4 1004 2 313 2 718 2 1014 6 21 2 24 6 1019 2 171 2 172 2 326 12 443 4 724 2 329 2 728 6 861 2 30 2 729 2 585 2 863 6 732 2 588 4 864 2 1029 4 454 2 335 4 867 2 337 4 189 2 595 6 191 2 458 4 194 2 736 4 195 2 599 8 343 6 600 2 1038 10 1039 2 462 2 42 6 198 2 1040 4 740 12 603 2 43 2 885 2 48 2 212 2 892 2 52 2 751 2 623 2 479 2 60 6 631 4 226 2 492 2 903 2 761 2 231 2 763 6 764 2 238 4 916 2 73 2 917 2 919 4 74 2 921 6 75 2 770 8 503 6 1071 4 771 2 506 6 371 2 241 2 777 2 244 2 512 46 85 12 937 6 88 2 783 2 90 6 518 12 658 2 380 2 943 2 91 2 949 2 950 2 97 6 98 2 1086 2 526 2 258 2 667 4 954 4 534 2 672 4 671 2 108 2 113 2 390 4 799 2 391 8 1095 8 115 2 961 2 265 2 802 2 120 2 1098 2 126 2 1103 4 806 4 966 2 1105 2 270 12 269 6 541 2 810 2 401 6 405 12 813 2 131 2 274 6 408 4 548 6 411 6 978 6 141 2 142 2 284 4 417 24 420 2 286 2 553 2 986 2 557 2 829 2 990 2 288 2 
292 2 2 2 108 2 458 2 238 2 736 2 390 4 916 2 600 2 799 2 9 2 115 2 961 2 462 2 1040 4 75 2 841 2 771 2 52 2 408 2 623 2 479 2 329 2 585 2 588 4 454 2 492 2 258 2 867 2 990 2 
292 2 294 2 2 2 9 2 570 2 841 2 307 4 1004 2 1014 4 167 2 172 2 443 4 329 2 585 2 588 4 864 2 867 2 335 4 337 4 189 2 734 2 458 2 736 2 194 2 599 6 600 2 1038 4 462 2 198 2 740 8 1040 4 603 2 349 2 212 2 892 2 52 2 623 2 479 2 357 2 492 2 903 2 231 2 763 6 238 2 916 2 917 2 919 2 74 2 75 2 1071 3 771 2 777 2 244 2 1075 3 512 24 511 2 658 2 251 2 380 2 91 2 949 2 258 2 667 3 108 2 957 2 113 2 390 4 391 6 799 2 1095 2 961 2 265 2 802 2 115 2 966 2 404 2 408 2 978 6 279 2 417 24 284 3 420 2 1117 2 990 2 288 2 
365 2 492 2 738 2 
365 2 492 2 738 2 
294 2 992 2 570 2 841 6 306 2 307 4 1004 2 172 2 443 4 864 2 588 6 454 4 335 4 867 2 871 2 337 4 189 2 458 4 194 2 736 2 599 2 1038 2 198 2 740 2 1040 4 603 2 742 2 207 2 212 2 892 2 52 4 623 2 479 2 492 2 903 2 495 2 231 2 763 6 238 2 916 2 917 2 919 2 74 2 241 2 777 2 512 14 380 2 91 2 949 2 258 2 667 2 531 2 672 2 108 2 113 2 390 6 391 2 265 2 802 2 676 2 1098 2 966 2 543 2 408 2 978 6 417 14 420 2 288 2 990 2 
455 2 512 4 50 2 459 2 7 2 1095 2 1038 2 120 2 417 2 713 2 356 2 126 2 466 2 966 2 149 2 1029 2 557 2 
294 2 992 2 570 2 841 6 306 2 307 4 1004 2 172 2 443 4 864 2 588 6 454 4 335 4 867 2 871 2 337 4 189 2 458 4 194 2 736 2 599 2 1038 2 198 2 740 2 1040 4 603 2 742 2 207 2 212 2 892 2 52 4 623 2 479 2 492 2 903 2 495 2 231 2 763 6 238 2 916 2 917 2 919 2 74 2 241 2 777 2 512 14 380 2 91 2 949 2 258 2 667 4 531 2 672 2 108 2 113 2 390 6 391 2 265 2 802 2 676 4 1098 2 966 2 543 2 816 2 408 2 978 6 417 14 420 2 422 2 288 2 990 2 
294 2 992 2 570 2 841 6 306 2 307 4 1004 2 172 2 443 4 864 2 588 6 454 4 335 4 867 2 871 2 337 4 189 2 458 4 194 2 736 2 599 2 1038 2 198 2 740 2 1040 4 603 2 742 2 207 2 212 2 892 2 52 4 623 2 479 2 492 2 903 2 495 2 231 2 763 6 238 2 916 2 917 2 919 2 74 2 241 2 777 2 512 14 380 2 91 2 949 2 258 2 667 2 531 2 672 2 108 2 113 2 390 6 391 2 265 2 802 2 676 2 1098 2 966 2 543 2 408 2 978 6 417 14 420 2 288 2 990 2 
294 2 562 2 835 2 564 4 836 2 837 38 298 3 299 2 11 2 12 2 14 2 16 2 842 2 307 6 843 2 572 2 309 2 313 4 312 2 574 10 576 2 20 2 316 2 323 2 25 2 581 4 582 2 26 18 328 4 858 10 583 2 27 4 584 4 28 2 30 4 32 10 587 6 865 4 864 2 866 2 335 6 590 4 337 4 592 2 338 3 594 2 39 2 877 2 598 2 599 14 879 4 882 2 603 2 883 2 885 2 609 4 887 24 889 2 46 40 888 2 351 2 892 4 624 4 626 2 627 2 355 14 354 2 628 2 629 2 632 16 631 46 904 2 65 4 638 2 910 2 68 2 360 2 913 2 361 2 70 2 73 2 917 2 919 2 918 4 920 4 74 2 364 2 644 2 926 2 371 2 81 2 933 2 652 2 653 2 376 2 939 2 656 2 659 2 943 2 662 4 91 2 948 2 949 2 951 2 383 6 384 2 952 14 667 19 673 6 113 2 391 14 962 4 963 2 675 6 677 2 395 2 966 2 969 2 396 2 127 4 398 4 971 4 404 2 977 2 978 6 685 2 141 2 417 30 980 2 981 2 419 16 420 4 145 2 688 2 150 8 989 2 426 2 693 2 155 2 694 2 996 2 698 2 702 2 160 2 707 10 709 2 708 2 710 2 437 10 163 2 438 3 1004 4 1009 2 440 2 1014 12 1013 2 167 2 170 4 442 2 172 2 1020 4 176 14 1021 2 443 4 177 4 726 8 447 2 179 12 729 2 1025 2 730 2 1027 12 1031 14 189 4 457 2 1038 2 737 2 1039 2 740 28 198 4 741 8 471 2 209 2 473 2 478 2 752 2 1050 6 480 2 485 2 220 4 488 2 228 8 226 2 230 2 494 2 231 2 1060 2 1062 6 1063 16 762 2 763 12 499 2 500 2 1066 2 767 2 502 4 1071 16 772 2 773 2 1073 2 777 2 244 2 1075 2 509 3 512 40 511 2 245 3 514 2 516 2 249 4 784 2 1081 2 254 2 253 4 788 2 1086 2 790 2 256 6 1088 2 528 2 262 4 535 2 534 2 1093 2 264 2 802 2 265 4 539 2 1101 2 1103 20 268 1 269 42 1107 2 545 2 277 2 279 2 284 19 550 2 285 2 825 2 556 2 829 2 830 2 288 4 289 2 
667 2 562 2 875 2 360 2 996 2 599 2 391 2 767 2 740 2 539 2 437 2 438 2 1071 2 1014 2 574 2 209 2 244 2 512 2 858 4 284 2 417 2 447 2 951 2 631 6 
667 2 562 2 875 2 360 2 996 2 599 2 391 2 767 2 740 2 539 2 437 2 438 2 1071 2 1014 2 574 2 209 2 244 2 512 2 858 4 284 2 417 2 447 2 951 2 631 6 
667 2 562 2 875 2 360 2 996 2 599 2 391 2 767 2 740 2 539 2 437 2 438 2 1071 2 1014 2 574 2 209 2 244 2 512 2 858 4 284 2 417 2 447 2 951 2 631 6 
667 3 338 3 65 2 1062 4 1063 5 910 4 69 2 298 3 960 2 737 4 918 2 920 2 740 2 741 2 1104 2 398 2 470 2 971 2 209 2 244 2 211 2 512 10 931 4 1115 2 376 4 515 2 581 2 328 2 941 3 282 2 483 2 284 3 417 4 662 2 726 2 488 4 179 4 755 2 228 6 150 2 
667 2 338 2 65 2 1062 4 1063 4 910 4 69 2 298 2 960 2 737 4 918 2 920 2 740 2 502 2 741 2 1104 2 398 2 470 2 971 2 1046 2 209 2 244 2 211 2 512 10 931 4 1115 2 376 4 515 2 581 2 328 2 941 2 282 2 483 2 284 2 417 4 662 2 726 2 488 4 179 4 755 2 256 2 228 6 150 2 
667 2 338 2 65 2 1062 4 1063 4 910 4 69 2 298 2 960 2 737 4 918 2 920 2 740 2 502 2 741 2 1104 2 398 2 470 2 971 2 1046 2 209 2 244 2 211 2 512 10 931 4 1115 2 376 4 515 2 581 2 328 2 941 2 282 2 483 2 284 2 417 4 662 2 726 2 488 4 179 4 755 2 256 2 228 6 150 2 
667 2 338 2 65 2 1062 4 1063 4 910 4 69 2 298 2 960 2 737 4 918 2 920 2 740 2 502 2 741 2 1104 2 398 2 470 2 971 2 1046 2 209 2 244 2 211 2 512 10 931 4 1115 2 376 4 515 2 581 2 328 2 941 2 282 2 483 2 284 2 417 4 662 2 726 2 488 4 179 4 755 2 256 2 228 6 150 2 
667 2 338 2 65 2 1062 4 1063 4 910 4 69 2 298 2 960 2 737 4 918 2 920 2 740 2 502 4 741 2 1104 2 398 2 470 2 971 2 1046 4 209 2 244 2 211 2 512 10 931 4 1115 2 376 4 515 2 581 2 328 2 941 2 282 2 483 2 284 2 417 4 662 2 726 2 488 4 179 4 755 2 256 4 228 6 150 2 
980 2 872 2 104 2 846 2 647 2 744 2 
168 2 104 2 320 2 968 2 914 2 71 2 952 2 
801 2 923 1 201 2 925 2 79 2 206 1 129 2 777 2 512 10 936 1 781 2 814 2 89 1 51 2 326 2 725 2 417 8 59 2 787 2 330 2 945 2 754 2 287 1 827 2 869 2 424 2 
1090 4 1091 2 909 2 1062 4 388 2 1063 16 502 2 741 6 127 2 310 2 540 2 398 2 927 2 888 2 971 6 1046 2 512 6 475 2 547 2 581 6 328 6 417 6 726 6 662 6 253 2 179 12 383 4 256 4 150 6 989 2 
512 1 427 2 794 2 908 2 876 7 750 2 376 2 10 2 737 2 684 2 117 2 417 1 222 2 1099 4 488 2 96 1 630 2 689 2 
427 4 794 2 908 2 876 6 750 4 376 2 10 2 684 2 737 2 117 2 222 4 1099 4 488 2 630 2 689 2 
512 1 427 8 794 2 908 6 876 10 750 8 376 2 10 2 684 8 737 2 117 2 417 1 222 8 1099 4 488 2 96 1 630 2 689 2 
427 2 794 2 876 2 750 2 376 2 10 2 737 2 117 2 222 2 1099 2 488 2 630 2 689 2 
291 1 999 4 307 8 162 2 1004 4 1012 2 578 2 173 2 1026 2 335 10 189 6 874 2 735 2 341 2 1037 2 198 4 346 2 213 2 892 6 1048 2 352 1 217 1 626 2 905 4 763 16 642 2 77 2 504 2 505 2 369 2 1074 2 512 28 780 1 935 2 378 2 1082 2 946 4 260 2 109 2 112 4 265 4 804 2 965 1 969 2 396 2 399 2 1109 1 133 2 417 26 983 2 423 2 554 4 828 1 151 2 
560 2 1061 2 636 2 994 2 763 36 67 6 1065 4 301 2 711 2 13 2 436 2 307 18 504 2 165 2 1012 2 369 2 1016 2 512 42 169 2 932 2 935 2 87 2 1076 2 854 2 325 4 173 2 946 32 382 2 182 2 1087 2 664 2 665 2 335 18 953 2 189 2 670 2 389 2 263 2 109 2 197 2 461 2 198 2 199 2 393 2 122 4 602 2 805 2 969 2 396 2 271 4 45 2 680 2 402 2 273 2 1109 2 892 2 213 2 474 2 215 2 214 6 54 2 546 2 409 2 410 2 56 2 414 2 626 2 417 42 982 2 223 2 822 2 487 2 984 2 824 2 552 2 1056 2 554 2 1058 2 62 2 
905 6 763 24 8 2 701 2 999 2 642 2 13 2 162 2 307 10 1004 6 504 2 368 2 369 2 1074 2 512 34 780 2 935 2 378 2 173 2 1082 2 946 14 331 2 1026 2 1087 2 335 12 870 2 953 2 260 2 189 4 956 2 874 2 735 2 389 2 109 2 112 6 265 6 198 2 199 2 804 2 346 2 396 2 969 2 348 2 680 2 892 4 213 2 1048 2 1113 4 276 4 133 2 1049 2 281 4 626 2 482 2 418 2 417 32 983 2 824 2 423 4 1055 2 554 6 151 2 1058 2 62 2 
189 2 512 12 1109 2 935 2 892 2 213 2 763 10 109 2 173 2 626 2 265 4 417 12 198 2 223 2 946 4 307 4 1004 4 396 2 969 2 335 4 369 2 953 2 
1 2 

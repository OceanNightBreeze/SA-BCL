#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (369,465) (369,465) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 320 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 444 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 444 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 444 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 444 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 444 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 503 462 343 260 361 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 319 32 179 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 319 32 179 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 319 32 179 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 319 32 179 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_119()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_54()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:lexEqual([I[I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:gte(II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.ModBitTracker:num_samples()I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern:numIntArrays()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:min([I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:memberOf(I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3_4()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block; | STATEMENT | 103715 | stmt -> ;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLTE([II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:intern([I)[I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43258 | 32 -> 33
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_48()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaCharStream:getEndLine()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3R_62()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:gt(II)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_118()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltsLT([II)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ModBitTracker:num_vars()I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_53()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3_15()Z
daikon.Quant:lte(II)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_57()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:union([I[I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_2_5(I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:noDups([I)Z
daikon.Quant:lexLT([I[I)Z | STATEMENT | 170908 | stmt -> ;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:getEndColumn()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:ne(II)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | CONDITION | 13357 | if (x) -> if (!x)
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap:size()I
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_49()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Assert:assertTrue(Z)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey; | RETURN | 6660 | return null
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_116()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_69()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_14()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:eq(II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3R_76()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaCharStream:backup(I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_2_4(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_ntk()I
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3_10()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
369 2 43 2 9 2 83 2 390 2 189 2 259 4 465 2 151 2 
302 6 208 2 232 2 256 2 298 2 359 6 357 2 464 2 156 6 373 2 323 2 
369 2 264 6 95 6 37 4 427 2 465 2 411 2 181 6 111 4 326 2 398 2 367 6 400 2 
473 8 369 4 286 6 5 2 376 8 126 6 415 2 291 8 132 2 162 2 44 8 45 2 240 2 135 8 166 8 387 8 142 6 465 4 434 8 53 8 180 2 327 2 119 9 368 2 
199 4 221 6 
215 2 
69 2 369 4 309 2 201 2 310 2 371 2 317 2 129 4 130 2 8 2 9 2 78 2 13 2 457 4 270 2 20 2 465 4 217 2 84 2 223 2 470 4 282 2 475 2 92 2 407 2 408 2 483 2 99 2 335 2 489 2 41 2 106 4 494 2 348 2 242 2 504 2 301 2 435 2 184 2 185 2 440 2 120 2 197 2 441 2 
473 4 369 4 287 2 488 4 376 4 341 8 452 2 291 4 44 4 135 4 166 4 387 4 465 4 23 4 53 2 434 4 119 5 
502 2 20 2 38 2 
17 2 33 2 443 2 247 2 463 2 273 2 24 22 335 2 413 2 182 2 278 10 196 2 168 2 173 2 
473 2 286 2 376 2 126 2 338 2 342 2 291 2 105 2 44 2 347 2 166 2 135 2 350 2 387 2 142 2 53 2 434 2 55 2 469 2 62 2 119 4 194 2 
473 8 176 2 143 2 372 4 434 8 376 8 290 4 291 8 132 2 187 4 44 8 166 4 119 10 135 8 268 4 387 8 
0 2 229 4 477 2 34 4 1 2 3 62 4 4 98 4 371 4 38 2 487 4 100 2 314 2 451 4 450 2 317 2 102 10 106 4 131 2 75 4 134 14 12 2 77 2 424 2 244 4 502 6 174 2 20 8 51 4 358 2 22 10 110 2 252 2 115 4 29 2 60 2 255 4 254 2 363 2 190 2 
480 2 410 2 486 2 340 2 421 2 243 2 215 2 330 2 150 2 402 2 
320 2 312 2 64 2 261 2 
465 2 63 2 
212 2 465 4 207 2 
324 2 
265 2 2 4 123 8 6 2 374 2 377 14 128 2 133 4 10 20 136 2 384 4 385 6 267 2 15 22 389 2 139 2 269 4 19 44 21 4 144 2 272 4 393 2 145 4 26 2 27 8 28 4 147 10 396 4 397 4 279 4 401 10 281 132 405 26 152 4 153 46 284 2 288 2 157 4 412 8 42 44 160 20 289 4 417 4 161 2 164 22 293 4 171 4 170 4 172 4 48 2 49 2 297 2 299 2 426 16 177 44 430 2 428 4 432 4 178 10 300 4 54 2 57 2 303 2 436 32 304 4 183 8 61 4 439 2 305 2 188 2 191 2 193 2 195 44 68 12 442 14 311 12 446 2 448 4 313 22 447 2 203 2 316 2 73 4 453 16 74 4 205 44 454 44 206 2 455 2 321 44 76 2 456 44 458 4 80 4 461 2 210 2 211 4 216 136 325 4 467 2 220 4 218 20 219 4 468 2 329 32 226 4 227 4 331 16 87 4 88 2 332 4 471 2 91 2 231 2 230 2 94 2 474 20 233 12 478 2 96 2 482 4 97 4 484 4 485 2 235 2 339 2 237 4 490 2 103 2 491 2 495 2 239 40 492 2 497 4 107 2 346 2 498 4 499 2 351 44 500 2 108 44 501 136 353 136 245 4 246 4 354 12 505 20 355 26 356 4 360 2 507 4 249 2 250 4 112 2 113 44 251 2 116 2 117 2 253 32 118 2 257 2 366 4 509 2 510 4 
419 2 449 2 121 1 228 2 
419 2 352 2 
81 2 162 2 186 2 419 2 20 2 65 2 85 2 
146 2 81 2 419 2 
81 2 419 2 86 2 
328 2 345 2 449 2 
81 2 419 2 
328 2 155 2 
419 2 248 2 
328 2 449 2 337 2 
36 2 449 2 388 2 
431 2 449 2 266 2 
285 2 449 2 423 2 
399 2 449 2 31 2 
328 2 213 2 
18 2 419 2 
36 2 149 2 
403 2 266 2 
285 2 391 2 
334 2 
163 2 328 2 
399 2 52 2 
285 2 137 2 
459 2 266 2 
308 2 36 2 
328 2 449 2 337 2 25 2 
328 2 158 2 449 2 337 2 25 2 
328 2 364 2 449 2 
328 2 449 2 16 2 
70 2 445 2 382 2 386 2 
59 2 186 2 20 2 72 2 
59 2 186 2 20 2 295 2 72 2 85 2 
81 2 162 2 186 2 419 2 20 2 30 2 
306 2 435 2 
162 2 186 2 20 2 167 2 
285 2 438 2 
71 2 399 2 
36 2 274 2 
140 2 266 2 
307 2 399 2 266 2 
399 2 349 2 266 2 
493 2 399 2 266 2 
399 2 375 2 266 2 
283 2 476 6 479 6 125 2 380 2 422 2 20 2 186 2 
328 2 425 2 
35 2 214 2 392 2 24 6 433 2 336 2 315 2 56 2 204 2 104 2 114 2 437 2 496 2 241 2 365 2 79 4 14 4 89 2 
258 2 449 2 
198 2 
444 2 312 2 64 2 261 2 
444 2 312 2 64 2 261 2 
262 2 169 2 275 2 
262 2 169 2 275 2 
444 2 312 2 64 2 261 2 
444 2 312 2 64 2 261 2 
444 2 312 2 64 2 261 2 
503 2 175 2 462 2 82 2 124 2 465 4 312 2 361 2 343 2 294 2 260 2 280 2 64 2 261 2 296 2 511 2 
379 2 381 2 333 2 292 2 50 2 159 2 
138 2 238 2 333 2 222 2 418 2 11 2 67 2 
472 2 369 8 406 2 370 2 481 2 409 1 234 2 39 2 236 2 7 2 414 2 127 2 131 1 46 2 47 2 358 1 271 2 506 2 465 10 276 2 277 2 395 1 224 1 192 2 148 2 90 2 
473 6 369 6 200 2 154 2 488 2 376 6 101 2 341 2 416 2 291 6 44 6 165 2 135 6 13 2 387 6 268 2 109 2 209 2 465 6 23 2 434 6 362 2 187 2 120 2 119 10 66 2 
404 2 369 1 93 2 141 2 429 4 465 1 40 7 466 2 508 2 378 1 394 2 58 2 344 2 420 2 322 2 383 2 122 2 460 2 
404 2 93 2 141 2 429 4 40 6 466 2 508 4 394 4 58 2 344 2 420 2 322 2 383 2 122 4 460 2 
404 2 369 1 93 8 141 2 429 4 465 1 40 10 466 6 508 8 378 1 394 8 58 2 344 2 420 2 322 2 383 2 122 8 460 2 
404 2 141 2 429 2 40 2 508 2 394 2 58 2 344 2 420 2 322 2 383 2 122 2 460 2 
369 2 202 2 318 1 319 2 465 2 225 1 32 2 179 2 
369 2 32 2 319 2 465 2 202 2 179 2 
369 2 32 2 319 2 465 2 202 2 179 2 
369 2 32 2 319 2 465 2 202 2 179 2 
263 2 

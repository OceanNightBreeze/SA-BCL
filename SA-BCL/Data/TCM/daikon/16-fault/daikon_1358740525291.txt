#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (706,741) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 106 106 314 314 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 728 728 727 727 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 124 (214,513) (434,469) (434,469) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 124 (214,513) (434,469) (434,469) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 124 (214,513) (434,469) (434,469) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 124 (214,513) (434,469) (434,469) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 124 (214,513) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 124 (214,513) (214,513) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 124 (214,513) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 240 238 514 632 297 656 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:justified()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGTE([II)Z | OPERATOR | 163389 | == -> !=
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Debug:logOn()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(I[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptSlice2:arity()I
jtb.JavaCharStream:getEndColumn()I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfo:new_ppt()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
daikon.Quant:sameLength([I[I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0:arity()I
daikon.inv.Invariant:prob_and(DD)D
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.Node:Node()V
utilMDE.Intern:intern([D)[D
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:setDiff([I[I)[I
daikon.ModBitTracker:split(I)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:memberOf(F[F)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:slice([III)[I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern:numIntArrays()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ValueTuple:size()I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:size()I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(II)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 54234 | = null
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(II)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:sign(I)I
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([S[S)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:format()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:dimensions()I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:noDuplicates([D)Z | ASSIGN | 57849 | = null
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | STATEMENT | 5303 | stmt -> ;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:arity()I
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:noDups([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3_16()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:getEndLine()I
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eq(DD)Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | CONDITION | 21420 | if (x) -> if (!x)
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.InvMap:InvMap()V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:eltsGT([II)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern:intern([I)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(JJ)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:lexLT([I[I)Z
daikon.ModBitTracker:num_samples()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:lte(II)Z
daikon.inv.Invariants:Invariants()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(D[F)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 2 115 2 437 2 533 2 295 2 18 4 158 2 758 2 746 2 
79 2 583 2 527 2 250 2 274 2 459 2 558 6 364 6 686 6 394 2 261 2 
637 2 237 6 225 4 746 2 761 2 781 6 270 6 522 2 295 2 699 4 171 6 173 2 110 2 
341 4 768 8 275 16 746 6 23 2 694 8 404 2 508 8 256 2 432 26 175 8 701 6 485 2 29 10 487 12 330 2 516 29 93 10 567 10 677 6 491 4 440 10 492 4 290 16 521 4 596 2 187 2 295 6 119 16 245 10 
378 4 691 6 
331 2 
687 2 549 2 741 2 83 2 506 2 46 2 130 2 157 2 533 2 304 2 132 2 383 2 485 2 651 2 235 4 160 2 356 2 207 2 735 2 618 2 760 2 16 2 337 2 472 2 
573 2 320 2 147 1 275 29 503 4 720 4 402 4 746 4 23 2 747 6 508 17 6 6 432 43 174 2 175 6 202 3 701 4 29 14 410 2 487 19 732 4 516 47 93 6 567 14 677 4 440 14 491 2 96 2 361 4 591 8 72 6 290 29 267 3 271 4 295 4 601 2 119 29 75 6 245 14 
557 2 741 2 546 2 
398 2 550 2 638 2 457 22 717 2 49 2 182 2 706 2 663 2 33 2 772 10 28 2 112 2 52 2 
396 2 501 2 275 2 253 2 508 2 281 2 432 4 234 2 701 2 29 2 487 2 516 6 93 4 567 2 440 2 491 2 390 2 654 2 313 2 290 2 736 2 119 2 245 2 
29 4 487 4 341 2 516 16 503 4 275 8 567 4 440 4 72 6 4 2 290 8 271 4 432 12 433 2 119 8 75 6 245 4 
421 6 741 4 389 2 615 2 640 2 228 2 557 2 154 2 405 2 169 2 453 2 336 2 533 2 546 2 480 2 471 2 670 2 
329 2 331 2 617 2 229 2 300 2 664 2 443 2 74 2 783 2 774 2 
84 2 167 1 5 2 278 1 478 1 482 2 379 2 90 2 380 2 381 2 285 2 387 1 181 3 589 1 590 2 592 4 493 1 99 2 595 2 295 32 497 2 194 5 499 2 603 1 21 5 607 2 299 2 302 2 726 4 26 1 114 1 518 2 206 2 211 2 216 2 525 2 627 2 36 6 628 2 218 1 629 2 120 2 40 4 633 2 221 2 425 2 45 1 227 2 126 6 746 30 128 2 325 1 327 1 430 2 650 2 236 2 754 2 442 2 334 1 242 2 445 6 548 1 547 1 244 2 143 2 246 1 146 2 659 2 247 1 552 11 62 2 344 4 450 5 451 2 665 2 562 3 563 6 65 2 565 2 676 4 264 1 355 6 780 2 465 2 359 2 568 2 269 2 366 1 470 4 
673 2 295 2 
559 2 243 2 295 4 
578 2 
122 2 222 12 43 2 688 4 166 2 692 4 642 2 374 4 230 6 577 4 375 4 277 12 86 8 697 8 748 4 750 12 231 38 232 2 233 6 284 2 649 2 484 8 384 2 177 16 286 2 178 6 753 10 180 2 539 2 8 6 95 2 94 2 588 2 12 12 541 6 441 2 655 12 709 12 594 4 764 2 599 12 713 8 766 2 55 38 103 2 723 2 63 8 108 6 303 12 200 8 511 2 27 38 349 16 614 12 161 12 413 2 208 2 69 2 70 2 71 4 681 2 362 12 682 4 363 8 683 10 737 4 624 4 526 2 76 2 
611 2 82 2 328 1 239 2 
82 2 620 2 
203 2 778 2 468 2 741 2 82 2 481 2 492 2 
203 2 82 2 393 2 
203 2 82 2 100 2 
215 2 44 2 239 2 
203 2 82 2 
44 2 555 2 
82 2 710 2 
423 2 44 2 239 2 
667 2 239 2 373 2 
646 2 239 2 144 2 
725 2 224 2 239 2 
263 2 239 2 643 2 
44 2 172 2 
82 2 31 2 
164 2 373 2 
368 2 144 2 
725 2 604 2 
258 2 643 2 
44 2 556 2 
621 2 643 2 
725 2 532 2 
162 2 144 2 
570 2 373 2 
423 2 57 2 44 2 239 2 
423 2 57 2 377 2 44 2 239 2 
631 2 44 2 239 2 
44 2 239 2 648 2 
289 2 429 2 283 2 448 2 
778 2 741 2 7 2 382 2 
778 2 468 2 741 2 141 2 7 2 382 2 
203 2 778 2 741 2 82 2 272 2 492 2 
337 2 582 2 
778 2 741 2 308 2 492 2 
725 2 693 2 
77 2 
779 2 373 2 
576 2 144 2 
715 2 643 2 144 2 
770 2 643 2 144 2 
357 2 144 2 643 2 
30 2 144 2 643 2 
41 2 741 2 401 2 61 6 109 6 257 2 778 2 78 2 
44 2 782 2 
658 2 634 2 538 4 288 2 457 6 769 2 213 2 544 2 15 2 593 2 268 2 708 2 645 2 316 2 657 4 419 2 751 2 483 2 
251 2 239 2 
380 2 
575 2 165 2 84 2 700 2 482 2 379 2 89 2 90 2 285 2 91 2 590 2 592 6 99 2 295 22 497 2 603 2 505 2 106 2 299 2 197 2 403 2 198 2 726 4 407 2 204 2 306 2 307 2 32 2 314 2 525 2 216 2 217 2 627 2 36 2 629 2 120 2 425 2 530 2 126 4 746 22 128 2 430 2 647 2 236 2 333 2 442 2 242 2 445 2 244 2 765 4 447 2 659 2 552 4 60 2 344 4 665 6 773 2 563 6 348 2 351 2 565 2 676 4 354 2 355 6 780 2 359 6 568 2 678 2 269 2 467 2 366 2 470 4 685 2 
575 2 165 2 84 2 700 2 482 2 379 2 89 2 90 2 285 2 91 2 590 2 592 6 99 2 295 22 497 2 603 2 505 2 299 2 197 2 403 2 198 2 726 4 727 2 728 2 407 2 306 2 307 2 412 2 32 2 525 2 216 2 217 2 627 2 36 2 629 2 120 2 425 2 530 2 126 5 746 22 128 2 430 2 647 2 650 1 236 2 333 2 442 2 242 2 445 2 244 2 765 4 143 1 447 2 659 2 552 4 60 2 344 4 665 6 773 2 563 6 348 2 351 2 565 2 676 4 354 2 355 6 780 2 359 6 568 2 678 2 269 2 467 2 366 2 470 4 685 2 
705 2 
415 2 574 2 
220 2 527 4 422 2 425 2 641 8 124 2 226 2 745 2 746 6 749 4 88 2 176 2 434 2 583 2 704 2 184 2 13 2 590 2 241 2 444 2 242 2 295 12 188 2 244 2 296 4 602 4 193 2 250 2 249 2 400 2 551 2 719 8 558 6 254 2 726 2 563 4 668 2 261 4 454 10 672 2 515 4 674 2 309 2 460 2 464 2 210 4 622 2 117 2 568 2 315 2 266 4 214 2 364 6 365 2 525 2 469 2 470 2 686 6 39 2 120 2 
220 2 527 4 422 2 425 2 427 4 641 8 124 2 226 2 745 2 746 6 749 4 88 2 176 2 434 2 583 2 537 2 183 2 704 2 184 2 13 2 590 2 241 2 444 2 242 2 295 12 188 2 244 2 296 4 602 4 193 2 250 2 400 2 551 2 719 8 558 6 254 2 726 2 563 4 668 2 454 10 261 4 672 2 515 4 674 2 459 2 309 2 464 2 210 4 622 2 117 2 568 2 315 2 214 2 266 4 364 8 365 2 525 2 469 2 470 2 686 8 39 2 120 2 
602 4 527 2 422 2 400 2 674 2 117 2 214 2 266 4 558 2 365 2 444 2 469 2 686 2 296 2 668 2 176 2 434 2 261 2 
220 2 527 4 422 2 425 2 641 4 124 2 226 2 745 2 746 6 749 4 88 2 176 2 434 2 583 2 704 2 184 2 13 2 590 2 241 2 444 2 242 2 295 12 188 2 244 2 296 4 602 4 193 2 249 2 400 2 551 2 719 4 558 4 254 2 726 2 563 4 668 2 261 4 454 6 672 2 515 4 674 2 459 2 309 2 460 2 464 2 210 4 622 2 117 2 568 2 315 2 266 4 214 2 364 6 365 2 525 2 469 2 470 2 686 6 39 2 120 2 
220 2 527 4 422 2 425 2 274 2 641 4 124 2 226 2 745 2 746 6 749 4 88 2 176 2 434 2 583 2 704 2 184 2 13 2 590 2 241 2 444 2 242 2 295 12 188 2 244 2 296 4 602 4 193 2 249 2 400 2 551 2 719 4 558 6 254 2 726 2 563 4 668 2 261 4 454 6 672 2 515 4 674 2 309 2 460 2 464 2 210 4 622 2 117 2 568 2 315 2 266 4 214 2 364 6 365 2 525 2 469 2 470 2 686 4 39 2 120 2 
220 2 527 4 422 2 425 2 641 8 124 2 226 2 745 2 746 6 749 4 88 2 176 2 434 2 583 2 704 2 184 2 13 2 590 2 241 2 444 2 242 2 295 12 188 2 244 2 296 4 602 4 193 2 250 2 249 2 400 2 551 2 719 4 558 6 254 2 726 2 563 4 668 2 261 4 454 6 672 2 515 4 674 2 309 2 460 2 464 2 210 4 622 2 117 2 568 2 315 2 266 4 214 2 364 6 365 2 525 2 469 2 470 2 686 6 39 2 120 2 
220 2 527 4 422 2 425 2 274 2 641 8 124 2 226 2 745 2 746 6 749 4 88 2 176 2 434 2 583 2 704 2 184 2 13 2 590 2 241 2 444 2 242 2 295 12 188 2 244 2 296 4 602 4 193 2 250 2 249 2 400 2 551 2 719 8 558 8 254 2 726 2 563 4 668 2 261 4 454 10 672 2 515 4 674 2 309 2 460 2 464 2 210 4 622 2 117 2 568 2 315 2 266 4 214 2 364 8 365 2 525 2 469 2 470 2 686 6 39 2 120 2 
220 2 527 4 422 2 425 2 641 8 124 2 226 2 745 2 746 6 749 4 88 2 176 2 434 2 583 2 704 2 184 2 13 2 590 2 241 2 444 2 242 2 295 12 188 2 244 2 296 4 602 4 193 2 250 2 249 2 400 2 551 2 719 8 558 6 254 2 726 2 563 4 668 2 261 4 454 10 672 2 515 4 674 2 309 2 460 2 464 2 210 4 622 2 117 2 568 2 315 2 266 4 214 2 364 6 365 2 525 2 469 2 470 2 686 6 39 2 120 2 
220 2 602 2 527 2 400 2 551 2 274 2 124 2 641 2 299 2 558 4 665 2 430 2 749 2 88 2 482 2 434 2 261 2 583 2 672 2 674 2 460 2 309 2 184 2 704 2 13 2 210 2 464 2 622 2 117 2 214 2 266 2 364 4 444 2 295 4 469 2 686 2 163 2 
220 2 602 2 250 2 527 2 400 2 551 2 124 2 641 6 299 2 558 4 665 2 430 2 749 2 88 2 482 2 434 2 261 2 583 2 672 2 674 2 460 2 309 2 184 2 704 2 13 2 210 2 464 2 622 2 117 2 214 2 266 2 364 4 444 2 295 4 469 2 686 4 163 2 
220 2 602 2 250 2 527 2 400 2 551 2 124 2 719 4 641 6 299 2 558 4 665 2 430 2 749 2 88 2 482 2 454 4 434 2 261 2 583 2 672 2 674 2 460 2 309 2 184 2 704 2 13 2 210 2 464 2 622 2 117 2 214 2 266 2 364 4 444 2 295 4 469 2 686 4 163 2 
220 2 602 2 250 2 527 2 400 2 551 2 124 2 719 4 641 6 299 2 558 4 665 2 430 2 749 2 88 2 482 2 454 4 434 2 261 2 583 2 672 2 674 2 460 2 309 2 184 2 704 2 13 2 210 2 464 2 622 2 117 2 214 2 266 2 364 4 444 2 295 4 469 2 686 4 163 2 
220 2 602 2 250 2 527 4 400 2 551 2 124 2 719 4 641 6 558 6 749 2 88 2 454 4 434 2 261 4 583 2 672 2 515 2 674 2 460 2 309 2 184 2 704 2 13 2 210 2 464 2 622 2 117 2 214 2 266 2 364 4 444 2 295 4 469 2 686 6 
84 4 88 2 379 2 380 2 90 2 285 2 583 2 585 3 704 2 184 2 13 2 590 2 592 6 99 2 293 2 295 28 497 2 602 2 400 2 196 2 607 2 197 2 726 4 515 2 518 2 309 2 210 2 117 2 622 2 214 2 525 2 216 2 627 2 36 3 629 2 120 2 220 2 527 4 121 2 425 2 639 2 124 2 530 2 641 6 126 6 746 24 128 2 47 2 749 2 434 2 650 2 236 2 442 2 241 2 444 2 242 2 445 3 244 2 765 4 143 2 146 2 659 2 250 2 551 2 552 3 60 2 344 4 558 6 563 6 261 4 350 2 454 2 159 2 672 2 565 2 674 2 676 4 460 2 355 8 464 2 780 2 359 6 568 2 266 2 269 2 364 4 469 2 470 4 686 6 
431 2 704 2 13 2 
431 2 704 2 13 2 
84 2 580 2 482 2 379 2 90 2 285 2 583 2 704 2 185 2 13 2 186 2 590 2 592 2 99 2 295 18 497 2 602 2 400 2 719 2 299 2 197 2 726 4 205 2 210 2 214 2 524 2 525 2 627 2 629 2 120 2 527 2 425 2 530 2 641 6 124 2 126 6 746 14 128 2 430 2 749 2 650 2 236 2 442 2 335 2 242 2 244 2 143 2 447 2 659 2 250 2 552 2 60 2 344 4 558 4 665 2 563 6 776 2 454 2 261 2 565 2 674 2 676 4 355 2 464 2 780 2 359 2 568 2 266 2 269 2 364 4 470 4 686 4 
740 2 397 2 438 2 616 2 67 2 84 2 2 2 312 2 746 2 47 2 415 2 242 2 479 2 295 4 494 2 38 2 668 2 
84 2 580 4 482 2 379 2 90 2 285 2 583 2 704 2 13 2 185 2 186 2 590 2 592 2 99 2 295 18 497 2 602 2 400 2 719 2 299 2 197 2 726 4 513 2 205 2 210 2 214 2 524 2 525 2 627 2 629 2 120 2 527 2 425 2 530 2 641 6 124 2 126 6 746 14 128 2 430 2 749 2 650 2 236 2 442 2 335 2 242 2 339 2 244 2 143 2 447 2 659 2 250 2 552 4 60 2 344 4 558 4 665 2 563 6 776 2 454 2 261 2 565 2 674 2 676 4 355 2 464 2 780 2 359 2 568 2 266 2 269 2 364 4 470 4 686 4 
84 2 580 2 482 2 379 2 90 2 285 2 583 2 704 2 185 2 13 2 186 2 590 2 592 2 99 2 295 18 497 2 602 2 400 2 719 2 299 2 197 2 726 4 205 2 210 2 214 2 524 2 525 2 627 2 629 2 120 2 527 2 425 2 530 2 641 6 124 2 126 6 746 14 128 2 430 2 749 2 650 2 236 2 442 2 335 2 242 2 244 2 143 2 447 2 659 2 250 2 552 2 60 2 344 4 558 4 665 2 563 6 776 2 454 2 261 2 565 2 674 2 676 4 355 2 464 2 780 2 359 2 568 2 266 2 269 2 364 4 470 4 686 4 
287 2 632 2 514 2 123 2 238 2 127 2 240 2 406 2 520 2 656 2 295 4 784 2 495 2 318 2 297 2 
20 2 552 3 342 2 22 2 721 2 746 2 403 6 610 2 775 2 260 1 134 2 517 2 11 3 587 2 355 2 592 2 359 2 619 2 216 2 445 3 295 2 140 2 36 3 765 2 714 4 
20 2 552 2 342 2 22 2 721 2 746 2 403 6 610 2 775 2 134 2 517 2 11 2 587 2 355 2 592 2 359 2 619 2 216 2 445 2 295 2 140 2 36 2 765 2 714 4 
20 2 552 2 342 2 22 2 721 2 746 2 403 6 610 2 775 2 134 2 517 2 11 2 587 2 355 2 592 2 359 2 619 2 216 2 445 2 295 2 140 2 36 2 765 2 714 4 
275 2 746 4 87 3 376 2 579 2 432 4 175 4 381 2 435 4 386 2 440 2 240 4 290 2 137 2 295 10 711 3 140 2 142 6 245 2 446 2 500 4 552 3 771 2 722 2 346 2 25 4 509 2 65 2 612 2 29 2 516 6 355 2 567 2 310 2 677 2 209 4 216 2 119 2 36 3 684 3 
275 2 746 4 87 2 376 2 579 2 432 4 175 4 381 2 435 4 487 2 386 2 440 2 240 4 290 2 137 2 295 10 711 2 140 2 142 6 245 2 446 2 500 4 552 2 771 2 23 2 722 2 508 2 346 2 25 4 509 2 65 2 612 2 29 2 516 4 355 2 567 2 310 2 677 2 209 4 216 2 119 2 36 2 684 2 
275 2 746 4 87 2 376 2 579 2 432 4 175 4 381 2 435 4 487 2 386 2 440 2 240 4 290 2 137 2 295 10 711 2 140 2 142 6 245 2 446 2 500 4 552 2 771 2 23 2 722 2 508 2 346 2 25 4 509 2 65 2 612 2 29 2 516 4 355 2 567 2 310 2 677 2 209 4 216 2 119 2 36 2 684 2 
275 2 746 4 87 2 376 2 579 2 432 4 175 4 381 2 435 4 487 2 386 2 440 2 240 4 290 2 137 2 295 10 711 2 140 2 142 6 245 2 446 2 500 4 552 2 771 2 23 2 722 2 508 2 346 2 25 4 509 2 65 2 612 2 29 2 516 4 355 2 567 2 310 2 677 2 209 4 216 2 119 2 36 2 684 2 
275 2 746 4 87 2 376 2 579 2 432 4 175 4 381 2 435 4 487 4 386 2 440 2 240 4 290 2 137 2 295 10 711 2 140 2 142 6 245 2 446 2 500 4 552 2 771 2 23 4 722 2 508 4 346 2 25 4 509 2 65 2 612 2 29 2 516 4 355 2 567 2 310 2 677 2 209 4 216 2 119 2 36 2 684 2 
763 2 477 2 292 2 623 2 360 2 436 2 
102 2 291 2 292 2 597 2 217 2 347 2 101 2 
716 2 424 2 59 2 298 1 690 2 228 1 746 8 323 2 531 2 405 1 24 2 66 2 385 2 675 2 458 2 92 2 757 2 265 2 545 2 523 1 295 10 244 2 273 2 369 2 319 1 190 2 
191 2 248 2 275 6 152 2 746 6 23 3 153 2 508 3 6 4 432 12 175 4 29 6 487 3 516 16 567 6 463 2 677 2 440 6 543 2 591 2 361 2 72 4 290 6 271 2 51 2 295 6 738 2 119 6 496 2 245 6 
702 2 636 1 81 2 528 2 500 2 742 2 135 2 311 2 322 2 746 1 139 2 25 2 294 7 295 1 170 2 569 2 435 2 572 4 
702 4 528 2 81 4 500 2 742 2 135 2 311 2 322 2 139 2 25 2 294 6 170 4 569 2 435 2 572 4 
702 8 636 1 528 8 81 8 500 2 742 2 135 6 311 2 322 2 746 1 139 2 25 2 294 10 295 1 170 8 569 2 435 2 572 4 
702 2 81 2 500 2 742 2 311 2 322 2 139 2 25 2 294 2 170 2 569 2 435 2 572 2 
370 6 473 10 80 4 0 2 276 4 476 4 1 4 3 6 695 2 696 2 85 2 279 4 282 4 581 2 285 14 584 4 486 4 388 4 703 2 10 6 586 16 489 4 490 6 707 26 14 1 391 2 17 10 98 4 392 10 295 150 712 8 497 14 19 12 395 2 104 2 399 4 105 10 502 24 195 6 606 42 107 2 724 6 199 4 301 8 201 4 510 8 729 2 409 6 411 4 734 6 733 2 116 18 519 11 212 4 34 2 416 50 118 4 625 10 626 36 417 6 317 2 219 6 739 6 629 8 420 6 42 6 635 6 426 8 529 2 125 6 126 248 428 24 746 134 324 2 644 4 131 6 535 4 536 8 650 58 133 24 540 8 332 24 756 16 755 4 652 10 653 6 759 42 138 4 143 58 340 90 53 4 145 90 54 8 767 10 56 5 58 34 661 28 553 84 343 4 449 8 554 17 148 2 150 16 662 4 151 6 344 88 452 8 255 16 156 6 560 10 561 18 259 6 777 26 671 2 262 8 669 124 455 4 456 6 564 2 676 112 68 24 462 12 461 24 466 92 679 22 73 6 367 6 571 2 
630 2 370 2 473 2 474 2 635 2 223 2 743 2 744 2 689 4 475 2 426 2 321 2 372 2 371 2 126 44 3 4 746 44 129 2 695 2 48 2 168 2 85 2 326 2 280 2 698 2 534 2 285 2 536 2 584 2 133 2 650 2 332 2 488 2 586 4 756 4 652 2 391 2 762 2 97 2 17 2 50 2 392 2 338 2 600 2 295 46 143 2 497 2 54 2 767 2 395 2 56 2 104 2 105 2 502 2 661 38 605 2 252 4 718 2 554 2 148 2 344 20 345 2 155 2 64 2 255 4 156 2 561 2 560 2 666 2 259 2 510 2 305 4 111 2 113 2 730 2 512 2 262 6 669 6 731 4 408 2 613 2 456 2 676 20 414 2 358 6 35 2 625 2 118 2 626 2 37 2 739 2 629 2 
370 4 473 4 1 4 476 4 3 2 85 2 279 4 280 10 581 2 285 6 486 4 179 4 9 2 586 10 489 4 490 4 391 2 17 4 98 4 392 4 598 4 295 78 189 2 497 6 498 4 192 32 395 2 104 2 504 16 606 8 608 8 609 8 507 4 724 4 199 4 510 2 113 2 409 4 411 4 733 2 734 4 212 4 34 2 416 8 626 6 417 4 317 2 418 2 219 4 629 2 739 4 630 10 420 4 42 4 223 2 635 4 743 10 426 2 125 4 126 104 746 70 644 2 131 4 752 2 650 28 756 10 136 2 652 4 439 4 542 4 653 4 759 16 138 4 338 2 143 30 53 4 54 2 767 6 660 16 58 30 661 14 553 24 449 4 149 2 554 10 148 2 150 8 662 4 151 4 344 36 452 4 255 10 156 4 561 10 259 4 669 24 262 6 456 4 353 8 352 8 676 44 462 14 461 8 466 24 680 4 73 4 367 4 
370 4 473 2 223 2 635 4 744 2 426 2 529 2 1 2 126 40 3 2 746 26 644 2 695 2 85 2 285 2 650 12 703 2 586 6 756 6 652 2 391 2 17 2 392 2 295 28 143 12 497 2 53 2 54 2 395 2 767 2 56 2 399 2 104 2 661 14 58 6 148 2 554 2 150 6 107 2 344 14 452 4 255 6 156 4 301 2 561 2 259 4 510 2 729 2 671 2 262 4 669 8 455 2 456 4 676 14 519 2 679 10 626 2 739 4 629 2 
566 2 

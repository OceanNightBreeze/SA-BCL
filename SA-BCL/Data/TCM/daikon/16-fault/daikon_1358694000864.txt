#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 510 433 30 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (490,720) (490,720) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (65,651) (65,651) 235 93 491 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (65,651) (65,651) 529 254 281 335 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (65,651) 256 254 281 335 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.UnsupportedOperationException 463 659 254 281 335 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.Error 172 254 281 335 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:lexLT([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.PptSlice2:arity()I
daikon.Quant:eltsEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:memberOf(S[S)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGTE([II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Debug:logDetail()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isScalar()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eq(FF)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isArray()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:lexLTE([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.Node:Node()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltsLTE([II)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([D)[D
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.PptSlice1:num_samples()I
daikon.PptName:isEnterPoint()Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:union([I[I)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_ntk()I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:isReverse([I[I)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Intern:intern([J)[J
daikon.Quant:eq(II)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:relate_var()V
daikon.inv.Invariant:justified()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:memberOf(I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltsLT([II)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:dimensions()I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:lt(II)Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.RootNode:RootNode()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ModBitTracker:num_sets()I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38854 | return null
daikon.VarInfoName.Elements:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Invariant:prob_and(DD)D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object; | RETURN | 62299 | return null
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern:numIntArrays()I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ModBitTracker:num_samples()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltwiseGT([I)Z
daikon.Debug:logOn()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:intern([I)[I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183876 | = null
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C | CONDITION | 5637 | if (x) -> if (!x)
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:concat([I[I)[I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eq(JJ)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ModBitTracker:split(I)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
461 2 651 2 65 2 658 2 733 2 557 2 322 2 291 4 255 2 
292 6 597 2 417 2 455 2 652 2 338 2 111 6 333 2 722 2 237 6 368 2 
651 2 65 2 365 2 548 2 479 6 232 6 518 4 60 6 152 2 373 4 595 6 506 2 614 2 
651 6 65 6 608 12 609 8 442 2 318 26 270 16 444 4 492 2 466 6 761 10 102 10 103 10 537 8 326 16 6 10 24 10 300 29 72 4 329 2 618 2 12 2 697 16 781 8 15 8 749 2 190 4 646 2 707 6 142 4 
330 6 77 4 
229 2 
340 2 442 2 681 2 194 2 489 2 535 2 349 2 538 2 401 2 248 2 404 2 198 2 302 2 255 2 635 2 153 2 52 2 155 2 739 4 53 2 54 2 458 4 744 2 746 2 606 2 651 4 65 4 317 2 173 2 321 4 125 2 176 4 471 2 376 2 724 2 775 2 81 2 331 2 572 2 574 2 381 2 287 2 89 2 386 2 
269 4 651 4 65 4 608 22 609 6 318 48 270 32 526 6 732 4 528 6 444 2 345 4 395 6 492 2 466 4 761 6 103 16 102 16 326 32 713 4 24 16 6 16 300 54 613 6 473 2 432 4 599 6 516 2 697 32 285 4 334 6 781 18 554 2 729 2 754 2 707 4 756 2 584 4 218 8 
340 2 598 2 123 2 
770 2 143 22 173 2 475 2 109 2 670 2 380 2 571 2 779 10 309 2 726 2 493 2 126 2 372 2 
608 2 270 2 318 4 444 2 761 4 103 2 102 2 683 2 326 2 24 2 6 2 448 2 300 6 356 2 454 2 778 2 697 2 781 2 115 2 625 2 707 2 758 2 677 2 
488 2 608 4 432 4 270 8 318 12 526 6 599 6 697 8 345 4 346 2 102 4 103 4 326 8 24 4 6 4 300 16 72 2 
559 4 340 8 45 2 144 2 123 6 711 62 347 2 495 2 509 2 538 4 400 2 401 2 176 4 105 2 543 4 594 2 737 4 407 4 634 2 279 2 428 4 28 4 723 2 617 2 185 4 598 2 669 4 695 10 780 2 460 14 435 2 86 10 576 4 162 4 113 2 59 2 88 2 580 4 217 2 339 2 
514 2 585 2 229 2 478 2 110 2 175 2 462 2 180 2 267 2 425 2 
96 2 297 4 3 4 589 1 682 3 104 2 402 2 403 1 687 2 304 2 596 2 305 6 689 2 107 2 600 16 699 2 13 24 205 2 209 8 418 3 211 2 704 2 703 2 504 3 312 3 419 2 19 5 314 1 316 1 119 3 219 2 220 2 507 2 319 16 610 2 22 4 124 1 323 24 325 2 221 2 222 8 127 2 25 2 612 2 512 1 26 2 224 2 423 1 718 2 719 1 721 3 513 6 426 2 129 2 429 2 515 12 136 2 619 3 332 2 137 3 620 1 231 2 138 2 521 2 38 16 337 2 40 2 624 2 623 2 439 4 440 2 523 6 627 4 242 4 341 2 243 3 245 2 244 2 343 3 443 2 527 2 247 2 148 2 350 2 447 2 540 1 46 2 251 1 353 2 542 2 734 3 253 2 546 8 738 2 638 2 156 2 257 2 743 2 159 4 641 2 260 1 161 2 551 2 747 2 264 2 166 2 64 2 651 34 65 32 760 3 171 16 364 1 272 2 69 2 468 32 71 2 658 2 564 2 765 2 182 2 567 32 377 2 74 2 772 1 665 2 474 2 283 2 667 2 776 2 78 2 80 6 477 1 671 2 82 2 674 2 675 2 481 2 188 2 577 2 483 2 383 2 384 2 785 2 90 2 192 2 389 4 92 1 
651 2 259 2 
651 4 541 2 582 2 
366 2 
94 2 106 2 44 2 230 2 30 2 433 2 122 2 84 2 83 2 700 2 657 2 712 2 14 2 510 2 16 2 336 2 151 2 191 2 755 4 212 2 505 2 
362 2 467 2 234 1 757 2 
467 2 324 2 
340 2 467 2 501 2 587 2 750 2 361 2 142 2 
467 2 501 2 184 2 
467 2 501 2 2 2 
680 2 459 2 757 2 
467 2 501 2 
70 2 680 2 
467 2 258 2 
308 2 680 2 757 2 
210 2 705 2 757 2 
503 2 757 2 531 2 
48 2 757 2 630 2 
544 2 213 2 757 2 
416 2 680 2 
467 2 666 2 
210 2 590 2 
503 2 5 2 
48 2 702 2 
544 2 605 2 
357 2 680 2 
622 2 544 2 
48 2 649 2 
751 2 503 2 
210 2 33 2 
410 2 308 2 680 2 757 2 
410 2 308 2 680 2 757 2 573 2 
680 2 757 2 656 2 
680 2 757 2 536 2 
748 2 117 2 8 2 27 2 
771 2 143 6 692 2 310 2 714 2 250 2 87 2 579 2 405 2 470 2 632 2 484 2 730 2 522 2 706 2 167 2 406 4 452 4 
757 2 561 2 
340 2 154 2 361 2 767 2 
340 2 154 2 587 2 414 2 361 2 767 2 
340 2 467 2 501 2 265 2 361 2 142 2 
11 2 471 2 
340 2 294 2 361 2 142 2 
48 2 427 2 
98 2 544 2 
520 2 210 2 
503 2 266 2 
503 2 544 2 56 2 
503 2 195 2 544 2 
503 2 20 2 544 2 
503 2 544 2 214 2 
340 2 9 2 490 2 388 2 361 2 720 6 
496 2 680 2 
551 2 
96 2 393 4 297 2 104 2 402 2 498 2 596 2 305 6 200 2 694 2 698 2 205 2 701 2 703 2 17 2 215 2 507 2 22 4 221 2 25 2 512 2 227 2 718 2 513 4 129 6 515 8 132 2 136 2 332 2 620 2 38 6 521 2 39 4 40 4 439 4 523 2 627 4 242 4 341 2 245 2 527 2 148 2 351 2 353 2 542 2 546 2 638 2 547 2 159 2 161 2 745 2 164 2 753 2 651 26 65 26 272 2 468 6 371 2 658 2 182 2 567 4 377 2 74 2 474 2 283 2 667 2 80 2 82 2 674 2 481 2 189 2 483 2 383 2 389 2 
96 2 393 4 297 2 97 2 104 2 402 2 596 2 305 6 200 2 694 2 698 2 205 2 701 2 703 2 17 2 215 2 507 2 22 4 221 2 25 2 512 2 227 2 718 2 513 5 129 6 515 8 132 2 136 2 332 2 620 2 38 6 521 2 39 4 40 4 439 4 523 2 627 4 242 4 341 2 245 2 527 2 148 2 351 2 353 2 542 2 546 2 638 2 547 2 159 2 641 2 161 2 745 2 264 1 753 2 651 26 170 2 65 26 272 2 468 6 371 2 658 2 178 2 182 2 567 4 377 2 74 2 474 2 283 2 667 2 78 1 80 2 82 2 674 2 481 2 483 2 383 2 389 2 
552 2 
476 2 18 2 
292 2 168 2 228 2 10 2 135 2 652 2 111 2 550 4 286 2 290 2 288 2 417 2 555 2 223 4 645 2 593 2 355 2 451 2 
292 4 238 2 241 2 242 2 245 2 296 4 196 2 353 2 542 2 633 2 593 2 736 4 355 2 451 2 305 4 307 2 10 2 691 4 601 2 111 6 550 4 417 4 555 4 645 2 63 2 268 2 168 2 651 12 120 2 65 6 465 2 652 4 653 2 174 2 22 2 762 4 23 6 327 2 223 4 764 2 328 4 182 2 722 2 377 2 29 2 474 2 228 2 76 2 668 2 667 2 135 2 286 2 288 2 290 2 35 2 338 2 487 2 140 2 237 6 390 2 
292 6 238 2 241 2 242 2 245 2 296 4 196 2 353 2 542 2 633 2 593 2 736 4 355 2 451 2 305 4 307 2 10 2 455 2 691 4 601 2 111 4 550 4 417 4 555 4 645 2 63 2 268 2 168 2 651 12 120 2 65 6 465 2 652 4 653 2 174 2 22 2 762 4 23 6 327 2 223 4 764 2 328 4 182 2 722 2 377 2 29 2 474 2 228 2 76 2 668 2 667 2 135 2 286 2 288 2 290 2 35 2 487 2 140 2 237 6 390 2 
292 6 238 2 241 2 242 2 245 2 296 4 196 2 353 2 542 2 633 2 593 2 736 4 355 2 451 2 305 4 597 2 307 2 10 2 691 4 601 2 111 6 550 4 417 4 555 4 645 2 63 2 268 2 168 2 651 12 120 2 65 6 465 2 652 4 653 2 174 2 22 2 762 4 23 6 327 2 223 4 764 2 328 8 182 2 722 2 377 2 29 2 474 2 228 2 76 2 668 2 667 2 135 2 286 2 288 2 290 2 35 2 487 2 140 2 237 6 390 2 
292 8 238 2 241 2 242 2 245 2 296 4 196 2 353 2 542 2 633 2 593 2 736 4 355 2 451 2 305 4 597 2 307 2 10 2 455 2 691 8 601 2 111 6 550 4 417 4 555 4 645 2 63 2 268 2 168 2 651 12 120 2 65 6 465 2 652 4 653 2 174 2 22 2 762 4 23 10 327 2 223 4 764 2 328 8 182 2 722 2 377 2 29 2 474 2 228 2 76 2 668 2 667 2 135 2 286 2 288 2 290 2 35 2 487 2 140 2 237 8 390 2 
292 6 238 2 241 2 242 2 245 2 296 4 196 2 353 2 542 2 633 2 593 2 736 4 355 2 451 2 305 4 597 2 307 2 10 2 691 8 601 2 111 6 550 4 417 4 555 4 645 2 63 2 268 2 168 2 651 12 120 2 65 6 465 2 652 4 653 2 174 2 22 2 762 4 23 10 327 2 223 4 764 2 328 8 182 2 722 2 377 2 29 2 474 2 228 2 76 2 668 2 667 2 135 2 286 2 288 2 290 2 35 2 487 2 140 2 237 6 390 2 
0 2 586 6 193 1 394 6 196 2 4 2 396 2 197 2 402 2 593 2 596 2 412 6 10 2 202 2 601 2 205 2 208 6 602 6 417 4 17 2 216 1 611 1 22 4 23 2 223 4 29 2 228 2 431 2 434 1 35 2 438 6 38 6 39 4 236 7 439 4 237 12 627 4 238 2 241 2 242 4 245 2 629 2 633 2 451 2 638 2 455 4 259 6 261 2 55 2 262 2 264 2 644 1 645 2 61 2 63 2 650 2 268 2 651 46 65 24 464 4 465 2 652 4 653 2 67 2 273 2 468 8 658 2 661 2 663 2 277 1 74 2 664 2 474 2 667 2 283 2 668 2 76 4 78 2 80 2 82 2 672 2 286 2 481 2 482 4 288 2 290 2 485 2 487 2 292 8 96 2 679 2 297 2 296 6 684 2 104 2 688 10 305 6 306 6 307 2 111 4 698 2 703 12 116 2 708 2 315 2 120 2 507 2 121 2 508 8 320 1 709 7 327 2 328 2 717 1 513 6 722 4 129 6 515 4 135 2 136 2 523 2 525 1 341 2 527 2 348 6 146 2 149 2 353 2 542 2 736 4 354 6 355 2 546 2 157 6 742 2 549 6 159 2 161 2 745 2 550 4 555 4 556 6 360 2 168 2 174 4 366 6 762 8 763 6 371 4 764 2 179 2 182 2 567 2 377 2 570 2 777 2 389 2 582 6 390 2 
292 8 0 2 586 6 96 2 679 2 296 6 297 4 394 6 196 2 4 2 396 2 197 2 684 2 104 2 402 2 593 2 688 10 306 6 596 2 305 6 412 6 307 2 597 4 10 2 202 2 698 2 111 8 601 2 205 2 602 6 208 6 417 4 703 12 116 2 17 2 315 2 708 2 120 2 421 2 121 2 507 2 508 8 22 4 23 2 327 2 223 4 328 6 722 4 513 6 129 6 29 2 515 8 228 2 431 2 135 2 136 2 437 2 35 2 438 6 38 6 40 2 39 4 439 4 237 12 523 2 238 2 627 4 241 2 242 4 341 2 245 2 629 2 527 2 348 6 146 2 149 2 353 2 633 2 542 2 354 6 736 4 355 2 546 2 451 2 638 2 259 6 157 6 549 6 742 2 159 4 55 2 261 2 262 2 745 2 161 2 550 4 264 2 555 4 645 2 61 2 556 6 360 2 650 2 63 2 268 2 168 2 651 48 65 26 464 4 465 2 652 4 653 2 174 4 273 2 67 2 366 6 762 8 763 6 371 4 468 8 658 2 179 2 764 2 661 2 663 2 182 2 567 2 377 2 74 2 664 2 474 2 76 4 668 2 283 2 667 2 78 2 570 2 777 2 80 2 672 2 82 2 286 2 481 2 482 4 290 2 288 2 485 2 389 4 487 2 582 6 390 2 
292 8 0 2 586 6 96 2 679 2 296 6 297 4 394 6 196 2 4 2 396 2 197 2 684 2 104 2 402 2 593 2 688 10 306 6 596 2 305 6 412 6 307 2 597 4 10 2 202 2 691 4 698 2 111 8 601 2 205 2 602 6 208 6 417 4 703 12 116 2 17 2 315 2 708 2 120 2 421 2 121 2 507 2 508 8 22 4 23 6 327 2 223 4 328 6 722 4 513 6 129 6 29 2 515 8 228 2 431 2 135 2 136 2 437 2 35 2 438 6 38 6 40 2 39 4 439 4 237 12 523 2 238 2 627 4 241 2 242 4 341 2 245 2 629 2 527 2 348 6 146 2 149 2 353 2 633 2 542 2 354 6 736 4 355 2 546 2 451 2 638 2 259 6 157 6 549 6 742 2 159 4 55 2 261 2 262 2 745 2 161 2 550 4 264 2 555 4 645 2 61 2 556 6 360 2 650 2 63 2 268 2 168 2 651 48 65 26 464 4 465 2 652 4 653 2 174 4 273 2 67 2 366 6 762 8 763 6 371 4 468 8 658 2 179 2 764 2 661 2 663 2 182 2 567 2 377 2 74 2 664 2 474 2 76 4 668 2 283 2 667 2 78 2 570 2 777 2 80 2 672 2 82 2 286 2 481 2 482 4 290 2 288 2 485 2 389 4 487 2 582 6 390 2 
0 2 586 12 394 6 196 2 4 2 396 2 197 2 402 2 593 2 596 2 412 6 597 4 10 2 601 2 205 2 207 2 206 6 208 6 602 12 417 4 17 4 421 2 22 4 23 6 223 4 29 2 228 2 431 2 437 2 621 6 35 2 37 2 438 6 38 8 40 2 39 6 439 4 237 16 627 4 238 2 241 2 441 2 242 4 245 2 629 2 633 2 451 2 636 2 638 2 455 2 259 12 261 2 55 2 262 2 58 6 264 2 645 2 61 2 63 2 650 2 268 2 651 52 65 24 464 4 66 6 465 2 652 4 653 2 271 6 67 2 273 2 468 12 658 2 661 2 663 2 74 2 664 2 474 2 667 2 283 2 668 2 76 4 78 2 80 4 82 2 672 2 286 2 481 2 482 4 288 2 290 2 485 2 487 2 292 10 96 2 679 2 297 4 296 6 684 2 104 2 301 2 688 8 305 6 306 12 307 2 693 2 691 4 698 2 111 10 114 2 703 10 116 2 708 2 315 2 120 2 507 2 121 2 508 8 327 2 328 6 513 6 722 4 129 8 515 10 135 2 136 2 338 2 523 4 341 2 527 2 532 6 533 2 348 6 146 2 149 2 539 6 353 2 542 2 736 4 354 6 355 2 546 4 157 6 742 2 549 6 159 4 161 2 745 2 550 4 555 4 556 6 360 2 168 2 363 6 174 4 366 12 762 8 763 6 371 4 179 2 764 2 182 2 567 4 375 6 377 2 570 2 777 2 389 4 582 12 390 2 
292 6 651 4 120 2 652 4 296 2 653 2 762 2 23 4 764 2 223 2 328 6 633 2 736 2 722 2 451 2 307 2 597 2 228 2 10 2 668 2 691 4 601 2 111 6 550 2 286 2 290 2 288 2 35 2 417 4 645 2 487 2 63 2 390 2 237 4 268 2 
292 6 96 2 296 2 104 2 402 2 688 2 305 6 596 2 307 2 597 2 10 2 202 2 111 6 698 2 601 2 205 2 417 4 703 4 604 3 120 2 22 4 23 2 327 2 223 2 224 2 328 6 128 2 722 2 513 6 129 6 228 2 136 2 35 2 38 6 39 4 439 4 237 4 523 3 627 4 239 2 242 4 341 2 245 2 527 2 353 2 542 2 633 2 736 2 451 2 637 2 638 2 161 2 745 2 550 2 551 2 264 2 645 2 63 2 268 2 651 28 65 24 652 4 653 2 762 2 468 8 371 2 71 2 658 2 275 2 764 2 182 2 567 3 377 2 74 2 474 2 668 2 667 2 283 2 774 2 78 2 80 3 82 2 286 2 481 2 288 2 290 2 90 2 487 2 390 2 
292 6 238 2 241 2 242 2 245 2 296 4 196 2 353 2 542 2 633 2 593 2 736 4 355 2 451 2 305 4 597 2 307 2 10 2 691 8 601 2 111 6 550 4 417 4 555 4 645 2 63 2 268 2 168 2 651 12 120 2 65 6 465 2 652 4 653 2 174 2 22 2 762 4 23 10 327 2 223 4 764 2 328 8 182 2 722 2 377 2 29 2 474 2 228 2 76 2 668 2 667 2 135 2 286 2 288 2 290 2 35 2 487 2 140 2 237 6 390 2 
292 6 238 2 241 2 242 2 245 2 296 4 196 2 100 4 147 2 353 2 542 2 633 2 593 2 736 4 355 2 451 2 305 4 597 2 10 2 691 8 601 2 111 8 550 4 417 4 555 4 645 2 63 2 268 2 168 2 651 12 65 6 120 2 465 2 652 4 653 2 174 2 22 2 762 4 23 10 327 2 223 4 764 2 328 8 182 2 722 2 377 2 29 2 474 2 228 2 76 2 668 2 667 2 135 2 286 2 288 2 290 2 35 2 338 2 487 2 237 8 390 2 524 2 
676 2 668 2 653 2 
676 2 668 2 653 2 
292 12 392 4 96 2 293 2 296 4 297 4 196 2 104 2 402 2 593 2 688 2 596 2 305 6 597 4 10 4 691 4 203 2 698 2 111 12 205 2 417 4 703 4 420 2 507 4 22 4 422 2 23 6 511 2 223 2 328 6 513 6 722 4 129 2 515 4 135 2 517 2 38 2 439 4 338 4 237 16 238 2 627 4 241 2 242 4 341 2 628 2 245 2 527 2 344 2 348 2 149 2 249 4 352 2 353 2 542 2 735 2 736 2 638 2 455 4 741 2 742 2 159 4 261 2 161 2 745 2 642 2 550 2 264 2 555 4 753 4 558 2 651 24 65 16 464 2 652 4 653 6 174 4 762 4 468 2 371 6 658 2 764 2 182 2 567 2 377 2 74 2 474 2 76 2 283 2 667 2 668 4 78 2 82 2 673 2 480 2 85 2 286 2 481 2 676 2 482 2 288 2 486 2 389 4 390 2 
168 2 651 4 65 2 108 2 245 2 480 2 4 2 517 2 262 2 422 2 348 2 482 2 703 2 91 2 18 2 566 2 688 2 
292 12 392 4 96 2 293 2 296 4 297 4 196 2 104 2 402 2 593 2 596 2 305 6 597 4 10 4 691 4 203 2 698 2 111 12 205 2 417 4 703 2 420 2 507 4 22 4 422 2 23 6 223 2 328 6 513 6 722 4 129 2 515 4 134 2 135 2 517 2 38 2 439 4 338 4 237 16 238 2 627 4 241 2 242 4 341 2 628 2 245 2 527 2 344 4 348 2 149 2 249 4 352 2 353 2 542 2 736 2 51 2 638 2 455 4 741 2 742 2 159 4 261 2 161 2 745 2 642 2 643 2 550 2 264 2 555 4 753 4 648 2 651 24 65 16 464 2 465 2 652 4 653 6 174 4 762 4 468 2 371 6 658 2 764 2 182 2 374 2 567 4 377 2 74 2 474 2 76 4 283 2 667 2 668 4 78 2 82 2 673 2 480 2 286 2 481 2 676 2 288 2 486 2 389 4 390 2 
292 12 392 4 96 2 293 2 296 4 297 4 196 2 104 2 402 2 591 2 593 2 688 2 596 2 305 6 597 4 10 4 691 4 203 2 698 2 111 12 205 2 417 4 703 4 118 2 420 2 507 4 22 4 422 2 23 6 223 2 328 6 226 2 513 6 722 4 129 2 515 4 430 2 135 2 517 2 38 2 439 4 338 4 141 2 237 16 238 2 627 4 241 2 242 4 341 2 628 2 245 2 527 2 344 2 348 2 149 2 249 4 352 2 353 2 542 2 736 2 638 2 455 4 741 2 742 2 159 4 261 2 161 2 745 2 642 2 550 2 264 2 555 4 753 4 651 24 65 16 464 2 465 2 652 4 653 6 174 4 762 4 468 2 371 6 658 2 764 2 182 2 567 2 377 2 74 2 474 2 76 4 283 2 667 2 668 4 78 2 82 2 673 2 480 2 286 2 481 2 676 2 482 2 288 2 486 2 389 4 390 2 
627 2 242 2 341 2 245 2 527 2 588 2 491 2 445 2 104 2 402 2 252 2 353 2 542 2 303 2 408 2 305 4 161 2 205 2 264 1 651 16 65 12 607 1 710 2 654 1 655 2 22 2 68 2 715 2 468 2 658 2 276 2 182 2 513 3 377 2 129 2 74 2 568 2 474 2 283 2 667 2 78 1 481 2 34 2 233 2 36 2 38 2 385 2 235 2 439 2 42 2 43 2 93 2 
731 2 651 2 169 2 65 2 21 2 370 2 468 2 660 1 150 2 592 2 567 3 129 2 131 2 378 3 379 2 453 2 136 2 80 3 727 2 289 2 38 2 39 2 17 6 626 4 523 3 
731 2 651 2 169 2 65 2 21 2 370 2 468 2 150 2 592 2 567 2 129 2 131 2 378 2 379 2 453 2 136 2 80 2 727 2 289 2 38 2 39 2 17 6 626 4 523 2 
731 2 651 2 169 2 65 2 21 2 370 2 468 2 150 2 592 2 567 2 129 2 131 2 378 2 379 2 453 2 136 2 80 2 727 2 289 2 38 2 39 2 17 6 626 4 523 2 
95 2 678 4 342 6 530 4 102 2 103 2 446 3 299 3 6 2 631 2 300 6 450 4 358 2 201 2 697 2 160 2 647 2 651 10 65 4 171 2 270 2 319 2 318 4 609 4 560 3 466 2 326 2 468 2 24 2 469 2 225 2 567 3 472 2 130 4 280 4 75 2 136 2 284 2 289 2 523 3 
95 2 651 10 65 4 171 2 678 4 608 2 609 4 318 4 319 2 342 6 270 2 560 2 530 4 492 2 466 2 103 2 102 2 299 2 446 2 326 2 24 2 6 2 468 2 631 2 469 2 300 4 225 2 450 4 567 2 472 2 280 4 130 4 75 2 358 2 201 2 136 2 697 2 284 2 160 2 781 2 289 2 647 2 523 2 
95 2 651 10 65 4 171 2 678 4 608 2 609 4 318 4 319 2 342 6 270 2 560 2 530 4 492 2 466 2 103 2 102 2 299 2 446 2 326 2 24 2 6 2 468 2 631 2 469 2 300 4 225 2 450 4 567 2 472 2 280 4 130 4 75 2 358 2 201 2 136 2 697 2 284 2 160 2 781 2 289 2 647 2 523 2 
95 2 651 10 65 4 171 2 678 4 608 2 609 4 318 4 319 2 342 6 270 2 560 2 530 4 492 2 466 2 103 2 102 2 299 2 446 2 326 2 24 2 6 2 468 2 631 2 469 2 300 4 225 2 450 4 567 2 472 2 280 4 130 4 75 2 358 2 201 2 136 2 697 2 284 2 160 2 781 2 289 2 647 2 523 2 
95 2 651 10 65 4 171 2 678 4 608 4 609 4 318 4 319 2 342 6 270 2 560 2 530 4 492 4 466 2 103 2 102 2 299 2 446 2 326 2 24 2 6 2 468 2 631 2 469 2 300 4 225 2 450 4 567 2 472 2 280 4 130 4 75 2 358 2 201 2 136 2 697 2 284 2 160 2 781 4 289 2 647 2 523 2 
112 2 411 2 690 2 413 2 295 2 99 2 
499 2 112 2 47 2 181 2 694 2 1 2 278 2 
651 10 65 8 240 2 586 2 400 1 565 2 766 2 73 2 183 2 545 2 634 1 768 2 409 2 616 2 500 2 773 2 282 1 474 2 79 2 31 2 696 2 32 1 57 2 502 2 728 1 139 2 
651 6 65 6 608 3 681 2 318 12 270 6 609 4 526 4 345 2 466 2 492 2 145 2 102 6 103 6 349 2 713 2 326 6 6 6 24 6 685 2 300 16 662 2 456 2 415 2 697 6 334 4 781 2 782 2 583 2 218 2 
651 1 65 1 740 2 457 2 274 2 530 2 494 2 519 2 784 2 165 2 752 2 716 2 581 2 424 7 759 4 615 1 130 2 280 2 
740 2 457 4 530 2 274 4 494 2 519 4 784 2 165 2 752 2 716 2 581 2 424 6 759 4 130 2 280 2 
651 1 65 1 740 8 457 8 530 2 274 8 494 2 519 8 784 2 165 2 752 2 716 6 581 2 424 10 759 4 615 1 130 2 280 2 
457 2 530 2 274 2 494 2 519 2 784 2 165 2 752 2 581 2 424 2 759 2 130 2 280 2 
391 2 627 4 341 2 529 2 534 2 497 2 49 2 199 1 254 2 50 2 408 2 639 2 204 1 553 2 264 2 163 2 651 12 65 12 369 6 513 8 769 2 74 2 281 2 283 2 78 2 186 2 382 2 335 2 439 4 387 2 
651 14 391 2 627 4 65 12 341 2 534 2 399 2 369 4 497 2 49 2 513 12 254 2 408 2 281 2 74 2 769 2 256 2 283 2 639 2 78 4 575 2 382 2 264 4 335 2 163 2 387 2 439 4 
627 6 341 4 246 2 298 2 101 1 534 2 397 2 398 2 49 2 7 2 449 2 254 2 50 2 640 2 639 4 158 2 263 2 264 4 359 2 311 1 463 4 313 2 651 20 65 20 369 4 562 2 563 2 659 2 513 16 769 2 74 4 281 2 569 2 283 4 133 1 78 4 186 2 725 1 187 2 436 2 382 2 783 2 578 2 335 2 439 6 41 2 
391 2 651 12 627 4 65 12 172 2 341 2 534 2 369 6 497 2 177 2 49 2 686 2 513 10 254 2 281 2 74 2 769 2 283 2 639 2 78 4 382 2 264 4 335 2 163 2 387 2 439 4 62 2 603 2 
367 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 290 817 744 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 110 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 110 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 110 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 768 755 713 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 828 569 889 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 659 828 569 889 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 828 569 889 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 659 828 569 889 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_53()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsLtIndex([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_101()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_129()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
daikon.ProglangType:isIntegral()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_145()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:toString()Ljava.lang.String; | ASSIGN | 3056 | = null
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_63()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.Invariant:logOn()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_144()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.ModBitTracker:num_sets()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3_20()Z
daikon.Quant:eq(II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3R_86()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:num_samples()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_148()Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_146()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_140()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType; | STATEMENT | 54792 | stmt -> ;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:setDiff([I[I)[I
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3_29()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.ConstructorDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.Quant:eltsLT([II)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_21()Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_31()Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_3R_89()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_93()Z
jtb.JavaParser:jj_3R_68()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:intersection([I[I)[I
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:InvMap()V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_106()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3R_57()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3_10()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_207()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_72()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3_35()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_79()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isFloat()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_102()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:ConstructorDeclaration()Ljtb.syntaxtree.ConstructorDeclaration;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3_8()Z
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.ConstructorDeclaration:ConstructorDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3_36()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3R_143()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:memberOf(S[S)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:hashCode()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:relate_var()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3R_77()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:sameLength([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.RootNode:RootNode()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_175()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:size()I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ProglangType:baseIsScalar()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object; | RETURN | 32728 | return null
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_61()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3_7()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_174()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_149()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
utilMDE.WeakHasherMap:size()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_178()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_166()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:lexEqual([I[I)Z
daikon.ProglangType:isArray()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3_22()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariants:Invariants()V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:passes()Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_124()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant:logDetail()Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_92()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_127()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:lte(II)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_80()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_2_7(I)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3_12()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_66()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_128()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_1()Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3R_99()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_104()Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3R_177()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:gt(II)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_82()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_94()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_17(I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_65()Z
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_206()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_108()Z
daikon.ModBitTracker:split(I)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127949 | = null
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 126289 | = null
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_142()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_103()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfo:new_ppt()V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_176()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_185()Z
jtb.JavaParser:jj_3R_173()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_73()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaCharStream:getBeginLine()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3R_141()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_78()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_51()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:numIntArrays()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_5()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3_3()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Debug:logDetail()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3R_184()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:setEqual([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:lexGT([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
169 2 1 2 208 2 841 4 769 2 2 2 708 2 637 2 512 2 
1095 2 1073 6 65 6 788 2 158 2 120 2 313 6 425 2 641 2 204 2 456 2 
1 2 441 4 920 2 355 6 7 6 311 2 637 2 988 2 688 6 1101 2 1046 6 88 4 149 2 
224 8 1 6 365 8 368 2 367 10 1043 16 938 10 12 2 297 6 693 10 801 8 1052 8 300 4 167 10 59 2 914 2 272 2 464 10 67 2 779 12 277 2 743 6 245 16 637 6 470 4 602 29 604 4 250 4 1106 16 1033 26 
521 4 326 6 
742 2 
365 2 646 2 367 2 1043 2 615 2 510 2 938 2 297 2 692 2 693 2 1128 2 167 2 300 2 464 4 779 2 275 2 245 2 601 2 602 6 525 2 1106 2 1033 4 861 2 
367 4 1134 4 192 6 779 5 157 2 1043 8 245 8 376 2 470 2 938 4 674 4 602 14 693 4 1106 8 1033 12 184 6 167 4 
0 2 285 2 862 2 227 2 791 2 230 36 5 2 335 10 534 2 259 2 290 2 905 2 1008 4 580 2 1085 2 164 2 346 2 691 6 981 2 807 2 587 2 1130 6 1017 2 916 2 744 2 597 4 984 2 388 2 817 2 74 2 749 2 1065 2 1036 4 
826 2 649 2 839 2 622 2 1129 2 305 2 1135 2 465 2 742 2 706 2 
1 4 1077 2 864 2 373 2 935 2 793 2 379 4 654 2 729 2 1085 4 943 2 873 2 455 2 807 2 590 2 518 2 741 2 522 2 811 2 879 2 477 2 528 2 258 2 482 2 760 2 901 2 1117 2 53 2 843 2 691 2 59 2 60 2 208 2 62 2 493 4 137 2 278 2 637 4 357 2 216 2 430 2 280 4 142 2 992 2 
1 4 365 18 367 16 116 6 192 6 1043 32 9 2 938 16 12 2 381 2 54 4 842 8 297 4 772 6 944 2 693 16 801 6 167 16 300 2 58 2 350 2 736 6 1134 4 740 6 464 6 779 22 743 4 245 32 637 4 314 2 674 4 1061 4 140 4 602 54 321 4 1106 32 1033 48 999 4 184 6 
1008 2 691 2 259 2 
1014 2 114 22 258 2 571 2 170 2 612 2 196 2 51 2 640 2 317 2 909 2 694 10 709 2 823 2 
1 34 718 2 154 2 1002 2 572 16 865 3 573 1 6 2 443 2 8 2 444 2 867 2 11 2 447 2 448 2 581 1 449 2 871 2 454 2 17 2 15 16 298 3 733 2 457 2 588 2 20 2 735 1 459 3 1019 2 309 2 469 2 473 1 747 1 599 2 176 2 1028 2 320 2 754 2 1030 2 322 32 324 2 1034 1 37 2 328 6 480 2 609 2 759 2 42 1 613 8 761 2 484 1 763 5 486 4 617 6 339 1 488 2 342 2 344 3 341 2 201 2 202 6 1050 2 490 1 626 2 775 2 1053 3 205 24 492 2 629 4 61 4 915 2 1056 3 633 4 634 2 637 32 783 4 786 2 926 6 1067 1 930 12 363 2 79 2 226 4 228 2 508 2 790 3 82 2 374 2 511 2 235 2 940 2 658 16 942 2 804 2 661 8 1094 2 97 16 519 4 665 2 242 2 98 1 810 2 951 2 103 3 1099 2 1100 2 247 2 956 2 248 2 676 24 959 2 1103 2 253 3 396 2 399 8 111 1 968 2 402 1 830 2 405 2 408 12 260 2 837 2 124 3 1122 2 1124 3 543 2 131 2 851 2 1132 3 421 2 983 32 856 1 1144 2 561 2 428 2 562 2 702 2 1149 2 564 2 143 1 997 2 708 2 567 2 148 2 150 1 436 2 710 2 712 4 
600 2 
1 2 700 2 
1 4 1063 2 1090 2 
570 2 288 2 4 2 578 4 292 2 293 8 872 2 582 2 583 4 19 4 589 6 21 2 22 2 593 6 24 2 23 12 876 4 596 10 310 2 598 20 312 4 880 2 318 2 27 2 603 2 884 2 28 2 886 2 606 2 31 4 887 52 890 2 325 2 892 8 40 2 894 2 331 38 895 2 897 4 610 276 611 2 332 2 899 2 333 6 44 2 900 2 337 4 906 158 907 2 908 2 619 2 910 32 343 16 911 2 55 8 347 2 349 2 628 34 630 2 352 52 353 2 631 2 635 2 918 2 356 2 358 2 70 2 638 2 639 4 922 2 71 2 928 2 643 2 361 26 645 2 931 4 362 2 364 14 366 4 647 22 370 2 648 4 933 2 651 2 650 6 83 2 652 2 378 2 85 2 655 2 380 2 941 2 382 2 948 2 95 2 96 2 949 2 662 2 663 2 386 2 664 2 950 2 952 2 667 12 387 26 104 4 106 2 960 2 108 2 679 2 109 2 392 2 394 2 963 2 964 2 395 2 397 2 398 4 113 2 400 14 969 2 683 32 974 2 406 2 118 2 407 2 409 4 119 10 976 52 121 2 687 8 686 12 411 4 977 2 412 2 414 2 127 2 980 2 128 4 129 2 420 2 982 2 423 2 701 2 985 2 424 2 427 2 989 2 429 2 431 2 432 2 433 2 995 2 994 2 435 2 717 2 716 52 1001 52 439 2 442 8 1005 4 1006 2 160 2 725 4 445 2 161 2 726 2 727 2 446 2 1011 20 450 6 1012 2 734 2 166 2 458 42 460 2 461 2 463 2 1020 4 739 2 1021 2 1024 2 748 2 475 4 178 4 751 12 1031 2 179 2 180 2 181 2 185 8 187 4 1038 52 188 2 483 4 189 26 1039 2 765 22 485 2 195 2 199 2 770 2 489 4 1047 2 1048 2 203 2 491 2 206 2 1054 2 777 2 209 2 1055 4 778 2 781 56 211 2 1059 2 494 2 213 2 214 24 784 2 217 2 1062 2 218 2 219 2 1066 4 499 12 222 2 500 12 502 2 1068 2 501 2 1069 2 1072 2 223 2 505 2 789 162 1076 2 507 2 1079 12 792 2 1080 2 1084 158 797 2 1086 52 1089 2 240 2 239 12 803 2 513 2 1093 12 514 2 808 2 809 2 243 4 812 12 814 2 246 2 244 2 815 42 1098 2 249 2 252 2 819 32 526 4 1107 14 821 2 822 2 825 2 529 26 829 2 532 2 831 2 832 2 833 4 1116 2 535 18 536 52 1119 2 1121 4 537 2 844 2 541 2 1127 2 1125 2 845 52 1126 2 270 2 548 24 549 2 854 2 273 2 1137 52 1136 2 274 2 1138 4 1139 2 554 2 276 4 551 26 1143 2 857 4 560 2 559 2 1148 52 1152 2 283 2 566 2 
162 2 495 2 503 2 151 1 
152 2 162 2 
971 2 691 2 746 2 558 2 
971 2 691 2 746 2 323 2 558 2 1146 2 
241 2 162 2 691 2 762 2 250 2 746 2 
642 2 992 2 
961 2 691 2 250 2 746 2 
171 2 820 2 
265 2 69 2 
338 2 266 2 
1071 2 921 2 
265 2 671 2 921 2 
329 2 265 2 921 2 
1150 2 265 2 921 2 
970 2 265 2 921 2 
286 6 81 2 722 6 691 2 746 2 954 2 752 2 1151 2 
592 2 1097 2 
162 2 296 2 691 2 762 2 250 2 746 2 1146 2 
162 2 762 2 1145 2 
162 2 762 2 234 2 
898 2 1097 2 503 2 
162 2 762 2 
330 2 1097 2 
162 2 1081 2 
1040 2 1097 2 503 2 
338 2 503 2 46 2 
295 2 503 2 921 2 
289 2 820 2 503 2 
265 2 574 2 503 2 
1097 2 390 2 
162 2 422 2 
338 2 91 2 
172 2 921 2 
351 2 820 2 
265 2 440 2 
237 2 1097 2 
265 2 138 2 
820 2 998 2 
921 2 38 2 
338 2 64 2 
657 2 1040 2 1097 2 503 2 
271 2 657 2 1040 2 1097 2 503 2 
684 2 1097 2 503 2 
1097 2 503 2 913 2 
644 2 874 2 585 2 134 2 
114 6 303 2 41 2 191 2 699 2 877 2 903 2 1114 2 25 2 472 2 868 4 26 2 1123 2 979 2 993 2 859 2 756 4 711 2 
932 2 503 2 
320 2 
1 26 718 2 1002 2 867 2 1009 2 449 2 454 2 457 2 735 4 308 2 316 2 474 2 176 2 1028 2 30 2 1030 2 322 6 324 2 1034 2 328 2 480 2 613 2 486 4 336 4 198 2 617 6 488 2 201 2 202 4 1050 2 490 2 775 2 629 2 492 2 61 4 633 4 634 6 637 26 783 2 786 2 926 2 930 8 363 2 228 2 82 2 511 2 653 2 945 2 1091 2 1094 2 97 6 384 2 519 2 810 2 101 2 247 2 959 2 1103 2 968 4 405 2 408 8 837 2 690 4 846 2 131 2 847 2 983 4 990 2 562 2 997 2 707 2 708 2 567 2 710 2 712 4 437 2 
1 26 718 2 1002 2 719 2 867 2 11 2 449 2 454 2 457 2 735 2 308 2 316 2 474 2 176 2 1028 2 30 2 1030 2 322 6 324 2 1034 2 328 2 480 2 609 2 613 2 486 4 336 4 617 6 488 2 201 2 202 6 1050 2 490 2 775 2 629 2 492 2 61 4 633 4 634 6 637 26 783 2 786 2 926 2 930 8 363 2 228 2 82 2 511 2 945 2 1091 2 1094 2 97 6 384 2 519 2 810 2 101 2 247 2 959 2 1103 2 1105 2 968 4 405 2 408 8 837 2 690 4 846 2 131 2 847 2 421 2 555 2 983 4 990 2 562 2 997 2 707 2 708 2 567 2 710 2 712 4 437 2 
471 2 
973 2 834 2 
1073 6 1 12 1074 2 1002 2 10 2 1087 2 656 2 14 2 946 8 456 2 302 2 1095 4 595 2 668 2 467 4 247 2 313 6 958 2 678 4 959 2 176 2 1030 2 527 2 966 2 327 2 608 2 530 4 614 2 904 2 1115 4 197 2 617 4 49 4 200 2 262 2 621 2 340 10 204 4 417 2 267 2 268 2 269 2 848 2 418 2 849 2 547 8 135 2 61 2 65 6 550 2 66 2 637 6 987 2 562 2 360 4 786 2 641 2 77 2 712 2 
1073 8 1 12 1074 2 1002 2 10 2 1087 2 656 2 14 2 946 8 456 2 302 2 1095 4 595 2 668 2 467 4 247 2 313 6 958 2 678 4 959 2 176 2 1030 2 527 2 966 2 327 2 39 4 608 2 530 4 120 2 904 2 1115 4 197 2 617 4 49 4 200 2 48 2 262 2 621 2 340 10 417 2 267 2 204 4 268 2 269 2 848 2 418 2 547 8 135 2 61 2 65 8 632 2 550 2 66 2 637 6 987 2 562 2 360 4 786 2 641 2 77 2 712 2 
1095 2 302 2 135 2 608 2 530 4 65 2 595 2 550 2 66 2 1115 4 313 2 987 2 49 2 200 2 958 2 527 2 417 2 204 2 
1073 6 1 12 1074 2 1002 2 10 2 1087 2 656 2 14 2 946 4 302 2 1095 4 595 2 668 2 467 4 247 2 313 4 958 2 678 4 959 2 176 2 1030 2 527 2 966 2 327 2 608 2 530 4 614 2 120 2 904 2 1115 4 197 2 617 4 49 4 200 2 262 2 621 2 340 6 204 4 417 2 267 2 268 2 269 2 848 2 418 2 849 2 547 4 135 2 61 2 65 6 550 2 66 2 637 6 987 2 562 2 360 4 786 2 641 2 77 2 712 2 
1073 6 1 12 1074 2 1002 2 158 2 10 2 1087 2 656 2 14 2 946 4 302 2 1095 4 595 2 668 2 467 4 247 2 313 6 958 2 678 4 959 2 176 2 1030 2 527 2 966 2 327 2 608 2 530 4 614 2 904 2 1115 4 197 2 617 4 49 4 200 2 262 2 621 2 340 4 204 4 417 2 267 2 268 2 269 2 848 2 418 2 849 2 547 4 135 2 61 2 65 4 550 2 66 2 637 6 987 2 562 2 360 4 786 2 641 2 77 2 712 2 
1073 6 1 12 1074 2 1002 2 10 2 1087 2 656 2 14 2 946 8 456 2 302 2 1095 4 595 2 668 2 467 4 247 2 313 6 958 2 678 4 959 2 176 2 1030 2 527 2 966 2 327 2 608 2 530 4 614 2 904 2 1115 4 197 2 617 4 49 4 200 2 262 2 621 2 340 6 204 4 417 2 267 2 268 2 269 2 848 2 418 2 849 2 547 4 135 2 61 2 65 6 550 2 66 2 637 6 987 2 562 2 360 4 786 2 641 2 77 2 712 2 
1073 8 1 12 1074 2 1002 2 158 2 10 2 1087 2 656 2 14 2 946 8 456 2 302 2 1095 4 595 2 668 2 467 4 247 2 313 8 958 2 678 4 959 2 176 2 1030 2 527 2 966 2 327 2 608 2 530 4 614 2 904 2 1115 4 197 2 617 4 49 4 200 2 262 2 621 2 340 10 204 4 417 2 267 2 268 2 269 2 848 2 418 2 849 2 547 8 135 2 61 2 65 6 550 2 66 2 637 6 987 2 562 2 360 4 786 2 641 2 77 2 712 2 
1073 6 1 12 1074 2 1002 2 10 2 1087 2 656 2 14 2 946 8 456 2 302 2 1095 4 595 2 668 2 467 4 247 2 313 6 958 2 678 4 959 2 176 2 1030 2 527 2 966 2 327 2 608 2 530 4 614 2 904 2 1115 4 197 2 617 4 49 4 200 2 262 2 621 2 340 10 204 4 417 2 267 2 268 2 269 2 848 2 418 2 849 2 547 8 135 2 61 2 65 6 550 2 66 2 637 6 987 2 562 2 360 4 786 2 641 2 77 2 712 2 
1 46 3 6 10 2 11 2 14 2 16 7 299 2 18 1 301 4 302 2 308 4 595 2 313 8 315 6 600 6 319 2 322 8 324 2 327 2 328 2 608 2 896 2 613 2 334 2 614 2 45 6 904 2 617 6 49 4 621 2 629 2 61 4 63 6 65 4 633 4 66 2 634 6 637 24 924 2 925 2 360 4 926 2 641 4 77 2 930 4 377 2 656 2 945 2 660 2 946 2 385 1 97 6 668 4 672 1 957 2 958 2 107 2 677 1 678 6 959 2 681 2 966 2 404 6 115 10 405 12 975 2 408 4 122 2 690 4 417 2 418 2 698 2 135 2 421 2 700 6 983 2 987 2 997 2 144 2 708 2 710 2 712 4 718 2 1002 2 155 2 158 4 159 1 165 1 731 2 457 2 174 6 467 8 474 2 176 2 1028 2 1030 2 1032 2 186 6 479 2 193 1 194 8 486 4 1044 2 197 2 200 2 488 2 201 2 202 6 1050 2 1051 2 204 4 212 6 215 2 783 2 786 2 220 2 787 2 1073 12 1074 2 506 2 228 2 229 2 509 6 794 2 1083 6 796 2 236 2 1087 2 798 2 1090 6 1094 2 1095 4 516 4 519 2 810 2 524 2 247 2 1103 2 527 2 530 4 1115 4 837 2 262 2 846 2 267 2 268 2 848 2 269 2 545 1 852 6 1131 1 1133 7 550 2 1141 2 562 2 563 2 858 6 281 6 567 2 
1 48 718 2 1002 2 155 2 3 6 10 2 11 2 14 2 731 2 299 2 456 4 457 2 301 4 302 2 308 4 595 2 174 6 467 8 1022 2 313 8 315 6 600 6 474 2 176 2 319 2 1028 2 1030 2 322 8 1032 2 324 2 327 2 328 2 479 2 186 6 608 2 896 2 613 2 334 2 614 2 194 8 904 2 45 6 1044 2 486 4 197 2 617 6 49 4 200 2 488 2 621 2 340 2 201 2 202 6 1051 2 1050 2 204 4 629 4 63 6 61 4 65 8 66 2 633 4 634 6 212 6 637 26 215 2 924 2 783 4 925 2 220 2 360 4 786 2 787 2 926 2 641 4 77 2 930 8 1073 12 1074 2 506 2 229 2 228 2 509 6 377 2 794 2 796 2 1083 6 236 2 798 2 1087 2 656 2 1090 6 945 2 660 2 946 6 1094 2 97 6 516 4 1095 4 519 4 810 2 668 4 524 2 247 2 957 2 107 2 958 2 678 6 959 2 1103 2 681 2 527 2 968 2 966 2 530 4 404 6 115 10 405 12 975 2 408 8 122 2 1115 4 837 2 262 2 690 4 846 2 268 2 267 2 417 2 269 2 418 2 848 2 698 2 852 6 135 2 421 2 700 6 550 2 1141 2 1142 2 983 2 987 2 562 2 563 2 858 6 281 6 144 2 997 2 708 2 567 2 710 2 712 4 
1 48 718 2 1002 2 155 2 3 6 10 2 11 2 14 2 731 2 299 2 457 2 456 4 301 4 302 2 308 4 595 2 174 6 467 8 1022 2 313 8 315 6 600 6 474 2 176 2 319 2 1028 2 1030 2 322 8 1032 2 324 2 327 2 328 2 479 2 186 6 608 2 896 2 613 2 334 2 614 2 194 8 904 2 45 6 1044 2 486 4 197 2 617 6 49 4 200 2 488 2 621 2 340 6 201 2 202 6 1051 2 1050 2 204 4 629 4 63 6 61 4 65 8 66 2 633 4 634 6 212 6 637 26 215 2 924 2 783 4 925 2 220 2 360 4 786 2 787 2 926 2 641 4 77 2 930 8 1073 12 1074 2 506 2 229 2 228 2 509 6 377 2 794 2 796 2 1083 6 236 2 798 2 1087 2 656 2 1090 6 945 2 660 2 946 6 1094 2 97 6 516 4 1095 4 519 4 810 2 668 4 524 2 247 2 957 2 107 2 958 2 678 6 959 2 1103 2 681 2 527 2 968 2 966 2 530 4 404 6 115 10 405 12 975 2 408 8 122 2 1115 4 837 2 262 2 690 4 846 2 268 2 267 2 417 2 269 2 418 2 848 2 698 2 547 4 852 6 135 2 421 2 700 6 550 2 1141 2 1142 2 983 2 987 2 562 2 563 2 858 6 281 6 144 2 997 2 708 2 567 2 710 2 712 4 
1 52 287 2 3 12 10 2 11 2 14 2 870 2 299 2 301 4 302 2 308 4 595 2 313 10 315 12 600 12 883 6 319 2 322 12 324 2 327 2 328 4 608 2 896 2 613 4 334 2 614 2 904 2 45 6 617 6 49 4 621 2 340 6 625 6 629 4 61 4 63 6 65 10 633 4 66 2 634 8 637 24 924 2 925 2 360 4 926 4 641 4 77 2 929 6 930 10 377 2 656 2 945 4 660 2 946 6 97 8 668 4 957 2 958 2 107 2 678 6 959 2 681 2 968 2 966 2 404 6 115 8 405 10 975 2 408 10 120 2 122 2 123 6 690 6 125 6 417 2 418 2 698 2 135 2 136 2 421 2 700 12 983 4 987 2 997 2 144 2 708 2 710 2 712 4 718 2 1002 2 155 2 158 2 731 2 456 4 457 2 738 2 174 6 467 8 1022 2 474 2 176 2 1028 2 1030 2 1032 2 479 2 186 12 194 8 486 4 1044 2 197 2 200 2 488 2 201 2 202 6 1050 2 1049 2 1051 2 204 4 207 2 212 6 215 2 783 4 786 2 220 2 787 2 1073 16 1074 2 506 2 228 2 229 2 509 6 794 2 1083 6 796 2 236 2 1087 2 798 2 1090 12 1094 2 1095 4 516 4 519 4 810 2 523 6 247 2 1103 2 527 2 257 6 530 4 1112 6 1115 4 837 2 262 2 1120 6 264 2 846 2 267 2 268 2 848 2 544 2 269 2 547 4 852 6 550 2 1141 2 1142 2 562 2 563 2 858 6 281 6 567 2 
1 4 1073 4 608 2 1074 2 530 2 614 2 1115 2 197 2 262 2 340 4 656 2 14 2 268 2 456 2 267 2 946 6 417 2 204 4 418 2 848 2 547 4 302 2 1095 4 65 6 550 2 66 2 467 2 313 6 958 2 678 2 360 2 641 2 77 2 527 2 327 2 
1 28 718 2 1002 2 866 2 10 2 11 2 14 2 732 3 456 2 457 2 302 2 308 2 467 2 313 6 474 2 176 2 320 2 1030 2 322 8 324 2 327 2 757 2 328 3 608 2 190 2 614 2 486 4 197 2 617 6 488 2 340 2 201 2 202 6 1050 2 204 4 61 4 65 6 66 2 633 4 634 6 637 24 360 2 786 2 926 3 641 2 77 2 1073 4 1074 2 228 2 374 2 656 2 946 6 1094 2 97 6 1095 4 665 2 810 2 951 2 524 2 247 2 958 2 678 2 959 2 1103 2 680 2 527 2 530 2 115 2 405 4 1115 2 837 2 262 2 690 4 846 2 268 2 417 2 267 2 418 2 848 2 421 2 550 2 983 3 426 2 562 2 997 2 708 2 567 2 710 2 712 4 
1074 2 93 2 197 2 
1074 2 93 2 197 2 
1 24 1002 2 158 4 11 2 163 2 1010 2 451 2 457 2 456 4 301 2 735 2 302 4 308 4 467 4 313 12 474 2 176 2 177 2 1028 2 1030 2 322 2 324 2 486 4 197 2 617 6 49 2 200 2 488 2 621 2 340 6 201 2 623 2 202 6 1050 2 204 4 56 2 629 4 61 4 65 12 633 4 66 2 634 2 636 2 637 16 782 2 783 4 786 2 360 2 641 4 930 4 1073 16 1074 2 228 2 1083 2 87 2 1088 2 93 2 946 6 94 2 1094 2 806 2 97 2 516 2 1095 4 519 4 810 2 247 2 678 4 959 2 1103 2 1102 2 110 2 966 2 530 2 115 2 405 4 1113 2 408 4 120 4 1115 2 837 2 846 2 417 2 268 2 418 2 547 4 135 2 421 2 983 2 990 4 562 2 997 2 708 2 567 2 710 2 712 4 
516 2 1 4 115 2 1002 2 973 2 155 2 405 2 1113 2 637 2 987 2 673 2 1083 2 925 2 13 2 87 2 623 2 90 2 
1 24 1002 2 158 4 11 2 1010 2 451 4 299 2 457 2 456 4 301 2 302 4 308 4 467 4 313 12 474 2 176 2 177 2 1028 2 1030 2 322 2 324 2 904 2 486 4 197 4 617 6 49 4 200 2 488 2 621 2 340 6 201 2 623 2 202 6 1050 2 204 4 56 2 629 4 61 4 776 2 65 12 633 4 66 2 634 2 68 2 636 2 637 16 782 2 215 2 783 4 360 2 786 2 641 4 930 4 504 2 1073 16 1074 4 228 2 1083 2 236 2 87 2 1088 2 383 2 93 2 946 6 1094 2 806 2 97 2 1095 4 519 4 810 2 668 4 247 2 678 4 959 2 1103 2 1102 2 110 2 1109 2 966 2 530 2 405 2 975 2 1113 2 408 4 120 4 1115 2 837 2 846 2 417 2 268 2 269 2 418 2 547 4 135 2 421 2 983 4 990 4 562 2 703 2 997 2 708 2 567 2 284 2 710 2 712 4 
1 24 1002 2 156 2 158 4 11 2 1010 2 451 2 299 2 457 2 456 4 301 2 735 1 302 4 308 4 467 4 313 12 474 2 176 2 177 2 1028 2 1030 2 322 2 324 2 904 2 486 4 197 4 617 6 49 4 200 2 488 2 621 2 340 6 201 2 623 2 202 6 1050 2 204 4 56 2 629 4 61 4 65 12 633 4 66 2 634 2 68 2 636 2 637 16 782 2 215 2 783 4 72 2 786 2 360 2 641 4 930 4 1073 16 1074 4 228 2 231 2 1083 2 236 2 87 2 1088 2 383 2 93 2 946 6 1094 2 806 2 97 2 516 2 1095 4 519 4 99 2 810 2 668 4 670 2 247 2 678 4 959 2 1103 2 1102 2 110 2 966 2 530 2 115 2 405 4 975 2 1113 2 408 4 120 4 1115 2 837 2 846 2 417 2 268 2 269 2 418 2 547 4 135 2 421 2 983 2 990 4 562 2 997 2 708 2 567 2 710 2 712 4 
713 2 1 28 715 4 718 2 1002 2 5 2 1003 2 9 4 866 2 11 2 580 2 452 2 732 2 457 2 167 2 735 1 591 2 462 2 306 2 1016 4 594 4 308 2 175 2 1023 2 882 2 602 8 176 2 1027 2 1028 2 605 2 1030 2 755 2 322 16 1032 2 1033 6 324 2 182 2 33 2 891 4 758 2 757 2 893 2 328 6 1037 4 190 2 613 6 192 6 1043 4 486 4 1044 2 487 2 617 6 767 2 768 2 488 2 620 2 201 2 771 2 202 6 1050 2 912 2 61 4 210 2 779 4 633 4 634 10 1058 6 919 6 637 22 923 2 73 4 1064 2 786 2 220 2 926 6 221 2 78 2 930 10 225 2 1075 2 365 4 367 2 369 2 506 2 80 2 228 2 229 2 934 2 375 2 233 22 84 6 938 2 799 2 238 2 945 6 805 4 515 2 1094 2 384 4 97 10 1096 2 810 2 100 2 669 2 245 4 388 2 389 4 247 2 674 4 816 2 107 2 959 2 1103 2 251 2 818 6 962 2 1106 4 255 2 256 4 682 2 827 6 405 2 1111 2 117 2 533 2 408 10 685 6 836 2 410 4 835 2 837 2 838 2 689 2 840 6 690 8 263 2 539 4 416 2 693 2 846 2 696 4 695 2 853 1 421 2 1140 2 557 4 983 6 426 2 1147 2 562 2 704 4 705 4 996 2 997 2 144 2 708 2 567 2 710 2 712 4 
328 3 1 2 863 2 718 2 1004 2 690 2 345 2 453 2 945 6 92 4 97 2 850 3 1015 2 634 2 983 3 637 2 391 2 496 2 141 2 926 3 322 2 1000 2 35 2 967 2 
328 2 1 2 863 2 718 2 1004 2 690 2 345 2 453 2 945 6 92 4 97 2 850 2 1015 2 634 2 983 2 637 2 391 2 496 2 141 2 926 2 322 2 1000 2 35 2 967 2 
328 2 1 2 863 2 718 2 1004 2 690 2 345 2 453 2 945 6 92 4 97 2 850 2 1015 2 634 2 983 2 637 2 391 2 496 2 141 2 926 2 322 2 1000 2 35 2 967 2 
1070 2 1 10 718 2 367 2 572 2 576 2 577 2 938 2 723 2 658 2 801 4 167 2 737 4 304 2 743 2 245 2 468 3 1025 3 602 5 1106 2 322 2 393 4 1033 4 36 2 328 3 1043 2 766 6 538 2 345 2 693 2 774 2 348 2 546 4 1057 2 983 3 354 2 637 4 497 3 359 4 565 4 
1070 2 1 10 365 2 718 2 367 2 572 2 576 2 577 2 938 2 723 2 12 2 658 2 801 4 167 2 737 4 304 2 743 2 245 2 468 2 1025 2 602 4 1106 2 322 2 393 4 1033 4 36 2 328 2 1043 2 766 6 538 2 345 2 693 2 774 2 348 2 546 4 1057 2 779 2 983 2 354 2 637 4 497 2 359 4 565 4 
1070 2 1 10 365 2 718 2 367 2 572 2 576 2 577 2 938 2 723 2 12 2 658 2 801 4 167 2 737 4 304 2 743 2 245 2 468 2 1025 2 602 4 1106 2 322 2 393 4 1033 4 36 2 328 2 1043 2 766 6 538 2 345 2 693 2 774 2 348 2 546 4 1057 2 779 2 983 2 354 2 637 4 497 2 359 4 565 4 
1070 2 1 10 365 2 718 2 367 2 572 2 576 2 577 2 938 2 723 2 12 2 658 2 801 4 167 2 737 4 304 2 743 2 245 2 468 2 1025 2 602 4 1106 2 322 2 393 4 1033 4 36 2 328 2 1043 2 766 6 538 2 345 2 693 2 774 2 348 2 546 4 1057 2 779 2 983 2 354 2 637 4 497 2 359 4 565 4 
1070 2 1 10 365 4 718 2 367 2 572 2 576 2 577 2 938 2 723 2 12 4 658 2 801 4 167 2 737 4 304 2 743 2 245 2 468 2 1025 2 602 4 1106 2 322 2 393 4 1033 4 36 2 328 2 1043 2 766 6 538 2 345 2 693 2 774 2 348 2 546 4 1057 2 779 4 983 2 354 2 637 4 497 2 359 4 565 4 
714 2 855 2 927 2 145 2 542 2 586 2 384 2 
419 2 714 2 263 2 29 2 902 2 568 2 
1 10 3 2 43 2 720 1 721 2 232 2 795 2 939 2 413 1 346 1 126 2 132 2 587 1 168 2 917 2 953 2 556 2 637 8 139 2 562 2 1026 2 1104 2 1029 2 147 2 1035 2 34 1 
153 2 1 6 365 3 367 6 372 2 192 4 1043 6 938 6 12 2 842 2 772 4 873 2 693 6 801 4 167 6 350 1 60 2 779 5 743 2 245 6 637 6 674 2 675 2 882 2 602 15 750 2 1027 2 704 2 321 2 1106 6 1033 12 
1 1 737 2 531 2 553 2 637 1 261 2 986 2 579 1 359 2 294 2 1153 2 75 2 76 2 393 2 282 4 254 2 32 7 112 2 
737 2 531 2 553 2 261 2 986 2 359 2 294 2 1153 4 75 4 76 2 393 2 282 4 254 4 32 6 112 2 
1 1 737 2 531 2 553 2 637 1 261 6 986 2 579 1 359 2 294 8 1153 8 75 8 76 2 393 2 282 4 254 8 32 10 112 2 
737 2 531 2 553 2 986 2 359 2 1153 2 75 2 76 2 393 2 282 2 254 2 32 2 112 2 
1 14 438 1 936 2 1007 2 728 2 11 4 89 2 800 2 1096 1 466 2 813 2 955 2 389 2 1103 4 605 1 965 2 324 4 889 2 182 1 1108 2 828 2 1041 2 408 4 486 6 685 2 836 1 50 2 202 12 1050 4 627 1 697 2 421 4 633 6 1058 2 637 14 569 2 
1 42 371 4 1078 2 575 2 291 2 937 2 11 2 728 2 86 2 730 2 869 2 89 2 659 2 800 2 1092 2 802 2 947 2 805 6 735 2 517 2 1018 2 666 2 306 4 520 2 307 2 875 2 466 2 102 2 173 2 105 2 878 4 1103 2 753 2 476 2 885 2 888 2 324 2 889 2 607 4 1108 2 183 2 824 2 403 2 478 2 481 2 1110 2 972 2 828 2 764 2 1042 6 408 32 616 2 486 18 47 2 618 2 1045 2 50 2 1118 2 52 2 978 2 202 38 624 2 540 2 415 2 773 2 1050 2 130 2 133 2 57 2 421 2 780 2 633 18 552 2 1060 2 637 42 991 2 785 2 498 2 860 2 146 2 569 2 
403 2 401 2 1 20 478 2 972 2 828 2 1041 2 408 14 486 8 1082 2 1007 2 1118 2 50 2 11 4 728 2 202 18 89 2 800 2 415 2 1050 2 130 4 584 2 627 2 1013 2 421 4 813 2 780 2 633 8 745 2 955 2 637 20 279 2 881 2 991 2 785 2 1103 2 753 2 434 2 965 2 889 2 324 2 569 2 1108 2 
735 2 1 12 828 2 421 4 633 4 408 4 637 12 486 4 50 2 991 2 728 2 11 4 1103 2 202 10 89 2 659 2 885 2 1050 2 324 2 889 2 569 2 1108 2 
724 2 

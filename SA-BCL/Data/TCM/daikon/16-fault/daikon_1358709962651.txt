#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 590 572 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (511,737) 884 864 22 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 216 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.StringIndexOutOfBoundsException 198 32 178 357 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 526 357 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (511,737) (511,737) 194 32 178 357 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 526 357 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration; | RETURN | 7701 | return null
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.MathMDE:gcd(II)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 5354 | if (x) -> if (!x)
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:negate(I)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | RETURN | 55834 | return null
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:getEndColumn()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern:intern([D)[D
daikon.PptSlice1:num_samples()I
daikon.Quant:isReverse([I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:noDups([I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.ValueTuple:size()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:union([I[I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptSlice2:arity()I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | OPERATOR | 1654 | == -> <
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:lexEqual([I[I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([I)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap:size()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName:hashCode()I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:subsetOf([J[J)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2586 | = null
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10778 | 3 -> 0
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Debug:logDetail()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Node:Node()V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:getEndLine()I
daikon.ModBitTracker:num_vars()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice0:arity()I
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:memberOf(S[S)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Ppt:Ppt()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:logOn()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:lexGT([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ProglangType:isPseudoArray()Z
daikon.ProglangType:dimensions()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant:getConfidence()D
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:InvMap()V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:ne(II)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern:intern([J)[J
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:eltsLTE([II)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseGT([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.PptName:isEnterPoint()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:eq(II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaCharStream:ReadByte()C
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eq(JJ)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:sameLength([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ModBitTracker:split(I)I
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfo:relate_var()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.Quant:gte(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 2 206 2 224 2 737 2 453 2 213 4 203 2 511 2 577 2 
207 6 118 2 570 2 40 2 185 2 543 2 680 2 910 2 521 2 98 6 324 6 
35 6 497 4 759 2 706 6 562 2 125 4 46 6 95 2 472 6 737 2 821 2 511 2 327 2 
0 2 436 2 853 2 692 8 745 10 367 12 187 16 221 2 443 4 666 10 312 10 536 16 698 26 144 29 511 6 639 6 703 10 288 6 87 8 784 2 815 2 546 4 709 4 611 8 737 6 428 8 412 16 740 4 261 2 651 10 
822 6 189 4 
519 2 
552 2 743 2 558 2 330 2 218 2 219 2 277 2 511 4 281 2 348 2 809 2 406 2 233 2 235 2 127 2 63 2 522 2 298 2 650 2 359 4 652 2 129 2 653 2 68 2 466 2 26 2 473 2 196 2 371 2 839 2 905 4 677 2 907 2 906 4 85 2 605 2 148 2 91 4 483 2 737 4 96 2 430 2 261 2 326 2 
794 4 853 2 23 2 826 6 745 14 367 19 187 27 666 14 77 3 749 4 312 14 137 3 536 27 698 41 903 6 144 45 511 4 344 2 639 4 703 6 375 6 288 4 376 4 87 17 378 2 607 2 708 6 94 8 709 2 737 4 323 4 428 6 412 27 651 14 153 5 19 4 
348 2 705 2 244 2 
68 2 404 2 527 2 768 2 266 2 516 2 379 2 247 2 547 2 322 22 763 2 634 10 477 2 117 2 
264 2 242 2 745 2 107 2 367 2 719 2 187 2 666 2 312 2 474 2 536 2 698 4 144 6 755 2 703 4 200 2 288 2 87 2 709 2 845 2 412 2 651 2 241 2 
375 6 745 4 708 6 367 4 720 2 338 2 187 8 443 2 666 4 749 4 312 4 323 4 536 8 698 12 412 8 651 4 144 16 
100 4 767 4 181 2 2 2 743 2 3 4 306 2 133 4 624 10 244 6 559 4 271 2 74 10 505 2 535 4 902 2 697 2 668 4 115 2 725 2 343 4 702 2 283 2 779 2 121 2 348 8 676 4 83 2 906 4 85 4 705 2 18 62 642 14 407 4 456 4 811 2 45 2 299 2 67 2 239 2 
500 2 418 2 832 2 419 2 192 2 875 2 541 2 602 2 682 2 519 2 
689 4 553 6 555 2 693 2 694 2 103 24 795 5 556 1 329 2 557 2 796 1 210 2 797 2 798 2 441 2 215 2 220 2 800 2 9 2 111 1 339 2 222 4 565 2 113 8 447 16 446 1 449 2 568 3 119 2 228 2 571 16 808 2 810 3 577 2 232 2 354 32 710 2 237 4 817 1 460 2 238 12 463 2 586 2 823 2 587 4 465 1 589 2 131 2 25 2 134 2 362 2 363 3 245 2 27 1 721 3 835 2 33 2 724 2 478 2 600 2 373 2 145 1 603 2 41 8 608 1 44 2 737 34 259 3 260 2 383 2 616 1 48 2 492 2 49 16 619 2 855 32 857 2 495 2 154 2 52 2 861 2 53 2 625 2 159 2 55 2 56 2 160 3 166 2 167 3 510 2 399 2 754 2 756 2 757 1 511 32 876 2 512 2 287 2 878 2 515 1 880 2 174 4 883 2 177 3 293 3 411 2 296 6 179 2 302 4 654 2 657 2 70 2 69 16 890 2 891 2 305 3 661 1 896 4 662 1 73 2 72 2 417 4 416 3 532 2 75 2 188 2 775 2 900 1 78 1 670 24 195 2 673 2 315 2 423 2 538 2 675 2 198 2 424 3 540 8 782 2 321 2 92 2 683 6 911 2 785 2 912 6 786 2 
888 2 737 2 
737 4 64 2 105 2 
908 2 
741 10 690 2 621 8 438 12 499 4 623 2 156 6 746 12 8 4 112 6 750 38 163 12 632 2 59 2 753 38 276 8 116 2 341 2 170 4 401 2 346 12 171 2 572 2 403 12 879 2 230 38 641 6 175 2 124 4 410 8 581 2 712 4 132 2 827 12 590 6 467 2 186 2 470 2 311 10 667 8 136 6 899 2 475 8 251 16 781 8 255 12 319 2 481 12 679 2 783 8 609 8 89 4 258 12 488 6 739 2 738 4 151 4 384 12 548 2 99 12 
442 1 736 2 850 2 60 2 
736 2 444 2 
546 2 646 2 348 2 736 2 286 2 268 2 803 2 
736 2 860 2 803 2 
736 2 803 2 257 2 
850 2 139 2 635 2 
736 2 803 2 
539 2 635 2 
736 2 537 2 
850 2 635 2 342 2 
372 2 914 2 850 2 
824 2 464 2 850 2 
631 2 850 2 14 2 
850 2 397 2 813 2 
802 2 635 2 
736 2 762 2 
914 2 871 2 
842 2 464 2 
704 2 14 2 
886 2 813 2 
193 2 635 2 
507 2 813 2 
508 2 14 2 
464 2 610 2 
914 2 592 2 
223 2 850 2 635 2 342 2 
292 2 223 2 850 2 635 2 342 2 
328 2 850 2 635 2 
849 2 850 2 635 2 
209 2 269 2 717 2 352 2 
728 2 348 2 286 2 674 2 
728 2 348 2 286 2 211 2 268 2 674 2 
546 2 208 2 348 2 736 2 286 2 803 2 
558 2 152 2 
546 2 348 2 286 2 713 2 
157 2 14 2 
801 2 813 2 
914 2 426 2 
464 2 656 2 
844 2 464 2 813 2 
464 2 57 2 813 2 
464 2 580 2 813 2 
464 2 356 2 813 2 
180 6 494 6 554 2 348 2 254 2 286 2 128 2 381 2 
205 2 635 2 
345 4 451 2 695 2 828 2 377 2 388 2 882 2 365 2 517 2 684 2 322 6 773 2 867 2 520 2 313 4 142 2 804 2 479 2 
243 2 850 2 
75 2 
689 2 550 2 553 6 555 2 693 2 329 2 106 2 560 2 441 2 9 2 222 4 449 2 701 2 452 2 577 2 354 4 238 8 463 2 823 2 587 4 465 2 25 6 27 2 471 2 835 2 34 2 478 2 600 2 253 2 39 4 840 2 256 4 41 2 484 2 737 26 612 2 260 2 383 2 492 2 619 2 855 6 742 2 857 2 159 2 55 2 272 2 399 2 511 26 512 2 878 2 880 2 174 2 296 4 65 2 302 4 654 2 69 6 657 2 891 2 71 2 896 2 72 2 417 4 188 2 775 4 423 2 198 2 84 2 782 2 683 2 911 2 785 2 912 2 786 2 
689 2 550 2 553 6 555 2 693 2 329 2 560 2 441 2 110 2 9 2 222 4 449 2 701 2 808 2 452 2 577 2 354 4 238 8 463 2 823 2 587 4 465 2 715 2 25 6 27 2 471 2 835 2 478 2 600 2 253 2 39 4 840 2 256 4 41 2 484 2 737 26 612 2 260 2 383 2 492 2 619 2 855 6 857 2 159 2 55 2 272 2 399 2 511 26 512 2 287 2 878 2 880 2 174 2 289 2 296 6 65 2 302 4 654 2 69 6 657 2 891 2 71 2 896 2 72 2 417 4 188 2 775 4 423 2 198 2 84 2 782 2 321 2 683 2 911 2 785 2 912 2 786 2 
429 2 
626 2 727 2 
207 6 553 4 496 2 747 2 440 2 109 4 627 2 628 2 564 8 566 2 872 2 398 2 61 2 15 2 511 6 512 2 640 2 349 2 643 2 645 2 578 4 579 2 816 2 297 4 20 8 463 2 823 2 587 2 185 2 894 2 307 2 772 2 417 2 28 2 834 2 190 2 534 10 79 2 423 2 600 2 40 4 543 4 146 2 42 4 204 2 733 2 545 2 910 2 911 2 843 2 786 2 787 2 737 12 98 6 490 2 324 6 851 2 263 2 434 4 615 4 
207 8 553 4 496 2 391 4 747 2 440 2 109 4 627 2 628 2 564 8 566 2 872 2 398 2 61 2 511 6 15 2 512 2 640 2 349 2 643 2 645 2 578 4 579 2 816 2 297 4 521 2 20 8 463 2 823 2 587 2 185 2 894 2 417 2 468 2 772 2 28 2 834 2 190 2 534 10 79 2 80 2 423 2 600 2 40 4 543 4 146 2 42 4 204 2 545 2 910 2 911 2 843 2 786 2 787 2 737 12 98 6 490 2 324 8 851 2 263 2 434 4 615 4 
207 2 40 2 496 2 894 2 543 2 643 2 146 2 440 2 578 2 545 2 627 2 843 2 297 4 79 2 98 2 263 2 15 2 434 4 
207 6 553 4 496 2 747 2 440 2 109 4 627 2 628 2 564 4 566 2 872 2 398 2 61 2 15 2 511 6 512 2 640 2 349 2 643 2 645 2 578 4 579 2 816 2 297 4 521 2 20 4 463 2 823 2 587 2 185 2 894 2 307 2 772 2 417 2 28 2 834 2 190 2 534 6 79 2 423 2 600 2 40 4 543 4 146 2 42 4 204 2 733 2 545 2 911 2 843 2 786 2 787 2 737 12 98 4 490 2 324 6 851 2 263 2 434 4 615 4 
207 4 553 4 496 2 747 2 440 2 109 4 627 2 628 2 564 4 566 2 872 2 398 2 61 2 15 2 511 6 118 2 512 2 640 2 349 2 643 2 645 2 578 4 579 2 816 2 297 4 20 4 463 2 823 2 587 2 185 2 894 2 307 2 772 2 417 2 28 2 834 2 190 2 534 6 79 2 423 2 600 2 40 4 543 4 146 2 42 4 204 2 733 2 545 2 911 2 843 2 786 2 787 2 737 12 98 6 490 2 324 6 851 2 263 2 434 4 615 4 
207 6 553 4 496 2 747 2 440 2 109 4 627 2 628 2 564 4 566 2 872 2 398 2 61 2 15 2 511 6 512 2 640 2 349 2 643 2 645 2 578 4 579 2 816 2 297 4 20 8 463 2 823 2 587 2 185 2 894 2 307 2 772 2 417 2 28 2 834 2 190 2 534 6 79 2 423 2 600 2 40 4 543 4 146 2 42 4 204 2 733 2 545 2 910 2 911 2 843 2 786 2 787 2 737 12 98 6 490 2 324 6 851 2 263 2 434 4 615 4 
207 6 553 4 496 2 747 2 440 2 109 4 627 2 628 2 564 8 566 2 872 2 398 2 61 2 15 2 511 6 118 2 512 2 640 2 349 2 643 2 645 2 578 4 579 2 816 2 297 4 20 8 463 2 823 2 587 2 185 2 894 2 307 2 772 2 417 2 28 2 834 2 190 2 534 10 79 2 423 2 600 2 40 4 543 4 146 2 42 4 204 2 733 2 545 2 910 2 911 2 843 2 786 2 787 2 737 12 98 8 490 2 324 8 851 2 263 2 434 4 615 4 
207 6 553 4 496 2 747 2 440 2 109 4 627 2 628 2 564 8 566 2 872 2 398 2 61 2 15 2 511 6 512 2 640 2 349 2 643 2 645 2 578 4 579 2 816 2 297 4 20 8 463 2 823 2 587 2 185 2 894 2 307 2 772 2 417 2 28 2 834 2 190 2 534 10 79 2 423 2 600 2 40 4 543 4 146 2 42 4 204 2 733 2 545 2 910 2 911 2 843 2 786 2 787 2 737 12 98 6 490 2 324 6 851 2 263 2 434 4 615 4 
207 4 689 2 437 2 440 2 222 4 449 2 225 2 15 2 229 2 452 2 455 2 458 1 238 4 714 2 20 2 463 2 462 6 25 6 246 1 469 6 28 2 471 2 723 1 478 2 40 4 39 4 480 1 42 8 41 2 733 2 737 46 490 2 263 2 492 2 496 2 744 6 501 2 747 2 55 2 278 6 511 24 61 4 512 2 284 2 62 2 761 2 296 6 297 4 64 6 524 2 302 4 69 6 528 1 71 4 772 2 72 2 533 2 534 2 774 1 79 2 780 2 318 2 84 2 543 4 544 2 321 2 545 2 90 2 785 2 786 2 787 2 98 8 324 12 549 4 553 6 329 12 332 1 334 6 335 6 109 6 337 2 566 2 118 4 122 2 349 2 808 2 575 10 577 2 578 4 353 2 354 2 126 2 579 2 816 2 823 2 587 4 361 7 366 2 364 2 834 2 835 2 138 6 598 6 600 2 601 6 604 2 606 2 146 2 843 2 383 2 851 2 615 4 619 2 386 6 855 8 387 2 390 2 862 2 627 2 628 2 869 2 872 2 636 1 398 2 399 2 640 4 878 2 880 2 174 2 643 2 405 1 645 2 408 2 887 6 654 2 888 6 413 2 182 2 185 4 894 2 896 2 417 4 898 2 188 2 190 2 422 2 672 6 423 2 198 2 908 6 202 7 204 2 683 2 911 2 912 2 913 4 686 8 433 6 434 4 
549 4 689 4 207 8 553 6 437 2 329 12 335 6 334 6 440 2 109 6 337 2 222 4 566 2 449 2 225 2 15 2 229 2 122 2 349 2 808 2 452 2 575 10 455 2 353 2 578 4 577 2 126 2 354 2 579 2 816 2 238 8 714 2 20 6 462 6 463 2 823 2 587 4 25 6 364 2 366 2 469 6 28 2 471 2 834 2 835 2 138 6 598 6 478 2 601 6 600 2 39 4 40 4 604 2 606 2 146 2 41 2 42 8 733 2 843 2 737 48 490 2 851 2 383 2 263 2 615 4 492 2 386 6 619 2 855 8 387 2 496 2 744 6 501 2 390 2 747 2 862 2 55 2 627 2 628 2 869 2 872 2 278 6 398 2 399 2 61 4 511 26 512 2 284 2 640 4 878 2 880 2 643 2 174 4 645 2 408 2 62 2 761 2 296 6 297 4 64 6 524 2 302 4 887 6 654 2 888 6 413 2 69 6 182 2 304 2 529 2 185 4 894 2 71 4 896 4 72 2 772 2 417 4 898 2 533 2 188 2 534 2 190 2 775 2 422 2 79 2 672 6 423 2 198 2 780 2 318 2 84 2 908 6 544 2 543 4 204 2 321 2 90 2 545 2 683 2 910 4 911 2 912 2 785 2 913 4 786 2 787 2 686 8 98 8 324 12 433 6 434 4 
549 4 689 4 207 8 553 6 437 2 329 12 335 6 334 6 440 2 109 6 337 2 564 4 222 4 566 2 449 2 225 2 15 2 229 2 122 2 349 2 808 2 452 2 575 10 455 2 353 2 578 4 577 2 126 2 354 2 579 2 816 2 238 8 714 2 20 6 462 6 463 2 823 2 587 4 25 6 364 2 366 2 469 6 28 2 471 2 834 2 835 2 138 6 598 6 478 2 601 6 600 2 39 4 40 4 604 2 606 2 146 2 41 2 42 8 733 2 843 2 737 48 490 2 851 2 383 2 263 2 615 4 492 2 386 6 619 2 855 8 387 2 496 2 744 6 501 2 390 2 747 2 862 2 627 2 55 2 628 2 869 2 872 2 278 6 398 2 399 2 61 4 511 26 512 2 284 2 640 4 878 2 880 2 643 2 174 4 645 2 408 2 62 2 761 2 296 6 297 4 64 6 524 2 302 4 887 6 654 2 888 6 413 2 69 6 182 2 304 2 529 2 185 4 894 2 71 4 896 4 72 2 772 2 417 4 898 2 533 2 188 2 534 6 190 2 775 2 422 2 79 2 672 6 423 2 198 2 780 2 318 2 84 2 908 6 544 2 543 4 204 2 321 2 90 2 545 2 683 2 910 4 911 2 912 2 785 2 913 4 786 2 787 2 686 8 98 8 324 12 433 6 434 4 
207 10 689 4 437 2 4 2 440 2 222 4 449 2 225 2 15 2 229 2 452 4 454 6 455 2 459 6 238 10 714 2 20 6 463 2 462 6 25 8 469 6 28 2 471 2 249 6 478 2 40 4 39 6 732 6 42 8 41 4 733 2 737 52 47 6 490 2 263 2 492 2 496 2 51 2 744 12 501 2 747 2 502 6 55 2 278 6 280 6 511 24 61 4 282 2 512 2 284 2 62 2 761 2 296 6 297 4 521 2 64 12 524 2 302 4 69 8 304 2 529 2 71 4 772 2 72 2 533 2 534 6 775 2 79 2 780 2 318 2 84 2 543 4 544 2 321 2 90 2 545 2 785 2 786 2 787 2 98 10 324 16 549 4 553 6 329 10 334 6 335 6 109 6 337 2 564 4 566 2 118 2 569 2 806 6 122 2 347 2 349 2 808 2 575 8 577 2 578 4 353 2 354 4 126 2 579 2 816 2 819 2 823 2 587 4 366 2 364 2 834 2 835 2 138 12 598 6 600 2 601 6 604 2 606 2 146 2 843 2 383 2 851 2 615 4 619 2 386 6 855 12 387 2 389 6 390 2 158 2 862 2 627 2 628 2 869 2 872 2 398 2 399 2 640 4 878 2 880 2 174 4 643 2 645 2 408 2 887 12 654 2 888 12 413 2 182 2 659 2 185 4 894 2 896 4 417 4 898 2 188 2 190 2 672 6 423 2 198 2 908 12 204 2 910 4 683 4 911 2 912 4 913 4 686 8 433 6 434 4 
20 6 207 6 185 2 894 2 747 2 440 2 109 2 627 2 628 2 564 4 28 2 534 4 190 2 79 2 872 2 15 2 40 4 349 2 543 4 42 2 733 2 645 2 204 2 545 2 910 2 843 2 816 2 787 2 737 4 297 2 98 6 490 2 324 4 615 2 434 2 
207 6 553 6 329 4 440 2 109 2 222 4 449 2 450 2 15 2 349 2 808 2 575 2 577 2 354 3 816 2 20 6 463 2 823 2 587 4 25 6 28 2 471 2 29 2 835 2 478 2 600 2 40 4 39 4 482 2 42 2 733 2 843 2 737 28 490 2 383 2 615 2 492 2 619 2 855 8 154 2 747 2 55 2 627 2 628 2 872 2 510 2 754 2 511 24 512 2 878 2 880 2 645 2 296 6 297 2 300 2 302 4 654 2 69 6 185 2 769 2 415 3 894 2 71 2 417 4 72 2 772 2 75 2 188 2 534 2 190 2 79 2 422 2 423 2 198 2 84 2 543 4 204 2 321 2 545 2 910 2 683 3 911 2 785 2 912 3 786 2 787 2 98 6 324 4 434 2 
787 2 7 2 872 2 
787 2 7 2 872 2 
549 2 689 4 207 12 553 6 329 4 7 2 109 4 564 4 340 2 222 4 566 2 449 2 118 4 808 2 350 2 575 2 576 2 578 4 577 2 236 2 354 2 579 2 818 4 238 4 20 6 463 2 823 2 587 4 25 2 248 2 471 2 835 2 726 2 601 2 600 2 40 4 604 2 42 4 843 2 737 24 490 2 851 2 383 2 263 2 615 2 492 2 619 2 855 2 501 2 747 2 393 2 394 2 55 2 627 4 272 4 165 2 872 6 399 4 61 2 511 16 512 2 640 4 878 2 880 2 643 2 174 4 296 6 297 2 521 4 302 4 654 2 303 2 655 2 69 2 185 4 771 4 71 6 896 4 72 2 417 4 188 2 534 6 79 2 314 2 423 2 198 2 542 2 84 2 544 2 320 2 543 4 909 2 321 2 910 4 911 2 785 2 913 2 786 2 787 4 98 12 915 2 324 16 792 2 434 2 
551 2 601 2 463 2 496 2 329 2 350 2 575 2 270 2 862 2 90 2 236 2 913 2 737 4 314 2 820 2 727 2 511 2 
549 2 689 4 207 12 553 6 329 2 7 2 109 4 564 4 222 4 566 2 449 2 118 4 808 2 350 2 576 4 578 4 577 2 236 2 354 4 579 2 818 4 238 4 582 2 20 6 463 2 823 2 587 4 25 2 248 2 471 2 834 2 835 2 601 2 600 2 40 4 604 2 42 4 843 2 737 24 490 2 851 2 383 2 263 2 615 2 492 2 619 2 855 2 501 2 747 2 393 2 394 2 55 2 627 4 865 2 272 4 161 2 872 6 399 4 61 4 511 16 512 2 640 4 878 2 880 2 643 2 174 4 296 6 297 2 521 4 302 4 654 2 655 2 69 2 185 4 771 4 71 6 896 4 72 2 417 4 188 2 534 6 421 2 79 2 669 2 314 2 423 2 198 2 542 2 84 2 544 2 320 2 543 4 909 2 321 2 910 4 911 2 785 2 786 2 787 4 98 12 915 2 324 16 792 2 434 2 
549 2 689 4 207 12 553 6 329 4 7 2 109 4 564 4 222 4 566 2 449 2 118 4 808 2 350 2 575 2 576 2 578 4 577 2 234 2 236 2 354 2 579 2 818 4 238 4 20 6 463 2 823 2 587 4 25 2 248 2 471 2 834 2 835 2 601 2 600 2 40 4 604 2 42 4 843 2 737 24 490 2 851 2 383 2 263 2 615 2 618 2 492 2 619 2 855 2 501 2 747 2 393 2 394 2 55 2 627 4 396 2 630 2 272 4 164 2 872 6 399 4 61 4 511 16 512 2 640 4 878 2 880 2 643 2 174 4 296 6 297 2 521 4 302 4 654 2 655 2 69 2 185 4 771 4 71 6 896 4 72 2 417 4 188 2 534 6 79 2 314 2 423 2 198 2 542 2 84 2 544 2 320 2 543 4 909 2 321 2 910 4 911 2 785 2 913 2 786 2 787 4 98 12 915 2 324 16 792 2 434 2 
435 2 385 2 855 2 620 2 553 6 102 2 329 2 864 2 866 2 222 2 11 1 868 2 274 2 449 2 279 2 511 16 512 2 638 2 880 2 577 2 884 2 296 2 66 2 302 2 585 2 654 2 22 2 463 2 823 2 69 2 587 4 25 2 184 2 71 2 72 2 417 4 665 1 188 2 835 2 423 2 198 2 600 2 374 2 84 2 911 2 785 2 786 2 737 22 687 2 789 2 431 2 383 2 491 2 
855 2 854 2 69 2 25 2 716 2 214 2 897 2 108 2 309 2 752 4 509 1 81 2 478 2 511 2 120 3 39 2 425 2 452 6 683 3 354 3 912 3 737 2 461 2 240 2 432 2 
854 2 855 2 120 2 39 2 69 2 425 2 25 2 452 6 716 2 214 2 897 2 108 2 309 2 354 2 683 2 912 2 737 2 752 4 461 2 81 2 240 2 478 2 432 2 511 2 
854 2 855 2 120 2 39 2 69 2 425 2 25 2 452 6 716 2 214 2 897 2 108 2 309 2 354 2 683 2 912 2 737 2 752 4 461 2 81 2 240 2 478 2 432 2 511 2 
49 2 855 2 745 2 563 2 395 2 698 4 699 2 511 4 639 2 571 2 123 2 231 2 707 3 354 3 412 2 651 2 583 2 358 2 584 4 130 2 770 2 829 4 308 2 187 2 666 2 312 2 536 2 140 4 476 3 478 2 141 3 144 6 37 2 147 6 734 4 683 3 737 10 428 4 432 2 614 4 
49 2 855 2 853 2 745 2 563 2 395 2 698 4 699 2 511 4 639 2 571 2 123 2 231 2 707 2 354 2 412 2 651 2 583 2 358 2 584 4 130 2 770 2 829 4 308 2 367 2 187 2 666 2 312 2 536 2 140 4 476 2 478 2 141 2 144 4 37 2 87 2 147 6 734 4 683 2 737 10 428 4 432 2 614 4 
49 2 855 2 853 2 745 2 563 2 395 2 698 4 699 2 511 4 639 2 571 2 123 2 231 2 707 2 354 2 412 2 651 2 583 2 358 2 584 4 130 2 770 2 829 4 308 2 367 2 187 2 666 2 312 2 536 2 140 4 476 2 478 2 141 2 144 4 37 2 87 2 147 6 734 4 683 2 737 10 428 4 432 2 614 4 
49 2 855 2 853 2 745 2 563 2 395 2 698 4 699 2 511 4 639 2 571 2 123 2 231 2 707 2 354 2 412 2 651 2 583 2 358 2 584 4 130 2 770 2 829 4 308 2 367 2 187 2 666 2 312 2 536 2 140 4 476 2 478 2 141 2 144 4 37 2 87 2 147 6 734 4 683 2 737 10 428 4 432 2 614 4 
49 2 855 2 853 4 745 2 563 2 395 2 698 4 699 2 511 4 639 2 571 2 123 2 231 2 707 2 354 2 412 2 651 2 583 2 358 2 584 4 130 2 770 2 829 4 308 2 367 4 187 2 666 2 312 2 536 2 140 4 476 2 478 2 141 2 144 4 37 2 87 4 147 6 734 4 683 2 737 10 428 4 432 2 614 4 
856 2 487 2 31 2 201 2 54 2 216 2 
691 2 402 2 76 2 380 2 840 2 212 2 54 2 
887 2 2 1 859 2 439 2 331 2 561 2 663 2 594 2 310 2 30 1 597 1 191 2 58 2 870 2 758 2 511 8 637 2 512 2 881 2 811 1 176 2 149 1 737 10 613 2 790 2 301 2 
1 2 853 3 745 6 135 2 367 3 187 6 666 6 749 2 312 6 536 6 836 2 698 12 903 4 144 16 196 2 511 6 317 2 777 2 17 2 639 2 605 2 87 3 812 2 708 4 94 2 737 6 412 6 428 4 651 6 19 2 
584 2 199 2 82 2 414 2 830 2 734 2 748 2 629 1 486 7 846 2 737 1 489 2 140 2 776 2 671 2 227 2 873 4 511 1 
584 2 199 2 414 2 82 4 830 2 734 2 748 2 846 2 486 6 489 4 140 2 776 4 671 2 227 2 873 4 
584 2 199 2 414 2 82 8 830 2 734 2 748 6 629 1 846 8 486 10 737 1 489 8 140 2 776 8 671 2 227 2 873 4 511 1 
584 2 199 2 414 2 82 2 830 2 734 2 486 2 489 2 140 2 776 2 671 2 227 2 873 2 
101 6 5 12 333 4 222 36 12 6 445 2 567 4 114 4 13 2 448 2 226 6 700 12 805 2 573 6 808 18 574 2 351 4 457 12 357 2 21 1 24 42 360 6 591 4 718 6 593 2 831 6 833 2 596 4 32 2 250 2 837 2 369 2 370 2 143 12 838 2 252 6 599 12 36 2 38 8 729 12 841 6 730 6 43 6 735 1 848 6 485 4 737 90 150 6 382 6 493 3 617 4 265 2 498 6 503 6 863 4 504 2 273 6 162 6 633 13 168 6 511 78 400 2 877 2 514 6 172 6 291 2 644 6 409 6 295 2 296 84 178 2 649 12 523 6 764 4 765 6 302 42 889 4 658 2 530 2 892 6 660 6 895 22 72 10 188 10 420 12 901 8 316 4 197 6 198 4 778 4 678 6 681 12 321 16 93 2 685 12 427 6 325 6 791 4 916 4 793 4 
50 2 622 2 858 4 155 2 6 2 104 2 267 2 799 2 333 38 217 2 336 2 503 2 10 2 12 2 696 2 222 20 506 2 751 2 633 2 275 2 448 2 169 2 874 2 511 44 513 2 877 4 16 4 573 2 285 2 172 2 807 2 173 2 574 2 290 2 644 2 814 2 457 4 294 2 760 2 355 2 647 2 885 2 296 42 648 2 178 2 711 6 357 2 523 2 302 20 525 2 766 2 21 2 360 2 24 6 526 2 825 2 588 2 183 2 530 2 893 2 660 2 72 2 664 2 531 2 368 2 595 2 188 2 420 4 32 2 369 2 838 2 599 2 198 2 38 6 904 2 729 4 86 4 731 2 88 2 685 2 848 2 847 2 737 46 150 2 97 2 788 2 688 2 382 2 852 4 262 2 
24 2 530 2 333 4 392 2 72 2 222 4 188 2 420 2 722 2 32 2 448 2 194 2 838 2 511 14 198 2 808 4 729 2 574 2 644 2 321 4 457 2 294 2 296 10 178 2 737 14 357 2 431 2 302 4 
493 2 617 4 333 14 503 4 222 14 12 2 633 2 13 2 448 2 511 26 400 2 877 2 573 4 172 4 808 10 574 2 291 2 644 2 457 6 294 2 295 2 296 38 178 2 648 2 649 10 357 2 523 4 302 14 21 2 889 2 24 8 360 2 526 2 658 2 530 2 660 4 895 10 593 2 72 2 833 2 188 2 420 6 32 2 901 6 250 2 837 2 838 2 599 2 316 2 36 2 198 2 38 6 729 6 731 2 321 10 685 2 848 2 485 4 737 28 150 4 382 2 793 2 
518 2 

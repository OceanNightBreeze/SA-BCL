#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 1004 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 691 613 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 922 826 930 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 725 200 665 448 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 725 200 665 448 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 725 200 665 448 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 725 200 665 448 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_61()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:eq(JJ)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:intersection([I[I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_162()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_58()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:justified()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_104()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_136()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:slice([III)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_17()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Ppt:Ppt()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3_15()Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_107()Z
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_3(I)Z
daikon.PptSlice2:arity()I
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_3_1()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_180()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([J)[J
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:eltsEqual([II)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([D)[D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_3_18()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_124()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_10()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_88()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_105()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_49()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.Quant:eltsGT([II)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfo:new_ppt()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eq(II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_77()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:noDups([I)Z
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_120()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ProglangType:isPseudoArray()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.Invariant:logOn()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_56()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice0:arity()I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_75()Z
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ProglangType:isArray()Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 17948 | return null
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3R_102()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3_21()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_2_5(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:lexGTE([I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_57()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_100()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:passes()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_54()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_103()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_137()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ModBitTracker:num_sets()I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.Quant:gt(II)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_30()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_89()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.ProglangType:isPointerFileRep()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V | CONDITION | 681 | if (x) -> if (!x)
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3_13()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_ntk()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:eq(DD)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:isFloat()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.PptSlice1:arity()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_vars()I
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:dimensions()I
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_115()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3R_69()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ProglangType:isScalar()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
daikon.VarInfo:relate_var()V
jtb.JavaCharStream:FillBuff()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1126 4 8 2 64 2 1139 2 100 2 65 2 485 2 442 2 475 2 
173 2 641 2 880 2 317 2 722 6 275 6 941 2 612 2 707 2 961 2 635 6 
243 2 712 2 64 2 110 6 514 4 642 2 530 6 8 2 278 4 507 6 332 2 452 6 242 2 
364 6 779 12 51 16 552 2 622 26 907 6 1181 8 487 10 8 6 701 2 627 16 821 8 1099 2 183 2 342 4 58 2 306 28 1144 8 151 10 951 4 64 6 953 10 316 16 1154 10 157 2 649 10 1032 2 893 8 283 4 1214 4 
870 6 482 4 
982 2 
1172 2 773 2 620 2 8 4 701 2 182 2 869 2 268 2 802 4 957 2 1197 2 119 2 120 2 427 2 277 2 1207 2 1125 2 1211 2 433 2 813 2 434 2 509 2 967 2 373 2 443 2 748 2 667 2 301 2 824 2 450 2 380 4 64 4 1055 2 65 2 836 2 603 2 842 4 534 2 393 2 472 2 928 2 478 4 850 2 81 2 
364 4 741 4 901 6 1218 6 51 32 779 22 782 3 622 47 860 8 907 4 487 15 1181 6 588 5 8 4 627 32 1098 2 1099 2 143 2 102 4 306 52 1144 19 151 15 225 4 64 4 833 2 953 6 1154 15 316 32 649 15 605 6 118 4 71 6 32 2 766 4 1033 6 1075 2 656 4 400 4 283 2 
427 2 704 2 1000 2 
354 2 381 2 862 2 229 2 443 2 116 2 70 2 843 2 556 2 491 10 1206 2 1248 2 1212 2 849 22 
407 2 779 2 51 2 622 4 907 2 487 2 627 2 560 2 306 6 1144 2 263 2 151 2 792 2 680 2 314 2 1053 2 953 4 1154 2 316 2 986 2 649 2 1241 2 283 2 
741 4 951 2 316 8 1154 4 779 4 51 8 1196 2 605 6 649 4 622 12 487 4 71 6 627 8 766 4 376 2 306 16 151 4 
1004 2 303 2 367 2 994 2 1092 2 25 2 1132 2 639 6 689 2 1167 2 
104 2 593 2 683 2 1054 2 982 2 272 2 1025 2 1203 2 1123 2 404 2 
334 2 2 1 933 1 1086 1 775 2 623 2 488 2 8 32 9 2 180 2 340 2 493 2 184 2 12 2 632 1 185 8 787 4 634 2 16 4 18 2 949 2 640 2 1110 2 502 2 793 16 23 4 192 3 795 1 956 2 360 2 801 2 653 2 201 1 362 2 659 8 814 2 368 2 815 2 213 2 50 32 215 16 1135 2 669 2 822 4 823 6 1140 2 973 2 827 2 526 1 527 2 829 2 975 2 221 2 1146 2 977 2 224 12 64 34 980 2 68 2 231 2 538 2 235 2 847 2 77 2 76 6 1163 4 78 2 1165 1 541 2 399 3 401 1 1001 2 84 4 1005 2 1007 2 548 2 857 3 247 3 1009 2 864 2 411 5 868 2 1188 2 415 3 258 2 562 2 416 2 107 2 1018 24 265 2 108 2 109 2 1024 3 881 2 570 2 883 1 719 12 573 2 720 2 721 2 725 2 726 2 574 3 1202 2 121 32 122 2 575 3 430 2 888 3 730 2 1210 1 734 2 577 2 735 2 282 1 288 6 438 2 290 2 137 6 441 4 908 2 1220 2 592 2 147 16 305 2 149 2 912 3 1225 2 1229 1 918 2 154 16 761 3 1235 3 462 1 463 8 319 24 158 2 1063 2 1065 2 162 1 925 1 926 2 1072 2 473 2 1076 4 770 2 169 1 170 2 475 2 
64 2 36 2 
64 4 329 2 685 2 
991 2 
1 4 618 14 6 16 7 4 13 2 633 4 14 2 637 2 636 2 21 16 643 94 24 2 27 2 645 4 28 94 650 2 34 2 37 2 38 6 654 2 40 2 43 2 42 4 657 2 658 2 660 6 661 2 662 2 52 2 671 4 673 2 60 2 675 62 679 2 682 2 684 12 67 2 72 4 688 2 691 2 85 4 690 2 692 4 694 2 88 36 90 30 92 4 696 86 93 56 697 18 95 4 699 2 698 16 98 2 97 2 700 2 706 2 708 2 709 42 710 4 105 4 106 50 112 4 715 18 716 2 717 4 115 2 723 2 727 4 123 2 731 2 732 94 124 2 126 94 128 96 736 2 739 12 738 2 130 4 742 2 133 2 743 2 134 2 136 2 745 12 138 4 746 2 141 4 751 2 752 2 753 2 754 2 755 2 152 2 756 86 757 2 758 4 759 2 762 2 765 48 163 2 165 2 767 2 769 4 768 4 167 2 171 2 772 2 174 2 776 2 176 8 177 4 781 2 179 2 181 2 784 2 785 18 786 2 788 2 188 4 790 2 187 2 189 12 796 2 799 4 800 56 804 2 807 2 808 2 809 50 811 4 810 42 812 6 204 2 207 246 208 94 209 4 212 2 817 2 816 2 819 22 820 2 214 2 825 2 828 2 220 2 226 358 227 2 831 2 832 18 835 2 228 2 844 2 230 4 233 2 846 34 845 12 239 2 854 2 245 62 858 2 865 2 867 4 257 2 262 22 874 4 875 2 876 8 877 2 266 48 267 2 269 4 878 2 270 104 274 2 887 2 886 2 892 2 891 2 895 4 281 94 898 2 286 12 287 4 293 2 294 2 292 2 295 2 905 30 904 2 906 2 298 4 299 2 300 2 909 2 302 6 910 2 913 2 914 4 307 10 308 2 915 56 311 2 312 2 315 2 921 2 919 2 321 2 320 4 322 2 327 2 929 2 333 2 932 94 336 16 337 2 338 2 939 4 938 2 339 2 344 4 343 2 346 18 947 2 350 2 347 2 351 2 948 2 352 2 353 2 954 4 952 2 960 2 959 2 965 2 369 2 966 2 969 2 374 2 976 6 978 2 382 94 383 14 983 4 388 2 386 2 387 2 987 2 390 54 391 2 988 2 989 12 990 2 992 2 993 2 396 2 398 2 995 4 996 2 997 94 999 2 402 2 403 2 1003 6 406 8 1006 6 1008 2 1010 2 1011 2 1012 2 410 2 412 4 1014 2 413 2 1013 2 414 96 417 74 1017 2 1021 2 418 2 421 2 1026 2 423 4 425 4 1028 2 1030 4 426 2 1034 2 1035 2 1037 4 1038 44 1039 22 1040 2 1041 246 439 52 440 50 445 2 449 2 1044 2 1047 2 453 2 1048 20 455 4 1050 2 1051 2 456 4 1052 4 460 2 1059 8 1061 6 1066 44 1067 6 464 2 1070 4 1071 94 470 8 1073 62 1077 2 474 2 1082 246 1080 6 476 2 1083 16 1085 2 479 2 1087 4 480 2 481 2 1091 4 484 18 1096 2 1094 44 1093 2 492 4 494 2 497 12 1106 2 1105 2 1103 2 500 2 1109 4 1112 6 1114 2 505 4 506 2 1120 2 1121 2 1122 2 1124 50 511 2 512 4 513 2 1128 2 515 8 1131 2 518 2 517 2 1136 18 1138 4 1137 8 523 86 524 2 1142 2 1143 56 1147 18 1148 74 1151 2 529 2 531 4 1155 2 1161 2 1162 2 544 4 545 2 546 4 1168 2 547 4 1173 2 549 2 1175 2 1177 28 553 2 554 2 1180 2 555 2 1184 2 1183 2 1185 2 1189 2 565 2 1194 2 566 2 567 46 1195 6 568 18 1198 4 1199 2 1201 4 1208 4 576 2 578 90 1213 94 579 4 1215 30 1216 4 586 4 590 42 1223 2 1224 2 1226 2 594 2 595 2 1228 14 599 2 598 4 1231 6 1230 2 601 2 1236 2 604 2 606 8 607 2 1245 2 609 2 613 2 614 2 1247 2 1249 2 
652 2 1045 1 1219 2 764 2 
652 2 619 2 
1171 2 82 2 427 2 652 2 342 2 718 2 273 2 
652 2 718 2 1160 2 
652 2 777 2 718 2 
1119 2 1219 2 1084 2 
652 2 718 2 
384 2 1084 2 
652 2 676 2 
280 2 1219 2 1084 2 
435 2 211 2 1219 2 
981 2 798 2 1219 2 
1031 2 1219 2 309 2 
251 2 131 2 1219 2 
468 2 1084 2 
652 2 747 2 
774 2 211 2 
981 2 328 2 
1107 2 309 2 
251 2 409 2 
103 2 1084 2 
251 2 361 2 
1019 2 309 2 
981 2 49 2 
211 2 638 2 
193 2 280 2 1219 2 1084 2 
1116 2 193 2 280 2 1219 2 1084 2 
326 2 1219 2 1084 2 
711 2 1219 2 1084 2 
175 2 1111 2 1232 2 626 2 
427 2 256 2 998 2 273 2 
1171 2 427 2 256 2 998 2 859 2 273 2 
427 2 652 2 342 2 718 2 273 2 651 2 
182 2 677 2 
427 2 236 2 342 2 273 2 
610 2 309 2 
251 2 172 2 
963 2 211 2 
981 2 33 2 
251 2 501 2 981 2 
251 2 981 2 250 2 
251 2 981 2 841 2 
251 2 981 2 838 2 
248 2 630 2 57 2 273 2 159 2 1243 6 427 2 330 6 
863 2 1084 2 
678 2 1127 2 356 2 600 2 335 2 503 2 1217 2 483 2 585 2 882 2 140 2 217 2 74 2 1074 4 1141 4 894 2 830 2 849 6 
53 2 1219 2 
653 2 
933 4 775 2 1088 2 8 26 9 2 1097 2 340 2 943 2 495 2 12 2 632 2 787 4 185 2 16 4 17 2 640 2 23 2 956 2 48 2 213 2 50 6 968 2 1133 2 822 2 823 5 973 2 827 2 218 4 527 2 61 4 1146 2 224 8 64 26 980 2 840 2 1157 2 238 2 76 2 1163 4 78 2 541 2 79 2 1001 2 1007 2 864 2 1188 6 258 2 562 2 570 2 719 8 721 2 720 2 726 2 725 2 121 4 1210 2 734 2 735 1 577 2 897 2 288 6 438 2 137 2 441 2 1042 2 908 2 147 6 305 2 149 4 1225 2 153 2 918 1 1065 2 926 2 770 2 1076 4 475 2 931 2 
933 2 775 2 1088 2 8 26 9 2 1097 2 340 2 943 2 496 2 12 2 632 2 787 4 185 2 16 4 17 2 640 2 23 2 956 2 48 2 213 2 50 6 968 2 1133 2 1134 2 822 2 823 6 973 2 827 2 218 4 527 2 829 2 61 4 1146 2 528 2 224 8 64 26 980 2 1157 2 238 2 76 2 1163 4 78 2 541 2 1001 2 1007 2 864 2 1188 6 258 2 562 2 570 2 719 8 721 2 720 2 725 2 726 2 121 4 1210 2 734 2 577 2 735 2 897 2 288 6 438 2 137 2 441 2 1042 2 908 2 147 6 305 2 149 4 1225 2 153 2 918 2 1065 2 926 2 770 2 1076 4 475 2 931 2 
451 2 
1113 2 571 2 
86 4 775 2 1089 4 246 2 8 6 941 2 10 2 557 2 99 2 945 2 12 2 707 4 635 6 872 4 789 2 355 2 359 2 1022 2 880 4 722 6 726 2 275 6 428 2 1205 2 279 2 431 2 432 2 961 2 41 2 508 4 580 2 285 2 964 4 288 4 289 2 664 10 521 2 666 2 587 2 973 2 674 8 911 2 305 2 596 2 64 12 917 2 1153 2 920 4 533 2 1057 2 985 2 763 8 1065 2 161 2 1069 2 926 2 1163 2 1076 2 852 2 851 2 
86 4 775 2 1089 4 246 2 8 6 941 2 10 2 557 2 945 2 12 2 707 4 635 8 872 4 789 2 355 2 359 2 1022 2 195 2 880 4 722 6 726 2 275 8 885 4 428 2 1205 2 279 2 431 2 432 2 961 2 41 2 508 4 580 2 285 2 964 4 288 4 289 2 664 10 521 2 666 2 587 2 973 2 674 8 911 2 305 2 596 2 1152 2 64 12 917 2 1153 2 920 4 533 2 1057 2 985 2 317 2 763 8 1065 2 161 2 926 2 1163 2 1076 2 852 2 851 2 
1153 2 1089 4 920 2 533 2 880 2 722 2 275 2 10 2 557 2 945 2 428 2 1205 2 911 2 707 2 432 2 41 2 508 4 789 2 
86 4 775 2 1089 4 246 2 8 6 10 2 557 2 99 2 945 2 12 2 707 4 635 6 872 4 789 2 355 2 359 2 1022 2 880 4 722 4 726 2 275 6 428 2 1205 2 279 2 431 2 432 2 961 2 41 2 508 4 580 2 285 2 964 4 288 4 289 2 664 6 521 2 666 2 587 2 973 2 674 4 911 2 305 2 596 2 64 12 917 2 1153 2 920 4 533 2 1057 2 985 2 317 2 763 4 1065 2 161 2 1069 2 926 2 1163 2 1076 2 852 2 851 2 
86 4 775 2 1089 4 246 2 8 6 10 2 557 2 99 2 945 2 12 2 707 4 635 6 872 4 789 2 355 2 359 2 1022 2 880 4 722 6 726 2 275 4 428 2 1205 2 279 2 431 2 432 2 961 2 41 2 508 4 580 2 285 2 964 4 288 4 289 2 664 6 521 2 666 2 587 2 973 2 674 4 911 2 305 2 596 2 64 12 917 2 1153 2 920 4 533 2 1057 2 985 2 763 4 1065 2 161 2 1069 2 926 2 612 2 1163 2 1076 2 852 2 851 2 
86 4 775 2 1089 4 246 2 8 6 941 2 10 2 557 2 99 2 945 2 12 2 707 4 635 6 872 4 789 2 355 2 359 2 1022 2 880 4 722 6 726 2 275 6 428 2 1205 2 279 2 431 2 432 2 961 2 41 2 508 4 580 2 285 2 964 4 288 4 289 2 664 6 521 2 666 2 587 2 973 2 674 4 911 2 305 2 596 2 64 12 917 2 1153 2 920 4 533 2 1057 2 985 2 763 8 1065 2 161 2 1069 2 926 2 1163 2 1076 2 852 2 851 2 
86 4 775 2 1089 4 246 2 8 6 941 2 10 2 557 2 99 2 945 2 12 2 707 4 635 8 872 4 789 2 355 2 359 2 1022 2 880 4 722 8 726 2 275 6 428 2 1205 2 279 2 431 2 432 2 961 2 41 2 508 4 580 2 285 2 964 4 288 4 289 2 664 10 521 2 666 2 587 2 973 2 674 8 911 2 305 2 596 2 64 12 917 2 1153 2 920 4 533 2 1057 2 985 2 763 8 1065 2 161 2 1069 2 926 2 612 2 1163 2 1076 2 852 2 851 2 
86 4 775 2 1089 4 246 2 8 6 941 2 10 2 557 2 99 2 945 2 12 2 707 4 635 6 872 4 789 2 355 2 359 2 1022 2 880 4 722 6 726 2 275 6 428 2 1205 2 279 2 431 2 432 2 961 2 41 2 508 4 580 2 285 2 964 4 288 4 289 2 664 10 521 2 666 2 587 2 973 2 674 8 911 2 305 2 596 2 64 12 917 2 1153 2 920 4 533 2 1057 2 985 2 763 8 1065 2 161 2 1069 2 926 2 1163 2 1076 2 852 2 851 2 
621 7 8 24 9 2 625 2 10 2 944 6 945 2 12 2 345 2 348 7 16 4 635 12 640 2 355 2 950 6 23 2 26 2 359 2 31 6 36 6 655 2 961 4 41 2 46 2 365 1 964 8 370 6 50 8 664 2 666 2 971 6 973 2 59 1 64 46 980 12 984 2 985 2 685 6 991 6 76 2 78 2 86 4 96 1 707 4 1016 2 1022 2 719 4 721 2 117 2 722 8 726 2 725 2 1029 2 121 2 428 2 429 2 431 2 432 2 735 2 129 6 740 10 137 2 441 2 142 1 446 2 147 6 155 2 1057 2 763 2 1062 2 1065 2 161 2 1069 2 160 4 471 2 166 2 168 2 1076 4 770 2 475 2 775 2 1089 4 1097 2 1100 6 787 4 185 2 789 2 197 2 508 4 510 6 206 1 213 2 521 2 1133 4 822 2 823 6 827 2 218 4 224 4 1153 2 533 2 532 2 232 1 536 2 238 2 1163 4 541 2 543 2 852 2 851 2 246 2 550 8 551 2 249 2 1179 2 866 6 557 2 558 2 1188 6 258 2 561 2 562 2 871 2 872 6 873 1 264 2 879 6 880 4 570 2 275 4 1204 1 1205 2 890 1 279 4 577 2 580 2 897 2 284 6 285 2 288 6 289 2 291 2 908 2 587 4 1222 6 589 6 911 2 305 2 1225 2 596 2 916 2 918 2 917 2 920 4 1233 2 1239 4 923 2 926 2 1246 2 612 4 
775 2 1089 4 8 26 625 2 1097 2 9 2 941 4 10 2 944 6 945 2 1100 6 12 2 185 2 787 4 345 2 635 12 16 4 789 2 640 2 950 6 355 2 23 4 359 2 26 2 197 2 31 6 35 2 36 6 655 2 961 4 41 2 508 4 510 6 46 2 210 2 964 8 370 6 213 2 50 8 664 2 1133 4 521 2 666 2 971 6 822 4 823 6 827 2 973 2 218 4 224 8 980 12 64 48 1153 2 532 2 984 2 533 2 985 2 685 6 536 2 991 6 238 2 76 2 1163 4 78 2 541 2 543 2 851 2 852 2 86 4 246 2 550 8 551 2 249 2 1179 2 866 6 557 2 558 2 1188 6 707 4 258 2 561 2 871 2 562 2 872 6 1016 2 264 2 879 6 1022 2 880 4 570 2 719 8 721 2 117 2 722 8 275 8 725 2 726 2 1029 2 121 2 428 2 429 2 1205 2 279 4 431 2 432 2 577 2 735 2 129 6 897 2 580 2 740 10 284 6 285 2 288 6 289 2 137 2 291 2 441 4 587 4 908 2 1222 6 589 6 446 2 911 2 147 6 305 2 149 2 1225 2 916 2 596 2 917 2 918 2 155 2 1233 2 920 4 1057 2 1239 4 763 6 1062 2 1065 2 160 4 923 2 1069 2 161 2 926 2 471 2 1246 2 166 2 168 2 770 2 1076 4 475 2 
775 2 1089 4 8 26 625 2 1097 2 9 2 941 4 10 2 944 6 945 2 1100 6 12 2 185 2 787 4 345 2 635 12 16 4 789 2 640 2 950 6 355 2 23 4 359 2 26 2 197 2 31 6 35 2 36 6 655 2 961 4 41 2 508 4 510 6 46 2 210 2 964 8 370 6 213 2 50 8 664 6 1133 4 521 2 666 2 971 6 822 4 823 6 827 2 674 4 973 2 218 4 224 8 980 12 64 48 1153 2 532 2 984 2 533 2 985 2 685 6 536 2 991 6 238 2 76 2 78 2 1163 4 541 2 543 2 851 2 852 2 86 4 246 2 550 8 551 2 249 2 1179 2 866 6 557 2 558 2 1188 6 707 4 258 2 561 2 871 2 562 2 872 6 1016 2 264 2 879 6 1022 2 880 4 570 2 719 8 721 2 117 2 722 8 726 2 275 8 725 2 1029 2 121 2 428 2 429 2 1205 2 279 4 431 2 432 2 577 2 735 2 129 6 897 2 580 2 740 10 284 6 285 2 288 6 289 2 137 2 291 2 441 4 587 4 908 2 1222 6 589 6 446 2 911 2 147 6 305 2 149 2 1225 2 916 2 596 2 917 2 918 2 155 2 1233 2 920 4 1057 2 1239 4 763 6 1062 2 1065 2 160 4 923 2 1069 2 161 2 926 2 471 2 1246 2 166 2 168 2 770 2 1076 4 475 2 
4 6 8 24 941 4 9 2 625 2 10 2 944 6 945 2 12 2 345 2 15 2 16 4 635 16 640 2 355 2 950 6 23 4 359 2 26 2 31 6 35 2 36 12 655 2 961 4 41 2 46 2 964 8 370 6 50 12 664 6 666 2 56 2 971 12 674 4 973 2 64 52 980 10 984 2 985 2 389 2 685 12 991 12 76 4 394 6 78 2 86 4 707 4 1016 2 1022 2 719 10 721 2 117 2 722 10 725 2 726 2 1029 2 121 4 428 2 429 2 431 2 432 2 735 2 129 6 740 8 137 4 441 4 446 2 147 8 148 2 149 2 155 2 1057 2 763 6 1062 2 1065 2 161 2 1069 2 160 4 164 6 471 2 166 2 168 2 1076 4 770 2 475 2 775 2 1089 4 1097 4 1100 6 1101 6 787 4 185 4 789 2 190 2 197 2 806 6 508 4 510 6 210 2 213 2 516 6 520 6 521 2 1133 4 822 4 823 6 827 2 218 6 224 10 1153 2 532 2 533 2 536 2 238 2 1163 4 541 2 543 2 852 2 851 2 1169 2 246 2 550 8 551 2 249 2 1179 2 861 6 866 6 557 2 558 2 1188 8 258 2 561 2 562 2 871 2 872 6 264 2 879 6 880 4 570 2 275 10 1200 2 1205 2 279 4 889 2 577 2 580 2 897 2 582 6 284 6 285 2 288 6 289 2 291 2 908 2 587 4 1222 12 589 12 911 2 305 2 1225 2 596 2 916 2 918 2 917 2 1233 2 920 4 317 2 1239 4 926 2 1246 2 612 2 
86 2 285 2 964 2 1089 2 664 4 521 2 941 2 557 2 674 4 707 4 872 2 635 4 789 2 355 2 596 2 64 4 917 2 1153 2 1057 2 533 2 880 4 763 6 722 6 1069 2 161 2 275 6 428 2 1205 2 431 2 961 2 41 2 508 2 580 2 851 2 852 2 
775 2 1089 2 8 24 941 2 12 2 787 4 635 4 16 4 186 2 789 2 640 2 355 2 194 3 653 2 961 2 41 2 508 2 964 2 213 2 50 8 664 2 1133 2 521 2 823 6 973 2 827 2 218 4 64 28 980 4 1153 2 533 2 538 2 847 2 238 2 76 3 1163 4 78 2 541 2 851 2 852 2 86 2 557 2 1188 6 559 2 707 4 258 2 562 2 872 2 564 2 1022 2 880 4 570 2 721 2 722 6 275 6 725 2 726 2 121 3 428 2 1205 2 730 2 431 2 577 2 735 2 580 2 897 2 740 2 285 2 288 6 137 3 908 2 297 2 147 6 305 2 1225 2 596 2 918 2 917 2 1057 2 763 6 1065 2 1069 2 161 2 923 2 926 2 469 2 1076 4 770 2 475 2 
161 2 760 2 580 2 
161 2 760 2 580 2 
933 2 775 2 1089 2 178 2 8 16 9 4 941 4 12 2 787 4 16 4 635 16 789 2 640 2 22 2 23 4 26 2 358 2 648 2 803 2 655 2 961 4 41 4 508 2 964 4 48 4 50 2 664 6 1133 6 666 2 822 4 823 6 973 2 827 2 674 4 224 4 63 2 64 24 980 4 533 2 985 2 537 2 238 2 1163 4 78 2 541 2 851 2 405 2 86 2 89 2 91 2 1188 2 707 4 258 2 562 2 872 4 879 2 880 4 570 2 719 4 721 2 424 4 722 12 725 2 726 2 275 12 121 2 279 4 432 2 577 2 735 2 580 6 897 2 740 2 900 2 581 2 285 2 288 6 289 2 441 4 587 2 908 2 750 2 146 2 911 2 147 2 305 2 1225 2 1227 2 918 2 760 2 920 4 1234 4 1058 2 317 4 1239 2 763 6 1065 2 1068 2 160 2 161 4 926 2 471 2 612 4 770 2 1076 4 475 2 
581 2 1227 2 980 2 64 4 775 2 89 2 532 2 879 2 571 2 1178 2 535 2 160 2 8 2 945 2 345 2 1104 2 740 2 
775 2 1089 2 178 2 8 16 9 4 941 4 12 2 787 4 16 4 635 16 789 2 640 2 22 2 23 4 26 2 359 2 648 2 655 2 961 4 41 4 508 2 964 4 48 4 50 2 664 6 1133 6 666 2 668 2 822 4 823 6 973 2 827 2 674 4 224 4 63 2 64 24 980 2 533 2 985 2 392 2 537 2 238 2 1163 4 78 2 541 2 851 2 405 2 86 2 89 2 91 2 1188 2 707 4 258 2 259 2 562 2 872 4 879 2 271 2 880 4 570 2 719 4 721 2 424 4 722 12 725 2 726 2 275 12 121 4 279 4 432 2 577 2 735 2 580 6 897 2 581 2 285 2 288 6 289 2 441 4 587 4 908 2 750 4 911 2 147 2 305 2 1225 2 1227 2 918 2 760 2 1056 2 920 4 1234 4 1058 2 317 4 1239 2 763 6 1065 2 1068 2 161 4 926 2 471 2 612 4 770 2 1076 4 475 2 
933 1 775 2 1089 2 178 2 8 16 9 4 941 4 12 2 787 4 16 4 635 16 789 2 640 2 22 2 23 4 26 2 359 2 648 2 655 2 961 4 41 4 508 2 964 4 48 4 50 2 664 6 1133 6 666 2 822 4 823 6 973 2 827 2 674 4 224 4 63 2 64 24 980 4 533 2 985 2 537 2 238 2 540 2 1163 4 78 2 541 2 851 2 405 2 86 2 89 2 91 2 1188 2 707 4 258 2 562 2 872 4 1023 2 879 2 880 4 570 2 719 4 721 2 424 4 722 12 725 2 726 2 275 12 121 2 279 4 432 2 577 2 735 2 580 6 897 2 740 2 581 2 285 2 902 2 288 6 289 2 441 4 587 4 908 2 750 2 911 2 147 2 305 2 1225 2 1227 2 918 2 760 2 920 4 1234 4 461 2 1058 2 317 4 1239 2 763 6 1065 2 1068 2 160 2 161 4 1244 2 926 2 471 2 612 4 770 2 1076 4 475 2 
933 1 934 2 3 2 5 2 936 2 935 2 622 12 940 2 8 42 9 4 627 8 629 2 628 2 943 2 631 2 341 2 11 2 12 2 632 2 946 2 15 2 349 2 17 2 16 12 640 2 19 10 20 2 357 2 955 2 647 2 958 2 649 4 30 2 29 2 32 2 962 2 45 2 44 2 364 4 47 12 50 28 371 2 51 8 968 2 54 2 970 2 55 4 670 4 375 14 974 4 973 2 378 2 379 4 979 2 681 2 980 2 64 52 385 2 66 2 389 2 69 2 73 2 75 12 686 2 397 2 76 16 395 2 78 2 80 12 1002 6 87 2 695 2 94 2 703 2 101 2 705 2 1020 4 111 12 714 4 419 2 422 3 420 2 719 26 721 4 1027 2 724 2 726 2 725 4 728 3 121 19 729 2 429 2 1036 4 125 2 127 2 735 4 737 10 741 4 436 2 132 2 437 3 135 2 137 19 1042 2 139 2 1043 2 749 2 446 4 447 2 145 2 1046 16 147 14 148 2 150 2 151 4 153 2 154 4 459 4 458 2 156 2 1060 6 1062 2 1064 12 1065 2 465 10 467 4 1075 4 770 2 1076 4 1078 2 1079 2 1081 4 475 4 477 2 771 16 775 2 1088 2 1090 10 778 2 779 6 780 2 486 2 487 4 1095 2 1097 46 490 2 498 2 499 2 787 10 185 20 186 2 1108 14 190 2 793 4 191 3 194 2 196 6 198 2 805 4 504 24 1117 4 1118 2 213 2 1130 4 519 6 818 2 1133 2 525 1 216 2 823 18 827 2 826 2 218 12 219 2 1144 4 222 2 223 4 224 24 1150 2 1149 3 1154 4 1156 2 1157 2 1158 2 539 2 1163 4 542 2 541 2 543 2 241 14 853 2 1170 2 1169 2 855 2 856 10 1174 2 1176 4 249 2 1181 6 252 2 1186 2 1187 4 254 2 255 16 1188 14 559 2 258 2 561 2 562 2 563 2 260 2 1191 2 1190 2 564 2 570 6 572 2 1200 2 889 2 1210 2 1209 2 896 2 577 6 897 2 583 2 288 6 584 12 903 2 296 2 297 2 908 2 1221 2 591 2 304 16 305 2 306 15 1225 2 310 2 918 4 316 8 1237 2 922 2 318 16 605 6 1240 2 323 2 1242 2 325 2 924 2 926 2 608 2 927 4 1246 2 611 2 616 2 1250 4 930 2 931 14 
132 2 1090 4 778 2 213 2 137 2 50 2 8 2 1097 6 145 2 1188 2 147 2 218 2 260 2 1149 2 19 2 64 2 419 2 465 2 121 2 76 2 395 2 1209 2 203 2 477 2 
132 2 1090 4 778 2 213 2 137 2 50 2 8 2 1097 6 145 2 1188 2 147 2 218 2 260 2 1149 2 19 2 64 2 419 2 465 2 121 2 76 2 395 2 1209 2 203 2 477 2 
132 2 1090 4 778 2 213 2 137 2 50 2 8 2 1097 6 145 2 1188 2 147 2 218 2 260 2 1149 2 19 2 64 2 419 2 465 2 121 2 76 2 395 2 1209 2 203 2 477 2 
364 2 1002 6 132 2 437 3 213 2 50 2 137 3 51 2 372 2 937 2 622 4 487 2 1181 4 8 4 627 2 942 2 702 2 377 2 1102 4 1015 4 306 5 1192 2 151 2 597 2 793 2 64 10 154 2 837 4 1154 2 316 2 884 4 1159 4 649 2 728 3 199 3 121 3 467 2 733 2 205 2 899 2 
364 2 1002 6 132 2 437 2 213 2 779 2 50 2 137 2 51 2 372 2 937 2 622 4 487 2 1181 4 8 4 627 2 942 2 1099 2 702 2 377 2 1102 4 1015 4 306 4 1144 2 1192 2 151 2 597 2 793 2 64 10 154 2 837 4 1154 2 316 2 884 4 1159 4 649 2 728 2 199 2 121 2 467 2 733 2 205 2 899 2 
364 2 1002 6 132 2 437 2 213 2 779 2 50 2 137 2 51 2 372 2 937 2 622 4 487 2 1181 4 8 4 627 2 942 2 1099 2 702 2 377 2 1102 4 1015 4 306 4 1144 2 1192 2 151 2 597 2 793 2 64 10 154 2 837 4 1154 2 316 2 884 4 1159 4 649 2 728 2 199 2 121 2 467 2 733 2 205 2 899 2 
364 2 1002 6 132 2 437 2 213 2 779 2 50 2 137 2 51 2 372 2 937 2 622 4 487 2 1181 4 8 4 627 2 942 2 1099 2 702 2 377 2 1102 4 1015 4 306 4 1144 2 1192 2 151 2 597 2 793 2 64 10 154 2 837 4 1154 2 316 2 884 4 1159 4 649 2 728 2 199 2 121 2 467 2 733 2 205 2 899 2 
364 2 1002 6 132 2 437 2 213 2 779 4 50 2 137 2 51 2 372 2 937 2 622 4 487 2 1181 4 8 4 627 2 942 2 1099 4 702 2 377 2 1102 4 1015 4 306 4 1144 4 1192 2 151 2 597 2 793 2 64 10 154 2 837 4 1154 2 316 2 884 4 1159 4 649 2 728 2 199 2 121 2 467 2 733 2 205 2 899 2 
834 2 672 2 114 2 572 2 444 2 363 2 
0 2 663 2 202 2 615 2 1193 2 363 2 931 2 
1092 1 1129 2 522 1 8 8 624 2 589 2 972 2 1145 2 62 2 1049 2 713 2 791 2 64 10 794 2 457 2 839 2 797 2 1238 2 1115 1 726 2 466 1 1164 2 39 2 617 2 1166 2 689 1 
741 2 364 2 244 2 51 6 779 5 860 2 622 12 487 6 1181 4 8 6 588 4 489 2 627 6 1099 2 306 16 1144 2 151 6 225 2 313 2 64 6 316 6 1154 6 605 4 649 6 924 2 686 2 237 2 1081 2 434 2 81 2 
64 1 83 2 693 2 569 4 646 2 1159 2 1182 2 8 1 324 2 234 2 253 2 783 2 144 2 848 2 1102 2 1015 2 331 6 261 1 
83 2 693 2 569 4 646 2 1159 2 1182 4 324 4 234 2 783 2 253 2 144 2 848 4 1102 2 1015 2 331 6 
64 1 83 2 693 2 569 4 646 2 1159 2 1182 8 8 1 324 8 234 2 783 8 253 2 144 6 848 8 1102 2 1015 2 331 10 261 1 
83 2 693 2 569 2 646 2 1159 2 1182 2 324 2 234 2 253 2 848 2 1102 2 1015 2 331 2 
408 1 8 2 725 2 200 2 744 1 665 2 448 2 64 2 240 2 
725 2 8 2 64 2 200 2 448 2 240 2 665 2 
725 2 8 2 64 2 200 2 448 2 240 2 665 2 
725 2 8 2 64 2 200 2 448 2 240 2 665 2 
366 2 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 
276 1 687 1 644 1 113 1 602 1 454 1 

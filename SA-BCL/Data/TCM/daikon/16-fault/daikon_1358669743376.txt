#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 945 (10,141) 747 (5,58,340,568,669,742,919) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 945 (10,141) 747 (5,58,340,568,669,742,919) 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 945 (10,141) 747 (5,58,340,568,669,742,919) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 815 663 456 695 416 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (278,614) 877 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 821 514 860 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 316 743 916 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 316 743 916 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I | CONSTANT | 21177 | 2 -> 1
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ProglangType:isPointerFileRep()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.Node:Node()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 9874 | if (x) -> if (!x)
daikon.Quant:intersection([I[I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(DD)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.ProglangType:isScalar()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:hashCode()I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:slice([III)[I | RETURN | 160908 | return null
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ModBitTracker:split(I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.ProglangType:isIntegral()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Debug:logDetail()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:ReadByte()C
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:arity()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:lte(II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(S[S)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:sameLength([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsEqual([II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:pow(II)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Debug:logOn()Z
daikon.PptSlice1:arity()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptName:isEnterPoint()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ValueTuple:isMissing(I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaCharStream:backup(I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltsGT([II)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Invariant:justified()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:ne(II)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.ValueTuple:size()I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:gcd(II)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern([J)[J
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eq(FF)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(II)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ModBitTracker:num_sets()I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[F)Z
daikon.PptSlice2:arity()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:isReverse([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.FormatTestCase:passes()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 8797 | = null
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.Quant:subsetOf([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:noDups([I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127003 | = null
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE:mod_positive(II)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
619 2 569 2 498 2 239 2 83 2 923 2 210 2 666 4 610 2 
40 2 636 2 0 6 348 2 227 2 813 6 266 2 630 2 196 6 473 2 220 2 
427 6 127 2 46 4 544 2 381 2 880 2 214 2 569 2 720 4 570 6 243 6 947 6 610 2 
919 2 889 2 945 2 60 2 747 2 10 2 
368 6 76 4 
392 2 
889 2 190 2 60 2 419 2 478 2 919 2 68 2 945 2 818 2 747 2 885 2 221 2 10 2 
889 8 58 4 262 6 43 5 736 4 542 4 337 4 568 4 838 2 620 2 945 12 931 6 796 2 141 4 747 8 475 14 10 8 
651 10 57 2 601 4 331 2 333 6 30 4 686 2 232 4 658 2 233 2 99 10 884 2 690 2 440 2 278 8 344 2 203 4 831 4 748 2 41 4 507 4 347 4 309 4 111 2 252 2 642 2 617 4 115 2 790 4 420 2 452 62 78 4 757 2 80 4 386 2 487 2 219 2 679 2 948 14 426 2 
901 2 391 2 392 2 93 2 94 2 336 2 744 2 504 2 180 2 870 2 
466 2 4 2 395 2 403 2 137 2 805 2 582 2 274 2 278 2 203 4 279 4 587 2 283 2 914 4 859 2 211 2 819 2 152 2 869 2 297 2 91 2 301 2 224 2 601 2 658 2 605 2 498 2 434 2 100 2 934 2 610 4 611 2 505 2 612 2 614 2 450 2 836 2 569 4 895 2 621 2 624 2 677 2 678 4 326 2 
58 4 262 6 60 2 736 6 5 4 542 6 684 2 742 2 337 6 340 8 931 6 141 6 747 14 475 19 10 14 610 4 937 6 889 14 43 8 13 2 791 6 919 2 568 4 945 20 569 4 120 2 
690 2 333 2 278 2 
413 2 531 2 845 2 350 10 494 2 614 2 114 2 883 2 370 2 755 2 101 2 607 2 924 2 126 22 
844 2 627 2 734 2 393 2 523 2 396 3 847 2 132 2 133 2 268 8 400 32 849 2 402 2 404 4 634 2 272 6 142 2 852 4 853 2 635 2 408 3 410 3 282 2 144 2 855 2 14 24 287 2 288 2 861 2 646 1 862 2 756 3 146 4 422 4 148 2 290 4 149 2 866 2 293 2 20 3 871 2 428 1 24 6 26 2 876 2 878 6 164 2 772 2 773 2 304 2 660 1 306 2 35 2 435 2 777 2 438 2 439 2 888 2 557 1 558 1 308 2 177 16 310 2 788 2 179 2 674 2 48 2 455 6 50 3 569 34 459 2 457 24 52 2 458 1 794 2 321 2 322 2 324 2 463 4 53 2 186 2 54 2 327 3 188 2 55 2 800 5 571 8 329 2 573 2 682 2 192 2 63 2 467 12 64 2 903 2 194 1 332 2 804 12 470 2 579 8 580 1 694 1 201 2 202 4 696 3 74 2 808 2 811 4 352 2 706 2 479 1 216 2 920 2 82 2 710 2 489 3 926 2 90 3 89 1 226 2 824 3 602 2 719 1 234 2 235 1 236 2 606 1 499 16 501 16 609 2 610 32 103 2 721 2 723 2 248 2 249 32 508 2 940 2 941 2 942 3 616 2 619 2 117 1 726 2 118 2 518 16 122 2 123 1 728 1 
708 2 
569 2 206 2 
569 4 656 2 585 2 
668 2 695 2 681 2 12 2 25 2 377 2 416 2 628 2 641 2 97 2 566 2 315 2 815 2 271 2 238 2 663 2 291 8 121 8 456 2 424 2 553 2 503 8 
116 1 727 2 198 2 441 2 
833 2 727 2 
517 2 727 2 877 2 130 2 425 2 278 2 502 2 
727 2 787 2 502 2 
863 2 727 2 502 2 
622 2 812 2 441 2 
727 2 502 2 
484 2 622 2 
727 2 575 2 
622 2 441 2 907 2 
451 2 826 2 441 2 
939 2 125 2 441 2 
401 2 169 2 441 2 
480 2 899 2 441 2 
491 2 622 2 
727 2 623 2 
437 2 826 2 
125 2 65 2 
401 2 572 2 
480 2 38 2 
774 2 622 2 
480 2 799 2 
401 2 657 2 
716 2 125 2 
826 2 705 2 
622 2 86 2 441 2 907 2 
622 2 86 2 441 2 907 2 73 2 
56 2 622 2 441 2 
407 2 622 2 441 2 
409 2 598 2 854 2 269 2 
281 2 22 2 814 2 511 2 513 4 165 2 339 2 135 4 453 2 909 2 371 2 776 2 775 2 151 2 405 2 797 2 680 2 126 6 
298 2 441 2 
877 2 75 2 278 2 670 2 
359 2 877 2 75 2 425 2 278 2 670 2 
517 2 727 2 877 2 278 2 502 2 72 2 
892 2 859 2 
498 2 161 2 877 2 278 2 
401 2 584 2 
480 2 486 2 
384 2 826 2 
515 2 125 2 
480 2 559 2 125 2 
718 2 480 2 125 2 
480 2 750 2 125 2 
480 2 246 2 125 2 
877 2 28 6 278 2 442 2 506 6 375 2 565 2 119 2 
622 2 70 2 
64 2 
626 2 400 6 849 2 404 2 272 2 852 4 142 2 282 2 144 6 637 2 417 2 858 2 862 2 421 2 146 4 422 4 148 2 290 2 866 2 24 4 655 2 158 4 26 2 876 2 878 2 430 4 433 2 547 2 435 2 556 2 177 6 308 2 785 2 674 2 48 2 455 6 569 26 322 2 463 4 324 2 54 2 329 2 573 2 467 8 903 2 332 2 470 2 804 8 580 4 579 2 74 2 811 2 352 2 483 2 216 2 926 2 595 2 713 2 226 2 229 2 602 2 719 2 610 26 103 2 245 2 721 2 248 2 249 4 508 2 509 2 940 2 616 2 619 2 118 2 726 4 123 2 
400 6 849 2 404 2 272 2 852 4 142 2 406 2 282 2 144 6 753 2 417 2 858 2 287 2 862 2 421 2 146 4 422 4 148 2 290 2 866 2 871 2 24 6 655 2 158 4 26 2 876 2 878 2 430 4 433 2 547 2 435 2 556 2 177 6 308 2 785 2 674 2 48 2 455 6 569 26 322 2 463 4 324 2 188 2 54 2 329 2 573 2 467 8 903 2 332 2 470 2 804 8 580 2 579 2 74 2 811 2 352 2 483 2 216 2 926 2 713 2 226 2 229 2 602 2 719 2 610 26 103 2 245 2 721 2 247 2 248 2 249 4 508 2 509 2 940 2 616 2 619 2 118 2 726 4 123 2 
314 2 
134 2 510 2 
625 2 0 6 801 2 735 8 802 4 525 2 196 6 526 2 906 2 335 2 688 2 908 4 270 8 473 4 583 2 852 2 636 2 348 2 532 2 813 6 476 4 477 2 422 2 148 2 150 2 866 2 423 2 81 4 220 4 488 2 760 2 222 2 872 10 299 2 599 2 876 2 27 2 432 2 881 2 549 2 780 2 936 4 610 6 722 2 176 2 832 2 890 4 248 2 940 2 378 2 313 2 943 2 616 2 567 2 837 2 675 2 455 4 569 12 184 2 322 2 
625 2 0 8 735 8 802 4 266 2 526 2 196 6 906 2 335 2 688 2 908 4 270 8 473 4 583 2 852 2 636 2 348 2 532 2 813 8 476 4 477 2 422 2 148 2 150 2 866 2 865 2 423 2 81 4 292 2 220 4 488 2 760 2 222 2 872 10 299 2 599 2 876 2 27 2 432 2 881 2 549 2 780 2 936 4 610 6 722 2 176 2 832 2 890 4 248 2 107 4 940 2 378 2 313 2 943 2 616 2 567 2 837 2 675 2 455 4 569 12 184 2 322 2 
722 2 625 2 299 2 802 4 813 2 943 2 526 2 196 2 432 2 335 2 688 2 473 2 583 2 81 4 184 2 220 2 780 2 936 2 
625 2 0 6 801 2 735 4 802 4 525 2 266 2 196 4 526 2 906 2 335 2 688 2 908 4 270 4 473 4 583 2 852 2 636 2 532 2 813 6 476 4 477 2 422 2 148 2 150 2 866 2 423 2 81 4 220 4 488 2 760 2 222 2 872 6 299 2 599 2 876 2 27 2 432 2 881 2 549 2 780 2 936 4 610 6 722 2 176 2 832 2 890 4 248 2 940 2 378 2 313 2 943 2 616 2 567 2 837 2 675 2 455 4 569 12 184 2 322 2 
625 2 0 6 801 2 735 4 802 4 525 2 196 6 526 2 906 2 335 2 688 2 908 4 270 4 473 4 583 2 852 2 636 2 532 2 813 4 476 4 477 2 422 2 148 2 150 2 866 2 423 2 81 4 220 4 488 2 760 2 222 2 872 6 299 2 599 2 227 2 876 2 27 2 432 2 881 2 549 2 780 2 936 4 610 6 722 2 176 2 832 2 890 4 248 2 940 2 378 2 313 2 943 2 616 2 567 2 837 2 675 2 455 4 569 12 184 2 322 2 
625 2 0 6 801 2 735 4 802 4 525 2 196 6 526 2 906 2 335 2 688 2 908 4 270 8 473 4 583 2 852 2 636 2 348 2 532 2 813 6 476 4 477 2 422 2 148 2 150 2 866 2 423 2 81 4 220 4 488 2 760 2 222 2 872 6 299 2 599 2 876 2 27 2 432 2 881 2 549 2 780 2 936 4 610 6 722 2 176 2 832 2 890 4 248 2 940 2 378 2 313 2 943 2 616 2 567 2 837 2 675 2 455 4 569 12 184 2 322 2 
625 2 0 8 801 2 735 8 802 4 525 2 196 8 526 2 906 2 335 2 688 2 908 4 270 8 473 4 583 2 852 2 636 2 348 2 532 2 813 6 476 4 477 2 422 2 148 2 150 2 866 2 423 2 81 4 220 4 488 2 760 2 222 2 872 10 299 2 599 2 227 2 876 2 27 2 432 2 881 2 549 2 780 2 936 4 610 6 722 2 176 2 832 2 890 4 248 2 940 2 378 2 313 2 943 2 616 2 567 2 837 2 675 2 455 4 569 12 184 2 322 2 
625 2 0 6 801 2 735 8 802 4 525 2 196 6 526 2 906 2 335 2 688 2 908 4 270 8 473 4 583 2 852 2 636 2 348 2 532 2 813 6 476 4 477 2 422 2 148 2 150 2 866 2 423 2 81 4 220 4 488 2 760 2 222 2 872 10 299 2 599 2 876 2 27 2 432 2 881 2 549 2 780 2 936 4 610 6 722 2 176 2 832 2 890 4 248 2 940 2 378 2 313 2 943 2 616 2 567 2 837 2 675 2 455 4 569 12 184 2 322 2 
0 12 525 2 526 2 270 2 272 2 277 2 529 6 749 2 282 2 532 2 290 2 535 2 760 2 299 2 540 6 24 6 543 1 27 2 771 6 549 2 780 2 781 1 308 2 313 2 563 1 567 2 792 1 48 2 569 46 322 2 573 2 802 4 62 2 332 2 335 2 804 4 579 2 71 2 583 2 810 1 811 2 813 4 352 2 357 2 592 2 81 4 84 1 361 2 822 1 599 2 602 2 95 2 603 6 610 24 103 2 832 2 109 10 108 2 615 2 378 2 616 2 618 4 619 2 837 4 118 2 840 2 124 2 388 2 625 2 399 4 400 8 136 2 404 2 852 4 636 4 144 6 638 6 418 7 643 6 862 2 422 4 146 4 148 2 150 2 866 2 423 2 871 2 872 2 652 2 655 2 875 2 876 2 656 6 878 2 430 4 432 2 433 2 881 4 166 2 659 2 167 6 435 2 667 2 443 6 176 2 447 1 890 4 177 6 448 6 449 2 891 6 178 7 674 2 675 2 455 6 454 2 461 2 184 2 676 6 463 4 188 2 467 4 196 8 906 2 688 2 468 2 908 6 470 2 473 4 474 2 910 1 204 2 206 6 476 8 477 2 482 8 708 6 483 2 216 2 922 6 220 4 488 2 925 2 926 2 222 2 714 2 227 4 715 6 237 2 933 2 936 4 722 2 248 2 249 2 508 12 938 2 509 4 940 2 943 2 256 2 
625 2 0 12 525 2 399 4 526 2 400 8 136 2 270 6 272 2 404 4 852 4 277 2 529 6 749 2 636 4 282 2 144 6 638 6 532 2 643 6 862 2 146 4 422 4 148 2 535 2 150 2 290 4 866 2 423 2 760 2 871 2 872 2 652 2 540 6 299 2 655 2 24 6 875 2 768 2 656 6 876 2 27 2 878 2 430 4 771 6 433 2 432 2 881 4 659 2 166 2 167 6 549 2 435 2 780 2 443 6 667 2 176 2 448 6 308 2 177 6 890 4 449 2 891 6 313 2 567 2 675 2 674 2 48 2 454 2 455 6 569 48 461 2 676 6 184 2 322 2 463 4 188 2 573 2 62 2 802 4 467 8 332 2 196 8 906 2 335 2 468 2 688 2 908 6 471 2 804 8 470 2 473 4 579 2 71 2 583 2 474 2 204 2 348 4 206 6 811 4 813 8 476 8 352 2 477 2 357 2 592 2 708 6 482 8 483 2 216 2 922 6 81 4 220 4 361 2 488 2 925 2 222 2 926 2 714 2 599 2 715 6 602 2 95 2 603 6 237 2 933 2 936 4 610 26 103 2 722 2 832 2 248 2 249 2 938 2 108 2 109 10 508 12 615 2 509 4 940 2 378 2 943 2 616 2 618 4 837 4 619 2 726 2 118 2 256 2 840 2 124 2 388 2 
625 2 0 12 735 4 525 2 399 4 526 2 400 8 136 2 270 6 272 2 404 4 852 4 277 2 529 6 749 2 636 4 282 2 144 6 638 6 532 2 643 6 862 2 146 4 422 4 148 2 535 2 150 2 290 4 866 2 423 2 760 2 871 2 872 6 652 2 540 6 299 2 655 2 24 6 875 2 768 2 656 6 876 2 27 2 878 2 430 4 771 6 433 2 432 2 881 4 659 2 166 2 167 6 549 2 435 2 780 2 443 6 667 2 176 2 448 6 308 2 177 6 890 4 449 2 891 6 313 2 567 2 675 2 674 2 48 2 454 2 455 6 569 48 461 2 676 6 184 2 322 2 463 4 188 2 573 2 62 2 802 4 467 8 332 2 196 8 906 2 335 2 468 2 688 2 908 6 471 2 804 8 470 2 473 4 579 2 71 2 583 2 474 2 204 2 348 4 206 6 811 4 813 8 476 8 352 2 477 2 357 2 592 2 708 6 482 8 483 2 216 2 922 6 81 4 220 4 361 2 488 2 925 2 926 2 222 2 714 2 599 2 715 6 602 2 95 2 603 6 237 2 933 2 936 4 610 26 103 2 722 2 832 2 248 2 249 2 938 2 108 2 109 10 508 12 615 2 509 4 940 2 378 2 943 2 616 2 618 4 837 4 619 2 726 2 118 2 256 2 840 2 124 2 388 2 
0 16 735 4 264 6 525 2 266 2 526 2 270 6 272 4 277 2 529 12 749 2 282 2 532 2 284 6 290 4 535 2 760 2 299 2 540 6 24 6 768 2 27 2 771 6 549 2 780 2 308 2 313 2 567 2 48 2 569 52 322 2 573 2 62 2 802 4 574 2 332 2 335 2 804 10 579 4 71 2 583 2 348 4 811 4 813 10 352 2 354 2 357 2 592 2 81 4 820 6 361 2 599 2 367 6 602 2 95 2 603 6 610 24 103 2 830 2 832 2 108 2 109 8 615 2 378 2 616 2 618 4 619 2 837 4 118 2 840 2 124 2 387 6 388 2 625 2 399 4 400 12 136 2 404 4 852 4 636 4 144 8 638 6 643 12 862 2 422 4 146 4 148 2 150 2 866 2 423 2 867 6 871 2 872 6 155 2 156 2 655 2 875 2 876 2 656 12 878 4 430 6 432 2 433 4 881 4 166 2 659 2 167 6 435 2 667 2 443 6 176 2 890 4 177 8 448 12 449 2 891 6 674 2 675 2 455 6 454 2 461 2 184 2 676 6 463 4 188 2 467 10 193 2 904 6 196 10 906 2 688 2 468 2 908 6 471 2 470 2 473 4 692 6 474 2 204 2 206 12 476 8 477 2 482 8 708 12 483 2 216 2 217 6 922 6 220 4 488 2 925 2 222 2 926 2 927 2 714 2 227 2 715 6 237 2 933 2 936 4 722 2 248 2 249 4 508 10 938 2 509 4 940 2 943 2 726 2 516 2 256 2 
872 4 0 4 299 2 735 4 525 2 802 2 27 2 526 2 196 6 432 2 688 2 908 2 270 6 549 2 473 4 583 2 780 2 636 2 176 2 890 2 832 2 348 2 532 2 813 6 476 2 477 2 567 2 569 4 423 2 81 2 184 2 220 4 488 2 760 2 222 2 
0 4 525 2 526 2 400 8 270 6 272 3 852 4 636 2 282 2 144 6 532 2 15 2 862 2 422 4 146 4 148 2 866 2 423 2 760 2 295 3 871 2 872 2 652 2 299 2 24 6 655 2 876 2 27 2 878 3 430 4 432 2 773 2 549 2 435 2 780 2 307 2 176 2 890 2 177 6 44 2 179 2 567 2 674 2 48 2 455 6 569 28 184 2 322 2 463 4 188 2 573 2 802 2 64 2 332 2 196 6 688 2 908 2 470 2 473 4 583 2 348 2 813 6 476 2 352 2 477 2 483 2 216 2 81 2 220 4 488 2 926 2 222 2 365 2 602 2 496 2 236 2 610 24 103 2 248 2 832 2 249 3 508 4 109 2 509 2 940 2 378 2 616 2 619 2 118 2 
532 2 330 2 760 2 
532 2 330 2 760 2 
0 16 735 4 266 4 128 2 399 2 526 2 400 2 270 6 404 4 852 4 143 2 636 4 144 2 415 2 532 6 862 2 146 4 422 4 148 2 150 2 290 4 866 2 19 2 760 4 871 2 761 2 872 6 24 6 655 2 876 2 431 2 771 2 881 4 32 2 435 2 171 2 780 4 308 4 177 2 890 2 561 2 893 2 313 2 567 2 675 2 674 2 182 2 48 2 455 6 569 24 322 2 463 4 188 2 573 2 802 2 467 4 330 2 332 2 196 12 335 2 687 2 688 2 908 4 804 4 470 2 473 4 580 2 348 4 811 4 813 12 352 2 476 4 483 2 215 2 593 4 216 2 81 2 220 4 488 2 926 2 714 2 493 2 713 4 227 4 602 2 497 2 608 2 936 4 610 16 103 2 722 2 248 2 249 2 109 2 508 4 509 6 940 2 835 4 616 2 618 2 837 2 619 2 118 2 840 2 124 2 260 2 
508 2 109 2 415 2 62 2 510 2 943 2 357 2 771 2 618 2 182 2 864 2 305 2 569 4 19 2 322 2 174 2 610 2 
521 2 0 16 735 4 266 4 128 2 399 2 526 2 400 2 270 6 404 4 852 4 143 2 636 4 144 2 415 2 532 6 862 2 146 4 422 4 148 2 150 2 290 4 866 2 19 2 760 4 871 2 761 4 872 6 24 6 655 2 876 2 771 2 881 4 32 2 435 2 171 2 780 4 308 4 890 2 177 2 561 2 893 2 313 2 567 2 894 2 675 2 674 2 182 2 48 2 455 6 569 24 795 2 322 2 463 4 188 2 573 2 802 2 467 4 330 2 332 2 196 12 335 2 687 2 688 2 908 4 804 4 470 2 473 4 580 1 348 4 915 2 811 4 813 12 476 4 352 2 483 2 593 4 216 2 81 2 220 4 488 2 926 2 714 2 713 4 599 2 227 4 602 2 497 2 936 4 610 16 103 2 722 2 248 2 249 4 613 2 508 2 509 6 940 2 835 4 616 2 837 4 619 2 118 2 840 2 124 2 260 2 
0 16 735 4 266 4 128 2 399 2 526 2 400 2 270 6 404 4 852 4 143 2 636 4 144 2 415 2 532 6 862 2 146 4 422 4 148 2 150 2 290 4 866 2 19 2 760 4 871 2 761 2 872 6 24 6 655 2 876 2 771 2 881 4 32 2 435 2 171 2 780 4 308 4 177 2 890 2 561 2 893 2 313 2 567 2 675 2 674 2 182 2 48 2 455 6 569 24 322 2 463 4 325 2 188 2 573 2 802 2 467 4 330 2 332 2 196 12 335 2 687 2 469 2 688 2 908 4 804 4 470 2 473 4 580 1 809 2 698 2 348 4 811 4 813 12 352 2 476 4 483 2 593 4 216 2 81 2 220 4 488 2 926 2 714 2 713 4 599 2 227 4 602 2 497 2 936 4 610 16 103 2 722 2 248 2 249 2 109 2 508 4 509 6 940 2 835 4 616 2 253 2 618 2 837 4 619 2 118 2 840 2 124 2 260 2 
261 3 262 6 2 2 3 4 732 2 733 2 524 2 736 4 738 12 739 2 740 2 6 2 741 2 742 2 527 2 7 4 273 2 272 16 745 2 275 5 747 8 528 2 10 8 280 4 282 2 530 2 751 14 752 12 285 2 15 2 533 2 534 2 536 2 18 2 759 2 295 2 21 2 296 2 763 2 762 4 300 2 24 34 765 2 766 2 767 2 769 4 541 2 542 4 770 2 302 6 29 2 546 14 30 2 547 2 303 2 33 2 34 2 550 2 36 2 551 2 552 2 779 2 554 4 555 2 556 2 782 4 783 2 308 4 784 4 42 4 311 2 560 2 785 2 43 6 44 2 562 2 45 4 49 2 48 6 569 64 319 14 320 2 793 2 798 2 322 2 323 6 58 4 328 2 61 2 573 2 334 4 332 6 66 2 337 4 338 2 576 4 804 26 69 2 578 2 579 20 580 2 341 2 586 2 345 2 349 2 589 2 351 2 352 4 591 2 354 2 78 2 816 4 817 2 360 16 594 4 361 2 87 2 596 16 363 2 821 2 88 4 823 16 365 2 602 2 604 2 827 2 829 2 372 2 610 52 104 2 103 2 830 2 373 2 831 2 834 2 376 2 615 4 616 2 380 2 617 2 619 4 118 4 383 2 839 14 385 2 841 2 123 2 842 4 394 4 629 2 129 14 398 3 848 2 400 28 632 2 633 2 850 2 138 3 139 2 851 4 140 2 141 4 852 4 411 4 144 14 414 2 856 2 640 2 417 14 858 2 860 2 421 2 862 2 146 20 422 4 148 2 866 2 648 10 153 6 871 4 154 2 873 2 155 2 156 2 874 24 654 4 655 2 162 2 876 2 879 2 878 19 430 12 163 2 433 46 166 2 661 2 436 2 435 2 172 2 665 6 173 2 444 2 889 8 446 3 445 2 177 14 669 4 672 12 674 2 181 2 454 2 455 6 897 2 896 4 183 12 460 2 461 2 185 1 462 10 463 18 900 2 187 2 188 4 189 2 191 2 902 2 193 2 467 24 684 4 197 2 685 2 468 2 689 2 470 2 472 3 475 15 911 2 200 2 912 2 204 2 697 2 205 2 702 2 207 12 703 2 208 20 209 2 917 2 481 2 707 2 216 2 921 10 218 2 926 2 927 2 490 10 712 6 928 2 228 16 495 2 229 2 496 2 230 2 231 2 719 2 240 2 932 2 501 4 935 2 937 4 245 2 507 2 248 2 249 19 250 2 508 2 509 2 724 4 940 2 512 2 514 2 254 4 255 4 516 2 944 2 945 12 257 4 518 4 519 2 259 10 
490 2 261 2 300 2 766 2 878 2 430 2 163 2 433 6 400 2 632 2 272 2 745 2 528 2 610 2 282 2 177 2 144 2 249 2 205 2 47 2 944 2 569 2 462 2 259 4 
490 2 261 2 300 2 766 2 878 2 430 2 163 2 433 6 400 2 632 2 272 2 745 2 528 2 610 2 282 2 177 2 144 2 249 2 205 2 47 2 944 2 569 2 462 2 259 4 
490 2 261 2 300 2 766 2 878 2 430 2 163 2 433 6 400 2 632 2 272 2 745 2 528 2 610 2 282 2 177 2 144 2 249 2 205 2 47 2 944 2 569 2 462 2 259 4 
23 2 712 6 59 4 736 2 160 2 542 2 878 3 398 3 163 2 631 2 717 2 337 2 400 2 138 3 851 2 581 4 691 2 501 2 693 4 141 2 475 5 747 2 10 2 610 4 105 3 889 2 282 2 249 3 588 2 669 2 145 2 16 2 945 4 569 10 79 4 51 2 518 2 898 2 537 4 153 4 
597 2 23 2 712 6 59 4 736 2 160 2 542 2 878 2 398 2 163 2 631 2 717 2 337 2 400 2 138 2 851 2 581 4 691 2 501 2 693 4 141 2 475 4 747 2 10 2 937 2 610 4 105 2 889 2 282 2 249 2 588 2 43 2 669 2 145 2 16 2 945 4 569 10 79 4 51 2 518 2 898 2 537 4 153 4 
597 2 23 2 712 6 59 4 736 2 160 2 542 2 878 2 398 2 163 2 631 2 717 2 337 2 400 2 138 2 851 2 581 4 691 2 501 2 693 4 141 2 475 4 747 2 10 2 937 2 610 4 105 2 889 2 282 2 249 2 588 2 43 2 669 2 145 2 16 2 945 4 569 10 79 4 51 2 518 2 898 2 537 4 153 4 
597 2 23 2 712 6 59 4 736 2 160 2 542 2 878 2 398 2 163 2 631 2 717 2 337 2 400 2 138 2 851 2 581 4 691 2 501 2 693 4 141 2 475 4 747 2 10 2 937 2 610 4 105 2 889 2 282 2 249 2 588 2 43 2 669 2 145 2 16 2 945 4 569 10 79 4 51 2 518 2 898 2 537 4 153 4 
597 4 23 2 712 6 59 4 736 2 160 2 542 2 878 2 398 2 163 2 631 2 717 2 337 2 400 2 138 2 851 2 581 4 691 2 501 2 693 4 141 2 475 4 747 2 10 2 937 4 610 4 105 2 889 2 282 2 249 2 588 2 43 4 669 2 145 2 16 2 945 4 569 10 79 4 51 2 518 2 898 2 537 4 153 4 
429 2 522 2 930 2 289 2 551 2 37 2 
913 2 17 2 709 2 37 2 828 2 417 2 905 2 
465 2 539 2 159 2 764 2 737 2 876 2 369 1 686 1 548 2 168 2 8 2 746 2 242 2 610 8 374 2 412 1 644 2 564 2 643 2 77 2 485 2 569 10 758 1 487 1 729 2 650 2 
597 2 58 2 223 2 262 4 263 2 733 2 736 6 5 2 542 6 848 2 337 6 340 2 342 2 475 15 747 6 141 6 10 6 610 6 937 3 587 2 889 6 669 2 43 5 450 2 791 4 673 2 569 6 945 12 120 1 816 2 153 4 
464 2 389 2 1 2 346 7 379 2 846 2 131 2 789 2 98 4 882 1 569 1 79 2 258 2 581 2 102 2 693 2 868 2 610 1 
464 2 389 4 1 2 346 6 846 2 379 2 131 4 789 2 98 4 79 2 258 4 581 2 102 2 693 2 868 2 
464 2 389 8 1 2 346 10 846 8 379 2 131 8 789 6 98 4 882 1 569 1 79 2 258 8 581 2 102 2 693 2 868 2 610 1 
464 2 389 2 1 2 346 2 379 2 131 2 98 2 79 2 258 2 581 2 102 2 693 2 868 2 
730 2 2 2 524 2 394 4 6 2 741 2 527 1 743 2 633 2 139 2 273 2 275 3 280 4 414 2 751 14 640 2 286 2 534 2 146 18 18 2 871 4 296 2 873 2 762 5 763 2 653 1 24 32 767 1 769 4 29 2 545 2 303 2 33 2 661 2 436 2 36 2 172 2 779 2 173 2 554 4 444 2 783 2 782 4 311 2 786 2 562 2 316 2 48 6 569 38 896 4 897 2 460 2 798 2 463 16 188 4 334 4 332 6 197 2 66 1 685 2 804 4 912 2 351 2 916 2 589 2 352 4 208 10 703 2 591 2 823 2 88 4 928 2 228 2 230 2 231 2 932 2 829 2 610 34 104 2 376 2 725 2 255 4 254 4 841 2 519 2 
188 2 390 2 730 2 2 2 731 2 394 2 397 2 6 2 332 2 197 2 267 2 803 2 67 2 743 2 804 38 580 2 139 2 273 2 806 2 276 2 343 2 807 2 280 4 699 2 700 4 701 2 639 2 916 2 751 6 207 6 352 2 857 2 704 2 591 2 353 2 754 2 918 2 212 2 213 2 146 20 358 2 147 2 647 2 85 2 294 4 649 2 362 2 871 2 296 2 762 2 157 2 492 2 364 2 88 4 92 4 24 44 600 2 366 2 929 2 31 2 303 2 241 2 886 2 39 2 244 2 887 2 173 2 175 2 610 44 104 2 444 4 106 2 782 2 783 2 376 2 250 4 251 2 312 2 112 2 562 2 316 2 254 6 317 2 318 2 48 2 569 46 841 2 896 4 460 2 946 2 843 2 463 20 
730 2 2 2 265 8 524 2 394 6 741 2 527 2 743 2 633 2 139 2 9 2 276 6 280 4 11 2 751 10 286 2 754 6 534 2 146 20 147 2 18 4 649 2 871 6 296 2 762 6 873 2 24 40 769 4 33 2 662 8 36 2 436 2 778 2 172 2 779 2 444 2 554 6 782 4 783 2 311 2 786 2 316 2 671 2 48 4 569 44 896 4 897 2 460 2 798 2 463 18 188 6 683 2 195 2 332 4 334 6 197 4 804 14 577 2 806 2 916 2 351 2 589 2 352 2 208 6 590 2 356 2 355 8 711 2 88 4 928 2 225 2 96 2 230 2 231 2 932 2 500 2 829 2 610 40 104 2 106 6 110 2 255 2 841 2 519 2 520 2 
188 10 730 2 2 2 394 2 6 4 332 2 197 2 66 2 685 2 527 6 743 2 804 14 139 2 580 2 273 4 199 2 275 2 280 6 916 2 751 8 352 2 640 4 703 2 208 10 591 4 645 2 146 14 358 2 147 2 538 2 871 10 296 2 762 2 823 10 88 6 228 2 24 38 767 2 545 2 303 4 825 2 170 2 664 4 173 4 610 26 104 2 444 2 783 2 782 2 376 4 112 2 113 2 725 2 316 2 254 6 318 2 48 2 569 28 896 6 841 2 460 2 463 14 
382 2 

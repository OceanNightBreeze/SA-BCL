#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (701,877) (701,877) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 227 347 98 479 536 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V ERROR java.lang.NullPointerException 772 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 320 (461,491) 423 (147,361) (461,491) 822 (147,361) 566 860 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 320 (461,491) 423 (147,361) (461,491) 822 (147,361) 566 860 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 320 (461,491) 423 (147,361) (461,491) 822 (147,361) 566 860 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 320 (461,491) 423 (147,361) (461,491) 822 (147,361) 566 860 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 31 722 837 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (83,578) (83,578) 552 312 773 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 286 773 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (83,578) (83,578) 552 312 773 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ProglangType:isFloat()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:readChar()C
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([J)[J
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptSlice2:arity()I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE:negate(I)I
jtb.JavaCharStream:FillBuff()V
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:gte(II)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(J[J)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptName:isEnterPoint()Z
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 62554 | return null
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C | CONSTANT | 4375 | 0 -> 1
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.ModBitTracker:num_samples()I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:union([I[I)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String; | OPERATOR | 57093 | < -> >
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Debug:logDetail()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:gcd([I)I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:isScalar()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.Node:Node()V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:logOn()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ValueTuple:size()I
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:subsetOf([J[J)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61501 | = null
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 266434 | = null
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:noDups([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern:intern([D)[D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.InvariantFormatTester:execute()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eq(II)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gt(II)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ModBitTracker:num_sets()I
daikon.Quant:eq(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z | CONDITION | 156037 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
578 2 190 2 833 2 238 2 102 2 686 2 83 2 84 2 188 4 
126 2 585 2 49 6 472 6 872 2 667 6 640 2 93 2 859 2 476 2 646 2 
620 2 0 2 398 4 429 2 150 4 315 6 578 2 447 6 522 2 288 6 42 2 746 6 83 2 
140 10 441 16 698 8 260 2 325 4 69 6 149 4 795 4 71 26 192 10 218 10 506 2 599 2 509 8 660 16 919 8 16 8 245 12 52 2 163 16 201 2 804 6 610 4 578 6 433 2 62 2 346 10 83 6 113 29 293 10 
877 4 701 4 
621 2 
648 2 467 2 867 2 817 2 67 4 821 2 595 2 765 4 194 2 11 2 600 2 770 2 484 2 889 2 490 2 493 2 897 2 494 2 670 2 83 4 206 2 789 2 673 2 560 2 674 2 148 2 36 2 565 2 269 4 683 2 846 2 739 2 453 2 740 2 396 2 102 2 52 2 400 4 742 2 578 4 172 2 642 2 232 2 695 2 
140 6 441 32 181 4 237 2 698 18 816 2 904 6 69 4 795 2 593 6 192 16 71 48 218 16 94 4 660 32 919 6 920 2 512 4 103 6 802 4 245 22 549 2 19 6 164 4 163 32 690 6 890 4 576 6 201 2 804 4 578 4 928 4 58 2 346 16 460 8 83 4 933 2 113 54 293 16 
229 2 656 2 673 2 
308 2 196 2 379 2 813 2 742 2 891 10 668 2 228 22 831 2 630 2 289 2 124 2 555 2 64 2 
140 4 441 2 698 2 470 2 758 2 794 2 502 2 795 2 192 2 71 4 218 2 660 2 397 2 245 2 161 2 163 2 282 2 804 2 346 2 723 2 438 2 113 6 293 2 
275 2 441 8 181 4 512 4 245 4 163 8 904 6 576 6 610 2 35 2 71 12 192 4 218 4 346 4 660 8 113 16 293 4 
529 2 812 2 866 2 865 2 587 2 259 4 144 2 627 14 446 2 36 4 90 4 823 4 656 6 303 4 8 2 658 62 269 4 155 2 682 4 636 4 276 2 571 2 158 2 607 4 886 2 18 2 279 4 574 2 855 4 743 10 131 2 229 2 106 2 371 2 60 4 895 2 135 10 136 4 789 2 673 8 
621 2 533 2 510 2 48 2 55 2 892 2 202 2 175 2 179 2 374 2 
584 2 811 2 466 2 234 1 235 1 818 2 820 2 589 2 239 1 704 2 703 2 473 2 592 2 705 2 707 4 596 4 709 2 123 32 477 8 712 2 360 1 829 2 244 1 605 2 483 1 718 2 21 3 720 2 24 3 833 2 834 2 370 2 615 2 252 2 492 2 725 2 619 2 726 24 28 2 840 1 143 2 624 2 500 2 32 8 33 3 263 2 387 2 388 1 37 2 845 4 505 1 40 1 389 2 390 2 735 2 394 2 849 2 278 2 51 4 162 2 854 2 518 1 56 2 290 16 291 4 61 3 63 16 177 2 525 4 409 2 294 2 410 3 869 2 182 16 297 2 68 3 761 2 300 2 412 2 70 2 874 32 539 3 72 2 73 2 766 24 878 16 305 2 306 2 307 2 659 2 417 1 545 3 309 2 420 3 666 2 422 6 548 2 80 1 427 2 431 2 893 3 203 2 318 2 204 2 205 2 782 2 783 2 896 1 784 12 83 32 208 2 556 6 671 2 787 2 85 2 209 1 902 2 86 2 903 2 88 2 213 2 562 2 443 1 89 2 676 6 331 2 912 5 451 2 679 4 916 4 568 2 336 6 455 2 222 3 685 1 456 2 340 12 104 2 343 2 578 34 927 2 579 8 930 2 931 2 108 2 345 2 582 2 696 3 114 2 
578 2 257 2 
570 2 578 4 247 2 
918 2 
159 2 442 2 87 2 352 2 499 2 907 8 54 8 536 2 227 2 911 8 540 2 251 2 836 2 121 2 798 2 391 2 932 2 98 2 347 2 880 2 479 2 637 2 
564 2 503 2 530 1 887 2 
59 2 887 2 
236 2 142 2 174 2 887 2 366 2 149 2 673 2 
236 2 887 2 426 2 
663 2 236 2 887 2 
564 2 929 2 
236 2 887 2 
537 2 
868 2 887 2 
564 2 567 2 110 2 
564 2 173 2 602 2 
899 2 564 2 125 2 
564 2 212 2 654 2 
564 2 223 2 882 2 
647 2 110 2 
375 2 887 2 
173 2 888 2 
899 2 5 2 
815 2 654 2 
611 2 223 2 
97 2 110 2 
900 2 223 2 
176 2 654 2 
899 2 921 2 
641 2 173 2 
564 2 567 2 110 2 46 2 
564 2 567 2 45 2 110 2 46 2 
564 2 604 2 110 2 
564 2 764 2 110 2 
151 2 772 2 
142 2 853 2 128 2 673 2 
454 2 142 2 174 2 853 2 128 2 673 2 
236 2 142 2 887 2 149 2 445 2 673 2 
867 2 797 2 
142 2 650 2 149 2 673 2 
716 2 654 2 
223 2 351 2 
324 2 173 2 
899 2 885 2 
899 2 223 2 152 2 
899 2 780 2 223 2 
899 2 223 2 95 2 
899 2 223 2 304 2 
791 2 142 2 727 6 677 2 800 6 363 2 405 2 673 2 
30 2 110 2 
662 2 638 2 664 2 337 2 801 2 469 2 687 4 199 2 262 2 368 2 228 6 909 4 169 2 875 2 357 2 459 2 271 2 751 2 
564 2 906 2 
927 2 
589 2 820 2 703 2 239 4 474 2 707 4 123 6 15 2 605 6 718 2 833 2 252 2 615 2 619 2 143 2 624 2 387 2 632 2 37 2 845 4 39 2 389 2 732 2 735 2 849 2 737 4 847 2 278 2 51 2 518 2 639 2 56 2 290 6 291 2 525 4 177 2 409 2 294 2 761 2 300 2 538 2 70 2 301 2 874 4 191 2 305 2 879 2 417 2 883 2 197 2 309 2 311 2 665 2 422 6 666 2 774 2 205 2 435 4 782 2 83 26 784 8 556 4 787 2 85 2 902 2 676 2 331 2 451 2 679 4 916 2 336 2 340 8 343 2 578 26 579 2 108 4 
589 2 820 2 703 2 239 2 474 2 707 4 123 6 15 2 605 6 718 2 133 2 833 2 370 2 252 2 615 2 619 2 143 2 624 2 387 2 37 2 845 4 39 2 389 2 732 2 735 2 849 2 737 4 277 2 278 2 51 2 854 2 518 2 639 2 56 2 290 6 291 2 525 4 177 2 409 2 294 2 761 2 300 2 538 2 70 2 301 2 874 4 191 2 305 2 417 2 883 2 197 2 309 2 311 2 665 2 422 6 666 2 774 2 205 2 435 4 782 2 83 26 784 8 898 2 556 6 671 2 787 2 85 2 902 2 676 2 331 2 451 2 679 4 916 2 336 2 340 8 343 2 578 26 579 2 108 4 
511 2 127 2 49 2 147 2 905 2 472 2 186 2 285 2 342 2 566 2 824 2 93 2 860 2 250 4 616 2 669 2 617 4 646 2 
294 2 115 2 532 2 702 2 472 4 354 2 186 2 872 2 822 2 824 4 707 2 358 4 476 2 13 4 361 2 127 2 79 2 246 2 422 4 425 2 551 2 667 6 250 4 372 2 436 2 616 2 669 2 617 4 83 6 787 2 557 4 139 4 141 6 902 2 147 2 905 2 628 2 566 2 910 2 93 4 845 2 330 2 331 2 735 2 799 2 849 2 395 2 511 2 49 6 852 2 342 2 285 2 578 12 580 2 56 2 860 2 461 2 112 2 646 4 753 4 
294 2 115 2 585 2 532 2 702 2 472 6 354 2 186 2 872 2 822 2 824 4 707 2 358 4 13 4 361 2 127 2 79 2 246 2 422 4 425 2 551 2 667 6 250 4 372 2 436 2 616 2 669 2 617 4 83 6 787 2 557 4 139 4 141 6 902 2 147 2 905 2 628 2 566 2 910 2 93 4 845 2 330 2 331 2 735 2 799 2 849 2 395 2 511 2 49 4 852 2 342 2 285 2 578 12 580 2 56 2 860 2 461 2 112 2 646 4 753 4 
294 2 115 2 532 2 702 2 472 6 354 2 186 2 872 2 822 2 824 4 707 2 358 4 13 4 361 2 127 2 79 2 246 2 422 4 425 2 551 2 667 6 250 4 372 2 436 2 616 2 669 2 617 4 83 6 787 2 557 8 139 4 141 6 902 2 147 2 905 2 628 2 566 2 910 2 93 4 845 2 330 2 331 2 735 2 799 2 849 2 395 2 511 2 49 6 852 2 342 2 285 2 578 12 580 2 56 2 860 2 859 2 461 2 112 2 646 4 753 4 
294 2 115 2 585 2 532 2 702 2 472 8 354 2 186 2 872 2 822 2 824 4 707 2 358 4 13 4 361 2 127 2 79 2 246 2 422 4 425 2 551 2 667 8 250 4 372 2 436 2 616 2 669 2 617 4 83 6 787 2 557 8 139 4 141 10 902 2 147 2 905 2 628 2 566 2 910 2 93 4 845 2 330 2 331 2 735 2 799 2 849 2 395 2 511 2 49 6 852 2 342 2 285 2 578 12 580 2 56 2 860 2 859 2 461 2 112 2 646 4 753 8 
294 2 115 2 532 2 702 2 472 6 354 2 186 2 872 2 822 2 824 4 707 2 358 4 13 4 361 2 127 2 79 2 246 2 422 4 425 2 551 2 667 6 250 4 372 2 436 2 616 2 669 2 617 4 83 6 787 2 557 8 139 4 141 10 902 2 147 2 905 2 628 2 566 2 910 2 93 4 845 2 330 2 331 2 735 2 799 2 849 2 395 2 511 2 49 6 852 2 342 2 285 2 578 12 580 2 56 2 860 2 859 2 461 2 112 2 646 4 753 8 
699 4 702 2 472 8 703 2 707 4 241 2 13 4 478 4 481 2 246 2 718 2 247 4 487 2 250 4 491 2 721 2 26 2 252 2 257 4 34 2 37 2 39 2 730 7 733 2 732 2 735 2 43 2 274 1 511 2 49 4 278 2 51 2 514 1 285 2 56 2 287 1 290 6 291 2 745 2 525 4 528 2 294 2 755 8 761 2 300 10 538 2 305 2 76 2 309 2 79 2 81 4 551 2 317 7 320 2 782 2 83 22 784 4 787 2 556 6 788 4 557 2 790 2 563 1 796 4 566 2 91 4 93 4 330 2 331 2 799 2 336 2 99 4 340 4 575 4 342 2 578 40 579 2 580 2 109 2 112 2 115 2 585 4 589 2 590 2 822 2 594 2 355 2 824 4 358 8 123 8 825 2 127 2 361 2 605 6 833 2 370 2 835 1 372 2 614 4 616 2 617 4 619 2 139 6 378 1 624 2 147 2 626 2 628 2 844 2 385 4 634 2 845 4 389 2 156 4 849 2 395 2 852 2 860 2 406 4 864 1 646 4 652 8 184 2 871 1 186 2 872 4 874 2 193 2 418 4 197 2 422 6 423 2 424 1 425 2 667 12 205 2 435 4 669 2 207 2 671 2 440 2 902 2 901 4 211 2 905 2 910 2 676 2 449 2 451 2 679 4 916 2 918 4 224 2 693 2 461 2 
115 2 699 4 702 2 589 2 590 2 472 8 703 2 822 2 594 2 824 4 355 2 707 4 825 2 123 8 358 8 241 2 13 4 478 4 481 2 361 2 127 2 605 6 246 2 718 2 247 4 487 2 833 2 721 2 491 2 250 4 370 2 26 2 372 2 614 4 252 2 616 2 617 4 257 4 139 6 619 2 624 2 147 2 626 2 844 2 628 2 34 2 385 4 634 2 37 2 845 4 39 2 389 2 732 2 733 2 43 2 735 2 156 4 395 2 849 2 511 2 49 8 852 2 278 2 51 4 285 2 56 2 860 2 859 4 290 6 291 4 745 2 406 4 525 4 528 2 646 4 294 2 755 8 652 8 184 2 761 2 300 10 538 2 872 4 186 2 874 2 193 2 305 2 76 2 418 4 309 2 197 2 79 2 422 6 81 4 423 2 425 2 667 12 551 2 205 2 320 2 435 4 782 2 669 2 784 6 83 22 207 2 788 4 556 6 671 2 787 2 557 6 790 2 440 2 901 4 902 2 211 2 905 2 796 4 91 4 566 2 910 2 93 4 676 2 330 2 449 2 331 2 451 2 679 4 916 4 799 2 336 2 918 4 99 4 224 2 340 6 575 4 578 40 342 2 579 2 580 2 693 2 109 2 461 2 112 2 
115 2 699 4 702 2 589 2 590 2 472 8 703 2 822 2 594 2 824 4 355 2 707 4 825 2 123 8 358 8 241 2 13 4 478 4 481 2 361 2 127 2 605 6 246 2 718 2 247 4 487 2 833 2 721 2 491 2 250 4 370 2 26 2 372 2 614 4 252 2 616 2 617 4 257 4 139 6 619 2 141 4 624 2 147 2 626 2 844 2 628 2 34 2 385 4 634 2 37 2 845 4 39 2 389 2 732 2 733 2 43 2 735 2 156 4 849 2 395 2 511 2 49 8 852 2 278 2 51 4 285 2 56 2 860 2 859 4 290 6 291 4 745 2 406 4 525 4 528 2 753 4 646 4 294 2 755 8 652 8 184 2 761 2 300 10 538 2 872 4 186 2 874 2 193 2 305 2 76 2 418 4 309 2 197 2 79 2 422 6 81 4 423 2 425 2 667 12 551 2 205 2 320 2 435 4 782 2 669 2 784 6 83 22 207 2 788 4 556 6 671 2 787 2 557 6 790 2 440 2 901 4 902 2 211 2 905 2 796 4 91 4 566 2 910 2 93 4 676 2 330 2 449 2 331 2 451 2 679 4 916 4 799 2 336 2 918 4 99 4 224 2 340 6 575 4 578 40 342 2 579 2 580 2 693 2 109 2 461 2 112 2 
115 2 585 2 699 4 702 2 589 2 590 2 472 10 703 2 822 2 594 2 824 4 355 2 707 4 825 2 123 12 358 8 476 2 13 4 478 4 481 2 361 2 127 2 605 8 246 2 718 2 247 4 487 2 248 2 833 2 721 2 491 2 250 4 370 2 26 2 372 2 614 4 252 2 616 2 617 4 257 4 139 6 619 2 141 4 624 2 145 2 147 2 626 2 844 2 628 2 34 2 385 4 634 2 37 2 845 4 39 2 389 2 732 2 733 2 43 2 735 2 156 4 849 2 395 2 511 2 741 2 49 10 852 2 278 2 51 4 517 2 285 2 56 2 860 2 859 4 290 8 291 4 745 2 406 4 525 4 528 2 753 4 646 4 294 2 755 8 652 6 411 2 184 2 761 2 300 8 538 2 872 4 186 2 874 4 193 2 305 2 76 2 418 4 309 2 197 2 79 2 422 6 81 4 423 2 425 2 667 16 551 2 205 2 320 2 435 6 782 2 669 2 784 6 83 20 207 2 788 4 556 6 671 2 787 2 557 6 790 2 440 2 901 4 902 2 211 2 905 2 796 4 91 4 566 2 910 2 93 4 676 4 330 2 449 2 331 2 451 2 679 4 916 4 799 2 336 4 918 4 99 4 224 2 340 6 575 4 578 38 342 2 579 2 580 2 693 2 109 2 461 2 111 2 112 2 
141 4 905 2 702 2 472 6 872 2 186 2 910 2 93 4 330 2 358 2 13 2 799 2 395 2 511 2 127 2 79 2 49 6 852 2 246 2 425 2 667 4 551 2 578 4 285 2 342 2 859 2 250 2 372 2 669 2 617 2 112 2 557 6 139 2 753 4 646 4 
115 2 589 2 702 2 472 6 703 2 707 4 358 2 123 8 241 2 13 2 713 3 127 2 605 6 246 2 718 2 489 2 833 2 250 2 370 2 372 2 252 2 617 2 139 2 619 2 141 2 624 2 845 4 39 2 389 2 266 2 735 2 849 2 395 2 511 2 49 6 852 2 278 2 285 2 56 2 859 2 290 6 525 4 646 4 645 2 294 2 652 2 761 2 300 4 872 2 538 2 186 2 874 3 72 2 305 2 544 2 197 2 309 2 79 2 422 6 425 2 667 4 551 2 205 2 435 4 782 2 783 2 669 2 83 24 787 2 556 6 671 2 557 6 902 2 905 2 910 2 93 4 676 3 330 2 331 2 451 2 679 4 799 2 336 3 456 2 342 2 578 28 927 2 691 2 112 2 
294 2 115 2 532 2 702 2 472 6 354 2 186 2 872 2 822 2 824 4 707 2 358 4 13 4 361 2 127 2 79 2 246 2 422 4 425 2 551 2 667 6 250 4 372 2 436 2 616 2 669 2 617 4 83 6 787 2 557 8 139 4 141 10 902 2 147 2 905 2 628 2 566 2 910 2 93 4 845 2 330 2 331 2 735 2 799 2 849 2 395 2 511 2 49 6 852 2 342 2 285 2 578 12 580 2 56 2 860 2 859 2 461 2 112 2 646 4 753 8 
294 2 115 2 702 2 534 2 472 6 354 2 186 2 872 2 822 2 824 4 707 2 358 4 476 2 13 4 361 2 127 2 79 2 246 2 422 4 425 2 551 2 667 8 250 4 372 2 436 2 616 2 669 2 617 4 83 6 787 2 557 8 139 4 141 10 902 2 147 2 905 2 628 2 566 2 910 2 93 4 845 2 331 2 681 2 735 2 799 2 849 2 395 2 511 2 49 8 852 2 342 2 285 2 578 12 580 2 56 2 860 2 859 2 461 2 178 4 112 2 753 8 646 4 
852 2 50 2 425 2 
852 2 50 2 425 2 
350 2 585 4 586 2 589 2 4 2 472 12 239 2 703 2 822 2 824 4 707 4 123 2 358 4 476 4 13 2 828 2 714 2 361 2 605 2 718 2 608 2 487 2 132 4 833 2 370 2 250 2 372 2 252 2 617 2 139 4 619 2 141 6 27 2 624 2 147 2 628 2 385 2 264 2 37 4 845 4 39 6 389 2 735 2 849 2 49 12 852 6 278 2 50 2 51 4 401 4 53 2 56 2 859 4 290 2 291 4 406 2 745 2 525 4 753 4 646 4 294 2 296 2 870 2 652 2 761 2 300 4 873 2 538 2 186 4 872 4 874 2 305 2 416 2 197 2 665 4 422 6 423 2 425 4 428 2 667 16 316 2 205 2 434 2 436 2 782 2 669 2 784 4 83 16 556 6 671 2 787 2 557 6 790 2 902 2 566 2 216 2 93 4 331 2 451 2 679 4 916 4 340 4 578 24 342 2 580 4 112 2 
101 2 320 2 616 2 348 2 215 2 
350 2 585 4 586 2 814 2 2 2 589 2 4 2 472 12 703 2 354 2 822 2 824 4 707 4 358 4 123 2 476 4 13 2 828 2 714 2 361 2 606 2 605 2 718 2 608 4 487 2 132 4 833 2 370 2 250 2 372 2 252 2 617 2 139 4 619 2 141 6 27 2 624 2 147 2 628 4 385 2 264 2 37 4 845 4 39 6 389 2 735 2 849 2 49 12 852 6 278 2 50 2 51 4 401 4 56 2 859 4 290 2 291 4 406 2 525 4 753 4 646 4 294 2 759 2 183 2 761 2 300 2 873 2 538 2 186 4 872 4 874 4 305 2 416 2 197 2 665 4 422 6 423 2 425 4 428 2 667 16 205 2 434 2 436 2 782 2 669 2 784 4 83 16 556 6 671 2 787 2 557 6 790 2 902 2 566 2 216 2 93 4 331 2 451 2 679 4 916 4 340 4 578 24 342 2 580 4 112 2 
350 2 585 4 468 2 586 2 589 2 4 2 472 12 239 1 703 2 354 2 822 2 824 4 707 4 122 2 123 2 358 4 476 4 13 2 828 2 714 2 361 2 605 2 718 2 608 2 487 2 132 4 833 2 370 2 250 2 372 2 252 2 617 2 139 4 619 2 377 2 141 6 27 2 624 2 843 2 147 2 628 4 385 2 264 2 37 4 845 4 39 6 389 2 735 2 849 2 49 12 852 6 278 2 50 2 51 4 401 4 56 2 859 4 290 2 291 4 406 2 745 2 525 4 753 4 646 4 294 2 652 2 761 2 185 2 300 4 873 2 538 2 186 4 872 4 874 2 305 2 416 2 197 2 665 4 422 6 423 2 425 4 428 2 667 16 205 2 434 2 436 2 782 2 669 2 784 4 83 16 556 6 671 2 787 2 557 6 790 2 902 2 566 2 216 2 93 4 331 2 451 2 679 4 916 4 340 4 578 24 342 2 580 4 112 2 
233 2 1 2 698 4 471 12 3 2 239 1 703 2 706 2 474 2 707 4 708 6 710 10 9 2 12 2 480 16 713 2 15 2 482 2 243 2 245 6 717 2 718 2 20 2 719 2 22 2 488 2 248 2 489 2 23 2 25 4 722 2 252 2 253 24 496 2 254 2 495 2 497 12 724 2 256 2 258 2 259 2 728 3 31 2 501 2 34 2 37 4 38 2 504 2 265 4 39 2 507 2 266 2 731 3 268 1 267 2 732 46 44 2 735 2 273 2 741 2 512 4 278 2 513 2 279 2 284 2 516 4 517 2 518 2 56 2 523 2 58 4 290 14 747 2 63 4 292 2 525 14 749 6 526 4 65 2 293 4 66 2 294 2 757 2 760 1 761 4 69 4 300 2 535 2 538 2 301 2 302 2 763 2 71 12 74 4 767 2 541 2 305 2 542 2 543 2 544 2 77 2 309 2 547 2 310 6 771 14 311 2 774 2 82 2 777 2 779 2 319 2 781 4 782 6 322 1 83 46 784 25 556 30 787 2 786 2 559 1 792 2 327 1 329 2 92 12 331 2 332 6 334 2 335 2 336 19 569 2 572 2 340 24 803 2 576 6 577 2 578 56 579 20 806 10 805 2 107 2 807 14 346 4 808 16 109 2 111 2 113 16 349 2 809 4 810 10 583 2 588 2 819 2 589 4 591 2 823 2 355 2 119 2 597 2 598 2 826 4 123 28 601 2 603 3 605 14 362 2 607 2 364 10 365 4 129 2 130 2 833 4 370 8 373 4 837 2 138 2 619 6 376 2 622 12 841 1 624 2 842 2 384 2 145 2 625 2 631 2 845 4 635 4 389 2 849 2 851 2 399 10 163 8 166 2 639 14 168 16 856 6 170 2 861 2 863 2 407 2 643 2 862 2 408 3 644 4 180 2 649 16 651 2 411 2 653 2 191 2 874 19 413 2 876 2 192 4 414 2 193 4 878 4 415 2 195 2 660 8 417 2 883 2 884 4 421 2 422 6 430 16 894 2 205 2 435 12 207 2 671 8 672 2 441 8 902 2 210 2 211 2 444 2 214 4 448 2 676 16 218 4 449 2 450 14 219 2 913 4 451 2 220 2 679 16 682 2 917 2 221 2 919 6 920 2 225 1 688 2 689 2 922 3 923 2 226 2 924 2 458 4 926 2 925 2 692 4 691 2 230 2 231 12 463 2 935 12 934 2 
66 2 810 4 728 2 501 2 302 2 874 2 676 2 220 2 123 2 732 6 710 2 336 2 309 2 605 2 546 2 399 2 777 2 578 2 290 2 435 2 862 2 83 2 786 2 349 2 
66 2 810 4 728 2 501 2 302 2 874 2 676 2 220 2 123 2 732 6 710 2 336 2 309 2 605 2 546 2 399 2 777 2 578 2 290 2 435 2 862 2 83 2 786 2 349 2 
66 2 810 4 728 2 501 2 302 2 874 2 676 2 220 2 123 2 732 6 710 2 336 2 309 2 605 2 546 2 399 2 777 2 578 2 290 2 435 2 862 2 83 2 786 2 349 2 
441 2 383 2 793 4 69 2 302 2 117 4 874 3 192 2 71 4 218 2 878 2 731 3 123 2 680 2 10 4 332 6 660 2 336 3 157 4 919 4 603 3 309 2 573 2 457 4 163 2 314 3 609 2 432 2 578 10 692 2 404 2 346 2 748 2 63 2 694 2 83 4 465 2 113 5 498 2 293 2 
698 2 69 2 302 2 874 2 117 4 71 4 192 2 878 2 123 2 10 4 660 2 309 2 603 2 245 2 609 2 314 2 201 2 432 2 83 4 498 2 441 2 383 2 793 4 218 2 731 2 332 6 680 2 336 2 157 4 919 4 573 2 163 2 457 4 578 10 692 2 404 2 346 2 63 2 748 2 694 2 113 4 465 2 293 2 
698 2 69 2 302 2 874 2 117 4 71 4 192 2 878 2 123 2 10 4 660 2 309 2 603 2 245 2 609 2 314 2 201 2 432 2 83 4 498 2 441 2 383 2 793 4 218 2 731 2 332 6 680 2 336 2 157 4 919 4 573 2 163 2 457 4 578 10 692 2 404 2 346 2 63 2 748 2 694 2 113 4 465 2 293 2 
698 2 69 2 302 2 874 2 117 4 71 4 192 2 878 2 123 2 10 4 660 2 309 2 603 2 245 2 609 2 314 2 201 2 432 2 83 4 498 2 441 2 383 2 793 4 218 2 731 2 332 6 680 2 336 2 157 4 919 4 573 2 163 2 457 4 578 10 692 2 404 2 346 2 63 2 748 2 694 2 113 4 465 2 293 2 
698 4 69 2 302 2 874 2 117 4 71 4 192 2 878 2 123 2 10 4 660 2 309 2 603 2 245 4 609 2 314 2 201 4 432 2 83 4 498 2 441 2 383 2 793 4 218 2 731 2 332 6 680 2 336 2 157 4 919 4 573 2 163 2 457 4 578 10 692 2 404 2 346 2 63 2 748 2 694 2 113 4 465 2 293 2 
629 2 754 2 651 2 700 2 137 2 14 2 
629 2 738 2 240 2 612 2 280 2 167 2 639 2 
697 2 326 2 353 1 908 2 729 2 118 2 91 2 41 1 678 2 768 2 154 2 849 2 160 2 339 1 338 2 574 1 165 2 578 10 106 1 524 2 613 2 344 2 321 2 83 8 785 2 439 2 
441 6 698 2 69 2 71 12 192 6 218 6 683 2 660 6 884 2 919 4 715 2 512 2 245 4 163 6 690 4 576 4 201 2 578 6 928 2 858 2 523 2 861 2 460 2 346 6 618 2 83 6 232 2 113 16 752 2 293 6 
381 1 382 2 793 2 457 2 146 4 299 2 116 2 313 2 578 1 857 7 217 2 633 2 553 2 10 2 83 1 734 2 850 2 558 2 
382 2 793 2 457 2 146 4 299 2 116 2 313 4 857 6 633 2 217 4 553 2 10 2 734 2 850 2 558 4 
381 1 382 2 793 2 457 2 146 4 299 2 116 2 313 8 578 1 857 10 633 8 217 8 553 2 10 2 83 1 734 6 850 2 558 8 
382 2 793 2 457 2 146 2 299 2 116 2 313 2 857 2 217 2 553 2 10 2 850 2 558 2 
819 2 589 2 239 2 591 2 6 2 706 2 119 2 7 1 12 2 827 2 362 2 367 2 249 2 370 2 254 4 496 2 138 2 619 4 838 2 839 2 380 2 841 4 265 6 507 2 508 2 267 2 393 4 270 4 848 4 283 3 525 10 750 2 65 2 295 2 531 2 298 2 760 2 187 2 655 2 74 2 415 2 661 2 547 2 310 6 773 2 312 2 775 2 200 2 894 2 552 2 782 4 83 30 784 16 556 20 671 2 672 2 323 2 675 2 210 2 329 2 679 12 96 2 915 2 334 2 335 2 923 2 578 32 458 6 581 2 
233 4 298 2 589 2 239 2 711 2 480 10 78 2 17 2 419 2 77 4 421 4 362 2 310 8 773 2 312 2 198 2 775 2 550 2 778 2 552 2 894 6 370 8 134 2 782 2 784 14 83 26 497 10 671 8 556 36 672 6 619 2 838 2 376 4 559 2 841 2 842 6 327 6 386 2 328 2 329 6 679 14 914 2 268 2 153 2 44 4 334 2 684 2 225 2 402 4 283 2 341 4 226 4 286 2 578 28 520 2 744 2 57 2 581 2 808 2 525 14 750 2 65 2 
233 2 819 2 760 2 589 4 187 2 591 2 706 2 413 2 119 2 74 4 415 2 12 2 480 2 77 2 17 2 421 2 547 2 362 2 310 6 773 2 312 2 200 2 22 2 894 2 552 2 370 5 782 6 496 2 254 2 497 2 784 4 83 28 671 5 556 25 672 2 619 6 138 2 376 2 559 1 841 2 842 2 210 2 327 1 329 2 265 4 507 2 679 14 268 1 267 2 44 2 334 2 335 2 684 2 225 1 689 2 923 2 226 2 578 30 458 4 863 2 808 2 525 12 750 2 65 2 
233 2 756 2 298 2 760 1 589 2 239 2 762 2 189 2 356 2 120 2 657 2 475 2 242 2 359 2 827 2 881 2 75 2 769 2 419 2 77 2 421 2 362 2 310 6 773 2 198 2 367 2 830 4 312 2 485 2 775 2 486 2 550 2 776 4 369 2 249 2 832 2 552 2 894 4 370 4 782 2 554 2 255 2 437 2 784 37 83 44 671 4 556 46 672 4 619 2 838 2 376 2 839 2 380 2 841 3 623 2 561 2 842 6 29 2 261 2 328 2 386 2 92 6 329 4 679 20 392 2 153 2 44 2 333 2 334 2 452 2 272 2 47 2 100 2 515 2 281 2 105 2 283 2 226 2 286 2 578 46 519 2 403 2 521 2 171 2 581 2 747 4 525 20 462 2 750 2 527 4 464 2 65 2 
736 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 363 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (58,799) (58,799) 448 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (58,799) (58,799) 448 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 526 38 52 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 685 838 187 527 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.IllegalArgumentException 525 (683,825) (683,825) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.IllegalArgumentException 525 (683,825) (683,825) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.IllegalArgumentException 525 (683,825) (683,825) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.IllegalArgumentException 525 (683,825) (683,825) 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 811 783 275 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 811 783 275 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 715 715 715 811 783 275 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:sum([D)D
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.inv.Invariant:logDetail()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaCharStream:getEndColumn()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd([I)I
daikon.Quant:union([I[I)[I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:memberOf(J[J)Z
daikon.ProglangType:isArray()Z
daikon.Quant:subsetOf([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:noDups([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([D)Z | ASSIGN | 57849 | = null
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | STATEMENT | 5303 | stmt -> ;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eltsGT([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:ne(II)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 14085 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:intern([I)[I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_3_16()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:memberOf(F[D)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
daikon.PptSlice1:arity()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:numIntArrays()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1343 | if (x) -> if (!x)
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability; | CONDITION | 1674 | if (x) -> if (!x)
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.PptSlice2:arity()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:new_ppt()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.Invariant:prob_or(DD)D
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.MathMDE:sign(I)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:sameLength([I[I)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGT([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaCharStream:getBeginLine()I
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Debug:logDetail()Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.MathMDE:mod_positive(II)I
daikon.ValueTuple:size()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaCharStream:readChar()C
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoAux:hashCode()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:dimensions()I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Assert:assertTrue(Z)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Debug:logOn()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eq(DD)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaCharStream:backup(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
706 4 58 2 799 2 568 2 757 2 586 2 16 2 409 2 617 2 
649 2 244 6 687 2 832 2 478 2 19 6 708 2 420 2 505 2 626 6 778 2 
58 2 154 2 142 6 291 2 744 2 812 6 194 4 459 2 612 6 796 6 799 2 764 2 751 4 
298 2 752 8 299 6 58 6 620 8 404 2 339 4 276 4 676 2 434 2 654 10 90 10 598 2 625 16 411 4 126 8 632 26 859 16 17 29 720 12 502 2 635 2 611 16 129 10 745 10 799 6 264 6 670 10 213 8 136 4 
30 4 767 6 
93 2 
452 2 242 2 424 2 334 2 730 2 700 2 3 2 701 4 6 2 432 2 850 2 554 2 676 2 40 2 12 2 476 2 322 2 442 2 503 2 726 2 401 2 673 2 449 2 617 2 
299 4 571 4 331 6 58 4 755 4 166 6 759 2 651 2 340 4 434 2 654 16 119 4 90 6 466 4 625 32 229 2 681 6 11 6 203 2 628 2 411 2 768 6 126 6 632 48 717 4 859 32 205 8 17 54 720 22 418 6 397 4 129 16 611 32 745 16 799 4 264 4 77 2 670 16 213 18 
596 2 503 2 737 2 
605 2 333 2 824 2 487 22 165 2 179 2 170 2 49 2 295 2 104 2 856 10 134 2 54 2 804 2 
299 2 300 2 109 2 192 2 35 2 433 2 705 2 654 2 90 4 625 2 411 2 632 4 859 2 17 6 720 2 180 2 129 2 611 2 745 2 693 2 670 2 213 2 29 2 
287 2 789 2 717 4 632 12 859 8 17 16 720 4 276 2 418 6 611 8 129 4 745 4 654 4 466 4 670 4 625 8 11 6 
324 2 684 2 504 2 363 2 738 6 167 2 212 2 277 2 589 2 417 2 
572 2 551 2 188 2 816 2 784 2 93 2 658 2 150 2 829 2 770 2 
544 3 644 2 645 5 646 2 332 1 549 2 547 1 757 2 217 1 652 2 7 2 117 2 762 2 655 3 436 2 120 2 121 2 557 3 14 3 661 2 343 16 560 2 662 2 663 2 443 2 444 2 665 4 347 2 23 2 131 2 567 1 667 2 668 1 671 2 448 2 26 2 353 2 779 2 354 2 355 2 781 2 248 1 143 2 461 1 577 2 578 2 678 2 252 2 467 1 785 2 468 6 39 2 470 3 472 2 367 1 786 2 474 3 46 3 152 32 584 2 477 24 688 2 258 16 795 2 692 2 479 2 799 32 157 1 481 2 160 2 58 34 269 1 591 4 590 2 592 3 486 3 704 2 169 1 595 2 813 2 383 2 493 8 69 4 389 2 390 2 604 1 283 16 391 4 392 8 501 2 393 8 288 24 394 2 395 2 182 16 399 1 78 2 297 4 727 2 402 2 841 4 506 2 80 2 616 2 81 2 511 2 403 2 191 2 514 1 732 6 196 12 518 2 197 2 86 2 406 2 855 3 310 2 623 2 312 2 92 2 200 2 314 2 410 2 317 2 95 2 414 2 530 2 861 3 415 6 208 4 209 2 536 2 210 2 537 2 100 1 102 6 637 2 538 2 325 2 540 2 541 2 103 2 422 2 639 4 746 2 542 3 106 32 
58 2 566 2 
58 4 235 2 431 2 
552 2 
546 2 648 2 550 6 377 2 272 12 809 16 274 2 810 38 114 2 760 4 380 6 62 2 64 2 555 4 814 12 225 12 491 12 435 38 230 8 765 4 71 2 233 4 561 2 836 2 837 2 839 4 348 2 614 12 615 2 351 2 777 4 27 10 137 6 845 8 619 8 302 8 243 2 454 16 190 12 674 6 456 12 249 8 851 2 852 12 360 4 87 2 853 4 146 2 463 8 149 2 631 2 582 2 319 4 44 2 96 2 787 12 97 12 858 12 369 6 689 8 416 4 636 2 156 2 798 2 802 4 748 38 328 6 159 2 588 10 
144 2 593 2 34 2 633 1 
144 2 657 2 
116 2 503 2 239 2 144 2 594 2 199 2 339 2 
238 2 144 2 594 2 
183 2 144 2 594 2 
250 2 221 2 593 2 
144 2 594 2 
250 2 352 2 
144 2 70 2 
250 2 714 2 593 2 
543 2 75 2 593 2 
593 2 750 2 337 2 
76 2 593 2 387 2 
15 2 593 2 408 2 
250 2 860 2 
144 2 305 2 
543 2 771 2 
337 2 622 2 
387 2 842 2 
15 2 758 2 
250 2 807 2 
857 2 15 2 
374 2 387 2 
161 2 337 2 
543 2 429 2 
250 2 714 2 593 2 702 2 
250 2 714 2 151 2 593 2 702 2 
250 2 593 2 508 2 
250 2 234 2 593 2 
766 2 251 2 118 2 67 2 
65 2 503 2 239 2 311 2 
116 2 65 2 503 2 239 2 311 2 168 2 
503 2 239 2 144 2 594 2 496 2 339 2 
189 2 3 2 
659 2 503 2 239 2 339 2 
387 2 247 2 
15 2 226 2 
543 2 833 2 
337 2 330 2 
797 2 
15 2 749 2 337 2 
607 2 15 2 337 2 
15 2 337 2 304 2 
301 6 245 2 815 2 503 2 239 2 801 6 241 2 773 2 
250 2 680 2 
437 2 335 2 828 2 2 2 487 2 20 2 5 2 261 2 396 4 181 2 774 2 600 2 214 2 
451 2 593 2 
518 2 
216 2 58 16 754 2 757 2 652 2 813 2 223 2 383 2 494 2 556 4 121 2 388 2 122 2 69 4 441 2 444 2 665 4 399 2 131 2 448 2 26 2 841 4 616 2 81 2 354 2 355 2 511 2 191 2 678 6 468 6 95 2 152 6 791 2 414 2 530 2 415 4 258 6 210 2 538 2 540 2 692 2 799 16 103 2 639 4 
216 2 58 16 549 2 754 2 757 2 652 2 813 2 223 2 383 2 494 2 556 4 121 2 388 2 122 2 69 4 441 2 444 2 665 4 399 2 131 2 448 2 26 2 841 4 616 2 81 2 354 2 355 2 511 2 191 2 406 2 678 6 468 6 95 2 152 6 791 2 414 2 530 2 415 6 258 6 210 2 538 2 540 2 692 2 799 16 103 2 639 4 
534 2 
186 2 455 2 
58 12 425 4 484 2 59 2 1 2 553 2 652 2 278 2 708 2 763 2 66 2 817 2 495 2 69 2 173 2 284 2 13 2 342 4 344 4 18 4 19 6 666 2 505 4 132 2 184 4 79 2 728 2 841 2 616 2 354 2 138 4 512 2 846 10 244 6 246 2 140 2 457 2 849 2 734 2 362 2 91 2 579 2 626 6 468 4 414 2 478 4 530 2 256 8 372 2 373 2 210 2 793 2 638 8 420 2 263 2 799 6 103 2 640 2 53 2 803 2 
58 12 425 4 484 2 59 2 1 2 553 2 652 2 278 2 708 2 763 2 66 2 817 2 495 2 69 2 173 2 284 2 13 2 342 4 344 4 18 4 19 8 666 2 132 2 505 4 184 4 79 2 841 2 616 2 778 2 354 2 138 4 512 2 846 10 244 6 246 2 357 4 140 2 457 2 849 2 734 2 362 2 91 2 579 2 626 8 468 4 414 2 478 4 530 2 256 8 372 2 373 2 210 2 793 2 638 8 799 6 326 2 420 2 263 2 103 2 640 2 480 2 803 2 
284 2 425 4 59 2 512 2 342 2 1 2 344 4 244 2 478 2 457 2 373 2 19 2 849 2 734 2 132 2 505 2 763 2 817 2 
58 12 425 4 484 2 59 2 1 2 553 2 652 2 278 2 708 2 763 2 66 2 817 2 495 2 69 2 173 2 284 2 13 2 342 4 344 4 18 4 19 6 666 2 505 4 132 2 184 4 79 2 728 2 841 2 616 2 778 2 354 2 138 4 512 2 846 6 244 4 246 2 140 2 457 2 849 2 734 2 362 2 91 2 579 2 626 6 468 4 414 2 478 4 530 2 256 4 372 2 373 2 210 2 793 2 638 4 263 2 799 6 103 2 640 2 53 2 803 2 
58 12 425 4 484 2 59 2 649 2 1 2 553 2 652 2 278 2 708 2 763 2 66 2 817 2 495 2 69 2 173 2 284 2 13 2 342 4 344 4 18 4 19 4 666 2 505 4 132 2 184 4 79 2 728 2 841 2 616 2 354 2 138 4 512 2 846 6 244 6 246 2 140 2 457 2 849 2 734 2 362 2 91 2 579 2 626 6 468 4 414 2 478 4 530 2 256 4 372 2 373 2 210 2 793 2 638 4 263 2 799 6 103 2 640 2 53 2 803 2 
58 12 425 4 484 2 59 2 1 2 553 2 652 2 278 2 708 2 763 2 66 2 817 2 495 2 69 2 173 2 284 2 13 2 342 4 344 4 18 4 19 6 666 2 505 4 132 2 184 4 79 2 728 2 841 2 616 2 354 2 138 4 512 2 846 6 244 6 246 2 140 2 457 2 849 2 734 2 362 2 91 2 579 2 626 6 468 4 414 2 478 4 530 2 256 4 372 2 373 2 210 2 793 2 638 8 420 2 263 2 799 6 103 2 640 2 53 2 803 2 
58 12 425 4 484 2 59 2 649 2 1 2 553 2 652 2 278 2 708 2 763 2 66 2 817 2 495 2 69 2 173 2 284 2 13 2 342 4 344 4 18 4 19 6 666 2 505 4 132 2 184 4 79 2 841 2 728 2 616 2 354 2 138 4 512 2 846 10 244 8 246 2 140 2 457 2 849 2 734 2 362 2 91 2 579 2 626 8 468 4 414 2 478 4 530 2 256 8 372 2 373 2 210 2 793 2 638 8 420 2 263 2 799 6 103 2 640 2 53 2 803 2 
58 12 425 4 484 2 59 2 1 2 553 2 652 2 278 2 708 2 763 2 66 2 817 2 495 2 69 2 173 2 284 2 13 2 342 4 344 4 18 4 19 6 666 2 505 4 132 2 184 4 79 2 728 2 841 2 616 2 354 2 138 4 512 2 846 10 244 6 246 2 140 2 457 2 849 2 734 2 362 2 91 2 579 2 626 6 468 4 414 2 478 4 530 2 256 8 372 2 373 2 210 2 793 2 638 8 420 2 263 2 799 6 103 2 640 2 53 2 803 2 
643 2 216 2 425 4 649 4 650 2 1 2 652 2 222 2 8 2 436 2 13 2 235 6 18 8 19 4 444 2 21 10 665 4 22 2 666 2 448 2 26 2 450 1 32 1 244 8 246 2 457 2 458 2 677 2 678 6 37 2 468 6 253 2 478 4 255 6 258 6 692 2 263 2 56 1 58 46 270 7 59 2 484 2 699 2 278 2 708 4 492 2 66 2 495 2 69 4 498 1 499 1 713 2 284 2 286 2 718 2 289 2 725 2 293 6 505 4 297 2 79 2 728 2 81 2 511 2 512 2 513 2 731 2 732 2 517 6 734 2 91 4 315 1 95 2 740 6 528 2 530 2 533 2 99 6 102 2 101 6 538 2 540 2 103 2 327 1 329 2 106 2 549 2 754 2 552 6 757 2 553 2 338 2 113 6 556 4 763 2 121 2 342 4 344 4 565 6 566 6 131 2 132 2 133 2 775 2 776 2 354 2 570 2 138 6 355 2 140 2 141 2 362 2 579 4 148 8 581 6 152 8 372 2 373 2 793 2 799 24 376 4 803 2 591 2 806 2 378 2 381 1 813 12 383 2 817 2 388 4 173 2 820 6 174 7 391 2 392 2 831 4 834 2 608 6 609 2 613 6 184 4 400 2 841 4 616 2 846 2 191 2 848 2 849 2 196 4 406 2 626 12 629 6 413 1 414 2 415 6 210 2 638 2 639 4 640 2 
643 2 216 2 425 4 549 2 650 2 754 2 552 6 1 2 757 2 338 2 553 2 113 6 652 2 222 2 8 2 436 2 763 2 556 4 121 2 13 2 342 4 344 4 235 6 18 8 19 8 21 10 444 2 665 4 22 2 565 6 130 2 666 2 566 6 131 2 132 2 133 2 448 2 26 2 776 2 775 2 570 2 354 2 355 2 138 6 244 8 246 2 458 2 140 2 457 2 141 2 677 2 577 2 362 2 678 6 579 4 37 2 468 6 253 2 148 8 581 6 152 8 478 4 255 6 372 2 258 6 373 2 793 2 692 2 263 2 799 26 376 4 803 2 58 48 591 4 484 2 59 2 806 2 699 2 378 2 278 2 813 12 708 4 383 2 492 2 66 2 817 2 495 2 388 4 69 4 820 6 173 2 713 2 284 2 391 4 286 2 392 2 718 2 831 4 289 2 834 2 608 6 609 2 725 2 613 6 293 6 505 4 400 2 297 4 184 4 79 2 728 2 841 4 616 2 81 2 511 2 512 2 846 2 513 2 731 2 191 2 732 2 848 2 517 6 849 2 196 8 734 2 406 2 91 4 626 12 629 6 95 2 740 6 528 2 414 2 530 2 415 6 533 2 864 2 99 6 210 2 101 6 102 2 538 2 540 2 638 6 420 4 103 2 640 2 639 4 329 2 106 2 
643 2 216 2 425 4 549 2 650 2 754 2 552 6 1 2 757 2 338 2 553 2 113 6 652 2 222 2 8 2 436 2 763 2 556 4 121 2 13 2 342 4 344 4 235 6 18 8 19 8 21 10 444 2 665 4 22 2 565 6 130 2 666 2 566 6 131 2 132 2 133 2 448 2 26 2 776 2 775 2 570 2 354 2 355 2 138 6 244 8 246 2 458 2 140 2 457 2 141 2 677 2 577 2 362 2 678 6 579 4 37 2 468 6 253 2 148 8 581 6 152 8 478 4 255 6 256 4 372 2 258 6 373 2 793 2 692 2 263 2 799 26 376 4 803 2 58 48 591 4 484 2 59 2 806 2 699 2 378 2 278 2 813 12 708 4 383 2 492 2 66 2 817 2 495 2 388 4 69 4 820 6 173 2 713 2 284 2 391 4 286 2 392 2 718 2 831 4 289 2 834 2 608 6 609 2 725 2 613 6 293 6 505 4 400 2 297 4 184 4 79 2 728 2 841 4 616 2 81 2 511 2 512 2 846 6 513 2 731 2 191 2 732 2 848 2 517 6 849 2 196 8 734 2 406 2 91 4 626 12 629 6 95 2 740 6 528 2 414 2 530 2 415 6 533 2 864 2 99 6 210 2 101 6 102 2 538 2 540 2 638 6 420 4 103 2 640 2 639 4 329 2 106 2 
215 2 643 2 216 2 425 4 649 2 650 2 1 2 4 6 652 2 222 2 8 2 436 2 13 2 235 12 18 8 19 10 444 2 21 8 665 4 22 2 666 2 448 2 26 2 244 10 246 2 458 2 457 2 677 2 678 8 465 6 37 2 468 6 253 2 682 6 478 4 256 4 255 6 258 8 692 2 263 2 268 6 58 52 59 2 484 2 699 2 61 2 278 2 708 4 281 6 492 2 66 2 495 2 710 2 69 4 713 2 284 2 285 6 286 2 718 2 289 2 725 2 293 12 505 4 297 4 79 2 728 2 81 2 511 2 512 2 513 2 731 2 732 4 517 6 734 2 735 6 91 4 95 2 740 6 528 4 530 2 531 2 99 12 102 4 101 6 538 2 540 2 103 2 329 2 106 4 549 2 754 2 552 12 757 2 553 2 338 2 113 6 556 6 763 2 121 2 342 4 344 4 559 2 565 6 130 2 566 12 131 2 132 2 133 2 775 2 776 2 778 2 354 2 570 2 355 2 138 6 140 2 141 2 577 2 362 2 579 4 148 8 581 6 152 12 372 2 373 2 793 2 799 24 376 4 803 2 591 4 164 2 806 2 378 2 813 10 383 2 817 2 388 4 173 2 820 6 391 4 392 4 178 6 831 4 834 2 608 12 609 2 613 6 184 4 400 2 841 4 616 2 618 6 846 6 191 2 848 2 849 2 196 10 406 2 626 16 629 6 414 2 206 2 415 6 634 2 864 2 210 2 638 6 420 4 639 4 640 2 
58 4 138 2 425 2 484 2 512 2 59 2 846 4 1 2 244 6 553 2 457 2 849 2 708 2 362 2 66 2 495 2 626 4 173 2 13 2 344 2 478 4 256 4 18 2 372 2 373 2 19 6 793 2 638 6 263 2 420 2 132 2 505 4 184 2 728 2 803 2 
216 2 425 2 549 2 754 2 1 2 757 2 553 2 652 2 7 2 115 2 556 4 121 2 13 2 344 2 18 2 19 6 444 2 21 2 665 4 666 2 131 2 132 2 448 2 26 2 28 2 354 2 138 2 355 2 244 6 457 2 362 2 678 6 468 6 152 8 478 4 372 2 373 2 258 6 793 2 692 2 262 3 263 2 799 24 266 2 803 2 58 28 162 2 590 2 59 2 484 2 708 2 813 4 383 2 66 2 495 2 388 2 69 4 173 2 505 4 184 2 728 2 841 4 616 2 81 2 511 2 512 2 846 2 403 2 191 2 732 3 849 2 733 2 518 2 406 2 626 4 95 2 414 2 530 2 415 6 533 2 210 2 102 3 538 2 540 2 638 6 420 2 103 2 639 4 106 3 
263 2 372 2 516 2 
263 2 372 2 516 2 
643 2 108 2 216 2 549 2 425 2 649 4 754 2 757 2 652 2 763 2 436 4 121 2 342 4 344 2 127 4 18 4 19 12 236 2 21 2 444 2 563 2 665 4 565 2 131 2 133 2 26 2 778 4 354 2 138 4 355 2 244 12 246 2 140 2 678 2 579 4 468 6 152 2 686 2 478 4 256 4 372 4 258 2 373 2 793 2 692 2 263 6 799 16 376 2 58 24 591 4 63 2 382 2 489 2 171 2 813 4 708 4 383 2 492 2 66 2 388 6 69 4 603 2 284 2 391 4 73 2 831 2 505 4 297 4 184 2 841 4 616 2 81 2 511 2 512 4 846 6 191 2 516 2 849 2 196 4 308 4 406 2 91 2 626 16 627 4 95 2 318 2 412 2 320 2 414 2 530 2 321 2 415 6 210 2 323 2 538 2 540 2 638 6 420 4 421 2 103 2 640 2 639 4 642 2 106 2 
354 2 58 4 73 2 455 2 21 2 382 2 609 2 794 2 734 2 565 2 813 2 799 2 51 2 10 2 642 2 329 2 376 2 
643 2 216 2 549 2 425 2 649 4 754 2 757 2 652 2 653 2 763 2 436 4 121 2 342 4 344 2 127 4 18 4 19 12 236 2 444 2 665 4 565 2 131 2 133 2 26 2 778 4 354 2 138 4 355 2 244 12 246 2 140 2 678 2 579 4 468 6 580 2 152 2 686 2 478 4 256 4 372 4 258 2 373 2 48 2 793 2 692 2 263 6 799 16 58 24 591 4 382 2 489 2 278 2 813 2 708 4 383 2 492 2 66 2 388 6 69 4 603 2 284 2 391 4 73 2 831 2 505 4 297 4 184 2 185 2 841 4 616 2 81 2 511 2 512 4 846 6 191 2 516 2 849 2 196 4 308 4 406 2 91 4 626 16 627 4 95 2 318 4 412 2 320 2 414 2 530 2 321 2 415 6 210 2 323 2 538 2 540 2 539 2 638 6 420 4 421 2 103 2 640 2 639 4 642 2 106 4 
643 2 216 2 549 2 425 2 649 4 754 2 757 2 652 2 763 2 436 4 121 2 440 2 342 4 344 2 127 4 18 4 19 12 236 2 21 2 444 2 665 4 565 2 131 2 133 2 26 2 778 4 354 2 138 4 355 2 244 12 246 2 140 2 678 2 579 4 366 2 468 6 152 2 686 2 478 4 256 4 372 4 258 2 373 2 793 2 692 2 263 6 799 16 376 2 58 24 591 4 382 2 489 2 707 2 278 2 813 4 708 4 383 2 492 2 66 2 819 2 388 6 69 4 603 2 284 2 391 4 73 2 831 2 610 2 505 4 297 4 184 2 841 4 616 2 81 2 511 2 512 4 846 6 191 2 516 2 849 2 196 4 308 4 406 2 91 4 626 16 627 4 95 2 318 2 412 2 320 2 414 2 530 2 321 2 415 6 210 2 323 2 538 2 540 2 638 6 420 4 421 2 103 2 640 2 639 4 642 2 106 2 
647 2 58 24 336 2 754 2 757 2 756 2 378 2 379 2 652 2 218 2 813 2 383 2 8 2 556 4 121 2 388 2 69 4 830 1 718 2 444 2 665 2 22 2 131 2 448 2 26 2 841 4 616 2 354 2 509 2 510 2 511 2 82 2 513 2 191 2 303 2 732 2 621 2 678 6 88 2 854 1 365 2 469 2 38 2 468 6 253 2 254 2 471 2 152 8 526 2 788 2 414 2 530 2 415 2 98 4 258 6 690 2 210 2 102 2 540 2 692 2 799 18 103 2 639 2 52 2 158 2 587 2 695 2 106 2 
58 2 548 2 488 2 732 3 515 2 85 2 678 2 224 2 384 2 386 2 227 3 556 2 9 2 523 2 152 2 583 4 827 2 528 6 258 2 535 2 102 3 799 2 375 1 448 2 106 3 
58 2 548 2 488 2 732 2 515 2 85 2 678 2 224 2 384 2 386 2 227 2 556 2 9 2 523 2 152 2 583 4 827 2 528 6 258 2 535 2 102 2 799 2 448 2 106 2 
58 2 548 2 488 2 732 2 515 2 85 2 678 2 224 2 384 2 386 2 227 2 556 2 9 2 523 2 152 2 583 4 827 2 528 6 258 2 535 2 102 2 799 2 448 2 106 2 
805 2 483 2 58 10 548 2 698 2 654 2 602 4 712 6 283 2 660 3 175 2 176 2 126 4 17 6 346 2 611 2 129 2 182 2 448 2 670 2 843 4 574 2 84 4 732 3 359 3 147 2 145 3 625 2 152 2 475 2 632 4 790 4 859 2 207 2 260 4 745 2 799 4 264 2 211 2 106 3 
805 2 483 2 58 10 548 2 698 2 434 2 654 2 602 4 712 6 283 2 660 2 175 2 176 2 126 4 17 4 346 2 720 2 611 2 129 2 182 2 448 2 670 2 843 4 574 2 84 4 732 2 359 2 147 2 145 2 625 2 152 2 475 2 632 4 790 4 859 2 207 2 260 4 745 2 799 4 264 2 211 2 213 2 106 2 
805 2 483 2 58 10 548 2 698 2 434 2 654 2 602 4 712 6 283 2 660 2 175 2 176 2 126 4 17 4 346 2 720 2 611 2 129 2 182 2 448 2 670 2 843 4 574 2 84 4 732 2 359 2 147 2 145 2 625 2 152 2 475 2 632 4 790 4 859 2 207 2 260 4 745 2 799 4 264 2 211 2 213 2 106 2 
805 2 483 2 58 10 548 2 698 2 434 2 654 2 602 4 712 6 283 2 660 2 175 2 176 2 126 4 17 4 346 2 720 2 611 2 129 2 182 2 448 2 670 2 843 4 574 2 84 4 732 2 359 2 147 2 145 2 625 2 152 2 475 2 632 4 790 4 859 2 207 2 260 4 745 2 799 4 264 2 211 2 213 2 106 2 
805 2 483 2 58 10 548 2 698 2 434 4 654 2 602 4 712 6 283 2 660 2 175 2 176 2 126 4 17 4 346 2 720 4 611 2 129 2 182 2 448 2 670 2 843 4 574 2 84 4 732 2 359 2 147 2 145 2 625 2 152 2 475 2 632 4 790 4 859 2 207 2 260 4 745 2 799 4 264 2 211 2 213 4 106 2 
438 2 31 2 573 2 808 2 867 2 743 2 
753 2 545 2 438 2 45 2 427 2 522 2 782 2 
232 2 202 2 72 1 696 1 58 4 685 2 697 2 527 2 187 2 428 2 277 1 652 2 36 2 838 2 799 4 840 1 212 1 
331 4 58 6 33 2 430 2 307 2 434 4 654 6 466 2 625 6 497 2 11 4 822 2 42 2 632 12 126 4 205 2 859 6 17 15 371 2 720 4 721 2 397 2 611 6 129 6 745 6 799 6 264 2 865 2 670 6 213 4 
368 2 683 2 525 2 843 2 825 2 84 2 790 2 
368 2 683 2 58 1 524 1 525 2 843 2 825 2 799 1 84 2 790 2 
368 2 683 2 525 2 843 2 825 2 84 2 790 2 
368 2 683 2 525 2 843 2 825 2 84 2 790 2 
107 2 423 2 549 4 426 4 110 2 219 2 123 2 231 2 341 2 125 2 769 2 562 2 444 4 445 2 664 18 237 2 665 18 564 2 128 2 240 4 131 6 446 2 24 14 447 2 135 1 349 2 350 2 569 1 780 4 576 2 783 2 361 2 364 2 473 2 585 2 47 2 792 2 155 2 799 34 694 4 265 6 55 4 267 2 57 2 58 38 271 4 485 2 703 4 275 2 811 2 172 2 597 1 490 2 383 6 279 2 599 2 711 2 821 2 606 2 826 2 177 4 715 2 716 2 719 5 74 2 290 4 835 2 296 2 844 2 83 2 306 2 193 2 519 2 406 4 624 2 316 4 204 2 529 2 415 32 532 2 862 2 742 2 863 4 419 1 639 16 747 1 641 2 105 2 
58 46 549 1 163 4 0 2 426 6 271 4 273 2 60 4 111 2 112 2 275 2 811 2 172 2 709 2 761 2 279 2 280 2 383 2 385 2 656 2 711 2 231 2 124 2 823 2 606 2 558 2 177 4 719 2 345 2 769 2 290 2 444 2 835 2 664 38 237 2 665 20 722 2 723 2 398 2 292 2 724 2 131 2 294 2 24 6 447 2 669 2 349 2 25 4 780 2 729 2 453 2 356 2 575 2 847 2 139 2 193 2 306 2 675 2 195 2 405 2 783 2 460 2 736 2 361 2 520 2 309 2 406 1 521 2 89 6 407 2 679 2 624 2 313 2 94 2 41 4 739 2 630 2 370 2 257 2 532 2 415 43 742 2 792 2 863 4 691 2 799 44 639 20 694 2 482 2 55 4 267 2 57 2 
423 2 549 6 219 2 220 2 228 8 123 2 231 4 439 2 341 2 125 2 769 2 562 2 444 2 445 2 664 28 665 20 564 2 131 4 240 2 446 2 24 10 772 2 447 2 350 2 358 2 783 2 462 2 364 2 473 2 153 8 585 2 259 2 47 2 691 6 799 40 50 2 694 4 265 6 55 4 482 2 57 2 58 44 271 4 485 2 273 6 275 2 703 6 811 2 172 2 280 2 383 4 599 2 818 2 68 2 601 2 282 2 821 2 606 2 826 2 177 4 716 2 719 6 290 6 835 2 296 4 844 2 729 6 83 2 306 2 193 2 519 2 198 8 520 6 406 6 624 2 201 2 316 6 741 2 415 40 862 2 863 4 419 2 639 18 866 2 641 2 105 2 
58 22 549 6 426 2 271 4 275 2 811 2 172 2 279 2 383 2 711 2 231 2 606 2 500 2 177 2 715 6 719 2 769 2 290 2 444 2 664 12 835 2 665 10 131 2 24 6 447 2 672 2 507 2 780 2 575 2 576 2 193 2 306 2 783 2 361 2 406 6 464 2 624 2 43 2 415 32 532 2 742 2 863 4 419 2 799 20 639 10 694 2 482 2 55 4 267 2 57 2 
800 2 

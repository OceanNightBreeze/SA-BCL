#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 169 248 (710,931) (466,882) (466,882) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 169 248 (710,931) (466,882) (466,882) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 169 248 (710,931) (466,882) (466,882) 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 169 248 (710,931) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 169 248 (710,931) (710,931) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 169 248 (710,931) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 499 583 1060 953 727 31 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 768 914 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 768 914 
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 768 914 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 66 91 517 914 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (210,910) (210,910) (632,694) (632,694) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_55()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(DD)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_2_27(I)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_56()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:ReadByte()C
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_68()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type; | CONSTANT | 44760 | 0 -> -1
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_29(I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:noDups([I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_3_22()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_62()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eq(II)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_122()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_29()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseLT([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.Diff:findNormalPpt(Ldaikon.PptMap;Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:union([I[I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3R_75()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | CONDITION | 26193 | if (x) -> if (!x)
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([I)[I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3_30()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_97()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:gcd(II)I
daikon.PptSlice1:arity()I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:min([I)I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:memberOf(J[J)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:PrimarySuffix()Ljtb.syntaxtree.PrimarySuffix;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_162()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.ProglangType:dimensions()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_2_21(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndLine()I
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_77()Z | STATEMENT | 172318 | stmt -> ;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:sameLength([I[I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.PptSlice2:arity()I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:lexNotEqual([I[I)Z | CONDITION | 170166 | if (x) -> if (!x)
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ValueTuple:size()I
jtb.JavaParser:jj_2_3(I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_3R_57()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:isArray()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_2_14(I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_117()Z
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_10()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:relate_var()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_51()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaCharStream:getBeginLine()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_2_25(I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_30(I)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_61()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:gte(II)Z
utilMDE.Intern:intern([J)[J
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:gt(II)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_28()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakHasherMap:size()I
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3_12()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_47()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaCharStream:BeginToken()C
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Node:Node()V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_2_28(I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:sum([I)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3_36()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 35278 | return null
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_1(I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Ppt:Ppt()V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 21115 | return null
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_3_35()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:lexGTE([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression; | RETURN | 68476 | return null
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Debug:logOn()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:eltwiseGTE([I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
130 2 243 2 450 2 338 2 1050 2 697 2 271 2 317 4 316 2 
359 2 938 2 886 2 654 2 423 6 634 2 655 2 188 2 1055 2 558 6 512 6 
388 2 548 4 732 6 78 4 491 2 761 6 349 6 316 2 450 2 115 2 325 2 500 6 934 2 
291 12 332 4 199 10 836 2 738 4 306 10 1041 2 594 10 533 2 69 29 106 8 669 2 344 26 41 2 746 10 783 2 1015 10 314 16 278 6 924 4 890 8 316 6 221 2 450 6 688 6 544 4 252 8 574 8 1020 16 256 16 
127 4 695 6 
869 2 
291 2 198 2 199 2 738 2 306 2 594 2 883 2 69 6 241 2 309 2 14 2 503 2 344 4 507 2 746 4 1015 2 314 2 377 2 278 2 890 2 754 2 1020 2 256 2 
291 5 898 4 344 12 1015 4 199 4 314 8 924 2 603 6 739 2 190 4 306 4 824 6 594 4 1020 8 256 8 69 15 124 2 
164 4 293 4 462 4 798 2 652 2 334 2 365 2 302 2 131 2 1003 2 969 2 1039 4 1004 4 1006 4 139 2 307 10 911 2 498 2 563 2 946 14 815 6 74 4 917 2 506 8 952 2 189 2 861 2 864 4 865 2 510 4 379 4 48 62 543 2 728 2 790 10 253 4 416 4 254 2 545 4 1061 2 
1028 2 698 2 425 2 132 2 709 2 677 2 608 2 87 2 869 2 645 2 
458 2 518 2 522 2 797 2 805 2 1006 2 338 2 663 2 141 2 945 4 952 2 214 2 678 4 221 2 892 2 285 2 894 2 610 2 1021 2 545 4 487 4 292 2 489 2 94 2 833 2 967 2 1037 2 843 2 906 2 561 2 104 2 979 2 1047 2 176 2 312 2 506 2 374 2 569 2 444 2 721 2 316 4 450 4 515 2 327 2 
562 2 988 2 
815 2 506 2 365 2 
520 2 1014 22 245 2 523 2 983 10 373 2 984 2 1033 2 463 2 719 2 448 2 820 2 906 2 776 2 
519 4 939 2 1 2 799 3 800 2 525 2 128 1 265 1 657 2 659 2 138 2 531 2 534 2 271 2 812 3 142 2 13 8 402 2 814 2 668 2 274 2 950 2 951 2 671 3 407 2 674 4 277 4 150 3 409 12 19 2 683 2 956 3 413 3 286 1 959 2 691 2 161 8 693 4 546 16 29 2 294 1 550 2 296 8 555 2 171 2 703 6 33 2 973 6 35 2 431 2 434 2 36 2 712 2 173 4 38 4 850 2 980 3 437 2 565 1 43 2 180 2 716 1 718 3 442 2 570 2 857 2 316 32 450 34 318 1 992 2 867 2 996 2 326 16 997 2 56 2 461 2 582 1 585 2 999 3 584 24 59 1 874 2 60 2 877 2 591 3 200 24 64 2 879 2 741 1 337 1 880 2 881 32 595 2 596 2 744 2 1011 2 885 5 472 2 600 2 478 2 347 2 348 2 216 2 215 1 350 4 82 6 605 16 224 4 86 2 355 1 356 2 1023 2 226 2 90 2 611 2 899 2 612 2 492 1 614 2 760 2 613 2 99 2 901 2 366 2 762 2 766 6 769 2 238 2 621 3 497 1 624 2 499 2 502 32 505 16 1045 2 780 2 1049 1 376 2 114 2 378 3 250 2 511 2 1056 2 638 2 251 12 639 2 640 2 933 2 932 2 
151 2 
450 2 1058 2 
450 4 119 2 123 2 
262 14 0 4 796 2 263 2 6 2 803 2 808 22 807 2 269 2 10 2 810 8 811 10 12 2 813 2 536 48 273 2 538 2 15 48 16 14 276 20 17 36 21 2 825 8 24 38 25 4 826 8 28 2 827 4 30 4 552 2 834 2 300 8 301 2 553 2 838 4 303 24 841 2 32 4 305 6 560 48 564 4 37 14 853 16 566 4 567 4 42 2 856 2 860 2 862 2 46 4 866 2 868 2 578 4 54 146 330 2 587 2 62 2 333 2 589 2 590 2 68 6 884 2 342 14 73 2 599 2 79 2 346 2 601 2 602 2 889 4 351 2 352 4 604 8 353 2 84 2 606 2 354 22 357 2 93 22 97 2 98 2 362 4 364 4 903 2 905 20 622 4 105 2 370 2 625 6 916 48 915 2 627 14 629 2 111 2 372 2 921 2 380 2 381 2 642 26 383 4 122 2 386 48 646 2 387 2 647 2 648 2 937 2 653 4 394 2 656 48 133 8 397 4 658 2 398 8 137 2 399 42 662 2 140 4 664 48 667 2 666 2 403 2 947 2 672 2 406 8 408 2 675 4 152 8 154 2 680 4 156 4 685 4 689 48 692 2 961 36 165 2 964 2 696 2 424 2 170 2 426 2 971 4 704 4 974 2 706 2 711 2 435 2 713 2 175 4 981 4 179 2 982 4 438 2 714 2 715 48 986 2 441 186 717 2 443 2 186 26 722 2 990 2 991 10 729 4 191 2 730 4 196 2 733 2 734 2 735 2 465 2 467 2 201 4 468 8 740 20 202 2 1008 12 1010 2 745 2 474 2 473 2 476 2 747 2 213 2 218 2 480 2 750 8 222 6 756 6 484 8 757 48 488 6 229 2 758 48 1031 2 1032 16 763 4 1038 4 237 2 772 146 771 48 773 4 1042 2 496 48 1043 2 242 4 1044 2 779 2 247 4 1051 2 787 8 1057 16 513 4 793 146 258 28 259 2 261 2 
116 2 415 2 817 1 987 2 
116 2 456 2 
598 2 506 2 958 2 770 2 116 2 332 2 288 2 
598 2 116 2 182 2 
598 2 116 2 225 2 
840 2 415 2 955 2 
598 2 116 2 
840 2 832 2 
232 2 116 2 
840 2 919 2 415 2 
244 2 687 2 415 2 
781 2 415 2 705 2 
684 2 415 2 361 2 
849 2 607 2 415 2 
840 2 751 2 
116 2 80 2 
163 2 687 2 
76 2 705 2 
524 2 361 2 
849 2 1059 2 
840 2 743 2 
849 2 404 2 
872 2 361 2 
617 2 705 2 
687 2 284 2 
840 2 919 2 167 2 415 2 
447 2 
840 2 452 2 415 2 
840 2 469 2 415 2 
854 2 345 2 620 2 792 2 
819 2 506 2 958 2 707 2 
819 2 506 2 958 2 770 2 185 2 707 2 
598 2 506 2 391 2 958 2 116 2 332 2 
843 2 83 2 
891 2 506 2 958 2 332 2 
509 2 361 2 
849 2 765 2 
687 2 7 2 
705 2 101 2 
849 2 136 2 705 2 
849 2 321 2 705 2 
436 2 849 2 705 2 
849 2 995 2 705 2 
57 6 363 2 72 6 110 2 506 2 44 2 958 2 323 2 
840 2 504 2 
109 2 77 4 1014 6 2 4 81 2 785 2 336 2 786 2 844 2 236 2 929 2 339 2 755 2 287 2 240 2 665 2 328 2 310 2 
702 2 415 2 
376 2 
519 2 800 2 525 2 941 2 657 2 659 2 531 4 271 2 814 2 144 2 668 2 277 2 409 8 959 2 693 4 29 2 828 2 550 2 296 2 555 2 839 2 171 2 703 2 973 6 33 2 308 2 712 2 173 4 38 2 177 2 852 2 43 2 716 2 184 2 316 26 450 26 573 2 193 2 326 6 53 2 461 2 874 2 60 2 64 2 879 6 741 2 593 2 881 6 595 2 343 2 472 4 478 2 216 2 350 4 82 2 224 4 226 2 612 2 1034 2 99 2 233 2 766 4 769 2 238 2 499 2 502 4 912 2 1045 2 628 4 780 2 1056 2 251 8 639 2 640 2 385 4 932 2 
519 2 800 2 525 2 941 2 657 2 659 2 531 4 271 2 814 2 144 2 668 2 277 2 409 8 959 2 693 4 29 2 828 2 550 2 296 2 555 2 839 2 171 2 703 2 973 6 33 2 308 2 712 2 173 4 38 2 177 2 852 2 439 2 43 2 716 2 184 2 316 26 450 26 573 2 326 6 53 2 870 2 461 2 874 2 60 2 63 2 64 2 879 6 741 2 881 6 595 2 744 2 343 2 472 2 478 2 216 2 350 4 82 2 224 4 86 2 226 2 612 2 613 2 99 2 233 2 766 6 769 2 238 2 499 2 502 4 912 2 1045 2 628 4 780 2 1056 2 251 8 639 2 640 2 385 4 932 2 
960 2 
626 2 925 2 
55 2 886 2 490 2 782 4 466 2 1055 2 266 2 893 2 558 2 882 2 103 2 117 2 512 2 943 2 774 2 1022 4 710 2 913 2 
55 2 461 2 581 2 580 2 871 4 526 2 874 2 3 2 1000 2 804 2 655 2 395 2 466 2 266 2 9 2 659 2 1005 2 532 2 882 2 943 2 886 4 216 2 219 4 411 6 818 2 481 4 893 2 1022 4 88 2 693 2 226 2 1029 2 490 2 612 2 230 2 423 6 902 2 970 2 558 4 428 2 973 4 103 2 774 2 432 4 710 2 913 4 173 2 246 2 248 2 43 2 782 4 985 4 633 2 859 2 188 2 316 6 1055 4 450 12 117 2 512 6 
55 2 490 2 526 2 3 2 169 2 423 4 1000 2 804 2 395 2 902 2 466 2 970 2 558 4 1005 2 103 2 882 2 432 2 710 2 886 2 248 2 985 4 782 2 634 2 859 2 188 2 219 2 1055 2 818 2 411 4 450 4 481 4 512 2 117 2 1022 2 88 2 
55 2 938 2 461 2 581 2 580 2 871 4 526 2 874 2 3 2 1000 2 804 2 395 2 466 2 266 2 9 2 659 2 1005 2 532 2 882 2 943 2 886 4 216 2 219 4 411 6 818 2 481 4 893 2 1022 4 88 2 693 2 226 2 1029 2 490 2 612 2 230 2 423 6 902 2 970 2 558 6 428 2 973 4 103 2 774 2 432 4 710 2 913 4 173 2 246 2 248 2 43 2 782 4 985 8 633 2 859 2 188 2 316 6 1055 4 450 12 117 2 512 6 
55 2 938 2 490 2 871 2 230 2 526 2 3 2 169 2 423 6 1000 2 804 2 395 2 902 2 466 2 970 2 558 8 1005 2 103 2 882 2 432 2 710 2 886 4 248 2 985 8 782 2 634 2 859 2 188 2 219 2 1055 4 818 2 411 8 450 4 481 8 512 6 117 2 1022 2 88 2 
55 2 938 2 461 2 581 2 580 2 871 4 526 2 874 2 3 2 1000 2 804 2 395 2 466 2 266 2 9 2 659 2 1005 2 532 2 882 2 943 2 886 4 216 2 219 4 411 10 818 2 481 8 893 2 1022 4 88 2 693 2 226 2 1029 2 490 2 612 2 230 2 423 6 902 2 970 2 558 6 428 2 973 4 103 2 774 2 432 4 710 2 913 4 173 2 246 2 248 2 43 2 782 4 985 8 633 2 859 2 188 2 316 6 1055 4 450 12 117 2 512 6 
55 2 519 2 490 2 526 2 3 2 169 2 423 4 1000 2 804 2 395 2 902 2 466 2 970 2 558 4 1005 2 103 2 882 2 432 2 710 2 38 2 886 2 248 2 985 2 782 2 277 2 634 2 409 2 859 2 188 2 219 2 1055 2 818 2 450 4 251 2 512 2 117 2 384 2 1022 2 88 2 
519 4 800 2 526 2 801 6 3 2 802 2 804 2 528 6 266 2 8 6 9 2 532 4 531 2 535 2 271 2 814 2 537 1 275 2 277 4 818 2 280 2 541 1 542 2 550 2 295 2 296 2 298 6 554 4 837 2 839 2 304 8 558 8 308 4 38 4 855 1 43 2 313 2 571 2 859 2 316 26 45 10 326 6 55 2 580 2 581 2 871 6 874 2 60 2 61 6 875 1 64 2 879 6 882 2 881 8 595 2 70 6 343 2 886 4 887 6 350 4 82 2 893 2 609 2 88 2 896 6 612 2 613 2 99 2 902 2 367 6 103 2 623 6 913 4 628 4 633 2 639 2 117 2 118 2 641 2 640 2 119 6 384 2 932 2 935 7 938 4 395 2 659 2 135 2 943 2 401 2 944 2 144 2 949 2 146 1 954 6 151 6 409 8 411 2 414 6 158 6 959 2 690 7 693 4 418 2 962 4 420 1 965 2 423 12 970 2 171 2 703 2 973 6 428 2 975 2 432 8 710 2 173 4 712 2 985 6 720 2 989 2 188 4 450 48 725 2 453 2 194 2 455 2 461 2 1000 2 466 2 1005 2 742 2 744 2 475 2 216 2 749 2 219 4 1018 2 753 1 224 4 1022 4 226 2 1027 2 490 2 1029 2 1030 2 1035 2 494 1 766 6 774 2 499 2 502 2 1045 12 1046 2 780 2 246 4 508 1 248 2 782 4 1055 4 251 8 512 8 1058 6 
519 4 938 4 800 2 526 2 801 6 802 2 3 2 804 2 395 2 528 6 266 2 8 6 135 2 9 2 659 2 531 2 532 4 943 2 535 2 271 2 401 2 944 2 814 2 144 2 949 2 275 2 954 6 277 4 151 6 409 8 280 2 818 2 411 6 542 2 414 6 158 6 959 2 693 4 418 2 962 4 550 2 295 2 296 2 298 6 965 2 554 4 423 12 837 2 839 2 970 2 304 8 703 2 171 2 558 8 428 2 973 6 975 2 308 4 432 8 710 2 712 2 173 4 38 4 43 2 313 2 985 6 720 2 571 2 989 2 859 2 188 4 316 26 45 10 450 48 725 2 453 2 455 2 194 2 326 6 55 2 461 2 581 2 580 2 871 6 874 2 60 2 61 6 1000 2 466 2 879 6 64 2 1005 2 742 2 881 8 882 2 595 2 70 6 744 2 343 2 886 4 475 2 887 6 749 2 216 2 82 2 350 4 219 4 1018 2 481 4 893 2 224 4 609 2 1022 4 88 2 226 2 1027 2 896 6 1029 2 490 2 1030 2 612 2 613 2 1035 2 99 2 902 2 367 6 766 6 103 2 623 6 774 2 499 2 502 2 913 4 1045 12 1046 2 628 4 780 2 246 4 248 2 782 4 633 2 1055 4 251 8 639 2 118 2 512 8 117 2 1058 6 119 6 640 2 641 2 384 2 932 2 
519 4 800 2 526 2 801 6 802 2 3 2 804 2 528 6 266 2 8 6 9 2 531 2 532 4 535 2 271 2 814 2 275 2 277 4 818 2 280 2 282 6 542 2 549 6 550 2 295 2 296 4 298 6 554 4 837 2 839 2 556 2 304 8 558 10 308 4 38 4 39 2 43 2 313 2 571 2 859 2 316 24 45 8 326 8 55 2 581 2 580 2 871 6 874 2 60 2 61 6 64 2 879 8 882 2 881 12 595 2 70 6 343 4 886 4 887 12 350 4 82 4 893 2 609 2 88 2 896 12 612 2 613 2 99 2 902 2 367 6 618 6 103 2 623 6 913 4 628 6 633 2 634 2 639 2 928 2 117 2 118 2 641 2 640 2 119 12 384 2 643 6 932 2 936 6 938 4 655 2 129 2 395 2 659 2 135 2 943 2 661 6 401 2 944 2 144 2 949 2 954 6 151 12 409 10 411 6 414 6 158 12 959 2 693 4 418 2 962 4 965 2 423 16 701 6 970 2 171 2 703 4 973 6 428 2 975 2 432 8 710 2 173 4 712 2 985 6 720 2 989 2 188 4 450 52 725 2 453 2 994 6 194 2 455 2 195 2 461 2 197 2 1000 2 466 2 1005 2 742 2 744 2 475 2 216 2 219 4 1018 2 481 4 223 2 224 4 1022 4 1025 2 226 2 1027 2 1029 2 490 2 1030 2 1035 2 766 6 774 2 499 2 502 4 501 6 1045 10 1046 2 780 2 246 4 248 2 782 4 1055 4 251 10 512 10 1058 12 
55 2 938 2 490 2 871 2 526 2 3 2 423 4 1000 2 804 2 395 2 902 2 466 2 970 2 558 6 1005 2 103 2 882 2 432 2 710 2 886 4 248 2 985 6 782 2 859 2 188 2 219 2 1055 4 818 2 411 4 450 4 481 4 117 2 512 6 1022 2 88 2 
938 2 800 2 526 2 3 2 804 2 395 2 659 2 271 2 814 2 144 2 818 2 411 2 959 2 23 2 693 4 550 2 423 4 168 2 839 2 970 2 558 6 171 2 703 3 973 6 308 2 432 2 710 2 173 4 712 2 178 2 43 2 985 6 859 2 188 2 316 24 45 2 450 28 996 2 326 6 329 3 55 2 461 2 871 2 874 2 60 2 1000 2 466 2 64 2 879 6 1005 2 881 8 882 2 595 2 744 2 886 4 216 2 749 2 350 4 82 3 219 2 752 2 224 4 1022 2 88 2 226 2 95 2 490 2 899 2 612 2 613 2 99 2 366 2 902 2 766 6 103 2 499 2 502 3 1045 4 628 4 780 2 248 2 782 2 376 2 633 2 1055 4 639 2 512 6 117 2 932 2 
55 2 938 2 461 2 581 2 580 2 871 4 526 2 874 2 3 2 1000 2 804 2 395 2 466 2 266 2 9 2 659 2 1005 2 532 2 882 2 943 2 886 4 216 2 219 4 411 10 818 2 481 8 893 2 1022 4 88 2 693 2 226 2 1029 2 490 2 612 2 230 2 423 6 902 2 970 2 558 6 428 2 973 4 103 2 774 2 432 4 710 2 913 4 173 2 246 2 248 2 43 2 782 4 985 8 633 2 859 2 188 2 316 6 1055 4 450 12 117 2 512 6 
55 2 938 2 461 2 581 2 580 2 871 4 526 2 874 2 3 2 1000 2 804 2 655 2 466 2 266 2 9 2 659 2 1005 2 532 2 882 2 943 2 886 4 216 2 279 2 219 4 411 10 818 2 481 8 893 2 1022 4 159 2 693 2 89 4 88 2 226 2 1029 2 490 2 612 2 423 8 902 2 970 2 558 6 428 2 973 4 103 2 774 2 432 4 710 2 913 4 173 2 246 2 248 2 43 2 985 8 782 4 633 2 859 2 316 6 188 2 1055 4 450 12 117 2 512 8 
764 2 526 2 1000 2 
764 2 526 2 1000 2 
519 4 938 4 800 2 941 4 526 2 655 2 659 2 271 2 814 2 144 2 277 4 409 4 411 4 818 2 414 2 959 2 693 4 962 2 550 2 554 2 169 2 423 14 839 2 171 2 558 12 973 6 430 2 308 4 432 4 708 2 710 2 712 2 173 4 38 4 43 2 985 6 316 16 188 4 45 2 450 24 449 2 993 2 326 2 460 2 461 2 871 4 874 2 736 2 60 2 1000 2 64 2 879 2 1007 2 881 2 595 2 744 2 472 2 886 4 216 2 350 4 219 2 220 2 481 4 224 4 895 2 1022 2 226 2 612 2 613 2 766 6 103 2 499 2 502 2 1045 4 780 2 630 2 248 2 782 2 634 4 636 2 1055 4 251 4 639 2 117 2 512 10 640 2 644 2 932 2 
1045 2 626 2 460 2 389 2 962 2 461 2 275 2 181 2 316 2 45 2 450 4 1007 2 414 2 239 2 895 2 609 2 774 2 
519 4 938 4 800 2 941 4 526 2 655 2 659 2 271 2 814 2 144 2 277 4 409 4 411 4 818 2 686 2 959 2 693 4 550 2 554 2 169 2 423 14 839 2 171 2 558 12 973 6 430 2 308 4 432 4 708 2 710 2 712 2 173 4 38 4 43 2 985 6 316 14 188 4 450 20 449 2 993 4 326 2 460 2 461 2 871 4 874 2 736 2 60 2 1000 2 64 2 879 2 881 2 595 2 744 2 886 4 216 2 350 4 219 2 220 2 481 4 224 4 895 2 1022 2 226 2 612 2 613 2 766 6 103 2 499 2 502 4 1045 2 780 2 630 2 248 2 782 2 634 4 636 2 1055 4 251 4 639 2 117 2 512 10 640 2 931 2 644 2 932 2 
519 4 938 4 800 2 941 4 526 2 655 2 659 2 271 2 814 2 144 2 277 4 409 4 411 4 818 2 414 2 959 2 693 4 962 2 550 2 554 2 169 2 423 14 839 2 171 2 558 12 973 6 430 2 308 4 432 4 708 2 710 2 712 2 173 4 38 4 43 2 985 6 316 16 188 4 45 2 450 24 449 2 993 2 326 2 460 2 461 2 871 4 874 2 736 2 60 2 1000 2 64 2 879 2 1007 2 881 2 595 2 744 2 472 1 886 4 216 2 350 4 219 2 220 2 481 4 224 4 895 2 1022 2 226 2 612 2 613 2 766 6 103 2 499 2 502 2 1045 4 780 2 630 2 248 2 782 2 634 4 636 2 1055 4 251 4 639 2 117 2 512 10 640 2 644 2 932 2 
712 2 457 2 174 2 58 2 550 2 953 2 583 2 835 2 31 2 450 4 727 2 65 2 927 2 559 2 932 2 499 2 1060 2 
459 2 521 3 900 2 99 2 879 2 703 3 881 2 809 2 400 2 597 1 502 3 343 6 628 2 1016 2 888 2 82 3 316 2 681 2 450 2 47 4 822 2 789 2 575 2 51 2 326 2 
459 2 521 2 900 2 99 2 879 2 703 2 881 2 809 2 400 2 502 2 343 6 628 2 1016 2 888 2 82 2 316 2 681 2 450 2 47 4 822 2 789 2 575 2 51 2 326 2 
459 2 521 2 900 2 99 2 879 2 703 2 881 2 809 2 400 2 502 2 343 6 628 2 1016 2 888 2 82 2 316 2 681 2 450 2 47 4 822 2 789 2 575 2 51 2 326 2 
96 3 831 4 199 2 99 2 427 2 907 2 703 3 368 4 306 2 594 2 881 2 908 2 69 6 400 2 205 2 502 3 775 6 433 2 106 4 344 4 148 2 1015 2 676 4 249 3 314 2 1054 2 572 2 316 4 20 2 605 2 450 10 821 4 688 2 483 3 1020 2 256 2 160 4 486 2 228 2 546 2 
199 2 881 2 594 2 69 4 400 2 205 2 344 4 1015 2 148 2 676 4 890 2 20 2 605 2 821 4 688 2 1020 2 483 2 160 4 486 2 546 2 228 2 291 2 96 2 831 4 99 2 703 2 907 2 427 2 306 2 368 4 908 2 433 2 775 6 502 2 106 4 41 2 314 2 249 2 572 2 1054 2 316 4 450 10 256 2 
199 2 881 2 594 2 69 4 400 2 205 2 344 4 1015 2 148 2 676 4 890 2 20 2 605 2 821 4 688 2 1020 2 483 2 160 4 486 2 546 2 228 2 291 2 96 2 831 4 99 2 703 2 907 2 427 2 306 2 368 4 908 2 433 2 775 6 502 2 106 4 41 2 314 2 249 2 572 2 1054 2 316 4 450 10 256 2 
199 2 881 2 594 2 69 4 400 2 205 2 344 4 1015 2 148 2 676 4 890 2 20 2 605 2 821 4 688 2 1020 2 483 2 160 4 486 2 546 2 228 2 291 2 96 2 831 4 99 2 703 2 907 2 427 2 306 2 368 4 908 2 433 2 775 6 502 2 106 4 41 2 314 2 249 2 572 2 1054 2 316 4 450 10 256 2 
199 2 881 2 594 2 69 4 400 2 205 2 344 4 1015 2 148 2 676 4 890 4 20 2 605 2 821 4 688 2 1020 2 483 2 160 4 486 2 546 2 228 2 291 4 96 2 831 4 99 2 703 2 907 2 427 2 306 2 368 4 908 2 433 2 775 6 502 2 106 4 41 4 314 2 249 2 572 2 1054 2 316 4 450 10 256 2 
311 2 842 2 299 2 421 2 615 2 71 2 
795 2 851 2 842 2 112 2 573 2 331 2 166 2 
652 1 464 2 876 2 335 2 942 2 302 1 806 2 659 2 619 2 972 2 34 2 1009 1 203 2 909 1 848 2 341 1 145 2 918 2 211 2 858 2 723 2 316 8 450 10 158 2 257 2 125 2 
291 4 759 2 199 6 1040 4 306 6 594 6 429 2 104 2 69 15 562 2 141 2 106 4 405 2 344 12 41 2 1015 6 314 6 187 2 316 6 890 2 412 2 450 6 190 2 637 2 451 2 824 4 688 2 1020 6 256 6 1062 2 
360 2 673 2 831 2 922 2 5 2 217 2 446 2 316 1 410 1 234 4 450 1 319 2 134 2 821 2 368 2 514 2 324 6 26 2 
360 4 673 4 831 2 922 2 5 2 217 2 446 4 234 4 319 2 134 2 821 2 368 2 514 2 26 2 324 6 
360 8 673 8 831 2 922 6 5 2 217 2 446 8 316 1 410 1 234 4 450 1 319 2 134 2 821 2 368 2 514 2 26 8 324 10 
360 2 673 2 831 2 5 2 217 2 446 2 234 2 319 2 134 2 821 2 368 2 514 2 324 2 
390 2 650 4 392 4 800 6 4 8 527 2 264 4 267 4 660 4 529 2 530 2 11 2 143 14 272 4 816 1 670 24 539 2 18 4 153 4 409 16 679 2 682 4 157 16 281 4 283 2 957 16 959 6 289 6 27 11 417 4 162 8 547 4 419 8 829 6 963 32 551 8 966 2 422 4 699 14 700 4 968 4 557 16 847 4 846 2 40 8 568 2 440 8 183 4 445 2 724 4 315 10 316 74 450 82 49 4 192 6 454 2 577 4 579 4 52 14 731 4 998 6 737 6 1001 10 1002 4 470 2 471 2 204 4 744 28 208 4 207 4 472 2 212 4 479 4 1017 4 350 44 224 36 1019 24 85 2 1024 4 227 4 91 2 1026 4 92 4 613 26 231 24 766 106 768 2 767 4 495 10 102 8 499 2 369 4 914 2 107 4 778 4 108 32 371 4 631 4 113 2 1052 4 1053 4 635 2 788 4 255 4 120 4 516 2 121 10 260 10 794 8 517 2 
126 2 998 2 392 4 800 2 737 4 264 2 1001 6 1002 4 268 2 529 2 660 2 471 2 204 2 143 4 744 12 207 2 472 2 477 2 147 2 539 2 18 4 409 14 350 14 540 4 682 4 283 2 224 14 1019 8 959 2 27 2 290 2 227 4 91 2 830 2 829 2 613 12 699 4 968 4 766 44 768 2 495 6 977 2 499 2 914 2 108 6 40 8 631 2 113 2 375 2 1053 2 635 2 315 6 316 30 863 12 450 32 320 2 726 4 49 2 322 2 121 2 731 4 517 2 
126 2 649 4 392 6 800 14 940 6 393 24 651 10 4 42 264 10 396 4 267 6 268 2 529 4 660 4 270 24 11 2 143 6 272 6 670 92 149 90 18 6 153 6 409 28 155 24 540 15 682 6 157 42 283 8 22 18 959 14 289 2 27 16 290 2 417 6 547 4 829 36 830 2 297 4 422 6 966 4 699 6 700 6 968 6 845 6 847 4 846 2 977 4 978 4 40 18 568 2 440 24 316 140 315 16 863 26 450 156 320 2 726 10 49 6 192 5 322 4 50 12 576 8 577 6 579 4 52 12 731 6 998 10 873 10 586 6 588 2 737 8 1001 16 1002 8 592 2 471 8 340 4 204 4 744 58 206 10 207 10 208 6 1013 24 75 8 472 4 477 2 212 4 479 4 350 112 224 88 482 2 1019 124 485 8 1024 4 227 6 91 2 1026 6 92 6 897 90 613 58 616 4 100 4 231 84 904 26 235 4 766 254 768 2 767 4 495 16 102 50 499 8 369 6 914 2 107 4 778 4 371 6 108 36 920 2 631 10 113 8 375 2 923 24 1052 6 1053 10 635 2 788 6 382 2 791 26 120 4 516 2 121 18 517 2 
91 2 800 2 613 6 699 2 1001 2 1036 2 968 2 878 2 766 24 172 2 67 2 66 4 470 2 495 2 471 2 976 2 143 2 499 2 744 6 914 2 1012 2 948 2 472 2 209 2 1048 2 539 2 113 2 748 2 784 2 635 2 409 14 350 8 315 2 316 20 450 20 283 2 823 2 224 8 1019 2 959 2 930 2 731 2 227 2 517 2 358 2 
777 2 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 
926 1 210 1 694 1 632 1 910 1 493 1 

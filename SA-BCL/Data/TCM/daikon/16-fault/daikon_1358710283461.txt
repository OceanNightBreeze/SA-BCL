#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (36,461) (36,461) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 4 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 4 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 487 705 881 351 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 42 468 3 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 42 468 3 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 42 468 3 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:memberOf(F[D)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3_5()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:sum([D)D
daikon.ProglangType:isIntegral()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7988 | if (x) -> if (!x)
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6323 | = null
daikon.Debug:logDetail()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.PptSlice0:arity()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptSlice1:num_samples()I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:gt(II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_63()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:eq(DD)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_16()Z
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_2_15(I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptSlice2:arity()I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_50()Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:Initializer()Ljtb.syntaxtree.Initializer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:lt(II)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltsEqual([II)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:eq(JJ)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 128699 | < -> <=
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_49()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String; | RETURN | 102411 | return null
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltsGT([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:subsetOf([J[J)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 20179 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3_1()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:justified()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lte(II)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:logDetail()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:getConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.FormatTestCase:passes()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | CONDITION | 25988 | if (x) -> if (!x)
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ProglangType:baseIsScalar()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:sameLength([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3835 | + -> >>>
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2258 | return null
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltsGTE([II)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ModBitTracker:num_vars()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_55()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:logOn()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_161()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.MathMDE:modulus([I)[I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
628 4 481 2 461 2 971 2 82 2 419 2 639 2 36 2 176 2 
524 2 107 6 831 2 44 2 559 2 438 2 650 6 614 2 408 2 245 6 680 2 
461 2 523 6 673 2 716 2 952 2 750 6 594 2 704 4 706 2 427 6 36 2 25 4 278 6 
414 8 231 8 887 8 251 2 826 2 699 12 461 4 74 8 762 2 844 8 79 2 678 16 821 17 156 17 422 6 209 4 54 4 224 2 876 8 36 4 744 8 
299 4 654 6 
262 2 
887 2 955 2 156 6 188 2 7 2 506 2 135 2 414 2 231 2 699 4 166 2 235 2 74 2 844 2 819 2 821 6 678 4 422 2 876 2 744 2 772 2 
667 4 898 1 414 8 231 8 887 8 841 8 74 8 762 2 844 8 920 2 686 8 346 4 562 2 678 16 821 18 156 9 111 1 876 8 744 8 
947 2 554 4 61 14 369 2 26 2 280 4 588 2 344 4 525 4 493 2 858 4 833 2 324 4 407 62 894 4 101 2 37 2 896 4 353 4 573 2 511 2 544 2 167 2 418 10 962 2 168 4 577 10 845 2 203 6 739 2 644 8 390 2 940 2 875 2 306 4 767 2 973 2 709 2 58 4 770 4 
92 2 662 2 262 2 158 2 929 2 513 2 240 2 796 2 81 2 707 2 
912 2 370 2 371 2 119 2 442 4 751 2 501 2 630 2 632 2 634 2 382 2 73 2 872 2 386 2 936 2 644 2 516 2 824 2 22 2 213 2 768 2 767 2 657 2 396 2 948 2 461 4 400 2 223 4 527 2 782 4 728 2 36 4 296 2 896 2 897 2 419 2 478 2 737 2 360 2 306 4 244 2 311 2 428 2 59 2 
887 4 461 4 156 8 321 1 293 2 98 4 36 4 898 1 72 8 231 4 414 4 74 4 844 4 678 8 821 9 646 8 876 4 744 4 
947 2 644 2 203 2 
948 2 557 2 140 2 817 2 623 2 185 2 676 22 289 2 35 2 693 10 957 2 504 2 195 2 328 2 
745 2 488 2 851 2 116 2 854 1 372 1 256 2 624 3 374 1 120 1 121 24 859 2 260 1 123 2 261 2 499 2 124 2 500 3 5 2 503 2 755 2 380 3 864 2 756 1 757 2 381 2 139 8 758 16 265 2 10 1 384 2 759 2 12 2 868 2 141 1 269 2 640 1 271 3 642 8 142 2 17 1 388 2 389 2 517 2 648 3 651 2 23 2 397 16 882 2 658 2 279 12 774 1 283 2 28 2 153 2 152 2 29 2 779 2 290 6 291 2 892 2 530 4 893 2 532 3 294 2 533 2 295 2 784 2 36 32 159 2 786 2 670 2 538 3 298 1 789 2 543 24 416 2 672 2 904 2 303 2 546 2 305 2 548 4 909 2 308 6 911 2 175 2 60 16 430 2 180 2 808 1 916 32 433 3 186 2 66 4 811 2 812 2 564 32 446 2 694 2 567 2 922 1 69 2 194 2 327 2 931 4 933 2 576 2 820 2 78 2 702 2 333 4 822 3 207 3 80 2 210 8 336 16 582 2 216 1 339 2 85 5 340 2 585 2 461 34 90 2 719 2 464 2 93 2 953 3 465 2 593 2 347 2 956 2 95 6 96 2 726 4 597 2 960 6 731 4 471 3 600 2 602 4 236 1 846 2 966 2 481 2 482 2 
455 2 
461 2 869 2 
461 4 531 2 807 2 
746 2 489 32 748 2 491 18 749 32 118 106 255 32 494 2 856 2 857 2 496 2 378 2 860 4 125 12 127 32 263 2 130 4 865 2 866 32 510 32 512 4 760 2 268 4 638 2 273 10 143 4 19 24 276 2 766 32 394 2 878 2 147 2 885 18 148 8 522 4 776 8 401 12 150 2 402 2 403 2 404 12 286 2 780 14 292 32 666 18 895 22 534 2 535 2 537 2 413 22 539 2 788 10 161 4 542 40 41 32 902 4 903 32 165 2 545 2 48 2 793 6 49 2 51 2 52 2 173 2 907 2 174 2 56 2 55 2 309 4 553 2 683 32 315 2 431 8 914 2 919 106 436 8 809 106 318 2 561 2 563 18 921 2 691 2 68 2 325 2 193 2 71 2 76 18 202 2 701 2 578 2 938 2 823 2 335 2 83 2 708 2 214 2 828 2 587 2 89 2 343 2 222 12 349 32 595 2 596 2 958 2 598 2 469 2 470 22 354 42 104 14 840 2 603 2 842 12 359 2 740 2 968 2 967 2 847 2 742 2 365 2 972 2 743 2 366 2 615 18 
574 1 425 2 697 2 798 2 
377 2 697 2 
367 2 584 2 509 2 886 2 635 2 341 2 1 2 791 2 637 2 718 2 47 2 676 6 873 2 528 4 2 2 304 4 689 2 429 2 
137 2 798 2 
644 2 901 2 200 2 409 2 
608 2 644 2 901 2 4 2 200 2 409 2 
644 2 826 2 901 2 697 2 6 2 625 2 
781 2 501 2 
954 2 644 2 826 2 901 2 
613 2 502 2 
355 2 835 2 
144 2 815 2 
677 2 277 2 
355 2 277 2 133 2 
440 2 355 2 277 2 
838 2 355 2 277 2 
355 2 861 2 277 2 
122 6 467 2 696 2 39 6 901 2 607 2 238 2 644 2 
663 2 724 2 
644 2 84 2 826 2 901 2 4 2 697 2 625 2 
697 2 625 2 769 2 
732 2 697 2 625 2 
724 2 518 2 798 2 
697 2 625 2 
362 2 724 2 
697 2 154 2 
724 2 462 2 798 2 
601 2 815 2 798 2 
681 2 277 2 798 2 
613 2 798 2 91 2 
355 2 806 2 798 2 
724 2 459 2 
64 2 697 2 
815 2 519 2 
18 2 277 2 
613 2 715 2 
355 2 99 2 
724 2 626 2 
355 2 917 2 
460 2 613 2 
301 2 277 2 
330 2 815 2 
474 2 724 2 462 2 798 2 
474 2 724 2 462 2 798 2 30 2 
724 2 798 2 237 2 
724 2 798 2 102 2 
830 2 434 2 560 2 783 2 
759 2 
617 4 851 2 116 2 120 2 123 2 261 2 499 2 862 2 134 4 864 2 757 2 12 2 267 2 761 2 868 2 640 2 642 2 142 6 388 2 645 2 651 2 653 2 880 2 882 2 279 8 660 2 28 2 153 4 29 2 779 2 290 2 291 2 892 2 530 4 36 26 412 2 670 2 671 2 416 2 672 2 300 2 546 2 548 4 909 2 308 2 911 2 175 2 800 2 60 6 180 2 916 4 66 4 564 6 812 2 446 2 931 2 820 2 78 2 333 2 702 2 939 2 461 26 90 2 465 2 466 2 95 6 726 4 960 4 226 2 731 2 846 2 242 2 243 2 481 2 
617 4 851 2 116 2 120 2 123 2 261 2 499 2 862 2 134 4 864 2 757 2 265 2 867 2 12 2 267 2 761 2 868 2 640 2 642 2 142 6 388 2 645 2 651 2 880 2 658 2 882 2 279 8 660 2 28 2 153 4 29 2 779 2 290 2 291 2 892 2 530 4 294 2 36 26 412 2 670 2 416 2 672 2 300 2 169 2 546 2 548 4 909 2 308 2 911 2 175 2 800 2 60 6 180 2 916 4 66 4 564 6 812 2 446 2 192 2 931 2 820 2 78 2 333 2 702 2 939 2 461 26 90 2 465 2 95 6 726 4 960 6 226 2 731 2 846 2 242 2 243 2 481 2 
432 2 
157 2 581 2 
486 2 555 2 62 2 913 2 182 2 855 2 437 2 559 2 439 2 447 8 499 2 67 4 927 2 926 4 633 2 138 2 332 2 454 2 206 2 650 6 211 4 146 2 710 2 86 4 461 12 219 2 951 2 891 2 591 2 831 4 94 2 465 2 345 10 834 2 892 2 95 4 34 2 726 2 729 8 36 6 473 2 670 2 476 2 963 2 606 2 107 6 361 2 846 2 546 2 50 2 794 2 612 2 614 2 548 2 57 2 310 4 245 6 175 2 680 4 246 4 
486 2 555 2 913 2 182 2 620 2 437 2 559 2 439 2 438 2 447 8 499 2 67 4 927 2 926 4 633 2 138 2 332 2 454 2 206 2 650 8 211 4 146 2 710 2 86 4 461 12 219 2 951 2 891 2 591 2 831 4 94 2 465 2 345 10 834 2 892 2 95 4 34 2 726 2 36 6 729 8 473 2 670 2 476 2 843 4 963 2 606 2 107 8 361 2 846 2 546 2 50 2 794 2 612 2 426 2 548 2 614 2 57 2 310 4 245 6 175 2 680 4 246 4 
633 2 86 4 913 2 219 2 476 2 951 2 591 2 831 2 107 2 439 2 361 2 834 2 794 2 34 2 310 4 245 2 680 2 246 2 
486 2 555 2 62 2 913 2 182 2 855 2 437 2 439 2 438 2 447 4 499 2 67 4 927 2 926 4 633 2 138 2 332 2 454 2 206 2 650 6 211 4 146 2 710 2 86 4 461 12 219 2 951 2 891 2 591 2 831 4 94 2 465 2 345 6 834 2 892 2 95 4 34 2 726 2 729 4 36 6 473 2 670 2 476 2 963 2 606 2 107 6 361 2 846 2 546 2 50 2 794 2 612 2 614 2 548 2 57 2 310 4 245 4 175 2 680 4 246 4 
486 2 555 2 62 2 913 2 182 2 855 2 437 2 439 2 447 4 499 2 67 4 927 2 926 4 633 2 138 2 332 2 454 2 206 2 650 6 211 4 146 2 710 2 86 4 461 12 219 2 951 2 891 2 591 2 831 4 94 2 465 2 345 6 834 2 892 2 95 4 34 2 726 2 729 4 36 6 473 2 670 2 476 2 963 2 606 2 107 4 44 2 361 2 846 2 546 2 50 2 794 2 612 2 614 2 548 2 57 2 310 4 245 6 175 2 680 4 246 4 
486 2 555 2 62 2 913 2 182 2 855 2 437 2 559 2 439 2 447 4 499 2 67 4 927 2 926 4 633 2 138 2 332 2 454 2 206 2 650 6 211 4 146 2 710 2 86 4 461 12 219 2 951 2 891 2 591 2 831 4 94 2 465 2 345 6 834 2 892 2 95 4 34 2 726 2 729 8 36 6 473 2 670 2 476 2 963 2 606 2 107 6 361 2 846 2 546 2 50 2 794 2 612 2 614 2 548 2 57 2 310 4 245 6 175 2 680 4 246 4 
486 2 555 2 62 2 913 2 182 2 855 2 437 2 559 2 439 2 447 8 499 2 67 4 927 2 926 4 633 2 138 2 332 2 454 2 206 2 650 8 211 4 146 2 710 2 86 4 461 12 219 2 951 2 891 2 591 2 831 4 94 2 465 2 345 10 834 2 892 2 95 4 34 2 726 2 729 8 36 6 473 2 670 2 476 2 963 2 606 2 107 6 44 2 361 2 846 2 546 2 50 2 794 2 612 2 548 2 614 2 57 2 310 4 245 8 175 2 680 4 246 4 
486 2 555 2 62 2 913 2 182 2 855 2 437 2 559 2 439 2 447 8 499 2 67 4 927 2 926 4 633 2 138 2 332 2 454 2 206 2 650 6 211 4 146 2 710 2 86 4 461 12 219 2 951 2 891 2 591 2 831 4 94 2 465 2 345 10 834 2 892 2 95 4 34 2 726 2 729 8 36 6 473 2 670 2 476 2 963 2 606 2 107 6 361 2 846 2 546 2 50 2 794 2 612 2 614 2 548 2 57 2 310 4 245 6 175 2 680 4 246 4 
486 2 261 2 499 2 9 2 507 6 265 2 266 10 272 2 765 2 20 2 279 4 28 2 29 2 290 2 291 2 530 4 34 2 531 6 294 2 36 24 541 6 40 1 44 4 546 2 50 2 794 2 547 2 795 2 548 4 57 2 549 2 310 4 308 2 551 1 312 2 60 6 802 6 555 2 62 2 313 2 66 4 319 2 564 8 67 4 323 2 322 2 329 4 332 2 820 2 78 2 333 2 583 6 86 4 87 2 342 6 591 2 90 2 831 4 94 2 345 2 834 2 350 6 95 6 100 1 606 2 107 4 108 2 361 2 846 2 612 2 611 4 614 4 616 2 619 2 116 2 621 6 862 2 134 4 864 12 136 1 633 2 138 2 869 6 642 2 142 6 388 2 650 12 651 2 393 2 652 2 146 2 880 2 398 1 888 2 660 2 661 2 891 2 155 7 892 2 410 8 412 4 670 2 416 2 672 2 905 2 171 2 679 2 908 1 909 2 911 2 175 2 680 4 913 2 182 2 916 2 437 2 439 2 690 6 695 7 927 2 926 6 928 1 931 2 934 2 702 2 454 2 206 2 205 6 456 2 455 6 211 8 942 2 215 2 946 6 710 4 712 6 461 46 714 2 219 2 951 2 463 6 720 2 465 2 726 4 729 2 960 6 731 2 733 1 473 2 233 2 475 2 476 2 963 4 969 1 481 2 741 6 245 8 246 4 485 2 
486 2 619 2 852 2 116 2 621 6 261 2 499 2 862 2 9 2 134 4 864 12 507 6 633 2 138 2 265 2 266 10 869 6 272 2 642 2 765 2 142 6 388 2 650 12 651 2 652 2 20 2 393 2 146 2 880 2 279 8 888 2 660 2 28 2 661 2 891 2 153 2 29 2 290 2 291 2 892 2 34 2 530 4 531 6 294 2 36 26 410 8 412 4 670 2 541 6 416 2 672 2 302 2 905 2 679 2 171 2 546 2 50 2 547 2 794 2 795 2 909 2 548 4 549 2 57 2 308 2 310 4 911 2 312 2 175 2 680 4 60 6 802 6 555 2 313 2 62 2 913 2 182 2 916 2 437 2 559 4 66 4 439 2 319 2 564 8 690 6 322 2 323 2 67 4 926 6 927 2 329 4 931 4 934 2 332 2 78 2 820 2 702 2 333 4 454 2 205 6 206 2 455 6 456 2 942 2 211 8 946 6 215 2 710 4 583 6 712 6 86 4 87 2 714 2 461 48 219 2 342 6 951 2 463 6 90 2 591 2 720 2 831 4 345 2 94 2 465 2 350 6 834 2 95 6 726 4 729 6 960 6 731 4 473 2 233 2 475 2 476 2 963 4 606 2 107 8 108 2 361 2 846 2 481 2 611 4 612 2 741 6 614 4 245 8 616 2 485 2 246 4 
486 2 619 2 852 2 116 2 621 6 261 2 499 2 862 2 9 2 134 4 864 12 507 6 633 2 138 2 265 2 266 10 869 6 272 2 642 2 765 2 142 6 388 2 650 12 651 2 652 2 20 2 393 2 146 2 880 2 279 8 888 2 660 2 28 2 661 2 891 2 153 2 29 2 290 2 291 2 892 2 34 2 530 4 531 6 294 2 36 26 410 8 412 4 670 2 541 6 416 2 672 2 302 2 905 2 679 2 171 2 546 2 50 2 547 2 794 2 795 2 909 2 548 4 549 2 57 2 308 2 310 4 911 2 312 2 175 2 680 4 60 6 802 6 555 2 313 2 62 2 913 2 182 2 916 2 437 2 559 4 66 4 439 2 319 2 564 8 690 6 447 4 322 2 323 2 67 4 926 6 927 2 329 4 931 4 934 2 332 2 78 2 820 2 702 2 333 4 454 2 205 6 206 2 455 6 456 2 942 2 211 8 946 6 215 2 710 4 583 6 712 6 86 4 87 2 714 2 461 48 219 2 342 6 951 2 463 6 90 2 591 2 720 2 831 4 94 2 345 6 465 2 350 6 834 2 95 6 726 4 729 6 960 6 731 4 473 2 233 2 475 2 476 2 963 4 606 2 107 8 108 2 361 2 846 2 481 2 611 4 612 2 741 6 614 4 245 8 616 2 485 2 246 4 
486 2 492 2 261 2 499 2 9 2 507 12 265 2 266 8 13 2 272 2 765 2 20 2 279 10 28 2 777 2 29 2 290 4 291 2 530 4 34 2 531 12 294 2 36 24 541 12 302 2 44 2 546 2 50 2 794 2 547 2 795 2 307 2 548 4 57 2 549 2 310 4 308 4 312 2 60 8 802 6 555 2 62 2 66 4 559 4 319 2 564 12 67 4 323 2 322 2 329 4 332 2 77 6 820 2 78 2 333 4 583 6 86 4 87 2 342 6 90 2 591 2 831 4 94 2 345 6 834 2 350 6 95 6 97 6 606 2 107 10 108 2 361 2 846 2 612 2 611 4 614 4 115 2 616 2 619 2 852 2 116 2 621 6 629 6 862 2 379 6 134 6 864 10 633 2 138 2 869 12 642 4 142 8 388 2 874 2 650 16 651 2 652 2 393 2 146 2 880 4 888 2 660 2 661 2 891 2 153 2 892 2 410 8 412 4 670 2 416 2 672 2 905 2 171 2 679 2 423 2 909 2 911 2 175 2 680 4 913 2 182 2 916 4 437 2 439 2 438 2 447 4 690 6 191 6 927 2 926 6 451 6 930 2 931 4 934 2 702 2 454 2 206 2 205 12 456 2 455 12 208 6 211 8 942 2 945 6 215 2 946 6 710 4 712 6 461 52 714 2 219 2 951 2 463 6 720 2 465 2 726 4 729 6 960 6 731 4 473 2 233 2 475 2 476 2 963 4 481 2 741 6 245 10 484 6 246 4 485 2 
555 2 62 2 86 2 461 4 182 2 219 2 951 2 891 2 591 2 831 4 559 2 345 4 439 2 834 2 447 4 67 2 729 6 926 2 927 2 473 2 138 2 606 2 332 2 107 6 361 2 206 2 794 2 650 4 211 2 614 2 57 2 310 2 146 2 245 6 680 4 
116 2 490 2 256 2 627 2 498 2 261 2 499 2 862 2 5 2 134 4 864 4 138 2 265 2 759 2 266 2 142 6 388 2 650 4 651 2 146 2 660 2 28 2 891 2 29 2 290 3 291 2 892 2 530 4 294 2 36 24 412 2 670 2 416 2 672 2 421 3 546 2 794 2 305 2 548 4 909 2 57 2 310 2 308 3 911 2 175 2 680 4 60 6 555 2 62 2 313 2 182 2 916 3 184 2 437 2 559 2 66 4 439 2 564 8 67 2 926 2 197 2 927 2 332 2 820 2 78 2 206 2 211 2 86 2 461 28 219 2 951 2 90 2 591 2 831 4 465 2 345 2 834 2 95 6 726 4 729 6 960 6 473 2 606 2 107 6 361 2 846 2 481 2 614 2 245 6 
138 2 805 2 146 2 
138 2 805 2 146 2 
486 2 621 2 261 2 499 2 862 2 864 4 138 4 265 2 266 2 11 2 142 2 388 2 650 16 651 2 146 6 521 2 279 4 149 2 660 2 28 2 891 2 151 2 29 2 291 2 892 2 33 2 530 4 294 2 36 16 412 6 669 2 670 2 416 2 672 2 44 4 546 2 50 2 906 2 548 4 909 2 797 2 310 2 911 2 175 2 799 4 680 4 60 2 913 2 805 2 916 2 66 4 559 4 439 2 438 4 319 2 564 2 444 2 447 4 565 2 323 2 67 2 926 4 329 2 931 4 332 2 820 2 78 2 702 4 333 4 941 2 211 4 710 4 86 2 461 24 219 4 589 2 951 2 90 2 831 4 94 2 465 2 345 6 95 6 726 4 959 2 729 6 730 4 960 6 837 2 226 4 103 2 731 4 735 2 357 2 476 2 963 2 107 12 846 2 481 2 611 2 614 4 245 12 485 2 246 4 
864 2 149 2 900 2 87 2 266 2 461 4 621 2 108 2 33 2 529 2 34 2 611 2 581 2 959 2 36 2 326 2 175 2 
486 2 621 2 261 2 499 2 862 2 864 2 138 4 265 2 871 2 142 2 388 2 650 16 651 2 146 6 521 2 279 4 149 2 660 2 28 2 891 2 151 2 29 2 291 2 892 2 33 2 530 4 294 2 36 16 412 6 669 2 670 2 899 2 416 2 672 2 44 4 546 2 50 2 906 2 548 4 909 2 797 2 310 2 911 2 175 2 799 4 680 4 60 2 913 2 805 2 916 4 66 4 559 4 439 2 438 4 319 2 564 2 444 4 447 4 565 2 323 2 67 2 926 4 329 2 931 4 332 2 820 2 78 2 702 4 333 4 454 2 211 4 825 2 710 4 86 2 461 24 219 4 589 2 951 2 90 2 831 4 94 2 465 2 345 6 95 6 726 4 959 2 729 6 730 4 960 6 226 4 103 2 731 4 227 2 735 2 476 2 963 4 107 12 846 2 481 2 614 4 245 12 974 2 485 2 246 4 
486 2 248 2 621 2 261 2 499 2 126 2 862 2 864 4 138 4 265 2 266 2 142 2 388 2 650 16 651 2 146 6 521 2 279 4 149 2 660 2 28 2 891 2 151 2 29 2 291 2 892 2 33 2 530 4 294 2 36 16 412 6 669 2 670 2 416 2 672 2 44 4 546 2 50 2 906 2 548 4 909 2 797 2 310 2 911 2 175 2 799 4 680 4 60 2 913 2 805 2 916 2 66 4 559 4 439 2 438 4 319 2 564 2 444 2 447 4 565 2 323 2 67 2 926 4 329 2 201 2 931 4 332 2 820 2 78 2 702 4 333 4 454 2 211 4 710 4 711 2 86 2 461 24 219 4 589 2 951 2 90 2 831 4 94 2 465 2 345 6 95 6 726 4 959 2 729 6 730 4 960 6 226 4 103 2 731 4 735 2 476 2 963 4 107 12 846 2 481 2 611 2 112 2 614 4 245 12 485 2 246 4 
368 2 487 2 249 2 250 2 252 2 116 2 257 2 375 2 261 2 499 2 8 2 134 6 864 2 265 2 14 6 642 4 765 2 142 8 388 2 647 2 651 2 876 2 877 2 880 4 881 2 773 2 279 6 887 2 660 2 29 2 287 2 290 4 156 4 291 2 892 2 32 2 530 2 294 2 36 22 412 2 670 2 38 2 414 2 672 2 420 2 674 2 46 6 678 4 546 2 547 2 795 2 53 2 548 4 909 2 308 4 911 2 175 2 682 4 60 8 803 2 179 2 181 2 916 4 918 2 317 2 66 2 687 2 564 12 320 2 189 2 566 2 448 2 569 2 449 2 924 2 70 2 199 2 932 2 934 2 74 2 820 2 821 6 456 2 705 2 457 1 212 2 337 2 713 2 461 28 829 2 590 2 720 2 465 2 346 2 722 2 95 6 725 2 726 4 960 4 352 2 351 2 599 2 472 6 839 2 231 2 734 2 356 2 358 2 961 2 233 2 605 2 841 4 844 2 363 2 738 2 846 2 242 2 481 2 970 2 610 2 744 2 975 2 
880 6 60 2 281 2 950 2 116 2 461 2 916 3 290 3 564 2 445 3 814 4 36 2 570 2 571 2 134 2 668 2 160 2 698 2 163 2 636 2 75 2 142 2 308 3 338 2 
880 6 60 2 281 2 950 2 116 2 461 2 916 2 290 2 564 2 445 2 814 4 36 2 570 2 571 2 134 2 668 2 160 2 698 2 163 2 636 2 75 2 142 2 308 2 338 2 
880 6 60 2 281 2 950 2 116 2 461 2 916 2 290 2 564 2 445 2 814 4 36 2 570 2 571 2 134 2 668 2 160 2 698 2 163 2 636 2 75 2 142 2 308 2 338 2 
556 2 887 2 63 2 950 2 116 2 586 2 461 10 889 3 220 4 916 3 810 6 31 4 258 2 564 2 665 4 36 4 505 2 785 3 230 2 414 2 231 2 758 2 105 2 736 3 74 2 675 4 844 2 16 4 764 2 821 5 678 4 239 2 172 2 334 4 876 2 392 2 308 3 114 2 336 2 744 2 
556 2 887 2 63 2 950 2 116 2 586 2 461 10 889 2 220 4 916 2 810 6 31 4 156 4 258 2 564 2 665 4 36 4 505 2 785 2 230 2 414 2 231 2 758 2 105 2 736 2 74 2 675 4 844 2 16 4 764 2 821 4 678 4 239 2 172 2 334 4 876 2 392 2 308 2 114 2 336 2 744 2 
556 2 887 2 63 2 950 2 116 2 586 2 461 10 889 2 220 4 916 2 810 6 31 4 156 4 258 2 564 2 665 4 36 4 505 2 785 2 230 2 414 2 231 2 758 2 105 2 736 2 74 2 675 4 844 2 16 4 764 2 821 4 678 4 239 2 172 2 334 4 876 2 392 2 308 2 114 2 336 2 744 2 
556 2 887 2 63 2 950 2 116 2 586 2 461 10 889 2 220 4 916 2 810 6 31 4 156 4 258 2 564 2 665 4 36 4 505 2 785 2 230 2 414 2 231 2 758 2 105 2 736 2 74 2 675 4 844 2 16 4 764 2 821 4 678 4 239 2 172 2 334 4 876 2 392 2 308 2 114 2 336 2 744 2 
556 2 887 2 63 2 950 2 116 2 586 2 461 10 889 2 220 4 916 2 810 6 31 4 156 4 258 2 564 2 665 4 36 4 505 2 785 2 230 2 414 2 231 2 758 2 105 2 736 2 74 2 675 4 844 2 16 4 764 2 821 4 678 4 239 2 172 2 334 4 876 2 392 2 308 2 114 2 336 2 744 2 
508 2 242 2 827 2 254 2 622 2 552 2 870 2 
179 2 234 2 622 2 631 2 106 2 373 2 
801 2 804 2 850 2 461 10 253 2 778 2 915 2 493 1 592 1 892 2 727 2 36 8 836 2 225 2 132 2 450 2 228 2 541 2 544 1 164 1 270 2 763 1 943 2 655 2 848 2 24 2 
657 2 884 1 887 4 218 2 220 4 346 2 156 5 405 1 566 2 448 2 131 2 898 2 231 4 414 4 841 4 74 4 844 4 821 10 678 8 876 4 392 2 212 2 744 4 
217 2 0 2 27 7 775 2 461 1 417 4 453 2 575 2 935 2 675 2 16 2 376 2 109 2 274 1 937 2 334 2 36 1 925 2 
217 4 0 2 27 6 775 4 417 4 453 2 575 2 935 2 675 2 16 2 376 2 109 2 937 4 334 2 925 2 
217 8 0 2 27 10 775 8 461 1 417 4 453 2 575 2 935 6 675 2 16 2 376 2 109 8 274 1 937 8 334 2 36 1 925 2 
217 2 0 2 27 2 775 2 417 2 453 2 575 2 675 2 16 2 376 2 937 2 334 2 925 2 
247 2 618 2 747 2 853 2 117 2 495 2 497 2 259 2 752 2 3 2 753 2 129 2 863 2 128 2 265 4 641 2 515 2 387 1 388 6 275 3 651 6 391 2 145 4 771 4 879 2 395 2 656 2 399 2 284 2 890 2 288 4 526 2 664 2 530 18 406 2 294 4 36 34 536 2 297 4 415 2 790 2 42 2 792 2 45 2 424 2 910 2 550 2 177 2 314 2 684 2 685 4 183 2 65 16 435 2 66 16 441 14 813 1 692 2 190 2 923 2 568 1 196 2 452 4 700 4 331 2 820 4 204 4 703 1 579 2 949 2 461 38 88 2 717 2 832 2 221 5 348 2 723 6 468 2 960 32 229 4 232 2 604 2 964 2 609 2 965 2 241 4 479 2 480 4 364 2 110 2 113 2 849 2 
520 2 461 12 285 2 288 6 66 4 530 4 3 2 692 2 863 2 468 2 36 12 960 6 754 2 42 2 964 2 820 2 170 2 387 2 388 2 479 2 651 2 944 2 177 2 879 2 
247 2 747 2 618 2 853 2 117 2 495 2 497 2 3 2 753 2 863 2 265 6 385 2 641 2 514 2 643 2 515 2 388 4 649 2 651 4 275 4 21 8 145 4 771 6 879 2 656 2 659 6 883 2 282 6 285 2 890 2 288 14 526 2 664 4 530 20 406 2 294 6 36 40 297 6 787 2 540 2 415 2 162 2 42 2 792 2 43 8 910 2 177 2 178 2 558 4 685 4 183 2 65 14 316 8 435 2 66 18 187 2 688 6 441 10 443 2 692 2 190 2 923 2 196 2 816 2 198 2 700 2 331 2 818 2 820 2 204 4 579 2 580 2 461 44 88 2 717 2 221 6 832 2 348 2 723 6 468 2 960 40 229 6 232 4 604 2 964 2 609 2 241 2 965 2 480 4 110 2 483 2 849 2 
314 10 684 2 685 6 117 2 65 10 66 14 259 2 441 8 752 4 3 2 692 2 568 2 753 2 863 2 128 2 264 2 196 4 572 2 452 6 265 8 15 2 820 2 204 6 515 2 703 2 387 2 388 2 651 2 275 6 391 4 458 2 145 2 395 4 879 2 399 4 285 2 461 28 88 2 288 14 221 2 721 2 664 2 530 14 294 8 468 2 36 26 960 36 411 2 297 2 790 2 42 2 477 2 792 2 964 2 45 4 480 6 424 2 910 2 113 4 550 4 177 2 
383 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 361 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 172 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 30 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 30 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 30 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 30 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 30 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 1 57 153 271 253 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 230 142 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 135 126 298 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 135 126 298 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 135 126 298 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 135 126 298 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern:intern([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:ne(II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:lexLT([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:memberOf(D[F)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:gt(II)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:gte(II)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltsGTE([II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair; | ASSIGN | 2099 | = null
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:negate(I)I
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eltsGT([II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3_16()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_2_1(I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:union([I[I)[I
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Invariant:prob_or(DD)D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:pow(II)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.MathMDE:sign(I)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:concat([I[I)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:noDups([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf([F[D)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_135()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:subsetOf([D[D)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Assert:assertTrue(Z)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:intern([J)[J
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:eltsEqual([II)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:modulus([I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaCharStream:ReadByte()C
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_ntk()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 16534 | if (x) -> if (!x)
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ProglangType:dimensions()I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:intersection([I[I)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eq(DD)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:max([I)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ValueTuple:isMissing(I)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:BeginToken()C
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
396 2 438 2 340 2 195 2 186 2 263 2 344 4 280 2 159 2 
284 4 110 2 104 2 361 2 279 4 403 2 56 2 418 2 
259 6 103 2 288 2 47 6 289 6 218 2 375 6 340 2 37 4 341 4 222 2 280 2 239 2 
182 4 0 10 2 6 185 4 386 10 387 16 419 2 193 10 290 8 9 10 392 2 393 2 221 2 223 8 252 8 17 2 227 29 44 26 231 10 96 16 376 12 141 4 234 8 123 2 340 6 311 4 342 6 280 6 238 16 382 2 
20 6 432 4 
216 2 
151 2 385 2 108 2 220 2 60 2 326 2 221 2 165 2 67 2 224 2 225 2 118 2 175 2 176 4 331 2 72 2 274 2 275 2 276 4 74 2 340 4 280 4 283 2 411 2 415 4 416 2 195 2 294 2 39 2 365 2 300 2 93 2 41 2 430 2 201 2 370 2 203 2 256 2 437 2 207 2 146 2 99 2 52 4 147 2 
0 4 227 5 44 4 231 4 154 2 376 4 234 2 7 2 193 4 340 4 359 8 422 4 9 4 248 4 280 4 
300 2 181 2 197 2 
213 2 282 2 398 2 29 2 46 2 157 2 305 2 158 2 269 2 308 2 377 10 378 2 380 22 365 2 
182 2 0 2 184 2 262 2 2 2 315 2 353 2 387 2 386 4 217 2 193 2 194 2 9 2 196 2 399 2 227 6 44 4 231 2 96 2 376 2 122 2 234 2 238 2 
0 4 260 2 185 2 80 6 28 4 44 12 227 14 387 8 231 4 188 2 96 8 376 5 193 4 278 4 9 4 441 6 238 8 
405 2 258 4 23 2 349 2 286 2 3 4 59 4 26 4 265 4 156 2 417 4 189 2 220 4 32 2 421 4 111 14 357 10 112 2 272 4 62 2 250 2 247 4 136 2 197 2 173 2 397 2 91 2 300 8 43 10 177 2 332 4 205 2 339 2 439 62 49 2 99 2 52 4 312 4 181 6 346 2 
58 2 78 2 216 2 82 2 427 2 115 2 14 2 433 2 232 2 144 2 
233 2 395 2 172 2 442 2 
199 2 280 2 
319 2 280 4 246 2 
171 2 
102 2 316 2 318 2 6 4 323 2 325 22 8 32 116 4 329 2 117 2 228 4 334 2 18 2 121 2 338 2 19 2 236 8 343 2 240 2 241 2 22 2 130 16 242 2 24 26 351 2 27 2 354 2 132 4 244 2 134 2 33 4 360 10 35 16 36 2 251 2 362 22 364 2 137 2 367 2 40 22 254 22 42 2 369 8 139 2 45 2 140 2 371 10 374 8 145 2 257 2 379 2 148 2 55 22 264 2 152 16 266 2 155 2 267 8 270 2 162 2 161 2 163 22 63 12 66 22 170 16 400 74 71 2 69 2 73 2 179 4 402 10 277 22 404 6 77 10 79 4 183 2 285 4 407 2 408 6 190 22 191 2 84 74 85 10 293 2 292 2 428 2 297 14 299 10 200 74 92 14 431 22 303 22 302 2 304 24 95 2 97 2 435 10 309 2 101 2 208 4 443 2 
94 2 363 2 219 2 149 1 
106 2 219 2 
141 2 300 2 409 2 127 2 64 2 114 2 219 2 
368 2 114 2 219 2 
187 2 114 2 219 2 
363 2 12 2 198 2 
114 2 219 2 
12 2 345 2 
229 2 219 2 
355 2 363 2 12 2 
68 2 167 2 363 2 
65 2 363 2 335 2 
206 2 51 2 363 2 
356 2 164 2 363 2 
168 2 12 2 
210 2 219 2 
68 2 50 2 
70 2 65 2 
124 2 51 2 
226 2 164 2 
5 2 12 2 
164 2 245 2 
51 2 320 2 
81 2 65 2 
68 2 301 2 
429 2 355 2 363 2 12 2 
429 2 324 2 355 2 363 2 12 2 
202 2 363 2 12 2 
87 2 363 2 12 2 
120 2 322 2 235 2 424 2 
300 2 16 2 127 2 211 2 
300 2 16 2 127 2 166 2 64 2 211 2 
141 2 300 2 273 2 127 2 114 2 219 2 
60 2 287 2 
141 2 300 2 330 2 127 2 
119 2 51 2 
164 2 88 2 
68 2 237 2 
372 2 65 2 
164 2 65 2 31 2 
164 2 113 2 65 2 
358 2 164 2 65 2 
164 2 414 2 65 2 
107 2 426 2 394 6 300 2 75 6 125 2 127 2 209 2 
391 2 12 2 
348 4 129 2 174 2 138 2 413 4 204 2 109 2 180 2 160 2 337 2 390 2 53 2 21 2 440 2 327 2 313 2 380 6 295 2 
255 2 363 2 
13 2 
233 2 395 2 442 2 30 2 
233 2 395 2 442 2 30 2 
306 2 314 2 401 2 
306 2 314 2 401 2 
233 2 395 2 442 2 30 2 
233 2 395 2 442 2 30 2 
233 2 395 2 442 2 30 2 
395 2 1 2 253 2 317 2 153 2 233 2 48 2 271 2 310 2 61 2 442 2 54 2 249 2 280 4 128 2 57 2 
143 2 350 2 410 2 4 2 90 2 296 2 
15 2 214 2 76 2 105 2 90 2 192 2 328 2 
173 1 261 2 384 2 131 2 230 2 412 1 333 2 388 1 133 2 434 1 205 1 336 2 268 2 436 2 142 2 420 2 340 8 98 2 34 2 425 2 280 10 
150 2 0 6 215 2 28 2 387 4 389 2 193 6 290 4 359 2 9 6 422 2 248 2 38 2 227 15 44 10 231 6 96 4 307 2 207 2 340 6 441 4 147 2 342 2 280 6 238 4 347 2 212 2 
169 2 383 2 406 2 352 4 243 2 178 2 373 2 340 1 10 2 291 2 100 2 86 1 423 2 280 1 89 2 281 2 366 2 381 7 
169 2 383 2 406 2 352 4 243 2 178 4 373 2 10 4 291 2 100 2 423 4 89 2 281 2 366 2 381 6 
169 2 383 6 406 2 352 4 243 2 178 8 373 2 340 1 10 8 291 2 100 2 86 1 423 8 280 1 89 2 281 8 366 2 381 10 
169 2 406 2 352 2 243 2 178 2 373 2 10 2 291 2 100 2 423 2 89 2 366 2 381 2 
321 1 340 2 126 2 280 2 25 1 83 2 135 2 298 2 
298 2 340 2 126 2 135 2 280 2 83 2 
298 2 340 2 126 2 135 2 280 2 83 2 
298 2 340 2 126 2 135 2 280 2 83 2 
11 2 

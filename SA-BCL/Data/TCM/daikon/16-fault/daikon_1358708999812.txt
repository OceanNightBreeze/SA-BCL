#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 338 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 163 163 881 (766,792) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 163 163 881 (766,792) (766,792) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 163 163 881 (766,792) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 49 378 315 47 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (501,512) (501,512) 700 773 1022 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException (288,977) (288,977) (288,977) (288,977) 700 773 1022 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (288,977) (288,977) 700 773 1022 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLT([I[I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.ModBitTracker:split(I)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:relate_var()V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2732 | = null
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptSlice1:arity()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2644 | return null
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:sum([D)D
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet; | OPERATOR | 1556 | == -> !=
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3_16()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:slice([III)[I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant:logOn()Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.Invariant:logDetail()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V | ASSIGN | 58129 | = null
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3R_52()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltwiseGT([I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:setnext1()V
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:eq(DD)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:gcd(II)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quantify.Constant:Constant(I)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3_1()Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_133()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice0:arity()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107170 | = null
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaCharStream:BeginToken()C
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_58()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.diff.Node:Node()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.PptName:isEnterPoint()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant; | CONDITION | 1464 | if (x) -> if (!x)
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:lte(II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Debug:logDetail()Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:eltsGTE([II)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_ntk()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:baseIsFloat()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.ProglangType:isPointerFileRep()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:gte(II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:readChar()C
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfo:isDerived()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:subsetOf([B[I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13889 | = null
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfo:isPrestate()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:noDups([I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ProglangType:isFloat()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 18003 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_134()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 2 385 4 757 2 12 2 147 5 522 2 186 2 119 2 282 2 240 2 636 4 493 2 1066 2 401 2 843 2 203 2 849 2 950 2 223 2 228 2 
203 4 530 2 757 4 1062 2 979 2 273 5 12 4 522 8 147 14 119 8 254 6 240 8 635 6 223 4 636 12 957 4 893 4 
261 62 308 4 652 2 6 2 138 2 557 2 9 2 1034 2 316 2 350 2 351 2 237 2 598 4 800 2 355 10 903 4 661 4 322 2 462 2 772 2 638 2 244 2 362 4 1010 2 845 8 129 2 1069 4 293 6 294 2 249 4 1110 4 882 4 1017 4 167 2 952 2 410 14 471 10 645 4 987 4 35 4 
679 2 271 2 284 2 397 2 122 2 360 2 248 2 434 2 102 2 956 2 
383 4 512 4 518 2 234 4 597 2 148 2 598 4 866 2 458 2 319 2 461 2 462 2 325 2 666 2 810 2 941 2 733 2 465 2 615 2 33 2 620 2 680 2 1085 2 1083 2 1031 2 630 2 48 2 570 2 771 2 845 2 844 2 1043 2 211 2 501 4 372 2 982 2 575 2 438 2 784 4 66 2 850 2 987 2 68 2 69 2 
959 18 512 4 135 4 385 6 757 16 142 6 656 4 275 6 273 22 12 16 796 4 522 32 147 53 864 8 119 32 353 2 566 6 240 32 635 6 767 2 399 2 154 2 636 48 1066 4 774 6 939 2 203 16 846 2 816 4 501 4 131 4 883 4 613 2 27 2 254 6 223 16 34 6 957 4 893 4 
772 2 845 2 293 2 
259 2 91 2 1065 2 694 2 499 2 671 2 641 2 607 2 561 2 149 22 850 2 730 10 569 2 52 2 
512 2 866 2 782 2 375 2 914 2 472 2 933 2 501 2 508 4 
338 2 1026 2 348 2 302 2 814 2 687 2 
157 4 693 4 963 2 567 4 735 2 1092 2 572 2 346 4 1045 2 
959 8 512 6 385 10 757 10 1062 4 714 8 656 6 275 8 273 12 276 8 82 2 12 10 185 4 147 28 522 16 119 16 455 2 523 2 240 16 767 4 154 2 636 26 196 2 1066 6 203 10 501 6 951 4 615 2 469 2 223 10 
538 6 396 4 
360 2 
456 2 
269 2 501 2 
513 2 824 2 501 4 
0 2 990 2 2 2 309 2 854 1 7 1 141 2 8 1 589 2 10 2 313 3 314 2 863 2 865 2 317 4 454 1 727 3 728 2 459 2 868 1 17 2 871 2 151 2 600 24 731 2 878 2 464 2 606 1 1014 2 745 2 1018 1 614 2 32 1 889 2 888 3 750 16 472 2 1023 2 336 2 335 2 177 2 36 2 339 2 179 2 896 2 758 2 475 2 344 2 477 2 760 2 763 16 633 2 188 2 191 2 484 4 53 2 54 2 359 5 200 2 202 2 59 3 365 2 206 2 908 2 209 2 909 2 501 34 215 2 218 2 216 3 777 4 643 2 64 1 373 3 374 2 506 3 644 2 225 2 1053 6 377 2 788 8 1054 2 1055 2 787 2 1056 2 789 2 511 2 382 8 512 32 1064 2 925 8 83 2 799 2 238 3 524 1 241 12 398 3 664 4 935 1 526 2 243 6 400 2 938 2 246 2 669 16 402 32 251 1 533 2 99 3 406 4 535 2 820 2 542 16 415 2 107 2 1077 3 416 3 262 2 263 1 110 6 112 2 555 2 828 2 272 2 422 2 831 2 833 2 117 1 563 4 118 2 834 2 971 32 689 2 841 4 289 2 290 1 696 2 1104 2 432 24 698 2 296 2 1111 2 577 2 704 4 1113 1 851 6 442 2 
443 32 307 2 3 2 711 2 310 8 857 2 858 6 723 2 460 2 152 6 326 14 327 2 612 2 26 14 168 8 747 2 748 8 473 50 1024 14 619 2 340 2 1028 2 759 2 476 2 629 2 481 14 482 8 45 2 192 8 770 12 490 2 205 2 907 14 1046 10 1048 2 368 4 502 2 1050 2 222 4 507 2 379 2 509 2 1058 2 510 2 653 14 79 50 388 2 80 4 389 2 84 2 659 2 85 2 927 50 929 2 88 18 245 2 529 4 817 10 252 2 534 10 408 14 953 2 539 2 540 2 257 6 958 14 260 10 1078 14 108 2 1080 2 420 2 1084 10 1086 8 559 2 558 2 277 4 423 2 835 2 121 2 1093 4 1094 2 426 6 1097 18 125 14 1098 2 1099 14 571 4 699 2 297 2 132 2 573 2 437 4 579 6 582 12 439 2 985 2 
495 2 185 2 235 2 549 1 845 2 662 2 554 2 212 2 
554 2 212 2 1063 2 
1003 2 554 2 212 2 
221 2 106 2 164 2 
554 2 212 2 
106 2 1049 2 
242 2 212 2 
221 2 106 2 657 2 
913 2 221 2 898 2 
221 2 1102 2 23 2 
221 2 803 2 173 2 
221 2 189 2 818 2 
106 2 96 2 
76 2 212 2 
898 2 786 2 
1102 2 190 2 
342 2 803 2 
528 2 818 2 
106 2 608 2 
266 2 818 2 
42 2 803 2 
1102 2 450 2 
906 2 898 2 
912 2 221 2 106 2 657 2 
912 2 221 2 581 2 106 2 657 2 
221 2 106 2 839 2 
221 2 106 2 1015 2 
753 2 562 2 537 2 875 2 
1090 2 106 2 
491 2 361 2 330 2 551 2 738 2 144 2 184 2 166 2 1088 2 299 4 149 6 726 2 87 2 955 2 356 4 544 2 488 2 195 2 
221 2 521 2 
845 2 662 2 690 2 194 2 
495 2 845 2 58 2 662 2 690 2 194 2 
185 2 845 2 662 2 554 2 212 2 545 2 
983 2 458 2 
185 2 845 2 662 2 226 2 
936 2 803 2 
836 2 818 2 
381 2 898 2 
98 2 1102 2 
1102 2 40 2 818 2 
417 2 1102 2 818 2 
702 2 1102 2 818 2 
1102 2 943 2 818 2 
965 6 762 2 902 2 662 2 357 2 845 2 250 2 30 6 
221 2 376 2 212 2 
231 2 212 2 
871 2 
134 2 7 2 452 2 317 4 865 2 1004 2 459 6 17 2 731 2 1014 2 739 2 742 2 745 2 889 2 472 2 336 2 177 4 36 2 178 2 339 2 897 4 343 2 344 2 181 2 633 2 188 2 484 2 54 2 908 2 209 2 501 26 777 4 643 2 644 2 1053 4 787 2 788 2 789 2 1056 2 512 26 83 2 393 2 241 8 664 2 526 2 243 2 669 6 246 2 402 4 531 2 533 2 406 4 411 2 821 2 548 2 262 2 110 6 112 2 267 2 555 2 272 2 831 2 833 2 563 2 118 2 971 6 430 4 847 2 1105 2 698 2 296 2 704 4 1113 2 851 2 
134 2 7 2 452 2 317 4 865 2 1004 2 459 6 17 2 151 2 731 2 464 2 1014 2 742 2 745 2 889 2 472 2 336 2 177 4 36 2 339 2 475 2 897 4 344 2 181 2 633 2 188 2 484 2 54 2 1041 2 908 2 209 2 501 26 777 4 643 2 644 2 1053 6 787 2 788 2 789 2 1056 2 512 26 83 2 393 2 241 8 664 2 526 2 243 2 669 6 246 2 402 4 97 2 531 2 675 2 533 2 406 4 411 2 821 2 548 2 262 2 110 6 112 2 267 2 555 2 272 2 831 2 833 2 563 2 118 2 971 6 430 4 847 2 1105 2 698 2 296 2 704 4 1113 2 851 2 
822 2 949 2 
780 2 
73 2 792 2 512 6 1060 10 856 2 146 2 721 4 660 2 928 2 870 2 934 2 731 2 1014 2 609 2 881 2 163 2 741 4 746 2 745 2 406 2 1020 8 954 2 337 2 752 2 1026 4 894 2 960 2 823 2 1027 2 110 4 1082 4 964 2 555 2 478 2 830 2 831 2 348 6 347 2 1035 4 1089 2 685 4 686 2 687 4 193 2 691 2 639 4 501 12 62 2 370 2 219 2 643 2 220 6 779 2 302 6 704 2 789 2 988 8 708 2 709 2 441 2 
73 2 792 2 512 6 1060 10 856 2 146 2 721 4 660 2 928 2 870 2 934 2 731 2 879 2 1014 2 609 2 881 2 163 2 741 4 746 2 745 2 406 2 1020 8 170 4 954 2 337 2 752 2 1026 4 960 2 823 2 1027 2 110 4 1082 4 964 2 555 2 626 2 478 2 830 2 831 2 347 2 348 6 1035 4 1089 2 685 4 686 2 687 4 193 2 691 2 639 4 501 12 62 2 370 2 219 2 643 2 220 8 779 2 302 8 704 2 984 2 789 2 988 8 709 2 441 2 
73 2 792 2 1026 2 960 2 1027 2 609 2 478 2 741 2 721 4 347 2 660 2 348 2 779 2 302 2 685 4 687 2 709 2 441 2 
73 2 792 2 512 6 1060 6 856 2 146 2 721 4 660 2 928 2 870 2 934 2 731 2 1014 2 609 2 881 2 163 2 741 4 746 2 745 2 406 2 1020 4 954 2 337 2 1026 4 894 2 960 2 823 2 1027 2 110 4 1082 4 964 2 626 2 555 2 478 2 830 2 831 2 348 4 347 2 1035 4 1089 2 685 4 686 2 687 4 193 2 691 2 639 4 501 12 62 2 370 2 219 2 643 2 220 6 779 2 302 6 704 2 789 2 988 4 708 2 709 2 441 2 
73 2 792 2 512 6 1060 6 856 2 716 2 146 2 721 4 660 2 928 2 870 2 934 2 731 2 1014 2 609 2 881 2 163 2 741 4 746 2 745 2 406 2 1020 4 954 2 337 2 1026 4 894 2 960 2 823 2 1027 2 110 4 1082 4 964 2 555 2 478 2 830 2 831 2 348 6 347 2 1035 4 1089 2 685 4 686 2 687 4 193 2 691 2 639 4 501 12 62 2 370 2 219 2 643 2 220 6 779 2 302 4 704 2 789 2 988 4 708 2 709 2 441 2 
73 2 792 2 512 6 1060 6 856 2 146 2 721 4 660 2 928 2 870 2 934 2 731 2 1014 2 609 2 881 2 163 2 741 4 746 2 745 2 406 2 1020 4 954 2 337 2 752 2 1026 4 894 2 960 2 823 2 1027 2 110 4 1082 4 964 2 555 2 478 2 830 2 831 2 348 6 347 2 1035 4 1089 2 685 4 686 2 687 4 193 2 691 2 639 4 501 12 62 2 370 2 219 2 643 2 220 6 779 2 302 6 704 2 789 2 988 8 708 2 709 2 441 2 
73 2 792 2 512 6 1060 10 856 2 716 2 146 2 721 4 660 2 928 2 870 2 934 2 731 2 1014 2 609 2 881 2 163 2 741 4 746 2 745 2 406 2 1020 8 954 2 337 2 752 2 1026 4 894 2 960 2 823 2 1027 2 110 4 1082 4 964 2 555 2 478 2 830 2 831 2 348 8 347 2 1035 4 1089 2 685 4 686 2 687 4 193 2 691 2 639 4 501 12 62 2 370 2 219 2 643 2 220 8 779 2 302 6 704 2 789 2 988 8 708 2 709 2 441 2 
73 2 792 2 512 6 1060 10 856 2 146 2 721 4 660 2 928 2 870 2 934 2 731 2 1014 2 609 2 881 2 163 2 741 4 746 2 745 2 406 2 1020 8 954 2 337 2 752 2 1026 4 894 2 960 2 823 2 1027 2 110 4 1082 4 964 2 555 2 478 2 830 2 831 2 348 6 347 2 1035 4 1089 2 685 4 686 2 687 4 193 2 691 2 639 4 501 12 62 2 370 2 219 2 643 2 220 6 779 2 302 6 704 2 789 2 988 8 708 2 709 2 441 2 
856 2 861 6 594 2 596 4 317 4 865 2 867 1 17 2 870 2 872 2 604 1 609 2 881 2 885 2 337 2 897 4 344 2 348 8 347 2 633 2 54 12 639 6 56 6 366 2 908 2 60 2 62 4 911 6 370 2 643 2 73 2 920 2 921 2 384 1 386 1 83 2 391 6 660 2 928 2 395 2 934 2 664 2 93 2 669 6 402 2 101 6 406 4 954 2 960 2 418 6 110 6 112 2 114 2 964 2 118 2 971 8 685 4 686 2 687 4 691 2 976 6 975 2 428 2 126 2 704 4 707 2 988 2 708 2 441 2 709 2 134 4 446 1 140 6 716 4 995 2 717 1 146 2 452 2 721 4 456 6 1004 2 459 6 731 2 464 2 1011 6 1014 2 737 7 163 4 740 2 741 4 745 2 746 2 1019 1 472 2 174 1 175 8 1026 4 474 6 1027 2 756 2 475 2 478 2 1032 2 1035 4 188 2 484 2 193 2 1037 2 1039 2 775 2 204 2 208 2 209 2 501 46 777 4 219 2 220 12 779 2 1053 6 787 2 788 2 789 2 1056 2 792 2 512 24 1060 2 1061 7 802 2 241 4 804 2 805 2 243 2 247 10 1072 6 1074 1 547 4 262 2 823 2 824 6 265 2 1082 8 826 2 267 2 555 2 556 6 269 6 272 2 830 4 831 2 833 2 278 2 563 2 1089 2 565 2 568 2 286 6 1108 2 302 4 851 2 
134 4 140 6 856 2 995 2 861 6 452 2 146 2 594 2 721 4 596 4 865 2 317 4 456 6 1004 2 459 6 870 2 17 2 872 2 731 2 1011 6 464 2 881 2 609 2 1014 2 740 2 163 4 741 4 25 2 746 2 745 2 885 2 472 2 175 8 752 4 337 2 177 2 474 6 1026 4 39 2 756 2 1027 2 897 4 475 2 344 2 478 2 1032 2 1035 4 347 2 348 8 633 2 188 2 484 4 193 2 1037 2 1039 2 54 12 775 2 639 6 204 2 56 6 366 2 208 2 60 2 908 2 209 2 501 48 62 4 370 2 911 6 219 2 777 4 643 2 220 12 779 2 1053 6 788 2 787 2 1056 2 789 2 921 2 920 2 73 2 792 2 512 26 1060 2 391 6 83 2 660 2 802 2 928 2 395 2 241 8 934 2 805 2 804 2 664 4 243 2 93 2 669 6 247 10 402 2 1072 6 101 6 406 4 954 2 547 4 960 2 823 2 262 2 418 6 824 6 110 6 112 2 265 2 114 2 1082 8 826 2 964 2 267 2 269 6 556 6 555 2 830 4 272 2 831 2 833 2 278 2 118 2 563 4 1089 2 565 2 971 8 685 4 686 2 687 4 568 2 286 6 691 2 975 2 976 6 126 2 428 2 1108 2 302 8 704 4 707 2 851 2 708 2 988 6 709 2 441 2 
134 4 140 6 856 2 995 2 861 6 452 2 146 2 594 2 721 4 596 4 865 2 317 4 456 6 1004 2 459 6 870 2 17 2 872 2 731 2 1011 6 464 2 881 2 609 2 1014 2 740 2 163 4 741 4 25 2 746 2 745 2 885 2 1020 4 472 2 175 8 752 4 337 2 177 2 474 6 1026 4 39 2 756 2 1027 2 897 4 475 2 344 2 478 2 1032 2 1035 4 347 2 348 8 633 2 188 2 484 4 193 2 1037 2 1039 2 54 12 775 2 639 6 204 2 56 6 366 2 208 2 60 2 908 2 209 2 501 48 62 4 370 2 911 6 219 2 777 4 643 2 220 12 779 2 1053 6 788 2 787 2 1056 2 789 2 921 2 920 2 73 2 792 2 512 26 1060 6 391 6 83 2 660 2 802 2 928 2 395 2 241 8 934 2 805 2 804 2 664 4 243 2 93 2 669 6 247 10 402 2 1072 6 101 6 406 4 954 2 547 4 960 2 823 2 262 2 418 6 824 6 110 6 112 2 265 2 114 2 1082 8 826 2 964 2 267 2 269 6 556 6 555 2 830 4 272 2 831 2 833 2 278 2 118 2 563 4 1089 2 565 2 971 8 685 4 686 2 687 4 568 2 286 6 691 2 975 2 976 6 126 2 428 2 1108 2 302 8 704 4 707 2 851 2 708 2 988 6 709 2 441 2 
856 2 861 12 594 2 596 4 317 4 865 2 870 2 17 2 872 2 877 2 609 2 881 2 25 2 885 2 337 2 39 2 897 6 344 2 626 2 627 2 348 10 347 2 633 2 54 10 639 6 55 2 56 6 366 2 908 2 60 2 62 4 370 2 911 12 371 6 643 2 72 6 73 2 920 2 921 2 81 2 83 2 391 6 660 2 928 2 395 2 934 2 664 4 93 2 669 8 402 4 101 12 406 4 954 2 960 2 418 6 678 6 110 6 112 2 114 2 964 2 118 2 971 12 685 4 686 2 687 4 688 6 691 2 976 6 975 2 428 2 126 2 704 4 707 2 988 6 708 2 441 2 709 2 989 6 134 4 140 6 716 2 995 2 997 6 146 2 452 4 145 6 721 4 456 12 1004 2 459 8 731 2 464 2 1011 6 1014 2 163 4 740 2 741 4 466 6 745 2 746 2 1020 4 472 2 175 8 752 4 177 2 1026 4 474 6 1027 2 756 2 475 2 478 2 1032 2 479 2 1035 4 188 2 484 4 193 2 1037 2 1039 2 775 2 204 2 208 2 209 2 501 52 777 4 219 2 220 16 779 2 1053 6 787 2 788 4 789 2 1056 2 792 2 512 24 1060 6 794 2 802 2 241 10 805 2 1067 2 243 4 247 8 1072 6 547 4 262 2 823 2 824 12 265 2 1082 8 553 2 826 2 267 2 555 2 556 6 269 12 272 2 830 4 831 2 833 2 278 2 563 4 1089 2 565 2 568 2 286 6 1107 6 1108 2 302 10 851 4 
792 2 1026 4 960 2 1060 4 1082 2 964 2 856 2 478 2 721 2 1035 2 660 2 347 2 348 6 1089 2 928 2 685 2 686 2 687 4 193 2 691 2 639 2 881 2 609 2 501 4 163 2 219 2 220 4 779 2 1020 4 302 6 954 2 708 2 988 6 752 2 337 2 
134 2 5 2 856 2 146 2 721 2 317 4 865 2 16 2 1004 2 459 6 17 2 871 2 731 2 464 2 881 2 1014 2 609 2 163 2 745 2 472 2 752 2 337 2 1026 4 475 2 897 4 478 2 1035 2 348 6 347 2 633 2 188 2 193 2 54 4 639 2 908 2 209 2 501 28 213 3 219 2 643 2 777 4 220 4 779 2 374 2 1053 6 787 2 1056 2 789 2 792 2 512 24 1060 2 83 2 660 2 928 2 804 2 243 3 669 6 247 2 402 3 406 4 820 2 954 2 960 2 262 2 110 6 112 2 1082 2 964 2 267 2 555 2 272 2 831 2 833 2 118 2 1089 2 971 8 685 2 837 2 686 2 687 4 691 2 696 2 980 2 302 6 704 4 1112 2 851 3 708 2 988 6 
219 2 964 2 610 2 
219 2 964 2 610 2 
134 2 712 2 139 2 721 2 596 2 317 4 1004 2 459 2 17 2 731 2 603 2 1011 2 464 2 1009 2 329 2 1014 2 881 2 163 4 745 2 1020 2 472 2 752 4 1026 4 475 2 344 2 41 2 181 4 478 2 480 2 348 8 1035 2 633 2 188 2 484 4 193 2 54 4 639 2 908 2 209 2 501 24 777 4 643 2 219 2 220 8 779 2 1053 6 787 2 789 2 1056 2 792 2 512 16 1060 2 515 2 83 2 241 4 664 4 1068 2 669 2 247 2 402 2 406 4 547 2 262 2 110 6 112 2 1082 4 964 2 267 2 555 2 272 2 831 2 833 2 116 2 563 4 118 2 971 2 685 2 687 4 695 2 302 8 704 4 988 6 
73 2 512 2 603 2 1011 2 329 2 712 2 247 2 265 2 555 2 501 4 949 2 966 2 596 2 1052 2 568 2 852 2 54 2 
134 2 712 2 139 2 721 2 317 4 1004 2 459 2 17 2 731 2 464 2 1009 4 329 2 1014 2 881 2 163 4 745 2 1020 2 472 2 752 4 1026 4 475 2 344 2 41 2 181 4 478 2 480 2 348 8 1035 2 633 2 188 2 484 4 766 2 193 2 54 2 639 2 908 2 209 2 501 20 777 4 643 2 219 2 220 8 779 2 1053 6 787 2 789 2 1056 2 792 2 512 14 1060 2 515 2 83 2 241 4 664 4 1068 2 669 2 1070 2 402 4 406 4 547 2 262 2 110 6 112 2 1082 4 964 2 267 2 555 2 272 2 831 2 833 2 116 2 563 4 118 2 971 2 685 2 687 4 695 2 302 8 704 4 988 6 
134 2 712 2 139 2 721 2 596 2 317 4 1004 2 459 2 17 2 731 2 603 2 1011 2 464 2 1009 2 329 2 1014 2 881 2 163 4 745 2 1020 2 472 2 752 4 1026 4 475 2 344 2 41 2 181 4 478 2 480 2 348 8 1035 2 633 2 188 2 484 4 193 2 54 4 639 2 908 2 209 2 501 24 777 4 643 2 219 2 220 8 779 2 1053 6 787 2 789 2 1056 2 792 2 512 16 1060 2 515 2 83 2 241 4 664 4 1068 2 669 2 247 2 402 2 406 4 547 2 262 2 110 6 112 2 1082 4 964 2 267 2 555 2 272 2 831 2 833 2 116 2 563 4 118 2 971 2 685 2 687 4 695 2 302 8 704 4 988 6 
584 18 1 2 5 2 4 20 587 2 7 2 12 4 14 2 16 2 599 2 18 2 601 15 605 2 21 20 22 22 24 2 27 4 613 2 616 2 617 8 35 2 37 18 38 2 622 10 623 10 624 2 625 2 627 2 632 2 44 2 634 8 635 6 47 2 49 2 51 2 636 12 54 2 637 10 55 2 640 10 57 2 643 2 65 2 67 2 648 2 651 10 75 2 77 2 78 2 656 4 81 4 658 2 83 2 86 2 89 8 665 2 92 2 93 2 94 3 670 2 668 2 669 14 667 2 672 10 673 2 674 2 100 10 676 2 103 2 677 18 105 2 104 10 109 2 110 6 112 2 113 18 114 2 115 2 681 10 682 10 683 16 118 4 119 8 684 2 120 2 123 4 124 10 692 2 127 4 128 2 697 10 130 2 704 4 134 2 713 8 137 2 143 2 718 4 719 2 722 2 147 16 150 2 153 2 155 4 731 2 159 2 160 2 742 2 743 3 745 2 169 4 749 20 171 90 754 4 757 4 180 2 761 2 763 8 187 2 188 2 764 2 765 2 768 2 197 2 201 2 203 4 207 3 210 2 776 15 213 2 217 2 777 6 778 2 223 4 224 2 787 2 788 24 789 2 230 20 229 18 790 8 232 16 793 2 794 2 795 18 797 6 236 2 240 8 241 82 806 2 243 16 812 10 813 2 815 2 249 2 253 2 255 2 821 2 264 32 267 2 268 2 829 8 272 4 273 6 831 2 275 6 274 18 832 3 833 4 280 60 283 2 285 14 287 2 842 2 847 2 848 2 295 6 301 2 303 2 851 31 304 8 306 2 305 8 311 2 859 2 315 2 862 8 317 6 865 2 320 2 873 3 321 18 323 2 877 2 328 4 880 4 331 8 332 2 885 2 887 34 890 2 891 4 892 48 893 4 895 2 897 12 344 4 345 2 899 2 900 18 901 2 352 2 354 2 903 2 358 2 363 10 905 10 908 4 367 2 369 2 916 2 917 4 378 2 919 4 380 8 922 3 923 2 387 16 924 24 390 2 393 2 394 2 930 74 932 2 402 31 944 2 945 4 403 2 406 4 407 2 409 68 411 2 413 4 414 2 959 4 419 2 967 28 968 2 425 2 971 44 427 2 974 8 429 2 431 2 433 2 980 2 435 2 986 2 440 2 445 2 991 1 448 2 447 2 449 2 993 2 994 2 995 4 452 44 1000 2 1001 20 459 14 1006 8 1008 2 1007 8 464 6 1012 2 1013 18 1014 2 1016 2 467 6 470 2 1021 2 472 4 1025 2 1029 2 475 6 1030 2 479 2 1032 2 1036 20 485 10 486 10 1040 3 496 2 498 2 1044 2 501 64 1047 28 1051 44 503 2 504 18 505 2 1053 14 1056 2 1057 8 512 34 514 18 520 8 522 8 527 4 1069 2 531 2 1071 4 1073 8 1075 2 542 34 543 2 548 2 1079 10 550 2 1081 8 552 2 553 2 555 2 1087 36 564 2 565 2 1091 3 1095 4 1100 2 1105 22 1106 2 1108 2 1110 2 574 2 578 2 576 8 580 2 1113 2 1112 2 
1079 2 512 2 922 2 243 2 622 2 109 2 732 2 669 2 670 2 75 2 897 2 402 2 848 2 672 4 501 2 452 6 865 2 968 2 394 2 971 2 320 2 459 2 851 2 427 2 
1079 2 512 2 922 2 243 2 622 2 109 2 732 2 669 2 670 2 75 2 897 2 402 2 848 2 672 4 501 2 452 6 865 2 968 2 394 2 971 2 320 2 459 2 851 2 427 2 
1079 2 512 2 922 2 243 2 622 2 109 2 732 2 669 2 670 2 75 2 897 2 402 2 848 2 672 4 501 2 452 6 865 2 968 2 394 2 971 2 320 2 459 2 851 2 427 2 
512 4 757 2 516 2 855 2 656 2 590 2 900 4 593 3 795 4 275 4 12 2 147 4 522 2 968 2 763 2 865 2 632 2 119 2 971 2 240 2 874 2 636 4 601 3 292 4 203 2 1013 4 402 3 404 2 776 3 946 2 501 10 63 2 677 4 705 2 409 6 223 2 851 3 172 2 542 2 1057 2 
959 2 512 4 757 2 516 2 855 2 656 2 590 2 900 4 593 2 795 4 273 2 275 4 12 2 147 4 522 2 968 2 763 2 865 2 632 2 119 2 971 2 240 2 874 2 154 2 636 4 601 2 292 4 203 2 1013 4 402 2 404 2 776 2 946 2 501 10 63 2 677 4 705 2 409 6 223 2 851 2 172 2 542 2 1057 2 
959 2 512 4 757 2 516 2 855 2 656 2 590 2 900 4 593 2 795 4 273 2 275 4 12 2 147 4 522 2 968 2 763 2 865 2 632 2 119 2 971 2 240 2 874 2 154 2 636 4 601 2 292 4 203 2 1013 4 402 2 404 2 776 2 946 2 501 10 63 2 677 4 705 2 409 6 223 2 851 2 172 2 542 2 1057 2 
959 2 512 4 757 2 516 2 855 2 656 2 590 2 900 4 593 2 795 4 273 2 275 4 12 2 147 4 522 2 968 2 763 2 865 2 632 2 119 2 971 2 240 2 874 2 154 2 636 4 601 2 292 4 203 2 1013 4 402 2 404 2 776 2 946 2 501 10 63 2 677 4 705 2 409 6 223 2 851 2 172 2 542 2 1057 2 
959 4 512 4 757 2 516 2 855 2 656 2 590 2 900 4 593 2 795 4 273 4 275 4 12 2 147 4 522 2 968 2 763 2 865 2 632 2 119 2 971 2 240 2 874 2 154 4 636 4 601 2 292 4 203 2 1013 4 402 2 404 2 776 2 946 2 501 10 63 2 677 4 705 2 409 6 223 2 851 2 172 2 542 2 1057 2 
364 2 468 2 483 2 150 2 588 2 592 2 
20 2 798 2 279 2 15 2 483 2 1105 2 736 2 
512 8 992 2 654 2 9 1 996 2 720 2 349 2 1002 2 46 2 972 2 869 2 489 2 19 1 731 2 808 2 463 2 940 1 291 2 61 1 501 10 911 2 744 2 703 2 952 1 412 2 70 2 
71 2 959 3 512 6 1 2 135 2 757 6 656 2 275 4 273 5 12 6 147 15 522 6 864 2 119 6 240 6 635 4 48 2 461 2 636 12 123 2 154 2 92 2 774 4 939 1 199 2 203 6 501 6 915 2 223 6 227 2 893 2 
512 1 602 2 341 2 1013 2 162 2 500 2 501 1 900 2 11 2 165 2 133 2 781 1 677 2 31 7 783 2 931 2 324 2 176 4 
602 2 341 2 1013 2 500 2 162 2 900 2 11 4 165 4 133 2 677 2 31 6 783 2 931 4 324 2 176 4 
512 1 602 2 341 2 1013 2 500 8 162 2 501 1 900 2 11 8 165 8 133 6 781 1 677 2 31 10 783 2 931 8 324 2 176 4 
602 2 341 2 1013 2 162 2 900 2 11 2 165 2 677 2 31 2 783 2 931 2 324 2 176 2 
585 4 444 2 312 2 591 2 999 16 451 2 13 2 317 10 14 2 318 2 725 2 156 2 464 2 332 2 29 2 886 2 333 2 1022 2 618 2 475 2 182 2 1033 6 43 1 631 2 44 2 50 3 492 2 773 2 198 2 908 2 910 2 501 32 777 12 785 2 1053 20 647 2 650 4 233 2 512 30 1059 2 655 2 517 6 519 2 801 2 525 2 90 2 807 2 532 2 948 2 405 4 819 4 256 2 1076 2 258 2 111 2 270 2 272 4 421 4 833 4 424 2 1096 6 840 2 1109 2 700 2 981 2 
585 2 586 2 512 22 444 4 517 6 655 2 312 2 999 12 998 10 860 2 392 2 14 2 317 10 663 2 90 2 156 4 809 2 876 2 464 4 811 2 95 2 947 2 611 2 332 2 334 2 1022 2 258 4 546 2 621 2 961 2 825 2 475 4 827 4 560 2 272 2 833 2 628 2 44 2 424 2 50 2 973 4 1038 2 288 2 1042 2 977 6 773 2 1101 2 1103 2 908 2 1109 2 501 24 214 2 700 2 777 10 436 2 981 2 298 2 1053 30 
288 2 90 2 1042 1 512 8 977 2 773 2 1101 2 464 2 475 2 908 2 827 2 501 8 700 2 998 2 999 2 272 2 777 2 833 2 392 2 317 2 1022 2 1053 6 1038 2 
585 2 583 4 649 2 853 2 791 2 233 2 512 44 444 4 136 2 655 2 517 6 312 2 715 2 999 36 860 2 595 2 724 2 926 2 453 4 317 20 14 2 239 2 457 2 729 2 1005 2 663 2 90 2 937 2 156 4 158 2 809 2 876 2 464 6 95 2 811 2 942 2 161 2 734 2 948 2 28 2 884 2 332 2 536 2 1022 2 256 2 541 2 618 2 258 4 962 2 755 4 825 2 475 6 560 2 183 2 272 2 833 2 628 2 44 2 969 2 424 2 281 2 970 4 50 2 769 2 838 2 487 2 973 6 904 2 494 2 497 2 773 2 978 2 908 2 642 2 910 2 1109 2 214 2 501 46 700 2 777 20 436 2 981 2 298 2 701 2 300 2 706 2 646 6 1053 48 1114 2 710 2 918 2 
751 2 

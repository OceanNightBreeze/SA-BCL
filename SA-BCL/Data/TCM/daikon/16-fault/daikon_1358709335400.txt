#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 263 353 222 814 668 957 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 299 432 467 759 874 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (690,695) 148 (139,712) 89 3 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 700 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 773 480 491 367 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 308 322 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 337 278 221 271 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaCharStream:getEndColumn()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | ASSIGN | 20429 | = null
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltsGTE([II)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:isArray()Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ProglangType:isFloat()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.RootNode:RootNode()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ProglangType:dimensions()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1057 | = null
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hashCode()I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariant:logOn()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfo:relate_var()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | ASSIGN | 35390 | = null
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ValueTuple:size()I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 27721 | return null
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.InvariantFormatTester:execute()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:intersection([I[I)[I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoAux:hashCode()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 491 | = null
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Debug:logDetail()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eq(DD)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:passes()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptSlice1:num_samples()I
daikon.inv.Invariants:Invariants()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Debug:logOn()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.PptSlice1:arity()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eq(II)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltsGT([II)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 488 | if (x) -> if (!x)
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:gt(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:min([I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.Invariant:getConfidence()D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.PptSlice2:arity()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:baseIsIntegral()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 19511 | return null
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:eltsEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.LimitedSizeIntSet:size()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38994 | return null
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:internSubsequence([III)[I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Ppt:Ppt()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
48 2 664 2 385 2 481 2 476 2 404 2 602 2 256 2 861 4 
141 6 203 2 888 2 24 2 219 2 110 2 461 6 859 2 123 6 175 2 965 2 
833 2 734 2 529 6 404 2 602 2 112 4 468 6 816 6 922 2 435 6 593 4 386 2 216 2 
944 2 692 2 404 6 262 30 310 8 15 26 953 10 184 10 342 6 651 8 596 4 842 16 652 2 602 6 159 16 961 4 912 12 654 16 448 10 63 6 655 2 423 2 64 8 936 4 850 2 456 2 102 10 384 8 853 4 493 10 
40 4 571 6 
250 2 
111 2 262 6 231 2 433 2 310 2 184 2 953 2 15 4 820 2 206 2 566 2 732 2 842 2 928 2 159 2 912 2 654 2 63 2 448 4 936 2 379 2 102 2 493 2 
156 2 430 4 23 6 961 2 159 8 262 14 912 5 654 8 102 4 15 12 953 4 184 4 749 2 274 6 493 4 316 4 842 8 
260 2 1 2 921 2 179 4 115 4 726 2 236 2 151 62 838 2 304 4 698 2 667 2 537 4 621 4 242 2 704 14 730 2 765 4 570 4 707 4 414 10 374 4 212 2 214 4 739 4 249 2 768 2 740 2 286 2 963 2 62 8 97 2 449 6 608 4 915 2 426 2 580 4 327 2 831 2 107 10 
301 2 204 2 617 2 313 2 959 2 250 2 136 2 140 2 174 2 832 2 
752 2 643 2 82 2 404 4 646 2 205 2 595 2 871 2 154 2 155 2 209 2 707 4 211 2 601 2 652 2 602 4 422 2 549 2 488 2 891 2 224 4 172 2 498 2 499 2 179 2 726 2 434 4 501 2 950 2 503 2 302 2 563 2 793 2 314 2 126 2 252 2 62 2 748 2 256 2 639 2 391 2 393 2 75 4 584 2 
404 4 262 52 265 4 409 4 15 46 342 4 274 6 705 6 23 6 542 2 282 4 602 4 159 28 654 28 936 2 102 18 493 18 430 4 235 8 310 18 953 18 184 18 52 4 506 2 316 4 842 28 801 2 629 2 912 21 804 4 448 6 63 4 64 6 634 2 456 2 69 6 459 2 72 6 809 4 
768 2 62 2 449 2 
93 2 466 2 213 2 2 2 116 10 237 2 193 22 272 2 17 2 477 2 312 2 720 2 925 2 584 2 
857 2 858 2 400 2 753 2 754 2 645 2 404 34 263 2 264 3 266 2 10 1 758 2 269 2 865 2 867 2 19 2 539 2 413 1 767 2 418 2 769 3 771 3 545 3 287 2 879 2 421 2 165 2 884 2 886 2 778 2 885 2 292 1 659 2 33 2 37 2 660 2 177 1 300 2 896 2 559 2 788 2 45 2 789 2 562 1 902 2 50 2 307 2 790 2 792 3 668 2 904 2 907 1 796 2 798 32 443 2 802 4 677 2 189 2 190 1 574 2 319 2 59 2 576 2 682 3 806 6 450 16 66 16 684 2 452 4 455 2 577 2 458 2 326 2 74 2 462 3 73 16 197 1 198 1 80 4 200 1 814 2 85 2 694 1 471 24 592 32 701 2 344 1 703 3 345 2 346 2 823 2 929 2 930 2 481 2 95 6 710 4 353 2 483 4 602 32 932 2 486 2 355 2 934 2 607 2 939 2 828 2 713 2 714 2 220 2 222 2 363 5 721 2 945 2 611 2 836 2 724 6 230 2 365 2 233 4 502 24 957 2 243 16 128 1 735 2 512 2 131 1 513 1 960 6 132 3 744 2 745 2 135 3 519 3 520 3 966 1 851 2 637 2 398 2 
485 2 
551 2 404 2 
800 2 942 2 404 4 
920 2 467 2 149 4 405 24 406 2 591 2 410 2 759 2 538 2 153 2 702 2 207 24 766 2 874 2 157 2 350 2 27 2 354 4 606 24 424 4 425 4 358 4 657 2 718 2 609 2 226 2 299 4 894 2 661 2 432 4 42 2 368 2 47 4 791 2 620 2 439 2 440 2 623 2 509 2 373 4 631 2 805 2 633 2 516 4 683 2 65 2 454 4 451 2 324 2 329 4 810 2 397 2 
873 2 597 2 254 1 583 2 
283 2 597 2 
83 2 653 2 41 2 96 2 420 2 589 2 546 2 534 4 923 2 150 2 356 2 67 2 193 6 442 2 428 4 926 2 909 2 841 2 
228 2 583 2 
323 2 62 2 87 2 733 2 
323 2 129 2 62 2 87 2 733 2 605 2 
764 2 853 2 943 2 62 2 87 2 597 2 
55 2 748 2 
853 2 717 2 62 2 87 2 
830 2 615 2 
57 2 320 2 
737 2 309 2 
632 2 898 2 
333 2 632 2 320 2 
381 2 632 2 320 2 
90 2 632 2 320 2 
191 2 632 2 320 2 
787 6 87 2 673 2 62 2 776 6 169 2 330 2 297 2 
526 2 875 2 
376 2 764 2 853 2 62 2 87 2 597 2 605 2 
764 2 597 2 407 2 
764 2 597 2 77 2 
875 2 670 2 583 2 
764 2 597 2 
875 2 856 2 
610 2 597 2 
875 2 267 2 583 2 
199 2 737 2 583 2 
916 2 632 2 583 2 
599 2 830 2 583 2 
854 2 320 2 583 2 
875 2 25 2 
878 2 597 2 
737 2 21 2 
188 2 632 2 
830 2 671 2 
870 2 320 2 
875 2 146 2 
431 2 320 2 
830 2 582 2 
632 2 29 2 
737 2 280 2 
875 2 349 2 267 2 583 2 
875 2 349 2 331 2 267 2 583 2 
875 2 338 2 583 2 
875 2 604 2 583 2 
416 2 612 2 399 2 240 2 
858 2 
644 2 754 2 645 2 404 26 867 2 19 2 20 2 539 2 158 2 767 4 284 2 287 2 289 2 884 2 778 2 885 2 427 2 889 2 659 2 39 2 298 2 300 2 902 2 668 2 794 2 907 2 568 2 795 4 798 6 802 4 910 2 189 2 444 2 59 2 576 2 806 2 684 2 455 2 326 2 74 2 73 6 80 8 814 2 85 2 592 4 346 2 823 6 929 2 481 2 95 2 710 4 602 26 483 4 932 2 486 2 934 2 939 2 938 2 713 2 714 2 222 2 611 2 836 2 724 4 230 2 233 4 369 4 619 2 957 2 245 2 128 2 512 2 960 6 521 2 
754 2 645 2 404 26 867 2 19 2 20 2 539 2 158 2 767 4 284 2 287 2 289 2 884 2 778 2 885 2 889 2 659 2 37 2 39 2 298 2 300 2 902 2 668 2 794 2 567 2 907 2 568 2 795 4 798 6 802 4 189 2 444 2 803 2 59 2 576 2 806 2 684 2 455 2 326 2 74 2 73 6 80 8 814 2 85 2 592 4 346 2 823 6 929 2 481 2 95 2 710 4 602 26 483 4 932 2 486 2 934 2 939 2 938 2 713 2 714 2 222 2 362 2 611 2 836 2 724 6 230 2 233 4 369 4 619 2 956 2 957 2 245 2 128 2 512 2 960 6 851 2 521 2 
947 2 
555 2 176 2 
812 2 141 6 691 2 148 2 3 2 404 12 85 2 695 2 473 2 819 2 89 2 699 2 869 4 540 4 417 2 24 2 709 2 710 2 602 6 483 2 544 2 287 2 932 2 881 4 774 2 164 2 712 2 885 2 888 4 487 2 829 8 941 2 715 2 168 8 784 2 611 2 38 2 836 2 364 8 110 2 558 2 614 2 241 2 123 6 124 4 799 2 626 4 678 2 960 4 741 2 965 4 685 2 388 2 325 4 522 2 70 2 326 2 139 2 852 2 461 6 
812 2 141 8 691 2 148 2 3 2 404 12 85 2 695 2 473 2 89 2 699 2 869 4 540 4 24 2 710 2 709 2 483 2 602 6 544 2 287 2 932 2 881 4 774 2 164 2 712 2 885 2 487 2 829 8 888 4 941 2 715 2 168 8 784 2 175 2 611 2 38 2 836 2 364 8 110 2 558 2 614 2 906 4 241 2 124 4 123 6 624 2 799 2 626 4 678 2 446 2 960 4 741 2 965 4 685 2 388 2 325 4 522 2 70 2 326 2 139 2 852 2 461 8 
812 2 141 2 540 4 38 2 678 2 3 2 881 2 741 2 965 2 473 2 685 2 89 2 487 2 888 2 139 2 124 4 123 2 799 2 
812 2 141 6 691 2 148 2 3 2 404 12 85 2 695 2 473 2 819 2 89 2 699 2 869 4 540 4 417 2 709 2 710 2 602 6 483 2 544 2 287 2 932 2 881 4 774 2 164 2 712 2 885 2 888 4 487 2 829 4 941 2 715 2 168 4 784 2 175 2 611 2 38 2 836 2 364 4 110 2 558 2 614 2 241 2 123 4 124 4 799 2 626 4 678 2 960 4 741 2 965 4 685 2 388 2 325 4 522 2 70 2 326 2 139 2 852 2 461 6 
812 2 141 4 691 2 148 2 3 2 404 12 85 2 695 2 473 2 819 2 89 2 699 2 869 4 540 4 417 2 709 2 710 2 602 6 483 2 544 2 287 2 932 2 881 4 774 2 164 2 712 2 885 2 888 4 487 2 829 4 941 2 715 2 219 2 168 4 784 2 611 2 38 2 836 2 364 4 110 2 558 2 614 2 241 2 123 6 124 4 799 2 626 4 678 2 960 4 741 2 965 4 685 2 388 2 325 4 522 2 70 2 326 2 139 2 852 2 461 6 
812 2 141 6 691 2 148 2 3 2 404 12 85 2 695 2 473 2 819 2 89 2 699 2 869 4 540 4 417 2 24 2 709 2 710 2 602 6 483 2 544 2 287 2 932 2 881 4 774 2 164 2 712 2 885 2 888 4 487 2 829 4 941 2 715 2 168 8 784 2 611 2 38 2 836 2 364 4 110 2 558 2 614 2 241 2 123 6 124 4 799 2 626 4 678 2 960 4 741 2 965 4 685 2 388 2 325 4 522 2 70 2 326 2 139 2 852 2 461 6 
812 2 141 6 691 2 148 2 3 2 404 12 85 2 695 2 473 2 819 2 89 2 699 2 869 4 540 4 417 2 24 2 709 2 710 2 483 2 602 6 544 2 287 2 932 2 881 4 774 2 164 2 712 2 885 2 888 4 487 2 829 8 941 2 715 2 219 2 168 8 784 2 611 2 38 2 836 2 364 8 110 2 558 2 614 2 241 2 123 8 124 4 799 2 626 4 678 2 960 4 741 2 965 4 685 2 388 2 325 4 522 2 70 2 326 2 139 2 852 2 461 8 
812 2 141 6 691 2 148 2 3 2 404 12 85 2 695 2 473 2 819 2 89 2 699 2 869 4 540 4 417 2 24 2 709 2 710 2 602 6 483 2 544 2 287 2 932 2 881 4 774 2 164 2 712 2 885 2 888 4 487 2 829 8 941 2 715 2 168 8 784 2 611 2 38 2 836 2 364 8 110 2 558 2 614 2 241 2 123 6 124 4 799 2 626 4 678 2 960 4 741 2 965 4 685 2 388 2 325 4 522 2 70 2 326 2 139 2 852 2 461 6 
754 2 3 2 11 2 536 1 539 2 540 4 279 1 287 2 544 2 774 2 775 6 550 8 778 2 551 6 780 2 552 2 295 10 784 2 37 2 38 2 558 4 300 2 46 2 794 2 565 1 568 2 798 8 53 6 799 2 56 6 800 6 802 4 59 2 576 2 806 2 325 6 70 2 326 2 74 2 73 6 811 2 812 2 80 4 81 1 813 2 814 2 85 2 336 6 592 2 89 2 823 6 598 7 95 2 824 2 351 6 352 1 602 24 98 2 611 2 836 2 110 4 614 2 369 4 622 2 123 8 124 4 125 2 626 4 843 2 127 1 130 2 849 2 851 2 388 2 390 2 852 2 139 2 394 2 141 4 645 2 148 2 404 46 860 6 647 2 863 6 867 2 152 2 869 8 412 1 417 2 877 2 419 2 161 6 160 6 881 4 880 2 164 2 885 2 167 2 888 4 168 2 170 2 658 2 171 6 659 2 895 1 901 2 189 2 678 2 192 1 913 2 685 2 455 2 461 12 689 6 690 2 691 2 695 2 473 2 699 2 210 2 481 2 710 4 709 2 482 6 483 4 932 2 485 6 486 12 934 2 939 2 938 2 712 2 713 2 487 2 714 2 941 4 715 2 219 4 490 2 496 2 723 2 724 6 948 2 230 2 233 4 241 2 731 4 507 2 247 7 512 2 960 6 515 4 741 2 965 4 521 4 522 2 259 6 
141 8 148 2 645 2 754 2 3 2 404 48 860 6 757 2 11 2 647 2 863 6 152 2 867 2 869 8 539 4 540 4 417 2 767 2 24 4 877 2 544 2 160 6 161 6 419 2 287 2 880 2 881 4 164 2 774 2 775 6 550 8 778 2 885 2 551 6 167 2 888 4 780 2 552 2 168 6 170 2 171 6 658 2 295 10 659 2 784 2 38 2 37 2 558 4 300 2 46 2 901 2 794 2 568 2 53 6 798 8 799 2 800 6 56 6 802 4 678 2 189 2 59 2 913 2 576 2 806 2 685 2 455 2 325 6 70 2 326 2 461 12 73 6 74 4 689 6 811 2 690 2 812 2 691 2 80 8 813 2 814 2 85 2 336 6 695 2 473 2 592 2 89 2 699 2 823 6 210 2 95 2 481 2 351 6 824 2 482 6 709 2 710 4 602 26 483 4 932 2 485 6 486 12 98 2 934 2 938 2 939 2 712 2 487 2 713 2 941 4 714 4 715 2 490 2 105 2 496 2 611 2 836 2 723 2 110 4 724 6 948 2 230 2 614 2 233 4 369 4 622 2 241 2 731 4 124 4 123 8 125 2 507 2 843 2 626 4 130 2 512 2 960 6 515 4 741 2 965 4 849 2 851 2 390 2 521 4 388 2 522 2 139 2 852 2 394 2 259 6 
141 8 148 2 645 2 754 2 3 2 404 48 860 6 757 2 11 2 647 2 863 6 152 2 867 2 869 8 539 4 540 4 417 2 767 2 24 4 877 2 544 2 160 6 161 6 419 2 287 2 880 2 881 4 164 2 774 2 775 6 550 8 778 2 885 2 551 6 167 2 888 4 780 2 552 2 168 6 170 2 171 6 658 2 295 10 659 2 784 2 38 2 37 2 558 4 300 2 46 2 901 2 794 2 568 2 53 6 798 8 799 2 800 6 56 6 802 4 678 2 189 2 59 2 913 2 576 2 806 2 685 2 455 2 325 6 70 2 326 2 461 12 73 6 74 4 689 6 811 2 690 2 812 2 691 2 80 8 813 2 814 2 85 2 336 6 695 2 473 2 592 2 89 2 699 2 823 6 210 2 95 2 481 2 351 6 824 2 482 6 709 2 710 4 602 26 483 4 932 2 485 6 486 12 98 2 934 2 938 2 939 2 712 2 829 4 487 2 713 2 941 4 714 4 715 2 490 2 105 2 496 2 611 2 836 2 723 2 364 4 110 4 724 6 948 2 230 2 614 2 233 4 369 4 622 2 241 2 731 4 124 4 123 8 125 2 507 2 843 2 626 4 130 2 512 2 960 6 515 4 741 2 965 4 849 2 851 2 390 2 521 4 388 2 522 2 139 2 852 2 394 2 259 6 
754 2 3 2 531 6 757 2 11 2 539 4 540 4 767 2 24 4 544 2 287 2 774 2 775 12 550 8 778 2 551 12 780 2 552 2 295 8 784 2 37 2 38 2 558 4 300 2 46 2 794 2 568 4 798 12 569 2 53 6 799 2 56 12 800 12 802 4 59 2 576 4 806 4 325 6 70 2 326 2 74 4 73 8 811 2 812 2 80 10 813 2 814 2 85 2 336 6 592 4 89 2 823 8 95 4 824 2 351 6 602 24 98 2 829 4 105 2 611 2 836 2 364 4 110 4 614 2 366 6 369 6 119 2 622 2 123 10 124 4 125 2 626 4 843 2 130 2 847 2 849 2 851 2 388 2 390 2 638 2 852 2 139 2 394 2 855 6 141 10 142 6 645 2 148 2 404 52 860 6 647 2 863 6 867 2 152 2 869 8 872 2 417 2 877 2 419 2 161 6 160 6 881 4 880 2 164 2 885 2 167 2 888 4 168 6 170 2 658 2 171 6 659 2 175 2 901 2 189 2 678 2 685 2 455 2 461 16 688 6 689 6 690 2 691 2 201 6 695 2 473 2 699 2 479 6 706 6 210 2 708 2 481 2 710 4 709 2 482 12 483 4 932 2 485 12 486 10 934 2 939 2 938 2 712 2 713 2 487 2 714 4 941 4 715 2 219 2 490 2 496 2 723 2 724 6 948 2 230 2 229 2 233 4 241 2 731 4 507 2 512 2 960 6 515 4 741 2 965 4 517 6 521 4 522 2 967 2 259 6 
812 2 141 6 691 2 38 2 364 4 110 2 404 4 614 2 473 2 869 2 241 2 124 2 123 6 799 2 626 2 540 2 417 2 678 2 24 2 741 2 164 2 774 2 965 4 325 2 388 2 829 4 487 2 888 4 522 2 70 2 715 2 168 6 852 2 461 4 784 2 
141 6 858 2 754 2 645 2 404 28 9 2 760 2 867 2 869 2 540 2 417 2 24 2 287 2 164 2 774 2 885 2 778 2 888 4 168 6 295 2 659 2 784 2 37 2 38 2 300 2 896 2 559 2 794 2 798 8 799 2 802 4 189 2 678 2 59 2 913 2 806 3 455 2 325 2 70 2 326 2 917 2 461 4 73 6 812 2 691 2 85 2 473 2 592 3 823 6 481 2 95 3 710 4 709 2 483 4 602 24 932 2 486 4 934 2 939 2 938 2 487 2 713 2 715 2 360 2 945 2 611 2 836 2 364 2 110 2 724 6 614 2 230 2 233 4 369 4 241 2 123 6 124 2 626 2 512 2 960 6 133 3 741 2 965 4 851 2 388 2 521 2 522 2 852 2 396 2 
388 2 614 2 640 2 
388 2 614 2 640 2 
141 12 148 2 754 2 645 2 404 24 6 2 647 2 867 2 16 4 869 4 539 4 540 2 24 4 285 2 287 2 880 2 881 4 164 2 778 2 885 2 888 4 168 6 295 2 659 2 173 2 175 4 37 2 556 2 558 4 300 2 665 2 794 2 798 2 802 4 189 2 59 2 455 2 325 4 70 2 326 2 328 2 461 16 74 4 73 2 689 2 811 2 586 2 80 4 465 2 814 4 85 2 473 2 592 2 818 2 89 2 700 2 699 2 92 2 823 2 600 4 481 2 710 4 602 16 483 4 484 2 932 2 486 4 825 2 934 2 99 2 939 2 938 2 712 2 713 2 487 2 829 4 941 2 714 4 219 4 497 2 611 2 836 2 364 6 724 6 110 4 614 4 233 4 370 2 731 2 245 4 124 2 123 12 626 2 958 2 512 2 960 6 515 2 741 4 965 4 851 2 388 6 521 6 139 2 640 2 
844 2 227 2 176 2 813 2 602 2 404 4 285 2 877 2 6 2 515 2 486 2 685 2 885 2 92 2 295 2 689 2 573 2 
141 12 528 2 148 2 754 2 645 2 404 24 6 2 647 2 867 2 16 4 869 4 539 4 540 2 24 4 285 2 544 2 287 2 880 2 881 4 164 2 778 2 885 2 888 4 168 6 659 2 173 2 175 4 37 2 556 2 558 2 300 2 665 2 794 2 798 2 802 4 189 2 59 2 455 2 325 4 195 2 70 2 326 2 328 2 461 16 74 4 73 2 689 2 811 2 80 4 465 2 814 4 85 2 473 2 592 4 89 2 700 2 92 2 823 2 600 4 481 2 710 4 602 16 483 4 932 2 486 2 825 2 934 2 99 2 939 2 938 2 712 2 713 2 487 2 829 4 941 4 714 4 219 4 497 4 611 2 836 2 364 6 724 6 110 4 614 4 233 4 239 2 370 2 731 2 245 4 124 2 123 12 626 2 512 2 960 6 741 4 848 2 965 4 851 2 389 2 388 6 521 6 139 2 640 2 
141 12 148 2 754 2 645 2 404 24 6 2 647 2 867 2 16 4 869 4 539 4 540 2 24 4 285 2 544 2 287 2 880 2 881 4 164 2 778 2 885 2 888 4 168 6 295 2 659 2 173 2 175 4 34 2 37 2 556 2 558 4 300 2 665 2 794 2 798 2 187 2 802 4 189 2 59 2 455 2 325 4 70 2 326 2 328 2 461 16 74 4 73 2 689 2 811 2 80 4 465 2 814 4 85 2 473 2 592 2 89 2 700 2 699 2 92 2 823 2 600 4 481 2 710 4 602 16 483 4 932 2 486 4 825 2 934 2 99 2 939 2 938 2 712 2 713 2 487 2 829 4 941 4 714 4 219 4 223 2 497 2 611 2 836 2 364 6 724 6 110 4 614 4 233 4 951 2 370 2 731 2 245 4 124 2 123 12 626 2 511 2 512 2 960 6 515 2 741 4 965 4 851 2 388 6 521 6 139 2 640 2 
530 2 754 2 645 2 755 2 404 28 262 6 533 2 8 2 12 4 648 2 13 2 14 2 867 2 15 4 763 2 274 4 276 2 281 2 543 2 159 2 770 2 773 2 287 2 419 2 654 2 547 2 289 4 885 2 777 2 778 2 656 6 890 4 170 2 658 2 429 2 554 8 37 2 300 2 897 2 303 8 183 2 310 2 903 2 184 2 666 2 568 4 908 2 798 12 675 2 572 2 316 2 801 2 802 2 189 2 679 2 911 2 59 2 912 2 447 2 576 4 61 2 806 4 914 2 194 2 326 2 73 8 463 2 79 2 464 2 80 8 85 2 472 1 592 4 594 2 821 4 91 2 927 2 823 8 348 2 480 2 94 2 481 2 95 4 824 2 711 2 710 4 483 4 602 22 932 2 486 2 98 2 826 2 935 2 934 2 939 2 938 2 359 2 102 2 491 2 493 2 225 2 722 2 611 2 836 2 835 4 724 4 613 2 230 2 233 2 367 2 369 6 837 2 953 2 121 2 122 2 842 2 628 2 510 2 960 6 378 2 849 2 518 2 851 2 521 2 390 2 524 2 751 2 
401 2 403 2 404 2 230 2 232 2 369 2 592 3 305 2 504 2 568 6 798 2 823 2 627 2 318 3 95 3 876 4 602 2 253 2 806 3 882 2 808 2 104 2 73 2 782 2 
401 2 403 2 404 2 230 2 232 2 369 2 592 2 305 2 504 2 568 6 798 2 823 2 627 2 318 2 95 2 876 4 602 2 253 2 806 2 882 2 808 2 104 2 73 2 782 2 
401 2 403 2 404 2 230 2 232 2 369 2 592 2 305 2 504 2 568 6 798 2 823 2 627 2 318 2 95 2 876 4 602 2 253 2 806 2 882 2 808 2 104 2 73 2 782 2 
143 4 404 10 403 2 262 5 817 4 592 3 15 4 342 2 868 2 415 4 602 4 159 2 654 2 102 2 290 2 217 2 489 2 103 2 293 2 493 2 361 2 230 2 43 3 725 3 727 6 238 2 953 2 184 2 669 2 243 2 798 2 842 2 575 4 806 3 64 4 66 2 71 4 257 3 196 2 642 2 
143 4 404 10 403 2 262 4 817 4 592 2 15 4 342 2 868 2 415 4 602 4 159 2 654 2 102 2 290 2 217 2 489 2 103 2 293 2 493 2 361 2 230 2 43 2 725 2 727 6 238 2 310 2 953 2 184 2 669 2 243 2 798 2 842 2 912 2 575 4 806 2 64 4 66 2 456 2 71 4 257 2 196 2 642 2 
143 4 404 10 403 2 262 4 817 4 592 2 15 4 342 2 868 2 415 4 602 4 159 2 654 2 102 2 290 2 217 2 489 2 103 2 293 2 493 2 361 2 230 2 43 2 725 2 727 6 238 2 310 2 953 2 184 2 669 2 243 2 798 2 842 2 912 2 575 4 806 2 64 4 66 2 456 2 71 4 257 2 196 2 642 2 
143 4 404 10 403 2 262 4 817 4 592 2 15 4 342 2 868 2 415 4 602 4 159 2 654 2 102 2 290 2 217 2 489 2 103 2 293 2 493 2 361 2 230 2 43 2 725 2 727 6 238 2 310 2 953 2 184 2 669 2 243 2 798 2 842 2 912 2 575 4 806 2 64 4 66 2 456 2 71 4 257 2 196 2 642 2 
143 4 404 10 403 2 262 4 817 4 592 2 15 4 342 2 868 2 415 4 602 4 159 2 654 2 102 2 290 2 217 2 489 2 103 2 293 2 493 2 361 2 230 2 43 2 725 2 727 6 238 2 310 4 953 2 184 2 669 2 243 2 798 2 842 2 912 4 575 4 806 2 64 4 66 2 456 4 71 4 257 2 196 2 642 2 
144 2 940 2 441 2 846 2 4 2 294 2 289 2 
322 2 308 2 375 2 846 2 548 2 
527 1 248 2 738 2 377 1 602 4 404 4 693 2 287 2 234 1 337 2 182 2 667 1 271 2 242 1 221 2 797 2 278 2 
404 6 613 2 262 12 235 2 117 2 310 6 15 11 953 5 184 5 342 2 121 2 478 2 274 3 506 1 185 2 842 6 316 2 801 1 211 2 602 6 159 6 912 6 654 6 422 2 64 4 102 5 456 4 69 4 493 5 809 2 524 2 258 2 
415 2 246 2 143 2 36 2 845 2 58 2 5 2 933 2 162 2 827 2 924 2 71 2 275 3 
415 2 246 2 143 2 36 2 845 2 404 1 602 1 58 4 5 2 469 1 933 2 162 2 827 2 924 2 71 2 275 6 495 2 674 2 
415 2 246 2 143 2 36 4 845 4 58 4 5 2 933 2 162 2 827 4 924 2 71 2 275 6 674 2 495 2 
415 2 246 2 143 2 36 8 845 8 404 1 602 1 58 4 5 2 469 1 933 2 162 2 827 8 924 2 71 2 275 10 674 8 495 6 
525 6 0 4 145 2 261 10 404 150 402 4 756 22 408 12 649 28 268 4 866 4 650 16 535 4 867 14 270 2 762 2 411 2 18 2 22 90 541 6 772 2 28 10 288 2 163 2 779 6 30 2 291 1 32 2 781 2 783 24 553 24 296 2 892 124 35 4 37 58 893 6 786 4 560 2 662 4 663 8 180 5 436 18 181 6 437 8 564 4 51 6 311 90 905 4 672 2 186 6 54 4 676 16 802 88 317 26 189 8 445 6 681 4 59 14 60 10 686 4 578 4 687 8 579 6 581 10 76 8 918 6 78 6 585 6 919 24 332 24 84 34 334 4 587 84 588 16 335 4 590 11 696 2 340 16 697 8 475 6 88 8 343 6 822 4 347 8 602 134 215 8 931 42 603 2 937 4 101 6 357 4 218 10 716 18 719 6 494 6 106 26 108 2 500 17 834 24 109 6 946 8 724 248 233 112 114 2 949 6 616 2 952 6 728 24 618 12 954 36 244 6 625 4 372 4 514 4 251 4 962 6 964 4 743 10 742 42 746 10 383 50 851 58 636 92 138 6 255 10 641 8 750 2 968 4 
919 2 261 2 147 2 404 46 334 2 588 4 86 2 202 2 470 2 862 2 649 38 339 2 697 2 864 2 650 4 867 2 761 2 88 2 343 2 208 2 273 2 602 44 772 2 28 2 163 2 883 2 101 4 779 2 887 2 218 2 31 2 781 2 296 2 892 6 785 2 500 2 834 2 37 2 109 2 724 44 178 2 113 2 44 4 114 2 233 20 561 2 560 2 899 2 663 2 436 2 118 2 180 2 900 2 728 2 49 2 954 2 505 4 729 2 839 2 371 2 186 2 315 2 840 2 508 2 676 4 802 20 736 2 189 2 630 2 680 2 59 2 60 2 962 2 964 2 321 2 743 2 807 2 134 6 746 2 382 2 635 4 851 2 138 2 255 2 137 2 457 4 392 2 460 2 395 2 581 2 641 6 76 2 
525 4 145 2 261 4 404 78 532 16 7 2 408 14 649 14 866 4 650 10 535 4 867 6 273 10 277 4 541 4 26 8 28 6 163 2 30 2 166 2 779 4 781 2 553 8 296 2 892 24 35 4 37 30 893 4 557 16 786 4 560 2 662 4 663 2 436 10 437 4 438 4 306 4 51 4 905 4 672 2 186 4 54 4 676 10 802 36 189 2 680 10 445 4 681 2 59 6 60 4 453 32 68 8 578 4 687 4 579 4 76 2 918 4 78 4 585 4 84 30 587 24 588 10 86 2 815 4 202 2 340 8 474 2 341 2 88 2 475 4 343 4 602 70 931 16 357 4 101 2 218 4 492 4 719 4 494 4 500 10 109 4 724 104 113 2 233 44 114 2 616 2 952 4 954 6 955 4 729 10 120 2 244 4 625 4 372 4 962 4 742 8 743 4 380 8 383 8 851 28 636 24 387 4 747 8 523 2 138 4 641 6 968 4 
261 2 402 2 404 28 84 6 756 10 588 6 590 2 202 2 696 2 649 14 340 6 650 6 867 2 88 2 762 2 343 4 18 2 347 2 602 26 603 2 772 2 28 2 288 2 163 2 357 2 101 2 779 4 218 2 781 2 296 2 892 8 35 2 37 12 500 2 109 4 724 40 114 2 233 14 561 2 560 2 663 2 180 2 436 2 437 4 954 2 564 2 186 4 676 6 802 14 189 2 681 2 59 2 60 2 962 4 743 2 851 12 138 4 641 4 76 2 
100 2 

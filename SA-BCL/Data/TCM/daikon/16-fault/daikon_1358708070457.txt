#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 370 147 280 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (44,52,210,216,468,556,578,613) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 407 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 407 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 513 (305,374) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 513 (305,374) (305,374) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 513 (305,374) 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (161,460) 515 19 546 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 126 66 204 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 178 282 40 126 66 204 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 126 66 204 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 5 204 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:lte(II)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 2824 | if (x) -> if (!x)
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Node:Node()V
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:sum([[I)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_ntk()I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.MathMDE:gcd(II)I
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:intern([D)[D
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:indexOf([II)I | OPERATOR | 13879 | == -> !=
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:ne(II)Z
utilMDE.MathMDE:negate(I)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:noDups([I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLT([II)Z
daikon.Quant:slice([III)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoAux:hashCode()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2586 | = null
daikon.Quant:eltsLteIndex([I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z | OPERATOR | 118000 | ++ -> --
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:isArray()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:gte(II)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ModBitTracker:num_samples()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isScalar()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 65371 | return null
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken; | ASSIGN | 215280 | = null
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:split(I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107829 | = null
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaCharStream:getBeginLine()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptSlice1:arity()I
daikon.Ppt:Ppt()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:modulus([I)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lexLT([I[I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern:intern([J)[J
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Debug:logOn()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | ASSIGN | 26710 | = null
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:gt(II)Z
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:lexLTE([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eq(JJ)Z
daikon.Quant:eq(FF)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaCharStream:getEndLine()I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
106 2 557 4 161 2 641 2 460 2 163 2 257 2 169 2 190 2 
405 6 630 2 245 2 579 6 652 2 279 2 239 2 402 2 233 2 326 2 322 6 
496 6 161 2 460 2 45 6 571 2 251 2 445 4 164 2 552 6 372 2 447 2 527 6 235 4 
192 2 368 4 161 6 460 6 498 16 461 8 177 2 139 4 60 4 528 6 352 2 39 10 375 8 81 2 530 10 224 16 501 2 503 6 651 8 101 10 283 16 267 8 243 2 487 10 171 2 334 4 449 10 54 29 490 26 610 12 
135 6 316 4 
378 2 
533 2 264 2 249 2 63 2 17 2 151 2 252 4 324 2 155 2 588 2 325 2 634 2 
519 2 1 2 121 4 161 4 460 4 498 32 638 4 371 6 141 6 526 2 142 4 528 4 10 2 465 2 39 16 352 2 619 4 530 16 224 32 166 8 646 4 503 4 649 6 651 18 101 6 283 32 18 4 424 4 267 6 51 6 487 16 227 6 449 16 334 2 54 54 134 6 490 48 657 2 610 22 
497 2 151 2 173 2 
593 2 369 2 162 2 476 2 426 2 200 2 553 22 53 2 471 2 180 2 389 2 480 2 41 2 481 10 
435 2 217 2 498 2 72 2 587 2 528 2 39 2 530 2 224 2 651 2 101 4 283 2 487 2 449 2 334 2 54 6 542 2 490 4 117 2 610 2 452 2 118 2 120 2 
42 2 182 2 368 2 283 8 498 8 371 6 638 4 141 6 487 4 142 4 449 4 54 16 490 12 39 4 530 4 610 4 224 8 
413 4 497 6 252 4 253 2 73 2 109 2 442 2 400 2 127 2 621 2 260 2 533 4 502 4 484 14 15 4 469 62 564 4 151 8 104 4 241 4 307 2 68 2 207 10 269 2 540 4 170 2 510 4 450 2 310 2 92 2 604 2 158 2 337 4 229 2 366 4 95 10 433 2 119 4 56 2 173 2 
274 2 345 2 223 2 27 2 620 2 378 2 150 2 650 2 246 2 516 2 
71 1 394 1 395 2 293 2 396 2 298 2 75 2 9 2 299 5 220 4 300 1 576 2 482 2 152 2 87 2 486 1 308 1 583 2 309 6 20 1 488 2 489 2 317 2 492 2 493 2 160 2 231 4 161 30 586 1 499 2 417 6 26 2 236 2 327 2 98 2 238 1 506 1 105 1 509 2 603 2 511 2 512 2 33 2 172 5 35 1 609 3 521 2 338 2 346 2 178 4 441 2 617 2 255 1 348 6 256 2 351 2 257 2 258 2 259 2 532 4 261 4 262 2 263 1 116 1 186 1 187 2 541 1 448 2 363 1 364 2 365 2 543 2 367 1 57 1 197 11 460 32 637 1 555 2 558 2 466 6 647 3 282 4 65 2 383 2 286 2 211 5 291 6 
548 2 460 2 
460 4 28 2 203 2 
615 2 
635 2 412 2 455 2 196 2 459 2 370 2 232 2 437 2 341 2 23 2 321 2 439 2 143 2 277 2 399 2 11 2 373 2 147 2 79 2 12 2 148 2 115 2 618 2 280 2 622 2 357 2 62 18 421 2 626 2 444 2 538 2 629 2 600 18 507 2 154 2 244 2 156 2 410 2 432 2 607 18 633 2 136 2 
504 1 598 2 21 2 266 2 
330 2 21 2 
139 2 418 2 100 2 58 2 151 2 21 2 13 2 
96 2 58 2 21 2 
52 2 58 2 21 2 
25 2 157 2 266 2 
58 2 21 2 
254 2 157 2 
16 2 21 2 
157 2 266 2 411 2 
265 2 266 2 67 2 
153 2 266 2 531 2 
285 2 4 2 266 2 
237 2 563 2 266 2 
194 2 157 2 
21 2 271 2 
265 2 390 2 
129 2 531 2 
495 2 4 2 
237 2 292 2 
3 2 157 2 
237 2 165 2 
4 2 323 2 
205 2 531 2 
265 2 49 2 
569 2 157 2 266 2 411 2 
569 2 157 2 443 2 266 2 411 2 
157 2 302 2 266 2 
157 2 80 2 266 2 
577 2 422 2 131 2 295 2 
418 2 624 2 130 2 151 2 
418 2 624 2 100 2 130 2 151 2 314 2 
139 2 418 2 58 2 151 2 21 2 218 2 
59 2 168 2 
139 2 189 2 418 2 151 2 
214 2 4 2 
237 2 74 2 
188 2 265 2 
124 2 531 2 
237 2 467 2 531 2 
594 2 237 2 531 2 
237 2 523 2 531 2 
237 2 531 2 451 2 
198 2 418 2 355 2 43 6 653 2 151 2 247 6 386 2 
157 2 122 2 
578 2 613 2 359 2 456 2 458 2 44 2 596 2 216 2 597 2 536 2 438 2 306 2 553 4 556 2 210 4 468 2 
213 2 266 2 
256 2 
570 2 338 2 395 2 293 2 396 2 343 2 9 2 75 2 298 6 441 2 178 4 348 4 114 2 257 2 149 4 532 6 261 4 482 2 116 2 407 2 309 2 448 2 270 2 365 2 367 2 493 2 492 2 160 2 197 2 231 4 161 16 460 16 416 2 417 6 26 2 466 2 327 2 98 2 329 2 282 4 65 2 383 2 286 2 603 2 512 2 472 2 33 2 291 6 
570 2 338 2 395 2 293 2 396 2 343 2 9 2 75 2 298 6 441 2 178 4 348 6 114 2 257 2 149 4 532 6 261 4 262 2 482 2 116 2 407 2 309 2 448 2 270 2 365 2 543 2 367 2 493 2 492 2 160 2 197 2 231 4 161 16 460 16 416 2 417 6 26 2 466 2 327 2 98 2 329 2 282 4 65 2 383 2 286 2 603 2 512 2 472 2 33 2 291 6 
640 2 474 2 313 2 
640 2 474 2 313 2 
0 2 474 2 395 2 293 2 396 2 298 2 75 2 9 2 146 2 401 2 482 2 405 4 579 6 406 2 584 2 492 2 493 2 160 2 161 14 231 4 97 2 499 2 322 6 414 2 417 6 416 2 26 2 327 2 592 2 98 2 239 4 102 2 245 2 32 2 603 2 512 2 513 2 33 2 516 1 611 2 343 2 178 4 441 2 112 2 348 6 257 2 532 2 261 4 262 2 535 2 47 2 187 2 628 6 630 4 448 2 270 2 365 2 543 2 197 2 636 2 460 18 274 1 640 2 279 2 202 2 61 2 374 2 560 2 128 2 282 4 65 2 383 2 286 2 291 2 
312 2 639 2 517 2 415 2 297 2 
0 2 474 2 395 2 293 2 396 2 298 2 75 2 9 2 146 2 401 2 482 2 405 4 579 6 406 2 305 2 584 2 492 2 493 2 160 2 161 14 231 4 97 2 499 2 322 6 414 2 417 6 416 2 26 2 327 2 592 2 98 2 239 4 102 2 245 2 32 2 603 2 512 2 513 2 33 2 611 2 343 2 178 4 441 2 112 2 348 6 257 2 532 2 261 4 262 2 535 4 47 2 187 2 628 6 630 4 448 2 270 2 365 2 543 2 197 4 636 2 460 18 640 2 279 2 202 2 61 2 374 2 560 2 128 2 282 4 65 2 383 2 384 2 286 2 291 2 
0 2 474 2 395 2 293 2 396 2 298 2 75 2 9 2 146 2 401 2 482 2 405 4 579 6 406 2 584 2 492 2 493 2 160 2 161 14 231 4 97 2 499 2 322 6 414 2 417 6 416 2 26 2 327 2 592 2 98 2 239 4 102 2 245 2 32 2 603 2 512 2 513 2 33 2 611 2 343 2 178 4 441 2 112 2 348 6 257 2 532 2 261 4 262 2 535 2 47 2 187 2 628 6 630 4 448 2 270 2 365 2 543 2 197 2 636 2 460 18 640 2 279 2 202 2 61 2 374 2 560 2 128 2 282 4 65 2 383 2 286 2 291 2 
36 2 434 2 215 2 338 2 395 2 342 2 397 2 9 2 75 2 298 6 140 2 178 2 441 2 222 2 348 3 257 2 149 4 84 2 532 6 261 4 482 2 262 1 539 2 19 2 582 2 309 2 448 2 270 2 365 2 543 1 546 2 491 2 492 2 493 2 494 2 195 2 197 2 161 18 231 4 460 24 320 2 551 2 201 2 416 2 417 6 463 2 26 2 464 2 466 2 327 2 282 2 167 2 65 2 383 2 284 2 30 1 132 2 287 2 286 2 603 2 335 2 512 2 33 2 515 2 568 2 291 8 290 1 
532 2 483 3 197 3 161 2 338 2 460 2 123 2 654 2 428 2 298 2 309 3 336 2 466 3 291 2 149 2 
532 2 483 2 197 2 161 2 338 2 460 2 123 2 654 2 428 2 298 2 309 2 336 2 466 2 291 2 149 2 
532 2 483 2 197 2 161 2 338 2 460 2 123 2 654 2 428 2 298 2 309 2 336 2 466 2 291 2 149 2 
174 3 197 3 161 2 338 2 460 4 123 2 498 2 125 2 39 2 351 2 466 3 530 2 258 2 224 2 503 2 303 2 562 3 283 2 565 3 85 2 267 4 487 2 449 2 54 6 91 2 490 4 544 2 608 2 291 2 
174 2 197 2 161 2 338 2 460 4 123 2 498 2 125 2 352 2 351 2 466 2 258 2 224 2 503 2 651 2 303 2 562 2 283 2 565 2 85 2 267 2 54 2 91 2 490 2 544 2 608 2 291 2 610 2 
174 2 197 2 161 2 338 2 460 4 123 2 498 2 125 2 39 2 351 2 466 2 530 2 258 2 224 2 503 2 303 2 562 2 283 2 565 2 85 2 267 4 487 2 449 2 54 4 91 2 490 4 544 2 608 2 291 2 
174 2 197 2 161 2 338 2 460 4 123 2 498 2 125 2 39 2 351 2 466 2 530 2 258 2 224 2 503 2 303 2 562 2 283 2 565 2 85 2 267 4 487 2 449 2 54 4 91 2 490 4 544 2 608 2 291 2 
174 2 197 2 161 2 338 2 460 4 123 2 498 2 125 2 39 2 352 4 351 2 466 2 530 2 258 2 224 2 503 2 651 4 303 2 562 2 283 2 565 2 85 2 267 4 487 2 449 2 54 4 91 2 490 4 544 2 608 2 291 2 610 4 
547 2 347 2 575 2 289 2 212 2 616 2 
462 2 625 2 470 2 38 2 575 2 522 2 632 2 
614 2 161 8 230 2 460 10 294 2 273 2 109 1 398 2 77 2 572 2 144 2 26 2 590 1 328 2 377 2 595 2 332 2 46 1 423 2 381 1 599 2 307 1 429 2 108 2 159 2 70 2 
520 2 161 6 460 6 475 2 498 6 6 2 371 4 638 2 78 2 39 6 352 2 479 2 619 2 530 6 224 6 166 2 561 2 503 2 651 2 537 2 283 6 267 4 487 6 449 6 54 16 134 4 490 12 55 2 94 2 610 3 
191 2 623 2 393 2 161 1 360 2 206 2 183 2 318 2 460 1 549 2 655 1 242 2 430 2 642 2 591 2 585 4 644 2 301 7 
191 2 623 2 393 2 360 2 183 2 206 4 318 2 549 2 242 4 430 2 642 2 591 2 585 4 644 4 301 6 
191 2 623 2 393 2 161 1 360 2 183 8 206 8 318 2 460 1 549 2 655 1 242 8 430 2 642 2 591 6 585 4 644 8 301 10 
191 2 623 2 393 2 360 2 206 2 318 2 549 2 242 2 430 2 642 2 585 2 644 2 301 2 
296 2 219 2 137 2 82 4 403 2 225 2 404 2 485 4 581 4 88 1 409 2 161 24 327 6 508 2 431 1 31 1 606 4 612 2 518 2 436 2 524 2 111 2 178 10 441 4 348 16 529 1 356 4 534 1 262 4 358 2 446 2 50 1 268 2 631 2 543 4 545 2 272 2 193 2 460 26 275 2 554 2 376 2 204 2 126 2 380 2 282 8 64 2 66 2 286 6 567 2 473 1 391 2 
2 2 436 2 339 2 176 2 250 2 219 2 440 2 37 4 441 2 178 14 145 2 221 2 348 26 478 2 354 2 179 2 14 2 40 2 181 4 404 2 226 2 580 2 581 2 446 2 86 2 88 2 228 2 90 2 93 2 545 2 453 2 161 30 460 30 234 2 24 2 199 2 550 2 554 2 278 2 419 2 589 2 643 2 327 2 204 2 126 2 648 2 331 2 282 14 333 2 505 2 66 2 29 2 601 2 602 2 133 4 286 2 388 2 606 20 605 2 248 2 69 2 392 2 
219 2 296 2 137 2 138 6 76 2 573 2 221 4 574 2 82 6 83 2 404 2 304 2 485 2 581 10 89 8 311 2 408 6 409 2 315 6 161 40 22 2 319 2 589 4 327 4 500 8 99 2 240 2 427 2 508 2 107 2 606 14 612 4 518 2 175 2 436 2 524 2 344 4 525 2 111 2 178 20 441 2 113 2 348 40 350 2 354 4 529 2 356 6 534 6 262 6 358 2 361 6 185 2 446 2 48 2 362 2 50 2 543 6 545 2 272 2 193 2 454 2 457 2 460 44 275 2 276 2 559 2 204 2 376 2 645 4 126 2 648 2 379 2 282 18 64 2 566 2 66 2 382 8 208 2 286 4 288 2 209 2 387 2 567 2 391 2 
436 2 339 4 340 2 5 2 8 2 7 4 344 2 110 4 219 2 138 2 477 2 441 2 178 14 145 4 221 6 348 38 349 2 353 2 354 6 529 6 403 10 404 2 534 2 262 10 627 2 184 2 581 8 446 2 50 2 88 2 268 2 631 2 543 10 409 10 545 2 161 26 457 2 460 28 199 4 589 6 327 2 204 2 126 2 645 2 281 2 420 2 380 2 379 2 648 2 282 14 425 6 103 4 240 2 66 2 431 2 656 4 286 2 288 2 606 14 514 4 34 2 473 2 
385 2 

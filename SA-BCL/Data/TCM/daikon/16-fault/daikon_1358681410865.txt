#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (237,634) (237,634) (336,468,512,622,696) (336,468,512,622,696) (336,468,512,622,696) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 666 641 615 636 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 350 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 350 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 350 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 476 241 592 773 105 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (237,634) 599 168 692 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 767 363 599 168 692 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (237,634) 599 168 692 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 599 168 692 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfo:new_ppt()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.LimitedSizeIntSet:size()I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7917 | 3 -> 1
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:isReverse([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptSlice1:num_samples()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:numIntArrays()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:Node()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Invariants:Invariants()V
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lte(II)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaCharStream:GetSuffix(I)[C
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:size()I
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:eltsEqual([II)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:subsetOf([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z | CONSTANT | 162209 | 0 -> 1
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:relate_var()V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:sameLength([I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:lt(II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String; | ASSIGN | 3056 | = null
daikon.PptSlice0:arity()I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ModBitTracker:num_sets()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([D)[D
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:subsetOf([F[D)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:setEqual([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_2()I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Ppt:Ppt()V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakHasherMap:size()I
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:lexLT([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method; | ASSIGN | 38039 | = null
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptName:isEnterPoint()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:gte(II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptSlice2:arity()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:intersection([I[I)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 9379 | stmt -> ;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:dimensions()I
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:gt(II)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V | STATEMENT | 2624 | stmt -> ;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.InvMap:InvMap()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName:hashCode()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:justified()Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | OPERATOR | 107346 | <= -> ==
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:negate(I)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant:logOn()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.ProglangType:isIntegral()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE:sign(I)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Debug:logOn()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Debug:logDetail()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_2(J)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:arity()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(FF)Z
daikon.Quant:memberOf(D[F)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
175 2 686 2 247 2 37 2 16 4 634 2 382 2 237 2 212 2 
343 6 103 6 506 2 473 2 442 2 238 2 282 2 183 2 65 6 8 2 616 2 
153 2 735 6 701 2 634 2 649 2 237 2 120 6 225 6 707 4 614 6 531 4 509 2 355 2 
672 10 248 6 704 10 705 2 727 8 95 16 50 2 348 4 201 26 322 8 660 2 227 4 398 16 661 10 511 8 127 2 563 10 634 6 237 6 58 2 331 8 84 29 182 16 639 4 720 10 777 2 455 4 364 2 40 6 618 12 
496 4 220 6 
577 2 
385 2 341 2 141 2 194 4 49 2 196 2 301 4 399 2 254 2 629 2 535 2 733 2 634 4 407 4 58 2 540 2 59 2 362 2 269 4 113 2 753 2 418 2 557 2 598 2 371 2 125 2 466 2 325 2 30 2 31 2 233 2 132 2 237 4 134 2 567 2 178 2 612 2 36 2 718 2 86 2 382 2 780 2 619 2 139 2 
19 6 274 2 344 2 672 16 525 4 47 6 248 4 704 16 705 2 95 32 121 4 201 48 322 6 680 6 398 32 661 16 253 6 511 18 684 2 170 4 563 6 634 4 358 4 237 4 13 4 180 4 82 4 84 54 182 32 161 8 720 16 775 2 639 2 64 2 40 4 67 2 383 6 618 22 114 6 
758 2 557 2 778 2 
190 2 176 2 702 2 754 2 611 10 730 2 480 2 111 2 638 22 148 2 451 2 152 2 588 2 139 2 
672 2 248 2 704 2 95 2 69 2 201 4 398 2 661 2 229 2 511 2 169 2 452 2 563 4 428 2 289 2 715 2 84 6 63 2 182 2 720 2 639 2 243 2 618 2 
672 4 47 6 472 2 704 4 95 8 348 2 13 4 250 2 82 4 201 12 84 16 182 8 680 6 720 4 398 8 661 4 618 4 
485 2 395 2 687 2 481 2 654 2 
326 2 256 2 328 2 632 2 388 2 577 2 655 2 122 2 98 2 56 2 
0 1 43 1 299 2 622 2 391 2 441 5 94 2 198 1 5 1 678 2 349 6 625 2 351 2 627 2 449 4 533 2 403 2 405 4 209 3 9 2 583 1 260 1 104 4 689 2 634 22 635 4 108 2 110 2 408 2 410 4 160 2 739 2 14 2 543 1 544 2 365 2 163 2 745 1 219 2 646 2 414 2 751 1 651 2 370 1 757 1 759 1 658 2 126 2 606 1 468 2 512 2 514 2 564 2 471 1 608 5 329 1 237 24 177 1 518 2 330 1 240 5 430 6 380 2 613 2 37 2 574 2 
368 2 237 2 
774 2 584 2 237 4 
393 2 
89 2 488 2 673 2 677 2 578 4 251 2 396 2 202 4 400 4 492 2 494 2 628 10 534 2 536 2 453 6 262 2 636 2 541 6 361 2 62 4 693 2 694 2 741 2 15 36 411 2 641 4 697 2 215 6 413 2 117 2 505 4 650 4 551 2 552 6 553 2 22 8 23 2 558 2 324 2 601 2 25 8 761 2 72 6 510 4 74 4 762 4 561 2 470 2 327 8 174 6 515 2 76 2 565 2 427 2 79 36 234 8 770 8 80 6 666 8 334 36 292 2 338 6 181 2 721 6 615 2 573 2 523 2 668 14 724 6 435 6 
412 1 318 2 51 2 463 2 
631 2 463 2 
6 2 537 2 557 2 455 2 490 2 463 2 756 2 
402 2 463 2 756 2 
184 2 463 2 756 2 
102 2 33 2 318 2 
463 2 756 2 
102 2 172 2 
223 2 
102 2 318 2 78 2 
431 2 318 2 519 2 
318 2 594 2 272 2 
115 2 318 2 290 2 
318 2 300 2 321 2 
102 2 516 2 
479 2 463 2 
519 2 332 2 
594 2 710 2 
115 2 734 2 
314 2 321 2 
102 2 339 2 
342 2 321 2 
115 2 713 2 
708 2 594 2 
519 2 146 2 
102 2 318 2 258 2 78 2 
102 2 318 2 258 2 210 2 78 2 
102 2 318 2 313 2 
102 2 318 2 779 2 
109 2 34 2 580 2 245 2 
554 2 557 2 52 2 490 2 
554 2 6 2 557 2 52 2 228 2 490 2 
557 2 455 2 38 2 490 2 463 2 756 2 
377 2 733 2 
557 2 455 2 165 2 490 2 
115 2 556 2 
321 2 683 2 
519 2 603 2 
594 2 144 2 
457 2 594 2 321 2 
604 2 594 2 321 2 
594 2 321 2 29 2 
296 2 594 2 321 2 
140 6 487 2 490 2 557 2 530 2 206 6 77 2 454 2 
102 2 54 2 
766 2 386 2 389 2 438 2 1 2 131 2 277 2 92 2 369 2 717 2 638 6 719 4 742 2 559 2 743 2 66 2 244 4 28 2 
318 2 749 2 
544 2 
299 2 671 2 391 2 94 2 5 2 200 2 678 6 394 2 207 2 403 2 405 4 9 2 104 4 689 2 108 6 408 2 311 2 410 4 213 2 14 2 214 4 317 2 116 8 218 2 589 2 219 2 414 2 124 2 126 2 608 2 237 26 429 2 518 2 430 6 240 2 37 2 522 2 620 2 142 2 441 4 728 2 444 2 145 2 349 4 625 2 351 2 627 2 732 2 155 2 261 2 634 26 635 4 739 2 163 2 646 6 651 2 550 2 653 2 657 2 658 2 763 4 768 2 564 2 769 2 375 2 177 2 568 2 379 4 475 2 81 2 665 2 293 2 188 2 574 2 
299 2 671 2 2 2 391 2 94 2 5 2 200 2 678 6 394 2 207 2 305 2 403 2 405 4 9 2 104 4 689 2 108 6 408 2 410 4 213 2 14 2 214 4 116 8 218 2 589 2 219 2 414 2 124 2 126 2 608 2 237 26 429 2 518 2 430 6 240 2 613 2 37 2 522 2 242 2 620 2 142 2 441 4 728 2 444 2 145 2 349 6 625 2 351 2 627 2 732 2 155 2 261 2 57 2 634 26 635 4 160 2 739 2 163 2 646 6 651 2 550 2 653 2 657 2 658 2 763 4 768 2 564 2 769 2 375 2 177 2 568 2 379 4 475 2 81 2 665 2 293 2 574 2 
681 2 
353 2 723 2 
436 2 343 2 103 2 506 2 621 2 68 4 48 2 263 2 473 2 93 2 308 2 179 2 83 2 397 2 484 2 640 2 306 2 384 4 
436 2 343 4 45 2 621 2 48 2 93 2 143 2 97 2 351 2 397 2 252 2 306 4 304 2 403 2 405 2 582 2 103 6 156 2 307 2 104 2 690 2 497 2 634 6 263 2 308 2 501 2 640 2 65 6 163 2 17 2 744 4 747 2 219 2 68 4 506 4 414 2 458 4 651 2 706 2 656 2 70 2 282 2 126 2 232 6 173 2 286 2 473 4 237 12 430 4 179 2 83 2 716 2 520 2 484 2 381 4 572 4 722 4 41 2 616 2 384 4 
436 2 343 6 45 2 621 2 48 2 93 2 143 2 97 2 351 2 397 2 252 2 306 4 8 2 304 2 403 2 405 2 582 2 103 4 156 2 307 2 104 2 690 2 497 2 634 6 263 2 308 2 501 2 640 2 65 6 163 2 17 2 744 4 747 2 219 2 68 4 506 4 414 2 458 4 651 2 706 2 656 2 70 2 282 2 126 2 232 6 173 2 286 2 473 4 237 12 430 4 179 2 83 2 716 2 520 2 484 2 381 4 572 4 722 4 41 2 384 4 
436 2 343 6 45 2 621 2 48 2 93 2 143 2 97 2 351 2 397 2 252 2 306 4 304 2 403 2 405 2 582 2 103 6 156 2 307 2 104 2 690 2 497 2 634 6 263 2 308 2 501 2 640 2 65 6 163 2 17 2 744 4 747 2 219 2 68 4 506 4 414 2 458 4 651 2 706 2 656 2 70 2 282 2 126 2 232 6 173 2 286 2 473 4 237 12 238 2 430 4 179 2 83 2 716 2 520 2 484 2 381 4 572 8 722 4 41 2 384 4 
436 2 343 8 45 2 621 2 48 2 93 2 143 2 97 2 351 2 397 2 252 2 306 4 8 2 304 2 403 2 405 2 582 2 103 6 156 2 104 2 307 2 690 2 497 2 634 6 263 2 308 2 501 2 640 2 65 8 163 2 17 2 744 4 747 2 219 2 68 4 506 4 414 2 458 8 651 2 706 2 656 2 70 2 282 2 126 2 232 10 173 2 286 2 473 4 237 12 238 2 430 4 179 2 83 2 716 2 520 2 484 2 381 4 572 8 722 4 41 2 384 4 
436 2 343 6 45 2 621 2 48 2 93 2 143 2 97 2 351 2 397 2 252 2 306 4 304 2 403 2 405 2 582 2 103 6 156 2 307 2 104 2 690 2 497 2 634 6 263 2 308 2 501 2 640 2 65 6 163 2 17 2 744 4 747 2 219 2 68 4 506 4 414 2 458 8 651 2 706 2 656 2 70 2 282 2 126 2 232 10 173 2 286 2 473 4 237 12 238 2 430 4 179 2 83 2 716 2 520 2 484 2 381 4 572 8 722 4 41 2 384 4 
387 2 391 2 197 1 393 6 4 1 199 2 200 2 397 2 8 4 403 2 405 4 9 2 582 2 408 2 410 4 14 2 17 2 219 2 590 6 414 2 21 1 224 1 420 2 596 1 422 2 27 2 232 2 608 2 609 2 426 2 235 6 237 46 236 2 32 6 430 6 240 2 613 2 433 2 37 2 436 2 44 6 45 2 621 2 48 2 441 2 625 2 627 2 450 2 252 2 255 2 634 24 635 4 263 2 266 6 637 4 640 2 65 12 273 6 646 6 68 4 275 6 651 2 279 2 653 2 656 2 657 2 658 2 70 2 282 4 284 2 469 2 286 2 473 4 665 2 83 2 478 6 293 2 484 2 294 2 88 6 297 2 90 6 299 2 671 2 674 2 94 2 93 2 675 10 676 2 678 6 97 4 304 2 306 4 685 2 103 4 104 4 307 2 690 2 497 2 689 12 106 8 498 2 107 6 691 2 108 8 308 2 501 4 112 2 116 4 699 7 506 4 320 7 706 2 123 1 124 2 126 2 129 2 711 1 133 6 518 2 716 2 520 2 722 4 522 2 725 1 343 8 143 2 728 4 349 6 351 2 731 4 354 2 156 2 157 2 359 2 160 2 739 2 162 2 545 6 163 2 744 8 366 2 747 2 367 2 368 6 755 2 373 1 763 4 764 2 765 2 173 2 564 2 375 2 179 2 381 6 774 6 572 2 574 2 384 4 
90 6 387 2 671 2 299 2 391 2 674 2 93 2 94 2 393 6 199 2 675 10 676 2 678 6 200 4 97 4 397 2 306 4 304 2 403 2 405 4 9 2 685 2 582 2 103 8 307 2 104 4 689 12 497 2 690 2 498 2 106 8 691 2 107 6 108 8 308 2 408 2 410 4 14 2 214 2 501 4 112 2 17 2 116 8 590 6 219 2 506 4 414 2 706 2 420 2 422 2 124 2 126 2 27 2 232 2 129 2 426 2 609 2 608 2 133 6 235 6 236 2 237 48 518 2 238 4 32 6 240 2 430 6 520 2 716 2 433 2 613 2 37 2 522 4 722 4 436 2 44 6 343 8 45 2 621 2 48 2 441 2 143 2 728 4 349 6 625 2 351 2 731 4 627 2 354 2 252 2 450 2 255 2 156 2 157 2 634 26 359 2 263 2 635 4 266 6 158 2 637 4 160 2 739 2 162 2 545 6 640 2 65 12 163 2 744 8 273 6 366 2 747 2 646 6 68 4 367 2 275 6 368 6 651 2 279 2 755 2 653 2 656 2 657 2 70 2 658 2 282 4 284 2 763 4 764 2 469 2 765 2 173 2 564 2 286 2 375 4 288 2 473 4 665 2 179 2 478 6 83 2 293 2 774 6 381 6 484 2 572 6 294 2 88 6 297 2 384 4 574 2 
90 6 387 2 671 2 299 2 391 2 674 2 93 2 94 2 393 6 199 2 675 10 676 2 678 6 200 4 97 4 397 2 306 4 304 2 403 2 405 4 9 2 685 2 582 2 103 8 307 2 104 4 689 12 497 2 690 2 498 2 106 8 691 2 107 6 108 8 308 2 408 2 410 4 14 2 214 2 501 4 112 2 17 2 116 8 590 6 219 2 506 4 414 2 706 2 420 2 422 2 124 2 126 2 27 2 232 6 129 2 426 2 609 2 608 2 133 6 235 6 236 2 237 48 518 2 238 4 32 6 240 2 430 6 520 2 716 2 433 2 613 2 37 2 522 4 722 4 436 2 44 6 343 8 45 2 621 2 48 2 441 2 143 2 728 4 349 6 625 2 351 2 731 4 627 2 354 2 252 2 450 2 255 2 156 2 157 2 634 26 359 2 263 2 635 4 266 6 158 2 637 4 160 2 739 2 162 2 545 6 640 2 65 12 163 2 744 8 273 6 366 2 747 2 646 6 68 4 367 2 458 4 275 6 368 6 651 2 279 2 755 2 653 2 656 2 657 2 70 2 658 2 282 4 284 2 763 4 764 2 469 2 765 2 173 2 564 2 286 2 375 4 288 2 473 4 665 2 179 2 478 6 83 2 293 2 774 6 381 6 484 2 572 6 294 2 88 6 297 2 384 4 574 2 
387 2 391 2 393 12 199 2 200 4 397 2 8 2 403 2 405 4 9 2 582 2 408 2 410 4 14 2 586 6 214 2 17 2 219 2 590 6 414 2 420 2 422 2 27 2 230 2 232 6 608 4 609 2 426 2 235 6 237 52 238 4 32 6 430 6 240 4 613 2 433 2 432 2 37 2 616 2 436 2 44 12 45 2 621 2 48 2 441 4 625 2 627 2 448 2 450 2 252 2 255 2 634 24 635 4 263 2 266 6 60 6 61 2 637 4 268 2 640 2 65 16 273 6 646 8 68 4 458 4 275 6 651 2 279 2 653 2 656 2 657 2 658 2 70 2 282 4 284 2 467 6 469 2 286 2 288 2 473 4 665 4 83 2 478 6 293 2 484 2 294 2 88 12 297 2 90 12 299 2 671 2 674 2 94 2 93 2 675 8 676 2 678 8 302 2 97 4 304 2 306 4 685 2 103 10 104 4 307 2 690 2 497 2 689 10 498 2 106 8 107 6 691 2 108 12 308 2 501 4 312 6 112 2 315 2 698 2 116 10 506 4 706 2 124 4 126 2 709 6 129 2 133 6 518 2 716 2 520 2 722 4 522 4 343 10 143 2 728 4 349 6 351 2 731 4 529 6 354 2 156 2 157 2 359 2 158 2 160 2 739 2 162 2 545 6 163 2 744 8 366 2 747 2 367 2 368 12 752 6 755 2 763 6 764 2 562 6 765 2 171 6 173 2 564 2 375 4 179 2 381 6 774 12 572 6 574 2 384 4 
436 2 343 6 45 2 621 2 68 2 506 4 458 4 48 2 656 2 70 2 282 2 397 2 304 2 232 4 582 2 173 2 103 6 307 2 497 2 690 2 237 4 473 4 238 2 179 2 520 2 716 2 381 2 484 2 572 6 640 2 65 4 722 2 744 2 17 2 384 2 
299 2 671 2 391 2 94 2 675 2 678 6 397 2 579 2 304 2 403 2 405 4 9 2 495 2 582 2 103 6 104 4 307 2 497 2 690 2 689 4 108 8 310 3 408 2 410 4 14 2 696 2 17 2 219 2 506 4 414 2 417 2 126 2 232 2 608 3 237 28 236 2 238 2 518 2 430 6 240 3 335 2 520 2 716 2 336 2 613 2 37 2 722 2 436 2 343 6 45 2 621 2 48 2 441 3 728 2 349 6 625 2 351 2 627 2 149 2 156 2 634 24 635 4 160 2 739 2 544 2 640 2 65 4 271 2 163 2 744 2 646 6 68 2 651 2 653 2 656 2 658 2 70 2 282 2 763 4 173 2 564 2 473 4 179 2 293 2 381 2 484 2 572 6 384 2 574 2 
436 2 343 6 45 2 621 2 48 2 93 2 143 2 97 2 351 2 397 2 252 2 306 4 304 2 403 2 405 2 582 2 103 6 156 2 307 2 104 2 690 2 497 2 634 6 263 2 308 2 501 2 640 2 65 6 163 2 17 2 744 4 747 2 219 2 68 4 506 4 414 2 458 8 651 2 706 2 656 2 70 2 282 2 126 2 232 10 173 2 286 2 473 4 237 12 238 2 430 4 179 2 83 2 716 2 520 2 484 2 381 4 572 8 722 4 41 2 384 4 
436 2 343 6 45 2 621 2 48 2 93 2 143 2 97 2 351 2 397 2 252 2 306 4 304 2 403 2 405 2 582 2 103 8 156 2 104 2 307 2 634 6 690 2 263 2 308 2 501 2 640 2 65 8 163 2 17 2 744 4 747 2 219 2 20 4 319 2 68 4 506 4 414 2 458 8 459 2 651 2 706 2 656 2 70 2 282 2 126 2 232 10 173 2 286 2 473 4 237 12 238 2 430 4 179 2 83 2 716 2 520 2 484 2 381 4 572 8 722 4 616 2 384 4 
520 2 690 2 376 2 
520 2 690 2 376 2 
387 2 299 2 391 2 93 2 94 2 675 2 200 4 678 2 97 4 99 2 203 2 401 2 306 4 8 4 304 2 403 2 405 4 10 2 9 2 103 12 104 4 689 4 690 4 406 2 108 2 408 2 410 4 14 2 501 2 502 2 216 2 116 4 590 2 219 2 414 2 506 4 706 2 126 2 128 2 607 2 232 6 237 24 517 2 518 2 238 4 610 2 430 6 520 4 716 2 613 2 37 2 522 4 722 2 434 2 616 4 343 12 142 4 621 4 345 2 441 2 143 2 728 4 729 2 349 6 625 2 350 2 351 2 731 2 627 2 150 2 532 2 634 16 359 2 635 4 637 2 160 2 739 2 65 16 163 2 744 4 646 2 68 2 458 4 549 2 651 2 279 2 653 2 657 2 658 2 282 4 564 2 286 2 375 4 376 2 473 4 179 2 83 2 293 2 381 4 484 2 572 6 667 2 574 2 384 2 
590 2 689 2 634 2 549 2 263 2 663 2 498 2 237 4 675 2 199 2 637 2 482 2 351 2 353 2 667 2 502 2 87 2 
387 2 299 2 391 2 93 2 94 2 200 4 678 2 97 4 100 2 401 4 306 4 8 4 304 2 403 2 405 4 9 2 103 12 104 4 689 2 690 4 406 2 108 2 408 2 410 4 14 2 501 4 502 2 216 2 116 4 590 2 219 2 414 2 506 4 706 2 126 2 128 2 607 2 232 6 237 24 517 2 518 2 238 4 430 6 520 4 716 2 613 2 37 2 522 4 722 2 434 2 616 4 343 12 142 4 621 4 345 2 441 4 623 2 143 2 443 2 728 4 446 2 729 2 349 6 625 2 350 2 351 2 731 2 627 2 150 2 532 2 634 16 359 2 635 4 160 2 739 2 65 16 163 2 744 4 747 2 646 2 68 2 458 4 549 2 651 2 279 2 653 2 657 2 658 2 282 4 71 2 564 2 286 2 375 4 376 2 473 4 179 2 83 2 293 2 381 4 484 2 572 6 667 2 574 2 384 2 
387 2 299 2 391 2 93 2 94 2 675 2 200 4 678 2 97 4 401 2 306 4 8 4 304 2 403 2 405 4 9 2 103 12 104 4 689 4 690 4 406 2 108 2 408 2 410 4 695 2 14 2 501 4 502 2 216 2 116 4 590 2 219 2 414 2 506 4 706 2 126 2 128 2 607 2 232 6 237 24 517 2 518 2 238 4 430 6 520 4 716 2 613 2 37 2 522 4 722 2 434 2 616 4 343 12 142 4 621 4 345 2 441 2 143 2 728 4 729 2 349 6 625 2 350 2 528 2 351 2 731 2 627 2 150 2 532 2 154 2 634 16 359 2 635 4 637 2 160 2 739 2 65 16 163 2 744 4 747 2 646 2 68 2 458 4 278 2 549 2 651 2 652 2 279 2 653 2 657 2 658 2 282 4 564 2 286 2 375 4 376 2 473 4 179 2 83 2 293 2 381 4 484 2 572 6 667 2 574 2 384 2 
299 2 671 2 672 2 3 2 195 2 94 2 95 2 678 6 201 4 491 2 680 4 398 2 7 2 208 2 101 2 403 2 405 4 9 2 685 2 104 4 688 2 105 2 689 2 108 8 408 2 585 2 410 2 587 2 503 1 316 2 217 2 219 2 414 2 592 2 704 2 420 2 508 2 126 2 608 2 237 26 239 2 518 2 430 6 240 2 613 1 433 2 720 2 37 2 241 2 617 2 437 1 524 2 526 2 441 2 347 2 728 2 349 3 351 2 627 2 450 2 634 20 264 4 635 2 160 1 739 2 163 2 646 6 750 2 651 2 755 2 281 2 760 2 166 2 661 2 763 4 564 2 476 2 771 2 772 2 291 2 82 2 84 6 85 6 293 2 182 2 773 2 294 2 574 2 
669 3 646 2 192 4 671 2 346 2 441 3 119 2 678 2 205 2 464 2 602 2 26 2 763 2 513 2 608 3 634 2 237 2 714 2 569 2 108 2 240 3 665 6 740 2 295 2 187 1 
669 2 646 2 192 4 671 2 346 2 441 2 119 2 678 2 205 2 464 2 602 2 26 2 763 2 513 2 608 2 634 2 237 2 714 2 569 2 108 2 240 2 665 6 740 2 295 2 
669 2 646 2 192 4 671 2 346 2 441 2 119 2 678 2 205 2 464 2 602 2 26 2 763 2 513 2 608 2 634 2 237 2 714 2 569 2 108 2 240 2 665 6 740 2 295 2 
648 6 700 2 221 3 671 2 91 2 547 2 672 2 390 2 392 2 704 2 441 3 95 2 576 4 555 4 201 4 322 4 303 2 597 3 372 2 204 2 398 2 661 2 630 2 425 4 257 2 259 3 634 4 211 2 237 10 714 2 108 2 738 2 240 3 309 4 35 2 84 6 337 4 182 2 720 2 40 2 
671 2 91 2 390 2 672 2 392 2 441 2 95 2 576 4 201 4 303 2 398 2 204 2 630 2 257 2 259 2 634 4 211 2 108 2 738 2 309 4 648 6 700 2 221 2 547 2 704 2 705 2 555 4 322 4 597 2 372 2 661 2 511 2 425 4 237 10 714 2 240 2 35 2 84 4 337 4 182 2 720 2 40 2 618 2 
671 2 91 2 390 2 672 2 392 2 441 2 95 2 576 4 201 4 303 2 398 2 204 2 630 2 257 2 259 2 634 4 211 2 108 2 738 2 309 4 648 6 700 2 221 2 547 2 704 2 705 2 555 4 322 4 597 2 372 2 661 2 511 2 425 4 237 10 714 2 240 2 35 2 84 4 337 4 182 2 720 2 40 2 618 2 
671 2 91 2 390 2 672 2 392 2 441 2 95 2 576 4 201 4 303 2 398 2 204 2 630 2 257 2 259 2 634 4 211 2 108 2 738 2 309 4 648 6 700 2 221 2 547 2 704 2 705 2 555 4 322 4 597 2 372 2 661 2 511 2 425 4 237 10 714 2 240 2 35 2 84 4 337 4 182 2 720 2 40 2 618 2 
671 2 91 2 390 2 672 2 392 2 441 2 95 2 576 4 201 4 303 2 398 2 204 2 630 2 257 2 259 2 634 4 211 2 108 2 738 2 309 4 648 6 700 2 221 2 547 2 704 2 705 4 555 4 322 4 597 2 372 2 661 2 511 4 425 4 237 10 714 2 240 2 35 2 84 4 337 4 182 2 720 2 40 2 618 4 
298 2 357 2 280 2 445 2 267 2 546 2 
357 2 748 2 620 2 222 2 276 2 644 2 55 2 
485 1 670 2 645 2 46 2 507 2 439 1 395 1 595 2 447 1 626 2 423 2 231 2 151 2 356 2 581 2 130 2 538 2 566 2 634 8 287 2 237 10 477 1 185 2 88 2 163 2 504 2 
672 6 526 2 3 2 704 6 705 2 95 6 96 2 201 12 322 4 680 4 398 6 661 6 254 2 511 2 605 2 233 2 634 6 237 6 771 2 159 2 180 2 82 2 84 16 161 2 182 6 720 6 40 2 18 2 618 4 114 4 
193 2 703 2 634 1 237 1 416 2 461 2 593 2 462 2 309 2 555 2 226 2 421 2 352 4 521 7 776 2 283 1 425 2 662 2 
193 2 703 4 416 2 461 2 593 2 462 4 309 2 555 2 226 2 421 4 352 4 521 6 776 2 425 2 662 2 
193 2 703 8 634 1 237 1 416 6 461 2 593 2 462 8 309 2 555 2 226 2 421 8 352 4 521 10 776 8 283 1 425 2 662 2 
193 2 703 2 461 2 593 2 462 2 309 2 555 2 226 2 421 2 352 2 521 2 425 2 662 2 
94 2 575 6 489 2 493 2 682 2 11 2 499 6 692 2 408 2 410 8 415 2 591 4 118 2 419 2 24 2 600 2 599 2 424 2 237 28 135 4 137 2 138 2 613 2 42 2 340 2 726 16 440 2 249 4 527 2 624 4 349 18 53 2 633 2 736 2 634 26 737 2 539 2 635 10 265 2 542 2 160 2 456 2 270 2 643 2 647 2 460 3 164 4 548 6 370 2 659 2 465 2 167 2 374 2 73 2 285 2 75 2 168 2 474 2 570 1 483 2 186 2 574 2 
486 2 189 2 191 2 726 12 415 2 249 2 460 2 94 2 489 2 419 2 349 18 323 2 24 2 599 2 560 2 424 4 682 2 168 2 767 2 633 2 11 4 634 16 12 2 539 2 635 6 237 18 712 2 664 2 378 2 499 6 265 2 692 2 408 2 409 2 410 6 160 4 363 2 613 4 456 4 42 2 574 2 
189 1 726 4 246 2 249 2 94 4 575 4 527 2 489 2 624 2 349 14 493 2 53 2 404 2 634 20 635 8 265 2 499 4 692 2 360 1 500 2 408 4 409 2 410 6 542 2 160 4 363 2 270 2 643 2 746 1 415 2 548 4 118 2 370 2 599 2 465 2 285 2 168 2 237 22 137 2 333 2 138 4 613 4 483 2 39 1 42 2 574 4 340 2 
486 2 726 4 415 2 94 2 489 2 419 2 349 10 147 2 599 2 424 2 168 2 11 2 634 12 539 2 635 4 237 12 499 2 265 2 692 2 136 2 408 2 410 4 160 4 571 2 613 4 456 2 642 2 42 2 574 2 
679 2 

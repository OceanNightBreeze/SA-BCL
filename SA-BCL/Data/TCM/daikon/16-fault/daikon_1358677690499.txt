#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (219,842) (219,842) (78,310,444,451,599) (78,310,444,451,599) (78,310,444,451,599) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 506 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 506 
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (406,666) 17 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 684 (338,356) 377 (108,350) (338,356) 27 (108,350) 400 764 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 684 (338,356) 377 (108,350) (338,356) 27 (108,350) 400 764 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 684 (338,356) 377 (108,350) (338,356) 27 (108,350) 400 764 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 684 (338,356) 377 (108,350) (338,356) 27 (108,350) 400 764 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 507 371 243 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 668 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 52 481 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 485 526 481 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 52 481 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 52 481 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6851 | = null
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptSlice0:arity()I
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 2824 | if (x) -> if (!x)
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:sameLength([I[I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:gt(II)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:pow(II)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer; | RETURN | 13631 | return null
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ProglangType:isFloat()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isPointer()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 8797 | = null
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptSlice2:arity()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:union([I[I)[I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eq(JJ)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setEqual([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Debug:logOn()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.Invariant:logOn()Z
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaCharStream:ReadByte()C
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.ProglangType:isScalar()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:gte(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:ne(II)Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.InvMap:InvMap()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern:numIntArrays()I
daikon.ValueTuple:size()I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:concat([I[I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:slice([III)[I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:memberOf(J[J)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token; | CONDITION | 213180 | if (x) -> if (!x)
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltsLteIndex([I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:prob_or(DD)D
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ValueTuple:isMissing(I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String; | ASSIGN | 5385 | = null
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfo:new_ppt()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaCharStream:readChar()C
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.RootNode:RootNode()V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:modulus([I)[I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:size()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eltwiseGT([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Ppt:Ppt()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
572 2 750 2 842 2 348 2 219 2 846 4 318 2 327 2 61 2 
659 2 181 6 520 2 558 2 410 2 447 2 304 2 336 2 773 2 852 6 28 6 
822 6 219 2 93 2 386 6 828 4 842 2 728 2 492 2 456 2 317 6 576 2 393 6 337 4 
518 10 8 2 579 8 277 4 231 26 208 10 798 16 666 4 41 2 770 29 73 10 774 16 75 2 567 16 406 2 511 4 219 6 600 8 246 4 842 6 53 8 413 2 87 2 516 6 686 10 114 6 517 2 142 8 849 10 851 12 
463 6 467 4 
48 2 
65 2 7 2 794 2 585 2 643 2 693 2 588 2 432 2 234 2 186 2 438 2 487 2 605 2 440 2 541 2 348 2 195 2 655 2 711 2 552 2 754 2 32 2 33 2 34 2 718 2 623 2 297 4 362 2 212 2 214 2 42 2 725 4 405 2 510 2 219 4 632 4 365 2 842 4 171 2 172 2 574 2 176 4 517 2 321 2 
202 6 231 12 208 4 798 8 770 14 563 8 73 4 774 8 567 8 219 4 387 4 193 2 842 4 53 2 816 6 686 4 849 4 851 6 294 2 178 4 
719 2 588 2 261 2 
834 2 147 22 382 2 204 2 90 2 705 2 650 2 839 2 560 10 655 2 713 2 802 2 292 2 753 2 
518 4 277 2 231 4 208 2 430 2 298 2 798 2 766 2 770 6 73 2 801 2 565 2 774 2 567 2 167 2 488 2 312 2 53 2 516 2 686 2 849 2 851 2 616 2 
567 2 202 4 246 2 152 2 231 4 208 2 798 2 686 2 770 6 73 2 774 2 849 2 178 2 
0 2 420 2 91 10 791 2 557 2 97 2 479 2 297 4 259 4 283 4 330 2 68 62 37 2 719 2 588 8 261 6 590 4 263 4 72 2 669 2 742 4 402 2 806 2 79 14 746 4 513 4 272 4 605 4 748 2 344 2 367 4 139 2 112 4 22 2 175 10 729 4 275 2 316 2 374 2 552 2 
281 2 284 2 215 2 127 2 364 2 187 2 48 2 164 2 245 2 603 2 
474 2 521 2 278 2 328 2 428 2 589 2 124 2 698 4 76 2 701 2 78 2 16 2 811 4 604 2 749 2 21 4 441 2 544 2 24 6 496 2 200 2 551 2 145 2 617 2 295 2 451 2 555 2 258 2 765 2 99 2 265 2 268 2 50 2 674 2 219 22 310 2 680 2 842 20 682 2 687 4 318 2 116 2 853 6 
219 2 385 2 
415 2 219 4 18 2 
628 2 
757 2 499 2 395 2 578 2 476 2 501 2 502 2 452 2 582 2 523 2 694 18 300 2 527 2 100 2 399 2 768 2 529 2 505 2 771 2 436 2 530 2 403 18 217 2 482 2 673 2 15 2 484 2 383 2 808 2 633 2 341 2 409 2 343 2 840 2 54 18 844 2 445 2 494 2 416 2 751 2 417 2 550 2 850 2 
70 2 608 1 637 2 471 2 
740 2 637 2 
105 2 666 2 588 2 627 2 506 2 637 2 717 2 
105 2 325 2 637 2 
105 2 804 2 637 2 
70 2 619 2 453 2 
105 2 637 2 
797 2 453 2 
708 2 637 2 
70 2 453 2 763 2 
70 2 435 2 549 2 
140 2 70 2 107 2 
70 2 439 2 775 2 
70 2 285 2 340 2 
491 2 453 2 
23 2 637 2 
435 2 497 2 
226 2 107 2 
439 2 784 2 
190 2 340 2 
777 2 453 2 
656 2 340 2 
439 2 829 2 
107 2 583 2 
635 2 435 2 
69 2 70 2 453 2 763 2 
69 2 308 2 70 2 453 2 763 2 
70 2 612 2 453 2 
70 2 533 2 453 2 
62 2 660 2 315 2 458 2 
588 2 519 2 627 2 602 2 
588 2 519 2 627 2 602 2 288 2 506 2 
666 2 17 2 
358 2 623 2 
538 2 666 2 588 2 627 2 
573 2 439 2 
340 2 165 2 
369 2 435 2 
194 2 107 2 
107 2 340 2 88 2 
414 2 107 2 340 2 
835 2 107 2 340 2 
107 2 340 2 664 2 
31 2 9 2 588 2 627 2 595 2 266 6 744 6 752 2 
453 2 762 2 
29 2 398 2 346 2 170 2 303 2 305 2 559 2 570 4 
70 2 244 2 
50 2 
324 2 122 4 737 2 423 2 521 6 328 2 428 6 739 2 642 2 124 6 125 3 126 2 16 2 135 4 534 2 652 2 749 2 21 4 544 2 24 4 548 2 145 2 760 2 553 3 555 2 663 2 454 2 360 2 765 2 264 2 265 2 268 2 168 8 465 2 680 2 681 2 169 2 682 2 575 2 687 4 789 2 278 2 279 2 184 5 589 2 696 2 698 4 593 2 76 2 811 4 604 2 817 2 496 2 200 2 615 4 392 2 617 2 394 2 295 2 206 2 95 2 99 2 302 3 210 2 104 2 219 26 411 2 514 2 221 2 842 26 115 2 116 2 318 2 853 6 
122 4 229 2 737 2 423 2 521 6 328 2 428 6 739 2 642 2 124 6 125 2 126 2 16 2 135 4 534 2 652 2 749 2 21 4 441 2 544 2 24 6 548 2 145 2 760 2 553 2 555 2 663 2 454 2 360 2 765 2 264 2 265 2 268 2 674 2 168 8 465 2 680 2 681 2 169 2 682 2 575 2 687 4 789 2 278 2 279 2 184 4 589 2 698 4 76 2 811 4 604 2 84 2 709 2 817 2 496 2 200 2 615 4 392 2 617 2 394 2 295 2 206 2 95 2 99 2 302 2 401 2 210 2 104 2 219 26 411 2 514 2 221 2 842 26 115 2 116 2 318 2 853 6 
375 2 1 2 181 6 278 2 183 10 480 2 695 4 336 4 381 2 238 2 128 2 240 2 532 2 16 2 811 2 290 2 747 2 815 2 707 4 749 2 606 2 21 2 349 2 350 2 447 2 199 2 496 2 200 2 356 2 27 2 144 4 28 6 659 4 148 2 621 2 761 2 150 4 35 8 764 2 400 2 265 2 773 2 216 2 509 2 833 2 675 4 219 12 512 2 108 2 837 2 110 2 223 4 842 6 682 2 56 2 783 8 117 2 852 6 853 4 473 2 
375 2 1 2 181 8 793 2 278 2 183 10 480 2 695 4 336 4 381 2 238 2 128 2 240 2 532 2 16 2 811 2 290 2 747 2 815 2 707 4 749 2 606 2 21 2 542 4 349 2 350 2 447 2 199 2 496 2 200 2 356 2 27 2 144 4 28 8 659 4 148 2 621 2 761 2 150 4 35 8 764 2 400 2 265 2 773 2 216 2 509 2 833 2 675 4 219 12 512 2 108 2 837 2 410 2 223 4 842 6 682 2 56 2 783 8 373 2 117 2 852 6 853 4 
659 2 1 2 181 2 150 2 108 2 290 2 764 2 707 4 480 2 400 2 117 2 336 2 381 2 238 2 852 2 216 2 128 2 144 4 
375 2 1 2 181 6 278 2 183 6 480 2 695 4 336 4 381 2 238 2 128 2 240 2 532 2 16 2 811 2 290 2 747 2 815 2 707 4 749 2 606 2 21 2 349 2 350 2 447 2 199 2 496 2 200 2 356 2 27 2 144 4 28 6 659 4 148 2 621 2 761 2 150 4 35 4 764 2 400 2 265 2 216 2 509 2 833 2 675 4 219 12 512 2 108 2 837 2 410 2 110 2 223 4 842 6 682 2 56 2 783 4 117 2 852 4 853 4 473 2 
375 2 1 2 181 4 278 2 183 6 480 2 695 4 336 4 381 2 238 2 128 2 240 2 532 2 16 2 811 2 290 2 747 2 815 2 707 4 749 2 606 2 21 2 349 2 350 2 447 2 199 2 496 2 200 2 356 2 27 2 144 4 28 6 659 4 148 2 621 2 761 2 150 4 558 2 35 4 764 2 400 2 265 2 216 2 509 2 833 2 675 4 219 12 512 2 108 2 837 2 110 2 223 4 842 6 682 2 56 2 783 4 117 2 852 6 853 4 473 2 
375 2 1 2 181 6 278 2 183 6 480 2 695 4 336 4 381 2 238 2 128 2 240 2 532 2 16 2 811 2 290 2 747 2 815 2 707 4 749 2 606 2 21 2 349 2 350 2 447 2 199 2 496 2 200 2 356 2 27 2 144 4 28 6 659 4 148 2 621 2 761 2 150 4 35 4 764 2 400 2 265 2 773 2 216 2 509 2 833 2 675 4 219 12 512 2 108 2 837 2 110 2 223 4 842 6 682 2 56 2 783 8 117 2 852 6 853 4 473 2 
375 2 1 2 181 6 278 2 183 10 480 2 695 4 336 4 381 2 238 2 128 2 240 2 532 2 16 2 811 2 290 2 747 2 815 2 707 4 749 2 606 2 21 2 349 2 350 2 447 2 199 2 496 2 200 2 356 2 27 2 144 4 28 8 659 4 148 2 621 2 761 2 150 4 558 2 35 8 764 2 400 2 265 2 773 2 216 2 509 2 833 2 675 4 219 12 512 2 108 2 837 2 110 2 223 4 842 6 682 2 56 2 783 8 117 2 852 8 853 4 473 2 
375 2 1 2 181 6 278 2 183 10 480 2 695 4 336 4 381 2 238 2 128 2 240 2 532 2 16 2 811 2 290 2 747 2 815 2 707 4 749 2 606 2 21 2 349 2 350 2 447 2 199 2 496 2 200 2 356 2 27 2 144 4 28 6 659 4 148 2 621 2 761 2 150 4 35 8 764 2 400 2 265 2 773 2 216 2 509 2 833 2 675 4 219 12 512 2 108 2 837 2 110 2 223 4 842 6 682 2 56 2 783 8 117 2 852 6 853 4 473 2 
323 8 122 4 1 2 326 2 521 8 328 10 427 4 428 6 429 7 642 2 331 2 124 6 125 2 334 2 336 4 238 2 128 2 338 2 532 2 16 2 247 4 342 8 747 2 652 2 539 2 749 2 21 4 441 2 349 2 350 2 544 2 141 1 24 6 447 4 356 2 27 2 28 12 144 4 145 2 659 4 553 2 148 2 556 2 555 2 150 4 558 4 663 2 153 4 764 2 454 2 765 2 265 2 459 2 268 2 159 4 160 2 674 2 675 4 166 2 679 2 168 4 680 2 465 2 571 4 169 2 682 2 684 2 173 2 56 2 57 4 783 2 687 4 786 1 179 1 375 2 475 2 181 4 66 1 278 2 796 2 184 2 587 4 695 8 480 2 377 2 589 2 698 4 287 2 381 2 76 2 598 4 704 1 809 2 811 4 385 4 290 2 812 4 85 2 813 4 604 2 490 2 86 2 815 2 707 4 291 4 606 2 817 2 389 2 818 2 199 2 496 2 200 2 392 2 89 2 618 2 617 2 295 2 715 2 397 7 621 2 95 2 206 2 827 1 209 4 299 4 99 2 301 2 400 2 830 1 103 2 404 2 628 4 307 1 216 2 509 2 833 2 630 1 219 40 512 2 634 2 108 2 837 2 110 2 223 6 515 2 842 22 415 4 730 2 318 2 116 2 117 2 734 4 852 8 853 6 
323 8 122 4 1 2 326 2 521 8 328 10 427 4 428 6 642 2 331 2 124 6 125 2 334 2 336 4 238 2 128 2 338 2 532 2 16 2 247 4 342 8 747 2 652 2 539 2 749 2 21 4 441 2 349 2 350 2 544 2 24 6 447 4 356 2 27 2 28 12 144 4 145 2 659 4 553 2 148 2 556 2 555 2 150 4 663 4 153 4 764 2 454 2 765 2 265 2 459 2 773 4 268 2 159 4 160 2 674 2 675 4 166 2 679 2 168 6 680 2 465 2 571 4 169 2 682 2 684 2 173 2 56 2 57 4 783 6 687 4 375 2 475 2 181 8 278 2 796 2 184 2 587 4 695 8 480 2 377 2 589 2 698 4 287 2 381 2 76 2 598 4 809 2 811 4 385 4 290 2 812 4 85 2 813 4 604 2 490 2 86 2 815 2 707 4 291 4 606 2 817 4 389 2 818 2 199 2 496 2 200 2 392 2 89 2 618 2 617 2 295 2 715 2 621 2 95 2 206 4 209 4 299 4 99 2 301 2 400 2 103 2 404 2 628 4 216 2 509 2 833 2 219 40 512 2 634 2 108 2 837 2 110 2 223 6 515 2 842 22 415 4 730 2 318 2 116 2 117 2 734 4 852 8 853 6 
323 8 122 4 1 2 326 2 521 8 328 10 427 4 428 6 642 2 331 2 124 6 125 2 334 2 336 4 238 2 128 2 338 2 532 2 16 2 247 4 342 8 747 2 652 2 539 2 749 2 21 4 441 2 349 2 350 2 544 2 24 6 447 4 356 2 27 2 28 12 144 4 145 2 659 4 553 2 148 2 556 2 555 2 150 4 663 4 153 4 35 4 764 2 454 2 765 2 265 2 459 2 773 4 268 2 159 4 160 2 674 2 675 4 166 2 679 2 168 6 680 2 465 2 571 4 169 2 682 2 684 2 173 2 56 2 57 4 783 6 687 4 375 2 475 2 181 8 278 2 183 4 796 2 184 2 587 4 695 8 480 2 377 2 589 2 698 4 287 2 381 2 76 2 598 4 809 2 811 4 385 4 290 2 812 4 85 2 813 4 604 2 490 2 86 2 815 2 707 4 291 4 606 2 817 4 389 2 818 2 199 2 496 2 200 2 392 2 89 2 618 2 617 2 295 2 715 2 621 2 95 2 206 4 209 4 299 4 301 2 99 2 400 2 103 2 404 2 628 4 216 2 509 2 833 2 219 40 512 2 634 2 108 2 837 2 110 2 223 6 515 2 842 22 415 4 730 2 318 2 116 2 117 2 734 4 852 8 853 6 
323 8 122 6 1 2 326 2 521 12 328 8 427 4 428 8 642 2 331 2 124 8 433 2 125 4 334 2 336 4 238 2 128 2 338 2 532 2 16 2 247 4 342 6 747 2 652 2 539 2 749 2 21 4 441 2 349 2 350 2 544 2 250 2 24 6 447 4 356 2 27 2 28 16 144 4 145 2 659 4 553 4 148 2 556 2 555 2 150 4 558 2 663 4 153 4 35 4 764 2 454 2 765 2 265 2 459 2 773 4 268 2 159 4 160 2 674 2 675 4 677 2 166 2 679 2 168 6 680 2 465 2 571 4 169 2 682 2 684 2 173 2 56 2 57 4 783 6 687 4 375 2 475 2 181 10 278 2 183 4 796 2 184 4 587 4 695 8 480 2 377 2 589 2 698 4 287 2 381 2 76 2 598 4 809 2 811 4 385 4 290 2 82 2 812 4 85 2 813 4 604 2 490 2 86 2 815 2 707 4 291 4 606 2 817 4 389 2 818 2 199 2 496 2 200 2 392 2 618 2 617 2 295 2 715 2 621 2 95 2 206 4 209 4 299 4 301 2 99 2 400 2 103 2 404 2 628 4 724 2 216 2 509 2 833 2 219 38 512 2 634 2 108 2 837 2 410 2 110 2 223 6 515 2 842 20 415 4 730 2 318 2 116 2 117 2 734 4 120 2 852 10 853 6 
659 4 375 2 1 2 181 6 148 2 35 4 183 4 695 2 480 2 336 4 773 2 238 2 381 2 509 2 128 2 833 2 675 2 532 2 219 4 837 2 290 2 110 2 223 2 815 2 707 2 606 2 349 2 56 2 783 6 447 2 199 2 117 2 852 6 28 4 144 2 
122 4 1 2 521 8 328 4 428 6 124 6 125 3 336 4 238 2 128 2 532 2 16 2 747 2 137 2 342 2 652 2 749 2 21 4 441 2 349 2 544 2 444 2 24 6 447 2 28 4 144 2 145 2 659 4 553 3 148 2 555 2 454 2 765 2 265 2 773 2 268 2 50 2 674 2 675 2 366 2 569 2 465 2 680 2 682 2 56 2 783 6 687 4 375 2 181 6 278 2 183 2 184 3 695 2 480 2 589 2 698 4 381 2 76 2 599 2 811 4 290 2 604 2 815 2 707 2 606 2 496 2 199 2 200 2 392 2 89 2 819 3 617 2 295 2 99 2 509 2 833 2 219 28 837 2 109 2 110 2 223 2 842 24 116 2 318 2 319 2 117 2 228 2 852 6 853 6 
375 2 837 2 191 2 
375 2 837 2 191 2 
521 2 328 4 428 2 11 2 124 2 334 2 336 4 129 2 240 2 16 2 745 2 342 2 652 2 749 2 21 4 441 2 350 2 544 2 24 6 447 4 27 2 144 2 28 16 145 2 659 4 148 2 555 2 150 4 558 4 663 4 35 4 454 6 765 2 156 2 264 4 265 2 44 2 773 4 268 2 461 2 674 2 675 2 676 4 168 4 465 2 680 2 169 4 682 2 55 4 57 2 783 6 687 4 177 2 375 4 181 12 278 2 584 2 183 6 184 2 480 4 695 4 377 2 589 2 698 4 289 2 803 2 76 2 703 2 811 4 191 2 290 2 604 2 707 2 710 2 817 4 389 2 496 2 200 2 618 2 617 2 295 2 621 4 296 2 503 2 206 4 207 2 299 2 99 2 400 2 102 2 722 2 833 2 219 24 512 2 108 2 837 6 410 4 223 4 842 16 116 2 318 2 117 2 853 6 852 12 
807 2 684 2 101 2 767 2 216 2 
521 2 328 2 428 2 124 2 434 2 334 2 336 4 129 4 240 2 16 2 745 2 652 2 749 2 21 4 441 2 350 2 544 2 442 2 24 6 447 4 27 2 144 2 28 16 145 2 659 4 148 2 555 2 761 2 150 4 558 4 663 4 35 4 454 6 765 2 156 2 264 4 265 2 44 2 45 2 773 4 268 2 461 2 674 2 675 2 676 4 168 4 465 2 680 2 169 4 682 2 55 4 57 2 783 6 687 4 177 2 375 4 181 12 278 2 584 2 183 6 184 4 695 4 480 4 377 2 589 2 698 4 289 2 803 2 76 2 703 2 811 4 191 2 290 2 604 2 707 2 710 2 817 4 496 2 200 2 618 2 617 2 295 2 621 4 296 2 206 4 823 2 299 2 99 2 400 2 722 2 106 2 833 2 219 24 512 4 108 2 837 6 410 4 223 4 842 16 116 2 318 2 117 2 853 6 852 12 
521 2 328 4 428 2 124 2 334 2 336 4 129 2 240 2 16 2 745 2 342 2 652 2 749 2 21 4 441 2 350 2 544 2 24 6 447 4 27 2 144 2 28 16 145 2 659 4 148 2 555 2 257 2 761 2 150 4 558 4 663 4 35 4 454 6 765 2 156 2 264 4 265 2 44 2 773 4 268 2 461 2 674 2 675 2 676 4 168 4 51 2 465 2 680 2 169 4 682 2 55 4 57 2 783 6 687 4 177 2 375 4 181 12 278 2 584 2 183 6 184 2 480 4 695 4 377 2 589 2 698 4 289 2 803 2 76 2 703 2 811 4 191 2 290 2 604 2 707 2 710 2 817 4 389 2 496 2 200 2 821 2 618 2 617 2 295 2 621 4 296 2 206 4 299 2 99 2 400 2 722 2 833 2 631 2 219 24 512 4 108 2 837 6 410 4 311 2 223 4 842 16 116 2 318 2 117 2 853 6 852 12 
230 2 2 2 5 2 422 24 423 10 428 12 231 6 642 12 644 2 646 2 437 2 236 4 237 4 647 2 243 2 242 2 16 2 652 2 653 2 21 4 441 2 654 2 24 4 25 2 449 2 657 6 450 2 661 1 253 2 255 2 662 2 259 2 260 2 454 2 262 4 40 12 265 2 46 2 268 2 47 4 674 2 270 2 272 2 680 2 466 8 53 4 682 2 686 2 687 2 470 2 64 3 475 2 690 2 278 2 67 2 697 2 698 2 287 2 73 2 76 2 81 2 83 2 706 2 86 2 496 2 295 2 716 8 95 18 98 24 302 2 507 2 726 2 514 2 109 2 111 2 112 2 730 2 732 2 318 2 116 2 733 4 322 4 122 10 121 2 737 2 521 18 328 2 329 2 739 2 124 12 528 2 125 11 126 2 746 2 136 2 137 2 537 2 138 4 749 2 543 2 545 2 353 4 548 2 354 2 146 8 758 2 759 2 553 11 554 24 360 2 765 2 154 2 561 2 770 7 769 6 562 2 157 2 566 2 774 4 567 4 160 2 162 4 163 2 366 2 569 2 168 28 169 4 173 2 371 2 787 2 580 2 184 11 798 4 376 2 590 2 589 2 594 2 380 2 188 4 809 2 810 6 811 4 604 2 388 2 196 2 198 2 200 2 390 2 391 6 201 6 392 2 819 2 617 2 620 2 824 2 825 2 826 4 208 2 625 2 626 2 210 2 213 2 831 6 219 28 636 2 838 4 221 2 412 2 841 2 842 22 224 8 225 2 847 10 418 2 849 2 853 6 851 4 638 12 
121 2 122 2 64 2 2 2 759 2 553 2 662 2 95 6 521 2 428 2 123 2 184 2 124 2 528 4 125 2 726 2 219 2 537 2 842 2 654 2 353 2 390 2 392 2 787 2 
121 2 122 2 64 2 2 2 759 2 553 2 662 2 95 6 521 2 428 2 123 2 184 2 124 2 528 4 125 2 726 2 219 2 537 2 842 2 654 2 353 2 390 2 392 2 787 2 
121 2 122 2 64 2 2 2 759 2 553 2 662 2 95 6 521 2 428 2 123 2 184 2 124 2 528 4 125 2 726 2 219 2 537 2 842 2 654 2 353 2 390 2 392 2 787 2 
121 2 421 2 639 2 553 3 579 4 640 6 521 2 231 4 232 2 624 4 208 2 184 3 798 2 720 2 591 2 211 2 770 6 73 2 531 3 774 2 567 2 339 3 161 4 189 3 219 10 19 2 535 4 368 4 842 4 685 2 274 4 493 2 686 2 443 2 547 2 372 2 114 2 849 2 472 2 392 2 
121 2 639 2 421 2 640 6 579 4 8 2 521 2 231 4 232 2 798 2 184 2 591 2 73 2 531 2 339 2 189 2 19 2 535 4 493 2 547 2 443 2 392 2 553 2 208 2 624 4 720 2 211 2 770 4 774 2 567 2 161 4 219 10 842 4 368 4 53 2 685 2 274 4 686 2 372 2 114 2 849 2 472 2 851 2 
121 2 639 2 421 2 640 6 579 4 8 2 521 2 231 4 232 2 798 2 184 2 591 2 73 2 531 2 339 2 189 2 19 2 535 4 493 2 547 2 443 2 392 2 553 2 208 2 624 4 720 2 211 2 770 4 774 2 567 2 161 4 219 10 842 4 368 4 53 2 685 2 274 4 686 2 372 2 114 2 849 2 472 2 851 2 
121 2 639 2 421 2 640 6 579 4 8 2 521 2 231 4 232 2 798 2 184 2 591 2 73 2 531 2 339 2 189 2 19 2 535 4 493 2 547 2 443 2 392 2 553 2 208 2 624 4 720 2 211 2 770 4 774 2 567 2 161 4 219 10 842 4 368 4 53 2 685 2 274 4 686 2 372 2 114 2 849 2 472 2 851 2 
121 2 639 2 421 2 640 6 579 4 8 4 521 2 231 4 232 2 798 2 184 2 591 2 73 2 531 2 339 2 189 2 19 2 535 4 493 2 547 2 443 2 392 2 553 2 208 2 624 4 720 2 211 2 770 4 774 2 567 2 161 4 219 10 842 4 368 4 53 4 685 2 274 4 686 2 372 2 114 2 849 2 472 2 851 4 
203 2 756 2 790 2 843 2 425 2 824 2 
252 2 130 2 756 2 132 2 668 2 423 2 814 2 
94 2 182 2 278 2 38 2 286 2 332 2 645 2 671 2 12 1 402 1 800 2 13 2 672 2 568 1 219 10 489 2 813 2 139 1 842 8 249 2 468 2 273 2 610 2 60 2 785 1 293 2 
63 2 32 2 92 2 579 4 8 2 424 2 231 12 208 6 798 6 10 2 770 17 563 2 157 2 73 6 774 6 567 6 162 2 510 2 163 2 219 6 387 2 138 2 842 6 53 2 816 4 686 6 114 2 657 4 849 6 851 5 
49 1 161 2 219 1 500 2 477 2 651 2 222 2 280 2 624 2 842 1 368 2 185 2 71 2 197 2 592 4 363 7 306 2 629 2 
624 2 185 2 368 2 161 2 71 4 197 2 500 2 477 2 592 4 651 4 363 6 306 2 222 4 629 2 280 2 
49 1 161 2 219 1 500 6 477 2 651 8 222 8 280 2 624 2 842 1 368 2 185 2 71 8 197 2 592 4 363 10 306 8 629 2 
624 2 185 2 368 2 161 2 71 2 197 2 477 2 592 2 651 2 363 2 222 2 629 2 280 2 
735 6 736 2 4 4 738 4 426 2 522 24 524 1 525 8 526 2 233 16 235 4 743 6 335 10 239 2 131 2 14 12 241 4 648 24 649 4 134 4 536 50 20 4 540 6 347 2 441 58 351 92 546 4 352 2 446 2 24 248 355 24 448 16 143 10 26 4 755 84 30 6 357 24 254 42 149 4 151 4 665 8 667 8 155 6 455 6 457 2 361 6 670 4 564 4 772 4 43 6 268 14 776 34 460 8 674 58 269 6 778 6 678 4 271 16 779 4 464 36 52 2 683 2 781 2 174 2 370 5 469 6 782 6 687 112 59 90 688 10 276 16 577 6 180 90 689 8 792 4 581 4 478 10 586 4 691 18 692 4 282 2 698 88 378 6 799 6 699 2 481 2 596 8 597 6 483 8 700 10 805 4 702 12 485 2 80 6 486 124 384 6 601 17 607 8 611 8 609 10 495 2 614 6 714 10 498 11 820 24 617 8 295 14 396 6 205 24 622 28 504 22 96 6 508 26 832 42 309 26 219 150 220 6 836 4 727 2 842 134 313 18 113 4 731 2 227 4 118 6 848 8 119 4 419 10 
577 2 276 2 617 2 295 2 6 2 622 10 256 2 641 2 526 2 233 2 378 2 698 6 481 2 268 2 74 2 597 2 460 2 483 2 485 2 674 2 486 2 219 16 133 2 220 2 134 2 408 2 842 16 781 2 441 2 370 2 712 2 845 2 24 12 687 6 251 2 448 2 848 2 
735 4 3 2 738 4 526 2 741 10 233 10 235 2 333 8 743 4 335 4 14 14 536 8 248 2 345 16 540 4 347 2 441 27 351 24 24 101 448 10 658 10 143 4 755 24 30 4 254 16 149 4 151 4 359 16 36 8 39 4 667 4 155 4 361 4 670 4 564 4 772 4 43 4 267 8 158 2 268 6 776 30 460 2 462 2 674 25 269 4 778 4 779 4 678 4 271 8 464 6 52 2 780 10 683 2 781 2 174 2 469 4 782 4 58 2 687 44 688 4 276 10 788 4 577 4 689 4 581 4 692 4 795 4 698 36 378 4 379 2 481 2 597 2 483 2 700 4 805 4 77 4 485 2 80 4 486 24 384 4 601 10 607 6 609 6 613 32 614 4 820 8 617 2 295 6 396 4 622 14 96 4 721 4 723 4 832 8 218 2 219 78 407 8 408 2 220 4 836 4 842 70 313 10 314 4 731 2 320 2 848 2 118 4 
276 6 577 4 689 4 426 2 525 2 692 2 282 2 526 2 233 6 431 2 235 2 698 14 378 4 699 2 335 2 481 2 239 2 483 2 597 2 700 2 485 2 486 8 649 2 601 2 607 4 441 12 352 2 24 40 609 2 448 6 614 4 143 2 498 2 617 2 295 2 622 14 504 10 268 2 460 2 776 6 674 12 269 4 219 28 779 2 408 2 271 6 220 4 727 2 464 2 842 26 52 2 781 2 313 2 370 2 782 4 687 14 688 2 119 2 848 2 
192 2 

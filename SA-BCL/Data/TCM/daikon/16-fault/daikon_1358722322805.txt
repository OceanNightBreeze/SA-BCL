#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (368,540) (368,540) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (194,427,582) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 269 291 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 29 538 46 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 343 103 69 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 550 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 126 195 290 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 126 195 290 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 126 195 290 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 126 195 290 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | STATEMENT | 65291 | stmt -> ;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.Debug:logOn()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGT([II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:backup(I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:memberOf(I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eq(II)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.RootNode:RootNode()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ModBitTracker:num_samples()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ValueTuple:isMissing(I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:relate_var()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:lexLT([I[I)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName:hashCode()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z | CONSTANT | 1896 | 0 -> -1
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1730 | if (x) -> if (!x)
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice1:arity()I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:noDups([I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logDetail()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:gte(II)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:intern([D)[D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61501 | = null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.Quant:eltsEqual([II)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern:intern([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eltsLT([II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36110 | * -> +
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.ProglangType:isArray()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:lt(II)Z
utilMDE.MathMDE:sign(I)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:ne(II)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Assert:assertTrue(Z)V
daikon.diff.Node:Node()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:setEqual([I[I)Z
jtb.JavaCharStream:readChar()C
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:getConfidence()D
daikon.ProglangType:baseIsIntegral()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ModBitTracker:num_vars()I
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:slice([III)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Invariant:justified()Z
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.MathMDE:negate(I)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:dimensions()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.InvMap:InvMap()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:isScalar()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
437 4 184 2 157 2 505 2 427 2 324 2 549 2 507 2 399 2 
396 2 634 2 524 6 545 2 422 2 500 2 173 2 152 6 598 2 318 2 482 6 
221 2 96 4 310 2 176 4 249 2 505 2 468 6 89 2 507 2 8 6 132 6 94 2 232 6 
322 29 98 2 505 6 646 10 304 6 560 16 507 6 76 8 102 4 9 10 10 2 459 12 131 4 229 2 595 8 133 16 442 16 602 10 262 8 60 8 680 2 42 4 450 4 638 10 241 10 393 6 641 2 707 2 319 2 143 26 
368 4 540 4 
594 2 
625 2 644 2 248 2 398 2 375 2 448 2 556 2 525 2 109 2 432 4 526 2 348 2 22 2 229 2 306 2 427 2 57 2 529 2 211 2 387 2 
322 54 430 4 124 4 345 4 505 4 646 16 433 2 304 4 560 32 279 4 507 4 76 6 9 16 79 8 459 22 651 4 190 6 133 32 493 6 14 6 442 32 464 6 602 6 572 2 193 6 605 4 262 18 364 4 534 6 638 16 450 2 241 16 481 2 393 4 584 2 142 2 144 2 319 2 143 48 
383 2 533 2 529 2 
38 2 224 10 606 22 90 2 449 2 376 2 541 2 352 2 509 2 536 2 189 2 501 2 502 2 586 2 
25 2 322 6 626 2 646 2 434 2 560 2 9 2 459 2 401 2 13 2 133 2 442 2 602 4 331 2 262 2 682 2 638 2 450 2 241 2 480 2 393 2 141 2 143 4 
175 2 442 8 322 16 360 2 605 4 646 4 560 8 534 6 102 2 9 4 459 4 638 4 241 4 651 4 190 6 133 8 143 12 
344 4 523 2 68 4 3 2 398 4 145 2 70 2 432 4 455 2 48 4 347 2 281 4 566 2 230 2 630 2 383 2 286 10 192 4 529 8 211 2 255 2 697 2 86 10 214 4 334 2 676 2 416 4 494 2 637 2 533 6 607 4 62 2 408 2 267 14 64 2 477 4 198 2 423 4 65 62 552 4 
117 2 504 2 457 2 166 2 469 2 594 2 693 2 520 2 33 2 708 2 
0 1 101 1 7 2 283 2 284 2 461 2 631 2 543 2 287 2 465 2 636 4 16 1 288 1 17 2 18 2 291 2 19 1 110 6 21 6 111 2 293 3 113 2 114 16 479 1 24 2 301 2 203 2 395 5 483 2 121 2 554 10 484 2 302 2 486 2 559 2 488 3 205 2 400 2 490 2 30 1 206 12 491 2 35 2 34 2 309 2 36 1 405 2 406 2 135 2 573 2 656 2 496 3 41 2 498 2 662 1 665 2 222 1 666 2 320 2 590 2 412 3 505 32 325 12 413 3 507 30 669 2 154 2 58 2 673 2 330 22 512 2 233 1 333 2 234 2 235 4 156 2 157 2 679 1 515 22 336 3 419 2 420 16 339 1 160 4 683 1 609 6 162 2 164 4 431 4 435 2 436 12 617 2 439 2 252 1 355 1 441 6 253 2 358 2 85 2 359 3 446 3 362 1 365 2 535 1 700 2 367 2 269 2 702 2 704 2 623 2 372 2 
237 2 505 2 
580 2 505 4 528 2 
183 2 
274 2 47 2 99 2 305 2 78 2 81 2 29 2 188 2 379 2 565 2 568 2 56 2 106 2 511 6 463 2 674 6 513 2 39 2 417 2 366 6 219 2 425 2 200 2 66 2 538 2 664 2 643 2 46 2 
654 2 677 1 130 2 127 2 
299 2 127 2 
108 2 131 2 592 2 87 2 407 2 529 2 127 2 
87 2 510 2 127 2 
370 2 87 2 127 2 
471 2 130 2 604 2 
87 2 127 2 
471 2 373 2 
363 2 127 2 
471 2 130 2 402 2 
443 2 341 2 130 2 
130 2 186 2 265 2 
213 2 130 2 612 2 
170 2 130 2 454 2 
471 2 599 2 
2 2 127 2 
118 2 341 2 
44 2 265 2 
213 2 681 2 
122 2 454 2 
471 2 426 2 
454 2 61 2 
213 2 178 2 
172 2 265 2 
629 2 341 2 
471 2 43 2 130 2 402 2 
471 2 43 2 130 2 146 2 402 2 
471 2 130 2 210 2 
471 2 615 2 130 2 
263 2 691 2 129 2 272 2 
108 2 151 2 225 2 529 2 
108 2 151 2 592 2 100 2 225 2 529 2 
108 2 131 2 87 2 529 2 127 2 470 2 
451 2 300 2 
108 2 546 2 131 2 529 2 
213 2 74 2 
454 2 84 2 
409 2 341 2 
63 2 265 2 
454 2 265 2 218 2 
694 2 454 2 265 2 
454 2 265 2 522 2 
454 2 265 2 6 2 
104 6 171 2 668 6 438 2 529 2 108 2 388 2 624 2 
471 2 458 2 
411 4 397 2 340 2 179 2 414 2 
316 2 130 2 
301 2 
7 8 187 2 105 2 461 2 385 4 386 2 465 2 636 4 291 2 110 2 21 6 196 4 292 2 111 2 297 2 298 2 199 2 24 2 203 2 121 2 554 6 555 2 302 2 486 2 489 2 649 2 490 2 492 2 36 2 405 8 135 2 314 2 216 2 497 2 498 2 662 2 45 2 666 2 505 26 226 2 507 26 669 2 328 2 154 2 58 2 59 2 673 6 330 4 512 2 235 4 157 2 515 6 516 2 517 2 160 4 239 2 609 2 162 2 610 4 164 4 613 2 429 2 73 2 689 2 355 4 441 4 253 2 358 2 85 2 365 2 266 2 700 2 367 2 270 2 372 2 537 2 
7 8 283 2 105 2 461 2 384 2 385 4 386 2 465 2 636 4 291 2 110 2 21 6 196 4 292 2 111 2 297 2 298 2 199 2 24 2 203 2 121 2 554 6 555 2 302 2 486 2 487 2 489 2 649 2 490 2 492 2 36 2 405 8 135 2 314 2 216 2 498 2 662 2 45 2 666 2 505 26 226 2 507 26 669 2 328 2 670 2 154 2 58 2 673 6 330 4 512 2 235 4 157 2 515 6 516 2 517 2 160 4 239 2 609 2 162 2 610 4 164 4 613 2 429 2 73 2 689 2 355 2 441 6 253 2 358 2 85 2 365 2 266 2 700 2 367 2 623 2 270 2 372 2 537 2 93 2 
671 2 
518 2 20 2 
587 2 396 2 524 2 545 2 123 2 204 2 346 2 690 2 137 4 285 2 31 2 508 4 353 2 567 2 410 2 201 2 570 2 482 2 
587 2 321 2 97 2 374 2 456 2 505 12 507 6 51 2 628 2 285 2 508 4 669 2 461 2 152 6 672 2 634 2 465 2 545 4 636 2 289 2 21 4 111 2 160 2 475 2 161 2 392 2 116 4 201 2 24 2 482 6 396 4 524 4 121 2 123 2 27 4 204 2 346 2 28 2 688 2 690 2 169 2 31 2 490 2 353 2 618 2 567 2 173 2 570 4 37 4 258 6 259 2 88 2 658 2 217 2 181 2 137 4 138 2 410 2 706 4 583 4 
587 2 321 2 97 2 374 2 456 2 505 12 507 6 51 2 628 2 285 2 508 4 669 2 461 2 598 2 152 6 672 2 634 2 465 2 545 4 636 2 289 2 21 4 111 2 160 2 475 2 161 2 392 2 116 4 201 2 24 2 482 4 396 4 524 6 121 2 123 2 27 4 204 2 346 2 28 2 688 2 690 2 169 2 31 2 490 2 353 2 618 2 567 2 570 4 37 4 258 6 259 2 88 2 658 2 217 2 181 2 137 4 138 2 410 2 706 4 583 4 
587 2 321 2 97 2 374 2 456 2 505 12 507 6 51 2 628 2 285 2 508 4 669 2 461 2 152 6 672 2 634 2 465 2 545 4 636 2 289 2 21 4 111 2 160 2 475 2 161 2 422 2 392 2 116 4 201 2 24 2 482 6 396 4 524 6 121 2 123 2 27 4 204 2 346 2 28 2 688 2 690 2 169 2 31 2 490 2 353 2 618 2 567 2 570 4 37 4 258 6 259 2 88 2 658 2 217 2 181 2 137 4 138 2 410 2 706 4 583 8 
587 2 321 2 97 2 374 2 456 2 505 12 507 6 51 2 628 2 285 2 508 4 669 2 461 2 152 8 598 2 672 2 634 2 465 2 545 4 636 2 289 2 21 4 111 2 160 2 475 2 161 2 422 2 392 2 116 4 201 2 24 2 482 6 396 4 524 8 121 2 123 2 27 4 204 2 346 2 28 2 688 2 690 2 169 2 31 2 490 2 353 2 618 2 567 2 570 4 37 4 258 10 259 2 88 2 658 2 217 2 181 2 137 4 138 2 410 2 706 8 583 8 
587 2 321 2 97 2 374 2 456 2 505 12 507 6 51 2 628 2 285 2 508 4 669 2 461 2 152 6 672 2 634 2 465 2 545 4 636 2 289 2 21 4 111 2 160 2 475 2 161 2 422 2 392 2 116 4 201 2 24 2 482 6 396 4 524 6 121 2 123 2 27 4 204 2 346 2 28 2 688 2 690 2 169 2 31 2 490 2 353 2 618 2 567 2 570 4 37 4 258 10 259 2 88 2 658 2 217 2 181 2 137 4 138 2 410 2 706 8 583 8 
374 2 185 2 4 2 7 4 377 1 382 2 545 4 389 6 21 6 390 4 392 2 201 2 24 2 396 4 203 2 554 6 27 8 204 2 558 4 28 4 562 2 31 2 567 2 570 4 37 6 405 4 217 2 40 1 410 2 583 2 585 7 587 2 226 2 51 2 231 2 597 2 598 4 58 12 235 4 237 6 238 1 609 2 610 4 67 2 247 6 71 6 77 2 618 2 251 2 619 2 253 2 441 6 257 2 85 2 258 2 259 4 445 2 261 2 88 2 268 2 623 2 270 2 271 2 97 2 456 2 280 6 628 2 283 2 285 2 461 2 634 4 465 2 636 4 289 2 291 2 110 2 292 2 111 2 112 7 474 2 475 2 296 2 297 2 116 4 298 4 642 6 482 4 119 6 121 2 123 2 486 2 302 2 647 1 490 2 653 2 135 2 311 2 655 2 495 6 657 1 315 2 659 2 658 2 661 2 136 6 137 4 138 2 498 2 666 2 321 2 147 6 505 46 506 1 507 24 508 4 669 2 154 2 152 12 153 2 672 2 673 6 330 2 512 2 155 2 332 8 678 2 157 2 514 6 515 8 337 1 159 6 160 4 161 2 519 1 162 2 684 2 164 4 685 6 524 8 165 2 346 2 686 6 687 2 688 2 689 2 690 2 349 2 169 2 353 2 355 1 528 6 358 2 532 10 365 2 367 2 700 2 369 2 703 2 372 2 539 1 183 6 
97 2 374 2 185 2 456 2 4 2 280 6 7 8 628 2 283 2 285 2 382 2 461 2 634 4 465 2 545 4 636 4 289 2 389 6 291 2 110 2 196 2 292 2 21 6 111 2 474 2 475 2 296 2 390 4 297 2 116 4 392 2 298 4 201 2 642 6 482 8 24 2 119 6 203 2 396 4 554 6 121 2 123 2 27 8 302 4 486 2 204 2 558 4 28 4 562 2 31 2 490 2 567 2 570 4 653 2 37 6 405 8 311 2 135 2 495 6 655 2 315 2 658 2 659 2 217 2 136 6 661 2 137 4 138 2 498 2 581 2 410 2 583 6 587 2 666 2 321 2 147 6 505 48 226 2 507 26 51 2 508 4 669 2 231 2 597 2 153 2 152 12 154 2 58 12 672 2 330 2 673 6 512 2 332 8 155 2 235 4 678 2 237 6 157 2 514 6 515 8 159 6 160 4 161 2 609 2 162 2 422 4 684 2 610 4 67 2 685 6 247 6 164 4 524 8 165 2 71 6 346 2 687 2 686 6 689 2 688 2 349 2 690 2 77 2 169 2 353 2 618 2 251 2 619 2 528 6 358 2 441 6 253 2 257 2 85 2 258 2 259 4 445 2 261 2 532 10 88 2 365 4 268 2 700 4 367 2 369 2 703 2 623 2 271 2 372 2 270 2 273 2 183 6 
97 2 374 2 185 2 456 2 4 2 280 6 7 8 628 2 283 2 285 2 382 2 461 2 634 4 465 2 545 4 636 4 289 2 389 6 291 2 110 2 196 2 292 2 21 6 111 2 474 2 475 2 296 2 390 4 297 2 116 4 392 2 298 4 201 2 642 6 482 8 24 2 119 6 203 2 396 4 554 6 121 2 123 2 27 8 302 4 486 2 204 2 558 4 28 4 562 2 31 2 490 2 567 2 570 4 653 2 37 6 405 8 311 2 135 2 495 6 655 2 315 2 658 2 659 2 217 2 136 6 661 2 137 4 138 2 498 2 581 2 410 2 583 6 587 2 666 2 321 2 147 6 505 48 226 2 507 26 51 2 508 4 669 2 231 2 597 2 153 2 152 12 154 2 58 12 672 2 330 2 673 6 512 2 332 8 155 2 235 4 678 2 237 6 157 2 514 6 515 8 159 6 160 4 161 2 609 2 422 4 162 2 684 2 610 4 67 2 685 6 247 6 164 4 524 8 165 2 71 6 346 2 687 2 686 6 689 2 688 2 349 2 690 2 77 2 169 2 353 2 618 2 251 2 619 2 528 6 358 2 441 6 253 2 257 2 85 2 258 6 259 4 445 2 261 2 532 10 88 2 365 4 268 2 700 4 367 2 369 2 703 2 623 2 706 4 271 2 372 2 270 2 273 2 183 6 
374 2 185 2 4 2 7 10 380 6 382 2 545 4 389 6 196 2 21 6 390 4 392 2 201 2 24 2 396 4 203 2 554 8 27 8 204 2 558 4 28 4 562 2 31 2 564 6 567 2 570 4 37 6 405 10 217 2 581 2 410 2 583 6 587 2 589 2 226 4 51 2 54 2 231 2 597 2 598 2 58 10 235 4 237 12 608 2 609 4 422 4 610 6 428 6 247 6 71 6 616 6 77 2 618 2 251 2 619 2 83 2 253 2 441 6 254 2 257 2 85 2 258 6 259 4 445 2 261 2 447 2 88 2 268 2 623 2 270 2 271 2 273 2 275 6 97 2 456 2 280 12 628 2 283 2 285 2 461 2 634 4 465 2 636 4 289 2 291 2 110 4 292 2 111 2 472 6 474 2 475 2 296 2 297 2 116 4 298 4 642 6 482 10 119 6 121 2 123 2 486 2 302 4 490 2 653 2 135 2 311 2 655 2 495 6 313 2 315 2 658 2 659 2 661 2 136 6 137 4 138 2 498 2 666 2 321 2 147 6 505 52 507 24 508 4 669 2 154 2 152 16 153 2 672 2 673 8 330 4 512 2 155 2 332 8 678 2 157 2 514 6 335 6 515 12 159 12 160 4 161 2 162 2 684 2 164 4 685 6 524 10 165 2 346 2 686 12 687 2 688 2 689 4 690 2 349 2 169 2 351 6 353 2 173 2 528 12 358 2 177 2 532 8 699 6 365 4 367 2 700 4 369 2 703 2 706 4 372 2 183 12 
587 2 396 4 321 2 524 6 27 2 505 4 456 2 204 2 346 2 51 2 690 2 628 2 169 2 31 2 508 2 618 2 152 4 634 2 37 2 258 4 545 4 289 2 217 2 137 2 138 2 161 2 475 2 422 2 116 2 392 2 706 4 410 2 201 2 583 6 482 6 
456 2 628 2 283 2 461 2 542 2 634 2 543 2 465 2 545 4 636 4 289 2 291 2 110 3 21 6 111 2 475 2 297 2 116 2 392 2 298 2 201 2 482 6 24 2 301 2 396 4 203 2 121 2 554 6 27 2 486 2 204 2 490 2 31 2 37 2 135 2 217 2 137 2 138 2 498 2 410 2 583 6 587 2 666 2 321 2 590 2 505 28 507 24 51 2 327 2 508 2 669 2 152 4 154 2 58 4 672 2 673 6 330 3 512 2 235 4 157 2 515 8 160 4 161 2 609 3 422 2 162 2 244 2 610 4 67 2 164 4 524 6 346 2 690 2 169 2 250 2 618 2 441 6 253 2 358 2 85 2 258 2 532 2 367 2 704 2 623 2 705 3 270 2 372 2 92 2 
587 2 321 2 97 2 374 2 456 2 505 12 507 6 51 2 628 2 285 2 508 4 669 2 461 2 152 6 672 2 634 2 465 2 545 4 636 2 289 2 21 4 111 2 160 2 475 2 161 2 422 2 392 2 116 4 201 2 24 2 482 6 396 4 524 6 121 2 123 2 27 4 204 2 346 2 28 2 688 2 690 2 169 2 31 2 490 2 353 2 618 2 567 2 570 4 37 4 258 10 259 2 88 2 658 2 217 2 181 2 137 4 138 2 410 2 706 8 583 8 
587 2 321 2 97 2 374 2 456 2 505 12 507 6 51 2 628 2 285 2 508 4 669 2 461 2 152 8 672 2 634 2 465 2 545 4 636 2 289 2 21 4 111 2 160 2 475 2 422 2 242 2 392 2 116 4 201 2 24 2 482 8 396 4 524 6 121 2 553 4 123 2 27 4 204 2 346 2 28 2 688 2 690 2 169 2 31 2 490 2 353 2 618 2 354 2 567 2 173 2 570 4 37 4 258 10 259 2 88 2 658 2 217 2 137 4 138 2 410 2 706 8 583 8 
169 2 593 2 618 2 
169 2 593 2 618 2 
276 2 97 2 452 4 374 2 277 2 7 4 628 2 283 2 461 2 462 2 634 4 544 2 465 2 545 4 636 4 292 4 21 6 197 2 111 2 475 2 296 2 390 2 391 2 297 2 116 2 639 2 298 6 201 2 24 2 482 12 203 2 396 4 121 2 554 2 123 2 27 4 302 4 486 2 204 2 558 2 303 2 28 2 490 2 570 4 37 4 405 4 135 2 574 2 137 2 577 2 498 2 317 2 583 6 587 4 666 2 503 2 591 2 223 2 505 24 50 2 507 16 593 2 508 2 669 2 328 4 154 2 152 16 598 4 58 4 673 2 330 2 512 2 155 2 235 4 157 2 514 2 515 2 160 4 162 2 422 4 164 4 524 12 169 6 353 2 618 4 251 2 355 2 174 2 173 4 441 6 253 2 358 2 85 2 258 6 259 4 532 2 88 2 365 4 700 4 367 2 623 2 371 4 706 4 270 2 372 2 182 2 
653 2 444 2 544 2 165 2 532 2 514 2 505 4 558 2 574 2 507 2 518 2 669 2 228 2 567 2 639 2 209 2 58 2 
276 2 97 2 452 4 374 2 277 2 7 4 628 2 283 2 461 2 462 2 634 4 544 2 465 2 545 4 636 4 292 4 21 6 197 2 111 2 476 2 475 2 296 2 390 2 391 2 297 2 116 2 639 2 298 6 201 2 24 2 482 12 203 2 396 4 121 2 554 2 123 2 27 4 302 4 486 2 204 2 28 4 490 2 207 2 570 4 37 4 405 4 135 2 574 2 658 2 137 2 498 2 317 2 583 6 587 4 666 2 591 2 223 2 505 24 507 16 593 2 508 2 669 2 328 4 154 2 152 16 598 4 600 2 58 2 673 2 330 4 512 2 155 2 235 4 157 2 514 2 515 2 160 4 162 2 422 4 164 4 524 12 169 6 80 2 353 2 618 4 251 2 355 1 174 2 173 4 441 6 253 2 358 2 85 2 258 6 259 4 88 2 365 4 700 4 367 2 623 2 371 4 706 4 270 2 372 2 182 4 95 2 
276 2 97 2 452 4 374 2 277 2 7 4 628 2 283 2 461 2 462 2 634 4 544 2 465 2 545 4 636 4 292 4 21 6 197 2 111 2 475 2 296 2 390 2 391 2 551 2 297 2 116 2 639 2 298 6 201 2 202 2 24 2 482 12 203 2 396 4 121 2 554 2 123 2 27 4 302 4 486 2 204 2 558 2 28 4 490 2 570 4 37 4 405 4 135 2 574 2 658 2 137 2 498 2 317 2 583 6 587 4 666 2 591 2 223 2 505 24 227 2 507 16 593 2 508 2 669 2 328 4 154 2 152 16 598 4 58 4 673 2 330 2 512 2 155 2 235 4 157 2 514 2 515 2 160 4 162 2 422 4 163 2 164 4 524 12 169 6 353 2 618 4 251 2 355 1 174 2 173 4 441 6 253 2 358 2 85 2 258 6 259 4 532 2 88 2 365 4 91 2 700 4 367 2 623 2 371 4 706 4 270 2 372 2 182 2 
453 2 185 2 5 2 7 2 103 2 283 1 9 2 11 2 381 2 461 2 190 4 632 2 465 2 466 2 194 2 636 4 15 2 291 2 110 2 21 6 111 2 295 2 638 2 297 2 298 2 24 2 203 2 26 4 121 2 554 6 486 2 646 2 560 2 562 2 490 2 651 2 133 2 569 2 652 2 212 2 404 2 405 2 312 2 135 2 655 2 661 2 579 2 498 2 139 2 582 2 499 2 143 4 666 2 322 6 323 2 148 6 505 26 49 2 226 2 507 20 53 2 669 2 154 2 153 2 58 2 673 6 330 2 512 2 235 4 157 2 515 8 160 4 609 2 241 2 162 2 610 4 521 2 611 2 343 2 164 4 69 2 689 2 168 2 350 4 692 2 355 1 695 1 441 5 253 2 358 2 256 2 442 2 257 2 85 2 264 2 698 2 367 2 703 2 623 1 372 2 
554 2 485 2 627 2 505 2 667 2 226 6 125 3 507 2 326 2 208 2 620 2 308 2 403 2 673 2 330 3 515 2 291 2 110 3 660 2 473 2 609 3 610 2 245 4 614 2 
554 2 485 2 627 2 505 2 667 2 226 6 125 2 507 2 326 2 208 2 620 2 308 2 403 2 673 2 330 2 515 2 291 2 110 2 660 2 473 2 609 2 610 2 245 4 614 2 
554 2 485 2 627 2 505 2 667 2 226 6 125 2 507 2 326 2 208 2 620 2 308 2 403 2 673 2 330 2 515 2 291 2 110 2 660 2 473 2 609 2 610 2 245 4 614 2 
322 6 505 10 507 4 325 2 9 2 12 6 191 3 329 2 633 2 330 3 635 4 107 2 291 2 515 2 338 2 240 2 609 3 638 2 241 2 115 4 424 3 646 2 304 2 560 2 167 2 436 2 76 4 563 2 133 2 356 2 357 2 696 2 442 2 530 4 134 3 660 2 576 4 140 4 220 2 143 4 
322 4 505 10 507 4 325 2 9 2 459 2 12 6 191 2 329 2 633 2 330 2 635 4 107 2 291 2 515 2 338 2 240 2 609 2 638 2 241 2 115 4 424 2 646 2 304 2 560 2 167 2 436 2 76 4 563 2 133 2 356 2 357 2 696 2 442 2 530 4 134 2 262 2 660 2 576 4 140 4 220 2 143 4 319 2 
322 4 505 10 507 4 325 2 9 2 459 2 12 6 191 2 329 2 633 2 330 2 635 4 107 2 291 2 515 2 338 2 240 2 609 2 638 2 241 2 115 4 424 2 646 2 304 2 560 2 167 2 436 2 76 4 563 2 133 2 356 2 357 2 696 2 442 2 530 4 134 2 262 2 660 2 576 4 140 4 220 2 143 4 319 2 
322 4 505 10 507 4 325 2 9 2 459 2 12 6 191 2 329 2 633 2 330 2 635 4 107 2 291 2 515 2 338 2 240 2 609 2 638 2 241 2 115 4 424 2 646 2 304 2 560 2 167 2 436 2 76 4 563 2 133 2 356 2 357 2 696 2 442 2 530 4 134 2 262 2 660 2 576 4 140 4 220 2 143 4 319 2 
322 4 505 10 507 4 325 2 9 2 459 4 12 6 191 2 329 2 633 2 330 2 635 4 107 2 291 2 515 2 338 2 240 2 609 2 638 2 241 2 115 4 424 2 646 2 304 2 560 2 167 2 436 2 76 4 563 2 133 2 356 2 357 2 696 2 442 2 530 4 134 2 262 4 660 2 576 4 140 4 220 2 143 4 319 4 
650 2 415 2 478 2 82 2 640 2 550 2 
527 2 55 2 215 2 640 2 278 2 246 2 613 2 
120 2 121 2 145 1 645 2 505 10 72 2 149 2 686 2 507 8 150 2 282 2 52 1 378 2 440 2 603 2 675 1 547 1 260 2 548 2 531 2 62 1 418 2 158 2 294 2 622 2 663 2 
322 16 505 6 646 6 304 2 279 2 560 6 507 6 168 2 76 4 128 2 9 6 79 2 53 2 459 4 32 2 381 2 651 2 596 2 190 4 133 6 14 4 442 6 361 2 262 2 621 2 638 6 421 2 241 6 143 12 319 2 
1 2 601 1 588 2 530 2 236 2 505 1 557 2 507 1 561 2 180 4 648 7 75 2 576 2 578 2 701 2 140 2 394 2 342 2 
1 4 588 2 530 2 236 2 557 2 561 4 180 4 648 6 75 2 576 2 578 2 701 4 140 2 394 2 342 2 
1 8 601 1 588 2 530 2 236 8 505 1 557 2 507 1 561 8 180 4 648 10 75 6 576 2 578 2 701 8 140 2 394 2 342 2 
1 2 588 2 530 2 557 2 561 2 180 2 648 2 576 2 578 2 701 2 140 2 394 2 342 2 
505 6 507 6 7 2 460 1 235 2 467 1 290 2 195 2 164 2 126 2 355 2 307 2 253 2 441 2 85 2 575 2 367 2 
85 2 235 2 290 2 505 6 195 2 126 2 507 6 7 2 575 2 367 2 283 2 623 2 307 2 253 2 441 4 164 2 
85 2 235 2 290 2 505 6 195 2 126 2 507 6 7 2 367 2 283 2 623 2 23 2 307 2 253 2 441 4 164 2 
85 2 235 2 290 2 505 6 195 2 126 2 507 6 7 2 367 2 355 2 307 2 253 2 441 2 571 2 164 2 
243 2 

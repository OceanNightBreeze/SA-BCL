#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 1287 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 764 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 547 93 140 470 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.Quant:concat([I[I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 2315 | stmt -> ;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_51()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd([I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3R_48()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quant:lt(II)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:sign(I)I
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.Quantify.Constant:Constant(I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:isString()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern:intern([D)[D
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:justified()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaCharStream:backup(I)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:isFloat()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:memberOf(J[J)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eq(DD)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166942 | stmt -> ;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eq(II)Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
utilMDE.ArraysMDE:min([I)I
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONSTANT | 3683 | 1 -> 0
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Ppt:Ppt()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:lte(II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:isReverse([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:sameLength([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.ProglangType:baseIsString()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_50()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ProglangType:dimensions()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfo:isPointer()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([J[J)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsLTE([II)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:lexGT([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_161()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ModBitTracker:num_sets()I
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfo:has_typeof()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_53()Z
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:lexEqual([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseLT([I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfo:isIOASet()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 4986 | return null
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfo:isIOAArray()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:readChar()C
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.Invariants:Invariants()V
daikon.Quant:lexNotEqual([I[I)Z | CONDITION | 170166 | if (x) -> if (!x)
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([D)Z | ASSIGN | 57849 | = null
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:memberOf(S[S)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.PptSlice1:arity()I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:setEqual([I[I)Z | STATEMENT | 155062 | stmt -> ;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:is_typeof()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String; | CONDITION | 7574 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 2 772 2 842 2 143 2 826 2 1106 4 563 2 1299 2 1284 2 
403 2 877 2 664 2 1277 2 1427 6 610 2 805 2 994 2 334 6 614 2 16 6 
143 2 582 2 604 2 319 6 713 4 1175 6 915 2 1269 2 563 2 1370 2 1231 6 521 4 1105 6 
1130 2 563 6 1424 4 508 6 609 10 832 16 942 2 1376 29 294 10 468 10 295 2 912 16 115 2 749 8 728 12 1157 16 862 10 143 6 1214 8 356 4 145 8 660 2 1252 2 216 6 898 2 627 10 29 4 958 8 125 26 1393 4 
990 6 1064 4 
1010 2 
381 2 766 2 175 2 505 4 37 2 406 2 1003 2 744 2 1004 2 693 2 134 2 1118 2 594 2 774 2 163 2 798 2 340 2 317 2 1098 2 168 2 1232 2 540 2 898 2 1168 2 
583 8 2 4 1130 2 563 4 608 4 609 16 508 4 832 32 1206 4 464 4 810 6 1375 4 294 16 1376 54 1134 2 1407 6 468 6 680 6 1322 2 139 6 912 32 749 18 296 4 1152 2 76 2 728 22 862 16 1157 32 143 4 1354 2 1214 6 819 6 519 6 1080 4 216 4 522 2 627 16 29 2 125 48 
667 2 381 2 255 2 
815 22 857 2 269 2 1048 2 409 2 121 2 331 2 560 2 490 2 1059 10 985 2 1061 2 1027 2 682 2 
1018 2 32 2 609 2 832 2 294 2 1376 6 160 2 468 4 912 2 749 2 338 2 728 2 887 2 862 2 1157 2 216 2 1193 2 627 2 424 2 576 2 29 2 125 4 736 2 
1157 8 862 4 356 2 1075 2 519 6 608 4 609 4 1080 4 832 8 848 2 1407 6 1376 16 294 4 627 4 912 8 125 12 728 4 
220 10 1364 4 381 8 671 2 1240 2 1200 2 505 4 741 2 385 4 363 4 793 2 435 2 770 4 693 2 488 2 748 2 986 4 514 4 12 62 297 2 96 2 638 2 1416 4 21 2 753 2 119 4 213 14 1331 2 24 4 667 2 56 2 1035 2 148 2 255 6 1168 4 307 2 735 10 289 4 1392 4 1288 2 
962 2 672 2 727 2 685 2 1287 2 
1239 1 1338 2 292 2 110 3 716 4 632 2 1147 5 1344 1 552 2 720 2 981 1 634 2 723 2 984 1 1347 2 9 2 1149 2 555 6 637 2 556 2 1351 2 1160 2 1161 2 22 2 557 2 372 3 1256 24 215 1 374 2 1082 2 824 2 1261 2 826 2 645 2 27 2 1358 2 1262 2 124 1 648 2 478 2 998 12 378 2 1089 4 829 2 127 2 650 2 831 2 483 2 485 3 739 2 36 2 651 2 1176 2 563 32 565 2 834 2 388 3 566 2 1180 2 567 2 1007 2 47 2 1008 16 656 2 840 2 1096 2 143 34 232 2 52 4 1384 1 1386 3 1014 1 757 2 933 2 573 6 1196 8 322 2 762 2 853 3 1109 24 241 1 578 3 1394 8 64 8 326 2 854 2 855 1 1204 2 1021 2 590 2 157 3 1292 2 1117 2 1413 16 517 4 1414 2 683 2 417 1 777 2 864 2 865 2 164 2 1418 2 781 2 1033 2 1419 2 422 3 954 2 1038 4 688 2 1422 1 960 1 875 16 264 2 1309 3 603 2 690 2 878 2 1049 6 1314 2 438 32 1225 2 796 2 797 2 1135 2 699 2 1054 1 442 1 966 4 280 1 967 6 1329 2 100 2 283 2 99 16 537 2 705 2 187 2 1334 2 707 4 708 3 1233 2 189 4 287 2 900 3 460 32 462 2 
143 2 884 2 
143 4 261 2 957 2 
43 2 
1242 2 718 14 911 2 15 10 206 2 1350 12 1251 14 729 2 299 2 817 14 303 2 212 4 1078 6 641 44 1356 4 218 2 561 2 28 2 1361 2 1173 14 382 2 742 2 652 10 486 8 45 2 838 12 1181 10 391 8 1009 2 841 2 1183 14 142 10 144 2 318 14 497 44 668 10 400 2 500 2 758 2 59 2 401 14 1108 2 65 2 1199 2 1113 4 156 14 673 2 937 2 1402 2 678 2 411 4 1409 4 516 2 1211 2 1415 8 1417 2 166 2 167 2 420 2 169 2 1304 6 1217 2 951 2 256 2 1305 2 869 8 524 2 1307 2 174 14 956 14 527 10 177 6 1221 8 271 2 691 2 1316 14 437 2 795 4 180 4 1428 4 1319 32 1320 2 94 18 353 2 184 2 533 2 1055 18 285 2 894 2 1058 44 188 2 1433 2 456 2 196 6 107 2 973 2 
584 2 602 2 498 2 813 1 
498 2 396 2 
381 2 800 2 106 2 34 2 1129 2 1424 2 498 2 
1313 2 
106 2 1088 2 498 2 
602 2 755 2 592 2 
106 2 498 2 
448 2 755 2 
113 2 498 2 
602 2 1056 2 755 2 
1259 2 495 2 602 2 
1388 2 1083 2 602 2 
1062 2 602 2 575 2 
602 2 112 2 925 2 
764 2 
38 2 498 2 
1259 2 938 2 
1083 2 254 2 
1190 2 575 2 
112 2 902 2 
926 2 755 2 
773 2 112 2 
541 2 575 2 
513 2 1083 2 
1259 2 301 2 
602 2 1056 2 755 2 919 2 
1090 2 
602 2 755 2 117 2 
976 2 602 2 755 2 
243 2 1265 2 1174 2 1371 2 
381 2 8 2 1129 2 480 2 
381 2 8 2 800 2 1129 2 480 2 370 2 
381 2 421 2 106 2 1129 2 1424 2 498 2 
1232 2 249 2 
381 2 1129 2 1424 2 344 2 
1272 2 575 2 
598 2 112 2 
1259 2 778 2 
1083 2 771 2 
1083 2 1165 2 112 2 
1083 2 112 2 873 2 
799 2 1083 2 112 2 
1083 2 531 2 112 2 
381 2 670 2 1129 2 390 2 726 2 18 6 1030 6 194 2 
418 2 755 2 
815 2 607 2 447 2 286 2 510 2 1047 2 1101 2 992 2 465 4 439 2 530 2 141 2 1212 2 
234 2 602 2 
1414 2 
1144 2 1338 2 292 2 716 4 906 4 1066 2 632 6 1344 2 811 2 1246 2 723 2 1347 2 9 2 555 4 1250 2 556 2 1352 4 471 2 374 2 1261 2 826 2 918 2 1359 2 478 2 998 8 1089 4 127 2 831 2 739 2 36 2 651 2 1176 2 563 26 1007 2 47 2 656 4 1097 2 143 26 232 2 52 2 1384 2 573 6 240 2 1394 2 1289 2 326 2 1395 2 854 2 1021 2 517 2 777 2 864 2 948 2 164 2 257 2 954 2 1038 4 603 2 878 2 1049 2 436 2 438 6 797 2 885 2 966 2 967 2 1329 2 99 6 100 2 705 2 187 2 189 4 287 2 460 4 
1144 2 1338 2 292 2 716 4 906 4 1066 2 632 6 1344 2 1246 2 723 2 1347 2 9 2 555 6 1250 2 556 2 1352 4 471 2 374 2 1261 2 826 2 918 2 1359 2 478 2 998 8 378 2 1089 4 127 2 831 2 739 2 36 2 651 2 1176 2 563 26 566 2 1007 2 47 2 656 4 1097 2 143 26 232 2 52 2 1384 2 573 6 1389 2 240 2 762 2 1394 2 1289 2 326 2 854 2 1021 2 246 2 517 2 777 2 864 2 164 2 257 2 954 2 1038 4 603 2 878 2 1049 2 436 2 438 6 797 2 885 2 966 2 967 2 1329 2 99 6 100 2 705 2 187 2 189 4 287 2 191 2 460 4 
1201 2 
1052 2 53 2 
776 2 1363 2 403 2 49 2 20 2 504 4 300 2 949 2 210 4 270 2 664 2 1427 2 922 2 387 2 953 2 525 2 116 2 16 2 
403 4 504 4 507 2 1205 2 716 2 550 4 1146 2 591 2 593 4 1347 2 987 2 334 6 1150 2 116 2 16 4 776 4 1156 2 20 2 300 2 864 2 210 4 949 2 991 4 1261 2 953 2 523 2 525 2 1126 2 173 2 1040 6 1089 2 265 2 1363 2 831 2 603 2 1041 2 563 6 270 2 310 2 1427 6 922 2 610 2 387 2 1007 2 351 2 315 2 701 2 444 4 143 12 49 2 1330 2 233 2 101 2 664 4 395 2 705 2 805 2 1335 4 573 4 459 2 
403 4 504 4 507 2 1205 2 716 2 550 4 1146 2 591 2 593 4 1347 2 987 2 334 6 1150 2 116 2 16 6 776 4 1156 2 20 2 300 2 864 2 210 4 949 2 991 4 1261 2 953 2 523 2 525 2 1126 2 173 2 1040 6 1089 2 265 2 1363 2 831 2 603 2 1041 2 563 6 270 2 310 2 1427 4 922 2 610 2 387 2 1007 2 351 2 315 2 701 2 444 4 143 12 49 2 1330 2 233 2 101 2 664 4 395 2 1277 2 705 2 1335 4 573 4 459 2 
403 4 504 4 507 2 1205 2 716 2 550 4 1146 2 591 2 593 4 1347 2 987 2 334 6 1150 2 116 2 16 6 776 4 1156 2 20 2 300 2 864 2 210 4 949 2 991 4 1261 2 953 2 523 2 525 2 1126 2 173 2 1040 6 1089 2 265 2 1363 2 831 2 603 2 877 2 1041 2 563 6 270 2 310 2 1427 6 922 2 610 2 387 2 1007 2 351 2 315 2 701 2 444 4 143 12 49 2 1330 2 233 2 101 2 664 4 395 2 705 2 1335 8 573 4 459 2 
403 4 504 4 507 2 1205 2 716 2 550 4 1146 2 591 2 593 8 1347 2 987 2 334 8 1150 2 116 2 16 8 776 4 1156 2 20 2 300 2 864 2 210 4 949 2 991 4 1261 2 953 2 523 2 525 2 1126 2 173 2 1040 10 1089 2 265 2 1363 2 831 2 603 2 877 2 1041 2 563 6 270 2 310 2 1427 6 922 2 610 2 387 2 1007 2 351 2 315 2 701 2 444 4 143 12 49 2 1330 2 233 2 101 2 664 4 395 2 1277 2 705 2 1335 8 573 4 459 2 
403 4 504 4 507 2 1205 2 716 2 550 4 1146 2 591 2 593 8 1347 2 987 2 334 6 1150 2 116 2 16 6 776 4 1156 2 20 2 300 2 864 2 210 4 949 2 991 4 1261 2 953 2 523 2 525 2 1126 2 173 2 1040 10 1089 2 265 2 1363 2 831 2 603 2 877 2 1041 2 563 6 270 2 310 2 1427 6 922 2 610 2 387 2 1007 2 351 2 315 2 701 2 444 4 143 12 49 2 1330 2 233 2 101 2 664 4 395 2 705 2 1335 8 573 4 459 2 
716 4 550 4 1067 2 723 2 9 2 555 6 1250 4 16 8 556 2 20 2 1074 2 210 4 374 2 1260 6 1261 2 918 2 1089 4 30 2 920 2 31 6 36 2 563 24 39 2 922 2 1270 2 1091 2 43 6 387 2 566 2 47 12 392 2 48 2 927 6 49 2 232 2 233 2 929 2 1099 2 235 1 52 2 395 2 1277 4 573 6 60 8 762 2 61 2 579 2 403 4 591 2 943 6 945 2 776 4 1295 1 949 2 953 2 789 6 1126 2 957 6 1127 7 265 2 603 2 267 2 270 2 1312 1 610 4 438 8 1318 2 441 6 444 8 966 2 967 2 1329 2 282 1 1330 2 99 6 101 4 801 10 806 2 1141 1 1335 2 287 2 452 2 625 2 454 2 288 1 459 2 460 2 808 2 1340 2 632 6 1146 2 1346 1 1347 2 987 2 116 2 1156 2 1352 4 300 2 1167 2 991 6 120 2 826 2 1359 2 478 2 1170 6 998 4 1171 7 127 2 1000 2 831 2 1363 2 1001 2 1365 4 1369 6 651 2 1176 2 310 2 1378 1 1007 2 315 2 143 46 661 6 664 4 1391 6 1394 2 153 2 325 6 326 2 854 2 504 4 507 2 1205 4 675 6 1403 2 334 12 335 4 162 1 517 2 684 2 864 2 523 2 525 2 1038 4 173 2 1040 2 1041 2 878 2 1427 4 1049 2 351 2 884 6 885 2 701 2 535 2 705 2 189 4 542 2 360 2 1237 6 
1340 2 716 4 550 4 1146 2 632 6 1067 2 723 2 9 2 1347 2 987 2 555 6 1250 4 116 2 16 8 556 2 1352 4 1156 2 1074 2 20 2 300 2 210 4 1167 2 120 2 991 6 374 2 1260 6 826 2 1261 2 918 2 1359 2 1170 6 478 2 998 8 30 2 1089 4 1000 2 127 2 1001 2 920 2 1363 2 831 2 1365 4 31 6 1369 6 1176 2 36 2 651 2 563 26 310 2 39 2 1270 2 922 2 1091 2 43 6 387 2 566 2 47 12 1007 2 315 2 656 2 392 2 48 2 927 6 143 48 49 2 232 2 661 6 233 2 929 2 1099 2 52 4 664 4 395 2 573 6 1391 6 60 8 762 2 61 2 579 2 153 2 1394 2 325 6 403 4 326 2 504 4 854 2 507 2 1205 4 675 6 591 2 1403 2 943 6 335 4 334 12 945 2 776 4 517 4 684 2 949 2 864 2 783 2 953 2 523 2 789 6 525 2 1038 4 1126 2 173 2 1040 2 957 6 265 2 603 2 1041 2 877 4 878 2 267 2 270 2 1132 2 1049 2 1427 8 610 4 438 8 1318 2 441 6 884 6 351 2 885 2 701 2 966 4 444 8 967 2 1329 2 1330 2 535 2 99 6 101 4 801 10 705 2 806 2 1335 6 452 2 189 4 287 2 454 2 542 2 625 2 360 2 459 2 808 2 1237 6 460 2 
1340 2 716 4 632 6 550 4 1146 2 1067 2 723 2 9 2 1347 2 987 2 555 6 1250 4 116 2 16 8 556 2 1352 4 1156 2 1074 2 20 2 300 2 210 4 1167 2 120 2 991 6 374 2 1260 6 826 2 1261 2 918 2 1359 2 1170 6 478 2 998 8 30 2 1089 4 1000 2 127 2 1001 2 920 2 1363 2 831 2 1365 4 31 6 1369 6 1176 2 651 2 36 2 563 26 310 2 39 2 1270 2 922 2 1091 2 43 6 387 2 566 2 47 12 1007 2 315 2 656 2 392 2 48 2 927 6 143 48 49 2 232 2 661 6 233 2 929 2 1099 2 52 4 664 4 395 2 573 6 1391 6 60 8 762 2 61 2 579 2 153 2 1394 2 325 6 403 4 326 2 504 4 854 2 507 2 1205 4 675 6 591 2 1403 2 593 4 943 6 335 4 334 12 945 2 776 4 517 4 684 2 949 2 864 2 783 2 953 2 523 2 789 6 525 2 1038 4 1126 2 173 2 1040 6 957 6 265 2 603 2 1041 2 877 4 878 2 267 2 270 2 1132 2 1049 2 1427 8 610 4 438 8 1318 2 441 6 884 6 351 2 885 2 701 2 966 4 444 8 967 2 1329 2 1330 2 535 2 99 6 101 4 801 10 705 2 806 2 1335 6 452 2 189 4 287 2 454 2 542 2 625 2 360 2 459 2 808 2 1237 6 460 2 
716 4 550 4 1067 2 723 2 9 2 365 2 555 6 1250 4 16 10 1071 6 556 2 20 2 1074 2 210 4 374 2 375 6 1260 6 1261 2 918 4 1089 4 30 2 31 6 222 6 36 2 563 24 39 2 922 2 1270 2 1091 2 43 12 387 2 566 2 47 10 392 2 48 2 927 6 49 2 232 2 233 2 929 2 1099 2 52 4 395 2 1277 2 573 6 60 8 762 2 62 2 61 2 579 2 403 4 591 2 593 4 943 6 945 2 776 4 949 2 783 2 953 2 789 6 1126 2 957 12 426 6 265 2 603 2 430 6 431 6 267 2 270 2 1132 2 610 4 438 12 1318 2 441 6 444 8 966 4 967 4 1329 2 1330 2 99 8 101 4 801 8 449 6 805 2 806 2 1335 6 287 2 452 2 625 2 454 2 459 2 460 4 808 2 1340 2 1146 2 632 8 1347 2 987 2 116 2 1156 2 1352 6 300 2 1167 2 991 6 120 2 995 2 826 2 1359 2 478 2 1170 12 998 10 127 2 128 2 1000 2 831 2 1363 2 1001 2 1365 4 1369 6 651 2 1176 2 310 2 835 2 137 6 1007 2 315 2 656 2 143 52 661 6 664 4 1387 2 1391 6 1394 4 153 2 503 2 325 12 326 2 854 2 504 4 507 2 1205 4 675 6 1403 2 334 16 335 4 517 4 684 2 864 2 342 2 523 2 525 2 1038 4 173 2 1040 6 877 4 1041 2 878 2 1427 10 1049 4 528 6 351 2 884 12 885 2 701 2 535 2 705 2 189 4 542 2 360 2 1237 12 
265 2 1363 2 403 4 1041 2 877 2 504 2 507 2 550 2 1427 6 610 2 593 4 387 2 987 2 334 4 351 2 116 2 701 2 16 6 444 2 143 4 1156 2 20 2 233 2 949 2 210 2 664 4 395 2 991 2 1335 6 953 2 523 2 525 2 173 2 1040 4 459 2 
716 4 550 2 1146 2 632 6 723 2 1347 2 9 2 987 2 555 6 1250 2 116 2 16 6 556 2 1351 2 1352 4 1156 2 20 2 210 2 991 2 1261 2 826 2 1359 2 478 2 1089 4 127 2 831 2 920 2 1363 2 36 2 651 2 1176 2 563 24 387 2 566 2 1007 2 47 4 143 28 657 2 232 2 928 2 233 2 664 4 395 2 573 6 762 2 403 4 326 2 504 2 854 2 507 2 333 2 334 4 1414 2 864 2 949 2 1418 2 953 2 523 2 525 2 1038 4 173 2 1040 2 265 2 603 2 1041 2 877 2 878 2 792 3 1427 6 1049 3 610 2 438 8 1225 2 351 2 885 2 701 2 444 2 967 3 1329 2 99 6 801 2 705 2 1335 6 189 4 287 2 1434 2 457 2 459 2 460 3 
403 4 504 4 507 2 1205 2 716 2 550 4 1146 2 591 2 593 8 1347 2 987 2 334 6 1150 2 116 2 16 6 776 4 1156 2 20 2 300 2 864 2 210 4 949 2 991 4 1261 2 953 2 523 2 525 2 1126 2 173 2 1040 10 1089 2 265 2 1363 2 831 2 603 2 877 2 1041 2 563 6 270 2 310 2 1427 6 922 2 610 2 387 2 1007 2 351 2 315 2 701 2 444 4 143 12 49 2 1330 2 233 2 101 2 664 4 395 2 705 2 1335 8 573 4 459 2 
403 4 504 4 507 2 1205 2 716 2 550 4 1146 2 591 2 593 8 1347 2 987 2 334 8 366 2 116 2 16 6 776 4 1156 2 20 2 300 2 864 2 949 2 210 4 1166 4 991 4 1261 2 953 2 523 2 525 2 1126 2 173 2 1040 10 1089 2 265 2 1363 2 831 2 428 2 603 2 877 2 1041 2 563 6 270 2 310 2 1427 8 922 2 610 2 387 2 1007 2 351 2 315 2 701 2 444 4 143 12 49 2 1330 2 233 2 101 2 664 4 705 2 395 2 805 2 1335 8 573 4 
1271 2 987 2 701 2 
1271 2 987 2 701 2 
631 2 716 4 632 2 550 2 1245 2 723 2 1347 2 9 2 987 6 555 6 1250 6 116 2 16 12 556 2 20 4 300 2 210 2 991 4 374 4 1261 2 826 2 1084 4 1359 2 478 2 998 4 1089 4 831 2 1365 2 36 2 651 2 1176 2 563 16 224 2 310 2 922 2 1271 2 566 2 1007 2 47 4 927 2 143 24 231 2 232 2 320 2 52 4 664 4 1277 4 573 6 762 2 61 2 1289 4 403 4 326 2 854 2 504 2 1205 2 591 2 593 4 335 2 336 2 334 16 776 4 517 4 864 2 1303 2 953 2 1038 4 1126 2 173 2 1040 6 427 2 603 2 877 4 1041 2 878 2 1044 2 1427 12 610 4 1317 2 438 2 91 4 885 2 701 4 966 4 281 2 444 4 532 2 1329 2 890 2 99 2 101 4 801 2 705 2 805 4 896 2 105 2 899 2 1335 6 452 2 189 4 287 2 542 2 1236 2 460 2 
927 2 143 4 532 2 49 2 534 2 563 2 801 2 1100 2 1303 2 705 2 53 2 1091 2 1318 2 47 2 335 2 790 2 427 2 
631 4 716 4 550 2 632 2 1245 2 723 2 114 2 1347 2 9 2 987 6 555 6 1250 6 116 2 16 12 556 2 20 4 300 2 210 2 991 4 374 4 1261 2 826 2 1084 4 1359 2 478 2 998 4 1089 4 831 2 1365 2 36 2 651 2 1176 2 563 16 310 2 922 2 1271 2 566 2 1007 2 47 2 315 2 927 2 143 24 231 2 230 2 232 2 320 2 52 4 664 4 1277 4 573 6 762 2 61 2 1289 4 403 4 326 2 854 2 504 2 1205 4 591 2 593 4 336 2 334 16 776 4 517 4 864 2 1303 2 953 2 1038 4 1126 2 173 2 872 2 1040 6 427 2 603 2 877 4 1041 2 878 2 1044 2 1427 12 610 4 438 2 91 4 885 2 701 4 966 4 444 4 281 2 532 2 1329 2 1328 2 1137 2 99 2 101 4 705 2 805 4 896 2 899 2 1335 6 452 2 189 4 287 2 542 2 1236 2 460 4 
631 2 716 4 551 2 632 2 550 2 1245 2 723 2 1347 2 9 2 987 6 555 6 1250 6 116 2 16 12 556 2 814 2 20 4 300 2 210 2 991 4 374 4 1261 2 826 2 1084 4 1359 2 478 2 998 4 1089 4 831 2 1365 2 36 2 651 2 1176 2 563 16 310 2 225 2 922 2 1271 2 566 2 1007 2 47 4 315 2 927 2 143 24 231 2 232 2 320 2 52 4 664 4 1277 4 573 6 58 2 762 2 61 2 1289 4 403 4 326 2 854 2 504 2 1205 4 591 2 593 4 335 2 336 2 334 16 776 4 517 4 864 2 1125 2 1303 2 953 2 1038 4 1126 2 173 2 1040 6 427 2 603 2 877 4 1041 2 878 2 1044 2 1427 12 610 4 438 2 91 4 885 2 701 4 966 4 281 2 444 4 532 2 1329 2 99 2 101 4 801 2 705 2 805 4 896 2 899 2 1335 6 452 2 189 4 287 2 542 2 1236 2 460 2 
2 4 1 3 3 56 714 2 5 4 717 8 716 6 719 2 721 2 722 6 723 4 9 2 724 2 10 2 11 2 13 4 14 2 728 10 19 4 731 1 22 2 23 24 24 2 25 14 734 2 26 192 27 2 737 2 738 10 35 3 740 2 743 2 39 2 40 2 41 2 745 2 746 4 44 2 747 2 46 2 47 6 749 6 751 2 48 4 752 2 50 2 754 6 51 4 54 2 756 4 55 2 57 2 759 5 761 2 762 6 62 2 63 8 64 14 765 2 767 2 66 18 67 22 69 2 71 2 72 2 73 32 76 2 75 3 74 2 775 2 78 3 77 10 79 6 781 2 780 4 782 64 81 2 787 2 788 2 791 2 84 2 792 2 88 2 89 2 794 2 92 2 796 15 93 2 97 4 98 3 99 26 801 2 802 2 804 22 104 2 103 2 806 2 109 2 110 2 111 62 809 34 118 2 816 2 818 2 119 2 820 2 821 138 823 2 822 2 122 2 824 2 825 10 123 4 826 8 124 1 125 18 828 2 829 2 127 2 830 2 128 2 126 32 831 2 129 2 130 2 131 2 832 12 132 2 136 2 835 2 138 22 837 3 836 2 140 2 840 2 143 141 845 3 847 2 146 2 147 2 150 134 151 2 850 2 851 2 852 2 853 3 154 2 155 62 854 2 858 64 158 3 159 2 161 2 860 2 861 3 862 6 863 2 864 2 865 2 866 2 867 62 170 2 871 2 874 2 876 22 875 46 178 2 880 2 881 2 882 294 883 28 886 138 183 4 888 62 889 2 891 2 892 3 893 2 185 2 186 2 895 32 897 1 189 6 190 3 193 4 900 2 195 2 901 8 903 2 197 3 904 3 198 2 907 20 201 2 909 2 200 2 203 5 912 12 205 3 204 2 913 2 207 2 208 2 209 2 214 2 917 3 217 2 918 46 219 4 221 2 223 2 921 2 226 2 227 22 228 1 924 4 229 2 232 2 928 2 929 16 932 2 237 2 933 2 238 28 240 76 936 2 940 82 941 6 944 8 945 2 248 1 947 16 250 2 252 4 253 2 950 2 257 4 259 2 260 11 955 14 959 2 960 1 262 2 961 2 264 2 266 2 267 2 268 2 272 2 274 2 964 4 275 2 276 18 277 2 278 2 965 11 279 16 280 1 967 16 968 2 283 2 969 2 284 2 970 2 971 2 972 4 289 2 974 62 291 2 977 2 978 12 293 2 980 4 294 6 982 2 983 2 984 14 986 2 302 1 993 2 306 10 998 238 999 22 1000 16 308 2 1002 2 312 64 1005 3 313 2 314 2 1007 2 1008 14 316 2 1012 2 1013 2 1014 12 322 2 323 2 326 8 1019 2 1020 1 327 24 1022 7 329 62 1023 18 1024 2 333 2 332 2 1026 30 337 3 339 2 1029 2 341 2 1032 14 1033 2 342 2 1037 8 343 2 1036 2 1038 6 1039 62 345 2 346 2 347 2 1045 2 348 4 1046 2 1049 46 1050 4 350 2 1051 2 1053 4 352 4 354 66 355 28 357 2 1057 2 1060 2 1063 4 361 2 1065 2 1066 2 1067 2 365 2 1069 2 1070 2 369 2 1076 2 1077 2 372 2 374 18 1082 2 376 2 1085 8 1086 2 1089 6 379 3 383 2 385 2 386 2 388 3 389 2 1093 2 1094 2 1095 2 392 2 1097 2 393 2 394 2 397 2 1103 2 398 2 399 2 1104 2 1107 18 1109 15 1110 64 1111 4 402 4 1112 2 404 2 1115 4 410 4 1117 2 1119 2 414 2 1120 2 415 2 416 2 1123 14 1124 2 419 16 422 2 1128 2 1130 2 432 2 434 3 436 2 1133 34 438 110 443 2 1136 2 445 106 1138 2 1140 2 450 2 1139 4 1142 2 457 2 458 2 460 97 462 2 1144 2 1145 2 1148 3 467 2 1149 2 1153 2 1152 4 469 2 1154 2 1155 2 1157 12 1158 24 1160 2 1159 24 1161 2 1162 6 1164 2 1163 2 470 2 471 2 474 2 475 2 476 34 477 64 478 4 1172 22 481 2 482 28 483 2 1176 2 1177 3 1178 2 487 2 489 2 491 24 1179 44 1180 2 492 28 493 2 494 2 1184 28 1185 26 1187 12 499 3 1191 28 1192 2 1194 2 1195 28 1196 14 502 2 501 2 503 2 1202 2 1203 2 1204 2 508 4 509 2 1207 2 511 2 512 2 1208 2 1209 24 1210 2 515 3 1214 6 1213 2 1215 1 520 2 526 4 1222 3 1226 2 1227 2 535 2 1228 2 537 2 1229 2 1230 2 539 2 1233 2 1234 3 543 66 1235 2 547 2 548 2 1238 246 1239 1 1241 2 549 10 1243 2 552 2 1246 2 1247 18 554 2 1249 2 555 14 1250 2 557 2 1254 2 1255 2 558 4 1256 51 559 2 1257 2 1258 2 1261 2 1263 2 562 2 1264 2 563 88 1268 2 564 2 565 2 566 6 568 24 1273 2 570 2 1275 2 571 18 1276 4 1278 12 1279 2 572 6 1280 2 1281 2 573 8 1282 28 1285 28 577 2 578 2 580 3 583 8 585 2 587 102 586 2 588 14 1290 2 589 2 1291 120 595 2 1293 2 1294 2 1296 2 1298 2 1297 2 1300 2 1301 2 599 2 1302 6 600 4 1308 2 1309 2 603 2 1310 2 605 2 606 90 608 4 609 6 1315 2 611 22 1321 4 612 8 613 2 615 2 1323 4 1324 2 1325 2 1326 2 1329 4 616 32 617 2 619 3 618 16 1332 3 1333 7 620 2 1334 13 622 2 623 2 624 2 626 2 627 6 1336 2 629 28 630 22 1337 2 1340 2 1341 2 1342 2 632 14 1343 2 1345 2 1344 2 633 1 634 2 1347 2 1348 2 636 2 635 2 1349 32 1352 12 1353 22 644 2 645 2 1358 2 1359 2 648 2 649 28 1362 2 650 2 1367 2 651 2 1372 2 1374 2 1376 24 1377 2 654 2 655 2 1381 2 1382 1 657 2 658 1 1383 36 662 2 1384 3 663 2 1385 56 665 2 666 1 1386 2 1387 4 669 2 1394 72 1397 2 1398 2 1400 2 674 2 677 2 676 22 1401 44 1405 3 1404 2 1407 6 679 2 680 6 681 10 1408 2 1410 28 1411 2 1413 148 1412 2 683 2 684 2 686 2 687 1 1421 10 688 13 1422 1 1423 4 694 62 1429 4 698 2 699 2 700 2 702 18 703 2 1430 60 704 2 705 2 1431 2 1432 2 707 30 708 2 710 1 1435 8 711 3 1436 2 712 2 1437 2 
738 2 143 2 1352 2 967 2 1202 2 99 2 563 2 1228 2 130 2 185 2 371 2 88 2 632 2 1049 2 201 2 438 2 993 2 1421 4 306 2 918 6 1362 2 460 2 127 2 580 2 
738 2 143 2 1352 2 967 2 1202 2 99 2 563 2 1228 2 130 2 185 2 371 2 88 2 632 2 1049 2 201 2 438 2 993 2 1421 4 306 2 918 6 1362 2 460 2 127 2 580 2 
738 2 143 2 1352 2 967 2 1202 2 99 2 563 2 1228 2 130 2 185 2 371 2 88 2 632 2 1049 2 201 2 438 2 993 2 1421 4 306 2 918 6 1362 2 460 2 127 2 580 2 
83 2 875 2 1266 2 587 6 86 2 563 4 384 2 407 2 609 2 508 2 832 2 676 4 1049 3 227 4 746 2 812 2 438 2 294 2 1376 6 1209 3 138 4 912 2 298 2 1413 2 862 2 143 10 1157 2 1214 4 1159 3 185 2 1187 2 82 2 192 2 601 4 627 2 1169 3 125 4 460 3 1172 4 127 2 
83 2 875 2 1266 2 587 6 86 2 1130 2 563 4 384 2 407 2 609 2 508 2 832 2 676 4 1049 2 227 4 746 2 812 2 438 2 294 2 1376 4 1209 2 138 4 912 2 749 2 728 2 298 2 1413 2 862 2 143 10 1157 2 1214 4 1159 2 185 2 1187 2 82 2 192 2 601 4 627 2 1169 2 125 4 460 2 1172 4 127 2 
83 2 875 2 1266 2 587 6 86 2 1130 2 563 4 384 2 407 2 609 2 508 2 832 2 676 4 1049 2 227 4 746 2 812 2 438 2 294 2 1376 4 1209 2 138 4 912 2 749 2 728 2 298 2 1413 2 862 2 143 10 1157 2 1214 4 1159 2 185 2 1187 2 82 2 192 2 601 4 627 2 1169 2 125 4 460 2 1172 4 127 2 
83 2 875 2 1266 2 587 6 86 2 1130 2 563 4 384 2 407 2 609 2 508 2 832 2 676 4 1049 2 227 4 746 2 812 2 438 2 294 2 1376 4 1209 2 138 4 912 2 749 2 728 2 298 2 1413 2 862 2 143 10 1157 2 1214 4 1159 2 185 2 1187 2 82 2 192 2 601 4 627 2 1169 2 125 4 460 2 1172 4 127 2 
83 2 875 2 1266 2 587 6 86 2 1130 4 563 4 384 2 407 2 609 2 508 2 832 2 676 4 1049 2 227 4 746 2 812 2 438 2 294 2 1376 4 1209 2 138 4 912 2 749 4 728 4 298 2 1413 2 862 2 143 10 1157 2 1214 4 1159 2 185 2 1187 2 82 2 192 2 601 4 627 2 1169 2 125 4 460 2 1172 4 127 2 
1323 2 473 2 574 2 87 2 1079 2 914 2 
473 2 935 2 779 2 905 2 80 2 458 2 240 2 
108 1 309 2 879 2 741 1 405 2 563 8 7 2 939 2 1025 2 412 2 1223 2 1224 2 368 1 143 10 446 2 931 2 642 1 1035 1 149 2 785 2 1261 2 171 2 870 2 258 2 1170 2 461 2 
737 2 583 2 2 2 563 6 1130 2 608 2 609 6 508 2 832 6 1376 16 1407 4 294 6 413 2 680 4 912 6 749 2 613 2 728 3 143 6 1157 6 862 6 1214 4 703 2 600 2 952 2 152 2 627 6 1016 2 125 12 502 2 
1219 2 242 2 97 2 143 1 856 2 563 1 963 2 1011 2 358 2 676 2 1102 2 227 2 786 1 423 2 440 2 647 7 1286 4 1172 2 
1219 2 242 2 97 4 856 2 963 4 1011 2 358 2 676 2 1102 4 227 2 423 2 440 2 647 6 1286 4 1172 2 
1219 2 242 2 97 8 143 1 856 8 563 1 963 8 1011 2 358 2 676 2 1102 8 227 2 786 1 423 2 440 6 647 10 1286 4 1172 2 
1219 2 242 2 97 2 963 2 1011 2 358 2 676 2 1102 2 227 2 423 2 647 2 1286 2 1172 2 
975 1 463 4 4 2 715 2 6 4 1339 4 1244 2 199 16 908 8 466 8 910 4 202 2 723 6 555 103 988 2 17 10 1072 4 1073 32 732 2 1355 2 1253 4 211 2 733 2 916 4 373 10 820 2 1357 2 643 4 305 4 1081 10 646 24 997 4 479 30 478 2 484 4 1368 2 1267 6 33 8 563 70 311 16 135 2 653 8 923 2 566 27 1380 8 839 4 750 8 843 4 1274 6 143 78 659 14 930 4 496 4 932 2 1015 4 934 4 760 2 1390 4 239 4 1283 8 1197 2 1198 4 762 29 1017 4 324 4 581 4 1396 4 506 4 768 4 1399 8 769 4 408 24 328 4 859 4 68 2 1116 6 1121 4 518 4 1031 2 165 16 1216 10 784 4 172 4 1038 36 689 4 1218 4 263 2 1311 2 433 16 1131 4 349 4 1425 4 179 4 273 10 1426 4 529 10 275 2 182 4 95 6 1329 6 1327 24 536 4 102 10 538 4 621 2 706 11 189 44 545 4 544 4 628 2 
763 2 506 4 4 2 768 2 6 2 1339 2 1399 6 979 2 553 2 723 2 1116 2 555 40 988 2 1121 2 17 2 989 2 1253 2 1031 2 733 2 820 2 868 2 305 4 996 2 1306 2 646 8 172 4 1038 14 478 2 479 6 689 4 1218 4 1267 4 1311 2 563 26 179 2 273 6 311 14 1426 4 529 6 275 2 566 12 923 2 95 2 143 28 1329 2 102 6 1189 2 706 2 849 2 932 2 1015 2 453 2 189 14 760 2 239 4 321 2 455 10 762 12 628 2 
1143 4 463 4 362 4 4 5 1339 10 6 4 1244 2 979 2 553 2 723 14 1248 2 555 248 1068 24 367 90 988 2 17 18 989 2 732 2 1253 6 640 8 916 4 472 18 820 8 1357 2 305 6 643 6 996 4 646 124 997 6 1360 6 479 34 478 8 380 24 484 6 1267 8 563 134 1373 2 42 10 311 28 923 2 566 58 839 6 1380 24 750 50 1182 10 843 4 143 150 1274 5 844 26 659 12 496 6 846 8 1186 6 1189 2 932 8 849 4 1015 10 934 6 760 4 1390 6 239 6 321 8 1283 42 1198 6 762 58 1017 6 581 6 1114 10 506 8 768 10 1399 16 769 6 408 84 328 4 859 4 330 4 70 4 1116 10 1121 4 518 4 946 2 596 24 597 4 1031 2 251 90 165 42 868 2 1034 4 784 6 1306 2 172 6 1038 88 425 24 689 6 1218 6 263 2 1042 4 1311 2 176 8 349 6 1425 4 179 10 692 26 1426 6 273 16 529 16 275 8 696 2 182 6 95 36 1329 14 1327 92 536 4 102 16 538 4 621 4 706 16 451 4 189 112 453 11 455 22 709 4 545 4 807 12 290 2 546 24 628 2 
763 2 244 2 0 4 1114 2 4 2 768 2 715 2 1339 2 245 2 364 2 247 2 553 2 202 2 1406 2 723 2 1116 2 725 2 555 47 1068 2 1151 2 988 2 1028 2 17 2 1122 4 730 2 639 2 596 2 597 2 1253 2 1031 2 733 2 1216 2 373 2 304 2 820 2 305 2 1420 2 1081 2 172 2 646 6 827 2 1038 20 1087 2 425 2 478 2 377 2 689 2 1218 2 1366 2 1043 2 1267 6 429 2 1311 2 85 2 563 44 1220 2 179 2 42 2 833 2 311 36 133 2 273 4 1426 2 529 4 695 2 1092 6 275 2 90 2 181 2 1379 2 566 5 923 2 697 2 1006 2 95 2 1182 2 143 46 1329 2 236 4 846 2 803 2 102 4 1188 2 706 2 932 2 1015 2 189 20 359 4 239 2 762 5 628 2 
569 2 

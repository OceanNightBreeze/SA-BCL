#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 276 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 198 318 182 117 347 850 1013 652 234 586 375 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 888 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 154 870 149 581 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 62 435 1042 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_22()Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(FF)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_163()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:hashCode()I
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_61()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_2_36(I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual; | RETURN | 1561 | return null
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_18(I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_77()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_12()Z
daikon.diff.Node:Node()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments; | ASSIGN | 49480 | = null
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_133()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_122()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:negate(I)I
daikon.Quant:gt(II)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.ModBitTracker:split(I)I
daikon.Quant:isReverse([I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:min([I)I | CONSTANT | 860 | 0 -> -1
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.PptSlice1:num_samples()I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexGT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eltwiseLT([I)Z
daikon.Debug:logOn()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Debug:logDetail()Z
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_105()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 4209 | return null
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:pow(II)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.ModBitTracker:num_sets()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:FillBuff()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_67()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_2_35(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3_25()Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_18()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_125()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3_10()Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:subsetOf([D[F)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_107()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:concat([I[I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:noDups([I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_ntk()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_87()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_85()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_3R_148()Z
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3R_162()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_115()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:sign(I)I
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:eltsLTE([II)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3_4()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:passes()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice0:arity()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Ppt:Ppt()V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String; | CONDITION | 3378 | if (x) -> if (!x)
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:lt(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:ne(II)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([J[J)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_135()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_vars()I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_27()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
515 4 507 2 238 2 413 2 1046 2 275 2 213 2 699 2 11 2 
83 2 741 2 138 6 638 2 249 2 307 6 802 2 1007 2 693 2 823 6 37 2 
592 4 208 2 561 2 275 2 783 6 69 2 1070 2 664 2 765 4 282 6 668 6 251 6 699 2 
275 6 4 4 743 16 1020 30 306 10 748 8 1053 2 50 10 1056 8 1058 2 1097 2 788 2 494 2 130 4 319 10 135 8 504 12 295 10 265 26 578 16 34 4 323 16 1004 2 882 4 914 8 553 10 982 2 699 6 370 6 271 6 
1080 6 1009 4 
1062 2 
333 2 743 2 306 2 1020 6 526 2 50 2 567 2 1056 2 319 2 906 2 504 2 137 2 761 2 295 2 265 4 34 2 578 2 323 2 171 2 1072 2 553 4 849 2 271 2 
1017 4 743 8 1020 14 306 4 601 1 1052 2 50 4 492 6 1056 1 252 6 319 4 504 5 295 4 265 12 578 8 323 8 882 2 301 4 39 2 
813 4 595 4 857 2 924 2 742 4 277 2 745 2 49 4 965 4 419 4 649 4 99 2 899 4 790 2 189 2 618 10 226 2 501 4 22 2 538 4 1110 62 108 4 907 2 233 4 1067 2 392 2 74 6 803 2 438 8 477 2 772 14 774 10 808 2 846 2 919 2 980 2 481 2 244 2 76 4 984 2 
530 2 1062 2 936 2 909 2 1114 2 844 2 480 2 953 2 777 2 146 2 
276 2 
371 2 1017 4 275 4 743 29 306 14 1020 47 601 2 50 14 492 6 1056 17 651 3 788 2 252 6 18 6 828 1 750 4 317 4 1064 4 319 14 135 6 504 19 295 14 1068 2 265 43 34 2 578 29 323 29 476 6 551 2 301 4 886 4 553 6 554 2 512 8 367 2 699 4 631 3 370 4 271 4 
74 2 438 2 392 2 
793 2 1063 2 939 2 520 2 818 2 30 2 767 10 1008 2 217 2 771 2 299 2 732 2 311 22 497 2 
150 2 401 1 559 2 987 2 275 30 410 2 565 2 863 2 417 3 283 2 710 1 995 2 866 1 287 2 159 12 571 2 572 19 871 4 720 2 24 2 165 2 878 2 167 1 35 3 881 2 36 2 726 6 727 2 172 2 885 4 1012 2 588 4 446 1 302 2 1015 2 445 1 889 2 305 2 890 2 600 2 607 1 609 2 613 2 60 2 316 24 191 2 624 2 1034 1 1036 3 472 2 764 1 766 1 473 2 768 2 325 1 201 3 918 2 327 2 483 2 78 2 920 1 922 12 925 2 640 6 92 2 340 1 931 2 1054 3 786 1 933 6 791 12 795 6 1066 2 798 2 942 3 943 1 111 2 237 2 357 3 1071 2 507 2 806 2 951 2 114 2 364 2 116 2 514 2 369 2 676 1 1085 2 122 2 960 2 817 2 962 2 380 2 682 2 964 19 382 5 383 4 532 1 687 12 1106 2 969 3 129 2 690 3 832 2 139 2 977 2 550 2 268 4 843 25 699 32 
776 2 
55 2 699 2 
1084 2 5 2 699 4 
556 2 272 4 273 2 854 12 856 2 2 26 859 2 858 2 8 2 566 2 281 2 864 2 284 2 570 2 867 4 20 4 869 2 290 2 874 2 25 2 294 2 574 2 576 2 880 2 583 2 884 2 38 2 585 2 586 2 587 6 589 2 42 2 303 2 594 2 46 2 48 54 605 2 57 2 61 4 63 4 318 6 622 6 65 4 67 2 320 2 908 54 322 2 70 2 71 2 72 158 626 4 73 2 627 14 915 4 630 2 80 2 328 2 632 30 329 2 332 2 636 4 637 4 85 24 86 4 926 2 336 4 927 2 88 2 337 2 928 12 338 2 91 40 94 2 643 2 646 52 934 2 652 2 346 2 935 54 345 2 347 2 938 2 349 2 657 2 659 2 107 2 353 2 354 2 944 6 665 2 667 48 666 4 947 54 948 2 949 10 112 2 669 18 671 4 115 54 672 32 117 2 674 30 675 10 120 2 121 2 678 4 375 2 377 18 680 2 681 2 381 2 684 2 683 10 124 12 966 2 686 10 386 18 968 8 972 2 132 16 388 54 389 2 691 12 692 2 975 56 136 2 976 2 395 2 394 4 694 2 144 2 696 2 979 2 396 2 981 2 983 2 700 2 701 4 151 2 406 2 988 2 989 2 990 2 991 2 411 2 708 2 711 2 421 2 156 2 423 2 716 10 424 2 425 2 161 10 426 2 998 26 164 2 722 20 1001 2 430 2 170 2 725 2 173 10 441 2 1010 2 1013 2 444 2 737 12 739 2 1018 2 740 26 449 2 451 2 744 2 747 2 182 4 185 40 1024 2 458 2 460 2 461 6 462 2 463 2 464 2 465 2 190 2 752 32 755 4 466 26 1031 12 192 4 193 2 757 2 758 2 760 2 196 4 475 4 198 2 769 2 1039 2 203 2 778 2 1041 2 204 2 780 2 205 2 1043 54 781 2 206 4 485 4 484 4 486 2 209 12 488 2 489 4 1050 4 211 4 215 2 784 2 219 2 220 26 218 54 221 2 493 2 496 2 495 4 1061 12 498 2 225 12 502 2 503 54 1065 4 230 32 232 2 797 2 234 2 799 4 235 2 505 40 240 2 804 2 241 4 509 2 1074 2 510 4 1073 14 242 4 810 2 811 4 1076 4 516 2 1078 48 519 2 1083 2 1082 2 522 2 523 158 815 2 1086 6 528 2 250 2 821 2 533 158 1098 2 1096 2 1099 12 534 2 1103 2 1104 4 254 2 827 2 1105 2 1109 2 539 2 540 2 541 54 261 2 542 2 544 2 546 2 266 54 1116 26 1118 12 267 266 269 4 845 2 552 4 270 4 1121 2 848 2 850 2 
474 1 403 2 531 2 1005 2 
403 2 807 2 
438 2 608 2 779 2 253 2 
593 2 438 2 608 2 1049 2 779 2 253 2 
130 2 403 2 438 2 468 2 779 2 555 2 
611 2 705 2 
130 2 438 2 615 2 779 2 
391 2 1033 2 
872 2 950 2 
820 2 231 2 
245 2 837 2 
245 2 950 2 940 2 
245 2 950 2 1037 2 
245 2 950 2 368 2 
245 2 51 2 950 2 
1081 6 134 2 877 2 438 2 913 6 842 2 366 2 779 2 
956 2 598 2 
130 2 910 2 593 2 403 2 438 2 779 2 555 2 
403 2 312 2 555 2 
403 2 555 2 715 2 
956 2 531 2 256 2 
403 2 555 2 
956 2 128 2 
403 2 847 2 
956 2 531 2 379 2 
820 2 531 2 195 2 
245 2 531 2 703 2 
531 2 391 2 459 2 
531 2 950 2 101 2 
888 2 
403 2 548 2 
820 2 409 2 
245 2 629 2 
723 2 391 2 
841 2 950 2 
956 2 40 2 
812 2 950 2 
391 2 452 2 
245 2 731 2 
820 2 264 2 
956 2 447 2 531 2 379 2 
956 2 447 2 531 2 1117 2 379 2 
956 2 531 2 482 2 
956 2 531 2 95 2 
90 2 308 2 309 2 648 2 
971 2 103 2 904 2 152 2 259 2 491 2 9 2 247 2 12 4 642 2 15 2 993 4 865 2 440 2 311 6 698 2 900 2 590 2 
531 2 405 2 
364 2 
401 2 987 2 275 26 410 2 992 2 862 2 863 2 283 2 422 4 287 2 871 4 24 2 29 2 878 2 433 2 726 2 727 2 172 2 885 4 174 2 588 4 47 2 609 2 610 4 613 2 897 2 313 2 316 6 191 2 472 2 768 2 911 2 917 2 327 2 77 2 82 2 1047 2 925 2 334 2 640 2 92 6 340 2 645 2 222 2 933 6 791 6 795 4 229 4 1066 2 661 2 798 8 506 2 945 2 507 2 951 2 114 2 1079 2 1085 2 960 2 817 2 527 2 380 2 383 4 822 2 1094 2 385 2 825 2 974 2 258 2 139 2 545 2 977 2 843 4 699 26 
401 2 987 2 275 26 410 2 992 2 862 2 863 2 283 2 422 4 287 2 717 2 871 4 720 2 24 2 29 2 878 2 433 2 726 2 727 2 172 2 885 4 174 2 588 4 47 2 890 2 310 2 609 2 610 4 613 2 897 2 313 2 316 6 191 2 472 2 768 2 911 2 917 2 327 2 77 2 82 2 925 2 334 2 640 2 92 6 340 2 645 2 933 6 791 6 795 6 229 4 1066 2 661 2 798 8 506 2 945 2 507 2 951 2 114 2 1079 2 524 2 1085 2 960 2 817 2 527 2 380 2 383 4 822 2 1094 2 385 2 825 2 1108 2 974 2 139 2 545 2 977 2 843 4 699 26 
178 2 
97 2 513 2 
921 2 81 4 83 4 275 6 925 2 279 2 707 2 418 2 644 2 994 2 933 4 158 8 287 2 19 2 654 2 348 2 162 4 871 2 227 4 163 2 352 4 721 2 1066 2 1003 2 236 10 1007 2 297 2 172 2 809 4 443 2 734 2 955 2 588 2 591 2 517 2 958 8 175 2 741 4 249 2 307 6 603 2 1092 2 823 6 613 2 59 2 689 2 536 2 970 4 829 2 257 2 831 2 623 2 138 6 139 2 628 2 977 2 75 2 1115 2 699 12 851 2 
921 2 81 4 83 4 275 6 925 2 279 2 707 2 418 2 644 2 994 2 344 2 933 4 158 8 287 2 19 2 654 2 21 4 162 4 871 2 227 4 163 2 352 4 721 2 1066 2 1003 2 236 10 1007 2 297 2 172 2 37 2 809 4 443 2 734 2 955 2 588 2 591 2 517 2 958 8 741 4 891 2 249 2 307 6 603 2 1092 2 823 8 613 2 59 2 689 2 536 2 970 4 829 2 257 2 831 2 623 2 138 8 139 2 628 2 977 2 75 2 1115 2 699 12 851 2 
83 2 162 4 257 2 623 2 227 2 163 2 741 2 1003 2 707 2 307 2 628 2 1092 2 75 2 418 2 823 2 994 2 809 4 955 2 
921 2 81 4 83 4 275 6 925 2 279 2 707 2 418 2 644 2 994 2 933 4 158 4 287 2 19 2 654 2 348 2 162 4 871 2 227 4 163 2 352 4 721 2 1066 2 1003 2 236 6 1007 2 297 2 172 2 37 2 809 4 443 2 734 2 955 2 588 2 591 2 517 2 958 4 175 2 741 4 307 4 603 2 1092 2 823 6 613 2 59 2 689 2 536 2 970 4 829 2 257 2 831 2 623 2 138 6 139 2 628 2 977 2 75 2 1115 2 699 12 851 2 
921 2 81 4 83 4 275 6 925 2 279 2 707 2 418 2 644 2 994 2 933 4 158 4 287 2 19 2 654 2 348 2 162 4 871 2 227 4 163 2 352 4 721 2 1066 2 1003 2 236 6 1007 2 297 2 172 2 809 4 443 2 734 2 955 2 588 2 591 2 517 2 958 4 175 2 741 4 307 6 603 2 1092 2 823 4 613 2 59 2 689 2 536 2 970 4 829 2 257 2 831 2 623 2 138 6 139 2 628 2 977 2 75 2 693 2 1115 2 699 12 851 2 
921 2 81 4 83 4 275 6 925 2 279 2 707 2 418 2 644 2 994 2 933 4 158 4 287 2 19 2 654 2 348 2 162 4 871 2 227 4 163 2 352 4 721 2 1066 2 1003 2 236 6 1007 2 297 2 172 2 809 4 443 2 734 2 955 2 588 2 591 2 517 2 958 8 175 2 741 4 249 2 307 6 603 2 1092 2 823 6 613 2 59 2 689 2 536 2 970 4 829 2 257 2 831 2 623 2 138 6 139 2 628 2 977 2 75 2 1115 2 699 12 851 2 
921 2 81 4 83 4 275 6 925 2 279 2 707 2 418 2 644 2 994 2 933 4 158 8 287 2 19 2 654 2 348 2 162 4 871 2 227 4 163 2 352 4 721 2 1066 2 1003 2 236 10 1007 2 297 2 172 2 809 4 443 2 734 2 955 2 588 2 591 2 517 2 958 8 175 2 741 4 249 2 307 8 603 2 1092 2 823 6 613 2 59 2 689 2 536 2 970 4 829 2 257 2 831 2 623 2 138 8 139 2 628 2 977 2 75 2 693 2 1115 2 699 12 851 2 
921 2 81 4 83 4 275 6 925 2 279 2 707 2 418 2 644 2 994 2 933 4 158 8 287 2 19 2 654 2 348 2 162 4 871 2 227 4 163 2 352 4 721 2 1066 2 1003 2 236 10 1007 2 297 2 172 2 809 4 443 2 734 2 955 2 588 2 591 2 517 2 958 8 175 2 741 4 249 2 307 6 603 2 1092 2 823 6 613 2 59 2 689 2 536 2 970 4 829 2 257 2 831 2 623 2 138 6 139 2 628 2 977 2 75 2 1115 2 699 12 851 2 
558 2 853 1 275 24 3 2 5 6 279 2 863 2 283 2 287 2 19 2 23 6 871 4 24 2 878 2 879 2 580 2 297 2 885 4 588 4 591 2 597 2 890 2 307 8 603 2 894 2 606 6 609 2 55 6 54 6 896 1 613 2 897 2 59 2 901 6 316 8 903 2 902 2 623 2 75 2 628 2 327 2 921 2 81 6 83 4 82 2 633 2 925 2 635 2 335 2 87 6 89 1 640 2 339 1 92 6 644 2 650 6 933 6 654 2 352 8 663 1 361 6 951 2 114 2 955 2 958 2 373 7 374 2 960 2 378 10 380 2 383 4 385 2 689 2 970 4 974 4 138 12 139 2 977 2 693 4 695 2 145 2 699 46 399 2 148 2 986 2 404 8 987 2 407 1 410 12 707 2 415 4 709 1 418 2 994 2 719 2 162 4 997 7 720 2 1000 2 999 6 163 2 721 2 1003 2 1002 6 434 2 726 2 727 2 1007 4 437 2 172 2 439 2 733 2 443 2 734 2 175 2 741 4 177 6 180 1 1027 2 1028 1 751 6 191 2 756 2 472 2 768 2 776 6 1051 2 789 2 791 6 795 6 227 4 229 4 1066 2 798 4 236 2 506 2 507 2 243 2 809 4 517 2 518 6 1079 2 1085 2 817 2 1090 4 1092 2 823 4 1101 2 536 4 829 4 831 2 257 2 833 2 836 6 1112 2 1115 2 843 2 851 2 1123 2 
400 2 558 2 986 2 404 8 987 2 275 26 3 2 5 6 279 2 410 12 707 2 415 4 863 4 418 2 283 2 994 2 287 2 19 2 719 2 162 4 23 6 871 4 999 6 1000 2 24 2 720 2 163 2 721 2 28 2 878 2 1002 6 879 2 1003 2 580 2 434 2 726 2 1007 4 727 2 297 2 437 2 172 2 439 2 733 2 885 4 734 2 443 2 588 4 591 2 175 2 597 2 741 4 177 6 890 2 603 2 307 8 606 6 894 2 610 2 54 6 55 6 609 2 897 2 613 2 1027 2 59 2 901 6 316 8 902 2 903 2 751 6 756 2 623 2 191 4 472 2 768 2 628 2 75 2 327 2 776 6 81 6 921 2 82 2 83 4 633 2 635 2 925 2 335 2 87 6 1051 2 640 2 92 6 644 2 650 6 933 6 789 2 791 6 654 2 227 4 795 6 229 4 352 8 1066 2 798 8 236 2 506 2 507 2 361 6 243 2 114 2 951 4 809 4 955 2 517 2 518 6 1079 2 958 6 374 2 1085 2 960 2 378 10 817 2 380 2 249 4 1090 4 1092 2 383 4 823 8 385 2 1101 2 689 2 536 4 970 4 829 4 257 2 831 2 974 4 833 2 836 6 1112 2 138 12 139 2 977 2 1115 2 695 2 843 2 145 2 699 48 148 2 1123 2 399 2 851 2 
400 2 558 2 986 2 404 8 987 2 275 26 3 2 5 6 279 2 410 12 707 2 415 4 863 4 418 2 283 2 994 2 158 4 287 2 19 2 719 2 162 4 23 6 871 4 999 6 1000 2 24 2 720 2 163 2 721 2 28 2 878 2 1002 6 879 2 1003 2 580 2 434 2 726 2 1007 4 727 2 297 2 437 2 172 2 439 2 733 2 885 4 734 2 443 2 588 4 591 2 175 2 597 2 741 4 177 6 890 2 603 2 307 8 606 6 894 2 610 2 54 6 55 6 609 2 897 2 613 2 1027 2 59 2 901 6 316 8 902 2 903 2 751 6 756 2 623 2 191 4 472 2 768 2 628 2 75 2 327 2 776 6 81 6 921 2 82 2 83 4 633 2 635 2 925 2 335 2 87 6 1051 2 640 2 92 6 644 2 650 6 933 6 789 2 791 6 654 2 227 4 795 6 229 4 352 8 1066 2 798 8 236 6 506 2 507 2 361 6 243 2 951 4 114 2 809 4 955 2 517 2 518 6 1079 2 958 6 374 2 1085 2 960 2 378 10 817 2 249 4 380 2 1090 4 1092 2 383 4 823 8 385 2 1101 2 689 2 536 4 970 4 829 4 257 2 831 2 974 4 833 2 836 6 1112 2 138 12 139 2 977 2 1115 2 695 2 843 2 145 2 699 48 148 2 1123 2 399 2 851 2 
0 6 558 2 275 24 3 2 5 12 279 2 863 4 283 2 287 2 19 2 23 6 871 4 24 2 28 2 878 2 879 2 580 2 297 2 37 2 885 4 588 4 591 2 597 2 890 2 307 10 603 2 894 2 606 6 610 2 609 2 55 12 54 12 613 2 897 2 59 2 901 6 316 12 903 2 902 2 64 2 623 2 75 2 628 2 326 2 327 2 921 2 81 6 82 2 83 4 633 2 925 2 635 2 335 2 87 6 640 4 641 2 92 8 644 2 650 6 933 6 654 2 104 2 352 8 358 6 361 12 114 2 951 4 955 2 958 6 374 2 960 2 961 2 378 8 380 2 383 4 385 4 689 2 970 4 131 6 974 4 390 2 138 16 139 2 977 2 693 2 695 2 145 2 699 52 399 2 148 2 400 2 986 2 404 8 987 2 410 10 707 2 415 4 418 2 994 2 158 4 719 2 162 4 720 2 1000 2 999 6 163 2 721 2 1003 2 1002 6 434 2 726 4 727 2 1007 4 1006 6 437 2 172 2 439 2 733 2 443 2 734 2 175 2 741 4 177 6 1022 6 1027 2 751 12 191 4 756 2 472 2 768 2 199 6 775 2 776 12 490 6 789 2 791 8 795 6 227 4 229 6 1066 2 798 10 236 6 506 4 507 2 243 2 809 4 517 2 518 6 521 2 1079 2 1085 2 817 2 249 4 529 6 1090 4 1092 2 823 10 1101 2 826 6 536 4 829 4 831 2 257 2 833 2 836 6 1112 2 1115 2 843 4 851 2 1123 2 
591 2 81 2 921 2 83 4 175 2 958 6 741 4 279 2 249 2 707 2 603 2 307 6 1092 2 823 6 994 2 158 4 59 2 654 2 689 2 970 2 162 2 163 2 721 2 352 2 138 4 236 4 1003 2 1007 2 75 2 809 2 734 2 443 2 699 4 955 2 851 2 
987 2 275 24 563 2 279 2 410 4 707 2 283 2 994 2 157 2 287 2 162 2 871 4 720 2 24 2 163 2 721 2 878 2 1003 2 726 3 1007 2 727 2 172 2 885 4 443 2 734 2 588 4 591 2 175 2 741 4 890 2 600 2 603 2 307 6 609 2 613 2 897 2 59 2 316 8 472 2 768 2 75 2 327 2 81 2 921 2 83 4 82 2 925 2 1051 2 640 3 92 6 93 2 933 6 791 6 654 2 795 6 352 2 229 4 1066 2 236 2 507 2 801 2 114 2 364 2 809 2 954 3 955 2 369 2 958 6 1085 2 960 2 817 2 378 2 962 2 249 2 380 2 383 4 1092 2 823 6 689 2 970 2 831 2 974 2 138 4 139 2 977 2 1119 2 843 3 699 28 851 2 
721 2 443 2 33 2 
721 2 443 2 33 2 
1 2 987 2 275 16 279 2 410 4 415 2 863 4 283 2 287 2 158 4 288 2 162 2 871 4 291 4 720 2 24 2 163 2 721 6 33 2 879 2 575 2 296 2 169 4 727 2 1007 4 297 2 172 2 300 2 37 4 885 4 584 2 443 4 588 4 596 2 741 4 177 2 453 2 890 2 307 12 603 2 609 2 613 2 897 2 620 2 316 2 756 2 191 4 472 2 768 2 628 2 75 4 479 2 327 2 1044 2 81 4 82 2 83 4 925 2 335 2 92 2 933 6 791 2 351 2 227 4 795 6 352 4 1066 2 798 4 236 6 507 2 951 4 114 2 809 2 955 2 517 2 957 2 1079 4 958 6 1085 2 960 2 378 2 817 2 527 4 380 2 249 4 963 2 1090 2 383 4 823 12 127 2 536 2 970 2 829 4 257 2 974 6 834 2 138 16 139 2 978 2 977 2 693 4 1115 2 843 2 699 24 
275 2 925 2 3 2 177 2 410 2 378 2 575 2 454 2 963 2 1090 2 978 2 416 2 418 2 1057 2 243 2 699 4 513 2 
1 2 987 2 275 16 279 2 410 2 415 2 863 4 283 2 287 2 158 4 19 2 288 2 162 2 871 4 291 4 720 2 24 2 163 2 721 6 33 2 575 2 879 2 296 2 169 4 727 2 1007 4 297 2 172 2 300 2 37 4 885 4 584 4 443 4 588 4 741 4 177 2 453 2 890 2 307 12 603 2 609 2 613 2 897 2 620 2 316 2 756 2 191 4 472 2 768 2 628 2 75 4 327 2 81 4 82 2 83 4 925 2 335 2 639 2 92 2 216 2 785 2 933 6 791 2 227 4 795 6 352 4 1066 2 798 4 236 6 507 2 113 2 951 4 114 2 809 2 955 2 517 2 957 2 1079 4 958 6 1085 2 960 2 817 2 527 4 380 2 249 4 963 2 383 4 823 12 127 2 535 2 536 4 970 2 829 4 257 2 974 6 834 2 138 16 139 2 978 2 977 2 693 4 1115 2 843 4 699 24 
1 2 987 2 275 16 279 2 410 4 415 2 863 4 283 2 287 2 158 4 19 2 288 2 162 2 871 4 291 4 720 2 24 2 163 2 721 6 33 2 879 2 575 2 296 2 724 2 169 4 727 2 1007 4 297 2 172 2 300 2 37 4 885 4 584 2 443 4 588 4 741 4 177 2 453 2 890 2 604 2 307 12 603 2 609 2 613 2 897 2 620 2 316 2 756 2 191 4 472 2 768 2 628 2 75 4 327 2 81 4 82 2 83 4 210 2 925 2 335 2 92 2 932 2 933 6 791 2 227 4 795 6 352 4 1066 2 798 4 236 6 507 2 362 2 951 4 114 2 809 2 955 2 517 2 957 2 1079 4 958 6 1085 2 960 2 378 2 817 2 527 4 380 2 249 4 963 2 1090 2 383 4 823 12 127 2 536 4 970 2 829 4 257 2 974 6 834 2 138 16 139 2 978 2 977 2 693 4 1115 2 843 2 699 24 
987 2 562 2 275 20 7 2 564 2 153 6 280 2 410 2 154 2 861 2 283 2 713 2 16 2 714 2 287 2 870 2 871 4 24 2 1000 2 295 2 31 2 878 2 32 2 578 2 581 2 726 2 727 2 437 2 172 2 885 2 1011 2 1014 2 588 4 1017 2 45 2 743 2 306 2 1020 6 50 2 894 2 609 2 613 2 897 2 316 8 319 2 1035 2 472 2 323 2 916 2 1040 2 1045 2 84 2 330 2 925 2 929 4 640 2 92 6 930 2 223 2 933 6 224 2 791 6 500 1 656 1 795 2 229 4 109 2 1066 2 946 2 507 2 508 2 360 2 1077 2 1085 2 376 2 960 2 817 2 383 2 1100 1 252 4 384 2 1101 2 974 2 139 2 265 4 838 2 140 2 977 2 1120 2 843 2 699 26 149 2 399 2 1123 2 
1016 2 487 2 275 2 640 3 92 2 98 2 791 2 102 2 316 2 1029 2 835 2 229 2 878 2 168 2 506 6 1038 4 726 3 200 2 843 3 365 3 952 2 887 2 699 2 397 2 
1016 2 487 2 275 2 640 2 92 2 98 2 791 2 102 2 316 2 1029 2 835 2 229 2 878 2 168 2 506 6 1038 4 726 2 200 2 843 2 365 2 952 2 887 2 699 2 397 2 
1016 2 487 2 275 2 640 2 92 2 98 2 791 2 102 2 316 2 1029 2 835 2 229 2 878 2 168 2 506 6 1038 4 726 2 200 2 843 2 365 2 952 2 887 2 699 2 397 2 
922 2 275 4 14 2 1059 4 655 2 658 4 228 2 295 2 878 2 578 2 726 3 436 2 805 4 370 2 448 3 44 3 743 2 1020 5 306 2 1023 2 50 2 1091 2 685 4 895 2 612 2 687 2 316 2 753 6 319 2 835 2 135 4 759 2 625 3 265 4 323 2 839 2 843 3 773 2 1122 4 699 10 
922 2 44 2 448 2 275 4 743 2 306 2 1020 4 1091 2 50 2 1023 2 685 4 895 2 14 2 1056 2 1059 4 612 2 788 2 687 2 655 2 316 2 753 6 658 4 319 2 228 2 135 4 835 2 759 2 504 2 295 2 625 2 878 2 265 4 578 2 323 2 436 2 726 2 839 2 805 4 773 2 843 2 1122 4 699 10 370 2 
922 2 44 2 448 2 275 4 743 2 306 2 1020 4 1091 2 50 2 1023 2 685 4 895 2 14 2 1056 2 1059 4 612 2 788 2 687 2 655 2 316 2 753 6 658 4 319 2 228 2 135 4 835 2 759 2 504 2 295 2 625 2 878 2 265 4 578 2 323 2 436 2 726 2 839 2 805 4 773 2 843 2 1122 4 699 10 370 2 
922 2 44 2 448 2 275 4 743 2 306 2 1020 4 1091 2 50 2 1023 2 685 4 895 2 14 2 1056 2 1059 4 612 2 788 2 687 2 655 2 316 2 753 6 658 4 319 2 228 2 135 4 835 2 759 2 504 2 295 2 625 2 878 2 265 4 578 2 323 2 436 2 726 2 839 2 805 4 773 2 843 2 1122 4 699 10 370 2 
922 2 44 2 448 2 275 4 743 2 306 2 1020 4 1091 2 50 2 1023 2 685 4 895 2 14 2 1056 4 1059 4 612 2 788 4 687 2 655 2 316 2 753 6 658 4 319 2 228 2 135 4 835 2 759 2 504 4 295 2 625 2 878 2 265 4 578 2 323 2 436 2 726 2 839 2 805 4 773 2 843 2 1122 4 699 10 370 2 
621 2 470 2 1088 2 945 2 125 2 1026 2 616 2 
830 2 455 2 1095 2 1111 2 1026 2 41 2 
207 2 924 1 275 8 679 1 408 2 52 1 54 2 647 2 824 2 499 2 617 2 255 2 754 2 796 2 876 2 139 2 1069 2 579 2 239 2 142 1 141 2 324 2 481 1 699 10 736 2 147 2 
1017 2 84 2 275 6 743 6 1020 15 306 6 1021 2 181 2 50 6 414 2 1056 5 788 3 252 4 18 4 750 2 319 6 135 4 504 5 295 6 260 2 265 12 578 6 323 6 393 2 508 2 140 2 202 2 512 2 554 1 367 1 699 6 370 2 
387 2 852 2 118 1 537 7 372 2 275 1 1032 2 321 2 68 2 263 2 706 4 763 2 805 2 1059 2 420 2 1122 2 699 1 314 2 
387 2 852 2 537 6 372 2 1032 2 321 4 68 2 263 4 706 4 763 2 805 2 1059 2 420 2 1122 2 314 4 
387 2 852 2 118 1 537 10 372 6 275 1 1032 8 321 8 68 2 263 8 706 4 763 2 805 2 1059 2 420 2 1122 2 699 1 314 8 
387 2 852 2 537 2 321 2 68 2 263 2 706 2 763 2 805 2 1059 2 420 2 1122 2 314 2 
557 1 275 8 278 1 155 2 283 2 285 2 286 1 653 1 794 2 720 2 795 4 26 1 577 2 435 2 727 2 885 2 450 2 890 2 383 2 898 2 56 2 58 1 62 2 472 2 197 1 1042 2 699 8 
702 2 557 2 275 44 274 6 331 4 782 2 6 2 278 2 212 2 10 2 214 2 341 2 342 2 13 2 283 2 712 2 568 2 787 2 17 2 1060 2 996 6 289 2 937 2 718 2 792 2 427 2 795 42 428 2 875 2 106 4 292 2 660 2 293 2 166 2 662 2 941 4 110 2 431 4 355 2 432 2 356 2 435 2 359 2 727 2 582 2 728 2 729 2 885 20 442 2 670 2 363 2 511 4 735 2 43 2 176 2 677 2 450 2 959 2 525 2 248 2 599 2 746 6 1089 2 183 4 383 20 1093 2 457 2 126 2 56 38 186 2 614 2 188 2 688 4 619 2 62 2 1107 2 973 2 133 2 467 4 66 2 1113 2 471 2 472 2 543 2 547 2 770 2 143 2 912 2 1042 2 699 46 
855 4 402 4 985 4 560 32 275 70 274 6 278 10 860 4 704 8 412 2 283 6 285 30 712 10 568 2 569 2 996 24 718 2 868 24 160 4 873 4 427 4 720 30 428 10 429 2 27 4 293 10 573 4 432 6 435 2 727 6 298 4 729 2 883 8 730 4 885 44 738 4 304 4 1019 4 176 4 450 2 890 28 179 16 892 2 602 4 893 8 184 4 456 4 749 4 53 2 56 14 614 10 187 4 58 8 315 4 62 2 1030 14 905 8 194 8 469 2 762 4 472 2 770 4 912 4 478 4 1042 2 79 4 923 16 331 10 634 4 782 4 341 4 342 4 96 4 343 2 787 2 653 5 100 4 350 2 795 104 105 4 106 2 660 2 662 2 511 10 363 4 1075 4 246 4 673 4 119 2 677 2 814 8 816 4 123 4 819 4 383 36 1093 4 967 16 1102 8 688 10 262 2 547 4 143 6 549 4 840 24 697 2 699 78 398 4 
557 2 1048 2 274 4 275 26 331 6 782 2 278 2 155 2 341 2 342 4 1055 2 283 2 285 6 568 2 787 2 286 2 996 8 718 2 794 10 427 4 720 12 795 40 106 2 660 2 166 2 577 2 432 2 800 2 435 2 727 2 298 2 729 2 885 14 511 6 363 4 176 2 1019 4 450 2 248 2 890 12 1087 2 383 14 1093 4 898 2 56 14 614 2 58 6 688 6 62 2 262 2 472 2 197 2 547 4 143 2 770 2 912 4 1042 2 699 28 398 2 
1025 2 

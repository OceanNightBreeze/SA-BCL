#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 76 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 285 636 124 480 75 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.ClassCastException (89,620) (89,620) (89,620) (89,620) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 69 633 113 599 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 639 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 639 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 639 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 639 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:noDups([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ProglangType:isArray()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptName:isEnterPoint()Z
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Debug:logOn()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60655 | = null
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.PptSlice1:num_samples()I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName:hashCode()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:modulus([I)[I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isIntegral()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:new_ppt()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isScalar()Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eq(DD)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:lexGT([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eq(II)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:intern([D)[D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.Invariant:getConfidence()D
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:readChar()C
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:sign(I)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:slice([III)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:lte(II)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.MathMDE:pow_fast(II)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:subsetOf([S[S)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([J[J)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptSlice0:arity()I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | STATEMENT | 972 | stmt -> ;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:memberOf(I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.ProglangType:baseIsScalar()Z
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:sum([[D)D
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:lexLT([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariant:justified()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:negate(I)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltsLT([II)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseLT([I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_ntk()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.RootNode:RootNode()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltsGT([II)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsGTE([II)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.MathMDE:pow(II)I
daikon.PptSlice1:arity()I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:ReadByte()C
daikon.diff.InvMap:InvMap()V
daikon.ModBitTracker:num_vars()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | CONDITION | 280460 | if (x) -> if (!x)
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:subsetOf([D[D)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 1551 | = null
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:ne(II)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logDetail()Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([I)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Debug:logDetail()Z
daikon.inv.Invariants:Invariants()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(FF)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptSlice2:arity()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
441 2 593 4 543 2 398 2 208 2 671 2 234 2 134 2 440 2 
431 6 22 2 315 6 317 2 5 2 308 2 583 2 391 2 458 2 203 6 481 2 
167 2 646 2 398 2 289 2 234 2 263 6 505 6 85 2 325 6 597 2 78 4 240 6 444 4 
130 8 537 2 436 10 340 8 234 6 161 16 717 2 54 16 58 6 282 4 283 6 99 26 61 10 658 2 119 4 398 6 525 2 604 4 680 2 529 4 196 29 607 16 504 2 558 8 108 10 152 8 478 12 705 10 456 2 430 10 
76 2 
585 2 
273 2 132 2 233 2 234 4 571 2 413 2 52 2 238 4 654 2 656 4 522 2 100 2 12 2 474 2 428 2 532 2 707 2 295 2 335 4 484 2 485 2 21 2 73 2 537 2 488 2 387 2 543 2 549 2 29 2 216 2 625 4 310 2 32 2 168 2 398 4 632 2 634 2 724 2 451 2 264 2 266 2 265 2 267 2 270 2 
461 6 2 2 486 6 436 6 302 2 234 4 161 32 255 2 694 4 138 6 346 4 695 4 54 32 417 4 58 4 115 6 241 4 493 6 283 4 61 16 99 48 81 4 377 4 398 4 525 2 529 2 195 2 607 32 196 54 558 18 729 2 108 16 152 6 478 22 610 6 705 16 640 2 271 8 430 16 
687 2 17 2 485 2 
204 2 563 2 169 2 432 2 618 2 434 10 557 2 379 2 503 2 50 22 428 2 19 2 509 2 392 2 
131 2 299 2 367 2 436 4 161 2 54 2 283 2 551 2 61 2 99 4 288 2 529 2 196 6 607 2 558 2 108 2 332 2 478 2 477 2 705 2 732 2 430 2 404 2 
99 12 61 4 81 4 607 8 196 16 354 2 161 8 108 4 346 4 478 4 54 8 610 6 705 4 282 2 719 2 493 6 430 4 
296 14 687 6 337 2 485 8 91 62 338 2 187 10 536 10 594 2 651 4 210 4 596 4 370 2 414 2 468 4 415 4 654 4 492 4 655 2 29 2 242 2 469 4 471 4 625 4 494 4 118 2 245 2 330 4 248 2 501 2 174 4 452 2 268 2 683 2 455 2 17 2 292 2 612 2 708 2 128 2 
228 2 49 2 418 2 260 2 585 2 606 2 353 2 38 2 42 2 126 2 
88 1 184 12 274 1 92 2 3 2 188 2 366 1 650 2 4 2 466 8 652 2 570 1 369 2 467 2 189 3 372 2 375 2 9 3 101 4 193 2 662 1 106 5 198 4 197 1 200 2 576 1 380 2 202 2 382 2 669 2 205 2 487 2 297 3 670 2 301 2 208 2 489 2 388 32 306 2 307 3 214 2 675 2 389 1 27 3 390 3 28 2 215 6 31 32 394 3 495 2 496 1 398 34 588 2 499 2 500 2 36 2 684 24 506 4 507 2 123 4 225 2 226 1 45 16 403 3 405 2 318 3 406 2 592 4 319 2 407 2 229 2 320 2 515 2 689 2 232 2 234 32 135 2 322 2 517 2 235 2 137 2 323 2 139 16 237 6 140 2 698 1 519 2 520 1 243 2 421 1 601 2 602 2 145 24 247 2 702 2 331 2 426 2 149 2 249 16 427 2 531 2 65 2 154 2 252 2 613 2 333 2 155 2 533 1 156 6 711 4 69 2 336 2 433 2 713 2 435 2 538 6 438 2 253 2 622 2 254 2 343 4 77 2 716 8 542 2 544 2 163 1 550 2 164 2 446 2 448 3 261 2 171 2 723 2 450 3 726 2 728 2 727 2 176 2 177 4 731 8 357 16 269 1 359 2 360 3 362 2 734 2 460 2 
614 2 398 2 
679 2 514 2 398 4 
709 2 
111 6 615 6 285 2 553 2 535 2 262 2 112 2 351 2 636 2 465 2 231 2 75 2 37 2 256 6 66 2 281 2 124 2 87 2 30 2 480 2 284 2 626 2 
217 2 20 1 23 2 44 2 
217 2 660 2 
217 2 349 2 562 2 485 2 604 2 526 2 627 2 
217 2 349 2 151 2 
217 2 349 2 567 2 
693 2 518 2 23 2 
217 2 349 2 
693 2 178 2 
217 2 313 2 
693 2 442 2 23 2 
508 2 300 2 23 2 
586 2 23 2 14 2 
280 2 146 2 23 2 
476 2 23 2 540 2 
693 2 275 2 
217 2 72 2 
472 2 508 2 
90 2 14 2 
552 2 280 2 
681 2 
693 2 462 2 
476 2 186 2 
280 2 383 2 
125 2 14 2 
508 2 117 2 
693 2 442 2 23 2 624 2 
693 2 239 2 442 2 23 2 624 2 
693 2 422 2 23 2 
693 2 712 2 23 2 
143 2 582 2 730 2 109 2 
219 2 485 2 373 2 526 2 
219 2 485 2 666 2 373 2 526 2 627 2 
217 2 349 2 485 2 604 2 526 2 420 2 
41 2 233 2 
485 2 604 2 526 2 277 2 
280 2 572 2 
476 2 584 2 
508 2 459 2 
201 2 14 2 
476 2 409 2 14 2 
476 2 704 2 14 2 
476 2 182 2 14 2 
476 2 399 2 14 2 
483 2 89 2 485 2 620 6 236 2 600 6 526 2 510 2 
693 2 611 2 
628 2 603 2 648 2 556 2 661 2 565 2 411 2 316 2 663 2 714 2 50 6 162 2 665 2 180 4 686 2 86 2 326 4 578 2 
23 2 59 2 
675 2 
184 8 3 2 649 2 372 2 470 2 101 2 473 2 575 2 198 2 576 2 380 2 202 2 205 2 208 2 301 4 385 2 388 6 306 2 214 2 215 6 31 4 393 2 496 2 396 2 497 2 398 26 500 2 36 2 223 4 506 4 123 4 592 2 129 2 319 2 407 2 229 2 595 2 234 26 139 6 237 4 140 2 519 2 243 2 700 2 247 2 528 2 149 2 427 2 531 2 65 2 333 2 613 2 156 2 711 4 69 2 336 2 433 2 713 2 538 2 438 2 621 2 341 2 622 2 77 2 542 2 544 2 550 2 171 6 725 2 177 4 731 2 179 2 361 4 460 2 
184 8 3 2 649 2 372 2 470 2 101 2 575 2 198 2 576 2 380 2 202 2 205 2 208 2 301 4 388 6 306 2 214 2 215 6 31 4 393 2 496 2 396 2 497 2 398 26 500 2 36 2 223 4 506 4 123 4 592 2 319 2 407 2 229 2 595 2 234 26 139 6 237 5 140 2 519 2 243 2 700 2 247 2 528 2 149 2 427 2 531 2 65 2 250 2 333 2 613 2 156 2 711 4 69 2 336 2 433 2 435 2 713 2 538 2 438 2 621 2 341 2 622 2 715 2 77 2 542 2 544 2 550 2 447 2 171 6 723 1 725 2 177 4 731 2 179 2 361 4 362 2 460 2 
47 2 
454 2 605 2 
71 2 616 2 191 2 688 2 82 2 524 2 104 2 410 2 315 2 290 2 368 2 317 2 51 4 546 2 391 2 68 2 547 4 203 2 
183 2 560 2 561 2 688 2 3 2 410 2 368 2 234 6 568 2 51 4 57 2 419 2 191 2 524 2 104 2 527 2 701 2 290 2 427 2 531 2 251 4 68 2 67 4 203 4 333 2 157 2 711 2 69 2 71 2 616 2 158 2 431 6 207 6 206 2 539 4 542 2 544 2 308 2 583 2 546 4 548 2 547 4 677 2 391 4 623 4 215 4 587 2 82 2 33 2 631 2 398 12 221 2 315 6 317 4 175 4 453 2 40 2 506 2 181 2 591 2 
183 2 560 2 561 2 688 2 3 2 410 2 368 2 234 6 568 2 51 4 57 2 419 2 191 2 524 2 104 2 527 2 701 2 290 2 427 2 531 2 251 4 68 2 67 4 203 6 333 2 481 2 157 2 711 2 69 2 71 2 616 2 158 2 431 6 207 6 206 2 539 4 542 2 544 2 308 2 546 4 548 2 547 4 677 2 391 4 623 4 215 4 587 2 82 2 33 2 631 2 398 12 221 2 315 4 317 4 175 4 453 2 40 2 506 2 181 2 591 2 
183 2 560 2 561 2 688 2 3 2 410 2 368 2 234 6 568 2 5 2 51 4 57 2 419 2 191 2 524 2 104 2 527 2 701 2 290 2 427 2 531 2 251 4 68 2 67 4 203 6 333 2 157 2 711 2 69 2 71 2 616 2 158 2 431 6 207 6 206 2 539 8 542 2 544 2 308 2 546 4 548 2 547 4 677 2 391 4 623 4 215 4 587 2 82 2 33 2 631 2 398 12 221 2 315 6 317 4 175 4 453 2 40 2 506 2 181 2 591 2 
183 2 560 2 561 2 688 2 3 2 410 2 368 2 234 6 568 2 5 2 51 4 57 2 419 2 191 2 524 2 104 2 527 2 701 2 290 2 427 2 531 2 251 8 68 2 67 4 203 8 333 2 481 2 711 2 157 2 69 2 71 2 616 2 158 2 431 8 207 10 206 2 539 8 542 2 544 2 308 2 546 4 548 2 547 4 677 2 391 4 623 4 215 4 587 2 82 2 33 2 631 2 398 12 221 2 315 6 317 4 175 4 453 2 40 2 506 2 181 2 591 2 
183 2 560 2 561 2 688 2 3 2 410 2 368 2 234 6 568 2 5 2 51 4 57 2 419 2 191 2 524 2 104 2 527 2 701 2 290 2 427 2 531 2 251 8 68 2 67 4 203 6 333 2 157 2 711 2 69 2 71 2 616 2 158 2 431 6 207 10 206 2 539 8 542 2 544 2 308 2 546 4 548 2 547 4 677 2 391 4 623 4 215 4 587 2 82 2 33 2 631 2 398 12 221 2 315 6 317 4 175 4 453 2 40 2 506 2 181 2 591 2 
363 1 184 4 183 4 560 2 561 2 3 2 564 2 368 2 568 2 372 2 8 2 573 1 10 2 191 2 198 2 203 8 384 2 205 2 206 2 207 2 208 2 209 6 581 6 386 2 388 8 212 2 214 2 391 4 215 6 31 2 587 2 33 2 398 46 221 4 36 2 223 4 224 6 40 2 39 6 591 2 592 2 407 2 410 2 595 4 234 24 51 4 237 6 57 2 416 2 419 2 60 2 243 2 246 6 63 2 423 4 64 2 427 2 608 6 65 12 68 2 67 4 69 2 614 6 71 2 70 6 616 2 431 12 433 2 621 2 77 2 623 8 79 2 82 2 631 2 83 2 638 2 453 2 642 2 643 2 460 2 645 7 94 7 653 2 98 1 102 1 101 2 104 2 290 2 110 6 481 4 294 2 298 4 305 2 672 1 673 8 308 4 676 2 677 2 309 2 678 1 679 6 311 1 500 2 315 4 317 4 506 4 122 6 123 4 511 2 512 2 319 2 688 2 321 2 691 2 139 6 140 2 141 6 519 2 142 2 144 2 329 6 524 2 523 2 701 2 147 2 528 2 149 2 530 6 703 2 150 2 531 2 333 2 709 6 156 2 710 2 711 4 157 2 158 2 538 2 539 2 541 1 342 1 542 2 544 2 546 4 547 4 548 2 550 2 348 6 554 10 171 6 723 2 725 2 355 2 175 6 177 4 731 2 181 2 362 2 
183 4 184 8 561 2 560 2 564 2 3 2 368 2 568 2 5 4 653 2 372 2 8 2 10 2 191 2 101 4 104 2 290 2 198 4 110 6 203 8 294 2 384 2 205 2 207 2 206 2 298 4 301 2 208 2 209 6 386 2 581 6 388 8 305 2 674 2 673 8 212 2 308 4 214 2 676 2 391 4 677 2 215 6 31 2 309 2 587 2 395 2 679 6 33 2 398 48 221 4 315 8 500 2 317 4 223 4 36 2 224 6 39 6 122 6 40 2 506 4 123 4 511 2 591 2 512 2 592 4 319 2 407 2 688 2 321 2 410 2 691 2 595 4 234 26 51 4 139 6 237 6 140 2 141 6 416 2 57 2 142 2 519 2 419 2 60 2 243 2 144 2 329 6 246 6 523 2 63 2 524 2 423 4 147 2 701 2 64 2 528 2 149 2 703 2 530 6 427 2 150 2 608 6 65 12 531 2 67 4 68 2 333 2 709 6 710 2 156 2 157 2 711 4 614 6 69 2 70 6 71 2 158 2 616 2 431 12 433 2 538 2 539 6 621 2 77 2 542 2 544 2 546 4 548 2 547 4 550 2 623 8 79 2 348 6 82 2 554 10 631 2 171 6 723 2 83 2 725 2 355 2 638 2 175 6 453 2 177 4 731 2 642 2 181 2 643 2 362 2 460 2 
183 4 184 8 561 2 560 2 564 2 3 2 368 2 568 2 5 4 653 2 372 2 8 2 10 2 191 2 101 4 104 2 290 2 198 4 110 6 203 8 294 2 384 2 205 2 206 2 207 6 298 4 301 2 208 2 209 6 386 2 581 6 388 8 305 2 674 2 673 8 212 2 308 4 214 2 676 2 391 4 677 2 215 6 31 2 309 2 587 2 395 2 679 6 33 2 398 48 221 4 315 8 500 2 317 4 223 4 36 2 224 6 39 6 122 6 40 2 506 4 123 4 511 2 591 2 512 2 592 4 319 2 407 2 688 2 321 2 410 2 691 2 595 4 234 26 51 4 139 6 237 6 140 2 141 6 416 2 57 2 142 2 519 2 419 2 60 2 243 2 144 2 329 6 246 6 523 2 63 2 524 2 423 4 147 2 701 2 64 2 528 2 149 2 703 2 530 6 427 2 150 2 608 6 65 12 531 2 251 4 67 4 68 2 333 2 709 6 710 2 156 2 157 2 711 4 614 6 69 2 70 6 71 2 158 2 616 2 431 12 433 2 538 2 539 6 621 2 77 2 542 2 544 2 546 4 548 2 547 4 623 8 550 2 79 2 348 6 82 2 554 10 631 2 171 6 723 2 83 2 725 2 355 2 638 2 175 6 453 2 177 4 731 2 642 2 181 2 643 2 362 2 460 2 
184 10 183 4 560 2 561 2 3 2 564 2 368 2 568 2 5 4 569 2 7 6 372 2 8 2 10 2 191 2 574 2 13 2 198 4 203 10 384 2 205 2 207 6 206 2 208 2 209 6 581 6 386 2 388 12 212 2 214 2 583 2 391 4 215 6 31 4 587 2 395 2 220 2 33 2 398 52 221 4 36 2 223 6 224 6 40 2 39 6 591 2 592 4 407 2 408 6 410 2 595 4 234 24 51 4 237 6 57 2 416 2 419 2 60 2 243 2 246 6 63 2 423 4 64 2 427 2 608 12 65 10 251 4 68 2 67 4 69 2 614 12 71 2 70 6 616 2 431 16 433 2 621 2 77 2 623 8 79 2 449 6 82 2 631 2 83 2 638 2 453 2 457 6 642 2 643 2 460 2 653 2 101 4 104 2 105 2 290 2 291 6 475 6 110 12 481 2 479 2 294 2 668 2 298 4 301 2 305 2 674 2 673 8 308 4 676 2 677 2 309 2 679 12 120 6 500 2 315 10 317 4 506 4 122 6 123 4 511 2 512 2 319 2 688 2 321 2 691 2 692 6 139 8 140 2 141 6 519 2 144 2 329 12 524 2 523 2 701 2 147 2 528 4 149 2 530 6 703 2 150 2 531 2 333 2 709 12 156 4 710 2 711 4 157 2 158 2 538 4 539 6 542 2 544 2 546 4 547 4 548 2 550 2 348 6 170 2 554 8 171 8 723 2 725 2 173 6 355 2 175 6 177 4 731 4 181 2 362 2 
157 2 561 2 71 2 560 2 158 2 616 2 431 4 688 2 206 2 207 4 410 2 539 6 368 2 568 2 5 2 51 2 308 2 57 2 677 2 547 2 391 4 623 2 33 2 398 4 104 2 315 6 317 4 175 2 40 2 251 4 67 2 68 2 181 2 203 6 591 2 
561 2 560 2 3 2 650 2 368 2 568 2 5 2 372 2 104 2 107 2 203 6 205 2 206 2 207 2 670 2 208 2 388 8 25 2 308 2 214 2 675 2 391 4 677 2 215 6 31 3 33 2 398 28 315 6 500 2 317 4 36 2 223 4 40 2 506 4 123 4 591 2 319 2 513 2 407 2 688 2 410 2 595 2 234 24 322 2 51 2 139 6 237 6 140 2 598 2 57 2 519 2 142 2 243 2 701 2 149 2 427 2 531 2 65 4 67 2 68 2 333 2 156 3 157 2 711 4 69 2 71 2 158 2 616 2 431 4 433 2 538 3 539 6 621 2 542 2 544 2 547 2 623 2 550 2 165 2 80 3 554 2 171 6 723 2 725 2 175 2 177 4 181 2 362 2 460 2 
183 2 560 2 561 2 688 2 3 2 410 2 368 2 234 6 568 2 5 2 51 4 57 2 419 2 191 2 524 2 104 2 527 2 701 2 290 2 427 2 531 2 251 8 68 2 67 4 203 6 333 2 157 2 711 2 69 2 71 2 616 2 158 2 431 6 207 10 206 2 539 8 542 2 544 2 308 2 546 4 548 2 547 4 677 2 391 4 623 4 215 4 587 2 82 2 33 2 631 2 398 12 221 2 315 6 317 4 175 4 453 2 40 2 506 2 181 2 591 2 
183 2 560 2 561 2 688 2 3 2 410 2 368 2 234 6 568 2 5 2 51 4 419 2 191 2 524 2 104 2 701 2 290 2 427 2 531 2 251 8 68 2 67 4 333 2 203 6 711 2 334 2 157 2 69 2 71 2 616 2 158 2 431 8 207 10 206 2 539 8 542 2 544 2 308 2 583 2 546 4 548 2 677 2 547 4 391 4 623 4 215 4 587 2 82 2 33 2 631 2 398 12 221 2 315 8 317 4 637 4 175 4 453 2 506 2 40 2 43 2 181 2 591 2 
40 2 206 2 502 2 
40 2 206 2 502 2 
183 2 184 4 3 2 5 4 6 2 96 2 279 2 101 4 378 2 290 2 198 4 381 2 203 12 481 4 384 2 205 2 206 6 207 6 298 2 208 2 303 2 388 2 308 4 214 2 583 4 391 4 215 6 31 2 587 2 34 2 398 24 314 2 221 4 400 2 500 2 315 12 317 4 502 2 36 2 506 4 40 4 123 4 592 4 319 2 407 2 688 2 410 2 595 6 234 16 51 2 136 2 139 2 237 6 140 2 416 2 519 2 243 2 328 2 521 2 246 2 524 2 423 2 147 2 149 2 427 2 531 2 65 4 251 4 67 2 333 2 711 4 157 2 69 2 159 4 616 4 158 2 431 16 433 2 539 6 439 2 621 2 77 4 542 2 344 2 544 2 546 4 258 4 547 2 550 2 623 4 722 2 350 2 554 2 631 2 171 2 723 2 725 2 84 2 175 4 453 2 177 4 179 4 362 2 460 2 
246 2 34 2 554 2 82 2 398 4 605 2 48 2 423 2 234 2 150 2 65 2 381 2 213 2 153 2 333 2 722 2 79 2 
183 4 184 4 3 2 5 4 96 4 279 2 657 2 101 4 378 2 290 2 198 4 381 2 203 12 481 4 482 2 384 2 205 2 206 4 207 6 298 2 208 2 303 2 388 2 308 4 214 2 583 4 391 4 215 6 31 4 587 2 34 2 398 20 314 2 221 4 500 2 315 12 317 4 502 2 36 2 506 4 40 4 123 4 592 4 319 2 407 2 688 2 410 2 595 6 234 14 51 2 136 2 139 2 237 6 140 2 416 2 519 2 419 2 243 2 328 2 521 2 524 2 147 2 149 2 427 2 531 2 65 2 251 4 67 2 333 2 711 4 157 2 69 2 159 4 616 4 158 2 431 16 433 2 339 2 539 6 621 2 77 4 542 2 544 2 545 2 546 4 258 4 547 2 259 2 623 4 550 2 631 2 171 2 723 2 725 2 84 2 175 4 453 2 177 4 179 4 362 2 460 2 
183 4 184 4 3 2 5 4 96 2 279 2 101 4 378 2 290 2 198 4 381 2 203 12 481 4 384 2 205 2 206 6 207 6 298 2 208 2 303 2 388 2 308 4 214 2 583 4 391 4 215 6 31 2 587 2 34 2 398 24 314 2 221 4 222 2 500 2 315 12 317 4 502 2 36 2 506 4 40 4 123 4 592 4 319 2 46 2 407 2 688 2 410 2 595 6 234 16 51 2 136 2 139 2 237 6 140 2 416 2 519 2 419 2 243 2 328 2 521 2 246 2 524 2 423 2 147 2 149 2 427 2 531 2 65 4 609 2 251 4 67 2 333 2 711 4 157 2 69 2 159 4 616 4 158 2 431 16 433 2 539 6 439 2 621 2 77 4 542 2 544 2 546 4 258 4 547 2 550 2 623 4 720 2 721 2 722 2 554 2 631 2 171 2 723 2 725 2 84 2 175 4 453 2 177 4 179 4 362 2 460 2 
69 2 365 2 463 2 113 2 234 2 257 2 237 2 718 2 491 2 445 2 599 2 243 2 327 2 244 1 62 2 398 6 633 2 555 2 635 2 500 2 424 2 36 2 425 2 15 2 177 2 401 2 123 2 733 1 644 2 460 2 
364 2 1 2 538 3 437 2 234 2 388 2 324 2 139 2 53 2 372 2 97 2 697 4 443 2 31 3 630 2 171 2 398 2 589 1 528 6 148 2 223 2 16 3 706 2 156 3 227 2 
364 2 1 2 538 2 437 2 234 2 388 2 324 2 139 2 53 2 372 2 97 2 697 4 443 2 31 2 630 2 171 2 398 2 528 6 148 2 223 2 16 2 706 2 156 2 227 2 
364 2 1 2 538 2 437 2 234 2 388 2 324 2 139 2 53 2 372 2 97 2 697 4 443 2 31 2 630 2 171 2 398 2 528 6 148 2 223 2 16 2 706 2 156 2 227 2 
364 2 272 2 0 2 464 2 133 2 234 4 95 2 371 4 54 2 372 2 55 2 696 4 58 2 699 4 99 4 61 2 286 2 659 6 607 2 196 6 664 2 108 2 152 4 705 2 667 4 430 2 579 2 538 3 388 2 161 2 490 3 31 3 116 3 166 4 398 10 352 3 682 2 357 2 641 2 45 2 
364 2 272 2 0 2 464 2 133 2 234 4 95 2 371 4 54 2 372 2 55 2 696 4 58 2 699 4 99 4 61 2 286 2 659 6 525 2 607 2 196 4 664 2 108 2 152 4 478 2 705 2 667 4 430 2 579 2 538 2 388 2 161 2 490 2 31 2 116 2 166 4 398 10 352 2 682 2 558 2 357 2 641 2 45 2 
364 2 272 2 0 2 464 2 133 2 234 4 95 2 371 4 54 2 372 2 55 2 696 4 58 2 699 4 99 4 61 2 286 2 659 6 525 2 607 2 196 4 664 2 108 2 152 4 478 2 705 2 667 4 430 2 579 2 538 2 388 2 161 2 490 2 31 2 116 2 166 4 398 10 352 2 682 2 558 2 357 2 641 2 45 2 
364 2 272 2 0 2 464 2 133 2 234 4 95 2 371 4 54 2 372 2 55 2 696 4 58 2 699 4 99 4 61 2 286 2 659 6 525 2 607 2 196 4 664 2 108 2 152 4 478 2 705 2 667 4 430 2 579 2 538 2 388 2 161 2 490 2 31 2 116 2 166 4 398 10 352 2 682 2 558 2 357 2 641 2 45 2 
364 2 272 2 0 2 464 2 133 2 234 4 95 2 371 4 54 2 372 2 55 2 696 4 58 2 699 4 99 4 61 2 286 2 659 6 525 4 607 2 196 4 664 2 108 2 152 4 478 4 705 2 667 4 430 2 579 2 538 2 388 2 161 2 490 2 31 2 116 2 166 4 398 10 352 2 682 2 558 4 357 2 641 2 45 2 
24 2 590 2 312 2 192 2 160 2 356 2 
590 2 278 2 190 2 345 2 700 2 103 2 566 2 
580 2 185 2 647 2 617 2 230 2 594 1 74 2 304 2 234 8 26 2 374 2 376 1 218 1 329 2 11 2 398 10 172 2 199 2 121 2 292 1 531 2 18 2 402 2 358 2 429 1 127 2 
461 4 73 2 516 2 234 6 161 6 346 2 54 6 417 2 58 2 493 4 99 12 61 6 100 2 35 2 398 6 287 2 525 2 194 2 196 16 607 6 558 2 685 2 108 6 293 2 152 4 478 3 577 2 705 6 271 2 430 6 
534 2 629 2 397 2 398 1 93 4 498 2 276 2 619 2 690 2 234 1 211 2 412 1 371 2 347 2 696 2 56 7 699 2 114 2 
534 2 629 2 397 2 93 4 498 4 276 4 619 2 690 2 211 2 371 2 347 4 696 2 56 6 114 2 699 2 
534 2 629 6 397 2 398 1 93 4 498 8 276 8 619 2 690 2 234 1 211 2 412 1 371 2 347 8 696 2 56 10 114 8 699 2 
534 2 397 2 93 2 498 2 276 2 619 2 690 2 211 2 371 2 347 2 696 2 56 2 699 2 
639 2 
639 2 
639 2 
639 2 
559 2 
